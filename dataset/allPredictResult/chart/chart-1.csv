project_path,version,lines,statement,suspicious,faulty,predict,miss_line,predictions0,predictions1
org/jfree/chart/plot/CategoryPlot,1,1613,"        setRenderer(0, renderer, true);",0.25,0,,0,0.007548307692180895,0.9924516923078183
org/jfree/chart/plot/CategoryPlot,1,1614,    },0.25,0,,0,0.010152050986122315,0.9898479490138784
org/jfree/chart/plot/CategoryPlot,1,1665,        CategoryItemRenderer existing,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1667,        if (existing != null) {,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1672,"        this.renderers.set(index, renderer);",0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1673,        if (renderer != null) {,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1674,            renderer.setPlot(this);,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1675,            renderer.addChangeListener(this);,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1678,        configureDomainAxes();,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1679,        configureRangeAxes();,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1681,        if (notify) {,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1682,            fireChangeEvent();,0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1684,    },0.14286,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,567,"        this(null, null, null, null);",0.07692,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,568,    },0.07692,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1339,"        setDataset(0, dataset);",0.07143,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1340,    },0.07143,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1358,            dataset.addChangeListener(this);,0.04762,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1045,            Plot parent = getParent();,0.04545,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1046,            if (parent instanceof CategoryPlot) {,0.04545,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1352,        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);,0.04545,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1353,        if (existing != null) {,0.04545,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1356,"        this.datasets.set(index, dataset);",0.04545,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1357,        if (dataset != null) {,0.04545,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1362,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset,",0.04545,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1365,        datasetChanged(event);,0.04545,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1367,    },0.04545,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,201,"        this(true, true);",0.03704,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,202,    },0.03704,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1791,        LegendItemCollection result = new LegendItemCollection();,0.02703,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1792,        if (this.plot == null) {,0.02703,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1795,        int index = this.plot.getIndexOf(this);,0.02703,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1796,        CategoryDataset dataset = this.plot.getDataset(index);,0.02703,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1797,        if (dataset != null) {,0.02703,1,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1798,            return result;,0.02703,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1727,        return this.renderers.indexOf(renderer);,0.02703,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,259,"        addValue(new Double(value), rowKey, columnKey);",0.02326,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,260,    },0.02326,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,211,        super();,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,212,        this.seriesLinesVisible = new BooleanList();,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,213,        this.baseLinesVisible = lines;,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,214,        this.seriesShapesVisible = new BooleanList();,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,215,        this.baseShapesVisible = shapes;,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,216,        this.seriesShapesFilled = new BooleanList();,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,217,        this.baseShapesFilled = true;,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,218,        this.useFillPaint = false;,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,219,        this.drawOutlines = true;,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,220,        this.useOutlinePaint = false;,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,221,        this.useSeriesOffset = false;  // preserves old behaviour,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,222,        this.itemMargin = 0.0;,0.02,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,223,    },0.02,0,-1,0
org/jfree/data/general/AbstractDataset,1,191,            if (listeners[i] == DatasetChangeListener.class) {,0.01724,0,-1,0
org/jfree/data/general/AbstractDataset,1,192,                ((DatasetChangeListener) listeners[i + 1]).datasetChanged(,0.01724,0,-1,0
org/jfree/chart/LegendItemCollection,1,107,        return this.items.size();,0.01667,0,-1,0
org/jfree/chart/LegendItemCollection,1,68,    public LegendItemCollection() {,0.01563,0,-1,0
org/jfree/chart/LegendItemCollection,1,69,        this.items = new java.util.ArrayList();,0.01563,0,-1,0
org/jfree/chart/LegendItemCollection,1,70,    },0.01563,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,243,"        this.data.addObject(new SelectableValue(value), rowKey, columnKey);",0.01266,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,244,        fireDatasetChanged(new DatasetChangeInfo());,0.01266,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,246,    },0.01266,0,-1,0
org/jfree/data/category/AbstractCategoryDataset,1,64,        super();,0.01053,0,-1,0
org/jfree/data/category/AbstractCategoryDataset,1,65,    },0.01053,0,-1,0
org/jfree/data/category/AbstractCategoryDataset,1,87,        this.selectionState = state;,0.01053,0,-1,0
org/jfree/data/category/AbstractCategoryDataset,1,88,        fireDatasetChanged(new DatasetChangeInfo());,0.01053,0,-1,0
org/jfree/data/category/AbstractCategoryDataset,1,90,    },0.01053,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,80,    public DefaultCategoryDataset() {,0.01053,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,81,        this.data = new KeyedObjects2D();,0.01053,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,83,        setSelectionState(this);,0.01053,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,84,    },0.01053,0,-1,0
org/jfree/data/KeyedObjects2D,1,257,"        setObject(object, rowKey, columnKey);",0.01031,0,-1,0
org/jfree/data/KeyedObjects2D,1,258,    },0.01031,0,-1,0
org/jfree/data/SelectableValue,1,65,"        this(value, false);",0.0099,0,-1,0
org/jfree/data/SelectableValue,1,66,    },0.0099,0,-1,0
org/jfree/data/SelectableValue,1,74,"    public SelectableValue(Number value, boolean selected) {",0.0099,0,-1,0
org/jfree/data/SelectableValue,1,75,        this.value = value;,0.0099,0,-1,0
org/jfree/data/SelectableValue,1,76,        this.selected = selected;,0.0099,0,-1,0
org/jfree/data/SelectableValue,1,77,    },0.0099,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,293,        if (plot == null) {,0.0098,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,296,        this.plot = plot;,0.0098,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,297,    },0.0098,0,-1,0
org/jfree/data/KeyedObjects2D,1,270,        if (rowKey == null) {,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,273,        if (columnKey == null) {,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,277,        int rowIndex = this.rowKeys.indexOf(rowKey);,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,278,        if (rowIndex >= 0) {,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,282,            this.rowKeys.add(rowKey);,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,283,            row = new KeyedObjects();,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,284,            this.rows.add(row);,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,286,"        row.setObject(columnKey, object);",0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,287,        int columnIndex = this.columnKeys.indexOf(columnKey);,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,288,        if (columnIndex < 0) {,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,289,            this.columnKeys.add(columnKey);,0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,292,    },0.00971,0,-1,0
org/jfree/data/KeyedObjects2D,1,73,    public KeyedObjects2D() {,0.00885,0,-1,0
org/jfree/data/KeyedObjects2D,1,74,        this.rowKeys = new java.util.ArrayList();,0.00885,0,-1,0
org/jfree/data/KeyedObjects2D,1,75,        this.columnKeys = new java.util.ArrayList();,0.00885,0,-1,0
org/jfree/data/KeyedObjects2D,1,76,        this.rows = new java.util.ArrayList();,0.00885,0,-1,0
org/jfree/data/KeyedObjects2D,1,77,    },0.00885,0,-1,0
org/jfree/chart/util/SortOrder,1,74,    private SortOrder(String name) {,0.00877,0,-1,0
org/jfree/chart/util/SortOrder,1,75,        this.name = name;,0.00877,0,-1,0
org/jfree/chart/util/SortOrder,1,76,    },0.00877,0,-1,0
org/jfree/chart/util/SortOrder,1,59,    public static final SortOrder ASCENDING = new SortOrder(,0.00877,0,-1,0
org/jfree/chart/util/SortOrder,1,63,    public static final SortOrder DESCENDING = new SortOrder(,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,584,        super();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,361,    private DatasetRenderingOrder renderingOrder,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,368,    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,374,    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,509,    private boolean rangeCrosshairLockedOnData = true;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,586,        this.orientation = PlotOrientation.VERTICAL;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,589,        this.domainAxes = new ObjectList();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,590,        this.domainAxisLocations = new ObjectList();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,591,        this.rangeAxes = new ObjectList();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,592,        this.rangeAxisLocations = new ObjectList();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,594,        this.datasetToDomainAxesMap = new TreeMap();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,595,        this.datasetToRangeAxesMap = new TreeMap();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,597,        this.renderers = new ObjectList();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,599,        this.datasets = new ObjectList();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,600,"        this.datasets.set(0, dataset);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,601,        if (dataset != null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,605,"        this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,607,"        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,608,"        setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,610,"        this.renderers.set(0, renderer);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,611,        if (renderer != null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,616,"        this.domainAxes.set(0, domainAxis);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,617,"        this.mapDatasetToDomainAxis(0, 0);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,618,        if (domainAxis != null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,622,        this.drawSharedDomainAxis = false;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,624,"        this.rangeAxes.set(0, rangeAxis);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,625,"        this.mapDatasetToRangeAxis(0, 0);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,626,        if (rangeAxis != null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,631,        configureDomainAxes();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,632,        configureRangeAxes();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,634,        this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,635,        this.domainGridlinePosition = CategoryAnchor.MIDDLE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,636,        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,637,        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,639,        this.rangeZeroBaselineVisible = false;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,640,        this.rangeZeroBaselinePaint = Color.black;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,641,        this.rangeZeroBaselineStroke = new BasicStroke(0.5f);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,643,        this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,644,        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,645,        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,647,        this.rangeMinorGridlinesVisible = false;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,648,        this.rangeMinorGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,649,        this.rangeMinorGridlinePaint = Color.white;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,651,        this.foregroundDomainMarkers = new HashMap();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,652,        this.backgroundDomainMarkers = new HashMap();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,653,        this.foregroundRangeMarkers = new HashMap();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,654,        this.backgroundRangeMarkers = new HashMap();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,656,        this.anchorValue = 0.0;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,658,        this.domainCrosshairVisible = false;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,659,        this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,660,        this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,662,        this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,663,        this.rangeCrosshairValue = 0.0;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,664,        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,665,        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,667,        this.annotations = new java.util.ArrayList();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,669,        this.rangePannable = false;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,670,        this.shadowGenerator = new DefaultShadowGenerator();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,671,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,286,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,291,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,294,"    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(""Tahoma"",",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,309,    public static final Stroke DEFAULT_CROSSHAIR_STROKE,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,317,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,320,    protected static ResourceBundle localizationResources,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,913,"        setDomainAxisLocation(0, location, notify);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,914,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,946,        if (index == 0 && location == null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,950,"        this.domainAxisLocations.set(index, location);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,951,        if (notify) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,954,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1013,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1014,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1015,            if (axis != null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1019,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1040,        ValueAxis result = null;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1041,        if (index < this.rangeAxes.size()) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1042,            result = (ValueAxis) this.rangeAxes.get(index);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1044,        if (result == null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1051,        return result;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1197,"        setRangeAxisLocation(0, location, notify);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1198,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1227,        if (index == 0 && location == null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1231,"        this.rangeAxisLocations.set(index, location);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1232,        if (notify) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1235,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1291,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1292,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1293,            if (axis != null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1297,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1320,        CategoryDataset result = null;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1321,        if (this.datasets.size() > index) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1322,            result = (CategoryDataset) this.datasets.get(index);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1324,        return result;,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1410,        List axisIndices = new java.util.ArrayList(1);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1411,        axisIndices.add(new Integer(axisIndex));,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1412,"        mapDatasetToDomainAxes(index, axisIndices);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1413,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1426,        if (index < 0) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1429,        checkAxisIndices(axisIndices);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1430,        Integer key = new Integer(index);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1431,"        this.datasetToDomainAxesMap.put(key, new ArrayList(axisIndices));",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1433,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index),",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1436,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1449,        if (indices == null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1452,        int count = indices.size();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1453,        if (count == 0) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1456,        HashSet set = new HashSet();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1457,        for (int i = 0; i < count; i++) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1458,            Object item = indices.get(i);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1459,            if (!(item instanceof Integer)) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1463,            if (set.contains(item)) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1466,            set.add(item);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1468,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1507,        List axisIndices = new java.util.ArrayList(1);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1508,        axisIndices.add(new Integer(axisIndex));,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1509,"        mapDatasetToRangeAxes(index, axisIndices);",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1510,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1523,        if (index < 0) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1526,        checkAxisIndices(axisIndices);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1527,        Integer key = new Integer(index);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1528,"        this.datasetToRangeAxesMap.put(key, new ArrayList(axisIndices));",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1530,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index),",0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1534,    },0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2334,        int count = this.rangeAxes.size();,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2335,        for (int axisIndex = 0; axisIndex < count; axisIndex++) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2336,            ValueAxis yAxis = getRangeAxis(axisIndex);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2337,            if (yAxis != null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2341,        if (getParent() != null) {,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2345,            PlotChangeEvent e = new PlotChangeEvent(this);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2346,            e.setType(ChartChangeEventType.DATASET_UPDATED);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2347,            notifyListeners(e);,0.00877,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2350,    },0.00877,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,75,    private CategoryAnchor(String name) {,0.0087,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,76,        this.name = name;,0.0087,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,77,    },0.0087,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,56,    public static final CategoryAnchor START,0.0087,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,60,    public static final CategoryAnchor MIDDLE,0.0087,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,64,    public static final CategoryAnchor END,0.0087,0,-1,0
org/jfree/data/KeyedObjects,1,72,    public KeyedObjects() {,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,73,        this.data = new java.util.ArrayList();,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,74,    },0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,133,        if (key == null) {,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,136,        int i = 0;,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,137,        Iterator iterator = this.data.iterator();,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,138,        while (iterator.hasNext()) {,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,145,        return -1;,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,205,        int keyIndex = getIndex(key);,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,206,        if (keyIndex >= 0) {,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,211,"            KeyedObject ko = new KeyedObject(key, object);",0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,212,            this.data.add(ko);,0.0084,0,-1,0
org/jfree/data/KeyedObjects,1,214,    },0.0084,0,-1,0
org/jfree/data/KeyedObject,1,71,"    public KeyedObject(Comparable key, Object object) {",0.0084,0,-1,0
org/jfree/data/KeyedObject,1,72,        this.key = key;,0.0084,0,-1,0
org/jfree/data/KeyedObject,1,73,        this.object = object;,0.0084,0,-1,0
org/jfree/data/KeyedObject,1,74,    },0.0084,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,78,"        this(5, Color.black, 0.5f, 5, -Math.PI / 4);",0.0068,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,79,    },0.0068,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,91,"            int distance, double angle) {",0.00676,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,92,        if (color == null) {,0.00676,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,95,        this.shadowSize = size;,0.00676,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,96,        this.shadowColor = color;,0.00676,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,97,        this.shadowOpacity = opacity;,0.00676,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,98,        this.distance = distance;,0.00676,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,99,        this.angle = angle;,0.00676,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,100,    },0.00676,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,163,                return (index);,0.00599,0,-1,0
org/jfree/chart/util/ObjectList,1,107,        return super.indexOf(object);,0.00585,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,161,        for (int index = 0; index < this.size; index++) {,0.00585,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,162,            if (this.objects[index] == object) {,0.00585,0,-1,0
org/jfree/data/general/AbstractDataset,1,133,"        this.listenerList.add(DatasetChangeListener.class, listener);",0.00581,0,-1,0
org/jfree/data/general/AbstractDataset,1,134,    },0.00581,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2892,        if (listener == null) {,0.00568,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2895,"        this.listenerList.add(RendererChangeListener.class, listener);",0.00568,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2896,    },0.00568,0,-1,0
org/jfree/chart/plot/Plot,1,986,        notifyListeners(new PlotChangeEvent(this));,0.00562,0,-1,0
org/jfree/chart/plot/Plot,1,987,    },0.00562,0,-1,0
org/jfree/data/general/AbstractDataset,1,176,"        notifyListeners(new DatasetChangeEvent(this, this, info));",0.00556,0,-1,0
org/jfree/data/general/AbstractDataset,1,177,    },0.00556,0,-1,0
org/jfree/data/general/AbstractDataset,1,189,        Object[] listeners = this.listenerList.getListenerList();,0.00556,0,-1,0
org/jfree/data/general/AbstractDataset,1,190,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.00556,0,-1,0
org/jfree/data/general/AbstractDataset,1,196,    },0.00556,0,-1,0
org/jfree/data/general/AbstractDataset,1,95,    protected AbstractDataset() {,0.00513,0,-1,0
org/jfree/data/general/AbstractDataset,1,96,        this.group = new DatasetGroup();,0.00513,0,-1,0
org/jfree/data/general/AbstractDataset,1,97,        this.listenerList = new EventListenerList();,0.00513,0,-1,0
org/jfree/data/general/AbstractDataset,1,98,    },0.00513,0,-1,0
org/jfree/data/general/DatasetGroup,1,63,        super();,0.00513,0,-1,0
org/jfree/data/general/DatasetGroup,1,64,"        this.id = ""NOID"";",0.00513,0,-1,0
org/jfree/data/general/DatasetGroup,1,65,    },0.00513,0,-1,0
org/jfree/chart/axis/AxisLocation,1,84,    private AxisLocation(String name) {,0.00513,0,-1,0
org/jfree/chart/axis/AxisLocation,1,85,        this.name = name;,0.00513,0,-1,0
org/jfree/chart/axis/AxisLocation,1,86,    },0.00513,0,-1,0
org/jfree/chart/axis/AxisLocation,1,61,    public static final AxisLocation TOP_OR_LEFT = new AxisLocation(,0.00513,0,-1,0
org/jfree/chart/axis/AxisLocation,1,65,    public static final AxisLocation TOP_OR_RIGHT = new AxisLocation(,0.00513,0,-1,0
org/jfree/chart/axis/AxisLocation,1,69,    public static final AxisLocation BOTTOM_OR_LEFT = new AxisLocation(,0.00513,0,-1,0
org/jfree/chart/axis/AxisLocation,1,73,    public static final AxisLocation BOTTOM_OR_RIGHT = new AxisLocation(,0.00513,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,80,    private DatasetRenderingOrder(String name) {,0.00513,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,81,        this.name = name;,0.00513,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,82,    },0.00513,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,62,    public static final DatasetRenderingOrder FORWARD,0.00513,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,69,    public static final DatasetRenderingOrder REVERSE,0.00513,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,72,    private PlotOrientation(String name) {,0.005,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,73,        this.name = name;,0.005,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,74,    },0.005,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,57,    public static final PlotOrientation HORIZONTAL,0.005,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,61,    public static final PlotOrientation VERTICAL,0.005,0,-1,0
org/jfree/chart/util/ObjectList,1,85,        return super.get(index);,0.00495,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,131,        this.type = type;,0.00493,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,132,    },0.00493,0,-1,0
org/jfree/chart/util/ObjectList,1,95,"        super.set(index, object);",0.00493,0,-1,0
org/jfree/chart/util/ObjectList,1,96,    },0.00493,0,-1,0
org/jfree/chart/plot/Plot,1,456,        return this.parent;,0.00469,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,111,            result = this.objects[index];,0.00469,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,123,        if (index < 0) {,0.00467,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,126,        if (index >= this.objects.length) {,0.00467,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,131,        this.objects[index] = object;,0.00467,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,132,"        this.size = Math.max(this.size, index + 1);",0.00467,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,133,    },0.00467,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,109,        Object result = null;,0.00465,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,110,        if (index >= 0 && index < this.size) {,0.00465,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,113,        return result;,0.00465,0,-1,0
org/jfree/chart/event/PlotChangeEvent,1,64,        super(plot);,0.00448,0,-1,0
org/jfree/chart/event/PlotChangeEvent,1,65,        this.plot = plot;,0.00448,0,-1,0
org/jfree/chart/event/PlotChangeEvent,1,66,    },0.00448,0,-1,0
org/jfree/chart/plot/Plot,1,969,        if (!this.notify) {,0.00448,0,-1,0
org/jfree/chart/plot/Plot,1,972,        Object[] listeners = this.listenerList.getListenerList();,0.00448,0,-1,0
org/jfree/chart/plot/Plot,1,973,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.00448,0,-1,0
org/jfree/chart/plot/Plot,1,978,    },0.00448,0,-1,0
org/jfree/chart/plot/Plot,1,306,    protected Plot() {,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,277,    private int backgroundImageAlignment = Align.FIT;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,280,    private float backgroundImageAlpha = 0.5f;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,308,        this.parent = null;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,309,        this.insets = DEFAULT_INSETS;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,310,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,311,        this.backgroundAlpha = DEFAULT_BACKGROUND_ALPHA;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,312,        this.backgroundImage = null;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,313,        this.outlineVisible = true;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,314,        this.outlineStroke = DEFAULT_OUTLINE_STROKE;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,315,        this.outlinePaint = DEFAULT_OUTLINE_PAINT;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,316,        this.foregroundAlpha = DEFAULT_FOREGROUND_ALPHA;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,318,        this.noDataMessage = null;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,319,"        this.noDataMessageFont = new Font(""Tahoma"", Font.PLAIN, 12);",0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,320,        this.noDataMessagePaint = Color.black;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,322,        this.drawingSupplier = new DefaultDrawingSupplier();,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,324,        this.notify = true;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,325,        this.listenerList = new EventListenerList();,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,327,    },0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,203,    public static final Number ZERO = new Integer(0);,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,206,    public static final RectangleInsets DEFAULT_INSETS,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,210,"    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f,",0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,214,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,223,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,232,    public static final Shape DEFAULT_LEGEND_ITEM_BOX,0.00441,0,-1,0
org/jfree/chart/plot/Plot,1,236,    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE,0.00441,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,122,        if (noCodeBaseClassLoader != null) {,0.00437,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,128,            return ResourceBundle.getBundle(baseName);,0.00437,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,150,"        this(DEFAULT_PAINT_SEQUENCE, DEFAULT_FILL_PAINT_SEQUENCE,",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,156,    },0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,197,            Shape[] shapeSequence) {,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,199,        this.paintSequence = paintSequence;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,200,        this.fillPaintSequence = fillPaintSequence;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,201,        this.outlinePaintSequence = outlinePaintSequence;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,202,        this.strokeSequence = strokeSequence;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,203,        this.outlineStrokeSequence = outlineStrokeSequence;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,204,        this.shapeSequence = shapeSequence;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,205,    },0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,83,    public static final Paint[] DEFAULT_PAINT_SEQUENCE,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,87,    public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE = new Paint[] {,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,91,    public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE = new Paint[] {,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,95,    public static final Stroke[] DEFAULT_STROKE_SEQUENCE = new Stroke[] {,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,100,    public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,105,    public static final Shape[] DEFAULT_SHAPE_SEQUENCE,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,289,        Shape[] result = new Shape[10];,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,291,        double size = 6.0;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,292,        double delta = size / 2.0;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,293,        int[] xpoints = null;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,294,        int[] ypoints = null;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,297,"        result[0] = new Rectangle2D.Double(-delta, -delta, size, size);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,299,"        result[1] = new Ellipse2D.Double(-delta, -delta, size, size);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,302,"        xpoints = intArray(0.0, delta, -delta);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,303,"        ypoints = intArray(-delta, delta, delta);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,304,"        result[2] = new Polygon(xpoints, ypoints, 3);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,307,"        xpoints = intArray(0.0, delta, 0.0, -delta);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,308,"        ypoints = intArray(-delta, 0.0, delta, 0.0);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,309,"        result[3] = new Polygon(xpoints, ypoints, 4);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,312,"        result[4] = new Rectangle2D.Double(-delta, -delta / 2, size, size / 2);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,315,"        xpoints = intArray(-delta, +delta, 0.0);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,316,"        ypoints = intArray(-delta, -delta, delta);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,317,"        result[5] = new Polygon(xpoints, ypoints, 3);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,320,"        result[6] = new Ellipse2D.Double(-delta, -delta / 2, size, size / 2);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,323,"        xpoints = intArray(-delta, delta, -delta);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,324,"        ypoints = intArray(-delta, 0.0, delta);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,325,"        result[7] = new Polygon(xpoints, ypoints, 3);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,328,"        result[8] = new Rectangle2D.Double(-delta / 2, -delta, size / 2, size);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,331,"        xpoints = intArray(-delta, delta, delta);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,332,"        ypoints = intArray(0.0, -delta, +delta);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,333,"        result[9] = new Polygon(xpoints, ypoints, 3);",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,335,        return result;,0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,517,"        return new int[] {(int) a, (int) b, (int) c};",0.00435,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,532,"        return new int[] {(int) a, (int) b, (int) c, (int) d};",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,59,"    public static final Color VERY_DARK_RED = new Color(0x80, 0x00, 0x00);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,62,"    public static final Color DARK_RED = new Color(0xc0, 0x00, 0x00);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,65,"    public static final Color LIGHT_RED = new Color(0xFF, 0x40, 0x40);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,68,"    public static final Color VERY_LIGHT_RED = new Color(0xFF, 0x80, 0x80);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,71,"    public static final Color VERY_DARK_YELLOW = new Color(0x80, 0x80, 0x00);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,74,"    public static final Color DARK_YELLOW = new Color(0xC0, 0xC0, 0x00);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,77,"    public static final Color LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x40);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,80,"    public static final Color VERY_LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x80);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,83,"    public static final Color VERY_DARK_GREEN = new Color(0x00, 0x80, 0x00);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,86,"    public static final Color DARK_GREEN = new Color(0x00, 0xC0, 0x00);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,89,"    public static final Color LIGHT_GREEN = new Color(0x40, 0xFF, 0x40);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,92,"    public static final Color VERY_LIGHT_GREEN = new Color(0x80, 0xFF, 0x80);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,95,"    public static final Color VERY_DARK_CYAN = new Color(0x00, 0x80, 0x80);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,98,"    public static final Color DARK_CYAN = new Color(0x00, 0xC0, 0xC0);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,101,"    public static final Color LIGHT_CYAN = new Color(0x40, 0xFF, 0xFF);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,104,"    public static final Color VERY_LIGHT_CYAN = new Color(0x80, 0xFF, 0xFF);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,107,"    public static final Color VERY_DARK_BLUE = new Color(0x00, 0x00, 0x80);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,110,"    public static final Color DARK_BLUE = new Color(0x00, 0x00, 0xC0);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,113,"    public static final Color LIGHT_BLUE = new Color(0x40, 0x40, 0xFF);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,116,"    public static final Color VERY_LIGHT_BLUE = new Color(0x80, 0x80, 0xFF);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,119,"    public static final Color VERY_DARK_MAGENTA = new Color(0x80, 0x00, 0x80);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,122,"    public static final Color DARK_MAGENTA = new Color(0xC0, 0x00, 0xC0);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,125,"    public static final Color LIGHT_MAGENTA = new Color(0xFF, 0x40, 0xFF);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,128,"    public static final Color VERY_LIGHT_MAGENTA = new Color(0xFF, 0x80, 0xFF);",0.00435,0,-1,0
org/jfree/chart/ChartColor,1,151,        return new Paint[] {,0.00435,0,-1,0
org/jfree/data/event/DatasetChangeEvent,1,87,        super(source);,0.0042,0,-1,0
org/jfree/data/event/DatasetChangeEvent,1,88,        if (info == null) {,0.0042,0,-1,0
org/jfree/data/event/DatasetChangeEvent,1,91,        this.dataset = dataset;,0.0042,0,-1,0
org/jfree/data/event/DatasetChangeEvent,1,92,        this.info = info;,0.0042,0,-1,0
org/jfree/data/event/DatasetChangeEvent,1,93,    },0.0042,0,-1,0
org/jfree/chart/event/DatasetChangeInfo,1,49,public class DatasetChangeInfo {,0.0042,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,249,    protected AbstractCategoryItemRenderer() {,0.00408,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,250,        this.itemLabelGeneratorList = new ObjectList();,0.00408,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,251,        this.toolTipGeneratorList = new ObjectList();,0.00408,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,252,        this.urlGeneratorList = new ObjectList();,0.00408,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,253,        this.legendItemLabelGenerator,0.00408,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,255,        this.backgroundAnnotations = new ArrayList();,0.00408,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,256,        this.foregroundAnnotations = new ArrayList();,0.00408,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,257,    },0.00408,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,75,        this(DEFAULT_LABEL_FORMAT);,0.00408,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,76,    },0.00408,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,83,    public StandardCategorySeriesLabelGenerator(String format) {,0.00408,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,84,        if (format == null) {,0.00408,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,87,        this.formatPattern = format;,0.00408,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,88,    },0.00408,0,-1,0
org/jfree/chart/util/RectangleInsets,1,102,"        this(UnitType.ABSOLUTE, top, left, bottom, right);",0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,103,    },0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,116,"                           double bottom, double right) {",0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,117,        if (unitType == null) {,0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,120,        this.unitType = unitType;,0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,121,        this.top = top;,0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,122,        this.bottom = bottom;,0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,123,        this.left = left;,0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,124,        this.right = right;,0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,125,    },0.00402,0,-1,0
org/jfree/chart/util/RectangleInsets,1,65,    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(,0.00402,0,-1,0
org/jfree/chart/util/UnitType,1,69,    private UnitType(String name) {,0.00394,0,-1,0
org/jfree/chart/util/UnitType,1,70,        this.name = name;,0.00394,0,-1,0
org/jfree/chart/util/UnitType,1,71,    },0.00394,0,-1,0
org/jfree/chart/util/UnitType,1,56,"    public static final UnitType ABSOLUTE = new UnitType(""UnitType.ABSOLUTE"");",0.00394,0,-1,0
org/jfree/chart/util/UnitType,1,59,"    public static final UnitType RELATIVE = new UnitType(""UnitType.RELATIVE"");",0.00394,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,149,        return this.size;,0.00312,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,396,    public AbstractRenderer() {,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,305,    private double itemLabelAnchorOffset = 2.0;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,378,    private boolean dataBoundsIncludesVisibleSeriesOnly = true;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,398,        this.seriesVisibleList = new BooleanList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,399,        this.baseSeriesVisible = true;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,401,        this.seriesVisibleInLegendList = new BooleanList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,402,        this.baseSeriesVisibleInLegend = true;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,404,        this.paintList = new PaintList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,405,        this.basePaint = DEFAULT_PAINT;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,406,        this.autoPopulateSeriesPaint = true;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,408,        this.fillPaintList = new PaintList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,409,        this.baseFillPaint = Color.white;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,410,        this.autoPopulateSeriesFillPaint = false;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,412,        this.outlinePaintList = new PaintList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,413,        this.baseOutlinePaint = DEFAULT_OUTLINE_PAINT;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,414,        this.autoPopulateSeriesOutlinePaint = false;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,416,        this.strokeList = new StrokeList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,417,        this.baseStroke = DEFAULT_STROKE;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,418,        this.autoPopulateSeriesStroke = true;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,420,        this.outlineStrokeList = new StrokeList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,421,        this.baseOutlineStroke = DEFAULT_OUTLINE_STROKE;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,422,        this.autoPopulateSeriesOutlineStroke = false;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,424,        this.shapeList = new ShapeList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,425,        this.baseShape = DEFAULT_SHAPE;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,426,        this.autoPopulateSeriesShape = true;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,428,        this.itemLabelsVisibleList = new BooleanList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,429,        this.baseItemLabelsVisible = false;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,431,        this.itemLabelFontList = new ObjectList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,432,"        this.baseItemLabelFont = new Font(""Tahoma"", Font.PLAIN, 10);",0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,434,        this.itemLabelPaintList = new PaintList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,435,        this.baseItemLabelPaint = Color.black;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,437,        this.positiveItemLabelPositionList = new ObjectList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,438,        this.basePositiveItemLabelPosition = new ItemLabelPosition(,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,441,        this.negativeItemLabelPositionList = new ObjectList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,442,        this.baseNegativeItemLabelPosition = new ItemLabelPosition(,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,445,        this.createEntitiesList = new BooleanList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,446,        this.baseCreateEntities = true;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,448,        this.defaultEntityRadius = 3;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,450,        this.legendShapeList = new ShapeList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,451,        this.baseLegendShape = null;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,453,        this.treatLegendShapeAsLine = false;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,455,        this.legendTextFont = new ObjectList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,456,        this.baseLegendTextFont = null;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,458,        this.legendTextPaint = new PaintList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,459,        this.baseLegendTextPaint = null;,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,461,        this.listenerList = new EventListenerList();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,463,        this.selectedItemAttributes = new RenderAttributes();,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,464,        this.selectedItemAttributes.setDefaultFillPaint(Color.WHITE);,0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,465,    },0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,167,    private ItemLabelAnchor(String name) {,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,168,        this.name = name;,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,169,    },0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,60,    public static final ItemLabelAnchor CENTER,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,64,    public static final ItemLabelAnchor INSIDE1,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,68,    public static final ItemLabelAnchor INSIDE2,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,72,    public static final ItemLabelAnchor INSIDE3,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,76,    public static final ItemLabelAnchor INSIDE4,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,80,    public static final ItemLabelAnchor INSIDE5,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,84,    public static final ItemLabelAnchor INSIDE6,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,88,    public static final ItemLabelAnchor INSIDE7,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,92,    public static final ItemLabelAnchor INSIDE8,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,96,    public static final ItemLabelAnchor INSIDE9,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,100,    public static final ItemLabelAnchor INSIDE10,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,104,    public static final ItemLabelAnchor INSIDE11,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,108,    public static final ItemLabelAnchor INSIDE12,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,112,    public static final ItemLabelAnchor OUTSIDE1,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,116,    public static final ItemLabelAnchor OUTSIDE2,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,120,    public static final ItemLabelAnchor OUTSIDE3,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,124,    public static final ItemLabelAnchor OUTSIDE4,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,128,    public static final ItemLabelAnchor OUTSIDE5,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,132,    public static final ItemLabelAnchor OUTSIDE6,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,136,    public static final ItemLabelAnchor OUTSIDE7,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,140,    public static final ItemLabelAnchor OUTSIDE8,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,144,    public static final ItemLabelAnchor OUTSIDE9,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,148,    public static final ItemLabelAnchor OUTSIDE10,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,152,    public static final ItemLabelAnchor OUTSIDE11,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,156,    public static final ItemLabelAnchor OUTSIDE12,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,90,"        this(itemLabelAnchor, textAnchor, TextAnchor.CENTER, 0.0);",0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,91,    },0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,109,                             double angle) {,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,111,        if (itemLabelAnchor == null) {,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,115,        if (textAnchor == null) {,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,118,        if (rotationAnchor == null) {,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,123,        this.itemLabelAnchor = itemLabelAnchor;,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,124,        this.textAnchor = textAnchor;,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,125,        this.rotationAnchor = rotationAnchor;,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,126,        this.angle = angle;,0.00287,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,128,    },0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,120,        this(true);,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,121,    },0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,123,    public RenderAttributes(boolean allowNull) {,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,124,        this.paintList = new PaintList();,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,125,        this.defaultPaint = allowNull ? null : Color.BLACK;,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,126,        this.strokeList = new StrokeList();,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,127,        this.defaultStroke = allowNull ? null : new BasicStroke(1.0f);,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,128,        this.fillPaintList = new PaintList();,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,129,        this.defaultFillPaint = allowNull ? null : Color.BLACK;,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,130,        this.outlinePaintList = new PaintList();,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,131,        this.defaultOutlinePaint = allowNull ? null : Color.BLACK;,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,132,        this.shapeList = new ShapeList();,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,133,    },0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,265,        if (paint == null && !this.allowNull) {,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,268,        this.defaultFillPaint = paint;,0.00287,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,269,    },0.00287,0,-1,0
org/jfree/chart/util/BooleanList,1,60,    public BooleanList() {,0.00287,0,-1,0
org/jfree/chart/util/BooleanList,1,61,    },0.00287,0,-1,0
org/jfree/chart/util/PaintList,1,59,        super();,0.00287,0,-1,0
org/jfree/chart/util/PaintList,1,60,    },0.00287,0,-1,0
org/jfree/chart/util/StrokeList,1,58,        super();,0.00287,0,-1,0
org/jfree/chart/util/StrokeList,1,59,    },0.00287,0,-1,0
org/jfree/chart/util/ShapeList,1,59,        super();,0.00287,0,-1,0
org/jfree/chart/util/ShapeList,1,60,    },0.00287,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,150,    public static final Double ZERO = new Double(0.0);,0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,153,    public static final Paint DEFAULT_PAINT = Color.blue;,0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,156,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,159,    public static final Stroke DEFAULT_STROKE = new BasicStroke(1.0f);,0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,162,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(1.0f);,0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,165,    public static final Shape DEFAULT_SHAPE,0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,169,"    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(""Tahoma"",",0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,173,    public static final Paint DEFAULT_VALUE_LABEL_PAINT = Color.black;,0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2760,    private static final double ADJ = Math.cos(Math.PI / 6.0);,0.00272,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2763,    private static final double OPP = Math.sin(Math.PI / 6.0);,0.00272,0,-1,0
org/jfree/chart/text/TextAnchor,1,124,    private TextAnchor(String name) {,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,125,        this.name = name;,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,126,    },0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,58,    public static final TextAnchor TOP_LEFT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,62,    public static final TextAnchor TOP_CENTER = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,66,    public static final TextAnchor TOP_RIGHT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,70,    public static final TextAnchor HALF_ASCENT_LEFT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,74,    public static final TextAnchor HALF_ASCENT_CENTER = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,78,    public static final TextAnchor HALF_ASCENT_RIGHT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,82,    public static final TextAnchor CENTER_LEFT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,86,"    public static final TextAnchor CENTER = new TextAnchor(""TextAnchor.CENTER"");",0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,89,    public static final TextAnchor CENTER_RIGHT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,93,    public static final TextAnchor BASELINE_LEFT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,97,    public static final TextAnchor BASELINE_CENTER = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,101,    public static final TextAnchor BASELINE_RIGHT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,105,    public static final TextAnchor BOTTOM_LEFT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,109,    public static final TextAnchor BOTTOM_CENTER = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/text/TextAnchor,1,113,    public static final TextAnchor BOTTOM_RIGHT = new TextAnchor(,0.00271,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,69,"        this(source, null, ChartChangeEventType.GENERAL);",0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,70,    },0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,93,        super(source);,0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,94,        this.chart = chart;,0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,95,        this.type = type;,0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,96,    },0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,74,    private ChartChangeEventType(String name) {,0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,75,        this.name = name;,0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,76,    },0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,55,    public static final ChartChangeEventType GENERAL,0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,59,    public static final ChartChangeEventType NEW_DATASET,0.00261,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,63,    public static final ChartChangeEventType DATASET_UPDATED,0.00261,0,-1,0
org/jfree/chart/util/ObjectList,1,58,    public ObjectList() {,0.00248,0,-1,0
org/jfree/chart/util/ObjectList,1,59,    },0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,77,        this(DEFAULT_INITIAL_CAPACITY);,0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,78,    },0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,86,"        this (initialCapacity, initialCapacity);",0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,87,    },0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,95,"    protected AbstractObjectList(int initialCapacity, int increment) {",0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,68,    private int size = 0;,0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,71,    private int increment = DEFAULT_INITIAL_CAPACITY;,0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,96,        this.objects = new Object[initialCapacity];,0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,97,        this.increment = increment;,0.00248,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,98,    },0.00248,0,-1,0
org/jfree/data/event/DatasetChangeEvent,1,89,"            throw new IllegalArgumentException(""Null 'info' argument."");",0.0,0,-1,0
org/jfree/data/event/DatasetChangeEvent,1,103,        return this.dataset;,0.0,0,-1,0
org/jfree/data/event/DatasetChangeEvent,1,114,        return this.info;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,82,        return this.data.size();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,95,        Object result = null;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,96,        KeyedObject kobj = (KeyedObject) this.data.get(item);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,97,        if (kobj != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,98,            result = kobj.getObject();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,100,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,115,        Comparable result = null;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,116,        KeyedObject item = (KeyedObject) this.data.get(index);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,117,        if (item != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,118,            result = item.getKey();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,120,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,134,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,139,            KeyedObject ko = (KeyedObject) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,140,            if (ko.getKey().equals(key)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,141,                return i;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,143,            i++;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,144,        },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,154,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,155,        Iterator iterator = this.data.iterator();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,156,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,157,            KeyedObject ko = (KeyedObject) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,158,            result.add(ko.getKey());,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,159,        },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,160,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,173,        int index = getIndex(key);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,174,        if (index < 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,175,"            throw new UnknownKeyException(""The key ("" + key",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,178,        return getObject(index);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,191,"        setObject(key, object);",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,192,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,207,            KeyedObject ko = (KeyedObject) this.data.get(keyIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,208,            ko.setObject(object);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,209,        },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,229,        if (position < 0 || position > this.data.size()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,230,"            throw new IllegalArgumentException(""'position' out of bounds."");",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,232,        if (key == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,233,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,235,        int pos = getIndex(key);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,236,        if (pos >= 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,237,            this.data.remove(pos);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,239,"        KeyedObject item = new KeyedObject(key, value);",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,240,        if (position <= this.data.size()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,241,"            this.data.add(position, item);",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,244,            this.data.add(item);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,246,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,256,        this.data.remove(index);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,257,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,270,        int index = getIndex(key);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,271,        if (index < 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,272,"            throw new UnknownKeyException(""The key ("" + key.toString()",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,275,        removeValue(index);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,276,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,284,        this.data.clear();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,285,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,295,        Comparator comparator = new KeyedObjectComparator(,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,297,"        Collections.sort(this.data, comparator);",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,298,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,310,        Comparator comparator = new KeyedObjectComparator(,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,312,"        Collections.sort(this.data, comparator);",0.0,0,-1,0
org/jfree/data/KeyedObjects,1,313,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,325,        KeyedObjects clone = (KeyedObjects) super.clone();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,326,        clone.data = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,327,        Iterator iterator = this.data.iterator();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,328,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,329,            KeyedObject ko = (KeyedObject) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,330,            clone.data.add(ko.clone());,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,331,        },0.0,0,-1,0
org/jfree/data/KeyedObjects,1,332,        return clone;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,344,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,345,            return true;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,347,        if (!(obj instanceof KeyedObjects)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,348,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,350,        KeyedObjects that = (KeyedObjects) obj;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,351,        int count = getItemCount();,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,352,        if (count != that.getItemCount()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,353,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,356,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,357,            Comparable k1 = getKey(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,358,            Comparable k2 = that.getKey(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,359,            if (!k1.equals(k2)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,360,                return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,362,            Object o1 = getObject(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,363,            Object o2 = that.getObject(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,364,            if (o1 == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,365,                if (o2 != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,366,                    return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,370,                if (!o1.equals(o2)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,371,                    return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,375,        return true;,0.0,0,-1,0
org/jfree/data/KeyedObjects,1,385,        return (this.data != null ? this.data.hashCode() : 0);,0.0,0,-1,0
org/jfree/data/UnknownKeyException,1,54,        super(message);,0.0,0,-1,0
org/jfree/data/UnknownKeyException,1,55,    },0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,84,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,97,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,98,            return true;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,100,        if (!(obj instanceof SortOrder)) {,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,101,            return false;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,104,        final SortOrder that = (SortOrder) obj;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,105,        if (!this.name.equals(that.toString())) {,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,106,            return false;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,109,        return true;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,118,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,129,        if (this.equals(SortOrder.ASCENDING)) {,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,130,            return SortOrder.ASCENDING;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,132,        else if (this.equals(SortOrder.DESCENDING)) {,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,133,            return SortOrder.DESCENDING;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,1,135,        return null;,0.0,0,-1,0
org/jfree/data/SelectableValue,1,85,        return this.value;,0.0,0,-1,0
org/jfree/data/SelectableValue,1,94,        return this.selected;,0.0,0,-1,0
org/jfree/data/SelectableValue,1,103,        this.selected = selected;,0.0,0,-1,0
org/jfree/data/SelectableValue,1,104,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,108,        return this.group;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,119,        if (group == null) {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,120,"            throw new IllegalArgumentException(""Null 'group' argument."");",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,122,        this.group = group;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,123,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,145,"        this.listenerList.remove(DatasetChangeListener.class, listener);",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,146,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,161,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,162,        return list.contains(listener);,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,209,        AbstractDataset clone = (AbstractDataset) super.clone();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,210,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,211,        return clone;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,222,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,223,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,235,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,236,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,237,"        stream.registerValidation(this, 10);  // see comments about priority of",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,239,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,259,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,1,261,    },0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,72,    public DatasetGroup(String id) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,73,        if (id == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,74,"            throw new IllegalArgumentException(""Null 'id' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,76,        this.id = id;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,77,    },0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,85,        return this.id;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,96,        return super.clone();,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,107,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,108,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,110,        if (!(obj instanceof DatasetGroup)) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,111,            return false;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,113,        DatasetGroup that = (DatasetGroup) obj;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,114,        if (!this.id.equals(that.id)) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,115,            return false;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,1,117,        return true;,0.0,0,-1,0
org/jfree/data/category/AbstractCategoryDataset,1,76,        return this.selectionState;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,94,        return this.data.getRowCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,105,        return this.data.getColumnCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,120,"        SelectableValue sv = (SelectableValue) this.data.getObject(row, ",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,122,        if (sv == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,123,            return null;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,126,            return sv.getValue();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,142,        return this.data.getRowKey(row);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,156,        return this.data.getRowIndex(key);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,167,        return this.data.getRowKeys();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,180,        return this.data.getColumnKey(column);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,194,        return this.data.getColumnIndex(key);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,205,        return this.data.getColumnKeys();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,221,"        SelectableValue sv = (SelectableValue) this.data.getObject(rowKey,",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,223,        if (sv != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,224,            return sv.getValue();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,227,            return null;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,274,"        this.data.setObject(new SelectableValue(value), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,275,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,277,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,291,"        setValue(new Double(value), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,292,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,307,        double existing = 0.0;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,308,"        Number n = getValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,309,        if (n != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,310,            existing = n.doubleValue();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,312,"        setValue(existing + value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,313,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,327,"        this.data.removeObject(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,328,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,330,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,341,        this.data.removeRow(rowIndex);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,342,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,344,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,355,        this.data.removeRow(rowKey);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,356,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,358,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,369,        this.data.removeColumn(columnIndex);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,370,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,372,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,386,        this.data.removeColumn(columnKey);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,387,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,389,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,396,        this.data.clear();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,397,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,399,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,409,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,410,            return true;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,412,        if (!(obj instanceof CategoryDataset)) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,413,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,415,        CategoryDataset that = (CategoryDataset) obj;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,416,        if (!getRowKeys().equals(that.getRowKeys())) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,417,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,419,        if (!getColumnKeys().equals(that.getColumnKeys())) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,420,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,422,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,423,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,424,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,425,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,426,"                Number v1 = getValue(r, c);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,427,"                Number v2 = that.getValue(r, c);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,428,                if (v1 == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,429,                    if (v2 != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,430,                        return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,433,                else if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,434,                    return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,438,        return true;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,447,        return this.data.hashCode();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,459,        DefaultCategoryDataset clone = (DefaultCategoryDataset) super.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,460,        clone.data = (KeyedObjects2D) this.data.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,461,        return clone;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,465,"        SelectableValue sv = (SelectableValue) this.data.getObject(row, column);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,466,        return sv.isSelected();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,470,"        setSelected(row, column, selected, true);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,471,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,475,"        SelectableValue sv = (SelectableValue) this.data.getObject(row, column);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,476,        sv.setSelected(selected);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,477,        if (notify) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,478,            fireSelectionEvent();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,480,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,483,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,484,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,485,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,486,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,487,"                setSelected(r, c, false, false);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,490,        fireSelectionEvent();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,491,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,495,        fireDatasetChanged(new DatasetChangeInfo());,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,1,496,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,87,        return this.rowKeys.size();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,98,        return this.columnKeys.size();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,112,        Object result = null;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,113,        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,114,        if (rowData != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,115,            Comparable columnKey = (Comparable) this.columnKeys.get(column);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,116,            if (columnKey != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,117,                int index = rowData.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,118,                if (index >= 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,119,                    result = rowData.getObject(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,123,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,136,        return (Comparable) this.rowKeys.get(row);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,150,        if (key == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,151,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,153,        return this.rowKeys.indexOf(key);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,164,        return Collections.unmodifiableList(this.rowKeys);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,177,        return (Comparable) this.columnKeys.get(column);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,191,        if (key == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,192,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,194,        return this.columnKeys.indexOf(key);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,205,        return Collections.unmodifiableList(this.columnKeys);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,222,        if (rowKey == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,223,"            throw new IllegalArgumentException(""Null 'rowKey' argument."");",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,225,        if (columnKey == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,226,"            throw new IllegalArgumentException(""Null 'columnKey' argument."");",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,228,        int row = this.rowKeys.indexOf(rowKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,229,        if (row < 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,230,"            throw new UnknownKeyException(""Row key ("" + rowKey",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,233,        int column = this.columnKeys.indexOf(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,234,        if (column < 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,235,"            throw new UnknownKeyException(""Column key ("" + columnKey",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,238,        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,239,        int index = rowData.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,240,        if (index >= 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,241,            return rowData.getObject(index);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,244,            return null;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,271,"            throw new IllegalArgumentException(""Null 'rowKey' argument."");",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,274,"            throw new IllegalArgumentException(""Null 'columnKey' argument."");",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,279,            row = (KeyedObjects) this.rows.get(rowIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,305,        int rowIndex = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,306,        if (rowIndex < 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,307,"            throw new UnknownKeyException(""Row key ("" + rowKey",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,310,        int columnIndex = getColumnIndex(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,311,        if (columnIndex < 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,312,"            throw new UnknownKeyException(""Column key ("" + columnKey",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,315,"        setObject(null, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,318,        boolean allNull = true;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,319,        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,321,"        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,323,            if (row.getObject(item) != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,324,                allNull = false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,325,                break;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,322,             item++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,329,        if (allNull) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,330,            this.rowKeys.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,331,            this.rows.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,335,        allNull = true;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,337,"        for (int item = 0, itemCount = this.rows.size(); item < itemCount;",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,339,            row = (KeyedObjects) this.rows.get(item);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,340,            int colIndex = row.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,341,            if (colIndex >= 0 && row.getObject(colIndex) != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,342,                allNull = false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,343,                break;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,338,             item++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,347,        if (allNull) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,348,"            for (int item = 0, itemCount = this.rows.size(); item < itemCount;",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,350,                row = (KeyedObjects) this.rows.get(item);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,351,                int colIndex = row.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,352,                if (colIndex >= 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,353,                    row.removeValue(colIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,349,                 item++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,356,            this.columnKeys.remove(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,358,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,368,        this.rowKeys.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,369,        this.rows.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,370,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,382,        int index = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,383,        if (index < 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,384,"            throw new UnknownKeyException(""Row key ("" + rowKey",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,387,        removeRow(index);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,388,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,398,        Comparable columnKey = getColumnKey(columnIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,399,        removeColumn(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,400,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,412,        int index = getColumnIndex(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,413,        if (index < 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,414,"            throw new UnknownKeyException(""Column key ("" + columnKey",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,417,        Iterator iterator = this.rows.iterator();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,418,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,419,            KeyedObjects rowData = (KeyedObjects) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,420,            int i = rowData.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,421,            if (i >= 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,422,                rowData.removeValue(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,424,        },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,425,        this.columnKeys.remove(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,426,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,434,        this.rowKeys.clear();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,435,        this.columnKeys.clear();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,436,        this.rows.clear();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,437,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,447,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,448,            return true;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,450,        if (!(obj instanceof KeyedObjects2D)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,451,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,454,        KeyedObjects2D that = (KeyedObjects2D) obj;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,455,        if (!getRowKeys().equals(that.getRowKeys())) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,456,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,458,        if (!getColumnKeys().equals(that.getColumnKeys())) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,459,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,461,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,462,        if (rowCount != that.getRowCount()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,463,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,465,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,466,        if (colCount != that.getColumnCount()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,467,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,469,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,470,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,471,"                Object v1 = getObject(r, c);",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,472,"                Object v2 = that.getObject(r, c);",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,473,                if (v1 == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,474,                    if (v2 != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,475,                        return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,479,                    if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,480,                        return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,485,        return true;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,495,        result = this.rowKeys.hashCode();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,496,        result = 29 * result + this.columnKeys.hashCode();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,497,        result = 29 * result + this.rows.hashCode();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,498,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,510,        KeyedObjects2D clone = (KeyedObjects2D) super.clone();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,511,        clone.columnKeys = new java.util.ArrayList(this.columnKeys);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,512,        clone.rowKeys = new java.util.ArrayList(this.rowKeys);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,513,        clone.rows = new java.util.ArrayList(this.rows.size());,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,514,        Iterator iterator = this.rows.iterator();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,515,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,516,            KeyedObjects row = (KeyedObjects) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,517,            clone.rows.add(row.clone());,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,518,        },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,1,519,        return clone;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,82,        return this.key;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,91,        return this.object;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,100,        this.object = object;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,101,    },0.0,0,-1,0
org/jfree/data/KeyedObject,1,114,        KeyedObject clone = (KeyedObject) super.clone();,0.0,0,-1,0
org/jfree/data/KeyedObject,1,115,        if (this.object instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/data/KeyedObject,1,116,            PublicCloneable pc = (PublicCloneable) this.object;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,117,            clone.object = pc.clone();,0.0,0,-1,0
org/jfree/data/KeyedObject,1,119,        return clone;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,131,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/KeyedObject,1,132,            return true;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,135,        if (!(obj instanceof KeyedObject)) {,0.0,0,-1,0
org/jfree/data/KeyedObject,1,136,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,138,        KeyedObject that = (KeyedObject) obj;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,139,"        if (!ObjectUtilities.equal(this.key, that.key)) {",0.0,0,-1,0
org/jfree/data/KeyedObject,1,140,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,143,"        if (!ObjectUtilities.equal(this.object, that.object)) {",0.0,0,-1,0
org/jfree/data/KeyedObject,1,144,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObject,1,147,        return true;,0.0,0,-1,0
org/jfree/chart/event/PlotChangeEvent,1,74,        return this.plot;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,80,"        this(source, chart, ChartChangeEventType.GENERAL);",0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,81,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,104,        return this.chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,113,        this.chart = chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,114,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,1,122,        return this.type;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,337,        return this.datasetGroup;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,348,        this.datasetGroup = group;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,349,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,362,        return this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,375,        this.noDataMessage = message;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,376,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,377,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,388,        return this.noDataMessageFont;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,400,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,401,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,403,        this.noDataMessageFont = font;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,404,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,405,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,416,        return this.noDataMessagePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,428,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,429,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,431,        this.noDataMessagePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,432,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,433,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,468,        this.parent = parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,469,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,480,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,481,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,482,            return this;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,485,            return p.getRootPlot();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,501,        return (getParent() != null);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,512,        return this.insets;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,525,"        setInsets(insets, true);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,526,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,540,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,541,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,543,        if (!this.insets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,544,            this.insets = insets;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,545,            if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,546,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,550,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,560,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,573,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,574,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,575,                this.backgroundPaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,576,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,580,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,581,                if (this.backgroundPaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,582,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,585,            this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,586,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,589,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,599,        return this.backgroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,611,        if (this.backgroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,612,            this.backgroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,613,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,615,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,625,        DrawingSupplier result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,626,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,627,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,628,            result = p.getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,631,            result = this.drawingSupplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,633,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,649,        this.drawingSupplier = supplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,650,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,651,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,669,        this.drawingSupplier = supplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,670,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,671,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,673,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,684,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,696,        this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,697,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,698,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,709,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,722,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,723,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,724,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,726,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,738,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,753,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Plot,1,754,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,756,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,757,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,758,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,760,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,776,        return this.outlineVisible;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,790,        this.outlineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,791,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,792,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,802,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,815,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,816,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,817,                this.outlineStroke = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,818,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,822,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,823,                if (this.outlineStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,824,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,827,            this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,828,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,830,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,840,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,853,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,854,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,855,                this.outlinePaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,856,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,860,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,861,                if (this.outlinePaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,862,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,865,            this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,866,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,868,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,878,        return this.foregroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,890,        if (this.foregroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,891,            this.foregroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,892,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,894,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,904,        return null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,918,        return this.notify;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,932,        this.notify = notify;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,934,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,935,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,937,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,947,"        this.listenerList.add(PlotChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,948,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,958,"        this.listenerList.remove(PlotChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,959,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,970,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,974,            if (listeners[i] == PlotChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,975,                ((PlotChangeListener) listeners[i + 1]).plotChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1022,"        fillBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1023,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1024,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1037,"        fillBackground(g2, area, PlotOrientation.VERTICAL);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1038,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1054,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1055,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1057,        if (this.backgroundPaint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1058,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1060,        Paint p = this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1061,        if (p instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1062,            GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1063,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1064,"                p = new GradientPaint((float) area.getCenterX(),",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1069,            else if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1070,"                p = new GradientPaint((float) area.getMinX(),",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1076,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1077,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1079,        g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1080,        g2.fill(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1081,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1082,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1096,        if (this.backgroundImage == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1097,            return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1099,        Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1100,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1102,"        Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1105,"        Align.align(dest, area, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1106,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1107,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1108,"        g2.drawImage(this.backgroundImage, (int) dest.getX(),",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1111,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1112,        g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1113,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1125,        if (!this.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1126,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1128,        if ((this.outlineStroke != null) && (this.outlinePaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1129,            g2.setStroke(this.outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1130,            g2.setPaint(this.outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1131,            g2.draw(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1133,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1142,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1143,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1144,        String message = this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1145,        if (message != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1146,            g2.setFont(this.noDataMessageFont);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1147,            g2.setPaint(this.noDataMessagePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1148,            TextBlock block = TextUtilities.createTextBlock(,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1152,"            block.draw(g2, (float) area.getCenterX(),",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1155,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1156,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1174,        if (plotState != null && plotState.getOwner() != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1175,            EntityCollection e = plotState.getOwner().getEntityCollection();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1176,            if (e != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1177,"                e.add(new PlotEntity(dataArea, this, toolTip, urlText));",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1180,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1194,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1204,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1215,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1216,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1224,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1225,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1236,        PlotChangeEvent newEvent = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1237,        newEvent.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1238,        notifyListeners(newEvent);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1239,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1250,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1251,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1266,        double result = x;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1267,        if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1268,            result = result + w1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1270,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1271,            result = result + w2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1273,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1290,        double result = y;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1291,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1292,            result = result + h1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1294,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1295,            result = result + h2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1297,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1309,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1310,            return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1312,        if (!(obj instanceof Plot)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1313,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1315,        Plot that = (Plot) obj;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1316,"        if (!ObjectUtilities.equal(this.noDataMessage, that.noDataMessage)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1317,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1319,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1322,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1324,"        if (!PaintUtilities.equal(this.noDataMessagePaint,",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1326,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1328,"        if (!ObjectUtilities.equal(this.insets, that.insets)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1329,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1331,        if (this.outlineVisible != that.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1332,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1334,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1335,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1337,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1338,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1340,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1341,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1343,"        if (!ObjectUtilities.equal(this.backgroundImage,",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1345,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1347,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1348,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1350,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1351,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1353,        if (this.foregroundAlpha != that.foregroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1354,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1356,        if (this.backgroundAlpha != that.backgroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1357,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1359,        if (!this.drawingSupplier.equals(that.drawingSupplier)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1360,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1362,        if (this.notify != that.notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1363,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1365,        return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1378,        Plot clone = (Plot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1381,        if (this.datasetGroup != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1382,            clone.datasetGroup,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1385,        clone.drawingSupplier,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1387,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1388,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1400,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1401,"        SerialUtilities.writePaint(this.noDataMessagePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1402,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1403,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1405,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1406,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1418,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1419,        this.noDataMessagePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1420,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1421,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1423,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1425,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1427,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1440,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1441,"            throw new IllegalArgumentException(""Null 'location' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1443,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1444,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1447,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1449,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1450,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1451,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1453,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1454,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1457,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1458,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1459,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1461,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1462,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1465,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1466,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1467,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1469,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1470,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1473,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1474,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1475,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1477,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1478,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1482,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1483,"            throw new IllegalStateException(""resolveDomainAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1485,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1500,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1501,"            throw new IllegalArgumentException(""Null 'location' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1503,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1504,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1507,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1509,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1510,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1511,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1513,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1514,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1517,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1518,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1519,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1521,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1522,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1525,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1526,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1527,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1529,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1530,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1533,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1534,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1535,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1537,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1538,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1543,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1544,"            throw new IllegalStateException(""resolveRangeAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,1,1546,        return result;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,84,        return this.name;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,96,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,97,            return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,99,        if (!(obj instanceof ChartChangeEventType)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,100,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,102,        ChartChangeEventType that = (ChartChangeEventType) obj;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,103,        if (!this.name.equals(that.toString())) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,104,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,106,        return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,115,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,126,        if (this.equals(ChartChangeEventType.GENERAL)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,127,            return ChartChangeEventType.GENERAL;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,129,        else if (this.equals(ChartChangeEventType.NEW_DATASET)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,130,            return ChartChangeEventType.NEW_DATASET;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,132,        else if (this.equals(ChartChangeEventType.DATASET_UPDATED)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,133,            return ChartChangeEventType.DATASET_UPDATED;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,1,135,        return null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,483,        return this.selectedItemAttributes;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,498,        return isSeriesVisible(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,510,        boolean result = this.baseSeriesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,511,        Boolean b = this.seriesVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,512,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,513,            result = b.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,515,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,528,        return this.seriesVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,541,"        setSeriesVisible(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,542,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,556,"        this.seriesVisibleList.setBoolean(series, visible);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,557,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,562,"            RendererChangeEvent e = new RendererChangeEvent(this, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,563,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,565,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,575,        return this.baseSeriesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,588,"        setBaseSeriesVisible(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,589,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,601,        this.baseSeriesVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,602,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,607,"            RendererChangeEvent e = new RendererChangeEvent(this, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,608,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,610,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,623,        boolean result = this.baseSeriesVisibleInLegend;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,624,        Boolean b = this.seriesVisibleInLegendList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,625,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,626,            result = b.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,628,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,644,        return this.seriesVisibleInLegendList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,657,"        setSeriesVisibleInLegend(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,658,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,673,"        this.seriesVisibleInLegendList.setBoolean(series, visible);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,674,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,675,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,677,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,687,        return this.baseSeriesVisibleInLegend;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,700,"        setBaseSeriesVisibleInLegend(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,701,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,713,        this.baseSeriesVisibleInLegend = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,714,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,715,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,717,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,736,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,737,        if (selected) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,738,"            result = this.selectedItemAttributes.getItemPaint(series, item);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,740,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,741,            result = lookupSeriesPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,743,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,758,        Paint seriesPaint = getSeriesPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,759,        if (seriesPaint == null && this.autoPopulateSeriesPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,760,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,761,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,762,                seriesPaint = supplier.getNextPaint();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,763,"                setSeriesPaint(series, seriesPaint, false);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,766,        if (seriesPaint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,767,            seriesPaint = this.basePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,769,        return seriesPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,783,        return this.paintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,796,"        setSeriesPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,797,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,810,"        this.paintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,811,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,812,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,814,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,825,        this.paintList.clear();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,826,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,827,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,829,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,839,        return this.basePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,852,"        setBasePaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,853,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,865,        this.basePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,866,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,867,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,869,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,882,        return this.autoPopulateSeriesPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,896,        this.autoPopulateSeriesPaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,897,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,916,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,917,        if (selected) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,918,"            result = this.selectedItemAttributes.getItemFillPaint(series, item);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,920,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,921,            result = lookupSeriesFillPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,923,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,938,        Paint seriesFillPaint = getSeriesFillPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,939,        if (seriesFillPaint == null && this.autoPopulateSeriesFillPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,940,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,941,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,942,                seriesFillPaint = supplier.getNextFillPaint();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,943,"                setSeriesFillPaint(series, seriesFillPaint, false);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,946,        if (seriesFillPaint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,947,            seriesFillPaint = this.baseFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,949,        return seriesFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,963,        return this.fillPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,976,"        setSeriesFillPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,977,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,990,"        this.fillPaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,991,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,992,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,994,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1004,        return this.baseFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1017,"        setBaseFillPaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1018,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1030,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1031,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1033,        this.baseFillPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1034,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1035,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1037,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1051,        return this.autoPopulateSeriesFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1066,        this.autoPopulateSeriesFillPaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1067,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1086,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1087,        if (selected) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1088,"            result = this.selectedItemAttributes.getItemOutlinePaint(series,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1091,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1092,            result = lookupSeriesOutlinePaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1094,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1109,        Paint seriesOutlinePaint = getSeriesOutlinePaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1110,        if (seriesOutlinePaint == null && this.autoPopulateSeriesOutlinePaint) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1111,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1112,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1113,                seriesOutlinePaint = supplier.getNextOutlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1114,"                setSeriesOutlinePaint(series, seriesOutlinePaint, false);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1117,        if (seriesOutlinePaint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1118,            seriesOutlinePaint = this.baseOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1120,        return seriesOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1134,        return this.outlinePaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1147,"        setSeriesOutlinePaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1148,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1161,"        this.outlinePaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1162,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1163,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1165,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1175,        return this.baseOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1188,"        setBaseOutlinePaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1189,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1201,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1202,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1204,        this.baseOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1205,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1206,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1208,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1222,        return this.autoPopulateSeriesOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1237,        this.autoPopulateSeriesOutlinePaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1238,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1256,        return lookupSeriesStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1271,        Stroke result = getSeriesStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1272,        if (result == null && this.autoPopulateSeriesStroke) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1273,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1274,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1275,                result = supplier.getNextStroke();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1276,"                setSeriesStroke(series, result, false);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1279,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1280,            result = this.baseStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1282,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1296,        return this.strokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1309,"        setSeriesStroke(series, stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1310,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1323,"        this.strokeList.setStroke(series, stroke);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1324,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1325,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1327,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1338,        this.strokeList.clear();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1339,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1340,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1342,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1352,        return this.baseStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1365,"        setBaseStroke(stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1366,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1378,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1379,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1381,        this.baseStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1382,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1383,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1385,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1398,        return this.autoPopulateSeriesStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1412,        this.autoPopulateSeriesStroke = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1413,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1432,        return lookupSeriesOutlineStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1447,        Stroke result = getSeriesOutlineStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1448,        if (result == null && this.autoPopulateSeriesOutlineStroke) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1449,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1450,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1451,                result = supplier.getNextOutlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1452,"                setSeriesOutlineStroke(series, result, false);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1455,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1456,            result = this.baseOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1458,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1472,        return this.outlineStrokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1485,"        setSeriesOutlineStroke(series, stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1486,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1500,"        this.outlineStrokeList.setStroke(series, stroke);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1501,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1502,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1504,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1514,        return this.baseOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1526,"        setBaseOutlineStroke(stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1527,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1540,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1541,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1543,        this.baseOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1544,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1545,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1547,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1561,        return this.autoPopulateSeriesOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1576,        this.autoPopulateSeriesOutlineStroke = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1577,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1596,        Shape result = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1597,        if (selected) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1598,"            result = this.selectedItemAttributes.getItemShape(series, item);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1600,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1601,            result = lookupSeriesShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1603,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1618,        Shape result = getSeriesShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1619,        if (result == null && this.autoPopulateSeriesShape) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1620,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1621,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1622,                result = supplier.getNextShape();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1623,"                setSeriesShape(series, result, false);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1626,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1627,            result = this.baseShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1629,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1643,        return this.shapeList.getShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1656,"        setSeriesShape(series, shape, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1657,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1670,"        this.shapeList.setShape(series, shape);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1671,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1672,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1674,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1684,        return this.baseShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1697,"        setBaseShape(shape, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1698,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1710,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1711,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1713,        this.baseShape = shape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1714,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1715,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1717,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1730,        return this.autoPopulateSeriesShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1744,        this.autoPopulateSeriesShape = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1745,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1762,        return isSeriesItemLabelsVisible(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1774,        Boolean b = this.itemLabelsVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1775,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1776,            return b.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1778,        return this.baseItemLabelsVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1794,        return this.itemLabelsVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1805,"        setSeriesItemLabelsVisible(series, Boolean.valueOf(visible));",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1806,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1816,"        setSeriesItemLabelsVisible(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1817,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1830,"        this.itemLabelsVisibleList.setBoolean(series, visible);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1831,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1832,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1834,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1845,        return this.baseItemLabelsVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1857,"        setBaseItemLabelsVisible(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1858,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1870,        this.baseItemLabelsVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1871,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1872,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1874,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1890,        Font result = getSeriesItemLabelFont(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1891,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1892,            result = this.baseItemLabelFont;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1894,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1907,        return (Font) this.itemLabelFontList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1920,"        setSeriesItemLabelFont(series, font, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1921,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1935,"        this.itemLabelFontList.set(series, font);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1936,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1937,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1939,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1950,        return this.baseItemLabelFont;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1962,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1963,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1965,"        setBaseItemLabelFont(font, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1966,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1979,        this.baseItemLabelFont = font;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1980,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1981,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1983,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,1999,        Paint result = getSeriesItemLabelPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2000,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2001,            result = this.baseItemLabelPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2003,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2016,        return this.itemLabelPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2029,"        setSeriesItemLabelPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2030,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2045,"        this.itemLabelPaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2046,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2047,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2049,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2059,        return this.baseItemLabelPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2072,"        setBaseItemLabelPaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2073,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2086,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2087,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2089,        this.baseItemLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2090,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2091,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2093,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2110,        return getSeriesPositiveItemLabelPosition(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2127,        ItemLabelPosition position = (ItemLabelPosition),0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2129,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2130,            position = this.basePositiveItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2132,        return position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2147,"        setSeriesPositiveItemLabelPosition(series, position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2148,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2164,"        this.positiveItemLabelPositionList.set(series, position);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2165,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2166,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2168,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2178,        return this.basePositiveItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2190,"        setBasePositiveItemLabelPosition(position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2191,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2204,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2205,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2207,        this.basePositiveItemLabelPosition = position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2208,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2209,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2211,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2232,        return getSeriesNegativeItemLabelPosition(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2247,        ItemLabelPosition position = (ItemLabelPosition),0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2249,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2250,            position = this.baseNegativeItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2252,        return position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2267,"        setSeriesNegativeItemLabelPosition(series, position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2268,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2284,"        this.negativeItemLabelPositionList.set(series, position);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2285,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2286,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2288,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2298,        return this.baseNegativeItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2310,"        setBaseNegativeItemLabelPosition(position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2311,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2324,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2325,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2327,        this.baseNegativeItemLabelPosition = position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2328,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2329,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2331,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2341,        return this.itemLabelAnchorOffset;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2352,        this.itemLabelAnchorOffset = offset;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2353,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2354,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2369,        Boolean b = getSeriesCreateEntities(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2370,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2371,            return b.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2374,            return this.baseCreateEntities;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2389,        return this.createEntitiesList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2402,"        setSeriesCreateEntities(series, create, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2403,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2418,"        this.createEntitiesList.setBoolean(series, create);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2419,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2420,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2422,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2432,        return this.baseCreateEntities;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2446,"        setBaseCreateEntities(create, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2447,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2460,        this.baseCreateEntities = create;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2461,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2462,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2464,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2475,        return this.defaultEntityRadius;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2487,        this.defaultEntityRadius = radius;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2488,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2500,        Shape result = getLegendShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2501,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2502,            result = this.baseLegendShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2504,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2505,            result = lookupSeriesShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2507,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2523,        return this.legendShapeList.getShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2536,"        this.legendShapeList.setShape(series, shape);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2537,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2538,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2548,        return this.baseLegendShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2560,        this.baseLegendShape = shape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2561,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2562,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2573,        return this.treatLegendShapeAsLine;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2585,        if (this.treatLegendShapeAsLine != treatAsLine) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2586,            this.treatLegendShapeAsLine = treatAsLine;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2587,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2589,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2601,        Font result = getLegendTextFont(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2602,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2603,            result = this.baseLegendTextFont;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2605,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2621,        return (Font) this.legendTextFont.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2634,"        this.legendTextFont.set(series, font);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2635,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2636,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2646,        return this.baseLegendTextFont;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2658,        this.baseLegendTextFont = font;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2659,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2660,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2672,        Paint result = getLegendTextPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2673,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2674,            result = this.baseLegendTextPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2676,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2692,        return this.legendTextPaint.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2705,"        this.legendTextPaint.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2706,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2707,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2717,        return this.baseLegendTextPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2729,        this.baseLegendTextPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2730,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2731,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2742,        return this.dataBoundsIncludesVisibleSeriesOnly;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2755,        this.dataBoundsIncludesVisibleSeriesOnly = visibleOnly;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2756,"        notifyListeners(new RendererChangeEvent(this, true));",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2757,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2777,        Point2D result = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2778,        if (anchor == ItemLabelAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2779,"            result = new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2781,        else if (anchor == ItemLabelAnchor.INSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2782,"            result = new Point2D.Double(x + OPP * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2785,        else if (anchor == ItemLabelAnchor.INSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2786,"            result = new Point2D.Double(x + ADJ * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2789,        else if (anchor == ItemLabelAnchor.INSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2790,"            result = new Point2D.Double(x + this.itemLabelAnchorOffset, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2792,        else if (anchor == ItemLabelAnchor.INSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2793,"            result = new Point2D.Double(x + ADJ * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2796,        else if (anchor == ItemLabelAnchor.INSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2797,"            result = new Point2D.Double(x + OPP * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2800,        else if (anchor == ItemLabelAnchor.INSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2801,"            result = new Point2D.Double(x, y + this.itemLabelAnchorOffset);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2803,        else if (anchor == ItemLabelAnchor.INSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2804,"            result = new Point2D.Double(x - OPP * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2807,        else if (anchor == ItemLabelAnchor.INSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2808,"            result = new Point2D.Double(x - ADJ * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2811,        else if (anchor == ItemLabelAnchor.INSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2812,"            result = new Point2D.Double(x - this.itemLabelAnchorOffset, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2814,        else if (anchor == ItemLabelAnchor.INSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2815,"            result = new Point2D.Double(x - ADJ * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2818,        else if (anchor == ItemLabelAnchor.INSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2819,"            result = new Point2D.Double(x - OPP * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2822,        else if (anchor == ItemLabelAnchor.INSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2823,"            result = new Point2D.Double(x, y - this.itemLabelAnchorOffset);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2825,        else if (anchor == ItemLabelAnchor.OUTSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2826,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2830,        else if (anchor == ItemLabelAnchor.OUTSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2831,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2835,        else if (anchor == ItemLabelAnchor.OUTSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2836,"            result = new Point2D.Double(x + 2.0 * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2839,        else if (anchor == ItemLabelAnchor.OUTSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2840,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2844,        else if (anchor == ItemLabelAnchor.OUTSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2845,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2849,        else if (anchor == ItemLabelAnchor.OUTSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2850,"            result = new Point2D.Double(x,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2853,        else if (anchor == ItemLabelAnchor.OUTSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2854,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2858,        else if (anchor == ItemLabelAnchor.OUTSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2859,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2863,        else if (anchor == ItemLabelAnchor.OUTSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2864,"            result = new Point2D.Double(x - 2.0 * this.itemLabelAnchorOffset,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2867,        else if (anchor == ItemLabelAnchor.OUTSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2868,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2872,        else if (anchor == ItemLabelAnchor.OUTSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2873,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2877,        else if (anchor == ItemLabelAnchor.OUTSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2878,"            result = new Point2D.Double(x,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2881,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2893,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2907,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2908,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2910,"        this.listenerList.remove(RendererChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2911,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2923,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2924,        return list.contains(listener);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2943,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2944,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2952,        Object[] ls = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2953,        for (int i = ls.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2954,            if (ls[i] == RendererChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2955,                ((RendererChangeListener) ls[i + 1]).rendererChanged(event);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2958,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2968,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2969,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2971,        if (!(obj instanceof AbstractRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2972,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2974,        AbstractRenderer that = (AbstractRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2975,        if (this.dataBoundsIncludesVisibleSeriesOnly,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2977,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2979,        if (this.treatLegendShapeAsLine != that.treatLegendShapeAsLine) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2980,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2982,        if (this.defaultEntityRadius != that.defaultEntityRadius) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2983,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2985,        if (!this.seriesVisibleList.equals(that.seriesVisibleList)) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2986,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2988,        if (this.baseSeriesVisible != that.baseSeriesVisible) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2989,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2991,        if (!this.seriesVisibleInLegendList.equals(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2993,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2995,        if (this.baseSeriesVisibleInLegend != that.baseSeriesVisibleInLegend) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2996,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2998,"        if (!ObjectUtilities.equal(this.paintList, that.paintList)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,2999,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3001,"        if (!PaintUtilities.equal(this.basePaint, that.basePaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3002,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3004,"        if (!ObjectUtilities.equal(this.fillPaintList, that.fillPaintList)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3005,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3007,"        if (!PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3008,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3010,"        if (!ObjectUtilities.equal(this.outlinePaintList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3012,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3014,"        if (!PaintUtilities.equal(this.baseOutlinePaint,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3016,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3018,"        if (!ObjectUtilities.equal(this.strokeList, that.strokeList)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3019,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3021,"        if (!ObjectUtilities.equal(this.baseStroke, that.baseStroke)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3022,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3024,"        if (!ObjectUtilities.equal(this.outlineStrokeList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3026,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3028,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3031,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3033,"        if (!ObjectUtilities.equal(this.shapeList, that.shapeList)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3034,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3036,"        if (!ShapeUtilities.equal(this.baseShape, that.baseShape)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3037,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3039,"        if (!ObjectUtilities.equal(this.itemLabelsVisibleList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3041,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3043,        if (this.baseItemLabelsVisible != that.baseItemLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3044,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3046,"        if (!ObjectUtilities.equal(this.itemLabelFontList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3048,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3050,"        if (!ObjectUtilities.equal(this.baseItemLabelFont,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3052,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3054,"        if (!ObjectUtilities.equal(this.itemLabelPaintList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3056,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3058,"        if (!PaintUtilities.equal(this.baseItemLabelPaint,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3060,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3062,"        if (!ObjectUtilities.equal(this.positiveItemLabelPositionList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3064,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3066,"        if (!ObjectUtilities.equal(this.basePositiveItemLabelPosition,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3068,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3070,"        if (!ObjectUtilities.equal(this.negativeItemLabelPositionList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3072,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3074,"        if (!ObjectUtilities.equal(this.baseNegativeItemLabelPosition,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3076,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3078,        if (this.itemLabelAnchorOffset != that.itemLabelAnchorOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3079,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3081,"        if (!ObjectUtilities.equal(this.createEntitiesList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3083,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3085,        if (this.baseCreateEntities != that.baseCreateEntities) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3086,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3088,"        if (!ObjectUtilities.equal(this.legendShapeList,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3090,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3092,"        if (!ShapeUtilities.equal(this.baseLegendShape,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3094,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3096,"        if (!ObjectUtilities.equal(this.legendTextFont, that.legendTextFont)) {",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3097,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3099,"        if (!ObjectUtilities.equal(this.baseLegendTextFont,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3101,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3103,"        if (!ObjectUtilities.equal(this.legendTextPaint,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3105,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3107,"        if (!PaintUtilities.equal(this.baseLegendTextPaint,",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3109,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3111,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3120,        int result = 193;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3121,"        result = HashUtilities.hashCode(result, this.seriesVisibleList);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3122,"        result = HashUtilities.hashCode(result, this.baseSeriesVisible);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3123,"        result = HashUtilities.hashCode(result, this.seriesVisibleInLegendList);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3124,"        result = HashUtilities.hashCode(result, this.baseSeriesVisibleInLegend);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3125,"        result = HashUtilities.hashCode(result, this.paintList);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3126,"        result = HashUtilities.hashCode(result, this.basePaint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3127,"        result = HashUtilities.hashCode(result, this.fillPaintList);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3128,"        result = HashUtilities.hashCode(result, this.baseFillPaint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3129,"        result = HashUtilities.hashCode(result, this.outlinePaintList);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3130,"        result = HashUtilities.hashCode(result, this.baseOutlinePaint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3131,"        result = HashUtilities.hashCode(result, this.strokeList);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3132,"        result = HashUtilities.hashCode(result, this.baseStroke);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3133,"        result = HashUtilities.hashCode(result, this.outlineStrokeList);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3134,"        result = HashUtilities.hashCode(result, this.baseOutlineStroke);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3137,"        result = HashUtilities.hashCode(result, this.itemLabelsVisibleList);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3138,"        result = HashUtilities.hashCode(result, this.baseItemLabelsVisible);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3150,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3162,        AbstractRenderer clone = (AbstractRenderer) super.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3164,        if (this.seriesVisibleList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3165,            clone.seriesVisibleList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3169,        if (this.seriesVisibleInLegendList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3170,            clone.seriesVisibleInLegendList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3175,        if (this.paintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3176,            clone.paintList = (PaintList) this.paintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3180,        if (this.fillPaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3181,            clone.fillPaintList = (PaintList) this.fillPaintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3184,        if (this.outlinePaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3185,            clone.outlinePaintList = (PaintList) this.outlinePaintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3190,        if (this.strokeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3191,            clone.strokeList = (StrokeList) this.strokeList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3196,        if (this.outlineStrokeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3197,            clone.outlineStrokeList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3202,        if (this.shapeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3203,            clone.shapeList = (ShapeList) this.shapeList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3205,        if (this.baseShape != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3206,            clone.baseShape = ShapeUtilities.clone(this.baseShape);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3210,        if (this.itemLabelsVisibleList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3211,            clone.itemLabelsVisibleList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3217,        if (this.itemLabelFontList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3218,            clone.itemLabelFontList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3224,        if (this.itemLabelPaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3225,            clone.itemLabelPaintList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3231,        if (this.positiveItemLabelPositionList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3232,            clone.positiveItemLabelPositionList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3238,        if (this.negativeItemLabelPositionList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3239,            clone.negativeItemLabelPositionList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3244,        if (this.createEntitiesList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3245,            clone.createEntitiesList,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3249,        if (this.legendShapeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3250,            clone.legendShapeList = (ShapeList) this.legendShapeList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3252,        if (this.legendTextFont != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3253,            clone.legendTextFont = (ObjectList) this.legendTextFont.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3255,        if (this.legendTextPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3256,            clone.legendTextPaint = (PaintList) this.legendTextPaint.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3258,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3260,        return clone;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3271,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3272,"        SerialUtilities.writePaint(this.basePaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3273,"        SerialUtilities.writePaint(this.baseFillPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3274,"        SerialUtilities.writePaint(this.baseOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3275,"        SerialUtilities.writeStroke(this.baseStroke, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3276,"        SerialUtilities.writeStroke(this.baseOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3277,"        SerialUtilities.writeShape(this.baseShape, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3278,"        SerialUtilities.writePaint(this.baseItemLabelPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3279,"        SerialUtilities.writeShape(this.baseLegendShape, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3280,"        SerialUtilities.writePaint(this.baseLegendTextPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3281,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3294,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3295,        this.basePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3296,        this.baseFillPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3297,        this.baseOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3298,        this.baseStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3299,        this.baseOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3300,        this.baseShape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3301,        this.baseItemLabelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3302,        this.baseLegendShape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3303,        this.baseLegendTextPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3307,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,1,3309,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,300,        super();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,301,        this.base = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,302,        this.includeBaseInRange = true;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,303,        this.itemMargin = DEFAULT_ITEM_MARGIN;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,304,        this.drawBarOutline = false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,305,        this.maximumBarWidth = 1.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,307,        this.positiveItemLabelPositionFallback = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,308,        this.negativeItemLabelPositionFallback = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,309,        this.gradientPaintTransformer = new StandardGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,310,        this.minimumBarLength = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,311,"        setBaseLegendShape(new Rectangle2D.Double(-4.0, -4.0, 8.0, 8.0));",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,312,        this.barPainter = getDefaultBarPainter();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,313,        this.shadowsVisible = getDefaultShadowsVisible();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,314,        this.shadowPaint = Color.gray;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,315,        this.shadowXOffset = 4.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,316,        this.shadowYOffset = 4.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,317,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,164,    private static BarPainter defaultBarPainter = new GradientBarPainter();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,194,    private static boolean defaultShadowsVisible = true;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,174,        return BarRenderer.defaultBarPainter;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,185,        if (painter == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,186,"            throw new IllegalArgumentException(""Null 'painter' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,188,        BarRenderer.defaultBarPainter = painter;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,189,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,206,        return BarRenderer.defaultShadowsVisible;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,219,        BarRenderer.defaultShadowsVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,220,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,328,        return this.base;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,340,        this.base = base;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,341,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,342,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,353,        return this.itemMargin;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,367,        this.itemMargin = percent;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,368,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,369,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,379,        return this.drawBarOutline;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,391,        this.drawBarOutline = draw;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,392,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,393,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,404,        return this.maximumBarWidth;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,417,        this.maximumBarWidth = percent;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,418,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,419,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,430,        return this.minimumBarLength;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,448,        if (min < 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,449,"            throw new IllegalArgumentException(""Requires 'min' >= 0.0"");",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,451,        this.minimumBarLength = min;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,452,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,453,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,464,        return this.gradientPaintTransformer;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,477,        this.gradientPaintTransformer = transformer;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,478,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,479,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,490,        return this.positiveItemLabelPositionFallback;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,504,        this.positiveItemLabelPositionFallback = position;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,505,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,506,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,517,        return this.negativeItemLabelPositionFallback;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,531,        this.negativeItemLabelPositionFallback = position;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,532,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,533,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,548,        return this.includeBaseInRange;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,564,        if (this.includeBaseInRange != include) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,565,            this.includeBaseInRange = include;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,566,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,568,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,580,        return this.barPainter;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,594,        if (painter == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,595,"            throw new IllegalArgumentException(""Null 'painter' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,597,        this.barPainter = painter;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,598,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,599,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,610,        return this.shadowsVisible;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,622,        this.shadowsVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,623,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,624,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,636,        return this.shadowPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,650,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,651,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,653,        this.shadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,654,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,655,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,665,        return this.shadowXOffset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,677,        this.shadowXOffset = offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,678,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,679,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,689,        return this.shadowYOffset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,701,        this.shadowYOffset = offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,702,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,703,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,722,"        CategoryItemRendererState state = super.initialise(g2, dataArea, plot,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,726,"        calculateBarWidth(plot, dataArea, dataset, state);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,727,        return state;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,743,"        CategoryAxis domainAxis = getDomainAxis(plot, dataset);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,744,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,745,            int columns = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,746,            int rows = state.getVisibleSeriesCount() >= 0,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,748,            double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,749,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,750,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,751,                space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,753,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,754,                space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,756,            double maxWidth = space * getMaximumBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,757,            double categoryMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,758,            double currentItemMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,759,            if (columns > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,760,                categoryMargin = domainAxis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,762,            if (rows > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,763,                currentItemMargin = getItemMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,765,            double used = space * (1 - domainAxis.getLowerMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,768,            if ((rows * columns) > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,769,"                state.setBarWidth(Math.min(used / (rows * columns), maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,772,"                state.setBarWidth(Math.min(used, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,775,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,800,        double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,801,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,802,            space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,805,            space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,807,"        double barW0 = domainAxis.getCategoryStart(column, getColumnCount(),",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,809,        int seriesCount = state.getVisibleSeriesCount() >= 0,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,811,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,812,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,813,            double seriesGap = space * getItemMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,815,"            double seriesW = calculateSeriesWidth(space, domainAxis,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,817,            barW0 = barW0 + row * (seriesW + seriesGap),0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,819,        },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,821,"            barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(),",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,825,        return barW0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,839,"        double barLow = Math.min(this.base, value);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,840,"        double barHigh = Math.max(this.base, value);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,841,        if (barHigh < min) {  // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,842,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,844,        if (barLow > max) {   // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,845,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,847,"        barLow = Math.max(barLow, min);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,848,"        barHigh = Math.min(barHigh, max);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,849,"        return new double[] {barLow, barHigh};",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,866,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,867,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,869,"        Range result = super.findRangeBounds(dataset, includeInterval);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,870,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,871,            if (this.includeBaseInRange) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,872,"                result = Range.expandToInclude(result, this.base);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,875,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,888,        CategoryPlot cp = getPlot();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,889,        if (cp == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,890,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,894,        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,895,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,898,        CategoryDataset dataset = cp.getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,899,"        String label = getLegendItemLabelGenerator().generateLabel(dataset,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,901,        String description = label;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,902,        String toolTipText = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,903,        if (getLegendItemToolTipGenerator() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,904,            toolTipText = getLegendItemToolTipGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,907,        String urlText = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,908,        if (getLegendItemURLGenerator() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,909,"            urlText = getLegendItemURLGenerator().generateLabel(dataset,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,912,        Shape shape = lookupLegendShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,913,        Paint paint = lookupSeriesPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,914,        Paint outlinePaint = lookupSeriesOutlinePaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,915,        Stroke outlineStroke = lookupSeriesOutlineStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,917,"        LegendItem result = new LegendItem(label, description, toolTipText,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,921,        result.setLabelFont(lookupLegendTextFont(series));,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,922,        Paint labelPaint = lookupLegendTextPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,923,        if (labelPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,924,            result.setLabelPaint(labelPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,926,        result.setDataset(dataset);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,927,        result.setDatasetIndex(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,928,        result.setSeriesKey(dataset.getRowKey(series));,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,929,        result.setSeriesIndex(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,930,        if (this.gradientPaintTransformer != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,931,            result.setFillPaintTransformer(this.gradientPaintTransformer);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,933,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,958,        int visibleRow = state.getVisibleSeriesIndex(row);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,959,        if (visibleRow < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,960,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,963,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,964,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,965,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,968,        final double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,969,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,970,"        double barW0 = calculateBarW0(plot, orientation, dataArea, domainAxis,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,972,"        double[] barL0L1 = calculateBarL0L1(value, rangeAxis.getLowerBound(),",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,974,        if (barL0L1 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,975,            return;  // the bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,978,        RectangleEdge edge = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,979,"        double transL0 = rangeAxis.valueToJava2D(barL0L1[0], dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,980,"        double transL1 = rangeAxis.valueToJava2D(barL0L1[1], dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,989,        boolean positive = (value >= this.base);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,990,        boolean inverted = rangeAxis.isInverted();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,991,"        double barL0 = Math.min(transL0, transL1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,992,        double barLength = Math.abs(transL1 - transL0);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,993,        double barLengthAdj = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,994,        if (barLength > 0.0 && barLength < getMinimumBarLength()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,995,            barLengthAdj = getMinimumBarLength() - barLength;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,997,        double barL0Adj = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,999,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1000,            if (positive && inverted || !positive && !inverted) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1001,                barL0Adj = barLengthAdj;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1002,                barBase = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1005,                barBase = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1009,            if (positive && !inverted || !positive && inverted) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1010,                barL0Adj = barLengthAdj;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1011,                barBase = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1014,                barBase = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1019,        Rectangle2D bar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1020,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1021,"            bar = new Rectangle2D.Double(barL0 - barL0Adj, barW0,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1025,"            bar = new Rectangle2D.Double(barW0, barL0 - barL0Adj,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1028,        if (getShadowsVisible()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1029,"            this.barPainter.paintBarShadow(g2, this, row, column, selected, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1032,"        this.barPainter.paintBar(g2, this, row, column, selected, bar,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1035,"        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1037,"        if (generator != null && isItemLabelVisible(row, column, selected)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1038,"            drawItemLabelForBar(g2, plot, dataset, row, column, selected,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1043,        int datasetIndex = plot.indexOf(dataset);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1044,"        updateCrosshairValues(state.getCrosshairState(),",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1049,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1050,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1051,"            addEntity(entities, bar, dataset, row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1054,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1068,        double factor = 1.0 - getItemMargin() - axis.getLowerMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1070,        if (categories > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1071,            factor = factor - axis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1073,        return (space * factor) / (categories * series);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1098,"        String label = generator.generateLabel(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1099,        if (label == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1100,            return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1103,"        Font labelFont = getItemLabelFont(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1104,        g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1105,"        Paint paint = getItemLabelPaint(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1106,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1109,        ItemLabelPosition position = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1110,        if (!negative) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1111,"            position = getPositiveItemLabelPosition(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1114,"            position = getNegativeItemLabelPosition(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1118,        Point2D anchorPoint = calculateLabelAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1121,        if (isInternalAnchor(position.getItemLabelAnchor())) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1122,"            Shape bounds = TextUtilities.calculateRotatedStringBounds(label,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1127,            if (bounds != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1128,                if (!bar.contains(bounds.getBounds2D())) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1129,                    if (!negative) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1130,                        position = getPositiveItemLabelPositionFallback();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1133,                        position = getNegativeItemLabelPositionFallback();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1135,                    if (position != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1136,                        anchorPoint = calculateLabelAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1145,        if (position != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1146,"            TextUtilities.drawRotatedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1151,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1166,        Point2D result = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1167,        double offset = getItemLabelAnchorOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1168,        double x0 = bar.getX() - offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1169,        double x1 = bar.getX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1170,        double x2 = bar.getX() + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1171,        double x3 = bar.getCenterX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1172,        double x4 = bar.getMaxX() - offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1173,        double x5 = bar.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1174,        double x6 = bar.getMaxX() + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1176,        double y0 = bar.getMaxY() + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1177,        double y1 = bar.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1178,        double y2 = bar.getMaxY() - offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1179,        double y3 = bar.getCenterY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1180,        double y4 = bar.getMinY() + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1181,        double y5 = bar.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1182,        double y6 = bar.getMinY() - offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1184,        if (anchor == ItemLabelAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1185,"            result = new Point2D.Double(x3, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1187,        else if (anchor == ItemLabelAnchor.INSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1188,"            result = new Point2D.Double(x4, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1190,        else if (anchor == ItemLabelAnchor.INSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1191,"            result = new Point2D.Double(x4, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1193,        else if (anchor == ItemLabelAnchor.INSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1194,"            result = new Point2D.Double(x4, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1196,        else if (anchor == ItemLabelAnchor.INSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1197,"            result = new Point2D.Double(x4, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1199,        else if (anchor == ItemLabelAnchor.INSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1200,"            result = new Point2D.Double(x4, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1202,        else if (anchor == ItemLabelAnchor.INSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1203,"            result = new Point2D.Double(x3, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1205,        else if (anchor == ItemLabelAnchor.INSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1206,"            result = new Point2D.Double(x2, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1208,        else if (anchor == ItemLabelAnchor.INSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1209,"            result = new Point2D.Double(x2, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1211,        else if (anchor == ItemLabelAnchor.INSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1212,"            result = new Point2D.Double(x2, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1214,        else if (anchor == ItemLabelAnchor.INSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1215,"            result = new Point2D.Double(x2, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1217,        else if (anchor == ItemLabelAnchor.INSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1218,"            result = new Point2D.Double(x2, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1220,        else if (anchor == ItemLabelAnchor.INSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1221,"            result = new Point2D.Double(x3, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1223,        else if (anchor == ItemLabelAnchor.OUTSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1224,"            result = new Point2D.Double(x5, y6);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1226,        else if (anchor == ItemLabelAnchor.OUTSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1227,"            result = new Point2D.Double(x6, y5);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1229,        else if (anchor == ItemLabelAnchor.OUTSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1230,"            result = new Point2D.Double(x6, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1232,        else if (anchor == ItemLabelAnchor.OUTSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1233,"            result = new Point2D.Double(x6, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1235,        else if (anchor == ItemLabelAnchor.OUTSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1236,"            result = new Point2D.Double(x5, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1238,        else if (anchor == ItemLabelAnchor.OUTSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1239,"            result = new Point2D.Double(x3, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1241,        else if (anchor == ItemLabelAnchor.OUTSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1242,"            result = new Point2D.Double(x1, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1244,        else if (anchor == ItemLabelAnchor.OUTSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1245,"            result = new Point2D.Double(x0, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1247,        else if (anchor == ItemLabelAnchor.OUTSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1248,"            result = new Point2D.Double(x0, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1250,        else if (anchor == ItemLabelAnchor.OUTSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1251,"            result = new Point2D.Double(x0, y5);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1253,        else if (anchor == ItemLabelAnchor.OUTSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1254,"            result = new Point2D.Double(x1, y6);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1256,        else if (anchor == ItemLabelAnchor.OUTSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1257,"            result = new Point2D.Double(x3, y6);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1260,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1272,        return anchor == ItemLabelAnchor.CENTER,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1295,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1296,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1298,        if (!(obj instanceof BarRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1299,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1301,        BarRenderer that = (BarRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1302,        if (this.base != that.base) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1303,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1305,        if (this.itemMargin != that.itemMargin) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1306,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1308,        if (this.drawBarOutline != that.drawBarOutline) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1309,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1311,        if (this.maximumBarWidth != that.maximumBarWidth) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1312,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1314,        if (this.minimumBarLength != that.minimumBarLength) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1315,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1317,"        if (!ObjectUtilities.equal(this.gradientPaintTransformer,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1319,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1321,"        if (!ObjectUtilities.equal(this.positiveItemLabelPositionFallback,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1323,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1325,"        if (!ObjectUtilities.equal(this.negativeItemLabelPositionFallback,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1327,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1329,        if (!this.barPainter.equals(that.barPainter)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1330,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1332,        if (this.shadowsVisible != that.shadowsVisible) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1333,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1335,"        if (!PaintUtilities.equal(this.shadowPaint, that.shadowPaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1336,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1338,        if (this.shadowXOffset != that.shadowXOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1339,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1341,        if (this.shadowYOffset != that.shadowYOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1342,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1344,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1355,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1356,"        SerialUtilities.writePaint(this.shadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1357,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1369,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1370,        this.shadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1371,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1380,        int visibleRow = state.getVisibleSeriesIndex(row);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1381,        if (visibleRow < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1382,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1384,"        if (!this.getItemVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1385,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1388,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1389,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1390,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1393,        final double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1394,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1395,"        double barW0 = calculateBarW0(plot, orientation, dataArea, domainAxis,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1397,"        double[] barL0L1 = calculateBarL0L1(value, rangeAxis.getLowerBound(),",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1399,        if (barL0L1 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1400,            return null;  // the bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1403,        RectangleEdge edge = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1404,"        double transL0 = rangeAxis.valueToJava2D(barL0L1[0], dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1405,"        double transL1 = rangeAxis.valueToJava2D(barL0L1[1], dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1414,        boolean positive = (value >= this.base);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1415,        boolean inverted = rangeAxis.isInverted();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1416,"        double barL0 = Math.min(transL0, transL1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1417,        double barLength = Math.abs(transL1 - transL0);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1418,        double barLengthAdj = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1419,        if (barLength > 0.0 && barLength < getMinimumBarLength()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1420,            barLengthAdj = getMinimumBarLength() - barLength;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1422,        double barL0Adj = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1424,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1425,            if (positive && inverted || !positive && !inverted) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1426,                barL0Adj = barLengthAdj;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1427,                barBase = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1430,                barBase = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1434,            if (positive && !inverted || !positive && inverted) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1435,                barL0Adj = barLengthAdj;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1436,                barBase = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1439,                barBase = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1444,        Rectangle2D bar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1445,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1446,"            bar = new Rectangle2D.Double(barL0 - barL0Adj, barW0,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1450,"            bar = new Rectangle2D.Double(barW0, barL0 - barL0Adj,",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,1,1453,        return bar;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,267,        return 1;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,280,        return this.plot;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,294,"            throw new IllegalArgumentException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,317,        CategoryItemLabelGenerator generator = (CategoryItemLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,319,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,320,            generator = this.baseItemLabelGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,322,        return generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,335,        return (CategoryItemLabelGenerator) this.itemLabelGeneratorList.get(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,350,"        setSeriesItemLabelGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,351,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,367,"        this.itemLabelGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,368,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,369,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,371,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,381,        return this.baseItemLabelGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,394,"        setBaseItemLabelGenerator(generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,395,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,410,        this.baseItemLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,411,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,412,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,414,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,434,        CategoryToolTipGenerator result = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,435,        result = getSeriesToolTipGenerator(row);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,436,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,437,            result = this.baseToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,439,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,453,        return (CategoryToolTipGenerator) this.toolTipGeneratorList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,467,"        setSeriesToolTipGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,468,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,485,"        this.toolTipGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,486,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,487,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,489,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,499,        return this.baseToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,511,"        setBaseToolTipGenerator(generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,512,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,527,        this.baseToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,528,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,529,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,531,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,548,        CategoryURLGenerator generator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,550,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,551,            generator = this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,553,        return generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,566,        return (CategoryURLGenerator) this.urlGeneratorList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,580,"        setSeriesURLGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,581,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,597,"        this.urlGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,598,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,599,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,601,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,611,        return this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,622,"        setBaseURLGenerator(generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,623,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,637,        this.baseURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,638,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,639,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,641,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,656,"        addAnnotation(annotation, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,657,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,668,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,669,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,671,        if (layer.equals(Layer.FOREGROUND)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,672,            this.foregroundAnnotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,673,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,675,        else if (layer.equals(Layer.BACKGROUND)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,676,            this.backgroundAnnotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,677,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,681,"            throw new RuntimeException(""Unknown layer."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,683,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,697,        boolean removed = this.foregroundAnnotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,698,        removed = removed & this.backgroundAnnotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,699,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,700,        return removed;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,710,        this.foregroundAnnotations.clear();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,711,        this.backgroundAnnotations.clear();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,712,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,713,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,723,        return this.legendItemLabelGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,736,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,737,"            throw new IllegalArgumentException(""Null 'generator' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,739,        this.legendItemLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,740,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,741,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,751,        return this.legendItemToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,764,        this.legendItemToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,765,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,766,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,776,        return this.legendItemURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,789,        this.legendItemURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,790,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,791,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,800,        return this.rowCount;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,810,        return this.columnCount;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,826,        CategoryItemRendererState state = new CategoryItemRendererState(info);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,827,        int[] visibleSeriesTemp = new int[this.rowCount];,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,828,        int visibleSeriesCount = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,829,        for (int row = 0; row < this.rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,830,            if (isSeriesVisible(row)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,831,                visibleSeriesTemp[visibleSeriesCount] = row;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,832,                visibleSeriesCount++;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,835,        int[] visibleSeries = new int[visibleSeriesCount];,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,836,"        System.arraycopy(visibleSeriesTemp, 0, visibleSeries, 0,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,838,        state.setVisibleSeriesArray(visibleSeries);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,839,        return state;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,860,        setPlot(plot);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,861,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,862,            this.rowCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,863,            this.columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,866,            this.rowCount = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,867,            this.columnCount = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,869,        CategoryItemRendererState state = createState(info);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,872,        CategoryDatasetSelectionState selectionState = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,873,        if (dataset instanceof SelectableCategoryDataset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,874,            SelectableCategoryDataset scd = (SelectableCategoryDataset) dataset;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,875,            selectionState = scd.getSelectionState();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,879,        if (selectionState == null && info != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,880,            ChartRenderingInfo cri = info.getOwner();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,881,            if (cri != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,882,                RenderingSource rs = cri.getRenderingSource();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,883,                selectionState = (CategoryDatasetSelectionState),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,887,        state.setSelectionState(selectionState);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,889,        return state;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,902,"        return findRangeBounds(dataset, false);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,919,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,920,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,922,        if (getDataBoundsIncludesVisibleSeriesOnly()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,923,            List visibleSeriesKeys = new ArrayList();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,924,            int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,925,            for (int s = 0; s < seriesCount; s++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,926,                if (isSeriesVisible(s)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,927,                    visibleSeriesKeys.add(dataset.getRowKey(s));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,930,"            return DatasetUtilities.findRangeBounds(dataset,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,934,"            return DatasetUtilities.findRangeBounds(dataset, includeInterval);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,955,"        return axis.getCategoryMiddle(columnKey, dataset.getColumnKeys(), area,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,972,"        plot.drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,974,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,989,"        plot.drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,991,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1016,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1017,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1019,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1020,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1022,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1023,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1025,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1026,"            line = new Line2D.Double(dataArea.getMinX(), value,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1029,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1030,"            line = new Line2D.Double(value, dataArea.getMinY(), value,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1034,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1035,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1036,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1038,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1059,        Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1060,        if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1061,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1064,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1065,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1066,"        double v = axis.valueToJava2D(value, dataArea, plot.getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1067,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1068,"            line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1071,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1072,"            line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1076,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1077,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1078,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1080,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1100,        Comparable category = marker.getKey();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1101,        CategoryDataset dataset = plot.getDataset(plot.getIndexOf(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1102,        int columnIndex = dataset.getColumnIndex(category);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1103,        if (columnIndex < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1104,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1107,        final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1108,        g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1111,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1112,        Rectangle2D bounds = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1113,        if (marker.getDrawAsLine()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1114,"            double v = axis.getCategoryMiddle(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1117,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1118,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1119,"                line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1122,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1123,"                line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1126,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1127,            g2.setStroke(marker.getStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1128,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1129,            bounds = line.getBounds2D();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1130,        },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1132,"            double v0 = axis.getCategoryStart(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1135,"            double v1 = axis.getCategoryEnd(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1138,            Rectangle2D area = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1139,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1140,"                area = new Rectangle2D.Double(dataArea.getMinX(), v0,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1143,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1144,"                area = new Rectangle2D.Double(v0, dataArea.getMinY(),",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1147,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1148,            g2.fill(area);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1149,            bounds = area;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1152,        String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1153,        RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1154,        if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1155,            Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1156,            g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1157,            g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1158,            Point2D coordinates = calculateDomainMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1161,"            TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1165,        g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1166,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1186,        if (marker instanceof ValueMarker) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1187,            ValueMarker vm = (ValueMarker) marker;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1188,            double value = vm.getValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1189,            Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1191,            if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1192,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1195,            final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1196,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1199,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1200,"            double v = axis.valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1202,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1203,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1204,"                line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1207,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1208,"                line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1212,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1213,            g2.setStroke(marker.getStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1214,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1216,            String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1217,            RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1218,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1219,                Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1220,                g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1221,                g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1222,                Point2D coordinates = calculateRangeMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1226,"                TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1230,            g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1231,        },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1232,        else if (marker instanceof IntervalMarker) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1233,            IntervalMarker im = (IntervalMarker) marker;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1234,            double start = im.getStartValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1235,            double end = im.getEndValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1236,            Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1237,"            if (!(range.intersects(start, end))) {",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1238,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1241,            final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1242,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1245,"            double start2d = axis.valueToJava2D(start, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1247,"            double end2d = axis.valueToJava2D(end, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1249,"            double low = Math.min(start2d, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1250,"            double high = Math.max(start2d, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1252,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1253,            Rectangle2D rect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1254,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1256,"                low = Math.max(low, dataArea.getMinX());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1257,"                high = Math.min(high, dataArea.getMaxX());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1258,"                rect = new Rectangle2D.Double(low,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1262,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1264,"                low = Math.max(low, dataArea.getMinY());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1265,"                high = Math.min(high, dataArea.getMaxY());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1266,"                rect = new Rectangle2D.Double(dataArea.getMinX(),",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1270,            Paint p = marker.getPaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1271,            if (p instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1272,                GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1273,                GradientPaintTransformer t = im.getGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1274,                if (t != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1275,"                    gp = t.transform(gp, rect);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1277,                g2.setPaint(gp);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1278,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1280,                g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1282,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1285,            if (im.getOutlinePaint() != null && im.getOutlineStroke() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1286,                if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1287,                    Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1288,                    double x0 = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1289,                    double x1 = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1290,                    g2.setPaint(im.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1291,                    g2.setStroke(im.getOutlineStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1292,                    if (range.contains(start)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1293,"                        line.setLine(x0, start2d, x1, start2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1294,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1296,                    if (range.contains(end)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1297,"                        line.setLine(x0, end2d, x1, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1298,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1300,                },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1302,                    Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1303,                    double y0 = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1304,                    double y1 = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1305,                    g2.setPaint(im.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1306,                    g2.setStroke(im.getOutlineStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1307,                    if (range.contains(start)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1308,"                        line.setLine(start2d, y0, start2d, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1309,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1311,                    if (range.contains(end)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1312,"                        line.setLine(end2d, y0, end2d, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1313,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1318,            String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1319,            RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1320,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1321,                Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1322,                g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1323,                g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1324,                Point2D coordinates = calculateRangeMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1328,"                TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1332,            g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1334,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1358,        Rectangle2D anchorRect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1359,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1360,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1363,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1364,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1367,"        return RectangleAnchor.coordinates(anchorRect, anchor);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1392,        Rectangle2D anchorRect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1393,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1394,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1397,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1398,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1401,"        return RectangleAnchor.coordinates(anchorRect, anchor);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1419,        CategoryPlot p = getPlot();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1420,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1421,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1425,        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1426,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1429,        CategoryDataset dataset = p.getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1430,"        String label = this.legendItemLabelGenerator.generateLabel(dataset,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1432,        String description = label;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1433,        String toolTipText = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1434,        if (this.legendItemToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1435,            toolTipText = this.legendItemToolTipGenerator.generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1438,        String urlText = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1439,        if (this.legendItemURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1440,"            urlText = this.legendItemURLGenerator.generateLabel(dataset,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1443,        Shape shape = lookupLegendShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1444,        Paint paint = lookupSeriesPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1445,        Paint outlinePaint = lookupSeriesOutlinePaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1446,        Stroke outlineStroke = lookupSeriesOutlineStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1448,"        LegendItem item = new LegendItem(label, description, toolTipText,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1450,        item.setLabelFont(lookupLegendTextFont(series));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1451,        Paint labelPaint = lookupLegendTextPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1452,        if (labelPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1453,            item.setLabelPaint(labelPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1455,        item.setSeriesKey(dataset.getRowKey(series));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1456,        item.setSeriesIndex(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1457,        item.setDataset(dataset);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1458,        item.setDatasetIndex(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1459,        return item;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1471,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1472,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1474,        if (!(obj instanceof AbstractCategoryItemRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1475,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1477,        AbstractCategoryItemRenderer that = (AbstractCategoryItemRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1479,"        if (!ObjectUtilities.equal(this.itemLabelGeneratorList,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1481,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1483,"        if (!ObjectUtilities.equal(this.baseItemLabelGenerator,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1485,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1487,"        if (!ObjectUtilities.equal(this.toolTipGeneratorList,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1489,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1491,"        if (!ObjectUtilities.equal(this.baseToolTipGenerator,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1493,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1495,"        if (!ObjectUtilities.equal(this.urlGeneratorList,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1497,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1499,"        if (!ObjectUtilities.equal(this.baseURLGenerator,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1501,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1503,"        if (!ObjectUtilities.equal(this.legendItemLabelGenerator,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1505,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1507,"        if (!ObjectUtilities.equal(this.legendItemToolTipGenerator,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1509,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1511,"        if (!ObjectUtilities.equal(this.legendItemURLGenerator,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1513,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1515,"        if (!ObjectUtilities.equal(this.backgroundAnnotations,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1517,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1519,"        if (!ObjectUtilities.equal(this.foregroundAnnotations,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1521,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1523,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1532,        int result = super.hashCode();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1533,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1542,        DrawingSupplier result = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1543,        CategoryPlot cp = getPlot();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1544,        if (cp != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1545,            result = cp.getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1547,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1573,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1574,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1577,        if (crosshairState != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1578,            if (this.plot.isRangeCrosshairLockedOnData()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1580,"                crosshairState.updateCrosshairPoint(rowKey, columnKey, value,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1584,"                crosshairState.updateCrosshairX(rowKey, columnKey,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1588,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1610,"        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1612,        if (generator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1613,"            Font labelFont = getItemLabelFont(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1614,"            Paint paint = getItemLabelPaint(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1615,            g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1616,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1617,"            String label = generator.generateLabel(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1618,            ItemLabelPosition position = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1619,            if (!negative) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1620,"                position = getPositiveItemLabelPosition(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1623,"                position = getNegativeItemLabelPosition(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1625,            Point2D anchorPoint = calculateLabelAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1627,"            TextUtilities.drawRotatedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1633,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1651,        Iterator iterator = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1652,        if (layer.equals(Layer.FOREGROUND)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1653,            iterator = this.foregroundAnnotations.iterator();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1655,        else if (layer.equals(Layer.BACKGROUND)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1656,            iterator = this.backgroundAnnotations.iterator();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1660,"            throw new RuntimeException(""Unknown layer."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1662,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1663,            CategoryAnnotation annotation = (CategoryAnnotation) iterator.next();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1664,"            annotation.draw(g2, this.plot, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1666,        },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1668,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1682,        AbstractCategoryItemRenderer clone,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1686,        if (this.itemLabelGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1687,            clone.itemLabelGeneratorList,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1691,        if (this.baseItemLabelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1692,            if (this.baseItemLabelGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1693,                PublicCloneable pc,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1695,                clone.baseItemLabelGenerator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1697,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1699,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1704,        if (this.toolTipGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1705,            clone.toolTipGeneratorList,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1709,        if (this.baseToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1710,            if (this.baseToolTipGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1711,                PublicCloneable pc,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1713,                clone.baseToolTipGenerator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1715,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1717,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1722,        if (this.urlGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1723,            clone.urlGeneratorList = (ObjectList) this.urlGeneratorList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1726,        if (this.baseURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1727,            if (this.baseURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1728,                PublicCloneable pc = (PublicCloneable) this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1729,                clone.baseURLGenerator = (CategoryURLGenerator) pc.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1730,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1732,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1737,        if (this.legendItemLabelGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1738,            clone.legendItemLabelGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1741,        if (this.legendItemToolTipGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1742,            clone.legendItemToolTipGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1745,        if (this.legendItemURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1746,            clone.legendItemURLGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1749,        return clone;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1762,        int datasetIndex = plot.indexOf(dataset);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1763,        return plot.getDomainAxisForDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1775,        ValueAxis result = plot.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1776,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1777,            result = plot.getRangeAxis();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1779,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1793,            return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1800,        int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1801,        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1802,            for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1803,                if (isSeriesVisibleInLegend(i)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1804,"                    LegendItem item = getLegendItem(index, i);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1805,                    if (item != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1806,                        result.add(item);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1812,            for (int i = seriesCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1813,                if (isSeriesVisibleInLegend(i)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1814,"                    LegendItem item = getLegendItem(index, i);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1815,                    if (item != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1816,                        result.add(item);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1821,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1839,        if (hotspot == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1840,"            throw new IllegalArgumentException(""Null 'hotspot' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1842,"        addEntity(entities, hotspot, dataset, row, column, selected, 0.0, 0.0);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1843,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1865,"        if (!getItemCreateEntity(row, column, selected)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1866,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1868,        Shape s = hotspot;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1869,        if (hotspot == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1870,            double r = getDefaultEntityRadius();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1871,            double w = r * 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1872,            if (getPlot().getOrientation() == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1873,"                s = new Ellipse2D.Double(entityX - r, entityY - r, w, w);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1876,"                s = new Ellipse2D.Double(entityY - r, entityX - r, w, w);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1879,        String tip = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1880,"        CategoryToolTipGenerator generator = getToolTipGenerator(row, column,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1882,        if (generator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1883,"            tip = generator.generateToolTip(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1885,        String url = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1886,"        CategoryURLGenerator urlster = getURLGenerator(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1887,        if (urlster != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1888,"            url = urlster.generateURL(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1890,"        CategoryItemEntity entity = new CategoryItemEntity(s, tip, url,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1892,        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1893,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1916,"        throw new RuntimeException(""Not implemented."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1941,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1942,            result = new Rectangle();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1944,        Comparable key = dataset.getColumnKey(column);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1945,"        Number y = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1946,        if (y == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1947,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1949,"        double xx = domainAxis.getCategoryMiddle(key,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1952,"        double yy = rangeAxis.valueToJava2D(y.doubleValue(), dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1954,"        result.setRect(xx - 2, yy - 2, 4, 4);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1955,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1983,"        Rectangle2D bounds = createHotSpotBounds(g2, dataArea, plot,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1986,        if (bounds == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1987,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,1,1991,"        return bounds.contains(xx, yy);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,115,"        this(area, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,116,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,126,"        this(area, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,127,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,137,"    public ChartEntity(Shape area, String toolTipText, String urlText) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,138,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,139,"            throw new IllegalArgumentException(""Null 'area' argument."");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,141,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,142,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,143,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,144,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,152,        return this.area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,165,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,166,"            throw new IllegalArgumentException(""Null 'area' argument."");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,168,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,169,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,180,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,189,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,190,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,200,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,209,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,210,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,219,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,220,"            return ""rect"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,223,"            return ""poly"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,233,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,234,            return getRectCoords((Rectangle2D) this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,237,            return getPolyCoords(this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,250,        if (rectangle == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,251,"            throw new IllegalArgumentException(""Null 'rectangle' argument."");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,253,        int x1 = (int) rectangle.getX();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,254,        int y1 = (int) rectangle.getY();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,255,        int x2 = x1 + (int) rectangle.getWidth();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,256,        int y2 = y1 + (int) rectangle.getHeight();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,258,        if (x2 == x1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,259,            x2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,261,        if (y2 == y1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,262,            y2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,265,"        return x1 + "","" + y1 + "","" + x2 + "","" + y2;",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,277,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,278,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,280,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,281,        boolean first = true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,282,        float[] coords = new float[6];,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,283,"        PathIterator pi = shape.getPathIterator(null, 1.0);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,284,        while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,285,            pi.currentSegment(coords);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,286,            if (first) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,287,                first = false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,288,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,289,"                result.append("","").append((int) coords[1]);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,292,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,293,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,294,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,295,                result.append((int) coords[1]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,297,            pi.next();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,299,        return result.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,319,        StringBuffer tag = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,320,        boolean hasURL = (this.urlText == null ? false,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,322,        boolean hasToolTip = (this.toolTipText == null ? false,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,324,        if (hasURL || hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,325,"            tag.append(""<area shape=\"""" + getShapeType() + ""\"""" + "" coords=\""""",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,327,            if (hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,328,                tag.append(toolTipTagFragmentGenerator.generateToolTipFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,331,            if (hasURL) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,332,                tag.append(urlTagFragmentGenerator.generateURLFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,336,"                tag.append("" nohref=\""nohref\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,340,            if (!hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,341,"                tag.append("" alt=\""\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,343,"            tag.append(""/>"");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,345,        return tag.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,355,"        StringBuffer buf = new StringBuffer(""ChartEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,356,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,357,        buf.append(this.toolTipText);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,358,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,369,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,370,            return true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,372,        if (!(obj instanceof ChartEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,373,            return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,375,        ChartEntity that = (ChartEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,376,        if (!this.area.equals(that.area)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,377,            return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,379,"        if (!ObjectUtilities.equal(this.toolTipText, that.toolTipText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,380,            return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,382,"        if (!ObjectUtilities.equal(this.urlText, that.urlText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,383,            return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,385,        return true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,394,        int result = 37;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,395,"        result = HashUtilities.hashCode(result, this.toolTipText);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,396,"        result = HashUtilities.hashCode(result, this.urlText);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,397,        return result;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,409,        return super.clone();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,420,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,421,"        SerialUtilities.writeShape(this.area, stream);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,422,     },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,434,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,435,        this.area = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,1,436,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,102,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,103,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,104,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,106,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,107,        this.rowKey = rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,108,        this.columnKey = columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,109,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,121,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,132,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,133,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,135,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,136,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,148,        return this.rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,161,        this.rowKey = rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,162,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,174,        return this.columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,187,        this.columnKey = columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,188,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,197,"        return ""CategoryItemEntity: rowKey="" + this.rowKey",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,209,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,210,            return true;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,212,        if (!(obj instanceof CategoryItemEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,213,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,215,        CategoryItemEntity that = (CategoryItemEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,216,        if (!this.rowKey.equals(that.rowKey)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,217,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,219,        if (!this.columnKey.equals(that.columnKey)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,220,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,222,"        if (!ObjectUtilities.equal(this.dataset, that.dataset)) {",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,223,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,1,225,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,200,        this(null);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,201,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,210,        super(label);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,212,        this.lowerMargin = DEFAULT_AXIS_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,213,        this.upperMargin = DEFAULT_AXIS_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,214,        this.categoryMargin = DEFAULT_CATEGORY_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,215,        this.maximumCategoryLabelLines = 1;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,216,        this.maximumCategoryLabelWidthRatio = 0.0f;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,218,        this.categoryLabelPositionOffset = 4;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,219,        this.categoryLabelPositions = CategoryLabelPositions.STANDARD;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,220,        this.tickLabelFontMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,221,        this.tickLabelPaintMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,222,        this.categoryLabelToolTips = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,224,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,235,        return this.lowerMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,248,        this.lowerMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,249,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,250,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,261,        return this.upperMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,274,        this.upperMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,275,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,276,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,286,        return this.categoryMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,300,        this.categoryMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,301,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,302,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,312,        return this.maximumCategoryLabelLines;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,324,        this.maximumCategoryLabelLines = lines;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,325,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,326,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,336,        return this.maximumCategoryLabelWidthRatio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,348,        this.maximumCategoryLabelWidthRatio = ratio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,349,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,350,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,361,        return this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,373,        this.categoryLabelPositionOffset = offset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,374,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,375,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,386,        return this.categoryLabelPositions;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,398,        if (positions == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,399,"            throw new IllegalArgumentException(""Null 'positions' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,401,        this.categoryLabelPositions = positions;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,402,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,403,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,415,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,416,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,418,        Font result = (Font) this.tickLabelFontMap.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,420,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,421,            result = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,423,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,436,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,437,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,439,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,440,            this.tickLabelFontMap.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,443,"            this.tickLabelFontMap.put(category, font);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,445,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,446,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,458,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,459,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,461,        Paint result = (Paint) this.tickLabelPaintMap.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,463,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,464,            result = getTickLabelPaint();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,466,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,479,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,480,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,482,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,483,            this.tickLabelPaintMap.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,486,"            this.tickLabelPaintMap.put(category, paint);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,488,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,489,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,501,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,502,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,504,"        this.categoryLabelToolTips.put(category, tooltip);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,505,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,506,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,520,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,521,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,523,        return (String) this.categoryLabelToolTips.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,536,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,537,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,539,        this.categoryLabelToolTips.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,540,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,541,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,551,        this.categoryLabelToolTips.clear();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,552,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,553,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,572,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,573,        if (anchor == CategoryAnchor.START) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,574,"            result = getCategoryStart(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,576,        else if (anchor == CategoryAnchor.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,577,"            result = getCategoryMiddle(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,579,        else if (anchor == CategoryAnchor.END) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,580,"            result = getCategoryEnd(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,582,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,603,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,604,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,605,            result = area.getX() + area.getWidth() * getLowerMargin();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,607,        else if ((edge == RectangleEdge.LEFT),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,609,            result = area.getMinY() + area.getHeight() * getLowerMargin();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,612,"        double categorySize = calculateCategorySize(categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,613,"        double categoryGapWidth = calculateCategoryGapSize(categoryCount, area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,616,        result = result + category * (categorySize + categoryGapWidth);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,617,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,637,        if (category < 0 || category >= categoryCount) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,638,"            throw new IllegalArgumentException(""Invalid category index: """,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,641,"        return getCategoryStart(category, categoryCount, area, edge)",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,662,"        return getCategoryStart(category, categoryCount, area, edge)",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,686,        if (categories == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,687,"            throw new IllegalArgumentException(""Null 'categories' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,689,        int categoryIndex = categories.indexOf(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,690,        int categoryCount = categories.size();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,691,"        return getCategoryMiddle(categoryIndex, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,713,        int categoryIndex = dataset.getColumnIndex(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,714,        int categoryCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,715,        int seriesIndex = dataset.getRowIndex(seriesKey);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,716,        int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,717,"        double start = getCategoryStart(categoryIndex, categoryCount, area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,719,"        double end = getCategoryEnd(categoryIndex, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,720,        double width = end - start;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,721,        if (seriesCount == 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,722,            return start + width / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,725,            double gap = (width * itemMargin) / (seriesCount - 1);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,726,            double ww = (width * (1 - itemMargin)) / seriesCount;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,727,            return start + (seriesIndex * (ww + gap)) + ww / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,751,"        double start = getCategoryStart(categoryIndex, categoryCount, area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,753,"        double end = getCategoryEnd(categoryIndex, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,754,        double width = end - start;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,755,        if (seriesCount == 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,756,            return start + width / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,759,            double gap = (width * itemMargin) / (seriesCount - 1);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,760,            double ww = (width * (1 - itemMargin)) / seriesCount;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,761,            return start + (seriesIndex * (ww + gap)) + ww / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,778,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,779,        double available = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,781,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,782,            available = area.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,784,        else if ((edge == RectangleEdge.LEFT),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,786,            available = area.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,788,        if (categoryCount > 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,789,            result = available * (1 - getLowerMargin() - getUpperMargin(),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,791,            result = result / categoryCount;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,794,            result = available * (1 - getLowerMargin() - getUpperMargin());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,796,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,814,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,815,        double available = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,817,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,818,            available = area.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,820,        else if ((edge == RectangleEdge.LEFT),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,822,            available = area.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,825,        if (categoryCount > 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,826,            result = available * getCategoryMargin() / (categoryCount - 1);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,829,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,849,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,850,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,854,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,855,            return space;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,859,        double tickLabelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,860,        double tickLabelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,861,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,862,            g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,863,            AxisState state = new AxisState();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,865,"            refreshTicks(g2, state, plotArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,866,            if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,867,                tickLabelHeight = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,869,            else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,870,                tickLabelHeight = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,872,            else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,873,                tickLabelWidth = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,875,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,876,                tickLabelWidth = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,881,"        Rectangle2D labelEnclosure = getLabelEnclosure(g2, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,882,        double labelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,883,        double labelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,884,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,885,            labelHeight = labelEnclosure.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,886,            space.add(labelHeight + tickLabelHeight,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,889,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,890,            labelWidth = labelEnclosure.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,891,            space.add(labelWidth + tickLabelWidth,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,894,        return space;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,903,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,926,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,927,            return new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,930,        if (isAxisLineVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,931,"            drawAxisLine(g2, cursor, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,933,        AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,934,        if (isTickMarksVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,935,"            drawTickMarks(g2, cursor, dataArea, edge, state);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,938,"        createAndAddEntity(cursor, state, dataArea, edge, plotState);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,941,"        state = drawCategoryLabels(g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,943,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,945,        return state;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,972,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,973,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,976,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,977,"            List ticks = refreshTicks(g2, state, plotArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,978,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,980,            int categoryIndex = 0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,981,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,982,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,984,                CategoryTick tick = (CategoryTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,985,                g2.setFont(getTickLabelFont(tick.getCategory()));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,986,                g2.setPaint(getTickLabelPaint(tick.getCategory()));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,988,                CategoryLabelPosition position,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,990,                double x0 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,991,                double x1 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,992,                double y0 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,993,                double y1 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,994,                if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,995,"                    x0 = getCategoryStart(categoryIndex, ticks.size(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,997,"                    x1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,999,                    y1 = state.getCursor() - this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1000,                    y0 = y1 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1002,                else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1003,"                    x0 = getCategoryStart(categoryIndex, ticks.size(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1005,"                    x1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1007,                    y0 = state.getCursor() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1008,                    y1 = y0 + state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1010,                else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1011,"                    y0 = getCategoryStart(categoryIndex, ticks.size(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1013,"                    y1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1015,                    x1 = state.getCursor() - this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1016,                    x0 = x1 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1018,                else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1019,"                    y0 = getCategoryStart(categoryIndex, ticks.size(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1021,"                    y1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1023,                    x0 = state.getCursor() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1024,                    x1 = x0 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1026,"                Rectangle2D area = new Rectangle2D.Double(x0, y0, (x1 - x0),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1028,"                Point2D anchorPoint = RectangleAnchor.coordinates(area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1030,                TextBlock block = tick.getLabel();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1031,"                block.draw(g2, (float) anchorPoint.getX(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1035,"                Shape bounds = block.calculateBounds(g2,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1039,                if (plotState != null && plotState.getOwner() != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1040,                    EntityCollection entities,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1042,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1043,                        String tooltip = getCategoryLabelToolTip(,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1045,"                        entities.add(new CategoryLabelEntity(tick.getCategory(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1049,                categoryIndex++;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1050,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1052,            if (edge.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1053,                double h = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1054,                state.cursorUp(h);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1055,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1056,            else if (edge.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1057,                double h = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1058,                state.cursorDown(h);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1059,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1060,            else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1061,                double w = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1062,                state.cursorLeft(w);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1063,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1064,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1065,                double w = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1066,                state.cursorRight(w);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1069,        return state;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1087,        List ticks = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1090,        if (dataArea.getHeight() <= 0.0 || dataArea.getWidth() < 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1091,            return ticks;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1094,        CategoryPlot plot = (CategoryPlot) getPlot();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1095,        List categories = plot.getCategoriesForAxis(this);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1096,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1098,        if (categories != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1099,            CategoryLabelPosition position,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1101,            float r = this.maximumCategoryLabelWidthRatio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1102,            if (r <= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1103,                r = position.getWidthRatio();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1106,            float l = 0.0f;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1107,            if (position.getWidthType() == CategoryLabelWidthType.CATEGORY) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1108,"                l = (float) calculateCategorySize(categories.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1112,                if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1113,                    l = (float) dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1116,                    l = (float) dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1119,            int categoryIndex = 0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1120,            Iterator iterator = categories.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1121,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1122,                Comparable category = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1123,                g2.setFont(getTickLabelFont(category));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1124,"                TextBlock label = createLabel(category, l * r, edge, g2);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1125,                if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1126,"                    max = Math.max(max, calculateTextBlockHeight(label,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1129,                else if (edge == RectangleEdge.LEFT,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1131,"                    max = Math.max(max, calculateTextBlockWidth(label,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1134,"                Tick tick = new CategoryTick(category, label,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1137,                ticks.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1138,                categoryIndex = categoryIndex + 1;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1139,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1141,        state.setMax(max);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1142,        return ticks;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1154,        Plot p = getPlot();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1155,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1156,            return;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1158,        CategoryPlot plot = (CategoryPlot) p;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1159,        double il = getTickMarkInsideLength();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1160,        double ol = getTickMarkOutsideLength();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1161,        Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1162,        List categories = plot.getCategoriesForAxis(this);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1163,        g2.setPaint(getTickMarkPaint());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1164,        g2.setStroke(getTickMarkStroke());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1165,        if (edge.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1166,            Iterator iterator = categories.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1167,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1168,                Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1169,"                double x = getCategoryMiddle(key, categories, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1170,"                line.setLine(x, cursor, x, cursor + il);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1171,                g2.draw(line);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1172,"                line.setLine(x, cursor, x, cursor - ol);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1173,                g2.draw(line);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1174,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1175,            state.cursorUp(ol);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1176,        },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1177,        else if (edge.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1178,            Iterator iterator = categories.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1179,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1180,                Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1181,"                double x = getCategoryMiddle(key, categories, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1182,"                line.setLine(x, cursor, x, cursor - il);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1183,                g2.draw(line);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1184,"                line.setLine(x, cursor, x, cursor + ol);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1185,                g2.draw(line);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1186,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1187,            state.cursorDown(ol);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1188,        },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1189,        else if (edge.equals(RectangleEdge.LEFT)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1190,            Iterator iterator = categories.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1191,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1192,                Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1193,"                double y = getCategoryMiddle(key, categories, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1194,"                line.setLine(cursor, y, cursor + il, y);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1195,                g2.draw(line);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1196,"                line.setLine(cursor, y, cursor - ol, y);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1197,                g2.draw(line);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1198,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1199,            state.cursorLeft(ol);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1200,        },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1201,        else if (edge.equals(RectangleEdge.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1202,            Iterator iterator = categories.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1203,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1204,                Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1205,"                double y = getCategoryMiddle(key, categories, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1206,"                line.setLine(cursor, y, cursor - il, y);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1207,                g2.draw(line);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1208,"                line.setLine(cursor, y, cursor + ol, y);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1209,                g2.draw(line);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1210,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1211,            state.cursorRight(ol);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1213,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1227,"        TextBlock label = TextUtilities.createTextBlock(category.toString(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1230,        return label;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1245,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1246,        Size2D size = block.calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1247,"        Rectangle2D box = new Rectangle2D.Double(0.0, 0.0, size.getWidth(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1249,"        Shape rotatedBox = ShapeUtilities.rotateShape(box, position.getAngle(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1251,        double w = rotatedBox.getBounds2D().getWidth() + insets.getLeft(),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1253,        return w;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1270,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1271,        Size2D size = block.calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1272,"        Rectangle2D box = new Rectangle2D.Double(0.0, 0.0, size.getWidth(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1274,"        Shape rotatedBox = ShapeUtilities.rotateShape(box, position.getAngle(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1276,        double h = rotatedBox.getBounds2D().getHeight(),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1278,        return h;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1291,        CategoryAxis clone = (CategoryAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1292,        clone.tickLabelFontMap = new HashMap(this.tickLabelFontMap);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1293,        clone.tickLabelPaintMap = new HashMap(this.tickLabelPaintMap);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1294,        clone.categoryLabelToolTips = new HashMap(this.categoryLabelToolTips);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1295,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1306,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1307,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1309,        if (!(obj instanceof CategoryAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1310,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1312,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1313,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1315,        CategoryAxis that = (CategoryAxis) obj;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1316,        if (that.lowerMargin != this.lowerMargin) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1317,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1319,        if (that.upperMargin != this.upperMargin) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1320,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1322,        if (that.categoryMargin != this.categoryMargin) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1323,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1325,        if (that.maximumCategoryLabelWidthRatio,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1327,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1329,        if (that.categoryLabelPositionOffset,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1331,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1333,"        if (!ObjectUtilities.equal(that.categoryLabelPositions,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1335,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1337,"        if (!ObjectUtilities.equal(that.categoryLabelToolTips,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1339,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1341,"        if (!ObjectUtilities.equal(this.tickLabelFontMap,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1343,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1345,"        if (!equalPaintMaps(this.tickLabelPaintMap, that.tickLabelPaintMap)) {",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1346,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1348,        return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1357,        if (getLabel() != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1358,            return getLabel().hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1361,            return 0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1373,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1374,"        writePaintMap(this.tickLabelPaintMap, stream);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1375,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1387,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1388,        this.tickLabelPaintMap = readPaintMap(stream);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1389,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1406,        boolean isNull = in.readBoolean();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1407,        if (isNull) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1408,            return null;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1410,        Map result = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1411,        int count = in.readInt();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1412,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1413,            Comparable category = (Comparable) in.readObject();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1414,            Paint paint = SerialUtilities.readPaint(in);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1415,"            result.put(category, paint);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1417,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1433,        if (map == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1434,            out.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1437,            out.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1438,            Set keys = map.keySet();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1439,            int count = keys.size();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1440,            out.writeInt(count);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1441,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1442,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1443,                Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1444,                out.writeObject(key);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1445,"                SerialUtilities.writePaint((Paint) map.get(key), out);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1446,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1448,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1460,        if (map1.size() != map2.size()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1461,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1463,        Set entries = map1.entrySet();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1464,        Iterator iterator = entries.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1465,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1466,            Map.Entry entry = (Map.Entry) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1467,            Paint p1 = (Paint) entry.getValue();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1468,            Paint p2 = (Paint) map2.get(entry.getKey());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1469,"            if (!PaintUtilities.equal(p1, p2)) {",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1470,                return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1472,        },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,1,1473,        return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,307,    protected Axis(String label) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,309,        this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,310,        this.visible = DEFAULT_AXIS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,311,        this.labelFont = DEFAULT_AXIS_LABEL_FONT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,312,        this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,313,        this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,314,        this.labelAngle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,315,        this.labelToolTip = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,316,        this.labelURL = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,318,        this.axisLineVisible = true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,319,        this.axisLinePaint = DEFAULT_AXIS_LINE_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,320,        this.axisLineStroke = DEFAULT_AXIS_LINE_STROKE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,322,        this.tickLabelsVisible = DEFAULT_TICK_LABELS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,323,        this.tickLabelFont = DEFAULT_TICK_LABEL_FONT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,324,        this.tickLabelPaint = DEFAULT_TICK_LABEL_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,325,        this.tickLabelInsets = DEFAULT_TICK_LABEL_INSETS;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,327,        this.tickMarksVisible = DEFAULT_TICK_MARKS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,328,        this.tickMarkStroke = DEFAULT_TICK_MARK_STROKE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,329,        this.tickMarkPaint = DEFAULT_TICK_MARK_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,330,        this.tickMarkInsideLength = DEFAULT_TICK_MARK_INSIDE_LENGTH;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,331,        this.tickMarkOutsideLength = DEFAULT_TICK_MARK_OUTSIDE_LENGTH;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,333,        this.minorTickMarksVisible = false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,334,        this.minorTickMarkInsideLength = 0.0f;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,335,        this.minorTickMarkOutsideLength = 2.0f;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,337,        this.plot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,339,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,341,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,143,"    public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(""Tahoma"",",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,147,    public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,150,    public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,154,    public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,157,    public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,163,"    public static final Font DEFAULT_TICK_LABEL_FONT = new Font(""Tahoma"",",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,167,    public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,170,    public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,177,    public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,180,    public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,352,        return this.visible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,364,        if (flag != this.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,365,            this.visible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,366,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,368,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,380,        return this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,395,        String existing = this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,396,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,397,            if (!existing.equals(label)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,398,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,399,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,403,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,404,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,405,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,409,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,419,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,431,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,432,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,434,        if (!this.labelFont.equals(font)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,435,            this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,436,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,438,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,448,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,460,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,461,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,463,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,464,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,465,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,476,        return this.labelInsets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,488,"        setLabelInsets(insets, true);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,489,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,501,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,502,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,504,        if (!insets.equals(this.labelInsets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,505,            this.labelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,506,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,507,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,510,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,520,        return this.labelAngle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,532,        this.labelAngle = angle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,533,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,534,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,546,        return this.labelToolTip;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,560,        this.labelToolTip = text;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,561,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,562,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,574,        return this.labelURL;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,588,        this.labelURL = url;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,589,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,590,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,602,        return this.axisLineVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,616,        this.axisLineVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,617,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,618,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,628,        return this.axisLinePaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,640,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,641,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,643,        this.axisLinePaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,644,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,645,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,655,        return this.axisLineStroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,667,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,668,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,670,        this.axisLineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,671,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,672,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,684,        return this.tickLabelsVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,700,        if (flag != this.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,701,            this.tickLabelsVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,702,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,705,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,719,        return this.minorTickMarksVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,734,        if (flag != this.minorTickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,735,            this.minorTickMarksVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,736,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,738,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,748,        return this.tickLabelFont;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,761,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,762,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,765,        if (!this.tickLabelFont.equals(font)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,766,            this.tickLabelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,767,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,770,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,780,        return this.tickLabelPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,792,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,793,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,795,        this.tickLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,796,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,797,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,807,        return this.tickLabelInsets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,819,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,820,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,822,        if (!this.tickLabelInsets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,823,            this.tickLabelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,824,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,826,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,838,        return this.tickMarksVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,850,        if (flag != this.tickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,851,            this.tickMarksVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,852,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,854,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,865,        return this.tickMarkInsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,877,        this.tickMarkInsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,878,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,879,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,890,        return this.tickMarkOutsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,902,        this.tickMarkOutsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,903,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,904,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,914,        return this.tickMarkStroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,926,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,927,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,929,        if (!this.tickMarkStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,930,            this.tickMarkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,931,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,933,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,943,        return this.tickMarkPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,955,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,956,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,958,        this.tickMarkPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,959,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,960,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,973,        return this.minorTickMarkInsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,987,        this.minorTickMarkInsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,988,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,989,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1002,        return this.minorTickMarkOutsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1016,        this.minorTickMarkOutsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1017,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1018,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1030,        return this.plot;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1043,        this.plot = plot;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1044,        configure();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1045,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1055,        return this.fixedDimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1072,        this.fixedDimension = dimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1073,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1151,        if (plotState == null || plotState.getOwner() == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1152,            return;  // no need to create entity if we can´t save it anyways...,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1154,        Rectangle2D hotspot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1155,        if (edge.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1156,"            hotspot = new Rectangle2D.Double(dataArea.getX(),",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1160,        else if (edge.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1161,"            hotspot = new Rectangle2D.Double(dataArea.getX(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1164,        else if (edge.equals(RectangleEdge.LEFT)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1165,"            hotspot = new Rectangle2D.Double(state.getCursor(),",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1169,        else if (edge.equals(RectangleEdge.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1170,"            hotspot = new Rectangle2D.Double(cursor, dataArea.getY(),",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1173,        EntityCollection e = plotState.getOwner().getEntityCollection();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1174,        if (e != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1175,"            e.add(new AxisEntity(hotspot, this));",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1177,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1187,"        this.listenerList.add(AxisChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1188,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1198,"        this.listenerList.remove(AxisChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1199,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1211,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1212,        return list.contains(listener);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1222,        Object[] listeners = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1223,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1224,            if (listeners[i] == AxisChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1225,                ((AxisChangeListener) listeners[i + 1]).axisChanged(event);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1228,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1236,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1237,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1250,        Rectangle2D result = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1251,        String axisLabel = getLabel();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1252,"        if (axisLabel != null && !axisLabel.equals("""")) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1253,            FontMetrics fm = g2.getFontMetrics(getLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1254,"            Rectangle2D bounds = TextUtilities.getTextBounds(axisLabel, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1255,            RectangleInsets insets = getLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1256,            bounds = insets.createOutsetRectangle(bounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1257,            double angle = getLabelAngle();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1258,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1259,                angle = angle - Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1261,            double x = bounds.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1262,            double y = bounds.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1263,            AffineTransform transformer,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1265,            Shape labelBounds = transformer.createTransformedShape(bounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1266,            result = labelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1269,        return result;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1291,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1292,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1295,"        if ((label == null) || (label.equals(""""))) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1296,            return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1299,        Font font = getLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1300,        RectangleInsets insets = getLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1301,        g2.setFont(font);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1302,        g2.setPaint(getLabelPaint());,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1303,        FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1304,"        Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1305,        Shape hotspot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1307,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1308,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1311,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1312,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1313,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1314,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1315,            float labelx = (float) dataArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1316,            float labely = (float) (state.getCursor() - insets.getBottom(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1318,"            TextUtilities.drawRotatedString(label, g2, labelx, labely,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1320,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1322,            state.cursorUp(insets.getTop() + labelBounds.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1324,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1325,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1326,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1329,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1330,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1331,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1332,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1333,            float labelx = (float) dataArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1334,            float labely = (float) (state.getCursor() + insets.getTop(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1336,"            TextUtilities.drawRotatedString(label, g2, labelx, labely,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1338,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1340,            state.cursorDown(insets.getTop() + labelBounds.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1342,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1343,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1344,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1347,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1348,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1349,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1350,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1351,            float labelx = (float) (state.getCursor() - insets.getRight(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1353,            float labely = (float) dataArea.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1354,"            TextUtilities.drawRotatedString(label, g2, labelx, labely,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1357,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1359,            state.cursorLeft(insets.getLeft() + labelBounds.getWidth(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1361,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1362,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1364,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1367,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1368,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1369,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1370,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1371,            float labelx = (float) (state.getCursor(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1373,            float labely = (float) (dataArea.getY() + dataArea.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1375,"            TextUtilities.drawRotatedString(label, g2, labelx, labely,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1378,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1380,            state.cursorRight(insets.getLeft() + labelBounds.getWidth(),0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1384,        if (plotState != null && hotspot != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1385,            ChartRenderingInfo owner = plotState.getOwner();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1386,            if (owner != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1387,                EntityCollection entities = owner.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1388,                if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1389,"                    entities.add(new AxisLabelEntity(this, hotspot,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1394,        return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1409,        Line2D axisLine = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1410,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1411,"            axisLine = new Line2D.Double(dataArea.getX(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1414,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1415,"            axisLine = new Line2D.Double(dataArea.getX(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1418,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1419,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1422,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1423,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1426,        g2.setPaint(this.axisLinePaint);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1427,        g2.setStroke(this.axisLineStroke);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1428,        g2.draw(axisLine);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1430,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1441,        Axis clone = (Axis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1443,        clone.plot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1444,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1445,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1456,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1457,            return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1459,        if (!(obj instanceof Axis)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1460,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1462,        Axis that = (Axis) obj;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1463,        if (this.visible != that.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1464,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1466,"        if (!ObjectUtilities.equal(this.label, that.label)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1467,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1469,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1470,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1472,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1473,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1475,"        if (!ObjectUtilities.equal(this.labelInsets, that.labelInsets)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1476,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1478,        if (this.labelAngle != that.labelAngle) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1479,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1481,"        if (!ObjectUtilities.equal(this.labelToolTip, that.labelToolTip)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1482,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1484,"        if (!ObjectUtilities.equal(this.labelURL, that.labelURL)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1485,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1487,        if (this.axisLineVisible != that.axisLineVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1488,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1490,"        if (!ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1491,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1493,"        if (!PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1494,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1496,        if (this.tickLabelsVisible != that.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1497,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1499,"        if (!ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1500,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1502,"        if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1503,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1505,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1508,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1510,        if (this.tickMarksVisible != that.tickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1511,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1513,        if (this.tickMarkInsideLength != that.tickMarkInsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1514,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1516,        if (this.tickMarkOutsideLength != that.tickMarkOutsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1517,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1519,"        if (!PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1520,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1522,"        if (!ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1523,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1525,        if (this.minorTickMarksVisible != that.minorTickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1526,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1528,        if (this.minorTickMarkInsideLength != that.minorTickMarkInsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1529,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1531,        if (this.minorTickMarkOutsideLength,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1533,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1535,        if (this.fixedDimension != that.fixedDimension) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1536,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1538,        return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1549,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1550,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1551,"        SerialUtilities.writePaint(this.tickLabelPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1552,"        SerialUtilities.writeStroke(this.axisLineStroke, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1553,"        SerialUtilities.writePaint(this.axisLinePaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1554,"        SerialUtilities.writeStroke(this.tickMarkStroke, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1555,"        SerialUtilities.writePaint(this.tickMarkPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1556,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1568,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1569,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1570,        this.tickLabelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1571,        this.axisLineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1572,        this.axisLinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1573,        this.tickMarkStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1574,        this.tickMarkPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1575,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,1,1576,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,602,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,612,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,613,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,619,            domainAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,620,            domainAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,627,            rangeAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,628,            rangeAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,679,"        return localizationResources.getString(""Category_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,690,        return this.orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,702,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,703,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,705,        this.orientation = orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,706,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,707,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,717,        return this.axisOffset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,729,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,730,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,732,        this.axisOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,733,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,734,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,746,        return getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,759,        CategoryAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,760,        if (index < this.domainAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,761,            result = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,763,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,764,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,765,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,766,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,767,                result = cp.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,770,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,782,"        setDomainAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,783,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,795,"        setDomainAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,796,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,807,        CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,808,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,809,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,811,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,812,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,814,"        this.domainAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,815,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,816,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,817,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,819,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,820,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,822,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,833,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,834,"            setDomainAxis(i, axes[i], false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,836,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,837,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,853,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,854,"            throw new IllegalArgumentException(""Null 'axis' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,856,        return this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,867,        return getDomainAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,880,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,881,        if (index < this.domainAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,882,            result = (AxisLocation) this.domainAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,884,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,885,            result = AxisLocation.getOpposite(getDomainAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,887,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,901,"        setDomainAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,902,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,928,"        setDomainAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,929,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,947,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,952,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,963,        return getDomainAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,974,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,975,        AxisLocation location = getDomainAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,976,        if (location != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,977,"            result = Plot.resolveDomainAxisLocation(location, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,980,            result = RectangleEdge.opposite(getDomainAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,982,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,991,        return this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,999,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1000,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1001,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1002,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1005,        this.domainAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1006,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1007,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1016,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1029,        return getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1047,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1048,                result = cp.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1061,"        setRangeAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1062,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1072,"        setRangeAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1073,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1084,        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1085,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1086,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1088,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1089,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1091,"        this.rangeAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1092,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1093,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1094,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1096,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1097,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1099,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1110,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1111,"            setRangeAxis(i, axes[i], false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1113,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1114,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1130,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1131,"            throw new IllegalArgumentException(""Null 'axis' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1133,        int result = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1134,        if (result < 0) { // try the parent plot,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1135,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1136,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1137,                CategoryPlot p = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1138,                result = p.getRangeAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1141,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1150,        return getRangeAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1163,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1164,        if (index < this.rangeAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1165,            result = (AxisLocation) this.rangeAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1167,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1168,            result = AxisLocation.getOpposite(getRangeAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1170,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1184,"        setRangeAxisLocation(location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1185,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1211,"        setRangeAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1212,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1228,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1233,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1243,        return getRangeAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1254,        AxisLocation location = getRangeAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1255,"        RectangleEdge result = Plot.resolveRangeAxisLocation(location,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1257,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1258,            result = RectangleEdge.opposite(getRangeAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1260,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1269,        return this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1277,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1278,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1279,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1280,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1283,        this.rangeAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1284,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1285,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1294,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1307,        return getDataset(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1354,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1377,        return this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1391,        int result = -1;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1392,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1393,            if (dataset == this.datasets.get(i)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1394,                result = i;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1395,                break;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1398,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1427,"            throw new IllegalArgumentException(""Requires 'index' >= 0."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1450,            return;  // OK,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1454,"            throw new IllegalArgumentException(""Empty list not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1460,                throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1464,"                throw new IllegalArgumentException(""Indices must be unique."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1481,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1482,"            throw new IllegalArgumentException(""Negative 'index'."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1484,        CategoryAxis axis = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1485,        List axisIndices = (List) this.datasetToDomainAxesMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1487,        if (axisIndices != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1489,            Integer axisIndex = (Integer) axisIndices.get(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1490,            axis = getDomainAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1491,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1493,            axis = getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1495,        return axis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1524,"            throw new IllegalArgumentException(""Requires 'index' >= 0."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1547,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1548,"            throw new IllegalArgumentException(""Negative 'index'."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1550,        ValueAxis axis = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1551,        List axisIndices = (List) this.datasetToRangeAxesMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1553,        if (axisIndices != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1555,            Integer axisIndex = (Integer) axisIndices.get(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1556,            axis = getRangeAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1557,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1559,            axis = getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1561,        return axis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1572,        return this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1583,        return getRenderer(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1596,        CategoryItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1597,        if (this.renderers.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1598,            result = (CategoryItemRenderer) this.renderers.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1600,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1634,"        setRenderer(0, renderer, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1635,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1648,"        setRenderer(index, renderer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1649,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1668,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1693,        for (int i = 0; i < renderers.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1694,"            setRenderer(i, renderers[i], false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1696,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1697,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1708,        CategoryItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1709,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1710,            if (this.datasets.get(i) == dataset) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1711,                result = (CategoryItemRenderer) this.renderers.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1712,                break;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1715,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1738,        return this.renderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1752,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1753,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1755,        this.renderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1756,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1757,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1768,        return this.columnRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1783,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1784,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1786,        this.columnRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1787,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1788,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1799,        return this.rowRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1814,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1815,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1817,        this.rowRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1818,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1819,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1829,        return this.domainGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1844,        if (this.domainGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1845,            this.domainGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1846,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1848,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1858,        return this.domainGridlinePosition;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1870,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1871,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1873,        this.domainGridlinePosition = position;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1874,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1875,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1885,        return this.domainGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1897,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1898,"            throw new IllegalArgumentException(""Null 'stroke' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1900,        this.domainGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1901,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1902,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1912,        return this.domainGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1924,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1925,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1927,        this.domainGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1928,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1929,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1942,        return this.rangeZeroBaselineVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1957,        this.rangeZeroBaselineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1958,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1959,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1971,        return this.rangeZeroBaselineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1985,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1986,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1988,        this.rangeZeroBaselineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1989,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,1990,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2003,        return this.rangeZeroBaselinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2017,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2018,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2020,        this.rangeZeroBaselinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2021,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2022,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2032,        return this.rangeGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2045,        if (this.rangeGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2046,            this.rangeGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2047,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2049,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2059,        return this.rangeGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2071,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2072,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2074,        this.rangeGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2075,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2076,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2086,        return this.rangeGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2098,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2099,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2101,        this.rangeGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2102,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2103,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2116,        return this.rangeMinorGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2133,        if (this.rangeMinorGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2134,            this.rangeMinorGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2135,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2137,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2150,        return this.rangeMinorGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2164,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2165,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2167,        this.rangeMinorGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2168,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2169,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2182,        return this.rangeMinorGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2196,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2197,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2199,        this.rangeMinorGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2200,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2201,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2211,        return this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2224,        this.fixedLegendItems = items;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2225,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2226,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2236,        if (this.fixedLegendItems != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2237,            return this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2239,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2241,            int count = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2242,            for (int datasetIndex = 0; datasetIndex < count; datasetIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2243,                CategoryDataset dataset = getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2244,                if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2245,                    CategoryItemRenderer renderer = getRenderer(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2246,                    if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2247,                    result.addAll(renderer.getLegendItems());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2251,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2264,        Rectangle2D dataArea = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2265,"        if (dataArea.contains(x, y)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2267,            double java2D = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2268,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2269,                java2D = x;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2271,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2272,                java2D = y;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2274,            RectangleEdge edge = Plot.resolveRangeAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2276,            double value = getRangeAxis().java2DToValue(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2278,            setAnchorValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2279,            setRangeCrosshairValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2282,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2295,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2296,            double range = getRangeAxis().getRange().getLength();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2297,            double scaledRange = range * percent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2298,"            getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2300,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2302,            getRangeAxis().setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2305,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2316,        if (getParent() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2317,            getParent().annotationChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2320,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2321,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2323,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2338,                yAxis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2342,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2358,        Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2359,        if (parent != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2360,            if (parent instanceof RendererChangeListener) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2361,                RendererChangeListener rcl = (RendererChangeListener) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2362,                rcl.rendererChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2363,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2367,                throw new RuntimeException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2372,            configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2373,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2374,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2376,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2389,"        addDomainMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2390,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2405,"        addDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2406,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2422,"        addDomainMarker(index, marker, layer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2423,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2443,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2444,"            throw new IllegalArgumentException(""Null 'marker' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2446,        if (layer == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2447,"            throw new IllegalArgumentException(""Null 'layer' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2450,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2451,            markers = (Collection) this.foregroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2453,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2454,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2455,"                this.foregroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2457,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2459,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2460,            markers = (Collection) this.backgroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2462,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2463,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2464,"                this.backgroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2466,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2468,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2469,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2470,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2472,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2481,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2482,            Set keys = this.backgroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2483,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2484,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2485,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2486,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2487,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2488,            this.backgroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2490,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2491,            Set keys = this.foregroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2492,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2493,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2494,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2495,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2496,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2497,            this.foregroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2499,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2500,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2510,"        return getDomainMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2523,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2524,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2525,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2526,            result = (Collection) this.foregroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2528,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2529,            result = (Collection) this.backgroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2531,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2532,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2534,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2545,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2546,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2547,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2549,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2550,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2551,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2552,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2553,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2554,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2555,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2558,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2559,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2561,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2562,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2563,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2564,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2565,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2566,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2567,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2570,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2571,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2585,"        return removeDomainMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2601,"        return removeDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2618,"        return removeDomainMarker(index, marker, layer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2638,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2639,            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2643,            markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2646,        if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2647,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2649,        boolean removed = markers.remove(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2650,        if (removed && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2651,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2653,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2667,"        addRangeMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2668,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2683,"        addRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2684,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2700,"        addRangeMarker(index, marker, layer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2701,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2722,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2723,            markers = (Collection) this.foregroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2725,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2726,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2727,"                this.foregroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2729,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2731,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2732,            markers = (Collection) this.backgroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2734,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2735,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2736,"                this.backgroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2738,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2740,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2741,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2742,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2744,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2753,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2754,            Set keys = this.backgroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2755,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2756,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2757,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2758,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2759,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2760,            this.backgroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2762,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2763,            Set keys = this.foregroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2764,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2765,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2766,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2767,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2768,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2769,            this.foregroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2771,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2772,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2784,"        return getRangeMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2797,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2798,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2799,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2800,            result = (Collection) this.foregroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2802,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2803,            result = (Collection) this.backgroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2805,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2806,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2808,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2819,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2820,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2821,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2823,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2824,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2825,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2826,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2827,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2828,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2829,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2832,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2833,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2835,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2836,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2837,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2838,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2839,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2840,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2841,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2844,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2845,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2861,"        return removeRangeMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2879,"        return removeRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2898,"        return removeRangeMarker(index, marker, layer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2919,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2920,"            throw new IllegalArgumentException(""Null 'marker' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2923,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2924,            markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2928,            markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2931,        if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2932,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2934,        boolean removed = markers.remove(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2935,        if (removed && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2936,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2938,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2952,        return this.domainCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2968,        if (this.domainCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2969,            this.domainCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2970,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2972,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2982,        return this.domainCrosshairRowKey;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2994,"        setDomainCrosshairRowKey(key, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,2995,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3007,        this.domainCrosshairRowKey = key;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3008,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3009,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3011,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3021,        return this.domainCrosshairColumnKey;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3033,"        setDomainCrosshairColumnKey(key, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3034,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3046,        this.domainCrosshairColumnKey = key;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3047,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3048,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3050,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3060,        return this.crosshairDatasetIndex;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3072,"        setCrosshairDatasetIndex(index, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3073,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3085,        this.crosshairDatasetIndex = index;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3086,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3087,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3089,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3102,        return this.domainCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3115,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3116,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3118,        this.domainCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3119,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3120,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3133,        return this.domainCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3147,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3148,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3150,        this.domainCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3151,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3161,        return this.rangeCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3172,        if (this.rangeCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3173,            this.rangeCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3174,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3176,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3187,        return this.rangeCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3200,        if (this.rangeCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3201,            this.rangeCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3202,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3204,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3214,        return this.rangeCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3226,"        setRangeCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3227,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3241,        this.rangeCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3242,        if (isRangeCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3243,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3245,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3258,        return this.rangeCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3272,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3273,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3275,        this.rangeCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3276,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3277,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3289,        return this.rangeCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3301,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3302,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3304,        this.rangeCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3305,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3306,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3317,        return this.annotations;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3329,"        addAnnotation(annotation, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3330,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3342,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3343,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3345,        this.annotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3346,        annotation.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3347,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3348,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3350,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3363,"        return removeAnnotation(annotation, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3379,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3380,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3382,        boolean removed = this.annotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3383,        annotation.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3384,        if (removed && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3385,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3387,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3395,        for(int i = 0; i < this.annotations.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3396,            CategoryAnnotation annotation,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3398,            annotation.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3400,        this.annotations.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3401,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3402,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3412,        return this.shadowGenerator;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3427,        this.shadowGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3428,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3429,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3444,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3445,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3449,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3450,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3451,                space.ensureAtLeast(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3453,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3456,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3457,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3459,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3465,            RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3467,            if (this.drawSharedDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3468,"                space = getDomainAxis().reserveSpace(g2, this, plotArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3473,            for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3474,                Axis xAxis = (Axis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3475,                if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3476,                    RectangleEdge edge = getDomainAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3477,"                    space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3482,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3499,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3500,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3504,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3505,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3506,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3508,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3511,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3512,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3514,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3520,            for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3521,                Axis yAxis = (Axis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3522,                if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3523,                    RectangleEdge edge = getRangeAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3524,"                    space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3528,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3540,        int x0 = (int) Math.ceil(rect.getMinX());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3541,        int y0 = (int) Math.ceil(rect.getMinY());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3542,        int x1 = (int) Math.floor(rect.getMaxX());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3543,        int y1 = (int) Math.floor(rect.getMaxY());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3544,"        return new Rectangle(x0, y0, (x1 - x0), (y1 - y0));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3557,        AxisSpace space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3558,"        space = calculateRangeAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3559,"        space = calculateDomainAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3560,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3583,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3584,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3585,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3586,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3590,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3594,            state = new PlotRenderingInfo(null);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3596,        state.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3599,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3600,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3603,"        AxisSpace space = calculateAxisSpace(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3604,"        Rectangle2D dataArea = space.shrink(area, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3605,        this.axisOffset.trim(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3606,        dataArea = integerise(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3607,        if (dataArea.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3608,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3610,        state.setDataArea(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3611,"        createAndAddEntity((Rectangle2D) dataArea.clone(), state, null, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3615,        if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3616,"            getRenderer().drawBackground(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3619,"            drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3622,"        Map axisStateMap = drawAxes(g2, area, dataArea, state);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3626,        if (anchor != null && !dataArea.contains(anchor)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3627,"            anchor = ShapeUtilities.getPointInRectangle(anchor.getX(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3630,        CategoryCrosshairState crosshairState = new CategoryCrosshairState();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3631,        crosshairState.setCrosshairDistance(Double.POSITIVE_INFINITY);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3632,        crosshairState.setAnchor(anchor);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3637,        crosshairState.setAnchorX(Double.NaN);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3638,        crosshairState.setAnchorY(Double.NaN);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3639,        if (anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3640,            ValueAxis rangeAxis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3641,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3643,                if (getOrientation() == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3644,"                    y = rangeAxis.java2DToValue(anchor.getY(), dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3648,"                    y = rangeAxis.java2DToValue(anchor.getX(), dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3651,                crosshairState.setAnchorY(y);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3654,        crosshairState.setRowKey(getDomainCrosshairRowKey());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3655,        crosshairState.setColumnKey(getDomainCrosshairColumnKey());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3656,        crosshairState.setCrosshairY(getRangeCrosshairValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3659,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3660,        g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3662,"        drawDomainGridlines(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3664,        AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3665,        if (rangeAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3666,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3667,                rangeAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3671,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3672,"            drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3673,"            drawZeroRangeBaseline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3676,        Graphics2D savedG2 = g2;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3677,        Rectangle2D savedDataArea = dataArea;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3678,        BufferedImage dataImage = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3679,        if (this.shadowGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3680,"            dataImage = new BufferedImage((int) dataArea.getWidth(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3682,            g2 = dataImage.createGraphics();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3683,            g2.setRenderingHints(savedG2.getRenderingHints());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3684,"            dataArea = new Rectangle(0, 0, dataImage.getWidth(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3689,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3690,"            drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3692,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3693,"            drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3697,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3700,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3701,        g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3704,        DatasetRenderingOrder order = getDatasetRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3705,        if (order == DatasetRenderingOrder.FORWARD) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3708,            int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3709,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3710,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3711,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3712,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3713,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3714,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3719,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3720,"                foundData = render(g2, dataArea, i, state, crosshairState)",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3725,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3726,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3727,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3728,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3729,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3730,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3734,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3738,            int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3739,            for (int i = datasetCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3740,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3741,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3742,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3743,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3744,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3749,            for (int i = this.datasets.size() - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3750,"                foundData = render(g2, dataArea, i, state, crosshairState)",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3755,            for (int i = datasetCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3756,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3757,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3758,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3759,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3760,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3767,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3768,"            drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3770,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3771,"            drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3775,"        drawAnnotations(g2, dataArea, state);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3777,        if (this.shadowGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3778,            BufferedImage shadowImage = this.shadowGenerator.createDropShadow(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3780,            g2 = savedG2;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3781,            dataArea = savedDataArea;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3782,"            g2.drawImage(shadowImage, (int) savedDataArea.getX()",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3786,"            g2.drawImage(dataImage, (int) savedDataArea.getX(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3789,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3790,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3792,        if (!foundData) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3793,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3796,        int datasetIndex = crosshairState.getDatasetIndex();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3797,"        setCrosshairDatasetIndex(datasetIndex, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3800,        Comparable rowKey = crosshairState.getRowKey();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3801,        Comparable columnKey = crosshairState.getColumnKey();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3802,"        setDomainCrosshairRowKey(rowKey, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3803,"        setDomainCrosshairColumnKey(columnKey, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3804,        if (isDomainCrosshairVisible() && columnKey != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3805,            Paint paint = getDomainCrosshairPaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3806,            Stroke stroke = getDomainCrosshairStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3807,"            drawDomainCrosshair(g2, dataArea, this.orientation,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3812,        ValueAxis yAxis = getRangeAxisForDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3813,        RectangleEdge yAxisEdge = getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3814,        if (!this.rangeCrosshairLockedOnData && anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3816,            if (getOrientation() == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3817,"                yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3820,"                yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3822,            crosshairState.setCrosshairY(yy);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3824,"        setRangeCrosshairValue(crosshairState.getCrosshairY(), false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3825,        if (isRangeCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3826,            double y = getRangeCrosshairValue();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3827,            Paint paint = getRangeCrosshairPaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3828,            Stroke stroke = getRangeCrosshairStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3829,"            drawRangeCrosshair(g2, dataArea, getOrientation(), y, yAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3834,        if (isOutlineVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3835,            if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3836,"                getRenderer().drawOutline(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3839,"                drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3843,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3856,"        fillBackground(g2, area, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3857,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3858,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3876,        AxisCollection axisCollection = new AxisCollection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3879,        for (int index = 0; index < this.domainAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3880,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3881,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3882,"                axisCollection.add(xAxis, getDomainAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3887,        for (int index = 0; index < this.rangeAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3888,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3889,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3890,"                axisCollection.add(yAxis, getRangeAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3894,        Map axisStateMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3897,        double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3899,        Iterator iterator = axisCollection.getAxesAtTop().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3900,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3901,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3902,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3903,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3905,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3906,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3908,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3911,        cursor = dataArea.getMaxY(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3913,        iterator = axisCollection.getAxesAtBottom().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3914,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3915,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3916,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3917,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3919,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3920,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3922,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3925,        cursor = dataArea.getMinX(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3927,        iterator = axisCollection.getAxesAtLeft().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3928,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3929,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3930,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3931,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3933,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3934,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3936,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3939,        cursor = dataArea.getMaxX(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3941,        iterator = axisCollection.getAxesAtRight().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3942,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3943,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3944,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3945,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3947,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3948,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3950,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3952,        return axisStateMap;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3974,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3975,        CategoryDataset currentDataset = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3976,        CategoryItemRenderer renderer = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3977,        CategoryAxis domainAxis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3978,        ValueAxis rangeAxis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3979,        boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3980,        if (hasData && renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3982,            foundData = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3983,"            CategoryItemRendererState state = renderer.initialise(g2, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3985,            CategoryDatasetSelectionState selectionState = state.getSelectionState();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3986,            state.setCrosshairState(crosshairState);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3987,            int columnCount = currentDataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3988,            int rowCount = currentDataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3989,            int passCount = renderer.getPassCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3990,            for (int pass = 0; pass < passCount; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3991,                if (this.columnRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3992,                    for (int column = 0; column < columnCount; column++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3993,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3994,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3995,                                boolean selected = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3996,                                if (selectionState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,3997,"                                    selected = selectionState.isSelected(row,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4000,"                                renderer.drawItem(g2, state, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4006,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4007,                                boolean selected = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4008,                                if (selectionState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4009,"                                    selected = selectionState.isSelected(row,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4012,"                                renderer.drawItem(g2, state, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4020,                    for (int column = columnCount - 1; column >= 0; column--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4021,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4022,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4023,                                boolean selected = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4024,                                if (selectionState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4025,"                                    selected = selectionState.isSelected(row,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4028,"                                renderer.drawItem(g2, state, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4034,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4035,                                boolean selected = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4036,                                if (selectionState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4037,"                                    selected = selectionState.isSelected(row,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4040,"                                renderer.drawItem(g2, state, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4049,        return foundData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4063,        if (!isDomainGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4064,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4066,        CategoryAnchor anchor = getDomainGridlinePosition();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4067,        RectangleEdge domainAxisEdge = getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4068,        CategoryDataset dataset = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4069,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4070,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4072,        CategoryAxis axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4073,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4074,            int columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4075,            for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4076,"                double xx = axis.getCategoryJava2DCoordinate(anchor, c,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4078,                CategoryItemRenderer renderer1 = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4079,                if (renderer1 != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4080,"                    renderer1.drawDomainLine(g2, this, dataArea, xx,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4086,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4100,        if (!isRangeGridlinesVisible() && !isRangeMinorGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4101,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4104,        ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4105,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4106,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4109,        CategoryItemRenderer r = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4110,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4111,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4114,        Stroke gridStroke = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4115,        Paint gridPaint = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4116,        boolean paintLine = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4117,        Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4118,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4119,            paintLine = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4120,            ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4121,            if ((tick.getTickType() == TickType.MINOR),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4123,                gridStroke = getRangeMinorGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4124,                gridPaint = getRangeMinorGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4125,                paintLine = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4127,            else if ((tick.getTickType() == TickType.MAJOR),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4129,                gridStroke = getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4130,                gridPaint = getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4131,                paintLine = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4133,            if (((tick.getValue() != 0.0),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4135,"                    r.drawRangeLine(g2, this, axis, dataArea, tick.getValue(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4138,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4139,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4152,        if (!isRangeZeroBaselineVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4153,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4155,        CategoryItemRenderer r = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4156,"        r.drawRangeLine(g2, this, getRangeAxis(), area, 0.0,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4158,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4170,        Iterator iterator = getAnnotations().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4171,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4172,            CategoryAnnotation annotation,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4174,"            annotation.draw(g2, this, dataArea, getDomainAxis(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4176,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4178,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4194,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4195,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4196,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4199,"        Collection markers = getDomainMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4200,        CategoryAxis axis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4201,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4202,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4203,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4204,                CategoryMarker marker = (CategoryMarker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4205,"                r.drawDomainMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4206,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4209,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4225,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4226,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4227,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4230,"        Collection markers = getRangeMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4231,        ValueAxis axis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4232,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4233,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4234,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4235,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4236,"                r.drawRangeMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4237,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4240,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4255,"        double java2D = getRangeAxis().valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4257,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4258,        if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4259,"            line = new Line2D.Double(java2D, dataArea.getMinY(), java2D,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4262,        else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4263,"            line = new Line2D.Double(dataArea.getMinX(), java2D,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4266,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4267,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4268,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4270,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4294,        CategoryDataset dataset = getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4295,        CategoryAxis axis = getDomainAxisForDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4296,        CategoryItemRenderer renderer = getRenderer(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4297,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4298,        if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4299,"            double xx = renderer.getItemMiddle(rowKey, columnKey, dataset, axis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4301,"            line = new Line2D.Double(xx, dataArea.getMinY(), xx,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4303,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4305,"            double yy = renderer.getItemMiddle(rowKey, columnKey, dataset, axis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4307,"            line = new Line2D.Double(dataArea.getMinX(), yy,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4310,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4311,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4312,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4314,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4336,        if (!axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4337,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4339,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4340,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4341,"            double xx = axis.valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4343,"            line = new Line2D.Double(xx, dataArea.getMinY(), xx,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4345,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4347,"            double yy = axis.valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4349,"            line = new Line2D.Double(dataArea.getMinX(), yy,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4352,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4353,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4354,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4356,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4369,        Range result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4370,        List mappedDatasets = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4372,        int rangeIndex = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4373,        if (rangeIndex >= 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4374,            mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4376,        else if (axis == getRangeAxis()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4377,            mappedDatasets.addAll(datasetsMappedToRangeAxis(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4382,        Iterator iterator = mappedDatasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4383,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4384,            CategoryDataset d = (CategoryDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4385,            CategoryItemRenderer r = getRendererForDataset(d);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4386,            if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4387,"                result = Range.combine(result, r.findRangeBounds(d));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4389,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4390,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4405,        Integer key = new Integer(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4406,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4407,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4408,            List mappedAxes = (List) this.datasetToDomainAxesMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4410,            CategoryDataset dataset = (CategoryDataset) this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4411,            if (mappedAxes == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4412,                if (key.equals(ZERO)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4413,                    if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4414,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4419,                if (mappedAxes.contains(key)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4420,                    if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4421,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4426,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4438,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4439,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4440,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4441,            List mappedAxes = (List) this.datasetToRangeAxesMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4443,            if (mappedAxes == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4444,                if (key.equals(ZERO)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4445,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4449,                if (mappedAxes.contains(key)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4450,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4454,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4466,        return this.weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4478,        this.weight = weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4479,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4480,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4490,        return this.fixedDomainAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4502,"        setFixedDomainAxisSpace(space, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4503,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4517,        this.fixedDomainAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4518,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4519,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4521,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4531,        return this.fixedRangeAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4543,"        setFixedRangeAxisSpace(space, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4544,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4558,        this.fixedRangeAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4559,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4560,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4562,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4572,        List result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4573,        if (getDataset() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4574,            result = Collections.unmodifiableList(getDataset().getColumnKeys());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4576,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4590,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4591,        int axisIndex = this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4592,        List datasets = datasetsMappedToDomainAxis(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4593,        Iterator iterator = datasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4594,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4595,            CategoryDataset dataset = (CategoryDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4597,            for (int i = 0; i < dataset.getColumnCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4598,                Comparable category = dataset.getColumnKey(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4599,                if (!result.contains(category)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4600,                    result.add(category);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4603,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4604,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4616,        return this.drawSharedDomainAxis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4628,        this.drawSharedDomainAxis = draw;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4629,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4630,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4643,        return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4658,        return this.rangePannable;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4672,        this.rangePannable = pannable;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4673,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4687,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4700,        if (!isRangePannable()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4701,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4703,        int rangeAxisCount = getRangeAxisCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4704,        for (int i = 0; i < rangeAxisCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4705,            ValueAxis axis = getRangeAxis(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4706,            if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4707,                continue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4709,            double length = axis.getRange().getLength();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4710,            double adj = percent * length;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4711,            if (axis.isInverted()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4712,                adj = -adj;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4714,"            axis.setRange(axis.getLowerBound() + adj,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4717,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4728,        return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4739,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4753,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4767,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4785,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4797,"        zoomRangeAxes(factor, state, source, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4798,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4817,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4818,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4819,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4820,                if (useAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4823,                    double sourceY = source.getY();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4824,                    if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4825,                        sourceY = source.getX();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4827,"                    double anchorY = rangeAxis.java2DToValue(sourceY,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4829,"                    rangeAxis.resizeRange2(factor, anchorY);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4830,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4832,                    rangeAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4836,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4848,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4849,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4850,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4851,"                rangeAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4854,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4864,        return this.anchorValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4876,"        setAnchorValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4877,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4889,        this.anchorValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4890,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4891,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4893,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4903,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4904,            return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4906,        if (!(obj instanceof CategoryPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4907,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4909,        CategoryPlot that = (CategoryPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4910,        if (this.orientation != that.orientation) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4911,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4913,"        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4914,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4916,        if (!this.domainAxes.equals(that.domainAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4917,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4919,        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4920,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4922,        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4923,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4925,        if (!this.rangeAxes.equals(that.rangeAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4926,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4928,        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4929,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4931,"        if (!ObjectUtilities.equal(this.datasetToDomainAxesMap,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4933,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4935,"        if (!ObjectUtilities.equal(this.datasetToRangeAxesMap,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4937,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4939,"        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4940,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4942,        if (this.renderingOrder != that.renderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4943,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4945,        if (this.columnRenderingOrder != that.columnRenderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4946,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4948,        if (this.rowRenderingOrder != that.rowRenderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4949,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4951,        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4952,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4954,        if (this.domainGridlinePosition != that.domainGridlinePosition) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4955,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4957,"        if (!ObjectUtilities.equal(this.domainGridlineStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4959,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4961,"        if (!PaintUtilities.equal(this.domainGridlinePaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4963,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4965,        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4966,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4968,"        if (!ObjectUtilities.equal(this.rangeGridlineStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4970,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4972,"        if (!PaintUtilities.equal(this.rangeGridlinePaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4974,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4976,        if (this.anchorValue != that.anchorValue) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4977,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4979,        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4980,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4982,        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4983,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4985,"        if (!ObjectUtilities.equal(this.rangeCrosshairStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4987,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4989,"        if (!PaintUtilities.equal(this.rangeCrosshairPaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4991,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4993,        if (this.rangeCrosshairLockedOnData,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4995,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4997,"        if (!ObjectUtilities.equal(this.foregroundDomainMarkers,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,4999,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5001,"        if (!ObjectUtilities.equal(this.backgroundDomainMarkers,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5003,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5005,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5007,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5009,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5011,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5013,"        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5014,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5016,        if (this.weight != that.weight) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5017,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5019,"        if (!ObjectUtilities.equal(this.fixedDomainAxisSpace,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5021,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5023,"        if (!ObjectUtilities.equal(this.fixedRangeAxisSpace,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5025,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5027,"        if (!ObjectUtilities.equal(this.fixedLegendItems,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5029,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5031,        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5032,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5034,        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5035,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5037,"        if (!ObjectUtilities.equal(this.domainCrosshairColumnKey,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5039,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5041,"        if (!ObjectUtilities.equal(this.domainCrosshairRowKey,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5043,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5045,"        if (!PaintUtilities.equal(this.domainCrosshairPaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5047,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5049,"        if (!ObjectUtilities.equal(this.domainCrosshairStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5051,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5053,        if (this.rangeMinorGridlinesVisible,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5055,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5057,"        if (!PaintUtilities.equal(this.rangeMinorGridlinePaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5059,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5061,"        if (!ObjectUtilities.equal(this.rangeMinorGridlineStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5063,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5065,        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5066,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5068,"        if (!PaintUtilities.equal(this.rangeZeroBaselinePaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5070,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5072,"        if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5074,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5076,"        if (!ObjectUtilities.equal(this.shadowGenerator,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5078,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5080,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5092,        CategoryPlot clone = (CategoryPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5094,        clone.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5095,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5096,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5097,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5098,                CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5099,"                clone.setDomainAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5102,        clone.domainAxisLocations,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5105,        clone.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5106,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5107,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5108,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5109,                ValueAxis clonedAxis = (ValueAxis) yAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5110,"                clone.setRangeAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5113,        clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5115,        clone.datasets = (ObjectList) this.datasets.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5116,        for (int i = 0; i < clone.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5117,            CategoryDataset dataset = clone.getDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5118,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5119,                dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5122,        clone.datasetToDomainAxesMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5123,        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5124,        clone.datasetToRangeAxesMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5125,        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5127,        clone.renderers = (ObjectList) this.renderers.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5128,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5129,            CategoryItemRenderer renderer2 = (CategoryItemRenderer),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5131,            if (renderer2 instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5132,                PublicCloneable pc = (PublicCloneable) renderer2;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5133,                CategoryItemRenderer rc = (CategoryItemRenderer) pc.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5134,"                clone.renderers.set(i, rc);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5135,                rc.setPlot(clone);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5136,                rc.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5139,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5140,            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5143,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5144,            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5148,        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5149,        clone.foregroundDomainMarkers = cloneMarkerMap(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5151,        clone.backgroundDomainMarkers = cloneMarkerMap(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5153,        clone.foregroundRangeMarkers = cloneMarkerMap(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5155,        clone.backgroundRangeMarkers = cloneMarkerMap(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5157,        if (this.fixedLegendItems != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5158,            clone.fixedLegendItems,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5161,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5176,        Map clone = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5177,        Set keys = map.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5178,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5179,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5180,            Object key = iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5181,            List entry = (List) map.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5182,            Object toAdd = ObjectUtilities.deepClone(entry);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5183,"            clone.put(key, toAdd);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5184,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5185,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5196,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5197,"        SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5198,"        SerialUtilities.writePaint(this.domainGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5199,"        SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5200,"        SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5201,"        SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5202,"        SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5203,"        SerialUtilities.writeStroke(this.domainCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5204,"        SerialUtilities.writePaint(this.domainCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5205,"        SerialUtilities.writeStroke(this.rangeMinorGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5206,"        SerialUtilities.writePaint(this.rangeMinorGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5207,"        SerialUtilities.writeStroke(this.rangeZeroBaselineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5208,"        SerialUtilities.writePaint(this.rangeZeroBaselinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5209,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5222,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5223,        this.domainGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5224,        this.domainGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5225,        this.rangeGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5226,        this.rangeGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5227,        this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5228,        this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5229,        this.domainCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5230,        this.domainCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5231,        this.rangeMinorGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5232,        this.rangeMinorGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5233,        this.rangeZeroBaselineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5234,        this.rangeZeroBaselinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5236,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5237,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5238,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5239,                xAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5240,                xAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5243,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5244,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5245,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5246,                yAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5247,                yAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5250,        int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5251,        for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5252,            Dataset dataset = (Dataset) this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5253,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5254,                dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5257,        int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5258,        for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5259,            CategoryItemRenderer renderer,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5261,            if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5262,                renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5266,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5277,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5289,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5306,        int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5307,        for (int d = 0; d < datasetCount; d++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5308,            CategoryDataset dataset = (CategoryDataset) this.datasets.get(d);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5309,            if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5310,                continue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5312,            CategoryDatasetSelectionState state = findSelectionStateForDataset(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5314,            if (state == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5315,                continue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5317,            Graphics2D g2 = source.createGraphics2D();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5318,            CategoryItemRenderer renderer = getRendererForDataset(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5319,"            CategoryItemRendererState rs = renderer.initialise(g2, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5321,            int rowCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5322,            int columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5323,            for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5324,                for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5325,"                    if (renderer.hitTest(x, y, null, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5329,"                        state.setSelected(r, c, !state.isSelected(r, c));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5334,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5348,        System.out.println(region);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5349,"        System.out.println(""Select a region..."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5350,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5359,        int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5360,        for (int d = 0; d < datasetCount; d++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5361,            CategoryDataset dataset = (CategoryDataset) this.datasets.get(d);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5362,            if (dataset instanceof SelectableCategoryDataset) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5365,                SelectableCategoryDataset scd,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5367,                if (scd.getSelectionState() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5368,                    CategoryDatasetSelectionState selState,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5370,                    selState.clearSelection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5374,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5388,        if (dataset instanceof SelectableCategoryDataset) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5389,            SelectableCategoryDataset sd = (SelectableCategoryDataset) dataset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5390,            CategoryDatasetSelectionState s = sd.getSelectionState();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5391,            return s;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,1,5393,        throw new RuntimeException();,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,177,        return this.name;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,190,        if (this == o) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,191,            return true;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,193,        if (!(o instanceof ItemLabelAnchor)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,194,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,197,        ItemLabelAnchor order = (ItemLabelAnchor) o;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,198,        if (!this.name.equals(order.toString())) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,199,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,202,        return true;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,214,        ItemLabelAnchor result = null;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,215,        if (this.equals(ItemLabelAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,216,            result = ItemLabelAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,218,        else if (this.equals(ItemLabelAnchor.INSIDE1)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,219,            result = ItemLabelAnchor.INSIDE1;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,221,        else if (this.equals(ItemLabelAnchor.INSIDE2)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,222,            result = ItemLabelAnchor.INSIDE2;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,224,        else if (this.equals(ItemLabelAnchor.INSIDE3)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,225,            result = ItemLabelAnchor.INSIDE3;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,227,        else if (this.equals(ItemLabelAnchor.INSIDE4)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,228,            result = ItemLabelAnchor.INSIDE4;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,230,        else if (this.equals(ItemLabelAnchor.INSIDE5)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,231,            result = ItemLabelAnchor.INSIDE5;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,233,        else if (this.equals(ItemLabelAnchor.INSIDE6)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,234,            result = ItemLabelAnchor.INSIDE6;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,236,        else if (this.equals(ItemLabelAnchor.INSIDE7)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,237,            result = ItemLabelAnchor.INSIDE7;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,239,        else if (this.equals(ItemLabelAnchor.INSIDE8)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,240,            result = ItemLabelAnchor.INSIDE8;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,242,        else if (this.equals(ItemLabelAnchor.INSIDE9)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,243,            result = ItemLabelAnchor.INSIDE9;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,245,        else if (this.equals(ItemLabelAnchor.INSIDE10)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,246,            result = ItemLabelAnchor.INSIDE10;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,248,        else if (this.equals(ItemLabelAnchor.INSIDE11)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,249,            result = ItemLabelAnchor.INSIDE11;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,251,        else if (this.equals(ItemLabelAnchor.INSIDE12)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,252,            result = ItemLabelAnchor.INSIDE12;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,254,        else if (this.equals(ItemLabelAnchor.OUTSIDE1)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,255,            result = ItemLabelAnchor.OUTSIDE1;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,257,        else if (this.equals(ItemLabelAnchor.OUTSIDE2)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,258,            result = ItemLabelAnchor.OUTSIDE2;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,260,        else if (this.equals(ItemLabelAnchor.OUTSIDE3)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,261,            result = ItemLabelAnchor.OUTSIDE3;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,263,        else if (this.equals(ItemLabelAnchor.OUTSIDE4)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,264,            result = ItemLabelAnchor.OUTSIDE4;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,266,        else if (this.equals(ItemLabelAnchor.OUTSIDE5)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,267,            result = ItemLabelAnchor.OUTSIDE5;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,269,        else if (this.equals(ItemLabelAnchor.OUTSIDE6)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,270,            result = ItemLabelAnchor.OUTSIDE6;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,272,        else if (this.equals(ItemLabelAnchor.OUTSIDE7)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,273,            result = ItemLabelAnchor.OUTSIDE7;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,275,        else if (this.equals(ItemLabelAnchor.OUTSIDE8)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,276,            result = ItemLabelAnchor.OUTSIDE8;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,278,        else if (this.equals(ItemLabelAnchor.OUTSIDE9)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,279,            result = ItemLabelAnchor.OUTSIDE9;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,281,        else if (this.equals(ItemLabelAnchor.OUTSIDE10)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,282,            result = ItemLabelAnchor.OUTSIDE10;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,284,        else if (this.equals(ItemLabelAnchor.OUTSIDE11)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,285,            result = ItemLabelAnchor.OUTSIDE11;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,287,        else if (this.equals(ItemLabelAnchor.OUTSIDE12)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,288,            result = ItemLabelAnchor.OUTSIDE12;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,1,290,        return result;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,213,"        this(label, Color.black);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,214,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,226,"        this(label, null, null, null, new Rectangle2D.Double(-4.0, -4.0, 8.0,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,228,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,246,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,253,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,275,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,282,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,299,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,304,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,338,"                      Stroke lineStroke, Paint linePaint) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,340,        if (label == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,341,"            throw new IllegalArgumentException(""Null 'label' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,343,        if (fillPaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,344,"            throw new IllegalArgumentException(""Null 'fillPaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,346,        if (lineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,347,"            throw new IllegalArgumentException(""Null 'lineStroke' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,349,        if (outlinePaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,350,"            throw new IllegalArgumentException(""Null 'outlinePaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,352,        if (outlineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,353,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/LegendItem,1,356,        this.label = label;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,357,        this.labelPaint = null;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,358,        this.attributedLabel = null;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,359,        this.description = description;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,360,        this.shapeVisible = shapeVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,361,        this.shape = shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,362,        this.shapeFilled = shapeFilled;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,363,        this.fillPaint = fillPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,364,        this.fillPaintTransformer = new StandardGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,365,        this.shapeOutlineVisible = shapeOutlineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,366,        this.outlinePaint = outlinePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,367,        this.outlineStroke = outlineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,368,        this.lineVisible = lineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,369,        this.line = line;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,370,        this.lineStroke = lineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,371,        this.linePaint = linePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,372,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,373,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,374,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,392,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,399,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,421,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,427,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,444,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,449,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,483,                      Paint linePaint) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,485,        if (label == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,486,"            throw new IllegalArgumentException(""Null 'label' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,488,        if (fillPaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,489,"            throw new IllegalArgumentException(""Null 'fillPaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,491,        if (lineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,492,"            throw new IllegalArgumentException(""Null 'lineStroke' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,494,        if (line == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,495,"            throw new IllegalArgumentException(""Null 'line' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,497,        if (linePaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,498,"            throw new IllegalArgumentException(""Null 'linePaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,500,        if (outlinePaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,501,"            throw new IllegalArgumentException(""Null 'outlinePaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,503,        if (outlineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,504,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/LegendItem,1,507,        this.label = characterIteratorToString(label.getIterator());,0.0,0,-1,0
org/jfree/chart/LegendItem,1,508,        this.attributedLabel = label;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,509,        this.description = description;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,510,        this.shapeVisible = shapeVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,511,        this.shape = shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,512,        this.shapeFilled = shapeFilled;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,513,        this.fillPaint = fillPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,514,        this.fillPaintTransformer = new StandardGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,515,        this.shapeOutlineVisible = shapeOutlineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,516,        this.outlinePaint = outlinePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,517,        this.outlineStroke = outlineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,518,        this.lineVisible = lineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,519,        this.line = line;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,520,        this.lineStroke = lineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,521,        this.linePaint = linePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,522,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,523,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,524,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,196,    private static final Shape UNUSED_SHAPE = new Line2D.Float();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,202,    private static final Stroke UNUSED_STROKE = new BasicStroke(0.0f);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,534,        int endIndex = iterator.getEndIndex();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,535,        int beginIndex = iterator.getBeginIndex();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,536,        int count = endIndex - beginIndex;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,537,        if (count <= 0) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,538,"            return """";",0.0,0,-1,0
org/jfree/chart/LegendItem,1,540,        char[] chars = new char[count];,0.0,0,-1,0
org/jfree/chart/LegendItem,1,541,        int i = 0;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,542,        char c = iterator.first();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,543,        while (c != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,544,            chars[i] = c;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,545,            i++;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,546,            c = iterator.next();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,548,        return new String(chars);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,561,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,572,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,573,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,586,        return this.datasetIndex;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,599,        this.datasetIndex = index;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,600,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,612,        return this.seriesKey;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,623,        this.seriesKey = key;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,624,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,634,        return this.series;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,645,        this.series = index;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,646,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,654,        return this.label;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,665,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,676,        this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,677,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,687,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,698,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,699,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,707,        return this.attributedLabel;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,718,        return this.description;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,730,        this.description = text;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,731,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,741,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,753,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,754,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,764,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,777,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,778,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,788,        return this.shapeVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,802,        this.shapeVisible = visible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,803,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,814,        return this.shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,826,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,827,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,829,        this.shape = shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,830,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,838,        return this.shapeFilled;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,847,        return this.fillPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,858,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,859,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,861,        this.fillPaint = paint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,862,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,871,        return this.shapeOutlineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,880,        return this.lineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,889,        return this.linePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,900,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,901,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,903,        this.linePaint = paint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,904,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,912,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,923,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,924,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,926,        this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,927,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,937,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,950,        this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,951,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,961,        return this.lineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,974,        this.lineVisible = visible;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,975,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,986,        return this.line;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,998,        if (line == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,999,"            throw new IllegalArgumentException(""Null 'line' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1001,        this.line = line;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1002,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,1015,        return this.fillPaintTransformer;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1029,        if (transformer == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1030,"            throw new IllegalArgumentException(""Null 'transformer' attribute."");",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1032,        this.fillPaintTransformer = transformer;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1033,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,1043,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1044,            return true;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1046,        if (!(obj instanceof LegendItem)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1047,                return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1049,        LegendItem that = (LegendItem) obj;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1050,        if (this.datasetIndex != that.datasetIndex) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1051,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1053,        if (this.series != that.series) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1054,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1056,        if (!this.label.equals(that.label)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1057,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1059,"        if (!AttributedStringUtilities.equal(this.attributedLabel,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1061,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1063,"        if (!ObjectUtilities.equal(this.description, that.description)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1064,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1066,        if (this.shapeVisible != that.shapeVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1067,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1069,"        if (!ShapeUtilities.equal(this.shape, that.shape)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1070,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1072,        if (this.shapeFilled != that.shapeFilled) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1073,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1075,"        if (!PaintUtilities.equal(this.fillPaint, that.fillPaint)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1076,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1078,"        if (!ObjectUtilities.equal(this.fillPaintTransformer,",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1080,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1082,        if (this.shapeOutlineVisible != that.shapeOutlineVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1083,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1085,        if (!this.outlineStroke.equals(that.outlineStroke)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1086,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1088,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1089,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1091,        if (!this.lineVisible == that.lineVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1092,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1094,"        if (!ShapeUtilities.equal(this.line, that.line)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1095,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1097,        if (!this.lineStroke.equals(that.lineStroke)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1098,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1100,"        if (!PaintUtilities.equal(this.linePaint, that.linePaint)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1101,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1103,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1104,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1106,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1107,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1109,        return true;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1124,        LegendItem clone = (LegendItem) super.clone();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1125,        if (this.seriesKey instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1126,            PublicCloneable pc = (PublicCloneable) this.seriesKey;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1127,            clone.seriesKey = (Comparable) pc.clone();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1130,        clone.shape = ShapeUtilities.clone(this.shape);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1131,        if (this.fillPaintTransformer instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1132,            PublicCloneable pc = (PublicCloneable) this.fillPaintTransformer;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1133,            clone.fillPaintTransformer = (GradientPaintTransformer) pc.clone();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1136,        clone.line = ShapeUtilities.clone(this.line);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1137,        return clone;,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1148,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1149,"        SerialUtilities.writeAttributedString(this.attributedLabel, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1150,"        SerialUtilities.writeShape(this.shape, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1151,"        SerialUtilities.writePaint(this.fillPaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1152,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1153,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1154,"        SerialUtilities.writeShape(this.line, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1155,"        SerialUtilities.writeStroke(this.lineStroke, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1156,"        SerialUtilities.writePaint(this.linePaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1157,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,1,1158,    },0.0,0,-1,0
org/jfree/chart/LegendItem,1,1170,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1171,        this.attributedLabel = SerialUtilities.readAttributedString(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1172,        this.shape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1173,        this.fillPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1174,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1175,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1176,        this.line = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1177,        this.lineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1178,        this.linePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1179,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,1,1180,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,277,        super(label);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,279,        this.positiveArrowVisible = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,280,        this.negativeArrowVisible = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,282,        this.range = DEFAULT_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,283,        this.autoRange = DEFAULT_AUTO_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,284,        this.defaultAutoRange = DEFAULT_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,286,        this.inverted = DEFAULT_INVERTED;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,287,        this.autoRangeMinimumSize = DEFAULT_AUTO_RANGE_MINIMUM_SIZE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,289,        this.lowerMargin = DEFAULT_LOWER_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,290,        this.upperMargin = DEFAULT_UPPER_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,292,        this.fixedAutoRange = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,294,        this.autoTickUnitSelection = DEFAULT_AUTO_TICK_UNIT_SELECTION;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,295,        this.standardTickUnits = standardTickUnits;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,297,        Polygon p1 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,298,"        p1.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,299,"        p1.addPoint(-2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,300,"        p1.addPoint(2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,302,        this.upArrow = p1;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,304,        Polygon p2 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,305,"        p2.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,306,"        p2.addPoint(-2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,307,"        p2.addPoint(2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,309,        this.downArrow = p2;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,311,        Polygon p3 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,312,"        p3.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,313,"        p3.addPoint(-2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,314,"        p3.addPoint(-2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,316,        this.rightArrow = p3;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,318,        Polygon p4 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,319,"        p4.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,320,"        p4.addPoint(2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,321,"        p4.addPoint(2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,323,        this.leftArrow = p4;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,325,        this.verticalTickLabels = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,326,        this.minorTickCount = 0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,328,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,155,"    public static final Range DEFAULT_RANGE = new Range(0.0, 1.0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,339,        return this.verticalTickLabels;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,353,        if (this.verticalTickLabels != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,354,            this.verticalTickLabels = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,355,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,357,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,368,        return this.positiveArrowVisible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,381,        this.positiveArrowVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,382,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,383,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,394,        return this.negativeArrowVisible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,407,        this.negativeArrowVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,408,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,409,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,420,        return this.upArrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,433,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,434,"            throw new IllegalArgumentException(""Null 'arrow' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,436,        this.upArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,437,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,438,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,449,        return this.downArrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,462,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,463,"            throw new IllegalArgumentException(""Null 'arrow' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,465,        this.downArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,466,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,467,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,478,        return this.leftArrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,491,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,492,"            throw new IllegalArgumentException(""Null 'arrow' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,494,        this.leftArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,495,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,496,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,507,        return this.rightArrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,520,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,521,"            throw new IllegalArgumentException(""Null 'arrow' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,523,        this.rightArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,524,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,525,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,537,        Line2D axisLine = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,538,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,539,"            axisLine = new Line2D.Double(dataArea.getX(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,542,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,543,"            axisLine = new Line2D.Double(dataArea.getX(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,546,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,547,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,550,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,551,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,554,        g2.setPaint(getAxisLinePaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,555,        g2.setStroke(getAxisLineStroke());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,556,        g2.draw(axisLine);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,558,        boolean drawUpOrRight = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,559,        boolean drawDownOrLeft = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,560,        if (this.positiveArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,561,            if (this.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,562,                drawDownOrLeft = true;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,565,                drawUpOrRight = true;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,568,        if (this.negativeArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,569,            if (this.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,570,                drawUpOrRight = true;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,573,                drawDownOrLeft = true;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,576,        if (drawUpOrRight) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,577,            double x = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,578,            double y = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,579,            Shape arrow = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,580,            if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,581,                x = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,582,                y = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,583,                arrow = this.rightArrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,585,            else if (edge == RectangleEdge.LEFT,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,587,                x = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,588,                y = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,589,                arrow = this.upArrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,593,            AffineTransform transformer = new AffineTransform();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,594,"            transformer.setToTranslation(x, y);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,595,            Shape shape = transformer.createTransformedShape(arrow);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,596,            g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,597,            g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,600,        if (drawDownOrLeft) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,601,            double x = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,602,            double y = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,603,            Shape arrow = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,604,            if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,605,                x = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,606,                y = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,607,                arrow = this.leftArrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,609,            else if (edge == RectangleEdge.LEFT,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,611,                x = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,612,                y = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,613,                arrow = this.downArrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,617,            AffineTransform transformer = new AffineTransform();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,618,"            transformer.setToTranslation(x, y);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,619,            Shape shape = transformer.createTransformedShape(arrow);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,620,            g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,621,            g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,624,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,641,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,642,        float[] result = new float[2];,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,643,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,644,"            result[0] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,645,            result[1] = (float) (cursor - insets.getBottom() - 2.0);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,647,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,648,"            result[0] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,649,            result[1] = (float) (cursor + insets.getTop() + 2.0);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,651,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,652,            result[0] = (float) (cursor - insets.getLeft() - 2.0);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,653,"            result[1] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,655,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,656,            result[0] = (float) (cursor + insets.getRight() + 2.0);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,657,"            result[1] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,659,        return result;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,678,        AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,680,        if (isAxisLineVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,681,"            drawAxisLine(g2, cursor, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,684,"        List ticks = refreshTicks(g2, state, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,685,        state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,686,        g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,687,        Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,688,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,689,            ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,690,            if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,691,                g2.setPaint(getTickLabelPaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,692,"                float[] anchorPoint = calculateAnchorPoint(tick, cursor,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,694,"                TextUtilities.drawRotatedString(tick.getText(), g2,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,699,            if ((isTickMarksVisible() && tick.getTickType().equals(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,703,                double ol = (tick.getTickType().equals(TickType.MINOR)) ?,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,706,                double il = (tick.getTickType().equals(TickType.MINOR)) ?,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,709,"                float xx = (float) valueToJava2D(tick.getValue(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,711,                Line2D mark = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,712,                g2.setStroke(getTickMarkStroke());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,713,                g2.setPaint(getTickMarkPaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,714,                if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,715,"                    mark = new Line2D.Double(cursor - ol, xx, cursor + il, xx);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,717,                else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,718,"                    mark = new Line2D.Double(cursor + ol, xx, cursor - il, xx);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,720,                else if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,721,"                    mark = new Line2D.Double(xx, cursor - ol, xx, cursor + il);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,723,                else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,724,"                    mark = new Line2D.Double(xx, cursor + ol, xx, cursor - il);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,726,                g2.draw(mark);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,728,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,732,        double used = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,733,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,734,            if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,735,"                used += findMaximumTickLabelWidth(ticks, g2, plotArea,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,737,                state.cursorLeft(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,739,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,740,"                used = findMaximumTickLabelWidth(ticks, g2, plotArea,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,742,                state.cursorRight(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,744,            else if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,745,"                used = findMaximumTickLabelHeight(ticks, g2, plotArea,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,747,                state.cursorUp(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,749,            else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,750,"                used = findMaximumTickLabelHeight(ticks, g2, plotArea,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,752,                state.cursorDown(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,756,        return state;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,776,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,777,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,781,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,782,            return space;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,786,        double dimension = getFixedDimension();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,787,        if (dimension > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,788,"            space.ensureAtLeast(dimension, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,792,        double tickLabelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,793,        double tickLabelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,794,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,795,            g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,796,"            List ticks = refreshTicks(g2, new AxisState(), plotArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,797,            if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,798,"                tickLabelHeight = findMaximumTickLabelHeight(ticks, g2,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,801,            else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,802,"                tickLabelWidth = findMaximumTickLabelWidth(ticks, g2, plotArea,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,808,"        Rectangle2D labelEnclosure = getLabelEnclosure(g2, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,809,        double labelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,810,        double labelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,811,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,812,            labelHeight = labelEnclosure.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,813,"            space.add(labelHeight + tickLabelHeight, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,815,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,816,            labelWidth = labelEnclosure.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,817,"            space.add(labelWidth + tickLabelWidth, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,820,        return space;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,840,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,841,        Font font = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,842,        double maxHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,843,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,844,            FontMetrics fm = g2.getFontMetrics(font);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,845,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,846,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,847,                Tick tick = (Tick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,848,                Rectangle2D labelBounds = TextUtilities.getTextBounds(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,850,                if (labelBounds.getWidth() + insets.getTop(),0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,852,                    maxHeight = labelBounds.getWidth(),0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,855,            },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,856,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,858,"            LineMetrics metrics = font.getLineMetrics(""ABCxyz"",",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,860,            maxHeight = metrics.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,863,        return maxHeight;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,883,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,884,        Font font = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,885,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,886,        if (!vertical) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,887,            FontMetrics fm = g2.getFontMetrics(font);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,888,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,889,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,890,                Tick tick = (Tick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,891,                Rectangle2D labelBounds = TextUtilities.getTextBounds(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,893,                if (labelBounds.getWidth() + insets.getLeft(),0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,895,                    maxWidth = labelBounds.getWidth(),0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,898,            },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,899,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,901,"            LineMetrics metrics = font.getLineMetrics(""ABCxyz"",",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,903,            maxWidth = metrics.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,906,        return maxWidth;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,922,        return this.inverted;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,935,        if (this.inverted != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,936,            this.inverted = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,937,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,940,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,951,        return this.autoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,964,"        setAutoRange(auto, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,965,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,977,        if (this.autoRange != auto) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,978,            this.autoRange = auto;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,979,            if (this.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,980,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,982,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,983,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,986,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,997,        return this.autoRangeMinimumSize;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1009,"        setAutoRangeMinimumSize(size, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1010,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1023,        if (size <= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1024,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1027,        if (this.autoRangeMinimumSize != size) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1028,            this.autoRangeMinimumSize = size;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1029,            if (this.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1030,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1032,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1033,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1037,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1049,        return this.defaultAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1063,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1064,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1066,        this.defaultAutoRange = range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1067,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1068,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1081,        return this.lowerMargin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1096,        this.lowerMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1097,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1098,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1100,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1101,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1114,        return this.upperMargin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1129,        this.upperMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1130,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1131,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1133,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1134,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1144,        return this.fixedAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1155,        this.fixedAutoRange = length;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1156,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1157,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1159,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1160,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1170,        return this.range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1182,        if (this.range.getUpperBound() > min) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1183,"            setRange(new Range(min, this.range.getUpperBound()));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1186,"            setRange(new Range(min, min + 1.0));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1188,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1198,        return this.range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1210,        if (this.range.getLowerBound() < max) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1211,"            setRange(new Range(this.range.getLowerBound(), max));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1214,"            setRange(max - 1.0, max);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1216,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1226,        return this.range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1240,"        setRange(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1241,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1258,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1259,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1261,        if (turnOffAutoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1262,            this.autoRange = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1264,        this.range = range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1265,        if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1266,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1268,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1282,"        setRange(new Range(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1283,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1293,"        setRangeWithMargins(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1294,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1311,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1312,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1314,"        setRange(Range.expand(range, getLowerMargin(), getUpperMargin()),",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1316,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1327,"        setRangeWithMargins(new Range(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1328,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1338,"        setRange(new Range(value - length / 2, value + length / 2));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1339,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1351,        return this.autoTickUnitSelection;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1364,"        setAutoTickUnitSelection(flag, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1365,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1378,        if (this.autoTickUnitSelection != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1379,            this.autoTickUnitSelection = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1380,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1381,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1384,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1394,        return this.standardTickUnits;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1410,        this.standardTickUnits = source;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1411,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1412,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1424,        return this.minorTickCount;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1438,        this.minorTickCount = count;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1439,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1440,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1471,"        double zero = valueToJava2D(0.0, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1472,"        double l = valueToJava2D(length, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1473,        return Math.abs(l - zero);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1508,        double central = this.range.getCentralValue();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1509,"        Range adjusted = new Range(this.range.getLowerBound() + value - central,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1511,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1513,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1528,"        resizeRange(percent, this.range.getCentralValue());",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1529,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1545,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1546,            double halfLength = this.range.getLength() * percent / 2;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1547,"            Range adjusted = new Range(anchorValue - halfLength,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1549,            setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1550,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1552,            setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1554,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1572,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1573,            double left = anchorValue - getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1574,            double right = getUpperBound() - anchorValue;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1575,"            Range adjusted = new Range(anchorValue - left * percent,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1577,            setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1578,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1580,            setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1582,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1591,        double start = this.range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1592,        double length = this.range.getLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1593,        Range adjusted = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1594,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1595,"            adjusted = new Range(start + (length * (1 - upperPercent)),",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1599,"            adjusted = new Range(start + length * lowerPercent,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1602,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1603,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1613,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1614,        double length = range.getLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1615,        double adj = length * percent;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1616,        double lower = range.getLowerBound() + adj;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1617,        double upper = range.getUpperBound() + adj;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1618,"        setRange(lower, upper);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1619,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1629,        return this.autoTickIndex;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1640,        this.autoTickIndex = index;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1641,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1651,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1652,            return true;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1654,        if (!(obj instanceof ValueAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1655,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1657,        ValueAxis that = (ValueAxis) obj;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1658,        if (this.positiveArrowVisible != that.positiveArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1659,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1661,        if (this.negativeArrowVisible != that.negativeArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1662,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1664,        if (this.inverted != that.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1665,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1668,"        if (!this.autoRange && !ObjectUtilities.equal(this.range, that.range)) {",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1669,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1671,        if (this.autoRange != that.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1672,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1674,        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1675,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1677,        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1678,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1680,        if (this.upperMargin != that.upperMargin) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1681,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1683,        if (this.lowerMargin != that.lowerMargin) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1684,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1686,        if (this.fixedAutoRange != that.fixedAutoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1687,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1689,        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1690,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1692,"        if (!ObjectUtilities.equal(this.standardTickUnits,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1694,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1696,        if (this.verticalTickLabels != that.verticalTickLabels) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1697,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1699,        if (this.minorTickCount != that.minorTickCount) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1700,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1702,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1714,        ValueAxis clone = (ValueAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1715,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1726,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1727,"        SerialUtilities.writeShape(this.upArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1728,"        SerialUtilities.writeShape(this.downArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1729,"        SerialUtilities.writeShape(this.leftArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1730,"        SerialUtilities.writeShape(this.rightArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1731,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1744,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1745,        this.upArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1746,        this.downArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1747,        this.leftArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1748,        this.rightArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,1,1749,    },0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,77,"        this(ItemLabelAnchor.OUTSIDE12, TextAnchor.BOTTOM_CENTER,",0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,79,    },0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,112,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,116,"            throw new IllegalArgumentException(""Null 'textAnchor' argument."");",0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,119,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,136,        return this.itemLabelAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,145,        return this.textAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,154,        return this.rotationAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,163,        return this.angle;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,174,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,175,            return true;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,177,        if (!(obj instanceof ItemLabelPosition)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,178,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,180,        ItemLabelPosition that = (ItemLabelPosition) obj;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,181,        if (!this.itemLabelAnchor.equals(that.itemLabelAnchor)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,182,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,184,        if (!this.textAnchor.equals(that.textAnchor)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,185,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,187,        if (!this.rotationAnchor.equals(that.rotationAnchor)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,188,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,190,        if (this.angle != that.angle) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,191,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,1,193,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,82,        return this.name;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,94,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,95,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,97,        if (!(obj instanceof PlotOrientation)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,98,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,100,        PlotOrientation orientation = (PlotOrientation) obj;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,101,        if (!this.name.equals(orientation.toString())) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,102,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,104,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,113,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,124,        Object result = null;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,125,        if (this.equals(PlotOrientation.HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,126,            result = PlotOrientation.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,128,        else if (this.equals(PlotOrientation.VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,129,            result = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,1,131,        return result;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,78,        this.items.add(item);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,79,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,87,        this.items.addAll(collection.items);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,88,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,98,        return (LegendItem) this.items.get(index);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,116,        return this.items.iterator();,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,127,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,128,            return true;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,130,        if (!(obj instanceof LegendItemCollection)) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,131,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,133,        LegendItemCollection that = (LegendItemCollection) obj;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,134,        if (!this.items.equals(that.items)) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,135,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,137,        return true;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,149,        LegendItemCollection clone = (LegendItemCollection) super.clone();,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,150,        clone.items = (List) ObjectUtilities.deepClone(this.items);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,1,151,        return clone;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,89,"        this(1.0, 1.0, 1.0, 1.0);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,90,    },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,118,"            throw new IllegalArgumentException(""Null 'unitType' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,134,        return this.unitType;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,143,        return this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,152,        return this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,161,        return this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,170,        return this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,181,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,182,            return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,184,        if (!(obj instanceof RectangleInsets)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,185,                return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,187,        final RectangleInsets that = (RectangleInsets) obj;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,188,        if (that.unitType != this.unitType) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,189,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,191,        if (this.left != that.left) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,192,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,194,        if (this.right != that.right) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,195,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,197,        if (this.top != that.top) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,198,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,200,        if (this.bottom != that.bottom) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,201,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,203,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,214,        result = (this.unitType != null ? this.unitType.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,215,        temp = this.top != +0.0d ? Double.doubleToLongBits(this.top) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,216,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,217,        temp = this.bottom != +0.0d ? Double.doubleToLongBits(this.bottom) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,218,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,219,        temp = this.left != +0.0d ? Double.doubleToLongBits(this.left) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,220,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,221,        temp = this.right != +0.0d ? Double.doubleToLongBits(this.right) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,222,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,223,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,233,"        return ""RectangleInsets[t="" + this.top + "",l="" + this.left",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,252,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,253,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,255,        double x = base.getX();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,256,        double y = base.getY();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,257,        double w = base.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,258,        double h = base.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,259,        if (horizontal == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,260,            double leftOutset = calculateLeftOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,261,            x = x - leftOutset;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,262,            w = w + leftOutset + calculateRightOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,263,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,264,        else if (horizontal == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,265,            double leftMargin = calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,266,            x = x + leftMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,267,            w = w - leftMargin - calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,269,        if (vertical == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,270,            double topMargin = calculateTopOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,271,            y = y - topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,272,            h = h + topMargin + calculateBottomOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,273,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,274,        else if (vertical == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,275,            double topMargin = calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,276,            y = y + topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,277,            h = h - topMargin - calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,279,"        return new Rectangle2D.Double(x, y, w, h);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,290,"        return createInsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,304,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,305,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,307,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,308,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,309,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,310,            topMargin = calculateTopInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,311,            bottomMargin = calculateBottomInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,313,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,314,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,315,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,316,            leftMargin = calculateLeftInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,317,            rightMargin = calculateRightInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,319,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,335,"        return createOutsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,350,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,351,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,353,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,354,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,355,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,356,            topMargin = calculateTopOutset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,357,            bottomMargin = calculateBottomOutset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,359,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,360,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,361,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,362,            leftMargin = calculateLeftOutset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,363,            rightMargin = calculateRightOutset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,365,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,381,        double result = this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,382,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,383,            result = (this.top * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,385,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,396,        double result = this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,397,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,398,            result = (height / (1 - this.top - this.bottom)) * this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,400,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,411,        double result = this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,412,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,413,            result = (this.bottom * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,415,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,426,        double result = this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,427,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,428,            result = (height / (1 - this.top - this.bottom)) * this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,430,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,441,        double result = this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,442,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,443,            result = (this.left * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,445,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,456,        double result = this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,457,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,458,            result = (width / (1 - this.left - this.right)) * this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,460,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,471,        double result = this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,472,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,473,            result = (this.right * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,475,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,486,        double result = this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,487,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,488,            result = (width / (1 - this.left - this.right)) * this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,490,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,501,        return width - calculateLeftInset(width) - calculateRightInset(width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,512,        return width + calculateLeftOutset(width) + calculateRightOutset(width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,523,        return height,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,535,        return height,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,545,        double w = area.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,546,        double h = area.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,547,        double l = calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,548,        double r = calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,549,        double t = calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,550,        double b = calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,551,"        area.setRect(area.getX() + l, area.getY() + t, w - l - r, h - t - b);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,1,552,    },0.0,0,-1,0
org/jfree/chart/util/ObjectList,1,67,        super(initialCapacity);,0.0,0,-1,0
org/jfree/chart/util/ObjectList,1,68,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,124,"            throw new IllegalArgumentException(""Requires index >= 0."");",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,127,            Object[] enlarged = new Object[index + this.increment];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,128,"            System.arraycopy(this.objects, 0, enlarged, 0, this.objects.length);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,129,            this.objects = enlarged;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,139,"        Arrays.fill(this.objects, null);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,140,        this.size = 0;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,141,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,166,        return -1;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,178,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,179,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,182,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,183,            return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,186,        if (!(obj instanceof AbstractObjectList)) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,187,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,190,        AbstractObjectList other = (AbstractObjectList) obj;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,191,        int listSize = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,192,        for (int i = 0; i < listSize; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,193,"           if (!ObjectUtilities.equal(get(i), other.get(i))) {",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,194,               return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,197,        return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,206,        int result = 127;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,207,        int size = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,208,"        result = HashUtilities.hashCode(result, size());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,211,        if (size > 0) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,212,"            result = HashUtilities.hashCode(result, this.objects[0]);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,213,            if (size > 1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,214,"                result = HashUtilities.hashCode(result, this.objects[size - 1]);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,215,                if (size > 2) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,216,"                    result = HashUtilities.hashCode(result,",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,221,        return result;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,235,        AbstractObjectList clone = (AbstractObjectList) super.clone();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,236,        if (this.objects != null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,237,            clone.objects = new Object[this.objects.length];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,238,"            System.arraycopy(this.objects, 0, clone.objects, 0,",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,241,        return clone;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,255,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,256,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,257,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,258,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,259,            final Object object = get(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,260,            if (object != null && object instanceof Serializable) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,261,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,262,                stream.writeObject(object);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,265,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,269,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,282,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,283,        this.objects = new Object[this.size];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,284,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,285,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,286,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,287,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,288,"                set(index, stream.readObject());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,1,292,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,136,        return this.allowNull;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,142,        return lookupSeriesPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,146,        Paint result = this.paintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,147,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,148,            result = this.defaultPaint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,150,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,154,        return this.paintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,158,"        this.paintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,159,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,162,        return this.defaultPaint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,166,        if (paint == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,167,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,169,        this.defaultPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,170,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,175,        return lookupSeriesStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,179,        Stroke result = this.strokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,180,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,181,            result = this.defaultStroke;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,183,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,187,        return this.strokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,191,"        this.strokeList.setStroke(series, stroke);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,192,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,195,        return this.defaultStroke;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,199,        if (stroke == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,200,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,202,        this.defaultStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,203,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,208,        return lookupSeriesShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,212,        Shape result = this.shapeList.getShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,213,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,214,            result = this.defaultShape;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,216,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,220,        return this.shapeList.getShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,224,"        this.shapeList.setShape(series, shape);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,225,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,228,        return this.defaultShape;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,232,        if (shape == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,233,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,235,        this.defaultShape = shape;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,236,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,241,        return lookupSeriesFillPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,245,        Paint result = this.fillPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,246,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,247,            result = this.defaultFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,249,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,253,        return this.fillPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,257,"        this.fillPaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,258,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,261,        return this.defaultFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,266,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,274,        return lookupSeriesOutlinePaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,278,        Paint result = this.outlinePaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,279,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,280,            result = this.defaultOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,282,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,286,        return this.outlinePaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,290,"        this.outlinePaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,291,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,294,        return this.defaultOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,298,        if (paint == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,299,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,301,        this.defaultOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,302,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,307,        return lookupSeriesOutlineStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,311,        Stroke result = this.outlineStrokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,312,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,313,            result = this.defaultOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,315,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,319,        return this.outlineStrokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,323,"        this.outlineStrokeList.setStroke(series, stroke);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,324,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,327,        return this.defaultOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,331,        if (stroke == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,332,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,334,        this.defaultOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,335,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,340,        return lookupSeriesLabelVisible(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,344,        Boolean result = this.labelsVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,345,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,346,            result = this.defaultLabelVisible;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,348,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,352,        return this.labelsVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,356,"        this.labelsVisibleList.setBoolean(series, visible);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,357,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,360,        return this.defaultLabelVisible;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,364,        if (visible == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,365,"            throw new IllegalArgumentException(""Null 'visible' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,367,        this.defaultLabelVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,368,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,373,        return lookupSeriesLabelFont(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,377,        Font result = (Font) this.labelFontList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,378,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,379,            result = this.defaultLabelFont;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,381,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,385,        return (Font) this.labelFontList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,389,"        this.labelFontList.set(series, font);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,390,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,393,        return this.defaultLabelFont;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,397,        if (font == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,398,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,400,        this.defaultLabelFont = font;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,401,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,406,        return lookupSeriesLabelPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,410,        Paint result = this.labelPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,411,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,412,            result = this.defaultLabelPaint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,414,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,418,        return this.labelPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,422,"        this.labelPaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,423,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,426,        return this.defaultLabelPaint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,430,        if (paint == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,431,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,433,        this.defaultLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,434,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,445,        return lookupSeriesCreateEntity(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,449,        Boolean result = this.createEntityList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,450,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,451,            result = this.defaultCreateEntity;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,453,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,457,        return this.createEntityList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,461,"        this.createEntityList.setBoolean(series, visible);",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,462,    },0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,465,        return this.defaultCreateEntity;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,469,        if (create == null && !this.allowNull) {,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,470,"            throw new IllegalArgumentException(""Null 'create' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,472,        this.defaultCreateEntity = create;,0.0,0,-1,0
org/jfree/chart/renderer/RenderAttributes,1,473,    },0.0,0,-1,0
org/jfree/chart/util/BooleanList,1,71,        return (Boolean) get(index);,0.0,0,-1,0
org/jfree/chart/util/BooleanList,1,82,"        set(index, b);",0.0,0,-1,0
org/jfree/chart/util/BooleanList,1,83,    },0.0,0,-1,0
org/jfree/chart/util/BooleanList,1,93,        if (obj instanceof BooleanList) {,0.0,0,-1,0
org/jfree/chart/util/BooleanList,1,94,            return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/util/BooleanList,1,96,        return false;,0.0,0,-1,0
org/jfree/chart/util/BooleanList,1,105,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,70,        return (Paint) get(index);,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,81,"        set(index, paint);",0.0,0,-1,0
org/jfree/chart/util/PaintList,1,82,    },0.0,0,-1,0
org/jfree/chart/util/PaintList,1,92,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,93,            return false;,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,95,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,96,            return true;,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,98,        if (obj instanceof PaintList) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,99,            PaintList that = (PaintList) obj;,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,100,            int listSize = size();,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,101,            for (int i = 0; i < listSize; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,102,"               if (!PaintUtilities.equal(getPaint(i), that.getPaint(i))) {",0.0,0,-1,0
org/jfree/chart/util/PaintList,1,103,                   return false;,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,107,        return true;,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,116,        int result = 127;,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,117,        int size = size();,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,118,"        result = HashUtilities.hashCode(result, size());",0.0,0,-1,0
org/jfree/chart/util/PaintList,1,121,        if (size > 0) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,122,"            result = HashUtilities.hashCode(result, getPaint(0));",0.0,0,-1,0
org/jfree/chart/util/PaintList,1,123,            if (size > 1) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,124,"                result = HashUtilities.hashCode(result, getPaint(size - 1));",0.0,0,-1,0
org/jfree/chart/util/PaintList,1,125,                if (size > 2) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,126,"                    result = HashUtilities.hashCode(result, getPaint(size / 2));",0.0,0,-1,0
org/jfree/chart/util/PaintList,1,130,        return result;,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,142,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,143,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,144,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,145,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,146,            Paint paint = getPaint(i);,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,147,            if (paint != null) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,148,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,149,"                SerialUtilities.writePaint(paint, stream);",0.0,0,-1,0
org/jfree/chart/util/PaintList,1,152,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,156,    },0.0,0,-1,0
org/jfree/chart/util/PaintList,1,169,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,170,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,171,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,172,            final int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,173,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,1,174,"                setPaint(index, SerialUtilities.readPaint(stream));",0.0,0,-1,0
org/jfree/chart/util/PaintList,1,178,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,69,        return (Stroke) get(index);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,80,"        set(index, stroke);",0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,81,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,91,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,103,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,104,            return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,107,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,108,            return true;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,111,        if (obj instanceof StrokeList) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,112,            return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,115,        return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,125,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,137,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,138,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,139,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,140,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,141,            Stroke stroke = getStroke(i);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,142,            if (stroke != null) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,143,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,144,"                SerialUtilities.writeStroke(stroke, stream);",0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,147,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,151,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,164,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,165,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,166,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,167,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,168,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,169,"                setStroke(index, SerialUtilities.readStroke(stream));",0.0,0,-1,0
org/jfree/chart/util/StrokeList,1,173,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,70,        return (Shape) get(index);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,81,"        set(index, shape);",0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,82,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,93,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,105,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,106,            return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,108,        if (!(obj instanceof ShapeList)) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,109,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,111,        ShapeList that = (ShapeList) obj;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,112,        int listSize = size();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,113,        for (int i = 0; i < listSize; i++) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,114,"           if (!ShapeUtilities.equal((Shape) get(i), (Shape) that.get(i))) {",0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,115,               return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,118,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,128,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,140,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,141,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,142,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,143,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,144,            Shape shape = getShape(i);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,145,            if (shape != null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,146,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,147,"                SerialUtilities.writeShape(shape, stream);",0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,150,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,154,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,167,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,168,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,169,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,170,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,171,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,172,"                setShape(index, SerialUtilities.readShape(stream));",0.0,0,-1,0
org/jfree/chart/util/ShapeList,1,176,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,237,        Boolean flag = getSeriesLinesVisible(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,238,        if (flag != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,239,            return flag.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,242,            return this.baseLinesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,257,        return this.seriesLinesVisible.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,270,"        this.seriesLinesVisible.setBoolean(series, flag);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,271,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,272,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,284,"        setSeriesLinesVisible(series, Boolean.valueOf(visible));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,285,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,295,        return this.baseLinesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,307,        this.baseLinesVisible = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,308,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,309,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,323,        Boolean flag = getSeriesShapesVisible(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,324,        if (flag != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,325,            return flag.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,328,            return this.baseShapesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,343,        return this.seriesShapesVisible.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,356,"        setSeriesShapesVisible(series, Boolean.valueOf(visible));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,357,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,369,"        this.seriesShapesVisible.setBoolean(series, flag);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,370,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,371,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,381,        return this.baseShapesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,393,        this.baseShapesVisible = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,394,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,395,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,406,        return this.drawOutlines;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,422,        this.drawOutlines = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,423,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,424,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,435,        return this.useOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,448,        this.useOutlinePaint = use;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,449,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,450,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,466,        Boolean flag = getSeriesShapesFilled(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,467,        if (flag != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,468,            return flag.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,471,            return this.baseShapesFilled;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,486,        return this.seriesShapesFilled.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,499,"        this.seriesShapesFilled.setBoolean(series, filled);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,500,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,501,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,514,"        setSeriesShapesFilled(series, Boolean.valueOf(filled));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,515,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,525,        return this.baseShapesFilled;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,537,        this.baseShapesFilled = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,538,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,539,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,551,        return this.useFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,564,        this.useFillPaint = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,565,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,566,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,579,        return this.useSeriesOffset;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,594,        this.useSeriesOffset = offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,595,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,596,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,612,        return this.itemMargin;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,628,        if (margin < 0.0 || margin >= 1.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,629,"            throw new IllegalArgumentException(""Requires 0.0 <= margin < 1.0."");",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,631,        this.itemMargin = margin;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,632,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,633,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,645,        CategoryPlot cp = getPlot();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,646,        if (cp == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,647,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,650,        if (isSeriesVisible(series) && isSeriesVisibleInLegend(series)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,651,            CategoryDataset dataset = cp.getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,652,            String label = getLegendItemLabelGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,654,            String description = label;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,655,            String toolTipText = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,656,            if (getLegendItemToolTipGenerator() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,657,                toolTipText = getLegendItemToolTipGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,660,            String urlText = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,661,            if (getLegendItemURLGenerator() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,662,                urlText = getLegendItemURLGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,665,            Shape shape = lookupLegendShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,666,            Paint paint = lookupSeriesPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,667,            Paint fillPaint = (this.useFillPaint,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,669,            boolean shapeOutlineVisible = this.drawOutlines;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,670,            Paint outlinePaint = (this.useOutlinePaint,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,672,            Stroke outlineStroke = lookupSeriesOutlineStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,673,"            boolean lineVisible = getItemLineVisible(series, 0);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,674,"            boolean shapeVisible = getItemShapeVisible(series, 0);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,675,"            LegendItem result = new LegendItem(label, description, toolTipText,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,681,            result.setLabelFont(lookupLegendTextFont(series));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,682,            Paint labelPaint = lookupLegendTextPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,683,            if (labelPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,684,                result.setLabelPaint(labelPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,686,            result.setDataset(dataset);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,687,            result.setDatasetIndex(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,688,            result.setSeriesKey(dataset.getRowKey(series));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,689,            result.setSeriesIndex(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,690,            return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,692,        return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,702,        return 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,726,"        if (!getItemVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,727,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,731,"        if (!getItemLineVisible(row, column)",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,733,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,737,"        Number v = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,738,        if (v == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,739,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,742,        int visibleRow = state.getVisibleSeriesIndex(row);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,743,        if (visibleRow < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,744,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,746,		int visibleRowCount = state.getVisibleSeriesCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,748,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,752,        if (this.useSeriesOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,753,"            x1 = domainAxis.getCategorySeriesMiddle(column,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,758,"            x1 = domainAxis.getCategoryMiddle(column, getColumnCount(),",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,761,        double value = v.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,762,"        double y1 = rangeAxis.valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,765,"        if (pass == 0 && getItemLineVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,766,            if (column != 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,767,"                Number previousValue = dataset.getValue(row, column - 1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,768,                if (previousValue != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,770,                    double previous = previousValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,772,                    if (this.useSeriesOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,773,                        x0 = domainAxis.getCategorySeriesMiddle(,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,780,"                        x0 = domainAxis.getCategoryMiddle(column - 1,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,784,"                    double y0 = rangeAxis.valueToJava2D(previous, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,787,                    Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,788,                    if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,789,"                        line = new Line2D.Double(y0, x0, y1, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,791,                    else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,792,"                        line = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,794,"                    g2.setPaint(getItemPaint(row, column, selected));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,795,"                    g2.setStroke(getItemStroke(row, column, selected));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,796,                    g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,801,        if (pass == 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,802,"            Shape shape = getItemShape(row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,803,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,804,"                shape = ShapeUtilities.createTranslatedShape(shape, y1, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,806,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,807,"                shape = ShapeUtilities.createTranslatedShape(shape, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,810,"            if (getItemShapeVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,811,"                if (getItemShapeFilled(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,812,                    if (this.useFillPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,813,"                        g2.setPaint(getItemFillPaint(row, column, selected));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,816,"                        g2.setPaint(getItemPaint(row, column, selected));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,818,                    g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,820,                if (this.drawOutlines) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,821,                    if (this.useOutlinePaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,822,"                        g2.setPaint(getItemOutlinePaint(row, column,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,826,"                        g2.setPaint(getItemPaint(row, column, selected));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,828,"                    g2.setStroke(getItemOutlineStroke(row, column, selected));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,829,                    g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,834,"            if (isItemLabelVisible(row, column, selected)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,835,                if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,836,"                    drawItemLabel(g2, orientation, dataset, row, column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,839,                else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,840,"                    drawItemLabel(g2, orientation, dataset, row, column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,846,            int datasetIndex = plot.indexOf(dataset);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,847,"            updateCrosshairValues(state.getCrosshairState(),",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,852,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,853,            if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,854,"                addEntity(entities, shape, dataset, row, column, selected);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,858,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,869,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,870,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,872,        if (!(obj instanceof LineAndShapeRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,873,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,876,        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,877,        if (this.baseLinesVisible != that.baseLinesVisible) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,878,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,880,"        if (!ObjectUtilities.equal(this.seriesLinesVisible,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,882,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,884,        if (this.baseShapesVisible != that.baseShapesVisible) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,885,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,887,"        if (!ObjectUtilities.equal(this.seriesShapesVisible,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,889,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,891,"        if (!ObjectUtilities.equal(this.seriesShapesFilled,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,893,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,895,        if (this.baseShapesFilled != that.baseShapesFilled) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,896,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,898,        if (this.useOutlinePaint != that.useOutlinePaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,899,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,901,        if (this.useSeriesOffset != that.useSeriesOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,902,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,904,        if (this.itemMargin != that.itemMargin) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,905,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,907,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,918,        LineAndShapeRenderer clone = (LineAndShapeRenderer) super.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,919,        clone.seriesLinesVisible,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,921,        clone.seriesShapesVisible,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,923,        clone.seriesShapesFilled,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,1,925,        return clone;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,134,        return this.name;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,147,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,148,            return true;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,150,        if (!(obj instanceof TextAnchor)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,151,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,154,        TextAnchor order = (TextAnchor) obj;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,155,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,156,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,159,        return true;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,168,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,179,        TextAnchor result = null;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,180,        if (this.equals(TextAnchor.TOP_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,181,            result = TextAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,183,        else if (this.equals(TextAnchor.TOP_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,184,            result = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,186,        else if (this.equals(TextAnchor.TOP_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,187,            result = TextAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,189,        else if (this.equals(TextAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,190,            result = TextAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,192,        else if (this.equals(TextAnchor.BOTTOM_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,193,            result = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,195,        else if (this.equals(TextAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,196,            result = TextAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,198,        else if (this.equals(TextAnchor.BASELINE_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,199,            result = TextAnchor.BASELINE_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,201,        else if (this.equals(TextAnchor.BASELINE_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,202,            result = TextAnchor.BASELINE_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,204,        else if (this.equals(TextAnchor.BASELINE_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,205,            result = TextAnchor.BASELINE_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,207,        else if (this.equals(TextAnchor.CENTER_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,208,            result = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,210,        else if (this.equals(TextAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,211,            result = TextAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,213,        else if (this.equals(TextAnchor.CENTER_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,214,            result = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,216,        else if (this.equals(TextAnchor.HALF_ASCENT_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,217,            result = TextAnchor.HALF_ASCENT_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,219,        else if (this.equals(TextAnchor.HALF_ASCENT_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,220,            result = TextAnchor.HALF_ASCENT_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,222,        else if (this.equals(TextAnchor.HALF_ASCENT_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,223,            result = TextAnchor.HALF_ASCENT_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,1,225,        return result;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,85,"            throw new IllegalArgumentException(""Null 'format' argument."");",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,99,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,100,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,102,"        String label = MessageFormat.format(this.formatPattern,",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,104,        return label;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,117,        Object[] result = new Object[1];,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,118,        result[0] = dataset.getRowKey(series).toString();,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,119,        return result;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,130,        return super.clone();,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,141,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,142,            return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,144,        if (!(obj instanceof StandardCategorySeriesLabelGenerator)) {,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,145,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,147,        StandardCategorySeriesLabelGenerator that,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,149,        if (!this.formatPattern.equals(that.formatPattern)) {,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,150,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,152,        return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,161,        int result = 127;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,162,"        result = HashUtilities.hashCode(result, this.formatPattern);",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,1,163,        return result;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,75,"        this(area, plot, null);",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,76,    },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,87,"        this(area, plot, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,88,    },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,100,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,101,        if (plot == null) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,102,"            throw new IllegalArgumentException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,105,        this.plot = plot;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,106,    },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,114,        return this.plot;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,124,"        StringBuffer buf = new StringBuffer(""PlotEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,125,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,126,        buf.append(getToolTipText());,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,127,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,138,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,139,            return true;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,141,        if (!(obj instanceof PlotEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,142,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,144,        PlotEntity that = (PlotEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,145,        if (!getArea().equals(that.getArea())) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,146,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,148,"        if (!ObjectUtilities.equal(getToolTipText(), that.getToolTipText())) {",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,149,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,151,"        if (!ObjectUtilities.equal(getURLText(), that.getURLText())) {",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,152,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,154,        if (!(this.plot.equals(that.plot))) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,155,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,157,        return true;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,166,        int result = 39;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,167,"        result = HashUtilities.hashCode(result, getToolTipText());",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,168,"        result = HashUtilities.hashCode(result, getURLText());",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,169,        return result;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,181,        return super.clone();,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,192,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,193,"        SerialUtilities.writeShape(getArea(), stream);",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,194,     },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,206,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,207,        setArea(SerialUtilities.readShape(stream));,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,1,208,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,85,        return this.name;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,99,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,101,        if (!(obj instanceof CategoryAnchor)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,102,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,104,        CategoryAnchor position = (CategoryAnchor) obj;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,105,        if (!this.name.equals(position.toString())) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,106,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,108,        return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,120,        if (this.equals(CategoryAnchor.START)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,121,            return CategoryAnchor.START;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,123,        else if (this.equals(CategoryAnchor.MIDDLE)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,124,            return CategoryAnchor.MIDDLE;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,126,        else if (this.equals(CategoryAnchor.END)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,127,            return CategoryAnchor.END;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,1,129,        return null;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,96,        return getOpposite(this);,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,105,        return this.name;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,118,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,119,            return true;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,121,        if (!(obj instanceof AxisLocation)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,122,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,124,        AxisLocation location = (AxisLocation) obj;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,125,        if (!this.name.equals(location.toString())) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,126,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,128,        return true;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,140,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,141,"            throw new IllegalArgumentException(""Null 'location' argument."");",0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,143,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,144,        if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,145,            result = AxisLocation.BOTTOM_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,147,        else if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,148,            result = AxisLocation.BOTTOM_OR_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,150,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,151,            result = AxisLocation.TOP_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,153,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,154,            result = AxisLocation.TOP_OR_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,157,"            throw new IllegalStateException(""AxisLocation not recognised."");",0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,159,        return result;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,170,        if (this.equals(AxisLocation.TOP_OR_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,171,            return AxisLocation.TOP_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,173,        else if (this.equals(AxisLocation.BOTTOM_OR_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,174,            return AxisLocation.BOTTOM_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,176,        else if (this.equals(AxisLocation.TOP_OR_LEFT)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,177,            return AxisLocation.TOP_OR_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,179,        else if (this.equals(AxisLocation.BOTTOM_OR_LEFT)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,180,            return AxisLocation.BOTTOM_OR_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,1,182,        return null;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,171,                                  Shape[] shapeSequence) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,173,        this.paintSequence = paintSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,174,        this.fillPaintSequence = DEFAULT_FILL_PAINT_SEQUENCE;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,175,        this.outlinePaintSequence = outlinePaintSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,176,        this.strokeSequence = strokeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,177,        this.outlineStrokeSequence = outlineStrokeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,178,        this.shapeSequence = shapeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,180,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,213,        Paint result,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,215,        this.paintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,216,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,225,        Paint result = this.outlinePaintSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,227,        this.outlinePaintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,228,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,239,        Paint result = this.fillPaintSequence[this.fillPaintIndex,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,241,        this.fillPaintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,242,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,251,        Stroke result = this.strokeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,253,        this.strokeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,254,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,263,        Stroke result = this.outlineStrokeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,265,        this.outlineStrokeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,266,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,275,        Shape result = this.shapeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,277,        this.shapeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,278,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,348,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,349,            return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,352,        if (!(obj instanceof DefaultDrawingSupplier)) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,353,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,356,        DefaultDrawingSupplier that = (DefaultDrawingSupplier) obj;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,358,"        if (!Arrays.equals(this.paintSequence, that.paintSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,359,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,361,        if (this.paintIndex != that.paintIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,362,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,364,"        if (!Arrays.equals(this.outlinePaintSequence,",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,366,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,368,        if (this.outlinePaintIndex != that.outlinePaintIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,369,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,371,"        if (!Arrays.equals(this.strokeSequence, that.strokeSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,372,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,374,        if (this.strokeIndex != that.strokeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,375,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,377,"        if (!Arrays.equals(this.outlineStrokeSequence,",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,379,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,381,        if (this.outlineStrokeIndex != that.outlineStrokeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,382,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,384,"        if (!equalShapes(this.shapeSequence, that.shapeSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,385,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,387,        if (this.shapeIndex != that.shapeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,388,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,390,        return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,403,        if (s1 == null) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,404,            return s2 == null;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,406,        if (s2 == null) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,407,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,409,        if (s1.length != s2.length) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,410,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,412,        for (int i = 0; i < s1.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,413,"            if (!ShapeUtilities.equal(s1[i], s2[i])) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,414,                return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,417,        return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,428,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,430,        int paintCount = this.paintSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,431,        stream.writeInt(paintCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,432,        for (int i = 0; i < paintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,433,"            SerialUtilities.writePaint(this.paintSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,436,        int outlinePaintCount = this.outlinePaintSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,437,        stream.writeInt(outlinePaintCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,438,        for (int i = 0; i < outlinePaintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,439,"            SerialUtilities.writePaint(this.outlinePaintSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,442,        int strokeCount = this.strokeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,443,        stream.writeInt(strokeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,444,        for (int i = 0; i < strokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,445,"            SerialUtilities.writeStroke(this.strokeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,448,        int outlineStrokeCount = this.outlineStrokeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,449,        stream.writeInt(outlineStrokeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,450,        for (int i = 0; i < outlineStrokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,451,"            SerialUtilities.writeStroke(this.outlineStrokeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,454,        int shapeCount = this.shapeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,455,        stream.writeInt(shapeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,456,        for (int i = 0; i < shapeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,457,"            SerialUtilities.writeShape(this.shapeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,460,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,472,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,474,        int paintCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,475,        this.paintSequence = new Paint[paintCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,476,        for (int i = 0; i < paintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,477,            this.paintSequence[i] = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,480,        int outlinePaintCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,481,        this.outlinePaintSequence = new Paint[outlinePaintCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,482,        for (int i = 0; i < outlinePaintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,483,            this.outlinePaintSequence[i] = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,486,        int strokeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,487,        this.strokeSequence = new Stroke[strokeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,488,        for (int i = 0; i < strokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,489,            this.strokeSequence[i] = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,492,        int outlineStrokeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,493,        this.outlineStrokeSequence = new Stroke[outlineStrokeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,494,        for (int i = 0; i < outlineStrokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,495,            this.outlineStrokeSequence[i] = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,498,        int shapeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,499,        this.shapeSequence = new Shape[shapeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,500,        for (int i = 0; i < shapeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,501,            this.shapeSequence[i] = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,504,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,544,        DefaultDrawingSupplier clone = (DefaultDrawingSupplier) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,1,545,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,90,        return this.name;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,102,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,103,            return true;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,105,        if (!(obj instanceof DatasetRenderingOrder)) {,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,106,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,108,        DatasetRenderingOrder order = (DatasetRenderingOrder) obj;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,109,        if (!this.name.equals(order.toString())) {,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,110,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,112,        return true;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,121,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,132,        if (this.equals(DatasetRenderingOrder.FORWARD)) {,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,133,            return DatasetRenderingOrder.FORWARD;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,135,        else if (this.equals(DatasetRenderingOrder.REVERSE)) {,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,136,            return DatasetRenderingOrder.REVERSE;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,1,138,        return null;,0.0,0,-1,0
org/jfree/chart/ChartColor,1,139,"        super(r, g, b);",0.0,0,-1,0
org/jfree/chart/ChartColor,1,140,    },0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,82,    private ResourceBundleWrapper() {,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,84,    },0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,98,        List urlsNoBase = new ArrayList();,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,100,        URL[] urls = urlClassLoader.getURLs();,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,101,        for (int i = 0; i < urls.length; i++) {,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,102,            if (! urls[i].sameFile(codeBase)) {,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,103,                urlsNoBase.add(urls[i]);,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,107,        URL[] urlsNoBaseArray = (URL[]) urlsNoBase.toArray(new URL[0]);,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,108,        noCodeBaseClassLoader = URLClassLoader.newInstance(urlsNoBaseArray);,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,109,    },0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,123,"            return ResourceBundle.getBundle(baseName, Locale.getDefault(),",0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,146,        if (noCodeBaseClassLoader != null) {,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,147,"            return ResourceBundle.getBundle(baseName, locale,",0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,152,"            return ResourceBundle.getBundle(baseName, locale);",0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,1,168,"        return ResourceBundle.getBundle(baseName, locale, loader);",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,69,        this(GradientPaintTransformType.VERTICAL);,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,70,    },0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,77,    public StandardGradientPaintTransformer(GradientPaintTransformType type) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,78,        if (type == null) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,79,"            throw new IllegalArgumentException(""Null 'type' argument."");",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,81,        this.type = type;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,82,    },0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,90,        return this.type;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,104,        GradientPaint result = paint;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,105,        Rectangle2D bounds = target.getBounds2D();,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,107,        if (this.type.equals(GradientPaintTransformType.VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,108,"            result = new GradientPaint((float) bounds.getCenterX(),",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,113,        else if (this.type.equals(GradientPaintTransformType.HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,114,"            result = new GradientPaint((float) bounds.getMinX(),",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,119,        else if (this.type.equals(,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,121,"            result = new GradientPaint((float) bounds.getCenterX(),",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,126,        else if (this.type.equals(GradientPaintTransformType.CENTER_VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,127,"            result = new GradientPaint((float) bounds.getCenterX(),",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,133,        return result;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,144,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,145,            return true;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,147,        if (!(obj instanceof StandardGradientPaintTransformer)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,148,            return false;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,150,        StandardGradientPaintTransformer that,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,152,        if (this.type != that.type) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,153,            return false;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,155,        return true;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,168,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,1,177,        return (this.type != null ? this.type.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,82,    private GradientPaintTransformType(String name) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,83,        this.name = name;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,84,    },0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,56,    public static final GradientPaintTransformType VERTICAL,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,60,    public static final GradientPaintTransformType HORIZONTAL,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,65,    public static final GradientPaintTransformType CENTER_VERTICAL,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,70,    public static final GradientPaintTransformType CENTER_HORIZONTAL,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,92,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,105,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,106,            return true;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,108,        if (!(obj instanceof GradientPaintTransformType)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,109,            return false;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,112,        GradientPaintTransformType t = (GradientPaintTransformType) obj;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,113,        if (!this.name.equals(t.name)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,114,            return false;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,117,        return true;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,126,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,137,        GradientPaintTransformType result = null;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,138,        if (this.equals(GradientPaintTransformType.HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,139,            result = GradientPaintTransformType.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,141,        else if (this.equals(GradientPaintTransformType.VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,142,            result = GradientPaintTransformType.VERTICAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,144,        else if (this.equals(GradientPaintTransformType.CENTER_HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,145,            result = GradientPaintTransformType.CENTER_HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,147,        else if (this.equals(GradientPaintTransformType.CENTER_VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,148,            result = GradientPaintTransformType.CENTER_VERTICAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,1,150,        return result;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,93,"            throw new IllegalArgumentException(""Null 'color' argument."");",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,108,        return this.shadowSize;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,117,        return this.shadowColor;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,126,        return this.shadowOpacity;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,135,        return this.distance;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,144,        return this.angle;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,154,        return (int) (Math.cos(this.angle) * this.distance) - this.shadowSize;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,164,        return -(int) (Math.sin(this.angle) * this.distance) - this.shadowSize;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,176,        BufferedImage subject = new BufferedImage(,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,181,        Graphics2D g2 = subject.createGraphics();,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,182,"        g2.drawImage(source, null, shadowSize, shadowSize);",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,183,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,184,        applyShadow(subject);,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,185,        return subject;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,194,        int dstWidth = image.getWidth();,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,195,        int dstHeight = image.getHeight();,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,197,        int left = (shadowSize - 1) >> 1;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,198,        int right = shadowSize - left;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,199,        int xStart = left;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,200,        int xStop = dstWidth - right;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,201,        int yStart = left;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,202,        int yStop = dstHeight - right;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,204,        int shadowRgb = shadowColor.getRGB() & 0x00FFFFFF;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,206,        int[] aHistory = new int[shadowSize];,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,207,        int historyIdx = 0;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,211,        int[] dataBuffer = ((DataBufferInt) image.getRaster().getDataBuffer()).getData();,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,212,        int lastPixelOffset = right * dstWidth;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,213,        float sumDivider = shadowOpacity / shadowSize;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,217,"        for (int y = 0, bufferOffset = 0; y < dstHeight; y++, bufferOffset = y * dstWidth) {",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,218,            aSum = 0;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,219,            historyIdx = 0;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,220,"            for (int x = 0; x < shadowSize; x++, bufferOffset++) {",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,221,                int a = dataBuffer[bufferOffset] >>> 24;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,222,                aHistory[x] = a;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,223,                aSum += a;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,226,            bufferOffset -= right;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,228,"            for (int x = xStart; x < xStop; x++, bufferOffset++) {",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,229,                int a = (int) (aSum * sumDivider);,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,230,                dataBuffer[bufferOffset] = a << 24 | shadowRgb;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,233,                aSum -= aHistory[historyIdx];,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,236,                a = dataBuffer[bufferOffset + right] >>> 24;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,237,                aHistory[historyIdx] = a;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,238,                aSum += a;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,240,                if (++historyIdx >= shadowSize) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,241,                    historyIdx -= shadowSize;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,247,"        for (int x = 0, bufferOffset = 0; x < dstWidth; x++, bufferOffset = x) {",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,248,            aSum = 0;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,249,            historyIdx = 0;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,250,"            for (int y = 0; y < shadowSize; y++, bufferOffset += dstWidth) {",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,251,                int a = dataBuffer[bufferOffset] >>> 24;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,252,                aHistory[y] = a;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,253,                aSum += a;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,256,            bufferOffset -= lastPixelOffset;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,258,"            for (int y = yStart; y < yStop; y++, bufferOffset += dstWidth) {",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,259,                int a = (int) (aSum * sumDivider);,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,260,                dataBuffer[bufferOffset] = a << 24 | shadowRgb;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,263,                aSum -= aHistory[historyIdx];,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,266,                a = dataBuffer[bufferOffset + lastPixelOffset] >>> 24;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,267,                aHistory[historyIdx] = a;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,268,                aSum += a;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,270,                if (++historyIdx >= shadowSize) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,271,                    historyIdx -= shadowSize;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,275,    },0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,285,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,286,            return true;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,288,        if (!(obj instanceof DefaultShadowGenerator)) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,289,            return false;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,291,        DefaultShadowGenerator that = (DefaultShadowGenerator) obj;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,292,        if (this.shadowSize != that.shadowSize) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,293,            return false;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,295,        if (!this.shadowColor.equals(that.shadowColor)) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,296,            return false;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,298,        if (this.shadowOpacity != that.shadowOpacity) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,299,            return false;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,301,        if (this.distance != that.distance) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,302,            return false;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,304,        if (this.angle != that.angle) {,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,305,            return false;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,307,        return true;,0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,316,"        int hash = HashUtilities.hashCode(17, this.shadowSize);",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,317,"        hash = HashUtilities.hashCode(hash, this.shadowColor);",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,318,"        hash = HashUtilities.hashCode(hash, this.shadowOpacity);",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,319,"        hash = HashUtilities.hashCode(hash, this.distance);",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,320,"        hash = HashUtilities.hashCode(hash, this.angle);",0.0,0,-1,0
org/jfree/chart/util/DefaultShadowGenerator,1,321,        return hash;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,79,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,91,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,92,            return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,94,        if (!(obj instanceof UnitType)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,95,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,97,        UnitType that = (UnitType) obj;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,98,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,99,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,101,        return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,110,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,121,        if (this.equals(UnitType.ABSOLUTE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,122,            return UnitType.ABSOLUTE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,124,        else if (this.equals(UnitType.RELATIVE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,125,            return UnitType.RELATIVE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,1,127,        return null;,0.0,0,-1,0
