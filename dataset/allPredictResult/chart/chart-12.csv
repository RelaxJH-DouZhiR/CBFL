project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/jfree/chart/plot/MultiplePiePlot,12,135,        this(null);,0.5,0,1,0
org/jfree/chart/plot/MultiplePiePlot,12,136,    },0.5,0,1,0
org/jfree/data/general/AbstractDataset,12,160,        List list = Arrays.asList(this.listenerList.getListenerList());,0.5,0,1,0
org/jfree/data/general/AbstractDataset,12,161,        return list.contains(listener);,0.5,0,0,0
org/jfree/chart/plot/MultiplePiePlot,12,144,        super();,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,111,    private double limit = 0.0;,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,145,        this.dataset = dataset;,0.33333,1,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,146,        PiePlot piePlot = new PiePlot(null);,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,147,        this.pieChart = new JFreeChart(piePlot);,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,148,        this.pieChart.removeLegend();,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,149,        this.dataExtractOrder = TableOrder.BY_COLUMN;,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,150,        this.pieChart.setBackgroundPaint(null);,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,151,"        TextTitle seriesTitle = new TextTitle(""Series Title"",",0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,153,        seriesTitle.setPosition(RectangleEdge.BOTTOM);,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,154,        this.pieChart.setTitle(seriesTitle);,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,155,"        this.aggregatedItemsKey = ""Other"";",0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,156,        this.aggregatedItemsPaint = Color.lightGray;,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,157,        this.sectionPaints = new HashMap();,0.33333,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,158,    },0.33333,0,-1,0
org/jfree/chart/JFreeChart,12,664,        removeSubtitle(getLegend());,0.33333,0,-1,0
org/jfree/chart/JFreeChart,12,665,    },0.33333,0,-1,0
org/jfree/chart/JFreeChart,12,795,        this.subtitles.remove(title);,0.33333,0,-1,0
org/jfree/chart/JFreeChart,12,796,        fireChartChanged();,0.33333,0,-1,0
org/jfree/chart/JFreeChart,12,797,    },0.33333,0,-1,0
org/jfree/chart/util/TableOrder,12,69,    private TableOrder(String name) {,0.33333,0,-1,0
org/jfree/chart/util/TableOrder,12,70,        this.name = name;,0.33333,0,-1,0
org/jfree/chart/util/TableOrder,12,71,    },0.33333,0,-1,0
org/jfree/chart/util/TableOrder,12,55,"    public static final TableOrder BY_ROW = new TableOrder(""TableOrder.BY_ROW"");",0.33333,0,-1,0
org/jfree/chart/util/TableOrder,12,58,    public static final TableOrder BY_COLUMN ,0.33333,0,-1,0
org/jfree/chart/title/LegendTitle,12,542,            return true;   ,0.33333,0,-1,0
org/jfree/chart/JFreeChart,12,571,        if (this.title != null) {,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,574,        this.title = title;,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,575,        if (title != null) {,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,576,            title.addChangeListener(this);,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,578,        fireChartChanged();,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,579,    },0.25,0,-1,0
org/jfree/chart/JFreeChart,12,959,        if (this.backgroundPaint != null) {,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,960,            if (!this.backgroundPaint.equals(paint)) {,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,961,                this.backgroundPaint = paint;,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,962,                fireChartChanged();,0.25,0,-1,0
org/jfree/chart/JFreeChart,12,972,    },0.25,0,-1,0
org/jfree/chart/JFreeChart,12,628,        return getLegend(0);,0.2,0,-1,0
org/jfree/chart/JFreeChart,12,641,        int seen = 0;,0.2,0,-1,0
org/jfree/chart/JFreeChart,12,642,        Iterator iterator = this.subtitles.iterator();,0.2,0,-1,0
org/jfree/chart/JFreeChart,12,643,        while (iterator.hasNext()) {,0.2,0,-1,0
org/jfree/chart/JFreeChart,12,644,            Title subtitle = (Title) iterator.next();,0.2,0,-1,0
org/jfree/chart/JFreeChart,12,645,            if (subtitle instanceof LegendTitle) {,0.2,0,-1,0
org/jfree/chart/JFreeChart,12,646,                if (seen == index) {,0.2,0,-1,0
org/jfree/chart/JFreeChart,12,647,                    return (LegendTitle) subtitle;,0.2,0,-1,0
org/jfree/chart/JFreeChart,12,1486,        ChartChangeEvent event = new ChartChangeEvent(this);,0.16667,0,-1,0
org/jfree/chart/JFreeChart,12,1487,        notifyListeners(event);,0.16667,0,-1,0
org/jfree/chart/JFreeChart,12,1488,    },0.16667,0,-1,0
org/jfree/chart/JFreeChart,12,327,"        this(null, null, plot, true);",0.125,0,-1,0
org/jfree/chart/JFreeChart,12,328,    },0.125,0,-1,0
org/jfree/chart/title/LegendTitle,12,541,        if (obj == this) {,0.09091,0,-1,0
org/jfree/chart/PaintMap,12,77,    public PaintMap() {,0.03125,0,-1,0
org/jfree/chart/PaintMap,12,78,        this.store = new HashMap();    ,0.03125,0,-1,0
org/jfree/chart/PaintMap,12,79,    },0.03125,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,74,    private PieLabelLinkStyle(String name) {,0.03125,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,75,        this.name = name;,0.03125,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,76,    },0.03125,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,55,    public static final PieLabelLinkStyle STANDARD,0.03125,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,59,    public static final PieLabelLinkStyle QUAD_CURVE,0.03125,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,63,    public static final PieLabelLinkStyle CUBIC_CURVE,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,504,        super();,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,321,    private transient Paint shadowPaint = Color.gray;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,324,    private double shadowXOffset = 4.0f;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,327,    private double shadowYOffset = 4.0f;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,370,    private boolean simpleLabels = true;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,388,    private double maximumLabelWidth = 0.14;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,394,    private double labelGap = 0.025;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,404,    private PieLabelLinkStyle labelLinkStyle = PieLabelLinkStyle.STANDARD;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,407,    private double labelLinkMargin = 0.025;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,410,    private transient Paint labelLinkPaint = Color.black;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,413,    private transient Stroke labelLinkStroke = new BasicStroke(0.5f);,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,505,        this.dataset = dataset;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,506,        if (dataset != null) {,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,509,        this.pieIndex = 0;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,511,        this.interiorGap = DEFAULT_INTERIOR_GAP;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,512,        this.circular = true;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,513,        this.startAngle = DEFAULT_START_ANGLE;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,514,        this.direction = Rotation.CLOCKWISE;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,515,        this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,517,        this.sectionPaintMap = new PaintMap();,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,518,        this.baseSectionPaint = Color.gray;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,520,        this.sectionOutlinesVisible = true;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,521,        this.sectionOutlinePaintMap = new PaintMap();,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,522,        this.baseSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,524,        this.sectionOutlineStrokeMap = new StrokeMap();,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,525,        this.baseSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,527,        this.explodePercentages = new TreeMap();,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,529,        this.labelGenerator = new StandardPieSectionLabelGenerator();,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,530,        this.labelFont = DEFAULT_LABEL_FONT;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,531,        this.labelPaint = DEFAULT_LABEL_PAINT;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,532,        this.labelBackgroundPaint = DEFAULT_LABEL_BACKGROUND_PAINT;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,533,        this.labelOutlinePaint = DEFAULT_LABEL_OUTLINE_PAINT;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,534,        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,535,        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,536,        this.labelLinksVisible = true;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,537,        this.labelDistributor = new PieLabelDistributor(0);,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,539,        this.simpleLabels = false;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,540,"        this.simpleLabelOffset = new RectangleInsets(UnitType.RELATIVE, 0.18, ",0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,542,"        this.labelPadding = new RectangleInsets(2, 2, 2, 2);",0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,544,        this.toolTipGenerator = null;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,545,        this.urlGenerator = null;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,546,        this.legendLabelGenerator = new StandardPieSectionLabelGenerator();,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,547,        this.legendLabelToolTipGenerator = null;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,548,        this.legendLabelURLGenerator = null;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,549,        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,551,        this.ignoreNullValues = false;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,552,        this.ignoreZeroValues = false;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,553,    },0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,251,"    public static final Font DEFAULT_LABEL_FONT = new Font(""SansSerif"", ",0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,255,    public static final Paint DEFAULT_LABEL_PAINT = Color.black;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,258,"    public static final Paint DEFAULT_LABEL_BACKGROUND_PAINT = new Color(255, ",0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,262,    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.black;,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,265,    public static final Stroke DEFAULT_LABEL_OUTLINE_STROKE = new BasicStroke(,0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,269,"    public static final Paint DEFAULT_LABEL_SHADOW_PAINT = new Color(151, 151, ",0.03125,0,-1,0
org/jfree/chart/plot/PiePlot,12,468,    protected static ResourceBundle localizationResources =,0.03125,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,60,    public AbstractPieLabelDistributor() {,0.03125,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,61,        this.labels = new java.util.ArrayList();,0.03125,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,62,    },0.03125,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,63,        super();,0.03125,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,55,    private double minGap = 4.0;,0.03125,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,64,    },0.03125,0,-1,0
org/jfree/chart/util/Rotation,12,81,"    private Rotation(final String name, final double factor) {",0.03125,0,-1,0
org/jfree/chart/util/Rotation,12,82,        this.name = name;,0.03125,0,-1,0
org/jfree/chart/util/Rotation,12,83,        this.factor = factor;,0.03125,0,-1,0
org/jfree/chart/util/Rotation,12,84,    },0.03125,0,-1,0
org/jfree/chart/util/Rotation,12,59,    public static final Rotation CLOCKWISE ,0.03125,0,-1,0
org/jfree/chart/util/Rotation,12,63,    public static final Rotation ANTICLOCKWISE ,0.03125,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,90,"        this(DEFAULT_SECTION_LABEL_FORMAT, NumberFormat.getNumberInstance(), ",0.03125,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,92,    },0.03125,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,141,"        super(labelFormat, numberFormat, percentFormat);",0.03125,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,142,        this.attributedLabels = new ObjectList();,0.03125,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,143,    },0.03125,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,82,                                            NumberFormat percentFormat) {,0.03125,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,84,        if (labelFormat == null) {,0.03125,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,87,        if (numberFormat == null) {,0.03125,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,90,        if (percentFormat == null) {,0.03125,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,95,        this.labelFormat = labelFormat;,0.03125,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,96,        this.numberFormat = numberFormat;,0.03125,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,97,        this.percentFormat = percentFormat;,0.03125,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,99,    },0.03125,0,-1,0
org/jfree/chart/StrokeMap,12,75,    public StrokeMap() {,0.03125,0,-1,0
org/jfree/chart/StrokeMap,12,76,        this.store = new TreeMap();    ,0.03125,0,-1,0
org/jfree/chart/StrokeMap,12,77,    },0.03125,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,95,        this(false);,0.02,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,96,    },0.02,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,103,    public DefaultKeyedValues2D(boolean sortRowKeys) {,0.02,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,104,        this.rowKeys = new java.util.ArrayList();,0.02,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,105,        this.columnKeys = new java.util.ArrayList();,0.02,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,106,        this.rows = new java.util.ArrayList();,0.02,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,107,        this.sortRowKeys = sortRowKeys;,0.02,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,108,    },0.02,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,73,    public DefaultCategoryDataset() {,0.02,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,74,        this.data = new DefaultKeyedValues2D();,0.02,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,75,    },0.02,0,-1,0
org/jfree/chart/JFreeChart,12,1497,        if (this.notify) {,0.01299,0,-1,0
org/jfree/chart/JFreeChart,12,1498,            Object[] listeners = this.changeListeners.getListenerList();,0.01299,0,-1,0
org/jfree/chart/JFreeChart,12,1499,            for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.01299,0,-1,0
org/jfree/chart/JFreeChart,12,1506,    },0.01299,0,-1,0
org/jfree/chart/JFreeChart,12,393,            LegendTitle legend = new LegendTitle(this.plot);,0.01053,0,-1,0
org/jfree/chart/JFreeChart,12,394,"            legend.setMargin(new RectangleInsets(1.0, 1.0, 1.0, 1.0));",0.01053,0,-1,0
org/jfree/chart/JFreeChart,12,395,            legend.setFrame(new LineBorder());,0.01053,0,-1,0
org/jfree/chart/JFreeChart,12,396,            legend.setBackgroundPaint(Color.white);,0.01053,0,-1,0
org/jfree/chart/JFreeChart,12,397,            legend.setPosition(RectangleEdge.BOTTOM);,0.01053,0,-1,0
org/jfree/chart/JFreeChart,12,398,            this.subtitles.add(legend);,0.01053,0,-1,0
org/jfree/chart/JFreeChart,12,399,            legend.addChangeListener(this);,0.01053,0,-1,0
org/jfree/chart/block/AbstractBlock,12,209,        if (margin == null) {,0.01053,0,-1,0
org/jfree/chart/block/AbstractBlock,12,212,        this.margin = margin;,0.01053,0,-1,0
org/jfree/chart/block/AbstractBlock,12,213,    },0.01053,0,-1,0
org/jfree/chart/block/AbstractBlock,12,251,        if (frame == null) {,0.01053,0,-1,0
org/jfree/chart/block/AbstractBlock,12,254,        this.frame = frame;,0.01053,0,-1,0
org/jfree/chart/block/AbstractBlock,12,255,    },0.01053,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,78,    public ColumnArrangement() {   ,0.01053,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,79,    },0.01053,0,-1,0
org/jfree/chart/block/BlockContainer,12,95,    public BlockContainer(Arrangement arrangement) {,0.01053,0,-1,0
org/jfree/chart/block/BlockContainer,12,96,        if (arrangement == null) {,0.01053,0,-1,0
org/jfree/chart/block/BlockContainer,12,99,        this.arrangement = arrangement;,0.01053,0,-1,0
org/jfree/chart/block/BlockContainer,12,100,        this.blocks = new ArrayList();,0.01053,0,-1,0
org/jfree/chart/block/BlockContainer,12,101,    }    ,0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,82,"        this(Color.black, new BasicStroke(1.0f), new RectangleInsets(1.0, 1.0, ",0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,84,    },0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,93,"    public LineBorder(Paint paint, Stroke stroke, RectangleInsets insets) {",0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,94,        if (paint == null) {,0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,97,        if (stroke == null) {,0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,100,        if (insets == null) {,0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,103,        this.paint = paint;,0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,104,        this.stroke = stroke;,0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,105,        this.insets = insets;,0.01053,0,-1,0
org/jfree/chart/block/LineBorder,12,106,    }  ,0.01053,0,-1,0
org/jfree/chart/block/FlowArrangement,12,80,"        this(HorizontalAlignment.CENTER, VerticalAlignment.CENTER, 2.0, 2.0);",0.01053,0,-1,0
org/jfree/chart/block/FlowArrangement,12,81,    },0.01053,0,-1,0
org/jfree/chart/block/FlowArrangement,12,92,"                           double hGap, double vGap) {   ",0.01053,0,-1,0
org/jfree/chart/block/FlowArrangement,12,93,        this.horizontalAlignment = hAlign;,0.01053,0,-1,0
org/jfree/chart/block/FlowArrangement,12,94,        this.verticalAlignment = vAlign;,0.01053,0,-1,0
org/jfree/chart/block/FlowArrangement,12,95,        this.horizontalGap = hGap;,0.01053,0,-1,0
org/jfree/chart/block/FlowArrangement,12,96,        this.verticalGap = vGap;,0.01053,0,-1,0
org/jfree/chart/block/FlowArrangement,12,97,    },0.01053,0,-1,0
org/jfree/chart/title/Title,12,131,"        this(Title.DEFAULT_POSITION,",0.01053,0,-1,0
org/jfree/chart/title/Title,12,134,    },0.01053,0,-1,0
org/jfree/chart/title/Title,12,216,        if (position == null) {,0.01053,0,-1,0
org/jfree/chart/title/Title,12,219,        if (this.position != position) {,0.01053,0,-1,0
org/jfree/chart/title/Title,12,220,            this.position = position;,0.01053,0,-1,0
org/jfree/chart/title/Title,12,221,            notifyListeners(new TitleChangeEvent(this));,0.01053,0,-1,0
org/jfree/chart/title/Title,12,223,    },0.01053,0,-1,0
org/jfree/chart/title/Title,12,357,        if (this.notify) {,0.01053,0,-1,0
org/jfree/chart/title/Title,12,358,            Object[] listeners = this.listenerList.getListenerList();,0.01053,0,-1,0
org/jfree/chart/title/Title,12,359,            for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.01053,0,-1,0
org/jfree/chart/title/Title,12,366,    },0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,162,"        this(source, new FlowArrangement(), new ColumnArrangement());",0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,163,    },0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,175,"                       Arrangement hLayout, Arrangement vLayout) {",0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,176,        this.sources = new LegendItemSource[] {source};,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,177,        this.items = new BlockContainer(hLayout);,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,178,        this.hLayout = hLayout;,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,179,        this.vLayout = vLayout;,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,180,        this.backgroundPaint = null;  ,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,181,        this.legendItemGraphicEdge = RectangleEdge.LEFT;,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,182,        this.legendItemGraphicAnchor = RectangleAnchor.CENTER;,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,183,        this.legendItemGraphicLocation = RectangleAnchor.CENTER;,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,184,"        this.legendItemGraphicPadding = new RectangleInsets(2.0, 2.0, 2.0, 2.0);",0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,185,        this.itemFont = DEFAULT_ITEM_FONT;,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,186,        this.itemPaint = DEFAULT_ITEM_PAINT;,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,187,"        this.itemLabelPadding = new RectangleInsets(2.0, 2.0, 2.0, 2.0);",0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,188,    },0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,108,    public static final Font DEFAULT_ITEM_FONT ,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,112,    public static final Paint DEFAULT_ITEM_PAINT = Color.black;,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,229,        this.backgroundPaint = paint;   ,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,230,        notifyListeners(new TitleChangeEvent(this));,0.01053,0,-1,0
org/jfree/chart/title/LegendTitle,12,231,    },0.01053,0,-1,0
org/jfree/chart/event/TitleChangeEvent,12,64,        super(title);,0.01053,0,-1,0
org/jfree/chart/event/TitleChangeEvent,12,65,        this.title = title;,0.01053,0,-1,0
org/jfree/chart/event/TitleChangeEvent,12,66,    },0.01053,0,-1,0
org/jfree/chart/title/TextTitle,12,187,"        this(text, font, TextTitle.DEFAULT_TEXT_PAINT, Title.DEFAULT_POSITION,",0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,190,    },0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,211,"        super(position, horizontalAlignment, verticalAlignment, padding);",0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,160,    private boolean expandToFitSpace = false;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,213,        if (text == null) {,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,216,        if (font == null) {,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,219,        if (paint == null) {,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,222,        this.text = text;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,223,        this.font = font;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,224,        this.paint = paint;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,228,        this.textAlignment = horizontalAlignment;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,229,        this.backgroundPaint = null;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,230,        this.content = null;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,231,        this.toolTipText = null;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,232,        this.urlText = null;,0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,234,    },0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,126,"    public static final Font DEFAULT_FONT = new Font(""SansSerif"", Font.BOLD, ",0.00917,0,-1,0
org/jfree/chart/title/TextTitle,12,130,    public static final Paint DEFAULT_TEXT_PAINT = Color.black;,0.00917,0,-1,0
org/jfree/chart/JFreeChart,12,364,                      boolean createLegend) {,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,298,    private int backgroundImageAlignment = Align.FIT;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,301,    private float backgroundImageAlpha = 0.5f;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,366,        if (plot == null) {,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,371,        this.progressListeners = new EventListenerList();,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,372,        this.changeListeners = new EventListenerList();,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,373,        this.notify = true;  // default is to notify listeners when the ,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,376,        this.renderingHints = new RenderingHints(,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,380,        this.borderVisible = false;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,381,        this.borderStroke = new BasicStroke(1.0f);,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,382,        this.borderPaint = Color.black;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,384,        this.padding = RectangleInsets.ZERO_INSETS;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,386,        this.plot = plot;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,387,        plot.addChangeListener(this);,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,389,        this.subtitles = new ArrayList();,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,392,        if (createLegend) {,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,403,        if (title != null) {,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,411,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,413,        this.backgroundImage = DEFAULT_BACKGROUND_IMAGE;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,414,        this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,415,        this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,417,    },0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,243,    public static final ProjectInfo INFO = new JFreeChartInfo();,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,246,    public static final Font DEFAULT_TITLE_FONT ,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,250,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.WHITE;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,12,253,    public static final Image DEFAULT_BACKGROUND_IMAGE = null;,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,109,    protected AbstractBlock() {,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,110,        this.id = null;,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,111,        this.width = 0.0;,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,112,        this.height = 0.0;,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,113,        this.bounds = new Rectangle2D.Float();,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,114,        this.margin = RectangleInsets.ZERO_INSETS;,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,115,        this.frame = BlockBorder.NONE; ,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,116,        this.padding = RectangleInsets.ZERO_INSETS;,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,117,    },0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,277,        if (padding == null) {,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,280,        this.padding = padding;,0.00877,0,-1,0
org/jfree/chart/block/AbstractBlock,12,281,    },0.00877,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,76,    private HorizontalAlignment(String name) {,0.00877,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,77,        this.name = name;,0.00877,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,78,    },0.00877,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,57,    public static final HorizontalAlignment LEFT ,0.00877,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,61,    public static final HorizontalAlignment RIGHT ,0.00877,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,65,    public static final HorizontalAlignment CENTER ,0.00877,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,76,    private VerticalAlignment(String name) {,0.00877,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,77,        this.name = name;,0.00877,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,78,    },0.00877,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,57,    public static final VerticalAlignment TOP ,0.00877,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,61,    public static final VerticalAlignment BOTTOM ,0.00877,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,65,    public static final VerticalAlignment CENTER ,0.00877,0,-1,0
org/jfree/chart/block/BlockBorder,12,128,"    public BlockBorder(RectangleInsets insets, Paint paint) {",0.00877,0,-1,0
org/jfree/chart/block/BlockBorder,12,129,        if (insets == null) {,0.00877,0,-1,0
org/jfree/chart/block/BlockBorder,12,132,        if (paint == null) {,0.00877,0,-1,0
org/jfree/chart/block/BlockBorder,12,135,        this.insets = insets;,0.00877,0,-1,0
org/jfree/chart/block/BlockBorder,12,136,        this.paint = paint;,0.00877,0,-1,0
org/jfree/chart/block/BlockBorder,12,137,    },0.00877,0,-1,0
org/jfree/chart/block/BlockBorder,12,71,    public static final BlockBorder NONE = new BlockBorder(,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,67,    public ProjectInfo() {,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,69,    },0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,111,        this.logo = logo;,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,112,    },0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,129,        this.licenceText = licenceText;,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,130,    },0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,147,        this.contributors = contributors;,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,148,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,145,    public BasicProjectInfo() {,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,146,        this.libraries = new ArrayList();,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,147,        this.optionalLibraries = new ArrayList();,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,148,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,198,        this.copyright = copyright;,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,199,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,207,        super.setInfo(info);,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,208,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,216,        super.setLicenceName(licence);,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,217,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,225,        super.setName(name);,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,226,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,234,        super.setVersion(version);,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,235,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,12,82,    protected Library() {,0.00877,0,-1,0
org/jfree/chart/ui/Library,12,84,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,12,128,        this.info = info;,0.00877,0,-1,0
org/jfree/chart/ui/Library,12,129,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,12,137,        this.licenceName = licenceName;,0.00877,0,-1,0
org/jfree/chart/ui/Library,12,138,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,12,146,        this.name = name;,0.00877,0,-1,0
org/jfree/chart/ui/Library,12,147,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,12,155,        this.version = version;,0.00877,0,-1,0
org/jfree/chart/ui/Library,12,156,    },0.00877,0,-1,0
org/jfree/chart/title/Title,12,172,                    RectangleInsets padding) {,0.00877,0,-1,0
org/jfree/chart/title/Title,12,175,        if (position == null) {,0.00877,0,-1,0
org/jfree/chart/title/Title,12,178,        if (horizontalAlignment == null) {,0.00877,0,-1,0
org/jfree/chart/title/Title,12,183,        if (verticalAlignment == null) {,0.00877,0,-1,0
org/jfree/chart/title/Title,12,187,        if (padding == null) {,0.00877,0,-1,0
org/jfree/chart/title/Title,12,191,        this.position = position;,0.00877,0,-1,0
org/jfree/chart/title/Title,12,192,        this.horizontalAlignment = horizontalAlignment;,0.00877,0,-1,0
org/jfree/chart/title/Title,12,193,        this.verticalAlignment = verticalAlignment;,0.00877,0,-1,0
org/jfree/chart/title/Title,12,194,        setPadding(padding);,0.00877,0,-1,0
org/jfree/chart/title/Title,12,195,        this.listenerList = new EventListenerList();,0.00877,0,-1,0
org/jfree/chart/title/Title,12,196,        this.notify = true;,0.00877,0,-1,0
org/jfree/chart/title/Title,12,198,    },0.00877,0,-1,0
org/jfree/chart/title/Title,12,96,    public static final RectangleEdge DEFAULT_POSITION = RectangleEdge.TOP;,0.00877,0,-1,0
org/jfree/chart/title/Title,12,100,            DEFAULT_HORIZONTAL_ALIGNMENT = HorizontalAlignment.CENTER;,0.00877,0,-1,0
org/jfree/chart/title/Title,12,104,            DEFAULT_VERTICAL_ALIGNMENT = VerticalAlignment.CENTER;,0.00877,0,-1,0
org/jfree/chart/title/Title,12,107,    public static final RectangleInsets DEFAULT_PADDING = new RectangleInsets(,0.00877,0,-1,0
org/jfree/chart/title/Title,12,337,"        this.listenerList.add(TitleChangeListener.class, listener);",0.00877,0,-1,0
org/jfree/chart/title/Title,12,338,    },0.00877,0,-1,0
org/jfree/chart/resources/JFreeChartResources,12,44,public class JFreeChartResources extends ListResourceBundle {,0.00877,0,-1,0
org/jfree/chart/resources/JFreeChartResources,12,56,    private static final Object[][] CONTENTS = {,0.00877,0,-1,0
org/jfree/chart/resources/JFreeChartResources,12,52,        return CONTENTS;,0.00877,0,-1,0
org/jfree/chart/ui/Contributor,12,63,"    public Contributor(String name, String email) {",0.00877,0,-1,0
org/jfree/chart/ui/Contributor,12,64,        this.name = name;,0.00877,0,-1,0
org/jfree/chart/ui/Contributor,12,65,        this.email = email;,0.00877,0,-1,0
org/jfree/chart/ui/Contributor,12,66,    },0.00877,0,-1,0
org/jfree/chart/ui/Licences,12,52,public class Licences {,0.00877,0,-1,0
org/jfree/chart/ui/Licences,12,799,        if (singleton == null) {,0.00877,0,-1,0
org/jfree/chart/ui/Licences,12,800,            singleton = new Licences();,0.00877,0,-1,0
org/jfree/chart/ui/Licences,12,802,        return singleton;,0.00877,0,-1,0
org/jfree/chart/ui/Licences,12,822,        return LGPL;,0.00877,0,-1,0
org/jfree/chart/plot/Plot,12,868,"        this.listenerList.add(PlotChangeListener.class, listener);",0.00862,0,-1,0
org/jfree/chart/plot/Plot,12,869,    },0.00862,0,-1,0
org/jfree/chart/util/RectangleEdge,12,80,    private RectangleEdge(String name) {,0.00862,0,-1,0
org/jfree/chart/util/RectangleEdge,12,81,        this.name = name;,0.00862,0,-1,0
org/jfree/chart/util/RectangleEdge,12,82,    },0.00862,0,-1,0
org/jfree/chart/util/RectangleEdge,12,57,    public static final RectangleEdge TOP = new RectangleEdge(,0.00862,0,-1,0
org/jfree/chart/util/RectangleEdge,12,61,    public static final RectangleEdge BOTTOM = new RectangleEdge(,0.00862,0,-1,0
org/jfree/chart/util/RectangleEdge,12,65,    public static final RectangleEdge LEFT = new RectangleEdge(,0.00862,0,-1,0
org/jfree/chart/util/RectangleEdge,12,69,    public static final RectangleEdge RIGHT = new RectangleEdge(,0.00862,0,-1,0
org/jfree/data/general/DatasetGroup,12,63,        super();,0.00855,0,-1,0
org/jfree/data/general/DatasetGroup,12,64,"        this.id = ""NOID"";",0.00855,0,-1,0
org/jfree/data/general/DatasetGroup,12,65,    },0.00855,0,-1,0
org/jfree/data/general/AbstractDataset,12,94,    protected AbstractDataset() {,0.00855,0,-1,0
org/jfree/data/general/AbstractDataset,12,95,        this.group = new DatasetGroup();,0.00855,0,-1,0
org/jfree/data/general/AbstractDataset,12,96,        this.listenerList = new EventListenerList();,0.00855,0,-1,0
org/jfree/data/general/AbstractDataset,12,97,    },0.00855,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,106,    private RectangleAnchor(final String name) {,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,107,        this.name = name;,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,108,    },0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,63,    public static final RectangleAnchor CENTER ,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,67,    public static final RectangleAnchor TOP ,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,71,    public static final RectangleAnchor TOP_LEFT ,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,75,    public static final RectangleAnchor TOP_RIGHT ,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,79,    public static final RectangleAnchor BOTTOM ,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,83,    public static final RectangleAnchor BOTTOM_LEFT ,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,87,    public static final RectangleAnchor BOTTOM_RIGHT ,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,91,    public static final RectangleAnchor LEFT ,0.00826,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,95,    public static final RectangleAnchor RIGHT ,0.00826,0,-1,0
org/jfree/chart/plot/Plot,12,284,    protected Plot() {,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,264,    private int backgroundImageAlignment = Align.FIT;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,267,    private float backgroundImageAlpha = 0.5f;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,286,        this.parent = null;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,287,        this.insets = DEFAULT_INSETS;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,288,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,289,        this.backgroundAlpha = DEFAULT_BACKGROUND_ALPHA;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,290,        this.backgroundImage = null;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,291,        this.outlineVisible = true;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,292,        this.outlineStroke = DEFAULT_OUTLINE_STROKE;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,293,        this.outlinePaint = DEFAULT_OUTLINE_PAINT;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,294,        this.foregroundAlpha = DEFAULT_FOREGROUND_ALPHA;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,296,        this.noDataMessage = null;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,297,"        this.noDataMessageFont = new Font(""SansSerif"", Font.PLAIN, 12);",0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,298,        this.noDataMessagePaint = Color.black;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,300,        this.drawingSupplier = new DefaultDrawingSupplier();,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,302,        this.listenerList = new EventListenerList();,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,304,    },0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,191,    public static final Number ZERO = new Integer(0);,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,194,    public static final RectangleInsets DEFAULT_INSETS ,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,198,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f);,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,201,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,210,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,219,    public static final Shape DEFAULT_LEGEND_ITEM_BOX ,0.00629,0,-1,0
org/jfree/chart/plot/Plot,12,223,    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE ,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,150,"        this(DEFAULT_PAINT_SEQUENCE, DEFAULT_FILL_PAINT_SEQUENCE,",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,156,    },0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,197,            Shape[] shapeSequence) {,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,199,        this.paintSequence = paintSequence;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,200,        this.fillPaintSequence = fillPaintSequence;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,201,        this.outlinePaintSequence = outlinePaintSequence;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,202,        this.strokeSequence = strokeSequence;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,203,        this.outlineStrokeSequence = outlineStrokeSequence;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,204,        this.shapeSequence = shapeSequence;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,205,    },0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,83,    public static final Paint[] DEFAULT_PAINT_SEQUENCE ,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,87,    public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE = new Paint[] {,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,91,    public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE = new Paint[] {,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,95,    public static final Stroke[] DEFAULT_STROKE_SEQUENCE = new Stroke[] {,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,100,    public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE ,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,105,    public static final Shape[] DEFAULT_SHAPE_SEQUENCE ,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,289,        Shape[] result = new Shape[10];,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,291,        double size = 6.0;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,292,        double delta = size / 2.0;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,293,        int[] xpoints = null;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,294,        int[] ypoints = null;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,297,"        result[0] = new Rectangle2D.Double(-delta, -delta, size, size);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,299,"        result[1] = new Ellipse2D.Double(-delta, -delta, size, size);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,302,"        xpoints = intArray(0.0, delta, -delta);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,303,"        ypoints = intArray(-delta, delta, delta);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,304,"        result[2] = new Polygon(xpoints, ypoints, 3);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,307,"        xpoints = intArray(0.0, delta, 0.0, -delta);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,308,"        ypoints = intArray(-delta, 0.0, delta, 0.0);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,309,"        result[3] = new Polygon(xpoints, ypoints, 4);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,312,"        result[4] = new Rectangle2D.Double(-delta, -delta / 2, size, size / 2);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,315,"        xpoints = intArray(-delta, +delta, 0.0);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,316,"        ypoints = intArray(-delta, -delta, delta);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,317,"        result[5] = new Polygon(xpoints, ypoints, 3);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,320,"        result[6] = new Ellipse2D.Double(-delta, -delta / 2, size, size / 2);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,323,"        xpoints = intArray(-delta, delta, -delta);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,324,"        ypoints = intArray(-delta, 0.0, delta);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,325,"        result[7] = new Polygon(xpoints, ypoints, 3);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,328,"        result[8] = new Rectangle2D.Double(-delta / 2, -delta, size / 2, size);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,331,"        xpoints = intArray(-delta, delta, delta);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,332,"        ypoints = intArray(0.0, -delta, +delta);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,333,"        result[9] = new Polygon(xpoints, ypoints, 3);",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,335,        return result;,0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,517,"        return new int[] {(int) a, (int) b, (int) c};",0.00629,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,532,"        return new int[] {(int) a, (int) b, (int) c, (int) d};",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,59,"    public static final Color VERY_DARK_RED = new Color(0x80, 0x00, 0x00);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,62,"    public static final Color DARK_RED = new Color(0xc0, 0x00, 0x00);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,65,"    public static final Color LIGHT_RED = new Color(0xFF, 0x40, 0x40);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,68,"    public static final Color VERY_LIGHT_RED = new Color(0xFF, 0x80, 0x80);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,71,"    public static final Color VERY_DARK_YELLOW = new Color(0x80, 0x80, 0x00);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,74,"    public static final Color DARK_YELLOW = new Color(0xC0, 0xC0, 0x00);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,77,"    public static final Color LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x40);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,80,"    public static final Color VERY_LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x80);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,83,"    public static final Color VERY_DARK_GREEN = new Color(0x00, 0x80, 0x00);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,86,"    public static final Color DARK_GREEN = new Color(0x00, 0xC0, 0x00);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,89,"    public static final Color LIGHT_GREEN = new Color(0x40, 0xFF, 0x40);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,92,"    public static final Color VERY_LIGHT_GREEN = new Color(0x80, 0xFF, 0x80);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,95,"    public static final Color VERY_DARK_CYAN = new Color(0x00, 0x80, 0x80);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,98,"    public static final Color DARK_CYAN = new Color(0x00, 0xC0, 0xC0);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,101,"    public static final Color LIGHT_CYAN = new Color(0x40, 0xFF, 0xFF);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,104,"    public static final Color VERY_LIGHT_CYAN = new Color(0x80, 0xFF, 0xFF);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,107,"    public static final Color VERY_DARK_BLUE = new Color(0x00, 0x00, 0x80);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,110,"    public static final Color DARK_BLUE = new Color(0x00, 0x00, 0xC0);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,113,"    public static final Color LIGHT_BLUE = new Color(0x40, 0x40, 0xFF);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,116,"    public static final Color VERY_LIGHT_BLUE = new Color(0x80, 0x80, 0xFF);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,119,"    public static final Color VERY_DARK_MAGENTA = new Color(0x80, 0x00, 0x80);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,122,"    public static final Color DARK_MAGENTA = new Color(0xC0, 0x00, 0xC0);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,125,"    public static final Color LIGHT_MAGENTA = new Color(0xFF, 0x40, 0xFF);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,128,"    public static final Color VERY_LIGHT_MAGENTA = new Color(0xFF, 0x80, 0xFF);",0.00629,0,-1,0
org/jfree/chart/ChartColor,12,151,        return new Paint[] {,0.00629,0,-1,0
org/jfree/chart/util/RectangleInsets,12,102,"        this(UnitType.ABSOLUTE, top, left, bottom, right);   ",0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,103,    },0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,116,"                           double bottom, double right) {",0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,117,        if (unitType == null) {,0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,120,        this.unitType = unitType;,0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,121,        this.top = top;,0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,122,        this.bottom = bottom;,0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,123,        this.left = left;,0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,124,        this.right = right;,0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,125,    },0.00578,0,-1,0
org/jfree/chart/util/RectangleInsets,12,65,    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(,0.00578,0,-1,0
org/jfree/chart/util/UnitType,12,69,    private UnitType(String name) {,0.00565,0,-1,0
org/jfree/chart/util/UnitType,12,70,        this.name = name;,0.00565,0,-1,0
org/jfree/chart/util/UnitType,12,71,    },0.00565,0,-1,0
org/jfree/chart/util/UnitType,12,56,"    public static final UnitType ABSOLUTE = new UnitType(""UnitType.ABSOLUTE"");",0.00565,0,-1,0
org/jfree/chart/util/UnitType,12,59,"    public static final UnitType RELATIVE = new UnitType(""UnitType.RELATIVE"");",0.00565,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,77,        this(DEFAULT_INITIAL_CAPACITY);,0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,78,    },0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,86,"        this (initialCapacity, initialCapacity);",0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,87,    },0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,95,"    protected AbstractObjectList(int initialCapacity, int increment) {",0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,68,    private int size = 0;,0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,71,    private int increment = DEFAULT_INITIAL_CAPACITY;,0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,96,        this.objects = new Object[initialCapacity];,0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,97,        this.increment = increment;,0.00541,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,98,    },0.00541,0,-1,0
org/jfree/chart/util/ObjectList,12,58,    public ObjectList() {,0.00541,0,-1,0
org/jfree/chart/util/ObjectList,12,59,    },0.00541,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,69,"        this(source, null, ChartChangeEventType.GENERAL);",0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,70,    },0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,93,        super(source);,0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,94,        this.chart = chart;,0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,95,        this.type = type;,0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,96,    },0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,74,    private ChartChangeEventType(String name) {,0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,75,        this.name = name;,0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,76,    },0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,55,    public static final ChartChangeEventType GENERAL ,0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,59,    public static final ChartChangeEventType NEW_DATASET ,0.00535,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,63,    public static final ChartChangeEventType DATASET_UPDATED,0.00535,0,-1,0
org/jfree/chart/PaintMap,12,93,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/PaintMap,12,94,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/PaintMap,12,96,        return (Paint) this.store.get(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,12,109,        return this.store.containsKey(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,12,123,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/PaintMap,12,124,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/PaintMap,12,126,"        this.store.put(key, paint);",0.0,0,-1,0
org/jfree/chart/PaintMap,12,127,    },0.0,0,-1,0
org/jfree/chart/PaintMap,12,133,        this.store.clear();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,134,    },0.0,0,-1,0
org/jfree/chart/PaintMap,12,144,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/PaintMap,12,145,            return true;,0.0,0,-1,0
org/jfree/chart/PaintMap,12,147,        if (!(obj instanceof PaintMap)) {,0.0,0,-1,0
org/jfree/chart/PaintMap,12,148,            return false;,0.0,0,-1,0
org/jfree/chart/PaintMap,12,150,        PaintMap that = (PaintMap) obj;,0.0,0,-1,0
org/jfree/chart/PaintMap,12,151,        if (this.store.size() != that.store.size()) {,0.0,0,-1,0
org/jfree/chart/PaintMap,12,152,            return false;,0.0,0,-1,0
org/jfree/chart/PaintMap,12,154,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,155,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,156,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/PaintMap,12,157,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,158,            Paint p1 = getPaint(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,12,159,            Paint p2 = that.getPaint(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,12,160,"            if (!PaintUtilities.equal(p1, p2)) {",0.0,0,-1,0
org/jfree/chart/PaintMap,12,161,                return false;,0.0,0,-1,0
org/jfree/chart/PaintMap,12,163,        },0.0,0,-1,0
org/jfree/chart/PaintMap,12,164,        return true;,0.0,0,-1,0
org/jfree/chart/PaintMap,12,177,        return super.clone();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,188,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,189,        stream.writeInt(this.store.size());,0.0,0,-1,0
org/jfree/chart/PaintMap,12,190,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,191,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,192,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/PaintMap,12,193,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,194,            stream.writeObject(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,12,195,            Paint paint = getPaint(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,12,196,"            SerialUtilities.writePaint(paint, stream);",0.0,0,-1,0
org/jfree/chart/PaintMap,12,197,        },0.0,0,-1,0
org/jfree/chart/PaintMap,12,198,    },0.0,0,-1,0
org/jfree/chart/PaintMap,12,210,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,211,        this.store = new HashMap();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,212,        int keyCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,213,        for (int i = 0; i < keyCount; i++) {,0.0,0,-1,0
org/jfree/chart/PaintMap,12,214,            Comparable key = (Comparable) stream.readObject();,0.0,0,-1,0
org/jfree/chart/PaintMap,12,215,            Paint paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/PaintMap,12,216,"            this.store.put(key, paint);",0.0,0,-1,0
org/jfree/chart/PaintMap,12,218,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,84,        return this.name;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,96,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,97,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,99,        if (!(obj instanceof PieLabelLinkStyle)) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,100,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,102,        PieLabelLinkStyle style = (PieLabelLinkStyle) obj;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,103,        if (!this.name.equals(style.toString())) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,104,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,106,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,115,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,126,        Object result = null;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,127,        if (this.equals(PieLabelLinkStyle.STANDARD)) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,128,            result = PieLabelLinkStyle.STANDARD;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,130,        else if (this.equals(PieLabelLinkStyle.QUAD_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,131,            result = PieLabelLinkStyle.QUAD_CURVE;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,133,        else if (this.equals(PieLabelLinkStyle.CUBIC_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,134,            result = PieLabelLinkStyle.CUBIC_CURVE;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelLinkStyle,12,136,        return result;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,166,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,178,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,179,            this.dataset.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,183,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,184,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,185,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,186,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,190,"        datasetChanged(new DatasetChangeEvent(this, dataset));",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,191,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,201,        return this.pieChart;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,213,        if (pieChart == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,214,"            throw new IllegalArgumentException(""Null 'pieChart' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,216,        if (!(pieChart.getPlot() instanceof PiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,217,"            throw new IllegalArgumentException(""The 'pieChart' argument must """,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,220,        this.pieChart = pieChart;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,221,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,222,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,230,        return this.dataExtractOrder;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,240,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,241,"            throw new IllegalArgumentException(""Null 'order' argument"");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,243,        this.dataExtractOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,244,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,245,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,254,        return this.limit;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,264,        this.limit = limit;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,265,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,266,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,277,        return this.aggregatedItemsKey;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,289,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,290,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,292,        this.aggregatedItemsKey = key;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,293,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,294,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,305,        return this.aggregatedItemsPaint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,317,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,318,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,320,        this.aggregatedItemsPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,321,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,322,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,330,"        return ""Multiple Pie Plot"";",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,352,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,353,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,354,"        drawBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,355,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,358,        if (DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,359,"            drawNoDataMessage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,360,            return;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,363,        int pieCount = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,364,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,365,            pieCount = this.dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,368,            pieCount = this.dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,372,        int displayCols = (int) Math.ceil(Math.sqrt(pieCount));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,373,        int displayRows,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,377,        if (displayCols > displayRows && area.getWidth() < area.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,378,            int temp = displayCols;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,379,            displayCols = displayRows;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,380,            displayRows = temp;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,383,        prefetchSectionPaints();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,385,        int x = (int) area.getX();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,386,        int y = (int) area.getY();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,387,        int width = ((int) area.getWidth()) / displayCols;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,388,        int height = ((int) area.getHeight()) / displayRows;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,389,        int row = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,390,        int column = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,391,        int diff = (displayRows * displayCols) - pieCount;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,392,        int xoffset = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,393,        Rectangle rect = new Rectangle();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,395,        for (int pieIndex = 0; pieIndex < pieCount; pieIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,396,"            rect.setBounds(x + xoffset + (width * column), y + (height * row),",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,399,            String title = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,400,            if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,401,                title = this.dataset.getRowKey(pieIndex).toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,404,                title = this.dataset.getColumnKey(pieIndex).toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,406,            this.pieChart.setTitle(title);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,408,            PieDataset piedataset = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,409,"            PieDataset dd = new CategoryToPieDataset(this.dataset,",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,411,            if (this.limit > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,412,                piedataset = DatasetUtilities.createConsolidatedPieDataset(,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,416,                piedataset = dd;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,418,            PiePlot piePlot = (PiePlot) this.pieChart.getPlot();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,419,            piePlot.setDataset(piedataset);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,420,            piePlot.setPieIndex(pieIndex);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,423,            for (int i = 0; i < piedataset.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,424,                Comparable key = piedataset.getKey(i);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,426,                if (key.equals(this.aggregatedItemsKey)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,427,                    p = this.aggregatedItemsPaint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,430,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,432,"                piePlot.setSectionPaint(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,435,            ChartRenderingInfo subinfo = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,436,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,437,                subinfo = new ChartRenderingInfo();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,439,"            this.pieChart.draw(g2, rect, subinfo);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,440,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,441,                info.getOwner().getEntityCollection().addAll(,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,443,                info.addSubplotInfo(subinfo.getPlotInfo());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,446,            ++column;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,447,            if (column == displayCols) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,448,                column = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,449,                ++row;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,451,                if (row == displayRows - 1 && diff != 0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,452,                    xoffset = (diff * width) / 2;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,457,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,471,        PiePlot piePlot = (PiePlot) getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,473,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,475,            for (int c = 0; c < this.dataset.getColumnCount(); c++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,476,                Comparable key = this.dataset.getColumnKey(c);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,477,                Paint p = piePlot.getSectionPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,478,                if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,479,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,480,                    if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,481,                        p = getDrawingSupplier().getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,484,"                this.sectionPaints.put(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,489,            for (int r = 0; r < this.dataset.getRowCount(); r++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,490,                Comparable key = this.dataset.getRowKey(r);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,491,                Paint p = piePlot.getSectionPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,492,                if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,493,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,494,                    if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,495,                        p = getDrawingSupplier().getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,498,"                this.sectionPaints.put(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,502,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,511,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,513,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,514,            List keys = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,516,            prefetchSectionPaints();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,517,            if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,518,                keys = this.dataset.getColumnKeys();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,520,            else if (this.dataExtractOrder == TableOrder.BY_COLUMN) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,521,                keys = this.dataset.getRowKeys();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,524,            if (keys != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,525,                int section = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,526,                Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,527,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,528,                    Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,529,                    String label = key.toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,530,                    String description = label;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,531,                    Paint paint = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,532,"                    LegendItem item = new LegendItem(label, description,",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,535,                    item.setDataset(getDataset());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,536,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,537,                    section++;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,538,                },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,540,            if (this.limit > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,541,"                result.add(new LegendItem(this.aggregatedItemsKey.toString(),",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,549,        return result;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,562,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,563,            return true;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,565,        if (!(obj instanceof MultiplePiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,566,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,568,        MultiplePiePlot that = (MultiplePiePlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,569,        if (this.dataExtractOrder != that.dataExtractOrder) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,570,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,572,        if (this.limit != that.limit) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,573,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,575,        if (!this.aggregatedItemsKey.equals(that.aggregatedItemsKey)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,576,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,578,"        if (!PaintUtilities.equal(this.aggregatedItemsPaint,",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,580,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,582,"        if (!ObjectUtilities.equal(this.pieChart, that.pieChart)) {",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,583,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,585,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,586,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,588,        return true;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,599,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,600,"        SerialUtilities.writePaint(this.aggregatedItemsPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,601,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,613,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,614,        this.aggregatedItemsPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,615,        this.sectionPaints = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,12,616,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,314,        return this.datasetGroup;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,325,        this.datasetGroup = group;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,326,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,339,        return this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,352,        this.noDataMessage = message;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,353,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,354,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,365,        return this.noDataMessageFont;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,377,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,378,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,380,        this.noDataMessageFont = font;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,381,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,382,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,393,        return this.noDataMessagePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,405,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,406,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,408,        this.noDataMessagePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,409,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,410,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,433,        return this.parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,445,        this.parent = parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,446,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,457,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,458,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,459,            return this;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,462,            return p.getRootPlot();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,478,        return (getParent() != null);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,489,        return this.insets;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,502,"        setInsets(insets, true);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,503,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,517,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,518,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,520,        if (!this.insets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,521,            this.insets = insets;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,522,            if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,523,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,527,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,537,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,550,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,551,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,552,                this.backgroundPaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,553,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,557,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,558,                if (this.backgroundPaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,559,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,562,            this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,563,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,566,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,576,        return this.backgroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,588,        if (this.backgroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,589,            this.backgroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,590,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,592,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,602,        DrawingSupplier result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,603,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,604,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,605,            result = p.getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,608,            result = this.drawingSupplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,610,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,624,        this.drawingSupplier = supplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,625,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,626,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,637,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,649,        this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,650,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,651,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,662,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,675,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,676,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,677,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,679,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,691,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,706,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Plot,12,707,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,709,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,710,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,711,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,713,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,729,        return this.outlineVisible;    ,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,743,        this.outlineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,744,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,745,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,755,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,768,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,769,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,770,                this.outlineStroke = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,771,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,775,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,776,                if (this.outlineStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,777,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,780,            this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,781,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,783,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,793,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,806,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,807,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,808,                this.outlinePaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,809,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,813,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,814,                if (this.outlinePaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,815,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,818,            this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,819,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,821,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,831,        return this.foregroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,843,        if (this.foregroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,844,            this.foregroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,845,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,847,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,857,        return null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,879,"        this.listenerList.remove(PlotChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,880,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,888,        Object[] listeners = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,889,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,890,            if (listeners[i] == PlotChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,891,                ((PlotChangeListener) listeners[i + 1]).plotChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,894,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,902,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,903,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,938,"        fillBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,939,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,940,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,953,"        fillBackground(g2, area, PlotOrientation.VERTICAL);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,954,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,970,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,971,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,973,        if (this.backgroundPaint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,974,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,976,        Paint p = this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,977,        if (p instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,978,            GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,979,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,980,"                p = new GradientPaint((float) area.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,985,            else if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,986,"                p = new GradientPaint((float) area.getMinX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,992,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,993,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,995,        g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,996,        g2.fill(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,997,        g2.setComposite(originalComposite);        ,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,998,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1012,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1013,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1014,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1016,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1019,"            Align.align(dest, area, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1020,"            g2.drawImage(this.backgroundImage, (int) dest.getX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1023,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1025,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1037,        if (!this.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1038,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1040,        if ((this.outlineStroke != null) && (this.outlinePaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1041,            g2.setStroke(this.outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1042,            g2.setPaint(this.outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1043,            g2.draw(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1045,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1054,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1055,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1056,        String message = this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1057,        if (message != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1058,            g2.setFont(this.noDataMessageFont);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1059,            g2.setPaint(this.noDataMessagePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1060,            TextBlock block = TextUtilities.createTextBlock(,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1064,"            block.draw(g2, (float) area.getCenterX(), (float) area.getCenterY(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1067,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1068,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1082,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1092,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1100,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1101,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1112,        PlotChangeEvent newEvent = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1113,        newEvent.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1114,        notifyListeners(newEvent);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1115,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1126,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1127,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1142,        double result = x;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1143,        if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1144,            result = result + w1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1146,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1147,            result = result + w2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1149,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1166,        double result = y;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1167,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1168,            result = result + h1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1170,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1171,            result = result + h2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1173,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1185,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1186,            return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1188,        if (!(obj instanceof Plot)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1189,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1191,        Plot that = (Plot) obj;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1192,"        if (!ObjectUtilities.equal(this.noDataMessage, that.noDataMessage)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1193,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1195,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1198,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1200,"        if (!PaintUtilities.equal(this.noDataMessagePaint, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1202,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1204,"        if (!ObjectUtilities.equal(this.insets, that.insets)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1205,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1207,        if (this.outlineVisible != that.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1208,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1210,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1211,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1213,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1214,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1216,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1217,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1219,"        if (!ObjectUtilities.equal(this.backgroundImage, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1221,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1223,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1224,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1226,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1227,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1229,        if (this.foregroundAlpha != that.foregroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1230,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1232,        if (this.backgroundAlpha != that.backgroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1233,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1235,        if (!this.drawingSupplier.equals(that.drawingSupplier)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1236,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1238,        return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1251,        Plot clone = (Plot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1254,        if (this.datasetGroup != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1255,            clone.datasetGroup ,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1258,        clone.drawingSupplier ,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1260,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1261,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1273,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1274,"        SerialUtilities.writePaint(this.noDataMessagePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1275,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1276,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1278,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1279,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1291,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1292,        this.noDataMessagePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1293,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1294,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1296,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1298,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1300,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1313,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1314,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1316,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1317,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1320,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1322,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1323,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1324,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1326,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1327,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1330,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1331,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1332,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1334,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1335,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1338,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1339,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1340,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1342,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1343,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1346,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1347,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1348,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1350,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1351,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1355,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1356,"            throw new IllegalStateException(""resolveDomainAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1358,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1373,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1374,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1376,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1377,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1380,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1382,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1383,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1384,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1386,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1387,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1390,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1391,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1392,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1394,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1395,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1398,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1399,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1400,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1402,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1403,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1406,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1407,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1408,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1410,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1411,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1416,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1417,"            throw new IllegalStateException(""resolveRangeAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,12,1419,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,495,        this(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,496,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,507,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,563,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,576,        PieDataset existing = this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,577,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,578,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,582,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,583,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,584,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,585,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,589,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,590,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,591,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,602,        return this.pieIndex;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,614,        this.pieIndex = index;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,615,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,626,        return this.startAngle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,640,        this.startAngle = angle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,641,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,642,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,653,        return this.direction;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,665,        if (direction == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,666,"            throw new IllegalArgumentException(""Null 'direction' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,668,        this.direction = direction;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,669,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,671,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,682,        return this.interiorGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,697,        if ((percent < 0.0) || (percent > MAX_INTERIOR_GAP)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,698,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,702,        if (this.interiorGap != percent) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,703,            this.interiorGap = percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,704,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,707,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,718,        return this.circular;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,730,"        setCircular(flag, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,731,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,743,        this.circular = circular;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,744,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,745,            fireChangeEvent();   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,747,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,758,        return this.ignoreNullValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,773,        this.ignoreNullValues = flag;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,774,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,775,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,786,        return this.ignoreZeroValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,801,        this.ignoreZeroValues = flag;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,802,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,803,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,820,"        return lookupSectionPaint(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,845,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,848,        result = this.sectionPaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,849,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,850,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,854,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,855,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,856,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,857,                result = ds.getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,858,"                this.sectionPaintMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,861,                result = this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,863,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,865,            result = this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,867,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,885,        Comparable key = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,886,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,887,            if (section >= 0 && section < this.dataset.getItemCount()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,888,                key = this.dataset.getKey(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,891,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,892,            key = new Integer(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,894,        return key;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,915,        return this.sectionPaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,934,"        this.sectionPaintMap.put(key, paint);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,935,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,936,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,947,        return this.baseSectionPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,959,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,960,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,962,        this.baseSectionPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,963,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,964,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,978,        return this.sectionOutlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,991,        this.sectionOutlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,992,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,993,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1008,"        return lookupSectionOutlinePaint(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1035,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1038,        result = this.sectionOutlinePaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1039,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1040,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1044,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1045,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1046,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1047,                result = ds.getNextOutlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1048,"                this.sectionOutlinePaintMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1051,                result = this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1053,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1055,            result = this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1057,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1078,        return this.sectionOutlinePaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1097,"        this.sectionOutlinePaintMap.put(key, paint);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1098,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1099,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1110,        return this.baseSectionOutlinePaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1121,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1122,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1124,        this.baseSectionOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1125,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1126,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1143,"        return lookupSectionOutlineStroke(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1170,        Stroke result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1173,        result = this.sectionOutlineStrokeMap.getStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1174,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1175,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1179,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1180,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1181,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1182,                result = ds.getNextOutlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1183,"                this.sectionOutlineStrokeMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1186,                result = this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1188,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1190,            result = this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1192,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1213,        return this.sectionOutlineStrokeMap.getStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1232,"        this.sectionOutlineStrokeMap.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1233,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1234,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1245,        return this.baseSectionOutlineStroke;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1256,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1257,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1259,        this.baseSectionOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1260,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1261,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1271,        return this.shadowPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1283,        this.shadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1284,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1285,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1295,        return this.shadowXOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1307,        this.shadowXOffset = offset;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1308,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1309,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1319,        return this.shadowYOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1331,        this.shadowYOffset = offset;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1332,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1333,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1352,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1353,        if (this.explodePercentages != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1354,            Number percent = (Number) this.explodePercentages.get(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1355,            if (percent != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1356,                result = percent.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1359,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1374,        if (key == null) { ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1375,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1377,        if (this.explodePercentages == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1378,            this.explodePercentages = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1380,"        this.explodePercentages.put(key, new Double(percent));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1381,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1382,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1390,        if (this.dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1391,            return 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1393,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1394,        Iterator iterator = this.dataset.getKeys().iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1395,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1396,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1397,            Number explode = (Number) this.explodePercentages.get(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1398,            if (explode != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1399,"                result = Math.max(result, explode.doubleValue());   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1401,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1402,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1413,        return this.labelGenerator;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1425,        this.labelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1426,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1427,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1438,        return this.labelGap;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1451,        this.labelGap = gap;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1452,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1453,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1463,        return this.maximumLabelWidth;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1475,        this.maximumLabelWidth = width;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1476,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1477,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1488,        return this.labelLinksVisible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1503,        this.labelLinksVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1504,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1505,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1517,    	return this.labelLinkStyle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1531,    	if (style == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1532,"    		throw new IllegalArgumentException(""Null 'style' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1534,    	this.labelLinkStyle = style;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1535,    	fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1536,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1547,        return this.labelLinkMargin;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1559,        this.labelLinkMargin = margin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1560,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1561,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1572,        return this.labelLinkPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1585,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1586,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1588,        this.labelLinkPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1589,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1590,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1600,        return this.labelLinkStroke;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1612,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1613,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1615,        this.labelLinkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1616,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1617,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1627,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1639,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1640,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1642,        this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1643,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1644,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1654,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1666,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1667,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1669,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1670,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1671,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1681,        return this.labelBackgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1693,        this.labelBackgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1694,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1695,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1705,        return this.labelOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1717,        this.labelOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1718,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1719,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1729,        return this.labelOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1741,        this.labelOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1742,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1743,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1753,        return this.labelShadowPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1765,        this.labelShadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1766,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1767,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1779,        return this.labelPadding;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1793,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1794,"            throw new IllegalArgumentException(""Null 'padding' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1796,        this.labelPadding = padding;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1797,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1798,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1809,        return this.simpleLabels;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1822,        this.simpleLabels = simple;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1823,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1824,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1836,        return this.simpleLabelOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1850,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1851,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1853,        this.simpleLabelOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1854,        fireChangeEvent();        ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1855,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1866,        return this.labelDistributor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1878,        if (distributor == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1879,"            throw new IllegalArgumentException(""Null 'distributor' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1881,        this.labelDistributor = distributor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1882,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1883,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1895,        return this.toolTipGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1908,        this.toolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1909,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1910,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1920,        return this.urlGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1932,        this.urlGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1933,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1934,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1945,        return this.minimumArcAngleToDraw;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1967,        this.minimumArcAngleToDraw = angle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1968,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1978,        return this.legendItemShape;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1990,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1991,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1993,        this.legendItemShape = shape;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1994,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,1995,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2005,        return this.legendLabelGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2017,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2018,"            throw new IllegalArgumentException(""Null 'generator' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2020,        this.legendLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2021,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2022,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2032,        return this.legendLabelToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2045,        this.legendLabelToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2046,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2047,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2059,        return this.legendLabelURLGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2073,        this.legendLabelURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2074,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2075,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2095,        PiePlotState state = new PiePlotState(info);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2096,        state.setPassesRequired(2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2097,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2098,            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2101,        state.setLatestAngle(plot.getStartAngle());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2102,        return state;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2121,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2122,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2124,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2125,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2126,            info.setDataArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2129,"        drawBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2130,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2132,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2133,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2135,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2136,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2139,        if (!DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2140,"            drawPie(g2, area, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2143,"            drawNoDataMessage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2146,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2147,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2149,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2151,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2163,"        PiePlotState state = initialise(g2, plotArea, this, null, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2166,        double labelReserve = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2167,        if (this.labelGenerator != null && !this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2168,            labelReserve = this.labelGap + this.maximumLabelWidth;    ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2170,        double gapHorizontal = plotArea.getWidth() * (this.interiorGap ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2172,        double gapVertical = plotArea.getHeight() * this.interiorGap * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2188,        double linkX = plotArea.getX() + gapHorizontal / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2189,        double linkY = plotArea.getY() + gapVertical / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2190,        double linkW = plotArea.getWidth() - gapHorizontal;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2191,        double linkH = plotArea.getHeight() - gapVertical;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2194,        if (this.circular) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2195,"            double min = Math.min(linkW, linkH) / 2;",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2196,            linkX = (linkX + linkX + linkW) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2197,            linkY = (linkY + linkY + linkH) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2198,            linkW = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2199,            linkH = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2204,"        Rectangle2D linkArea = new Rectangle2D.Double(linkX, linkY, linkW, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2206,        state.setLinkArea(linkArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2219,        double lm = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2220,        if (!this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2221,            lm = this.labelLinkMargin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2223,        double hh = linkArea.getWidth() * lm * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2224,        double vv = linkArea.getHeight() * lm * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2225,"        Rectangle2D explodeArea = new Rectangle2D.Double(linkX + hh / 2.0, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2228,        state.setExplodedPieArea(explodeArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2233,        double maximumExplodePercent = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2234,        double percent = maximumExplodePercent / (1.0 + maximumExplodePercent);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2236,        double h1 = explodeArea.getWidth() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2237,        double v1 = explodeArea.getHeight() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2238,        Rectangle2D pieArea = new Rectangle2D.Double(explodeArea.getX() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2246,        state.setPieArea(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2247,        state.setPieCenterX(pieArea.getCenterX());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2248,        state.setPieCenterY(pieArea.getCenterY());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2249,        state.setPieWRadius(pieArea.getWidth() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2250,        state.setPieHRadius(pieArea.getHeight() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2253,        if ((this.dataset != null) && (this.dataset.getKeys().size() > 0)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2255,            List keys = this.dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2256,            double totalValue = DatasetUtilities.calculatePieDatasetTotal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2259,            int passesRequired = state.getPassesRequired();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2260,            for (int pass = 0; pass < passesRequired; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2261,                double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2262,                for (int section = 0; section < keys.size(); section++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2263,                    Number n = this.dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2264,                    if (n != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2265,                        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2266,                        if (value > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2267,                            runningTotal += value;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2268,"                            drawItem(g2, section, explodeArea, state, pass);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2273,            if (this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2274,"                drawSimpleLabels(g2, keys, totalValue, plotArea, linkArea, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2278,"                drawLabels(g2, keys, totalValue, plotArea, linkArea, state);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2281,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2283,"            drawNoDataMessage(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2285,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2299,        Number n = this.dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2300,        if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2301,            return;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2303,        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2304,        double angle1 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2305,        double angle2 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2307,        if (this.direction == Rotation.CLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2308,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2309,            angle2 = angle1 - value / state.getTotal() * 360.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2311,        else if (this.direction == Rotation.ANTICLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2312,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2313,            angle2 = angle1 + value / state.getTotal() * 360.0;         ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2316,"            throw new IllegalStateException(""Rotation type not recognised."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2319,        double angle = (angle2 - angle1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2320,        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2321,            double ep = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2322,            double mep = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2323,            if (mep > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2324,                ep = getExplodePercent(getSectionKey(section)) / mep;                ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2326,"            Rectangle2D arcBounds = getArcBounds(state.getPieArea(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2328,"            Arc2D.Double arc = new Arc2D.Double(arcBounds, angle1, angle, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2331,            if (currentPass == 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2332,                if (this.shadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2333,                    Shape shadowArc = ShapeUtilities.createTranslatedShape(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2336,                    g2.setPaint(this.shadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2337,                    g2.fill(shadowArc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2338,                },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2340,            else if (currentPass == 1) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2341,                Comparable key = getSectionKey(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2342,"                Paint paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2343,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2344,                g2.fill(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2346,                Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2347,                Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2348,                if (this.sectionOutlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2349,                    g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2350,                    g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2351,                    g2.draw(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2356,                if (state.getInfo() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2357,                    EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2358,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2359,                        String tip = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2360,                        if (this.toolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2361,                            tip = this.toolTipGenerator.generateToolTip(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2364,                        String url = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2365,                        if (this.urlGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2366,"                            url = this.urlGenerator.generateURL(this.dataset, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2369,                        PieSectionEntity entity = new PieSectionEntity(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2372,                        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2377,        state.setLatestAngle(angle2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2378,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2396,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2397,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2400,"        RectangleInsets labelInsets = new RectangleInsets(UnitType.RELATIVE, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2402,        Rectangle2D labelsArea = labelInsets.createInsetRectangle(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2403,        double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2404,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2405,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2406,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2407,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2408,            double v = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2409,            Number n = getDataset().getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2410,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2411,                include = !getIgnoreNullValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2414,                v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2415,                include = getIgnoreZeroValues() ? v > 0.0 : v >= 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2418,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2419,                runningTotal = runningTotal + v;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2422,                double mid = getStartAngle() + (getDirection().getFactor(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2425,"                Arc2D arc = new Arc2D.Double(labelsArea, getStartAngle(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2427,                int x = (int) arc.getEndPoint().getX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2428,                int y = (int) arc.getEndPoint().getY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2430,                PieSectionLabelGenerator labelGenerator = getLabelGenerator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2431,                if (labelGenerator == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2432,                    continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2434,                String label = labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2436,                if (label == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2437,                    continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2439,                g2.setFont(this.labelFont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2440,                FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2441,"                Rectangle2D bounds = TextUtilities.getTextBounds(label, g2, fm);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2442,                Rectangle2D out = this.labelPadding.createOutsetRectangle(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2444,"                Shape bg = ShapeUtilities.createTranslatedShape(out, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2446,                if (this.labelShadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2447,"                    Shape shadow = ShapeUtilities.createTranslatedShape(bg, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2449,                    g2.setPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2450,                    g2.fill(shadow);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2452,                if (this.labelBackgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2453,                    g2.setPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2454,                    g2.fill(bg);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2456,                if (this.labelOutlinePaint != null ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2458,                    g2.setPaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2459,                    g2.setStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2460,                    g2.draw(bg);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2463,                g2.setPaint(this.labelPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2464,                g2.setFont(this.labelFont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2465,                TextUtilities.drawAlignedString(getLabelGenerator(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2470,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2472,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2474,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2490,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2491,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2495,        DefaultKeyedValues leftKeys = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2496,        DefaultKeyedValues rightKeys = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2498,        double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2499,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2500,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2501,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2502,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2503,            double v = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2504,            Number n = this.dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2505,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2506,                include = !this.ignoreNullValues;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2509,                v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2510,                include = this.ignoreZeroValues ? v > 0.0 : v >= 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2513,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2514,                runningTotal = runningTotal + v;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2517,                double mid = this.startAngle + (this.direction.getFactor(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2519,                if (Math.cos(Math.toRadians(mid)) < 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2520,"                    leftKeys.addValue(key, new Double(mid));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2523,"                    rightKeys.addValue(key, new Double(mid));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2526,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2528,        g2.setFont(getLabelFont());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2532,        double marginX = plotArea.getX() + this.interiorGap ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2534,        double gap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2535,        double ww = linkArea.getX() - gap - marginX;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2536,        float labelWidth = (float) this.labelPadding.trimWidth(ww);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2539,        if (this.labelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2540,"            drawLeftLabels(leftKeys, g2, plotArea, linkArea, labelWidth, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2542,"            drawRightLabels(rightKeys, g2, plotArea, linkArea, labelWidth, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2545,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2547,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2565,        this.labelDistributor.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2566,        double lGap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2567,        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2568,        for (int i = 0; i < leftKeys.getItemCount(); i++) {   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2569,            String label = this.labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2571,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2572,"                TextBlock block = TextUtilities.createTextBlock(label, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2575,                TextBox labelBox = new TextBox(block);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2576,                labelBox.setBackgroundPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2577,                labelBox.setOutlinePaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2578,                labelBox.setOutlineStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2579,                labelBox.setShadowPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2580,                labelBox.setInteriorGap(this.labelPadding);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2581,                double theta = Math.toRadians(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2583,                double baseY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2585,                double hh = labelBox.getHeight(g2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2587,                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2593,        double hh = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2594,        double gap = hh * getInteriorGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2595,"        this.labelDistributor.distributeLabels(plotArea.getMinY() + gap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2597,        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2598,"            drawLeftLabel(g2, state, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2601,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2618,        this.labelDistributor.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2619,        double lGap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2620,        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2622,        for (int i = 0; i < keys.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2623,            String label = this.labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2626,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2627,"                TextBlock block = TextUtilities.createTextBlock(label, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2630,                TextBox labelBox = new TextBox(block);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2631,                labelBox.setBackgroundPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2632,                labelBox.setOutlinePaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2633,                labelBox.setOutlineStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2634,                labelBox.setShadowPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2635,                labelBox.setInteriorGap(this.labelPadding);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2636,                double theta = Math.toRadians(keys.getValue(i).doubleValue());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2637,                double baseY = state.getPieCenterY() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2639,                double hh = labelBox.getHeight(g2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2640,                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2646,        double hh = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2647,        double gap = hh * getInteriorGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2648,"        this.labelDistributor.distributeLabels(plotArea.getMinY() + gap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2650,        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2651,"            drawRightLabel(g2, state, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2655,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2664,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2665,        if (this.dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2666,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2668,        List keys = this.dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2669,        int section = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2670,        Shape shape = getLegendItemShape();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2671,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2672,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2673,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2674,            Number n = this.dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2675,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2676,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2677,                include = !this.ignoreNullValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2680,                double v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2681,                if (v == 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2682,                    include = !this.ignoreZeroValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2685,                    include = v > 0.0;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2688,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2689,                String label = this.legendLabelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2691,                if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2692,                    String description = label;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2693,                    String toolTipText = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2694,                    if (this.legendLabelToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2695,                        toolTipText = this.legendLabelToolTipGenerator,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2698,                    String urlText = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2699,                    if (this.legendLabelURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2700,                        urlText = this.legendLabelURLGenerator.generateURL(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2703,"                    Paint paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2704,                    Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2705,                    Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2706,"                    LegendItem item = new LegendItem(label, description, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2711,                    item.setDataset(getDataset());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2712,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2714,                section++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2715,            },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2717,                section++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2719,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2720,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2729,"        return localizationResources.getString(""Pie_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2751,        if (explodePercent == 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2752,            return unexploded;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2755,"            Arc2D arc1 = new Arc2D.Double(unexploded, angle, extent / 2, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2757,            Point2D point1 = arc1.getEndPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2758,"            Arc2D.Double arc2 = new Arc2D.Double(exploded, angle, extent / 2, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2760,            Point2D point2 = arc2.getEndPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2761,            double deltaX = (point1.getX() - point2.getX()) * explodePercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2762,            double deltaY = (point1.getY() - point2.getY()) * explodePercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2763,"            return new Rectangle2D.Double(unexploded.getX() - deltaX, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2779,        double anchorX = state.getLinkArea().getMinX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2780,        double targetX = anchorX - record.getGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2781,        double targetY = record.getAllocatedY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2783,        if (this.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2784,            double theta = record.getAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2785,            double linkX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2787,            double linkY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2789,            double elbowX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2791,            double elbowY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2793,            double anchorY = elbowY;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2794,            g2.setPaint(this.labelLinkPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2795,            g2.setStroke(this.labelLinkStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2796,            PieLabelLinkStyle style = getLabelLinkStyle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2797,            if (style.equals(PieLabelLinkStyle.STANDARD)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2798,"                g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2799,"                g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2800,"                g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2802,            else if (style.equals(PieLabelLinkStyle.QUAD_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2803,            	QuadCurve2D q = new QuadCurve2D.Float();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2804,"                q.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2805,                g2.draw(q);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2806,"                g2.draw(new Line2D.Double(elbowX, elbowY, linkX, linkY));            	",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2807,            },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2808,            else if (style.equals(PieLabelLinkStyle.CUBIC_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2809,            	CubicCurve2D c = new CubicCurve2D .Float();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2810,"                c.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2812,                g2.draw(c);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2815,        TextBox tb = record.getLabel();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2816,"        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.RIGHT);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2818,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2830,        double anchorX = state.getLinkArea().getMaxX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2831,        double targetX = anchorX + record.getGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2832,        double targetY = record.getAllocatedY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2834,        if (this.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2835,            double theta = record.getAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2836,            double linkX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2838,            double linkY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2840,            double elbowX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2842,            double elbowY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2844,            double anchorY = elbowY;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2845,            g2.setPaint(this.labelLinkPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2846,            g2.setStroke(this.labelLinkStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2847,            PieLabelLinkStyle style = getLabelLinkStyle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2848,            if (style.equals(PieLabelLinkStyle.STANDARD)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2849,"                g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2850,"                g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2851,"                g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2853,            else if (style.equals(PieLabelLinkStyle.QUAD_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2854,            	QuadCurve2D q = new QuadCurve2D.Float();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2855,"                q.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2856,                g2.draw(q);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2857,"                g2.draw(new Line2D.Double(elbowX, elbowY, linkX, linkY));            	",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2858,            },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2859,            else if (style.equals(PieLabelLinkStyle.CUBIC_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2860,            	CubicCurve2D c = new CubicCurve2D .Float();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2861,"                c.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2863,                g2.draw(c);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2867,        TextBox tb = record.getLabel();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2868,"        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.LEFT);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2870,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2881,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2882,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2884,        if (!(obj instanceof PiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2885,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2887,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2888,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2890,        PiePlot that = (PiePlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2891,        if (this.pieIndex != that.pieIndex) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2892,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2894,        if (this.interiorGap != that.interiorGap) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2895,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2897,        if (this.circular != that.circular) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2898,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2900,        if (this.startAngle != that.startAngle) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2901,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2903,        if (this.direction != that.direction) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2904,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2906,        if (this.ignoreZeroValues != that.ignoreZeroValues) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2907,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2909,        if (this.ignoreNullValues != that.ignoreNullValues) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2910,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2912,"        if (!ObjectUtilities.equal(this.sectionPaintMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2914,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2916,"        if (!PaintUtilities.equal(this.baseSectionPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2918,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2920,        if (this.sectionOutlinesVisible != that.sectionOutlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2921,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2923,"        if (!ObjectUtilities.equal(this.sectionOutlinePaintMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2925,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2927,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2930,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2932,"        if (!ObjectUtilities.equal(this.sectionOutlineStrokeMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2934,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2936,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2939,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2941,"        if (!PaintUtilities.equal(this.shadowPaint, that.shadowPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2942,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2944,        if (!(this.shadowXOffset == that.shadowXOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2945,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2947,        if (!(this.shadowYOffset == that.shadowYOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2948,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2950,"        if (!ObjectUtilities.equal(this.explodePercentages, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2952,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2954,"        if (!ObjectUtilities.equal(this.labelGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2956,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2958,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2959,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2961,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2962,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2964,"        if (!PaintUtilities.equal(this.labelBackgroundPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2966,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2968,"        if (!PaintUtilities.equal(this.labelOutlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2970,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2972,"        if (!ObjectUtilities.equal(this.labelOutlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2974,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2976,"        if (!PaintUtilities.equal(this.labelShadowPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2978,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2980,        if (this.simpleLabels != that.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2981,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2983,        if (!this.simpleLabelOffset.equals(that.simpleLabelOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2984,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2986,        if (!this.labelPadding.equals(that.labelPadding)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2987,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2989,        if (!(this.maximumLabelWidth == that.maximumLabelWidth)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2990,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2992,        if (!(this.labelGap == that.labelGap)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2993,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2995,        if (!(this.labelLinkMargin == that.labelLinkMargin)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2996,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2998,        if (this.labelLinksVisible != that.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,2999,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3001,        if (!this.labelLinkStyle.equals(that.labelLinkStyle)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3002,        	return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3004,"        if (!PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3005,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3007,"        if (!ObjectUtilities.equal(this.labelLinkStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3009,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3011,"        if (!ObjectUtilities.equal(this.toolTipGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3013,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3015,"        if (!ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3016,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3018,        if (!(this.minimumArcAngleToDraw == that.minimumArcAngleToDraw)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3019,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3021,"        if (!ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3022,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3024,"        if (!ObjectUtilities.equal(this.legendLabelGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3026,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3028,"        if (!ObjectUtilities.equal(this.legendLabelToolTipGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3030,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3032,"        if (!ObjectUtilities.equal(this.legendLabelURLGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3034,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3037,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3049,        PiePlot clone = (PiePlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3050,        if (clone.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3051,            clone.dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3053,        if (this.urlGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3054,            clone.urlGenerator = (PieURLGenerator) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3057,        clone.legendItemShape = ShapeUtilities.clone(this.legendItemShape);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3058,        if (this.legendLabelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3059,            clone.legendLabelGenerator = (PieSectionLabelGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3062,        if (this.legendLabelToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3063,            clone.legendLabelToolTipGenerator = (PieSectionLabelGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3066,        if (this.legendLabelURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3067,            clone.legendLabelURLGenerator = (PieURLGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3070,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3081,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3082,"        SerialUtilities.writePaint(this.baseSectionPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3083,"        SerialUtilities.writePaint(this.baseSectionOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3084,"        SerialUtilities.writeStroke(this.baseSectionOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3085,"        SerialUtilities.writePaint(this.shadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3086,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3087,"        SerialUtilities.writePaint(this.labelBackgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3088,"        SerialUtilities.writePaint(this.labelOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3089,"        SerialUtilities.writeStroke(this.labelOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3090,"        SerialUtilities.writePaint(this.labelShadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3091,"        SerialUtilities.writePaint(this.labelLinkPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3092,"        SerialUtilities.writeStroke(this.labelLinkStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3093,"        SerialUtilities.writeShape(this.legendItemShape, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3094,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3106,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3107,        this.baseSectionPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3108,        this.baseSectionOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3109,        this.baseSectionOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3110,        this.shadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3111,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3112,        this.labelBackgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3113,        this.labelOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3114,        this.labelOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3115,        this.labelShadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3116,        this.labelLinkPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3117,        this.labelLinkStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3118,        this.legendItemShape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,12,3119,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,343,"        this(title, JFreeChart.DEFAULT_TITLE_FONT, plot, true);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,344,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,367,"            throw new NullPointerException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,404,            if (titleFont == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,405,                titleFont = DEFAULT_TITLE_FONT;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,407,"            this.title = new TextTitle(title, titleFont);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,408,            this.title.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,427,        return this.renderingHints;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,441,        if (renderingHints == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,442,"            throw new NullPointerException(""RenderingHints given are null"");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,444,        this.renderingHints = renderingHints;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,445,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,446,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,457,        return this.borderVisible;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,469,        this.borderVisible = visible;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,470,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,471,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,481,        return this.borderStroke;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,492,        this.borderStroke = stroke;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,493,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,494,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,504,        return this.borderPaint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,515,        this.borderPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,516,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,517,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,527,        return this.padding;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,539,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,540,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,542,        this.padding = padding;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,543,        notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,544,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,557,        return this.title;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,572,            this.title.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,594,        if (text != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,595,            if (this.title == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,596,"                setTitle(new TextTitle(text, JFreeChart.DEFAULT_TITLE_FONT));",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,599,                this.title.setText(text);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,603,            setTitle((TextTitle) null);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,605,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,616,        addSubtitle(legend);    ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,617,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,650,                    seen++;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,653,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,654,        return null;        ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,675,        return new ArrayList(this.subtitles);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,689,        if (subtitles == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,690,"            throw new NullPointerException(""Null 'subtitles' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,692,        setNotify(false);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,693,        clearSubtitles();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,694,        Iterator iterator = subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,695,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,696,            Title t = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,697,            if (t != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,698,                addSubtitle(t);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,700,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,701,        setNotify(true);  // this fires a ChartChangeEvent,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,702,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,712,        return this.subtitles.size();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,725,        if ((index < 0) || (index >= getSubtitleCount())) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,726,"            throw new IllegalArgumentException(""Index out of range."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,728,        return (Title) this.subtitles.get(index);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,740,        if (subtitle == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,741,"            throw new IllegalArgumentException(""Null 'subtitle' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,743,        this.subtitles.add(subtitle);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,744,        subtitle.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,745,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,746,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,758,        if (index < 0 || index > getSubtitleCount()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,759,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,762,        if (subtitle == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,763,"            throw new IllegalArgumentException(""Null 'subtitle' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,765,"        this.subtitles.add(index, subtitle);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,766,        subtitle.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,767,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,768,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,777,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,778,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,779,            Title t = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,780,            t.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,781,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,782,        this.subtitles.clear();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,783,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,784,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,807,        return this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,821,        return (CategoryPlot) this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,835,        return (XYPlot) this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,847,        Object val = this.renderingHints.get(RenderingHints.KEY_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,848,        return RenderingHints.VALUE_ANTIALIAS_ON.equals(val);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,863,        Object val = this.renderingHints.get(RenderingHints.KEY_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,864,        if (val == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,865,            val = RenderingHints.VALUE_ANTIALIAS_DEFAULT;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,867,        if (!flag && RenderingHints.VALUE_ANTIALIAS_OFF.equals(val) ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,870,            return;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,872,        if (flag) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,873,"            this.renderingHints.put(RenderingHints.KEY_ANTIALIASING, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,877,"            this.renderingHints.put(RenderingHints.KEY_ANTIALIASING, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,880,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,882,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,895,        return this.renderingHints.get(RenderingHints.KEY_TEXT_ANTIALIASING); ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,913,        if (flag) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,914,            setTextAntiAlias(RenderingHints.VALUE_TEXT_ANTIALIAS_ON);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,917,            setTextAntiAlias(RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,919,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,934,"        this.renderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING, val);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,935,        this.notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,936,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,946,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,966,            if (paint != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,967,                this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,968,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,983,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,996,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,997,            if (!this.backgroundImage.equals(image)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,998,                this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,999,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1003,            if (image != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1004,                this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1005,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1009,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1021,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1033,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1034,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1035,            fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1037,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1047,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1060,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1061,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1062,            fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1065,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1076,        return this.notify;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1088,        this.notify = notify;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1090,        if (notify) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1091,            notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1093,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1105,"        draw(g2, area, null, null);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1106,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1117,"        draw(g2, area, null, info);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1118,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1136,"        notifyListeners(new ChartProgressEvent(this, this, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1140,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1141,            info.clear();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1142,            info.setChartArea(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1146,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1147,        g2.clip(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1149,        g2.addRenderingHints(this.renderingHints);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1152,        if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1153,            g2.setPaint(this.backgroundPaint);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1154,            g2.fill(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1157,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1158,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1159,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1161,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1164,"            Align.align(dest, chartArea, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1165,"            g2.drawImage(this.backgroundImage, (int) dest.getX(), ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1168,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1171,        if (isBorderVisible()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1172,            Paint paint = getBorderPaint();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1173,            Stroke stroke = getBorderStroke();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1174,            if (paint != null && stroke != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1175,                Rectangle2D borderArea = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1179,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1180,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1181,                g2.draw(borderArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1186,        Rectangle2D nonTitleArea = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1187,        nonTitleArea.setRect(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1188,        this.padding.trim(nonTitleArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1190,        EntityCollection entities = null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1191,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1192,            entities = info.getEntityCollection();   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1194,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1195,"            EntityCollection e = drawTitle(this.title, g2, nonTitleArea, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1197,            if (e != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1198,                entities.addAll(e);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1202,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1203,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1204,            Title currentTitle = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1205,"            EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1207,            if (e != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1208,                entities.addAll(e);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1210,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1212,        Rectangle2D plotArea = nonTitleArea;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1215,        PlotRenderingInfo plotInfo = null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1216,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1217,            plotInfo = info.getPlotInfo();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1219,"        this.plot.draw(g2, plotArea, anchor, null, plotInfo);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1221,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1223,"        notifyListeners(new ChartProgressEvent(this, this, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1225,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1240,        double x = Double.NaN;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1241,        double y = Double.NaN;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1242,        if (hAlign == HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1243,            x = frame.getX();   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1245,        else if (hAlign == HorizontalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1246,            x = frame.getCenterX() - (dimensions.width / 2.0);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1248,        else if (hAlign == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1249,            x = frame.getMaxX() - dimensions.width;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1251,        if (vAlign == VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1252,            y = frame.getY();   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1254,        else if (vAlign == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1255,            y = frame.getCenterY() - (dimensions.height / 2.0);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1257,        else if (vAlign == VerticalAlignment.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1258,            y = frame.getMaxY() - dimensions.height;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1261,"        return new Rectangle2D.Double(x, y, dimensions.width, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1282,        if (t == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1283,"            throw new IllegalArgumentException(""Null 't' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1285,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1286,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1288,        Rectangle2D titleArea = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1289,        RectangleEdge position = t.getPosition();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1290,        double ww = area.getWidth();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1291,        if (ww <= 0.0) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1292,            return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1294,        double hh = area.getHeight();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1295,        if (hh <= 0.0) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1296,            return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1298,"        RectangleConstraint constraint = new RectangleConstraint(ww, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1301,        Object retValue = null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1302,        BlockParams p = new BlockParams();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1303,        p.setGenerateEntities(entities);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1304,        if (position == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1305,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1306,"            titleArea = createAlignedRectangle2D(size, area, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1308,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1309,"            area.setRect(area.getX(), Math.min(area.getY() + size.height, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1312,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1313,        else if (position == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1314,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1315,"            titleArea = createAlignedRectangle2D(size, area, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1317,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1318,"            area.setRect(area.getX(), area.getY(), area.getWidth(), ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1320,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1321,        else if (position == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1322,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1323,"            titleArea = createAlignedRectangle2D(size, area, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1325,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1326,"            area.setRect(area.getX(), area.getY(), area.getWidth() ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1328,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1330,        else if (position == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1331,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1332,"            titleArea = createAlignedRectangle2D(size, area, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1334,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1335,"            area.setRect(area.getX() + size.width, area.getY(), area.getWidth() ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1337,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1339,"            throw new RuntimeException(""Unrecognised title position."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1341,        EntityCollection result = null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1342,        if (retValue instanceof EntityBlockResult) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1343,            EntityBlockResult ebr = (EntityBlockResult) retValue;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1344,            result = ebr.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1346,        return result;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1358,"        return createBufferedImage(width, height, null);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1373,"        return createBufferedImage(width, height, BufferedImage.TYPE_INT_ARGB,",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1391,"        BufferedImage image = new BufferedImage(width, height, imageType);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1392,        Graphics2D g2 = image.createGraphics();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1393,"        draw(g2, new Rectangle2D.Double(0, 0, width, height), null, info);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1394,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1395,        return image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1418,"        BufferedImage image = new BufferedImage(imageWidth, imageHeight, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1420,        Graphics2D g2 = image.createGraphics();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1421,        double scaleX = imageWidth / drawWidth;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1422,        double scaleY = imageHeight / drawHeight;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1423,"        AffineTransform st = AffineTransform.getScaleInstance(scaleX, scaleY);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1424,        g2.transform(st);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1425,"        draw(g2, new Rectangle2D.Double(0, 0, drawWidth, drawHeight), null, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1427,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1428,        return image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1448,"        this.plot.handleClick(x, y, info.getPlotInfo());",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1450,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1460,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1461,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1463,"        this.changeListeners.add(ChartChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1464,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1474,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1475,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1477,"        this.changeListeners.remove(ChartChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1478,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1500,                if (listeners[i] == ChartChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1501,                    ((ChartChangeListener) listeners[i + 1]).chartChanged(,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1517,"        this.progressListeners.add(ChartProgressListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1518,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1528,"        this.progressListeners.remove(ChartProgressListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1529,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1539,        Object[] listeners = this.progressListeners.getListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1540,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1541,            if (listeners[i] == ChartProgressListener.class) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1542,                ((ChartProgressListener) listeners[i + 1]).chartProgress(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1546,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1555,        event.setChart(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1556,        notifyListeners(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1557,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1566,        event.setChart(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1567,        notifyListeners(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1568,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1578,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1579,            return true;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1581,        if (!(obj instanceof JFreeChart)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1582,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1584,        JFreeChart that = (JFreeChart) obj;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1585,        if (!this.renderingHints.equals(that.renderingHints)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1586,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1588,        if (this.borderVisible != that.borderVisible) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1589,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1591,"        if (!ObjectUtilities.equal(this.borderStroke, that.borderStroke)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1592,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1594,"        if (!PaintUtilities.equal(this.borderPaint, that.borderPaint)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1595,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1597,        if (!this.padding.equals(that.padding)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1598,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1600,"        if (!ObjectUtilities.equal(this.title, that.title)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1601,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1603,"        if (!ObjectUtilities.equal(this.subtitles, that.subtitles)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1604,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1606,"        if (!ObjectUtilities.equal(this.plot, that.plot)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1607,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1609,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1612,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1614,"        if (!ObjectUtilities.equal(this.backgroundImage, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1616,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1618,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1619,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1621,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1622,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1624,        if (this.notify != that.notify) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1625,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1627,        return true;,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1638,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1639,"        SerialUtilities.writeStroke(this.borderStroke, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1640,"        SerialUtilities.writePaint(this.borderPaint, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1641,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1642,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1654,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1655,        this.borderStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1656,        this.borderPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1657,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1658,        this.progressListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1659,        this.changeListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1660,        this.renderingHints = new RenderingHints(,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1665,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1666,            this.title.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1669,        for (int i = 0; i < getSubtitleCount(); i++) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1670,            getSubtitle(i).addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1672,        this.plot.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1673,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1681,        System.out.println(JFreeChart.INFO.toString());,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1682,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1693,        JFreeChart chart = (JFreeChart) super.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1695,        chart.renderingHints = (RenderingHints) this.renderingHints.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1700,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1701,            chart.title = (TextTitle) this.title.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1702,            chart.title.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1705,        chart.subtitles = new ArrayList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1706,        for (int i = 0; i < getSubtitleCount(); i++) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1707,            Title subtitle = (Title) getSubtitle(i).clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1708,            chart.subtitles.add(subtitle);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1709,            subtitle.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1712,        if (this.plot != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1713,            chart.plot = (Plot) this.plot.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1714,            chart.plot.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1717,        chart.progressListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1718,        chart.changeListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,12,1719,        return chart;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,79,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,91,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,92,            return true;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,94,        if (!(obj instanceof TableOrder)) {,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,95,            return false;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,97,        TableOrder that = (TableOrder) obj;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,98,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,99,            return false;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,101,        return true;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,110,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,121,        if (this.equals(TableOrder.BY_ROW)) {,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,122,            return TableOrder.BY_ROW;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,124,        else if (this.equals(TableOrder.BY_COLUMN)) {,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,125,            return TableOrder.BY_COLUMN;,0.0,0,-1,0
org/jfree/chart/util/TableOrder,12,127,        return null;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,90,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,103,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,104,            return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,106,        if (!(obj instanceof RectangleEdge)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,107,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,110,        RectangleEdge order = (RectangleEdge) obj;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,111,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,112,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,115,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,125,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,137,        return (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM);    ,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,149,        return (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT);    ,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,160,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,161,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,162,            result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,164,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,165,            result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,167,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,168,            result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,170,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,171,            result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,173,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,186,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,187,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,188,            result = rectangle.getMinY();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,190,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,191,            result = rectangle.getMaxY();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,193,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,194,            result = rectangle.getMinX();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,196,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,197,            result = rectangle.getMaxX();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,199,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,210,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,211,        if (this.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,212,            result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,214,        else if (this.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,215,            result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,217,        else if (this.equals(RectangleEdge.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,218,            result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,220,        else if (this.equals(RectangleEdge.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,221,            result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,12,223,        return result;,0.0,0,-1,0
org/jfree/chart/event/PlotChangeEvent,12,64,        super(plot);,0.0,0,-1,0
org/jfree/chart/event/PlotChangeEvent,12,65,        this.plot = plot;,0.0,0,-1,0
org/jfree/chart/event/PlotChangeEvent,12,66,    },0.0,0,-1,0
org/jfree/chart/event/PlotChangeEvent,12,74,        return this.plot;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,80,"        this(source, chart, ChartChangeEventType.GENERAL);",0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,81,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,104,        return this.chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,113,        this.chart = chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,114,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,122,        return this.type;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,131,        this.type = type;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,12,132,    },0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,72,    public DatasetGroup(String id) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,73,        if (id == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,74,"            throw new IllegalArgumentException(""Null 'id' argument."");   ",0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,76,        this.id = id;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,77,    },0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,85,        return this.id;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,96,        return super.clone();    ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,107,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,108,            return true;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,110,        if (!(obj instanceof DatasetGroup)) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,111,            return false;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,113,        DatasetGroup that = (DatasetGroup) obj;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,114,        if (!this.id.equals(that.id)) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,115,            return false;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,12,117,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,89,"        this(1.0, 1.0, 1.0, 1.0);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,90,    },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,118,"            throw new IllegalArgumentException(""Null 'unitType' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,134,        return this.unitType;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,143,        return this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,152,        return this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,161,        return this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,170,        return this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,181,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,182,            return true;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,184,        if (!(obj instanceof RectangleInsets)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,185,                return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,187,        final RectangleInsets that = (RectangleInsets) obj;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,188,        if (that.unitType != this.unitType) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,189,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,191,        if (this.left != that.left) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,192,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,194,        if (this.right != that.right) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,195,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,197,        if (this.top != that.top) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,198,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,200,        if (this.bottom != that.bottom) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,201,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,203,        return true;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,214,        result = (this.unitType != null ? this.unitType.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,215,        temp = this.top != +0.0d ? Double.doubleToLongBits(this.top) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,216,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,217,        temp = this.bottom != +0.0d ? Double.doubleToLongBits(this.bottom) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,218,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,219,        temp = this.left != +0.0d ? Double.doubleToLongBits(this.left) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,220,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,221,        temp = this.right != +0.0d ? Double.doubleToLongBits(this.right) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,222,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,223,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,233,"        return ""RectangleInsets[t="" + this.top + "",l="" + this.left",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,252,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,253,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,255,        double x = base.getX();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,256,        double y = base.getY();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,257,        double w = base.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,258,        double h = base.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,259,        if (horizontal == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,260,            double leftOutset = calculateLeftOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,261,            x = x - leftOutset;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,262,            w = w + leftOutset + calculateRightOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,263,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,264,        else if (horizontal == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,265,            double leftMargin = calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,266,            x = x + leftMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,267,            w = w - leftMargin - calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,269,        if (vertical == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,270,            double topMargin = calculateTopOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,271,            y = y - topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,272,            h = h + topMargin + calculateBottomOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,273,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,274,        else if (vertical == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,275,            double topMargin = calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,276,            y = y + topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,277,            h = h - topMargin - calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,279,"        return new Rectangle2D.Double(x, y, w, h);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,290,"        return createInsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,304,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,305,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,307,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,308,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,309,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,310,            topMargin = calculateTopInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,311,            bottomMargin = calculateBottomInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,313,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,314,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,315,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,316,            leftMargin = calculateLeftInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,317,            rightMargin = calculateRightInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,319,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,335,"        return createOutsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,350,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,351,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,353,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,354,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,355,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,356,            topMargin = calculateTopOutset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,357,            bottomMargin = calculateBottomOutset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,359,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,360,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,361,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,362,            leftMargin = calculateLeftOutset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,363,            rightMargin = calculateRightOutset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,365,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,381,        double result = this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,382,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,383,            result = (this.top * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,385,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,396,        double result = this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,397,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,398,            result = (height / (1 - this.top - this.bottom)) * this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,400,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,411,        double result = this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,412,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,413,            result = (this.bottom * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,415,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,426,        double result = this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,427,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,428,            result = (height / (1 - this.top - this.bottom)) * this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,430,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,441,        double result = this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,442,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,443,            result = (this.left * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,445,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,456,        double result = this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,457,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,458,            result = (width / (1 - this.left - this.right)) * this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,460,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,471,        double result = this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,472,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,473,            result = (this.right * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,475,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,486,        double result = this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,487,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,488,            result = (width / (1 - this.left - this.right)) * this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,490,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,501,        return width - calculateLeftInset(width) - calculateRightInset(width);   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,512,        return width + calculateLeftOutset(width) + calculateRightOutset(width);   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,523,        return height ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,535,        return height ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,545,        double w = area.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,546,        double h = area.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,547,        double l = calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,548,        double r = calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,549,        double t = calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,550,        double b = calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,551,"        area.setRect(area.getX() + l, area.getY() + t, w - l - r, h - t - b);    ",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,12,552,    },0.0,0,-1,0
org/jfree/data/general/DatasetChangeEvent,12,71,        super(source);,0.0,0,-1,0
org/jfree/data/general/DatasetChangeEvent,12,72,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetChangeEvent,12,73,    },0.0,0,-1,0
org/jfree/data/general/DatasetChangeEvent,12,83,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,72,        return (PieLabelRecord) this.labels.get(index);   ,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,81,        if (record == null) {,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,82,"            throw new IllegalArgumentException(""Null 'record' argument."");",0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,84,        this.labels.add(record);,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,85,    },0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,93,        return this.labels.size();   ,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,100,        this.labels.clear();,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,12,101,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,73,        sort();  // sorts the label records into ascending order by baseY,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,78,        if (isOverlap()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,79,"            adjustDownwards(minY, height);",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,82,        if (isOverlap()) { ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,83,"            adjustUpwards(minY, height);",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,86,        if (isOverlap()) {  ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,87,"            spreadEvenly(minY, height);",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,89,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,98,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,99,        for (int i = 0; i < this.labels.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,100,            PieLabelRecord plr = getPieLabelRecord(i);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,101,            if (y > plr.getLowerY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,102,                return true;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,104,            y = plr.getUpperY();    ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,106,        return false;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,114,        int lower = 0;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,115,        int upper = this.labels.size() - 1;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,116,        while (upper > lower) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,117,            if (lower < upper - 1) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,118,                PieLabelRecord r0 = getPieLabelRecord(lower);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,119,                PieLabelRecord r1 = getPieLabelRecord(lower + 1); ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,120,                if (r1.getLowerY() < r0.getUpperY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,121,                    double adjust = r0.getUpperY() - r1.getLowerY() ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,123,                    r1.setAllocatedY(r1.getAllocatedY() + adjust);   ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,126,            PieLabelRecord r2 = getPieLabelRecord(upper - 1);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,127,            PieLabelRecord r3 = getPieLabelRecord(upper);  ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,128,            if (r2.getUpperY() > r3.getLowerY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,129,                double adjust = (r2.getUpperY() - r3.getLowerY()) + this.minGap;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,130,                r3.setAllocatedY(r3.getAllocatedY() + adjust);   ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,132,            lower++; ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,133,            upper--;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,134,        },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,135,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,145,        for (int i = 0; i < this.labels.size() - 1; i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,146,            PieLabelRecord record0 = getPieLabelRecord(i);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,147,            PieLabelRecord record1 = getPieLabelRecord(i + 1);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,148,            if (record1.getLowerY() < record0.getUpperY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,149,                record1.setAllocatedY(Math.min(minY + height ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,155,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,165,        for (int i = this.labels.size() - 1; i > 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,166,            PieLabelRecord record0 = getPieLabelRecord(i);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,167,            PieLabelRecord record1 = getPieLabelRecord(i - 1);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,168,            if (record1.getUpperY() > record0.getLowerY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,169,                record1.setAllocatedY(Math.max(minY ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,174,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,184,        double y = minY;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,185,        double sumOfLabelHeights = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,186,        for (int i = 0; i < this.labels.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,187,            sumOfLabelHeights += getPieLabelRecord(i).getLabelHeight();,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,189,        double gap = height - sumOfLabelHeights;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,190,        if (this.labels.size() > 1) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,191,            gap = gap / (this.labels.size() - 1);   ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,193,        for (int i = 0; i < this.labels.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,194,            PieLabelRecord record = getPieLabelRecord(i);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,195,            y = y + record.getLabelHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,196,            record.setAllocatedY(y);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,197,            y = y + record.getLabelHeight() / 2.0 + gap;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,199,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,205,        Collections.sort(this.labels);  ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,206,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,215,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,216,        for (int i = 0; i < this.labels.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,217,"            result.append(getPieLabelRecord(i).toString()).append(""\n"");   ",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,12,219,        return result.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,116,"        this(area, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,117,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,127,"        this(area, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,128,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,138,"    public ChartEntity(Shape area, String toolTipText, String urlText) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,139,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,140,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,142,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,143,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,144,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,145,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,153,        return this.area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,166,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,167,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,169,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,170,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,178,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,187,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,188,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,196,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,205,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,206,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,215,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,216,"            return ""rect"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,219,"            return ""poly"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,229,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,230,            return getRectCoords((Rectangle2D) this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,233,            return getPolyCoords(this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,246,        if (rectangle == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,247,"            throw new IllegalArgumentException(""Null 'rectangle' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,249,        int x1 = (int) rectangle.getX();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,250,        int y1 = (int) rectangle.getY();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,251,        int x2 = x1 + (int) rectangle.getWidth();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,252,        int y2 = y1 + (int) rectangle.getHeight();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,254,        if (x2 == x1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,255,            x2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,257,        if (y2 == y1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,258,            y2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,261,"        return x1 + "","" + y1 + "","" + x2 + "","" + y2;",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,273,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,274,"            throw new IllegalArgumentException(""Null 'shape' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,276,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,277,        boolean first = true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,278,        float[] coords = new float[6];,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,279,"        PathIterator pi = shape.getPathIterator(null, 1.0);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,280,        while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,281,            pi.currentSegment(coords);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,282,            if (first) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,283,                first = false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,284,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,285,"                result.append("","").append((int) coords[1]);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,288,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,289,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,290,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,291,                result.append((int) coords[1]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,293,            pi.next();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,295,        return result.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,315,        StringBuffer tag = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,316,        boolean hasURL = (this.urlText == null ? false ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,318,        boolean hasToolTip = (this.toolTipText == null ? false ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,320,        if (hasURL || hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,321,"            tag.append(""<area shape=\"""" + getShapeType() + ""\"""" + "" coords=\"""" ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,323,            if (hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,324,                tag.append(toolTipTagFragmentGenerator.generateToolTipFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,327,            if (hasURL) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,328,                tag.append(urlTagFragmentGenerator.generateURLFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,332,"                tag.append("" nohref=\""nohref\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,336,            if (!hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,337,"                tag.append("" alt=\""\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,339,"            tag.append(""/>"");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,341,        return tag.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,351,"        StringBuffer buf = new StringBuffer(""ChartEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,352,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,353,        buf.append(this.toolTipText);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,354,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,365,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,366,            return true;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,368,        if (!(obj instanceof ChartEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,369,            return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,371,        ChartEntity that = (ChartEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,372,        if (!this.area.equals(that.area)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,373,            return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,375,"        if (!ObjectUtilities.equal(this.toolTipText, that.toolTipText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,376,            return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,378,"        if (!ObjectUtilities.equal(this.urlText, that.urlText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,379,            return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,381,        return true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,390,        int result = 37;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,391,"        result = HashUtilities.hashCode(result, this.toolTipText);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,392,"        result = HashUtilities.hashCode(result, this.urlText);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,393,        return result;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,405,        return super.clone();    ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,416,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,417,"        SerialUtilities.writeShape(this.area, stream);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,418,     },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,430,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,431,        this.area = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,12,432,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,99,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,100,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,101,        this.pieIndex = pieIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,102,        this.sectionIndex = sectionIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,103,        this.sectionKey = sectionKey;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,105,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,113,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,122,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,123,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,133,        return this.pieIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,142,        this.pieIndex = index;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,143,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,151,        return this.sectionIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,160,        this.sectionIndex = index;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,161,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,169,        return this.sectionKey;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,178,        this.sectionKey = key;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,179,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,12,187,"        return ""PieSection: "" + this.pieIndex + "", "" + this.sectionIndex + ""(""",0.0,0,-1,0
org/jfree/chart/util/Rotation,12,92,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,102,        return this.factor;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,114,        if (this == o) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,115,            return true;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,117,        if (!(o instanceof Rotation)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,118,            return false;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,121,        final Rotation rotation = (Rotation) o;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,123,        if (this.factor != rotation.factor) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,124,            return false;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,127,        return true;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,136,        final long temp = Double.doubleToLongBits(this.factor);,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,137,        return (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,148,        if (this.equals(Rotation.CLOCKWISE)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,149,            return Rotation.CLOCKWISE;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,151,        else if (this.equals(Rotation.ANTICLOCKWISE)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,152,            return Rotation.ANTICLOCKWISE;,0.0,0,-1,0
org/jfree/chart/util/Rotation,12,154,        return null;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,171,                                  Shape[] shapeSequence) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,173,        this.paintSequence = paintSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,174,        this.fillPaintSequence = DEFAULT_FILL_PAINT_SEQUENCE;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,175,        this.outlinePaintSequence = outlinePaintSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,176,        this.strokeSequence = strokeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,177,        this.outlineStrokeSequence = outlineStrokeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,178,        this.shapeSequence = shapeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,180,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,213,        Paint result ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,215,        this.paintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,216,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,225,        Paint result = this.outlinePaintSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,227,        this.outlinePaintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,228,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,239,        Paint result = this.fillPaintSequence[this.fillPaintIndex ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,241,        this.fillPaintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,242,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,251,        Stroke result = this.strokeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,253,        this.strokeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,254,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,263,        Stroke result = this.outlineStrokeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,265,        this.outlineStrokeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,266,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,275,        Shape result = this.shapeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,277,        this.shapeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,278,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,348,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,349,            return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,352,        if (!(obj instanceof DefaultDrawingSupplier)) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,353,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,356,        DefaultDrawingSupplier that = (DefaultDrawingSupplier) obj;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,358,"        if (!Arrays.equals(this.paintSequence, that.paintSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,359,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,361,        if (this.paintIndex != that.paintIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,362,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,364,"        if (!Arrays.equals(this.outlinePaintSequence, ",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,366,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,368,        if (this.outlinePaintIndex != that.outlinePaintIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,369,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,371,"        if (!Arrays.equals(this.strokeSequence, that.strokeSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,372,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,374,        if (this.strokeIndex != that.strokeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,375,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,377,"        if (!Arrays.equals(this.outlineStrokeSequence, ",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,379,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,381,        if (this.outlineStrokeIndex != that.outlineStrokeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,382,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,384,"        if (!equalShapes(this.shapeSequence, that.shapeSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,385,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,387,        if (this.shapeIndex != that.shapeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,388,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,390,        return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,403,        if (s1 == null) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,404,            return s2 == null;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,406,        if (s2 == null) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,407,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,409,        if (s1.length != s2.length) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,410,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,412,        for (int i = 0; i < s1.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,413,"            if (!ShapeUtilities.equal(s1[i], s2[i])) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,414,                return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,417,        return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,428,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,430,        int paintCount = this.paintSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,431,        stream.writeInt(paintCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,432,        for (int i = 0; i < paintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,433,"            SerialUtilities.writePaint(this.paintSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,436,        int outlinePaintCount = this.outlinePaintSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,437,        stream.writeInt(outlinePaintCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,438,        for (int i = 0; i < outlinePaintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,439,"            SerialUtilities.writePaint(this.outlinePaintSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,442,        int strokeCount = this.strokeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,443,        stream.writeInt(strokeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,444,        for (int i = 0; i < strokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,445,"            SerialUtilities.writeStroke(this.strokeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,448,        int outlineStrokeCount = this.outlineStrokeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,449,        stream.writeInt(outlineStrokeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,450,        for (int i = 0; i < outlineStrokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,451,"            SerialUtilities.writeStroke(this.outlineStrokeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,454,        int shapeCount = this.shapeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,455,        stream.writeInt(shapeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,456,        for (int i = 0; i < shapeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,457,"            SerialUtilities.writeShape(this.shapeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,460,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,472,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,474,        int paintCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,475,        this.paintSequence = new Paint[paintCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,476,        for (int i = 0; i < paintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,477,            this.paintSequence[i] = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,480,        int outlinePaintCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,481,        this.outlinePaintSequence = new Paint[outlinePaintCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,482,        for (int i = 0; i < outlinePaintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,483,            this.outlinePaintSequence[i] = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,486,        int strokeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,487,        this.strokeSequence = new Stroke[strokeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,488,        for (int i = 0; i < strokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,489,            this.strokeSequence[i] = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,492,        int outlineStrokeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,493,        this.outlineStrokeSequence = new Stroke[outlineStrokeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,494,        for (int i = 0; i < outlineStrokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,495,            this.outlineStrokeSequence[i] = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,498,        int shapeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,499,        this.shapeSequence = new Shape[shapeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,500,        for (int i = 0; i < shapeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,501,            this.shapeSequence[i] = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,504,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,544,        DefaultDrawingSupplier clone = (DefaultDrawingSupplier) super.clone(); ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,12,545,        return clone;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,127,        return this.id;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,138,        this.id = id;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,139,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,151,        return this.width;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,162,        this.width = width;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,163,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,175,        return this.height;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,186,        this.height = height;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,187,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,197,        return this.margin;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,210,"            throw new IllegalArgumentException(""Null 'margin' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,227,"        setMargin(new RectangleInsets(top, left, bottom, right));",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,228,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,239,        return this.frame;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,252,"            throw new IllegalArgumentException(""Null 'frame' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,265,        return this.padding;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,278,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,293,"        setPadding(new RectangleInsets(top, left, bottom, right));",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,294,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,304,        return this.margin.getLeft() + this.frame.getInsets().getLeft() ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,316,        return this.margin.getTop() + this.frame.getInsets().getTop() ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,329,"        return arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,342,"        Size2D base = new Size2D(getWidth(), getHeight());",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,343,        return constraint.calculateConstrainedSize(base);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,354,        return this.bounds;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,365,        if (bounds == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,366,"            throw new IllegalArgumentException(""Null 'bounds' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,368,        this.bounds = bounds;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,369,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,383,        double result = this.margin.trimWidth(fixedWidth);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,384,        result = this.frame.getInsets().trimWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,385,        result = this.padding.trimWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,386,"        return Math.max(result, 0.0);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,401,        double result = this.margin.trimHeight(fixedHeight);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,402,        result = this.frame.getInsets().trimHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,403,        result = this.padding.trimHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,404,"        return Math.max(result, 0.0);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,416,        if (c == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,417,"            throw new IllegalArgumentException(""Null 'c' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,419,        if (c.equals(RectangleConstraint.NONE)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,420,            return c;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,422,        double w = c.getWidth();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,423,        Range wr = c.getWidthRange();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,424,        double h = c.getHeight();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,425,        Range hr = c.getHeightRange();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,426,        double ww = trimToContentWidth(w);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,427,        double hh = trimToContentHeight(h);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,428,        Range wwr = trimToContentWidth(wr);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,429,        Range hhr = trimToContentHeight(hr);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,430,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,437,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,438,            return null;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,440,        double lowerBound = 0.0;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,441,        double upperBound = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,442,        if (r.getLowerBound() > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,443,            lowerBound = trimToContentWidth(r.getLowerBound());   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,445,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,446,            upperBound = trimToContentWidth(r.getUpperBound());,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,448,"        return new Range(lowerBound, upperBound);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,452,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,453,            return null;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,455,        double lowerBound = 0.0;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,456,        double upperBound = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,457,        if (r.getLowerBound() > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,458,            lowerBound = trimToContentHeight(r.getLowerBound());   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,460,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,461,            upperBound = trimToContentHeight(r.getUpperBound());,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,463,"        return new Range(lowerBound, upperBound);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,474,        double result = contentWidth;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,475,        result = this.padding.extendWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,476,        result = this.frame.getInsets().extendWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,477,        result = this.margin.extendWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,478,        return result;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,489,        double result = contentHeight;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,490,        result = this.padding.extendHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,491,        result = this.frame.getInsets().extendHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,492,        result = this.margin.extendHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,493,        return result;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,506,        this.margin.trim(area);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,507,        return area;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,520,        this.frame.getInsets().trim(area);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,521,        return area;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,534,        this.padding.trim(area);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,535,        return area;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,545,"        this.frame.draw(g2, area);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,546,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,556,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,557,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,559,        if (!(obj instanceof AbstractBlock)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,560,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,562,        AbstractBlock that = (AbstractBlock) obj;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,563,"        if (!ObjectUtilities.equal(this.id, that.id)) {",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,564,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,566,        if (!this.frame.equals(that.frame)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,567,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,569,        if (!this.bounds.equals(that.bounds)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,570,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,572,        if (!this.margin.equals(that.margin)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,573,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,575,        if (!this.padding.equals(that.padding)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,576,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,578,        if (this.height != that.height) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,579,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,581,        if (this.width != that.width) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,582,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,584,        return true;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,596,        AbstractBlock clone = (AbstractBlock) super.clone();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,597,        clone.bounds = (Rectangle2D) ShapeUtilities.clone(this.bounds);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,598,        if (this.frame instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,599,            PublicCloneable pc = (PublicCloneable) this.frame;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,600,            clone.frame = (BlockFrame) pc.clone();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,602,        return clone;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,613,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,614,"        SerialUtilities.writeShape(this.bounds, stream);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,615,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,627,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,628,        this.bounds = (Rectangle2D) SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,12,629,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,91,"                             double hGap, double vGap) {        ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,92,        this.horizontalAlignment = hAlign;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,93,        this.verticalAlignment = vAlign;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,94,        this.horizontalGap = hGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,95,        this.verticalGap = vGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,96,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,109,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,126,        LengthConstraintType w = constraint.getWidthConstraintType();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,127,        LengthConstraintType h = constraint.getHeightConstraintType();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,128,        if (w == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,129,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,130,"                return arrangeNN(container, g2);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,132,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,133,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,135,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,136,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,139,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,140,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,141,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,143,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,144,"                return arrangeFF(container, g2, constraint); ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,146,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,147,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,150,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,151,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,152,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,154,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,155,"                return arrangeRF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,157,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,158,"                return arrangeRR(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,161,        return new Size2D();  // TODO: complete this,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,180,"        return arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,198,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,200,        double height = constraint.getHeight();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,201,        if (height <= 0.0) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,202,            height = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,205,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,206,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,207,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,208,        List itemsInColumn = new ArrayList();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,209,        for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,210,            Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,211,"            Size2D size = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,212,            if (y + size.height <= height) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,213,                itemsInColumn.add(block);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,214,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,217,                y = y + size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,218,"                maxWidth = Math.max(maxWidth, size.width);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,221,                if (itemsInColumn.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,223,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,228,                    y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,229,                    x = x + size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,233,                    itemsInColumn.clear();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,234,                    x = x + maxWidth + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,235,                    y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,236,                    maxWidth = size.width;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,237,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,242,                    y = size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,243,                    itemsInColumn.add(block);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,247,"        return new Size2D(x + maxWidth, constraint.getHeight());  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,255,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,256,        if (constraint.getHeightRange().contains(s1.height)) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,257,            return s1;  // TODO: we didn't check the width yet,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,260,            RectangleConstraint c = constraint.toFixedHeight(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,263,"            return arrangeRF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,280,"        Size2D s = arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,281,        if (constraint.getWidthRange().contains(s.width)) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,282,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,285,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,288,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,302,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,303,        double height = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,304,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,305,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,306,        int blockCount = blocks.size();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,307,        if (blockCount > 0) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,308,            Size2D[] sizes = new Size2D[blocks.size()];,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,309,            for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,310,                Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,311,"                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,312,                height = height + sizes[i].getHeight();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,313,"                maxWidth = Math.max(sizes[i].width, maxWidth);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,314,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,319,                y = y + sizes[i].height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,321,            if (blockCount > 1) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,322,                height = height + this.verticalGap * (blockCount - 1);   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,324,            if (this.horizontalAlignment != HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,325,                for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,327,                    if (this.horizontalAlignment ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,331,                    else if (this.horizontalAlignment ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,338,"        return new Size2D(maxWidth, height);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,346,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,356,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,357,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,359,        if (!(obj instanceof ColumnArrangement)) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,360,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,362,        ColumnArrangement that = (ColumnArrangement) obj;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,363,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,364,            return false;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,366,        if (this.verticalAlignment != that.verticalAlignment) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,367,            return false;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,369,        if (this.horizontalGap != that.horizontalGap) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,370,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,372,        if (this.verticalGap != that.verticalGap) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,373,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,12,375,        return true;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,99,            return true;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,101,        if (!(obj instanceof HorizontalAlignment)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,102,            return false;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,104,        HorizontalAlignment that = (HorizontalAlignment) obj;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,105,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,106,            return false;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,108,        return true;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,117,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,128,        HorizontalAlignment result = null;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,129,        if (this.equals(HorizontalAlignment.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,130,            result = HorizontalAlignment.LEFT;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,132,        else if (this.equals(HorizontalAlignment.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,133,            result = HorizontalAlignment.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,135,        else if (this.equals(HorizontalAlignment.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,136,            result = HorizontalAlignment.CENTER;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,12,138,        return result;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,99,            return true;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,101,        if (!(obj instanceof VerticalAlignment)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,102,            return false;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,105,        VerticalAlignment alignment = (VerticalAlignment) obj;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,106,        if (!this.name.equals(alignment.name)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,107,            return false;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,109,        return true;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,118,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,129,        if (this.equals(VerticalAlignment.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,130,            return VerticalAlignment.TOP;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,132,        else if (this.equals(VerticalAlignment.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,133,            return VerticalAlignment.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,135,        else if (this.equals(VerticalAlignment.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,136,            return VerticalAlignment.CENTER;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,12,139,            return null;  // this should never happen,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,86,        this(new BorderArrangement());,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,87,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,97,"            throw new IllegalArgumentException(""Null 'arrangement' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,109,        return this.arrangement;    ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,118,        if (arrangement == null) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,119,"            throw new IllegalArgumentException(""Null 'arrangement' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,121,        this.arrangement = arrangement;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,122,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,131,        return this.blocks.isEmpty();   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,141,        return Collections.unmodifiableList(this.blocks);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,150,"        add(block, null);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,151,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,160,        this.blocks.add(block);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,161,"        this.arrangement.add(block, key);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,162,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,168,        this.blocks.clear();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,169,        this.arrangement.clear();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,170,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,182,"        return this.arrangement.arrange(this, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,192,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,193,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,207,        EntityBlockParams ebp = null;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,208,        StandardEntityCollection sec = null;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,209,        if (params instanceof EntityBlockParams) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,210,            ebp = (EntityBlockParams) params;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,211,            if (ebp.getGenerateEntities()) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,212,                sec = new StandardEntityCollection();   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,215,        Rectangle2D contentArea = (Rectangle2D) area.clone();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,216,        contentArea = trimMargin(contentArea);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,217,"        drawBorder(g2, contentArea);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,218,        contentArea = trimBorder(contentArea);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,219,        contentArea = trimPadding(contentArea);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,220,        Iterator iterator = this.blocks.iterator();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,221,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,222,            Block block = (Block) iterator.next();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,223,            Rectangle2D bounds = block.getBounds();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,224,            Rectangle2D drawArea = new Rectangle2D.Double(bounds.getX() ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,227,"            Object r = block.draw(g2, drawArea, params);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,228,            if (sec != null) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,229,                if (r instanceof EntityBlockResult) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,230,                    EntityBlockResult ebr = (EntityBlockResult) r;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,231,                    EntityCollection ec = ebr.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,232,                    sec.addAll(ec);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,235,        },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,236,        BlockResult result = null;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,237,        if (sec != null) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,238,            result = new BlockResult();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,239,            result.setEntityCollection(sec);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,241,        return result;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,252,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,253,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,255,        if (!(obj instanceof BlockContainer)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,256,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,258,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,259,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,261,        BlockContainer that = (BlockContainer) obj;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,262,        if (!this.arrangement.equals(that.arrangement)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,263,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,265,        if (!this.blocks.equals(that.blocks)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,266,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,268,        return true;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,279,        BlockContainer clone = (BlockContainer) super.clone();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,12,281,        return clone;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,95,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,98,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,101,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,114,        return this.paint;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,123,        return this.insets;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,132,        return this.stroke;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,142,        double w = area.getWidth();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,143,        double h = area.getHeight();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,145,        if (w <= 0.0 || h <= 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,146,            return;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,148,        double t = this.insets.calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,149,        double b = this.insets.calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,150,        double l = this.insets.calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,151,        double r = this.insets.calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,152,        double x = area.getX();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,153,        double y = area.getY();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,154,        double x0 = x + l / 2.0;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,155,        double x1 = x + w - r / 2.0;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,156,        double y0 = y + h - b / 2.0;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,157,        double y1 = y + t / 2.0;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,158,        g2.setPaint(getPaint());,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,159,        g2.setStroke(getStroke());,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,160,        Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,161,        if (t > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,162,"            line.setLine(x0, y1, x1, y1);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,163,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,165,        if (b > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,166,"            line.setLine(x0, y0, x1, y0);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,167,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,169,        if (l > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,170,"            line.setLine(x0, y0, x0, y1);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,171,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,173,        if (r > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,174,"            line.setLine(x1, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,175,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,177,    }    ,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,187,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,188,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,190,        if (!(obj instanceof LineBorder)) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,191,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,193,        LineBorder that = (LineBorder) obj;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,194,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,195,            return false;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,197,"        if (!ObjectUtilities.equal(this.stroke, that.stroke)){",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,198,            return false;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,200,        if (!this.insets.equals(that.insets)) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,201,            return false;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,203,        return true;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,214,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,215,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,216,"        SerialUtilities.writeStroke(this.stroke, stream);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,217,    },0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,229,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,230,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,231,        this.stroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,12,232,    }    ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,84,        this(Color.black);    ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,85,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,93,"        this(new RectangleInsets(1, 1, 1, 1), paint);   ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,94,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,105,"        this(new RectangleInsets(top, left, bottom, right), Color.black);    ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,106,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,119,"        this(new RectangleInsets(top, left, bottom, right), paint);    ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,120,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,130,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,133,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,145,        return this.insets;,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,154,        return this.paint;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,166,        double t = this.insets.calculateTopInset(area.getHeight());,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,167,        double b = this.insets.calculateBottomInset(area.getHeight());,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,168,        double l = this.insets.calculateLeftInset(area.getWidth());,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,169,        double r = this.insets.calculateRightInset(area.getWidth());,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,170,        double x = area.getX();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,171,        double y = area.getY();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,172,        double w = area.getWidth();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,173,        double h = area.getHeight();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,174,        g2.setPaint(this.paint);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,175,        Rectangle2D rect = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,176,        if (t > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,177,"            rect.setRect(x, y, w, t);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,178,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,180,        if (b > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,181,"            rect.setRect(x, y + h - b, w, b);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,182,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,184,        if (l > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,185,"            rect.setRect(x, y, l, h);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,186,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,188,        if (r > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,189,"            rect.setRect(x + w - r, y, r, h);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,190,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,192,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,202,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,203,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,205,        if (!(obj instanceof BlockBorder)) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,206,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,208,        BlockBorder that = (BlockBorder) obj;,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,209,        if (!this.insets.equals(that.insets)) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,210,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,212,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,213,            return false;,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,215,        return true;,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,226,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,227,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,228,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,240,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,241,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,12,242,    },0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,110,    },0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,127,        LengthConstraintType w = constraint.getWidthConstraintType();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,128,        LengthConstraintType h = constraint.getHeightConstraintType();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,129,        if (w == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,130,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,131,"                return arrangeNN(container, g2);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,133,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,134,"                return arrangeNF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,136,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,137,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,140,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,141,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,142,"                return arrangeFN(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,144,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,145,"                return arrangeFF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,147,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,148,"                return arrangeFR(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,151,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,152,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,153,"                return arrangeRN(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,155,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,156,"                return arrangeRF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,158,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,159,"                return arrangeRR(container, g2, constraint);   ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,162,"        throw new RuntimeException(""Unrecognised constraint type."");",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,179,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,180,        double width = constraint.getWidth();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,182,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,183,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,184,        double maxHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,185,        List itemsInRow = new ArrayList();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,186,        for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,187,            Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,188,"            Size2D size = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,189,            if (x + size.width <= width) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,190,                itemsInRow.add(block);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,191,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,194,                x = x + size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,195,"                maxHeight = Math.max(maxHeight, size.height);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,198,                if (itemsInRow.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,200,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,205,                    x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,206,                    y = y + size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,210,                    itemsInRow.clear();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,211,                    x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,212,                    y = y + maxHeight + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,213,                    maxHeight = size.height;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,214,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,219,                    x = size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,220,                    itemsInRow.add(block);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,224,"        return new Size2D(constraint.getWidth(), y + maxHeight);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,240,"        Size2D s = arrangeFN(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,241,        if (constraint.getHeightRange().contains(s.height)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,242,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,245,            RectangleConstraint c = constraint.toFixedHeight(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,248,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,266,"        return arrangeFN(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,284,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,285,        if (constraint.getWidthRange().contains(s1.width)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,286,            return s1;  // TODO: we didn't check the height yet,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,289,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,292,"            return arrangeFR(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,309,"        Size2D s = arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,310,        if (constraint.getWidthRange().contains(s.width)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,311,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,314,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,317,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,335,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,336,        if (constraint.getWidthRange().contains(s1.width)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,337,            return s1;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,340,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,343,"            return arrangeFN(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,357,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,358,        double width = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,359,        double maxHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,360,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,361,        int blockCount = blocks.size();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,362,        if (blockCount > 0) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,363,            Size2D[] sizes = new Size2D[blocks.size()];,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,364,            for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,365,                Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,366,"                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,367,                width = width + sizes[i].getWidth();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,368,"                maxHeight = Math.max(sizes[i].height, maxHeight);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,369,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,374,                x = x + sizes[i].width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,376,            if (blockCount > 1) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,377,                width = width + this.horizontalGap * (blockCount - 1);   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,379,            if (this.verticalAlignment != VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,380,                for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,382,                    if (this.verticalAlignment == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,385,                    else if (this.verticalAlignment ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,392,"        return new Size2D(width, maxHeight);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,408,"        return arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,416,    },0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,426,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,427,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,429,        if (!(obj instanceof FlowArrangement)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,430,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,432,        FlowArrangement that = (FlowArrangement) obj;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,433,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,434,            return false;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,436,        if (this.verticalAlignment != that.verticalAlignment) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,437,            return false;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,439,        if (this.horizontalGap != that.horizontalGap) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,440,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,442,        if (this.verticalGap != that.verticalGap) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,443,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,12,445,        return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,102,"        this(DEFAULT_SECTION_LABEL_FORMAT, locale);",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,103,    },0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,112,"        this(labelFormat, NumberFormat.getNumberInstance(), ",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,114,    },0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,125,"        this(labelFormat, NumberFormat.getNumberInstance(locale),",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,127,    },0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,154,        return (AttributedString) this.attributedLabels.get(section);    ,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,164,"        this.attributedLabels.set(section, label);",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,165,    },0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,176,"        return super.generateSectionLabel(dataset, key);",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,208,        return getAttributedLabel(dataset.getIndex(key));,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,219,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,220,            return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,222,        if (!(obj instanceof StandardPieSectionLabelGenerator)) {,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,223,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,225,        StandardPieSectionLabelGenerator that ,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,227,        if (!this.attributedLabels.equals(that.attributedLabels)) {,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,228,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,230,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,231,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,233,        return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,12,244,        return super.clone();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,85,"            throw new IllegalArgumentException(""Null 'labelFormat' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,88,"            throw new IllegalArgumentException(""Null 'numberFormat' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,91,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,107,        return this.labelFormat;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,116,        return this.numberFormat;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,125,        return this.percentFormat;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,145,        Object[] result = new Object[4];,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,146,        double total = DatasetUtilities.calculatePieDatasetTotal(dataset);,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,147,        result[0] = key.toString();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,148,        Number value = dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,149,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,150,            result[1] = this.numberFormat.format(value);  ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,153,"            result[1] = ""null"";",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,155,        double percent = 0.0;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,156,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,157,            double v = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,158,            if (v > 0.0) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,159,                percent = v / total; ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,162,        result[2] = this.percentFormat.format(percent);,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,163,        result[3] = this.numberFormat.format(total);,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,164,        return result;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,176,        String result = null;    ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,177,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,178,"            Object[] items = createItemArray(dataset, key);",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,179,"            result = MessageFormat.format(this.labelFormat, items);",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,181,        return result;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,192,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,193,            return true;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,195,        if (!(obj instanceof AbstractPieItemLabelGenerator)) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,196,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,199,        AbstractPieItemLabelGenerator that ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,201,        if (!this.labelFormat.equals(that.labelFormat)) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,202,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,204,        if (!this.numberFormat.equals(that.numberFormat)) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,205,            return false;   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,207,        if (!this.percentFormat.equals(that.percentFormat)) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,208,            return false;   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,210,        return true;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,222,        AbstractPieItemLabelGenerator clone ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,224,        if (this.numberFormat != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,225,            clone.numberFormat = (NumberFormat) this.numberFormat.clone();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,227,        if (this.percentFormat != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,228,            clone.percentFormat = (NumberFormat) this.percentFormat.clone();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,12,230,        return clone;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,90,"        super(name, version, info, copyright, licenceName);",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,91,        this.logo = logo;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,92,        this.licenceText = licenceText;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,94,    },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,102,        return this.logo;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,120,        return this.licenceText;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,138,        return this.contributors;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,157,        final StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,158,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,159,"        result.append("" version "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,160,        result.append(getVersion());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,161,"        result.append("".\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,162,        result.append(getCopyright());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,163,"        result.append("".\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,164,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,165,"        result.append(""For terms of use, see the licence below.\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,166,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,167,"        result.append(""FURTHER INFORMATION:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,168,        result.append(getInfo());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,169,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,170,"        result.append(""CONTRIBUTORS:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,171,        if (this.contributors != null) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,172,            final Iterator iterator = this.contributors.iterator();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,173,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,174,                final Contributor contributor = (Contributor) iterator.next();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,175,                result.append(contributor.getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,176,"                result.append("" ("");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,177,                result.append(contributor.getEmail());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,178,"                result.append("")."");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,179,            },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,180,        },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,182,"            result.append(""None"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,185,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,186,"        result.append(""OTHER LIBRARIES USED BY "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,187,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,188,"        result.append("":"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,189,        final Library[] libraries = getLibraries();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,190,        if (libraries.length != 0) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,191,            for (int i = 0; i < libraries.length; i++) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,192,                final Library lib = libraries[i];,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,193,                result.append(lib.getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,194,"                result.append("" "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,195,                result.append(lib.getVersion());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,196,"                result.append("" ("");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,197,                result.append(lib.getInfo());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,198,"                result.append("")."");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,202,"            result.append(""None"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,204,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,205,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,206,"        result.append("" LICENCE TERMS:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,207,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,208,        result.append(getLicenceText());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,12,210,        return result.toString();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,160,        this();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,161,        setName(name);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,162,        setVersion(version);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,163,        setLicenceName(licence);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,164,        setInfo(info);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,165,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,179,"        this(name, version, licenceName, info);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,180,        setCopyright(copyright);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,181,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,189,        return this.copyright;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,243,        return (Library[]) this.libraries.toArray,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,253,        if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,254,            throw new NullPointerException();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,256,        this.libraries.add(library);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,257,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,265,        ArrayList libraries = new ArrayList();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,266,        for (int i = 0; i < this.optionalLibraries.size(); i++) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,267,          OptionalLibraryHolder holder =,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,269,          Library l = holder.getLibrary();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,270,          if (l != null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,271,              libraries.add(l);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,274,        return (Library[]) libraries.toArray(new Library[libraries.size()]);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,283,        if (libraryClass == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,284,"            throw new NullPointerException(""Library classname must be given."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,286,        this.optionalLibraries.add,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,288,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,299,      if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,300,"          throw new NullPointerException(""Library must be given."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,302,      this.optionalLibraries.add(new OptionalLibraryHolder(library));,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,303,  },0.0,0,-1,0
org/jfree/chart/ui/Library,12,71,"    public Library(String name, String version, String licence, String info) {",0.0,0,-1,0
org/jfree/chart/ui/Library,12,73,        this.name = name;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,74,        this.version = version;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,75,        this.licenceName = licence;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,76,        this.info = info;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,77,    },0.0,0,-1,0
org/jfree/chart/ui/Library,12,92,        return this.name;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,101,        return this.version;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,110,        return this.licenceName;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,119,        return this.info;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,159,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/ui/Library,12,160,            return true;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,162,        if (obj == null || getClass() != obj.getClass()) {,0.0,0,-1,0
org/jfree/chart/ui/Library,12,163,            return false;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,166,        Library library = (Library) obj;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,168,        if (this.name != null ? !this.name.equals(library.name) ,0.0,0,-1,0
org/jfree/chart/ui/Library,12,170,            return false;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,173,        return true;,0.0,0,-1,0
org/jfree/chart/ui/Library,12,177,      return (this.name != null ? this.name.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/Title,12,150,"        this(position, horizontalAlignment, verticalAlignment,",0.0,0,-1,0
org/jfree/chart/title/Title,12,153,    },0.0,0,-1,0
org/jfree/chart/title/Title,12,176,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,12,179,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/title/Title,12,184,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/title/Title,12,188,"            throw new IllegalArgumentException(""Null 'spacer' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,12,206,        return this.position;,0.0,0,-1,0
org/jfree/chart/title/Title,12,217,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,12,231,        return this.horizontalAlignment;,0.0,0,-1,0
org/jfree/chart/title/Title,12,242,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,243,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,12,245,        if (this.horizontalAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,246,            this.horizontalAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/Title,12,247,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,12,249,    },0.0,0,-1,0
org/jfree/chart/title/Title,12,257,        return this.verticalAlignment;,0.0,0,-1,0
org/jfree/chart/title/Title,12,268,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,269,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,12,271,        if (this.verticalAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,272,            this.verticalAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/Title,12,273,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,12,275,    },0.0,0,-1,0
org/jfree/chart/title/Title,12,284,        return this.notify;,0.0,0,-1,0
org/jfree/chart/title/Title,12,295,        this.notify = flag;,0.0,0,-1,0
org/jfree/chart/title/Title,12,296,        if (flag) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,297,            notifyListeners(new TitleChangeEvent(this));   ,0.0,0,-1,0
org/jfree/chart/title/Title,12,299,    },0.0,0,-1,0
org/jfree/chart/title/Title,12,325,        Title duplicate = (Title) super.clone();,0.0,0,-1,0
org/jfree/chart/title/Title,12,326,        duplicate.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/title/Title,12,328,        return duplicate;,0.0,0,-1,0
org/jfree/chart/title/Title,12,346,"        this.listenerList.remove(TitleChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/title/Title,12,347,    },0.0,0,-1,0
org/jfree/chart/title/Title,12,360,                if (listeners[i] == TitleChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,361,                    ((TitleChangeListener) listeners[i + 1]).titleChanged(,0.0,0,-1,0
org/jfree/chart/title/Title,12,376,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,377,            return true;,0.0,0,-1,0
org/jfree/chart/title/Title,12,379,        if (!(obj instanceof Title)) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,380,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,12,382,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,383,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/Title,12,385,        Title that = (Title) obj;,0.0,0,-1,0
org/jfree/chart/title/Title,12,386,        if (this.position != that.position) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,387,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,12,389,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,390,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,12,392,        if (this.verticalAlignment != that.verticalAlignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,393,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,12,395,        if (this.notify != that.notify) {,0.0,0,-1,0
org/jfree/chart/title/Title,12,396,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,12,398,        return true;,0.0,0,-1,0
org/jfree/chart/title/Title,12,407,        int result = 193;,0.0,0,-1,0
org/jfree/chart/title/Title,12,408,        result = 37 * result + ObjectUtilities.hashCode(this.position);    ,0.0,0,-1,0
org/jfree/chart/title/Title,12,409,        result = 37 * result ,0.0,0,-1,0
org/jfree/chart/title/Title,12,411,        result = 37 * result + ObjectUtilities.hashCode(this.verticalAlignment);,0.0,0,-1,0
org/jfree/chart/title/Title,12,412,        return result;,0.0,0,-1,0
org/jfree/chart/title/Title,12,423,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/title/Title,12,424,    },0.0,0,-1,0
org/jfree/chart/title/Title,12,436,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/title/Title,12,437,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/title/Title,12,438,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,196,        return this.sources;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,206,        if (sources == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,207,"            throw new IllegalArgumentException(""Null 'sources' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,209,        this.sources = sources;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,210,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,211,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,219,        return this.backgroundPaint;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,239,        return this.legendItemGraphicEdge;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,248,        if (edge == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,249,"            throw new IllegalArgumentException(""Null 'edge' argument."");",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,251,        this.legendItemGraphicEdge = edge;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,252,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,253,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,261,        return this.legendItemGraphicAnchor;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,270,        if (anchor == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,271,"            throw new IllegalArgumentException(""Null 'anchor' point."");",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,273,        this.legendItemGraphicAnchor = anchor;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,274,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,282,        return this.legendItemGraphicLocation;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,291,        this.legendItemGraphicLocation = anchor;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,292,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,300,        return this.legendItemGraphicPadding;    ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,310,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,311,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,313,        this.legendItemGraphicPadding = padding;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,314,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,315,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,323,        return this.itemFont;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,333,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,334,"            throw new IllegalArgumentException(""Null 'font' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,336,        this.itemFont = font;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,337,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,338,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,346,        return this.itemPaint;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,355,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,356,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,358,        this.itemPaint = paint;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,359,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,360,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,368,        return this.itemLabelPadding;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,377,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,378,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,380,        this.itemLabelPadding = padding;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,381,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,382,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,388,        this.items.clear();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,389,        RectangleEdge p = getPosition();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,390,        if (RectangleEdge.isTopOrBottom(p)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,391,            this.items.setArrangement(this.hLayout);   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,394,            this.items.setArrangement(this.vLayout);   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,396,        for (int s = 0; s < this.sources.length; s++) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,397,            LegendItemCollection legendItems = this.sources[s].getLegendItems();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,398,            if (legendItems != null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,399,                for (int i = 0; i < legendItems.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,400,                    LegendItem item = legendItems.get(i);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,401,                    Block block = createLegendItemBlock(item);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,402,                    this.items.add(block);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,406,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,416,        BlockContainer result = null;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,417,"        LegendGraphic lg = new LegendGraphic(item.getShape(), ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,419,        lg.setFillPaintTransformer(item.getFillPaintTransformer());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,420,        lg.setShapeFilled(item.isShapeFilled());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,421,        lg.setLine(item.getLine());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,422,        lg.setLineStroke(item.getLineStroke());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,423,        lg.setLinePaint(item.getLinePaint());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,424,        lg.setLineVisible(item.isLineVisible());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,425,        lg.setShapeVisible(item.isShapeVisible());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,426,        lg.setShapeOutlineVisible(item.isShapeOutlineVisible());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,427,        lg.setOutlinePaint(item.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,428,        lg.setOutlineStroke(item.getOutlineStroke());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,429,        lg.setPadding(this.legendItemGraphicPadding);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,431,        LegendItemBlockContainer legendItem = new LegendItemBlockContainer(,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,434,        lg.setShapeAnchor(getLegendItemGraphicAnchor());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,435,        lg.setShapeLocation(getLegendItemGraphicLocation());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,436,"        legendItem.add(lg, this.legendItemGraphicEdge);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,437,"        LabelBlock labelBlock = new LabelBlock(item.getLabel(), this.itemFont, ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,439,        labelBlock.setPadding(this.itemLabelPadding);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,440,        legendItem.add(labelBlock);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,441,        legendItem.setToolTipText(item.getToolTipText());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,442,        legendItem.setURLText(item.getURLText());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,444,        result = new BlockContainer(new CenterArrangement());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,445,        result.add(legendItem);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,447,        return result;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,456,        return this.items;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,469,        Size2D result = new Size2D();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,470,        fetchLegendItems();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,471,        if (this.items.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,472,            return result;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,474,        BlockContainer container = this.wrapper;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,475,        if (container == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,476,            container = this.items;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,478,        RectangleConstraint c = toContentConstraint(constraint);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,479,"        Size2D size = container.arrange(g2, c);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,480,        result.height = calculateTotalHeight(size.height);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,481,        result.width = calculateTotalWidth(size.width);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,482,        return result;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,493,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,494,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,507,        Rectangle2D target = (Rectangle2D) area.clone();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,508,        target = trimMargin(target);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,509,        if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,510,            g2.setPaint(this.backgroundPaint);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,511,            g2.fill(target);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,513,        BlockFrame border = getFrame();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,514,"        border.draw(g2, target);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,515,        border.getInsets().trim(target);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,516,        BlockContainer container = this.wrapper;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,517,        if (container == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,518,            container = this.items; ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,520,        target = trimPadding(target);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,521,"        return container.draw(g2, target, params);   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,530,        this.wrapper = wrapper;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,531,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,544,        if (!(obj instanceof LegendTitle)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,545,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,547,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,548,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,550,        LegendTitle that = (LegendTitle) obj;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,551,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,552,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,554,        if (this.legendItemGraphicEdge != that.legendItemGraphicEdge) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,555,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,557,        if (this.legendItemGraphicAnchor != that.legendItemGraphicAnchor) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,558,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,560,        if (this.legendItemGraphicLocation != that.legendItemGraphicLocation) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,561,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,563,        if (!this.itemFont.equals(that.itemFont)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,564,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,566,        if (!this.itemPaint.equals(that.itemPaint)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,567,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,569,        if (!this.hLayout.equals(that.hLayout)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,570,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,572,        if (!this.vLayout.equals(that.vLayout)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,573,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,575,        return true;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,586,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,587,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,588,"        SerialUtilities.writePaint(this.itemPaint, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,589,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,601,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,602,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,603,        this.itemPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,12,604,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,166,"        this("""");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,167,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,175,"        this(text, TextTitle.DEFAULT_FONT, TextTitle.DEFAULT_TEXT_PAINT,",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,178,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,214,"            throw new NullPointerException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,217,"            throw new NullPointerException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,220,"            throw new NullPointerException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,244,        return this.text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,254,        if (text == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,255,"            throw new IllegalArgumentException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,257,        if (!this.text.equals(text)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,258,            this.text = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,259,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,261,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,272,        return this.textAlignment;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,281,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,282,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,284,        this.textAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,285,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,286,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,296,        return this.font;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,308,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,309,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,311,        if (!this.font.equals(font)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,312,            this.font = font;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,313,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,315,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,325,        return this.paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,337,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,338,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,340,        if (!this.paint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,341,            this.paint = paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,342,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,344,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,352,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,363,        this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,364,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,365,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,373,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,383,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,384,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,385,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,393,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,403,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,404,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,405,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,414,        return this.expandToFitSpace;   ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,425,        this.expandToFitSpace = expand;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,426,        notifyListeners(new TitleChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,427,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,439,        RectangleConstraint cc = toContentConstraint(constraint);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,440,        LengthConstraintType w = cc.getWidthConstraintType();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,441,        LengthConstraintType h = cc.getHeightConstraintType();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,442,        Size2D contentSize = null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,443,        if (w == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,444,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,445,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,447,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,448,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,450,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,451,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,454,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,455,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,456,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,458,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,459,"                contentSize = arrangeRR(g2, cc.getWidthRange(), ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,462,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,463,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,466,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,467,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,468,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,470,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,471,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,473,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,474,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,477,"        return new Size2D(calculateTotalWidth(contentSize.getWidth()),",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,494,        RectangleEdge position = getPosition();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,495,        if (position == RectangleEdge.TOP || position == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,496,            float maxWidth = (float) widthRange.getUpperBound();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,497,            g2.setFont(this.font);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,498,"            this.content = TextUtilities.createTextBlock(this.text, this.font, ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,500,            this.content.setLineAlignment(this.textAlignment);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,501,            Size2D contentSize = this.content.calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,502,            if (this.expandToFitSpace) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,503,"                return new Size2D(maxWidth, contentSize.getHeight());",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,506,                return contentSize;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,509,        else if (position == RectangleEdge.LEFT || position ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,511,            float maxWidth = (float) heightRange.getUpperBound();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,512,            g2.setFont(this.font);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,513,"            this.content = TextUtilities.createTextBlock(this.text, this.font, ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,515,            this.content.setLineAlignment(this.textAlignment);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,516,            Size2D contentSize = this.content.calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,519,            if (this.expandToFitSpace) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,520,"                return new Size2D(contentSize.getHeight(), maxWidth);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,523,"                return new Size2D(contentSize.height, contentSize.width);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,527,"            throw new RuntimeException(""Unrecognised exception."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,539,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,540,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,555,        if (this.content == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,556,            return null;   ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,558,        area = trimMargin(area);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,559,"        drawBorder(g2, area);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,560,"        if (this.text.equals("""")) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,561,            return null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,563,        ChartEntity entity = null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,564,        if (params instanceof EntityBlockParams) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,565,            EntityBlockParams p = (EntityBlockParams) params;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,566,            if (p.getGenerateEntities()) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,567,"                entity = new ChartEntity(area, this.toolTipText, this.urlText);    ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,570,        area = trimBorder(area);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,571,        if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,572,            g2.setPaint(this.backgroundPaint);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,573,            g2.fill(area);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,575,        area = trimPadding(area);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,576,        RectangleEdge position = getPosition();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,577,        if (position == RectangleEdge.TOP || position == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,578,"            drawHorizontal(g2, area);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,580,        else if (position == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,582,"            drawVertical(g2, area);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,584,        BlockResult result = new BlockResult();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,585,        if (entity != null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,586,            StandardEntityCollection sec = new StandardEntityCollection();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,587,            sec.add(entity);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,588,            result.setEntityCollection(sec);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,590,        return result;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,602,        Rectangle2D titleArea = (Rectangle2D) area.clone();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,603,        g2.setFont(this.font);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,604,        g2.setPaint(this.paint);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,605,        TextBlockAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,606,        float x = 0.0f;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,607,        HorizontalAlignment horizontalAlignment = getHorizontalAlignment();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,608,        if (horizontalAlignment == HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,609,            x = (float) titleArea.getX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,610,            anchor = TextBlockAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,612,        else if (horizontalAlignment == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,613,            x = (float) titleArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,614,            anchor = TextBlockAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,616,        else if (horizontalAlignment == HorizontalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,617,            x = (float) titleArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,618,            anchor = TextBlockAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,620,        float y = 0.0f;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,621,        RectangleEdge position = getPosition();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,622,        if (position == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,623,            y = (float) titleArea.getY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,625,        else if (position == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,626,            y = (float) titleArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,627,            if (horizontalAlignment == HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,628,                anchor = TextBlockAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,630,            else if (horizontalAlignment == HorizontalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,631,                anchor = TextBlockAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,633,            else if (horizontalAlignment == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,634,                anchor = TextBlockAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,637,"        this.content.draw(g2, x, y, anchor);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,638,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,649,        Rectangle2D titleArea = (Rectangle2D) area.clone();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,650,        g2.setFont(this.font);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,651,        g2.setPaint(this.paint);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,652,        TextBlockAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,653,        float y = 0.0f;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,654,        VerticalAlignment verticalAlignment = getVerticalAlignment();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,655,        if (verticalAlignment == VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,656,            y = (float) titleArea.getY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,657,            anchor = TextBlockAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,659,        else if (verticalAlignment == VerticalAlignment.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,660,            y = (float) titleArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,661,            anchor = TextBlockAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,663,        else if (verticalAlignment == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,664,            y = (float) titleArea.getCenterY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,665,            anchor = TextBlockAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,667,        float x = 0.0f;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,668,        RectangleEdge position = getPosition();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,669,        if (position == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,670,            x = (float) titleArea.getX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,672,        else if (position == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,673,            x = (float) titleArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,674,            if (verticalAlignment == VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,675,                anchor = TextBlockAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,677,            else if (verticalAlignment == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,678,                anchor = TextBlockAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,680,            else if (verticalAlignment == VerticalAlignment.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,681,                anchor = TextBlockAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,684,"        this.content.draw(g2, x, y, anchor, x, y, -Math.PI / 2.0);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,685,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,695,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,696,            return true;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,698,        if (!(obj instanceof TextTitle)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,699,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,701,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,702,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,704,        TextTitle that = (TextTitle) obj;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,705,"        if (!ObjectUtilities.equal(this.text, that.text)) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,706,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,708,"        if (!ObjectUtilities.equal(this.font, that.font)) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,709,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,711,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,712,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,714,        if (this.textAlignment != that.textAlignment) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,715,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,717,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,718,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,720,        return true;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,729,        int result = super.hashCode();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,730,        result = 29 * result + (this.text != null ? this.text.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,731,        result = 29 * result + (this.font != null ? this.font.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,732,        result = 29 * result + (this.paint != null ? this.paint.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,733,        result = 29 * result + (this.backgroundPaint != null ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,735,        return result;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,746,        return super.clone();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,757,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,758,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,759,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,760,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,773,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,774,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,775,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,12,776,    },0.0,0,-1,0
org/jfree/chart/event/TitleChangeEvent,12,74,        return this.title;,0.0,0,-1,0
org/jfree/chart/ChartColor,12,139,"        super(r, g, b);",0.0,0,-1,0
org/jfree/chart/ChartColor,12,140,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,109,        Object result = null;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,110,        if (index >= 0 && index < this.size) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,111,            result = this.objects[index];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,113,        return result;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,123,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,124,"            throw new IllegalArgumentException(""Requires index >= 0."");",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,126,        if (index >= this.objects.length) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,127,            Object[] enlarged = new Object[index + this.increment];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,128,"            System.arraycopy(this.objects, 0, enlarged, 0, this.objects.length);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,129,            this.objects = enlarged;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,131,        this.objects[index] = object;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,132,"        this.size = Math.max(this.size, index + 1);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,133,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,139,"        Arrays.fill(this.objects, null);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,140,        this.size = 0;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,141,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,149,        return this.size;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,161,        for (int index = 0; index < this.size; index++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,162,            if (this.objects[index] == object) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,163,                return (index);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,166,        return -1;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,178,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,179,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,182,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,183,            return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,186,        if (!(obj instanceof AbstractObjectList)) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,187,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,190,        AbstractObjectList other = (AbstractObjectList) obj;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,191,        int listSize = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,192,        for (int i = 0; i < listSize; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,193,"           if (!ObjectUtilities.equal(get(i), other.get(i))) {",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,194,               return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,197,        return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,206,    	int result = 127;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,207,    	int size = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,208,"    	result = HashUtilities.hashCode(result, size());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,211,        if (size > 0) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,212,"            result = HashUtilities.hashCode(result, this.objects[0]);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,213,            if (size > 1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,214,"                result = HashUtilities.hashCode(result, this.objects[size - 1]);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,215,                if (size > 2) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,216,"                    result = HashUtilities.hashCode(result, ",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,221,        return result;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,235,        AbstractObjectList clone = (AbstractObjectList) super.clone();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,236,        if (this.objects != null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,237,            clone.objects = new Object[this.objects.length];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,238,"            System.arraycopy(this.objects, 0, clone.objects, 0, ",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,241,        return clone;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,255,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,256,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,257,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,258,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,259,            final Object object = get(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,260,            if (object != null && object instanceof Serializable) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,261,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,262,                stream.writeObject(object);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,265,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,269,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,282,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,283,        this.objects = new Object[this.size];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,284,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,285,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,286,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,287,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,288,"                set(index, stream.readObject());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,12,292,    },0.0,0,-1,0
org/jfree/chart/util/UnitType,12,79,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,91,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,92,            return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,94,        if (!(obj instanceof UnitType)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,95,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,97,        UnitType that = (UnitType) obj;,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,98,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,99,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,101,        return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,110,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,121,        if (this.equals(UnitType.ABSOLUTE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,122,            return UnitType.ABSOLUTE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,124,        else if (this.equals(UnitType.RELATIVE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,125,            return UnitType.RELATIVE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,12,127,        return null;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,116,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,129,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,130,            return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,132,        if (!(obj instanceof RectangleAnchor)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,133,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,136,        final RectangleAnchor order = (RectangleAnchor) obj;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,137,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,138,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,141,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,150,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,163,        Point2D result = new Point2D.Double();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,164,        if (anchor == RectangleAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,165,"            result.setLocation(rectangle.getCenterX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,167,        else if (anchor == RectangleAnchor.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,168,"            result.setLocation(rectangle.getCenterX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,170,        else if (anchor == RectangleAnchor.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,171,"            result.setLocation(rectangle.getCenterX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,173,        else if (anchor == RectangleAnchor.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,174,"            result.setLocation(rectangle.getMinX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,176,        else if (anchor == RectangleAnchor.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,177,"            result.setLocation(rectangle.getMaxX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,179,        else if (anchor == RectangleAnchor.TOP_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,180,"            result.setLocation(rectangle.getMinX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,182,        else if (anchor == RectangleAnchor.TOP_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,183,"            result.setLocation(rectangle.getMaxX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,185,        else if (anchor == RectangleAnchor.BOTTOM_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,186,"            result.setLocation(rectangle.getMinX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,188,        else if (anchor == RectangleAnchor.BOTTOM_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,189,"            result.setLocation(rectangle.getMaxX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,191,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,209,        Rectangle2D result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,210,        final double w = dimensions.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,211,        final double h = dimensions.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,212,        if (anchor == RectangleAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,213,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,217,        else if (anchor == RectangleAnchor.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,218,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,222,        else if (anchor == RectangleAnchor.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,223,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,227,        else if (anchor == RectangleAnchor.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,228,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,232,        else if (anchor == RectangleAnchor.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,233,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,237,        else if (anchor == RectangleAnchor.TOP_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,238,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,242,        else if (anchor == RectangleAnchor.TOP_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,243,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,247,        else if (anchor == RectangleAnchor.BOTTOM_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,248,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,252,        else if (anchor == RectangleAnchor.BOTTOM_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,253,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,257,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,268,        RectangleAnchor result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,269,        if (this.equals(RectangleAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,270,            result = RectangleAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,272,        else if (this.equals(RectangleAnchor.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,273,            result = RectangleAnchor.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,275,        else if (this.equals(RectangleAnchor.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,276,            result = RectangleAnchor.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,278,        else if (this.equals(RectangleAnchor.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,279,            result = RectangleAnchor.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,281,        else if (this.equals(RectangleAnchor.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,282,            result = RectangleAnchor.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,284,        else if (this.equals(RectangleAnchor.TOP_LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,285,            result = RectangleAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,287,        else if (this.equals(RectangleAnchor.TOP_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,288,            result = RectangleAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,290,        else if (this.equals(RectangleAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,291,            result = RectangleAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,293,        else if (this.equals(RectangleAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,294,            result = RectangleAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,12,296,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectList,12,67,        super(initialCapacity);,0.0,0,-1,0
org/jfree/chart/util/ObjectList,12,68,    },0.0,0,-1,0
org/jfree/chart/util/ObjectList,12,85,        return super.get(index);         ,0.0,0,-1,0
org/jfree/chart/util/ObjectList,12,95,"        super.set(index, object);        ",0.0,0,-1,0
org/jfree/chart/util/ObjectList,12,96,    }    ,0.0,0,-1,0
org/jfree/chart/util/ObjectList,12,107,        return super.indexOf(object);    ,0.0,0,-1,0
org/jfree/chart/ui/Contributor,12,74,        return this.name;,0.0,0,-1,0
org/jfree/chart/ui/Contributor,12,83,        return this.email;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,67,        public OptionalLibraryHolder(String libraryClass) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,68,            if (libraryClass == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,69,                throw new NullPointerException(,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,72,            this.libraryClass = libraryClass;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,73,        },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,80,        public OptionalLibraryHolder(Library library) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,81,          if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,82,"              throw new NullPointerException(""Library must not be null."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,84,          this.library = library;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,85,          this.libraryClass = library.getClass().getName();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,86,        },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,94,            return this.libraryClass;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,103,            if (this.library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,104,                this.library = loadLibrary(this.libraryClass);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,106,            return this.library;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,110,            if (classname == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,111,                return null;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,114,                Class c = ObjectUtilities.getClassLoader(,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,117,"                    Method m = c.getMethod(""getInstance"", (Class[]) null);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,118,"                    return (Library) m.invoke(null, (Object[]) null);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,120,                catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,123,                return (Library) c.newInstance();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,125,            catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,12,128,                return null;,0.0,0,-1,0
org/jfree/chart/ui/Licences,12,812,        return GPL;,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,91,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,92,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/StrokeMap,12,94,        return (Stroke) this.store.get(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,107,        return this.store.containsKey(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,118,        if (key == null) { ,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,119,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/StrokeMap,12,121,"        this.store.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/StrokeMap,12,122,    },0.0,0,-1,0
org/jfree/chart/StrokeMap,12,128,        this.store.clear();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,129,    },0.0,0,-1,0
org/jfree/chart/StrokeMap,12,139,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,140,            return true;,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,142,        if (!(obj instanceof StrokeMap)) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,143,            return false;,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,145,        StrokeMap that = (StrokeMap) obj;,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,146,        if (this.store.size() != that.store.size()) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,147,            return false;,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,149,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,150,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,151,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,152,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,153,            Stroke s1 = getStroke(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,154,            Stroke s2 = that.getStroke(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,155,"            if (!ObjectUtilities.equal(s1, s2)) {",0.0,0,-1,0
org/jfree/chart/StrokeMap,12,156,                return false;,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,158,        },0.0,0,-1,0
org/jfree/chart/StrokeMap,12,159,        return true;,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,172,        return super.clone();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,183,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,184,        stream.writeInt(this.store.size());,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,185,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,186,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,187,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,188,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,189,            stream.writeObject(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,190,            Stroke stroke = getStroke(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,191,"            SerialUtilities.writeStroke(stroke, stream);",0.0,0,-1,0
org/jfree/chart/StrokeMap,12,192,        },0.0,0,-1,0
org/jfree/chart/StrokeMap,12,193,    },0.0,0,-1,0
org/jfree/chart/StrokeMap,12,205,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,206,        this.store = new TreeMap();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,207,        int keyCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,208,        for (int i = 0; i < keyCount; i++) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,209,            Comparable key = (Comparable) stream.readObject();,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,210,            Stroke stroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/StrokeMap,12,211,"            this.store.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/StrokeMap,12,213,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,84,        return this.name;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,96,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,97,            return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,99,        if (!(obj instanceof ChartChangeEventType)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,100,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,102,        ChartChangeEventType that = (ChartChangeEventType) obj;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,103,        if (!this.name.equals(that.toString())) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,104,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,106,        return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,115,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,126,        if (this.equals(ChartChangeEventType.GENERAL)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,127,            return ChartChangeEventType.GENERAL;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,129,        else if (this.equals(ChartChangeEventType.NEW_DATASET)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,130,            return ChartChangeEventType.NEW_DATASET;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,132,        else if (this.equals(ChartChangeEventType.DATASET_UPDATED)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,133,            return ChartChangeEventType.DATASET_UPDATED;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,12,135,        return null;,0.0,0,-1,0
org/jfree/data/UnknownKeyException,12,54,        super(message);,0.0,0,-1,0
org/jfree/data/UnknownKeyException,12,55,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,118,        return this.rowKeys.size();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,129,        return this.columnKeys.size();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,143,        Number result = null;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,144,        DefaultKeyedValues rowData = (DefaultKeyedValues) this.rows.get(row);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,145,        if (rowData != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,146,            Comparable columnKey = (Comparable) this.columnKeys.get(column);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,149,            int index = rowData.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,150,            if (index >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,151,                result = rowData.getValue(index);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,154,        return result;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,168,        return (Comparable) this.rowKeys.get(row);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,182,        if (key == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,183,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,185,        if (this.sortRowKeys) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,186,"            return Collections.binarySearch(this.rowKeys, key);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,189,            return this.rowKeys.indexOf(key);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,201,        return Collections.unmodifiableList(this.rowKeys);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,216,        return (Comparable) this.columnKeys.get(column);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,230,        if (key == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,231,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,233,        return this.columnKeys.indexOf(key);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,244,        return Collections.unmodifiableList(this.columnKeys);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,261,        if (rowKey == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,262,"            throw new IllegalArgumentException(""Null 'rowKey' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,264,        if (columnKey == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,265,"            throw new IllegalArgumentException(""Null 'columnKey' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,269,        if (!(this.columnKeys.contains(columnKey))) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,270,"            throw new UnknownKeyException(""Unrecognised columnKey: "" ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,277,        int row = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,278,        if (row >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,279,            DefaultKeyedValues rowData ,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,281,            int col = rowData.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,282,            return (col >= 0 ? rowData.getValue(col) : null);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,285,"            throw new UnknownKeyException(""Unrecognised rowKey: "" + rowKey);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,303,"        setValue(value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,304,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,320,        int rowIndex = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,322,        if (rowIndex >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,323,            row = (DefaultKeyedValues) this.rows.get(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,326,            row = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,327,            if (this.sortRowKeys) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,328,                rowIndex = -rowIndex - 1;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,329,"                this.rowKeys.add(rowIndex, rowKey);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,330,"                this.rows.add(rowIndex, row);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,333,                this.rowKeys.add(rowKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,334,                this.rows.add(row);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,337,"        row.setValue(columnKey, value);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,339,        int columnIndex = this.columnKeys.indexOf(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,340,        if (columnIndex < 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,341,            this.columnKeys.add(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,343,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,356,"        setValue(null, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,359,        boolean allNull = true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,360,        int rowIndex = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,361,        DefaultKeyedValues row = (DefaultKeyedValues) this.rows.get(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,363,"        for (int item = 0, itemCount = row.getItemCount(); item < itemCount; ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,365,            if (row.getValue(item) != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,366,                allNull = false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,367,                break;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,364,             item++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,371,        if (allNull) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,372,            this.rowKeys.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,373,            this.rows.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,377,        allNull = true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,380,"        for (int item = 0, itemCount = this.rows.size(); item < itemCount; ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,382,            row = (DefaultKeyedValues) this.rows.get(item);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,383,            int columnIndex = row.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,384,            if (columnIndex >= 0 && row.getValue(columnIndex) != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,385,                allNull = false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,386,                break;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,381,             item++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,390,        if (allNull) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,391,"            for (int item = 0, itemCount = this.rows.size(); item < itemCount; ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,393,                row = (DefaultKeyedValues) this.rows.get(item);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,394,                int columnIndex = row.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,395,                if (columnIndex >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,396,                    row.removeValue(columnIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,392,                 item++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,399,            this.columnKeys.remove(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,401,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,412,        this.rowKeys.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,413,        this.rows.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,414,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,425,        removeRow(getRowIndex(rowKey));,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,426,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,437,        Comparable columnKey = getColumnKey(columnIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,438,        removeColumn(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,439,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,455,    	if (columnKey == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,456,"    		throw new IllegalArgumentException(""Null 'columnKey' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,458,    	if (!this.columnKeys.contains(columnKey)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,459,"    		throw new UnknownKeyException(""Unknown key: "" + columnKey);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,461,        Iterator iterator = this.rows.iterator();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,462,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,463,            DefaultKeyedValues rowData = (DefaultKeyedValues) iterator.next();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,464,            int index = rowData.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,465,            if (index >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,466,                rowData.removeValue(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,468,        },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,469,        this.columnKeys.remove(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,470,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,476,        this.rowKeys.clear();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,477,        this.columnKeys.clear();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,478,        this.rows.clear();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,479,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,490,        if (o == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,491,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,493,        if (o == this) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,494,            return true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,497,        if (!(o instanceof KeyedValues2D)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,498,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,500,        KeyedValues2D kv2D = (KeyedValues2D) o;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,501,        if (!getRowKeys().equals(kv2D.getRowKeys())) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,502,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,504,        if (!getColumnKeys().equals(kv2D.getColumnKeys())) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,505,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,507,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,508,        if (rowCount != kv2D.getRowCount()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,509,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,512,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,513,        if (colCount != kv2D.getColumnCount()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,514,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,517,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,518,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,519,"                Number v1 = getValue(r, c);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,520,"                Number v2 = kv2D.getValue(r, c);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,521,                if (v1 == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,522,                    if (v2 != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,523,                        return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,527,                    if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,528,                        return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,533,        return true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,543,        result = this.rowKeys.hashCode();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,544,        result = 29 * result + this.columnKeys.hashCode();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,545,        result = 29 * result + this.rows.hashCode();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,546,        return result;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,558,        DefaultKeyedValues2D clone = (DefaultKeyedValues2D) super.clone();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,561,        clone.columnKeys = new java.util.ArrayList(this.columnKeys);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,562,        clone.rowKeys = new java.util.ArrayList(this.rowKeys);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,565,        clone.rows = (List) ObjectUtilities.deepClone(this.rows);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,12,566,        return clone;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,85,        return this.data.getRowCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,96,        return this.data.getColumnCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,111,"        return this.data.getValue(row, column);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,126,        return this.data.getRowKey(row);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,140,        return this.data.getRowIndex(key);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,151,        return this.data.getRowKeys();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,164,        return this.data.getColumnKey(column);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,178,        return this.data.getColumnIndex(key);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,189,        return this.data.getColumnKeys();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,205,"        return this.data.getValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,220,"        this.data.addValue(value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,221,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,222,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,235,"        addValue(new Double(value), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,236,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,250,"        this.data.setValue(value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,251,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,252,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,266,"        setValue(new Double(value), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,267,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,282,        double existing = 0.0;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,283,"        Number n = getValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,284,        if (n != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,285,            existing = n.doubleValue();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,287,"        setValue(existing + value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,288,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,300,"        this.data.removeValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,301,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,302,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,313,        this.data.removeRow(rowIndex);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,314,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,315,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,326,        this.data.removeRow(rowKey);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,327,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,328,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,339,        this.data.removeColumn(columnIndex);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,340,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,341,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,355,        this.data.removeColumn(columnKey);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,356,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,357,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,364,        this.data.clear();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,365,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,366,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,376,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,377,            return true;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,379,        if (!(obj instanceof CategoryDataset)) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,380,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,382,        CategoryDataset that = (CategoryDataset) obj;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,383,        if (!getRowKeys().equals(that.getRowKeys())) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,384,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,386,        if (!getColumnKeys().equals(that.getColumnKeys())) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,387,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,389,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,390,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,391,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,392,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,393,"                Number v1 = getValue(r, c);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,394,"                Number v2 = that.getValue(r, c);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,395,                if (v1 == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,396,                    if (v2 != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,397,                        return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,400,                else if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,401,                    return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,405,        return true;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,414,        return this.data.hashCode();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,426,        DefaultCategoryDataset clone = (DefaultCategoryDataset) super.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,427,        clone.data = (DefaultKeyedValues2D) this.data.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,12,428,        return clone;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,107,        return this.group;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,118,        if (group == null) {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,119,"            throw new IllegalArgumentException(""Null 'group' argument."");",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,121,        this.group = group;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,122,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,132,"        this.listenerList.add(DatasetChangeListener.class, listener);",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,133,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,144,"        this.listenerList.remove(DatasetChangeListener.class, listener);",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,145,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,170,"        notifyListeners(new DatasetChangeEvent(this, this));",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,171,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,184,        Object[] listeners = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,185,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,186,            if (listeners[i] == DatasetChangeListener.class) {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,187,                ((DatasetChangeListener) listeners[i + 1]).datasetChanged(,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,192,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,205,        AbstractDataset clone = (AbstractDataset) super.clone();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,206,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,207,        return clone;    ,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,218,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,219,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,231,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,232,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,233,"        stream.registerValidation(this, 10);  // see comments about priority of",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,235,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,255,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,12,256,    },0.0,0,-1,0
