project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/jfree/chart/plot/PiePlot,15,670,        return this.interiorGap;,1.0,1,1,1
org/jfree/chart/plot/PiePlot,15,1398,        return this.labelGenerator;   ,1.0,0,1,0
org/jfree/chart/plot/PiePlot,15,1423,        return this.labelGap;   ,1.0,0,1,0
org/jfree/chart/plot/PiePlot,15,1448,        return this.maximumLabelWidth;   ,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,230,        RectangleInsets insets = getInsets();,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,231,        insets.trim(plotArea);,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,233,        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,234,        if (info != null) {,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,239,"        drawBackground(g2, plotArea);",1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,241,        Shape savedClip = g2.getClip();,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,242,        g2.clip(plotArea);,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,245,        double gapPercent = getInteriorGap();,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,246,        double labelPercent = 0.0;,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,247,        if (getLabelGenerator() != null) {,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,248,            labelPercent = getLabelGap() + getMaximumLabelWidth();   ,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,250,        double gapHorizontal = plotArea.getWidth() * (gapPercent ,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,252,        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,266,        double linkX = plotArea.getX() + gapHorizontal / 2;,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,267,        double linkY = plotArea.getY() + gapVertical / 2;,1.0,0,0,0
org/jfree/chart/plot/PiePlot3D,15,268,        double linkW = plotArea.getWidth() - gapHorizontal;,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,269,        double linkH = plotArea.getHeight() - gapVertical;,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,272,        if (isCircular()) { // is circular?,1.0,0,1,0
org/jfree/chart/plot/PiePlot3D,15,280,"        PiePlotState state = initialise(g2, plotArea, this, null, info);",1.0,0,0,0
org/jfree/chart/plot/Plot,15,931,"        fillBackground(g2, area);",0.5,0,-1,0
org/jfree/chart/plot/Plot,15,932,"        drawBackgroundImage(g2, area);",0.5,0,-1,0
org/jfree/chart/plot/Plot,15,933,    },0.5,0,-1,0
org/jfree/chart/plot/Plot,15,946,"        fillBackground(g2, area, PlotOrientation.VERTICAL);",0.5,0,-1,0
org/jfree/chart/plot/Plot,15,947,    },0.5,0,-1,0
org/jfree/chart/plot/PiePlot,15,706,        return this.circular;,0.5,1,-1,1
org/jfree/chart/plot/PiePlot,15,2049,        PiePlotState state = new PiePlotState(info);,0.5,0,-1,0
org/jfree/chart/plot/PiePlot,15,2050,        state.setPassesRequired(2);,0.5,0,-1,0
org/jfree/chart/plot/PiePlot,15,2051,            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(,0.5,0,-1,0
org/jfree/chart/plot/PiePlotState,15,89,        super(info);,0.5,0,-1,0
org/jfree/chart/plot/PiePlotState,15,90,        this.passesRequired = 1;,0.5,0,-1,0
org/jfree/chart/plot/PiePlotState,15,91,        this.total = 0.0;,0.5,0,-1,0
org/jfree/chart/plot/PiePlotState,15,92,    },0.5,0,-1,0
org/jfree/chart/plot/PiePlotState,15,109,        this.passesRequired = passes;   ,0.5,0,-1,0
org/jfree/chart/plot/PiePlotState,15,110,    },0.5,0,-1,0
org/jfree/chart/plot/PiePlot,15,2611,        LegendItemCollection result = new LegendItemCollection();,0.33333,1,-1,1
org/jfree/chart/plot/PiePlot,15,2612,        if (this.dataset == null) {,0.33333,0,-1,0
org/jfree/chart/ChartFactory,15,694,        PiePlot3D plot = new PiePlot3D(dataset);,0.33333,0,-1,0
org/jfree/chart/ChartFactory,15,695,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.33333,0,-1,0
org/jfree/chart/ChartFactory,15,696,        if (tooltips) {,0.33333,0,-1,0
org/jfree/chart/ChartFactory,15,699,        if (urls) {,0.33333,0,-1,0
org/jfree/chart/ChartFactory,15,702,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.33333,0,-1,0
org/jfree/data/general/DatasetUtilities,15,152,        if (dataset == null) {,0.33333,0,-1,0
org/jfree/chart/plot/PiePlot,15,551,        return this.dataset;,0.2,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,151,        super(dataset);,0.2,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,126,    private double depthFactor = 0.12;,0.2,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,134,    private boolean darkerSides = false;  // default preserves previous ,0.2,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,152,"        setCircular(false, false);",0.2,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,153,    },0.2,0,-1,0
org/jfree/chart/plot/PiePlot,15,731,        this.circular = circular;,0.16667,0,-1,0
org/jfree/chart/plot/PiePlot,15,732,        if (notify) {,0.16667,0,-1,0
org/jfree/chart/plot/PiePlot,15,735,    },0.16667,0,-1,0
org/jfree/chart/title/LegendTitle,15,472,            return result;   ,0.1,0,-1,0
org/jfree/chart/block/LineBorder,15,146,            return;,0.1,0,-1,0
org/jfree/chart/plot/Plot,15,504,"        setInsets(insets, true);",0.05556,0,-1,0
org/jfree/chart/plot/Plot,15,505,    },0.05556,0,-1,0
org/jfree/chart/plot/Plot,15,519,        if (insets == null) {,0.05556,0,-1,0
org/jfree/chart/plot/Plot,15,522,        if (!this.insets.equals(insets)) {,0.05556,0,-1,0
org/jfree/chart/plot/Plot,15,523,            this.insets = insets;,0.05556,0,-1,0
org/jfree/chart/plot/Plot,15,524,            if (notify) {,0.05556,0,-1,0
org/jfree/chart/plot/Plot,15,525,                notifyListeners(new PlotChangeEvent(this));,0.05556,0,-1,0
org/jfree/chart/plot/Plot,15,529,    },0.05556,0,-1,0
org/jfree/chart/util/RectangleInsets,15,192,            return false;   ,0.05,0,-1,0
org/jfree/chart/renderer/RendererState,15,62,    public RendererState(PlotRenderingInfo info) {,0.04348,0,-1,0
org/jfree/chart/renderer/RendererState,15,63,        this.info = info;,0.04348,0,-1,0
org/jfree/chart/renderer/RendererState,15,64,    },0.04348,0,-1,0
org/jfree/chart/plot/Plot,15,963,        if (orientation == null) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,966,        if (this.backgroundPaint == null) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,969,        Paint p = this.backgroundPaint;,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,970,        if (p instanceof GradientPaint) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,985,        Composite originalComposite = g2.getComposite();,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,986,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,988,        g2.setPaint(p);,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,989,        g2.fill(area);,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,990,        g2.setComposite(originalComposite);        ,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,991,    },0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,1005,        if (this.backgroundImage != null) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,15,1018,    },0.03448,0,-1,0
org/jfree/chart/JFreeChart,15,1195,"            EntityCollection e = drawTitle(this.title, g2, nonTitleArea, ",0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1197,            if (e != null) {,0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1252,            y = frame.getY();   ,0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1305,"            Size2D size = t.arrange(g2, constraint);",0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1306,"            titleArea = createAlignedRectangle2D(size, area, ",0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1308,"            retValue = t.draw(g2, titleArea, p);",0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1309,"            area.setRect(area.getX(), Math.min(area.getY() + size.height, ",0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1312,        },0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1343,            EntityBlockResult ebr = (EntityBlockResult) retValue;,0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1344,            result = ebr.getEntityCollection();,0.03333,0,-1,0
org/jfree/chart/text/TextBlock,15,105,        if (alignment == null) {,0.03333,0,-1,0
org/jfree/chart/text/TextBlock,15,108,        this.lineAlignment = alignment;   ,0.03333,0,-1,0
org/jfree/chart/text/TextBlock,15,109,    },0.03333,0,-1,0
org/jfree/chart/text/TextBlock,15,274,            xAdj = (float) -width / 2.0f;,0.03333,0,-1,0
org/jfree/chart/text/G2TextMeasurer,15,61,    public G2TextMeasurer(Graphics2D g2) {,0.03333,0,-1,0
org/jfree/chart/text/G2TextMeasurer,15,62,        this.g2 = g2;,0.03333,0,-1,0
org/jfree/chart/text/G2TextMeasurer,15,63,    },0.03333,0,-1,0
org/jfree/chart/text/G2TextMeasurer,15,75,        FontMetrics fm = this.g2.getFontMetrics();,0.03333,0,-1,0
org/jfree/chart/text/G2TextMeasurer,15,76,"        Rectangle2D bounds = TextUtilities.getTextBounds(text.substring(start, ",0.03333,0,-1,0
org/jfree/chart/text/G2TextMeasurer,15,78,        float result = (float) bounds.getWidth();,0.03333,0,-1,0
org/jfree/chart/text/G2TextMeasurer,15,79,        return result;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,165,"        return createTextBlock(text, font, paint, maxWidth, Integer.MAX_VALUE, ",0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,186,        TextBlock result = new TextBlock();,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,187,        BreakIterator iterator = BreakIterator.getLineInstance();,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,188,        iterator.setText(text);,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,189,        int current = 0;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,190,        int lines = 0;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,191,        int length = text.length();,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,192,        while (current < length && lines < maxLines) {,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,193,"            int next = nextLineBreak(text, current, maxWidth, iterator, ",0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,195,            if (next == BreakIterator.DONE) {,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,196,"                result.addLine(text.substring(current), font, paint);",0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,197,                return result;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,239,        int current = start;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,241,        float x = 0.0f;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,242,        boolean firstWord = true;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,243,"        int newline = text.indexOf('\n', start);",0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,244,        if (newline < 0) {,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,245,            newline = Integer.MAX_VALUE;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,247,        while (((end = iterator.next()) != BreakIterator.DONE)) {,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,248,            if (end > newline) {,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,251,"            x += measurer.getStringWidth(text, current, end);",0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,252,            if (x > width) {,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,268,            firstWord = false;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,269,            current = end;,0.03333,0,-1,0
org/jfree/chart/text/TextUtilities,15,271,        return BreakIterator.DONE;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,439,        RectangleConstraint cc = toContentConstraint(constraint);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,440,        LengthConstraintType w = cc.getWidthConstraintType();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,441,        LengthConstraintType h = cc.getHeightConstraintType();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,442,        Size2D contentSize = null;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,443,        if (w == LengthConstraintType.NONE) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,454,        else if (w == LengthConstraintType.RANGE) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,455,            if (h == LengthConstraintType.NONE) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,458,            else if (h == LengthConstraintType.RANGE) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,459,"                contentSize = arrangeRR(g2, cc.getWidthRange(), ",0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,477,"        return new Size2D(calculateTotalWidth(contentSize.getWidth()),",0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,494,        RectangleEdge position = getPosition();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,495,        if (position == RectangleEdge.TOP || position == RectangleEdge.BOTTOM) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,496,            float maxWidth = (float) widthRange.getUpperBound();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,497,            g2.setFont(this.font);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,498,"            this.content = TextUtilities.createTextBlock(this.text, this.font, ",0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,500,            this.content.setLineAlignment(this.textAlignment);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,501,            Size2D contentSize = this.content.calculateDimensions(g2);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,502,            if (this.expandToFitSpace) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,506,                return contentSize;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,555,        if (this.content == null) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,558,        area = trimMargin(area);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,559,"        drawBorder(g2, area);",0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,560,"        if (this.text.equals("""")) {",0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,563,        ChartEntity entity = null;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,564,        if (params instanceof EntityBlockParams) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,565,            EntityBlockParams p = (EntityBlockParams) params;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,566,            if (p.getGenerateEntities()) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,570,        area = trimBorder(area);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,571,        if (this.backgroundPaint != null) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,575,        area = trimPadding(area);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,576,        RectangleEdge position = getPosition();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,577,        if (position == RectangleEdge.TOP || position == RectangleEdge.BOTTOM) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,578,"            drawHorizontal(g2, area);",0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,584,        BlockResult result = new BlockResult();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,585,        if (entity != null) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,590,        return result;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,602,        Rectangle2D titleArea = (Rectangle2D) area.clone();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,603,        g2.setFont(this.font);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,604,        g2.setPaint(this.paint);,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,605,        TextBlockAnchor anchor = null;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,606,        float x = 0.0f;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,607,        HorizontalAlignment horizontalAlignment = getHorizontalAlignment();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,608,        if (horizontalAlignment == HorizontalAlignment.LEFT) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,612,        else if (horizontalAlignment == HorizontalAlignment.RIGHT) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,616,        else if (horizontalAlignment == HorizontalAlignment.CENTER) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,617,            x = (float) titleArea.getCenterX();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,618,            anchor = TextBlockAnchor.TOP_CENTER;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,620,        float y = 0.0f;,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,621,        RectangleEdge position = getPosition();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,622,        if (position == RectangleEdge.TOP) {,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,623,            y = (float) titleArea.getY();,0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,637,"        this.content.draw(g2, x, y, anchor);",0.03333,0,-1,0
org/jfree/chart/title/TextTitle,15,638,    },0.03333,0,-1,0
org/jfree/chart/block/BlockResult,15,67,        return this.entities;   ,0.03333,0,-1,0
org/jfree/chart/JFreeChart,15,1204,            Title currentTitle = (Title) iterator.next();,0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1205,"            EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea, ",0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1207,            if (e != null) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1210,        },0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1254,        else if (vAlign == VerticalAlignment.CENTER) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1257,        else if (vAlign == VerticalAlignment.BOTTOM) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1258,            y = frame.getMaxY() - dimensions.height;   ,0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1313,        else if (position == RectangleEdge.BOTTOM) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1314,"            Size2D size = t.arrange(g2, constraint);",0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1315,"            titleArea = createAlignedRectangle2D(size, area, ",0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1317,"            retValue = t.draw(g2, titleArea, p);",0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1318,"            area.setRect(area.getX(), area.getY(), area.getWidth(), ",0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,1320,        },0.03226,0,-1,0
org/jfree/chart/block/AbstractBlock,15,239,        return this.frame;,0.03226,0,-1,0
org/jfree/chart/util/Size2D,15,72,"        this(0.0, 0.0);",0.03226,0,-1,0
org/jfree/chart/util/Size2D,15,73,    },0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,388,        this.items.clear();,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,389,        RectangleEdge p = getPosition();,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,390,        if (RectangleEdge.isTopOrBottom(p)) {,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,391,            this.items.setArrangement(this.hLayout);   ,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,396,        for (int s = 0; s < this.sources.length; s++) {,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,397,            LegendItemCollection legendItems = this.sources[s].getLegendItems();,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,398,            if (legendItems != null) {,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,399,                for (int i = 0; i < legendItems.getItemCount(); i++) {,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,406,    },0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,469,        Size2D result = new Size2D();,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,470,        fetchLegendItems();,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,471,        if (this.items.isEmpty()) {,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,507,        Rectangle2D target = (Rectangle2D) area.clone();,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,508,        target = trimMargin(target);,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,509,        if (this.backgroundPaint != null) {,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,510,            g2.setPaint(this.backgroundPaint);,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,511,            g2.fill(target);,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,513,        BlockFrame border = getFrame();,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,514,"        border.draw(g2, target);",0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,515,        border.getInsets().trim(target);,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,516,        BlockContainer container = this.wrapper;,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,517,        if (container == null) {,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,518,            container = this.items; ,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,520,        target = trimPadding(target);,0.03226,0,-1,0
org/jfree/chart/title/LegendTitle,15,521,"        return container.draw(g2, target, params);   ",0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,118,        if (arrangement == null) {,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,121,        this.arrangement = arrangement;   ,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,122,    },0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,131,        return this.blocks.isEmpty();   ,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,168,        this.blocks.clear();,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,169,        this.arrangement.clear();,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,170,    },0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,207,        EntityBlockParams ebp = null;,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,208,        StandardEntityCollection sec = null;,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,209,        if (params instanceof EntityBlockParams) {,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,210,            ebp = (EntityBlockParams) params;,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,211,            if (ebp.getGenerateEntities()) {,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,215,        Rectangle2D contentArea = (Rectangle2D) area.clone();,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,216,        contentArea = trimMargin(contentArea);,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,217,"        drawBorder(g2, contentArea);",0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,218,        contentArea = trimBorder(contentArea);,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,219,        contentArea = trimPadding(contentArea);,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,220,        Iterator iterator = this.blocks.iterator();,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,221,        while (iterator.hasNext()) {,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,236,        BlockResult result = null;,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,237,        if (sec != null) {,0.03226,0,-1,0
org/jfree/chart/block/BlockContainer,15,241,        return result;,0.03226,0,-1,0
org/jfree/chart/block/FlowArrangement,15,416,    },0.03226,0,-1,0
org/jfree/chart/block/LineBorder,15,123,        return this.insets;,0.03226,0,-1,0
org/jfree/chart/block/LineBorder,15,142,        double w = area.getWidth();,0.03226,0,-1,0
org/jfree/chart/block/LineBorder,15,143,        double h = area.getHeight();,0.03226,0,-1,0
org/jfree/chart/block/LineBorder,15,145,        if (w <= 0.0 || h <= 0.0) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,15,457,        return this.borderVisible;,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1136,"        notifyListeners(new ChartProgressEvent(this, this, ",0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1140,        if (info != null) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1146,        Shape savedClip = g2.getClip();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1147,        g2.clip(chartArea);,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1149,        g2.addRenderingHints(this.renderingHints);,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1152,        if (this.backgroundPaint != null) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1153,            g2.setPaint(this.backgroundPaint);,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1154,            g2.fill(chartArea);,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1157,        if (this.backgroundImage != null) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1171,        if (isBorderVisible()) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1186,        Rectangle2D nonTitleArea = new Rectangle2D.Double();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1187,        nonTitleArea.setRect(chartArea);,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1188,        this.padding.trim(nonTitleArea);,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1190,        EntityCollection entities = null;,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1191,        if (info != null) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1194,        if (this.title != null) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1202,        Iterator iterator = this.subtitles.iterator();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1203,        while (iterator.hasNext()) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1212,        Rectangle2D plotArea = nonTitleArea;,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1215,        PlotRenderingInfo plotInfo = null;,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1216,        if (info != null) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1219,"        this.plot.draw(g2, plotArea, anchor, null, plotInfo);",0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1240,        double x = Double.NaN;,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1241,        double y = Double.NaN;,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1242,        if (hAlign == HorizontalAlignment.LEFT) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1245,        else if (hAlign == HorizontalAlignment.CENTER) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1246,            x = frame.getCenterX() - (dimensions.width / 2.0);   ,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1251,        if (vAlign == VerticalAlignment.TOP) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1261,"        return new Rectangle2D.Double(x, y, dimensions.width, ",0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1282,        if (t == null) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1285,        if (area == null) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1288,        Rectangle2D titleArea = new Rectangle2D.Double();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1289,        RectangleEdge position = t.getPosition();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1290,        double ww = area.getWidth();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1291,        if (ww <= 0.0) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1294,        double hh = area.getHeight();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1295,        if (hh <= 0.0) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1298,"        RectangleConstraint constraint = new RectangleConstraint(ww, ",0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1301,        Object retValue = null;,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1302,        BlockParams p = new BlockParams();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1303,        p.setGenerateEntities(entities);,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1304,        if (position == RectangleEdge.TOP) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1341,        EntityCollection result = null;,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1342,        if (retValue instanceof EntityBlockResult) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1346,        return result;   ,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1539,        Object[] listeners = this.progressListeners.getListenerList();,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1540,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.03125,0,-1,0
org/jfree/chart/JFreeChart,15,1546,    },0.03125,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,77,        super(source);,0.03125,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,78,        this.chart = chart;,0.03125,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,79,        this.type = type;,0.03125,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,80,    },0.03125,0,-1,0
org/jfree/chart/title/Title,15,206,        return this.position;,0.03125,0,-1,0
org/jfree/chart/title/Title,15,231,        return this.horizontalAlignment;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,383,        double result = this.margin.trimWidth(fixedWidth);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,384,        result = this.frame.getInsets().trimWidth(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,385,        result = this.padding.trimWidth(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,386,"        return Math.max(result, 0.0);",0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,401,        double result = this.margin.trimHeight(fixedHeight);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,402,        result = this.frame.getInsets().trimHeight(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,403,        result = this.padding.trimHeight(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,404,"        return Math.max(result, 0.0);",0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,416,        if (c == null) {,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,419,        if (c.equals(RectangleConstraint.NONE)) {,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,422,        double w = c.getWidth();,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,423,        Range wr = c.getWidthRange();,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,424,        double h = c.getHeight();,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,425,        Range hr = c.getHeightRange();,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,426,        double ww = trimToContentWidth(w);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,427,        double hh = trimToContentHeight(h);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,428,        Range wwr = trimToContentWidth(wr);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,429,        Range hhr = trimToContentHeight(hr);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,430,        return new RectangleConstraint(,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,437,        if (r == null) {,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,440,        double lowerBound = 0.0;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,441,        double upperBound = Double.POSITIVE_INFINITY;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,442,        if (r.getLowerBound() > 0.0) {,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,445,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,446,            upperBound = trimToContentWidth(r.getUpperBound());,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,448,"        return new Range(lowerBound, upperBound);",0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,452,        if (r == null) {,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,455,        double lowerBound = 0.0;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,456,        double upperBound = Double.POSITIVE_INFINITY;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,457,        if (r.getLowerBound() > 0.0) {,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,460,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,461,            upperBound = trimToContentHeight(r.getUpperBound());,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,463,"        return new Range(lowerBound, upperBound);",0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,474,        double result = contentWidth;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,475,        result = this.padding.extendWidth(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,476,        result = this.frame.getInsets().extendWidth(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,477,        result = this.margin.extendWidth(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,478,        return result;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,489,        double result = contentHeight;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,490,        result = this.padding.extendHeight(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,491,        result = this.frame.getInsets().extendHeight(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,492,        result = this.margin.extendHeight(result);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,493,        return result;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,506,        this.margin.trim(area);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,507,        return area;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,520,        this.frame.getInsets().trim(area);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,521,        return area;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,534,        this.padding.trim(area);,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,535,        return area;,0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,545,"        this.frame.draw(g2, area);",0.03125,0,-1,0
org/jfree/chart/block/AbstractBlock,15,546,    },0.03125,0,-1,0
org/jfree/chart/plot/Plot,15,491,        return this.insets;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,381,        double result = this.top;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,382,        if (this.unitType == UnitType.RELATIVE) {,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,385,        return result;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,396,        double result = this.top;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,397,        if (this.unitType == UnitType.RELATIVE) {,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,400,        return result;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,411,        double result = this.bottom;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,412,        if (this.unitType == UnitType.RELATIVE) {,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,415,        return result;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,426,        double result = this.bottom;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,427,        if (this.unitType == UnitType.RELATIVE) {,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,430,        return result;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,441,        double result = this.left;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,442,        if (this.unitType == UnitType.RELATIVE) {,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,445,        return result;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,456,        double result = this.left;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,457,        if (this.unitType == UnitType.RELATIVE) {,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,460,        return result;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,471,        double result = this.right;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,472,        if (this.unitType == UnitType.RELATIVE) {,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,475,        return result;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,486,        double result = this.right;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,487,        if (this.unitType == UnitType.RELATIVE) {,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,490,        return result;,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,501,        return width - calculateLeftInset(width) - calculateRightInset(width);   ,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,512,        return width + calculateLeftOutset(width) + calculateRightOutset(width);   ,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,523,        return height ,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,535,        return height ,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,545,        double w = area.getWidth();,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,546,        double h = area.getHeight();,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,547,        double l = calculateLeftInset(w);,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,548,        double r = calculateRightInset(w);,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,549,        double t = calculateTopInset(h);,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,550,        double b = calculateBottomInset(h);,0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,551,"        area.setRect(area.getX() + l, area.getY() + t, w - l - r, h - t - b);    ",0.03125,0,-1,0
org/jfree/chart/util/RectangleInsets,15,552,    },0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,255,        if (classLoader != null) {,0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,258,"        if (""ThreadContext"".equals(classLoaderSource)) {",0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,259,            final ClassLoader threadLoader,0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,261,            if (threadLoader != null) {,0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,262,                return threadLoader;,0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,439,        ClassLoader loader = getClassLoader(ObjectUtilities.class);,0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,440,        if (loader != null) {,0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,442,"              loader.loadClass(""java.util.RandomAccess"");",0.03125,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,443,              return true;,0.03125,0,-1,0
org/jfree/chart/util/Size2D,15,81,"    public Size2D(double width, double height) {",0.03125,0,-1,0
org/jfree/chart/util/Size2D,15,82,        this.width = width;,0.03125,0,-1,0
org/jfree/chart/util/Size2D,15,83,        this.height = height;,0.03125,0,-1,0
org/jfree/chart/util/Size2D,15,84,    },0.03125,0,-1,0
org/jfree/chart/util/Size2D,15,92,        return this.width;,0.03125,0,-1,0
org/jfree/chart/util/Size2D,15,110,        return this.height;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,85,    public TextBlock() {,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,86,        this.lines = new java.util.ArrayList();,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,87,        this.lineAlignment = HorizontalAlignment.CENTER;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,88,    },0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,119,"        addLine(new TextLine(text, font, paint));",0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,120,    },0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,128,        this.lines.add(line);    ,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,129,    },0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,162,        double width = 0.0;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,163,        double height = 0.0;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,164,        Iterator iterator = this.lines.iterator();,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,165,        while (iterator.hasNext()) {,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,166,            TextLine line = (TextLine) iterator.next();,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,167,            Size2D dimension = line.calculateDimensions(g2);,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,168,"            width = Math.max(width, dimension.getWidth());",0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,169,            height = height + dimension.getHeight();,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,170,        },0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,171,"        return new Size2D(width, height);",0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,210,"        draw(g2, x, y, anchor, 0.0f, 0.0f, 0.0);",0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,211,    },0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,230,        Size2D d = calculateDimensions(g2);,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,231,"        float[] offsets = calculateOffsets(anchor, d.getWidth(), d.getHeight());",0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,232,        Iterator iterator = this.lines.iterator();,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,233,        float yCursor = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,234,        while (iterator.hasNext()) {,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,235,            TextLine line = (TextLine) iterator.next();,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,236,            Size2D dimension = line.calculateDimensions(g2);,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,237,            float lineOffset = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,238,            if (this.lineAlignment == HorizontalAlignment.CENTER) {,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,239,                lineOffset = (float) (d.getWidth() - dimension.getWidth()) ,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,245,"            line.draw(g2, anchorX + offsets[0] + lineOffset, anchorY ",0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,248,            yCursor = yCursor + (float) dimension.getHeight();,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,249,        },0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,251,    },0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,266,        float[] result = new float[2];,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,267,        float xAdj = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,268,        float yAdj = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,270,        if (anchor == TextBlockAnchor.TOP_CENTER,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,285,        if (anchor == TextBlockAnchor.TOP_LEFT,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,289,            yAdj = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,306,        result[0] = xAdj;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,307,        result[1] = yAdj;,0.03125,0,-1,0
org/jfree/chart/text/TextBlock,15,308,        return result;,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,107,"    public TextLine(String text, Font font, Paint paint) {",0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,108,        if (text == null) {,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,111,        if (font == null) {,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,114,        if (paint == null) {,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,117,        this.fragments = new java.util.ArrayList();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,118,"        TextFragment fragment = new TextFragment(text, font, paint);",0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,119,        this.fragments.add(fragment);,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,120,    },0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,156,        float x = anchorX;,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,157,"        float yOffset = calculateBaselineOffset(g2, anchor);",0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,158,        Iterator iterator = this.fragments.iterator();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,159,        while (iterator.hasNext()) {,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,160,            TextFragment fragment = (TextFragment) iterator.next();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,161,            Size2D d = fragment.calculateDimensions(g2);,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,162,"            fragment.draw(g2, x, anchorY + yOffset, TextAnchor.BASELINE_LEFT, ",0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,164,            x = x + (float) d.getWidth();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,165,        },0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,167,    },0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,177,        double width = 0.0;,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,178,        double height = 0.0;,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,179,        Iterator iterator = this.fragments.iterator();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,180,        while (iterator.hasNext()) {,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,181,            TextFragment fragment = (TextFragment) iterator.next();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,182,            Size2D dimension = fragment.calculateDimensions(g2);,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,183,            width = width + dimension.getWidth();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,184,"            height = Math.max(height, dimension.getHeight());",0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,185,        },0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,186,"        return new Size2D(width, height);",0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,227,        float result = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,228,        Iterator iterator = this.fragments.iterator();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,229,        while (iterator.hasNext()) {,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,230,            TextFragment fragment = (TextFragment) iterator.next();,0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,231,"            result = Math.max(result, ",0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,233,        },0.03125,0,-1,0
org/jfree/chart/text/TextLine,15,234,        return result;,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,125,"        this(text, font, paint, 0.0f);",0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,126,    },0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,137,                        float baselineOffset) {,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,138,        if (text == null) {,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,141,        if (font == null) {,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,144,        if (paint == null) {,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,147,        this.text = text;,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,148,        this.font = font;,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,149,        this.paint = paint;,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,150,        this.baselineOffset = baselineOffset;,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,151,    },0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,78,"    public static final Font DEFAULT_FONT = new Font(""Serif"", Font.PLAIN, 12);",0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,81,    public static final Paint DEFAULT_PAINT = Color.black;,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,206,        g2.setFont(this.font);,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,207,        g2.setPaint(this.paint);,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,208,"        TextUtilities.drawRotatedString(this.text, g2, anchorX, anchorY ",0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,211,    },0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,221,        FontMetrics fm = g2.getFontMetrics(this.font);,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,222,"        Rectangle2D bounds = TextUtilities.getTextBounds(this.text, g2, fm);",0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,223,"        Size2D result = new Size2D(bounds.getWidth(), bounds.getHeight());",0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,224,        return result;,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,237,        float result = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,238,        FontMetrics fm = g2.getFontMetrics(this.font);,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,239,"        LineMetrics lm = fm.getLineMetrics(""ABCxyz"", g2);",0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,240,        if (anchor == TextAnchor.TOP_LEFT || anchor == TextAnchor.TOP_CENTER,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,242,            result = lm.getAscent();,0.03125,0,-1,0
org/jfree/chart/text/TextFragment,15,249,        return result;                                             ,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,91,        boolean isJava14 = ObjectUtilities.isJDK14();,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,92,        useDrawRotatedStringWorkaround = (isJava14 == false);,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,93,        useFontMetricsGetStringBounds = (isJava14 == true);,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,94,    },0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,288,        if (TextUtilities.useFontMetricsGetStringBounds) {,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,289,"            bounds = fm.getStringBounds(text, g2);",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,293,"            LineMetrics lm = fm.getFont().getLineMetrics(text,",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,295,"            bounds.setRect(bounds.getX(), bounds.getY(), bounds.getWidth(),",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,297,        },0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,304,        return bounds;,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,476,"        if ((text == null) || (text.equals(""""))) {",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,480,        AffineTransform saved = g2.getTransform();,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,483,        AffineTransform rotate = AffineTransform.getRotateInstance(,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,485,        g2.transform(rotate);,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,487,        if (useDrawRotatedStringWorkaround) {,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,495,"            g2.drawString(text, textX, textY);",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,497,        g2.setTransform(saved);,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,499,    },0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,518,"        if (text == null || text.equals("""")) {",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,521,"        float[] textAdj = deriveTextBoundsAnchorOffsets(g2, text, textAnchor);",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,522,"        drawRotatedString(text, g2, x + textAdj[0], y + textAdj[1], angle, ",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,524,    },0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,602,        float[] result = new float[2];,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,603,        FontRenderContext frc = g2.getFontRenderContext();,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,604,        Font f = g2.getFont();,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,605,        FontMetrics fm = g2.getFontMetrics(f);,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,606,"        Rectangle2D bounds = TextUtilities.getTextBounds(text, g2, fm);",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,607,"        LineMetrics metrics = f.getLineMetrics(text, frc);",0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,608,        float ascent = metrics.getAscent();,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,609,        float halfAscent = ascent / 2.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,610,        float descent = metrics.getDescent();,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,611,        float leading = metrics.getLeading();,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,612,        float xAdj = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,613,        float yAdj = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,615,        if (anchor == TextAnchor.TOP_CENTER,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,624,        else if (anchor == TextAnchor.TOP_RIGHT,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,634,        if (anchor == TextAnchor.TOP_LEFT,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,641,        else if (anchor == TextAnchor.HALF_ASCENT_LEFT,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,648,        else if (anchor == TextAnchor.CENTER_LEFT,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,655,        else if (anchor == TextAnchor.BASELINE_LEFT,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,659,            yAdj = 0.0f;,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,669,        result[0] = xAdj;,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,670,        result[1] = yAdj;,0.03125,0,-1,0
org/jfree/chart/text/TextUtilities,15,671,        return result;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,149,                               LengthConstraintType heightConstraintType) {,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,150,        if (widthConstraintType == null) {,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,153,        if (heightConstraintType == null) {,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,156,        this.width = w;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,157,        this.widthRange = widthRange;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,158,        this.widthConstraintType = widthConstraintType;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,159,        this.height = h;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,160,        this.heightRange = heightRange;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,161,        this.heightConstraintType = heightConstraintType;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,162,    },0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,60,    public static final RectangleConstraint NONE = new RectangleConstraint(,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,170,        return this.width;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,179,        return this.widthRange;   ,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,188,        return this.widthConstraintType;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,197,        return this.height;,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,206,        return this.heightRange;   ,0.03125,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,215,        return this.heightConstraintType;,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,145,        return this.insets;,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,166,        double t = this.insets.calculateTopInset(area.getHeight());,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,167,        double b = this.insets.calculateBottomInset(area.getHeight());,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,168,        double l = this.insets.calculateLeftInset(area.getWidth());,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,169,        double r = this.insets.calculateRightInset(area.getWidth());,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,170,        double x = area.getX();,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,171,        double y = area.getY();,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,172,        double w = area.getWidth();,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,173,        double h = area.getHeight();,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,174,        g2.setPaint(this.paint);,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,175,        Rectangle2D rect = new Rectangle2D.Double();,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,176,        if (t > 0.0) {,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,180,        if (b > 0.0) {,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,184,        if (l > 0.0) {,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,188,        if (r > 0.0) {,0.03125,0,-1,0
org/jfree/chart/block/BlockBorder,15,192,    },0.03125,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,74,    private LengthConstraintType(String name) {,0.03125,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,75,        this.name = name;,0.03125,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,76,    },0.03125,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,55,    public static final LengthConstraintType NONE ,0.03125,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,59,    public static final LengthConstraintType RANGE ,0.03125,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,63,    public static final LengthConstraintType FIXED ,0.03125,0,-1,0
org/jfree/chart/block/BlockParams,15,72,    public BlockParams() {,0.03125,0,-1,0
org/jfree/chart/block/BlockParams,15,73,        this.translateX = 0.0;,0.03125,0,-1,0
org/jfree/chart/block/BlockParams,15,74,        this.translateY = 0.0;,0.03125,0,-1,0
org/jfree/chart/block/BlockParams,15,75,        this.generateEntities = false;    ,0.03125,0,-1,0
org/jfree/chart/block/BlockParams,15,76,    },0.03125,0,-1,0
org/jfree/chart/block/BlockParams,15,85,        return this.generateEntities;   ,0.03125,0,-1,0
org/jfree/chart/block/BlockParams,15,94,        this.generateEntities = generate;   ,0.03125,0,-1,0
org/jfree/chart/block/BlockParams,15,95,    },0.03125,0,-1,0
org/jfree/chart/block/BlockResult,15,57,    public BlockResult() {,0.03125,0,-1,0
org/jfree/chart/block/BlockResult,15,58,        this.entities = null;    ,0.03125,0,-1,0
org/jfree/chart/block/BlockResult,15,59,    },0.03125,0,-1,0
org/jfree/chart/LegendItemCollection,15,65,    public LegendItemCollection() {,0.0303,0,-1,0
org/jfree/chart/LegendItemCollection,15,66,        this.items = new java.util.ArrayList();,0.0303,0,-1,0
org/jfree/chart/LegendItemCollection,15,67,    },0.0303,0,-1,0
org/jfree/chart/LegendItemCollection,15,104,        return this.items.size();,0.0303,0,-1,0
org/jfree/chart/util/RectangleEdge,15,137,        return (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM);    ,0.02941,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,90,"        this(DEFAULT_SECTION_LABEL_FORMAT, NumberFormat.getNumberInstance(), ",0.02857,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,92,    },0.02857,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,141,"        super(labelFormat, numberFormat, percentFormat);",0.02857,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,142,        this.attributedLabels = new ObjectList();,0.02857,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,143,    },0.02857,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,82,                                            NumberFormat percentFormat) {,0.02857,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,84,        if (labelFormat == null) {,0.02857,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,87,        if (numberFormat == null) {,0.02857,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,90,        if (percentFormat == null) {,0.02857,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,95,        this.labelFormat = labelFormat;,0.02857,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,96,        this.numberFormat = numberFormat;,0.02857,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,97,        this.percentFormat = percentFormat;,0.02857,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,99,    },0.02857,0,-1,0
org/jfree/chart/util/Rotation,15,81,"    private Rotation(final String name, final double factor) {",0.02857,0,-1,0
org/jfree/chart/util/Rotation,15,82,        this.name = name;,0.02857,0,-1,0
org/jfree/chart/util/Rotation,15,83,        this.factor = factor;,0.02857,0,-1,0
org/jfree/chart/util/Rotation,15,84,    },0.02857,0,-1,0
org/jfree/chart/util/Rotation,15,59,    public static final Rotation CLOCKWISE ,0.02857,0,-1,0
org/jfree/chart/util/Rotation,15,63,    public static final Rotation ANTICLOCKWISE ,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,492,        super();,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,316,    private transient Paint shadowPaint = Color.gray;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,319,    private double shadowXOffset = 4.0f;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,322,    private double shadowYOffset = 4.0f;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,365,    private boolean simpleLabels = true;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,383,    private double maximumLabelWidth = 0.14;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,389,    private double labelGap = 0.025;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,395,    private double labelLinkMargin = 0.025;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,398,    private transient Paint labelLinkPaint = Color.black;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,401,    private transient Stroke labelLinkStroke = new BasicStroke(0.5f);,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,493,        this.dataset = dataset;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,494,        if (dataset != null) {,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,497,        this.pieIndex = 0;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,499,        this.interiorGap = DEFAULT_INTERIOR_GAP;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,500,        this.circular = true;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,501,        this.startAngle = DEFAULT_START_ANGLE;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,502,        this.direction = Rotation.CLOCKWISE;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,503,        this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,505,        this.sectionPaintMap = new PaintMap();,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,506,        this.baseSectionPaint = Color.gray;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,508,        this.sectionOutlinesVisible = true;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,509,        this.sectionOutlinePaintMap = new PaintMap();,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,510,        this.baseSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,512,        this.sectionOutlineStrokeMap = new StrokeMap();,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,513,        this.baseSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,515,        this.explodePercentages = new TreeMap();,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,517,        this.labelGenerator = new StandardPieSectionLabelGenerator();,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,518,        this.labelFont = DEFAULT_LABEL_FONT;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,519,        this.labelPaint = DEFAULT_LABEL_PAINT;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,520,        this.labelBackgroundPaint = DEFAULT_LABEL_BACKGROUND_PAINT;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,521,        this.labelOutlinePaint = DEFAULT_LABEL_OUTLINE_PAINT;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,522,        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,523,        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,524,        this.labelLinksVisible = true;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,525,        this.labelDistributor = new PieLabelDistributor(0);,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,527,        this.simpleLabels = false;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,528,"        this.simpleLabelOffset = new RectangleInsets(UnitType.RELATIVE, 0.18, ",0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,530,"        this.labelPadding = new RectangleInsets(2, 2, 2, 2);",0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,532,        this.toolTipGenerator = null;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,533,        this.urlGenerator = null;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,534,        this.legendLabelGenerator = new StandardPieSectionLabelGenerator();,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,535,        this.legendLabelToolTipGenerator = null;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,536,        this.legendLabelURLGenerator = null;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,537,        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,539,        this.ignoreNullValues = false;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,540,        this.ignoreZeroValues = false;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,541,    },0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,246,"    public static final Font DEFAULT_LABEL_FONT = new Font(""SansSerif"", ",0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,250,    public static final Paint DEFAULT_LABEL_PAINT = Color.black;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,253,"    public static final Paint DEFAULT_LABEL_BACKGROUND_PAINT = new Color(255, ",0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,257,    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.black;,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,260,    public static final Stroke DEFAULT_LABEL_OUTLINE_STROKE = new BasicStroke(,0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,264,"    public static final Paint DEFAULT_LABEL_SHADOW_PAINT = new Color(151, 151, ",0.02857,0,-1,0
org/jfree/chart/plot/PiePlot,15,456,    protected static ResourceBundle localizationResources =,0.02857,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,60,    public AbstractPieLabelDistributor() {,0.02857,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,61,        this.labels = new java.util.ArrayList();,0.02857,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,62,    },0.02857,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,62,        super();,0.02857,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,54,    private double minGap = 4.0;,0.02857,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,63,    },0.02857,0,-1,0
org/jfree/chart/StrokeMap,15,75,    public StrokeMap() {,0.02857,0,-1,0
org/jfree/chart/StrokeMap,15,76,        this.store = new TreeMap();    ,0.02857,0,-1,0
org/jfree/chart/StrokeMap,15,77,    },0.02857,0,-1,0
org/jfree/chart/PaintMap,15,77,    public PaintMap() {,0.02857,0,-1,0
org/jfree/chart/PaintMap,15,78,        this.store = new HashMap();    ,0.02857,0,-1,0
org/jfree/chart/PaintMap,15,79,    },0.02857,0,-1,0
org/jfree/chart/util/RectangleInsets,15,184,        if (!(obj instanceof RectangleInsets)) {,0.02703,0,-1,0
org/jfree/chart/util/RectangleInsets,15,187,        final RectangleInsets that = (RectangleInsets) obj;,0.02703,0,-1,0
org/jfree/chart/util/RectangleInsets,15,188,        if (that.unitType != this.unitType) {,0.02703,0,-1,0
org/jfree/chart/util/RectangleInsets,15,191,        if (this.left != that.left) {,0.02703,0,-1,0
org/jfree/chart/util/RectangleInsets,15,181,        if (obj == this) {,0.02273,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,100,    private TextBlockAnchor(String name) {,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,101,        this.name = name;,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,102,    },0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,57,    public static final TextBlockAnchor TOP_LEFT ,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,61,    public static final TextBlockAnchor TOP_CENTER = new TextBlockAnchor(,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,65,    public static final TextBlockAnchor TOP_RIGHT = new TextBlockAnchor(,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,69,    public static final TextBlockAnchor CENTER_LEFT = new TextBlockAnchor(,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,73,    public static final TextBlockAnchor CENTER = new TextBlockAnchor(,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,77,    public static final TextBlockAnchor CENTER_RIGHT = new TextBlockAnchor(,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,81,    public static final TextBlockAnchor BOTTOM_LEFT ,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,85,    public static final TextBlockAnchor BOTTOM_CENTER ,0.01316,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,89,    public static final TextBlockAnchor BOTTOM_RIGHT ,0.01316,0,-1,0
org/jfree/chart/JFreeChart,15,393,            LegendTitle legend = new LegendTitle(this.plot);,0.01064,0,-1,0
org/jfree/chart/JFreeChart,15,394,"            legend.setMargin(new RectangleInsets(1.0, 1.0, 1.0, 1.0));",0.01064,0,-1,0
org/jfree/chart/JFreeChart,15,395,            legend.setFrame(new LineBorder());,0.01064,0,-1,0
org/jfree/chart/JFreeChart,15,396,            legend.setBackgroundPaint(Color.white);,0.01064,0,-1,0
org/jfree/chart/JFreeChart,15,397,            legend.setPosition(RectangleEdge.BOTTOM);,0.01064,0,-1,0
org/jfree/chart/JFreeChart,15,398,            this.subtitles.add(legend);,0.01064,0,-1,0
org/jfree/chart/JFreeChart,15,399,            legend.addChangeListener(this);,0.01064,0,-1,0
org/jfree/chart/event/TitleChangeEvent,15,64,        super(title);,0.01064,0,-1,0
org/jfree/chart/event/TitleChangeEvent,15,65,        this.title = title;,0.01064,0,-1,0
org/jfree/chart/event/TitleChangeEvent,15,66,    },0.01064,0,-1,0
org/jfree/chart/title/Title,15,131,"        this(Title.DEFAULT_POSITION,",0.01064,0,-1,0
org/jfree/chart/title/Title,15,134,    },0.01064,0,-1,0
org/jfree/chart/title/Title,15,216,        if (position == null) {,0.01064,0,-1,0
org/jfree/chart/title/Title,15,219,        if (this.position != position) {,0.01064,0,-1,0
org/jfree/chart/title/Title,15,220,            this.position = position;,0.01064,0,-1,0
org/jfree/chart/title/Title,15,221,            notifyListeners(new TitleChangeEvent(this));,0.01064,0,-1,0
org/jfree/chart/title/Title,15,223,    },0.01064,0,-1,0
org/jfree/chart/title/Title,15,357,        if (this.notify) {,0.01064,0,-1,0
org/jfree/chart/title/Title,15,358,            Object[] listeners = this.listenerList.getListenerList();,0.01064,0,-1,0
org/jfree/chart/title/Title,15,359,            for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.01064,0,-1,0
org/jfree/chart/title/Title,15,366,    },0.01064,0,-1,0
org/jfree/chart/block/AbstractBlock,15,209,        if (margin == null) {,0.01064,0,-1,0
org/jfree/chart/block/AbstractBlock,15,212,        this.margin = margin;,0.01064,0,-1,0
org/jfree/chart/block/AbstractBlock,15,213,    },0.01064,0,-1,0
org/jfree/chart/block/AbstractBlock,15,251,        if (frame == null) {,0.01064,0,-1,0
org/jfree/chart/block/AbstractBlock,15,254,        this.frame = frame;,0.01064,0,-1,0
org/jfree/chart/block/AbstractBlock,15,255,    },0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,162,"        this(source, new FlowArrangement(), new ColumnArrangement());",0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,163,    },0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,175,"                       Arrangement hLayout, Arrangement vLayout) {",0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,176,        this.sources = new LegendItemSource[] {source};,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,177,        this.items = new BlockContainer(hLayout);,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,178,        this.hLayout = hLayout;,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,179,        this.vLayout = vLayout;,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,180,        this.backgroundPaint = null;  ,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,181,        this.legendItemGraphicEdge = RectangleEdge.LEFT;,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,182,        this.legendItemGraphicAnchor = RectangleAnchor.CENTER;,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,183,        this.legendItemGraphicLocation = RectangleAnchor.CENTER;,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,184,"        this.legendItemGraphicPadding = new RectangleInsets(2.0, 2.0, 2.0, 2.0);",0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,185,        this.itemFont = DEFAULT_ITEM_FONT;,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,186,        this.itemPaint = DEFAULT_ITEM_PAINT;,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,187,"        this.itemLabelPadding = new RectangleInsets(2.0, 2.0, 2.0, 2.0);",0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,188,    },0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,108,    public static final Font DEFAULT_ITEM_FONT ,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,112,    public static final Paint DEFAULT_ITEM_PAINT = Color.black;,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,229,        this.backgroundPaint = paint;   ,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,230,        notifyListeners(new TitleChangeEvent(this));,0.01064,0,-1,0
org/jfree/chart/title/LegendTitle,15,231,    },0.01064,0,-1,0
org/jfree/chart/block/BlockContainer,15,95,    public BlockContainer(Arrangement arrangement) {,0.01064,0,-1,0
org/jfree/chart/block/BlockContainer,15,96,        if (arrangement == null) {,0.01064,0,-1,0
org/jfree/chart/block/BlockContainer,15,99,        this.arrangement = arrangement;,0.01064,0,-1,0
org/jfree/chart/block/BlockContainer,15,100,        this.blocks = new ArrayList();,0.01064,0,-1,0
org/jfree/chart/block/BlockContainer,15,101,    }    ,0.01064,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,78,    public ColumnArrangement() {   ,0.01064,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,79,    },0.01064,0,-1,0
org/jfree/chart/block/FlowArrangement,15,80,"        this(HorizontalAlignment.CENTER, VerticalAlignment.CENTER, 2.0, 2.0);",0.01064,0,-1,0
org/jfree/chart/block/FlowArrangement,15,81,    },0.01064,0,-1,0
org/jfree/chart/block/FlowArrangement,15,92,"                           double hGap, double vGap) {   ",0.01064,0,-1,0
org/jfree/chart/block/FlowArrangement,15,93,        this.horizontalAlignment = hAlign;,0.01064,0,-1,0
org/jfree/chart/block/FlowArrangement,15,94,        this.verticalAlignment = vAlign;,0.01064,0,-1,0
org/jfree/chart/block/FlowArrangement,15,95,        this.horizontalGap = hGap;,0.01064,0,-1,0
org/jfree/chart/block/FlowArrangement,15,96,        this.verticalGap = vGap;,0.01064,0,-1,0
org/jfree/chart/block/FlowArrangement,15,97,    },0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,82,"        this(Color.black, new BasicStroke(1.0f), new RectangleInsets(1.0, 1.0, ",0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,84,    },0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,93,"    public LineBorder(Paint paint, Stroke stroke, RectangleInsets insets) {",0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,94,        if (paint == null) {,0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,97,        if (stroke == null) {,0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,100,        if (insets == null) {,0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,103,        this.paint = paint;,0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,104,        this.stroke = stroke;,0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,105,        this.insets = insets;,0.01064,0,-1,0
org/jfree/chart/block/LineBorder,15,106,    }  ,0.01064,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,80,    private static String classLoaderSource = THREAD_CONTEXT;,0.00962,0,-1,0
org/jfree/chart/JFreeChart,15,404,            if (titleFont == null) {,0.00943,0,-1,0
org/jfree/chart/JFreeChart,15,407,"            this.title = new TextTitle(title, titleFont);",0.00943,0,-1,0
org/jfree/chart/JFreeChart,15,408,            this.title.addChangeListener(this);,0.00943,0,-1,0
org/jfree/chart/title/TextTitle,15,187,"        this(text, font, TextTitle.DEFAULT_TEXT_PAINT, Title.DEFAULT_POSITION,",0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,190,    },0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,211,"        super(position, horizontalAlignment, verticalAlignment, padding);",0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,160,    private boolean expandToFitSpace = false;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,213,        if (text == null) {,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,216,        if (font == null) {,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,219,        if (paint == null) {,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,222,        this.text = text;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,223,        this.font = font;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,224,        this.paint = paint;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,228,        this.textAlignment = horizontalAlignment;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,229,        this.backgroundPaint = null;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,230,        this.content = null;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,231,        this.toolTipText = null;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,232,        this.urlText = null;,0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,234,    },0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,126,"    public static final Font DEFAULT_FONT = new Font(""SansSerif"", Font.BOLD, ",0.00926,0,-1,0
org/jfree/chart/title/TextTitle,15,130,    public static final Paint DEFAULT_TEXT_PAINT = Color.black;,0.00926,0,-1,0
org/jfree/chart/JFreeChart,15,364,                      boolean createLegend) {,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,298,    private int backgroundImageAlignment = Align.FIT;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,301,    private float backgroundImageAlpha = 0.5f;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,366,        if (plot == null) {,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,371,        this.progressListeners = new EventListenerList();,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,372,        this.changeListeners = new EventListenerList();,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,373,        this.notify = true;  // default is to notify listeners when the ,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,376,        this.renderingHints = new RenderingHints(,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,380,        this.borderVisible = false;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,381,        this.borderStroke = new BasicStroke(1.0f);,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,382,        this.borderPaint = Color.black;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,384,        this.padding = RectangleInsets.ZERO_INSETS;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,386,        this.plot = plot;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,387,        plot.addChangeListener(this);,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,389,        this.subtitles = new ArrayList();,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,392,        if (createLegend) {,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,403,        if (title != null) {,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,411,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,413,        this.backgroundImage = DEFAULT_BACKGROUND_IMAGE;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,414,        this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,415,        this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,417,    },0.00885,0,-1,0
org/jfree/chart/title/Title,15,172,                    RectangleInsets padding) {,0.00885,0,-1,0
org/jfree/chart/title/Title,15,175,        if (position == null) {,0.00885,0,-1,0
org/jfree/chart/title/Title,15,178,        if (horizontalAlignment == null) {,0.00885,0,-1,0
org/jfree/chart/title/Title,15,183,        if (verticalAlignment == null) {,0.00885,0,-1,0
org/jfree/chart/title/Title,15,187,        if (padding == null) {,0.00885,0,-1,0
org/jfree/chart/title/Title,15,191,        this.position = position;,0.00885,0,-1,0
org/jfree/chart/title/Title,15,192,        this.horizontalAlignment = horizontalAlignment;,0.00885,0,-1,0
org/jfree/chart/title/Title,15,193,        this.verticalAlignment = verticalAlignment;,0.00885,0,-1,0
org/jfree/chart/title/Title,15,194,        setPadding(padding);,0.00885,0,-1,0
org/jfree/chart/title/Title,15,195,        this.listenerList = new EventListenerList();,0.00885,0,-1,0
org/jfree/chart/title/Title,15,196,        this.notify = true;,0.00885,0,-1,0
org/jfree/chart/title/Title,15,198,    },0.00885,0,-1,0
org/jfree/chart/title/Title,15,96,    public static final RectangleEdge DEFAULT_POSITION = RectangleEdge.TOP;,0.00885,0,-1,0
org/jfree/chart/title/Title,15,100,            DEFAULT_HORIZONTAL_ALIGNMENT = HorizontalAlignment.CENTER;,0.00885,0,-1,0
org/jfree/chart/title/Title,15,104,            DEFAULT_VERTICAL_ALIGNMENT = VerticalAlignment.CENTER;,0.00885,0,-1,0
org/jfree/chart/title/Title,15,107,    public static final RectangleInsets DEFAULT_PADDING = new RectangleInsets(,0.00885,0,-1,0
org/jfree/chart/title/Title,15,337,"        this.listenerList.add(TitleChangeListener.class, listener);",0.00885,0,-1,0
org/jfree/chart/title/Title,15,338,    },0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,109,    protected AbstractBlock() {,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,110,        this.id = null;,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,111,        this.width = 0.0;,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,112,        this.height = 0.0;,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,113,        this.bounds = new Rectangle2D.Float();,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,114,        this.margin = RectangleInsets.ZERO_INSETS;,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,115,        this.frame = BlockBorder.NONE; ,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,116,        this.padding = RectangleInsets.ZERO_INSETS;,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,117,    },0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,277,        if (padding == null) {,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,280,        this.padding = padding;,0.00885,0,-1,0
org/jfree/chart/block/AbstractBlock,15,281,    },0.00885,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,76,    private HorizontalAlignment(String name) {,0.00885,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,77,        this.name = name;,0.00885,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,78,    },0.00885,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,57,    public static final HorizontalAlignment LEFT ,0.00885,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,61,    public static final HorizontalAlignment RIGHT ,0.00885,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,65,    public static final HorizontalAlignment CENTER ,0.00885,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,76,    private VerticalAlignment(String name) {,0.00885,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,77,        this.name = name;,0.00885,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,78,    },0.00885,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,57,    public static final VerticalAlignment TOP ,0.00885,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,61,    public static final VerticalAlignment BOTTOM ,0.00885,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,65,    public static final VerticalAlignment CENTER ,0.00885,0,-1,0
org/jfree/chart/block/BlockBorder,15,128,"    public BlockBorder(RectangleInsets insets, Paint paint) {",0.00885,0,-1,0
org/jfree/chart/block/BlockBorder,15,129,        if (insets == null) {,0.00885,0,-1,0
org/jfree/chart/block/BlockBorder,15,132,        if (paint == null) {,0.00885,0,-1,0
org/jfree/chart/block/BlockBorder,15,135,        this.insets = insets;,0.00885,0,-1,0
org/jfree/chart/block/BlockBorder,15,136,        this.paint = paint;,0.00885,0,-1,0
org/jfree/chart/block/BlockBorder,15,137,    },0.00885,0,-1,0
org/jfree/chart/block/BlockBorder,15,71,    public static final BlockBorder NONE = new BlockBorder(,0.00885,0,-1,0
org/jfree/chart/JFreeChart,15,243,    public static final ProjectInfo INFO = new JFreeChartInfo();,0.00877,0,-1,0
org/jfree/chart/JFreeChart,15,246,    public static final Font DEFAULT_TITLE_FONT ,0.00877,0,-1,0
org/jfree/chart/JFreeChart,15,250,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.WHITE;,0.00877,0,-1,0
org/jfree/chart/JFreeChart,15,253,    public static final Image DEFAULT_BACKGROUND_IMAGE = null;,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,67,    public ProjectInfo() {,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,69,    },0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,111,        this.logo = logo;,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,112,    },0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,129,        this.licenceText = licenceText;,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,130,    },0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,147,        this.contributors = contributors;,0.00877,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,148,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,145,    public BasicProjectInfo() {,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,146,        this.libraries = new ArrayList();,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,147,        this.optionalLibraries = new ArrayList();,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,148,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,198,        this.copyright = copyright;,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,199,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,207,        super.setInfo(info);,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,208,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,216,        super.setLicenceName(licence);,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,217,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,225,        super.setName(name);,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,226,    },0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,234,        super.setVersion(version);,0.00877,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,235,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,15,82,    protected Library() {,0.00877,0,-1,0
org/jfree/chart/ui/Library,15,84,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,15,128,        this.info = info;,0.00877,0,-1,0
org/jfree/chart/ui/Library,15,129,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,15,137,        this.licenceName = licenceName;,0.00877,0,-1,0
org/jfree/chart/ui/Library,15,138,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,15,146,        this.name = name;,0.00877,0,-1,0
org/jfree/chart/ui/Library,15,147,    },0.00877,0,-1,0
org/jfree/chart/ui/Library,15,155,        this.version = version;,0.00877,0,-1,0
org/jfree/chart/ui/Library,15,156,    },0.00877,0,-1,0
org/jfree/chart/ui/Licences,15,52,public class Licences {,0.00877,0,-1,0
org/jfree/chart/ui/Licences,15,799,        if (singleton == null) {,0.00877,0,-1,0
org/jfree/chart/ui/Licences,15,800,            singleton = new Licences();,0.00877,0,-1,0
org/jfree/chart/ui/Licences,15,802,        return singleton;,0.00877,0,-1,0
org/jfree/chart/ui/Licences,15,822,        return LGPL;,0.00877,0,-1,0
org/jfree/chart/ui/Contributor,15,63,"    public Contributor(String name, String email) {",0.00877,0,-1,0
org/jfree/chart/ui/Contributor,15,64,        this.name = name;,0.00877,0,-1,0
org/jfree/chart/ui/Contributor,15,65,        this.email = email;,0.00877,0,-1,0
org/jfree/chart/ui/Contributor,15,66,    },0.00877,0,-1,0
org/jfree/chart/resources/JFreeChartResources,15,44,public class JFreeChartResources extends ListResourceBundle {,0.00877,0,-1,0
org/jfree/chart/resources/JFreeChartResources,15,56,    private static final Object[][] CONTENTS = {,0.00877,0,-1,0
org/jfree/chart/resources/JFreeChartResources,15,52,        return CONTENTS;,0.00877,0,-1,0
org/jfree/chart/plot/Plot,15,870,"        this.listenerList.add(PlotChangeListener.class, listener);",0.0087,0,-1,0
org/jfree/chart/plot/Plot,15,871,    },0.0087,0,-1,0
org/jfree/chart/util/RectangleEdge,15,80,    private RectangleEdge(String name) {,0.0087,0,-1,0
org/jfree/chart/util/RectangleEdge,15,81,        this.name = name;,0.0087,0,-1,0
org/jfree/chart/util/RectangleEdge,15,82,    },0.0087,0,-1,0
org/jfree/chart/util/RectangleEdge,15,57,    public static final RectangleEdge TOP = new RectangleEdge(,0.0087,0,-1,0
org/jfree/chart/util/RectangleEdge,15,61,    public static final RectangleEdge BOTTOM = new RectangleEdge(,0.0087,0,-1,0
org/jfree/chart/util/RectangleEdge,15,65,    public static final RectangleEdge LEFT = new RectangleEdge(,0.0087,0,-1,0
org/jfree/chart/util/RectangleEdge,15,69,    public static final RectangleEdge RIGHT = new RectangleEdge(,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,106,    private RectangleAnchor(final String name) {,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,107,        this.name = name;,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,108,    },0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,63,    public static final RectangleAnchor CENTER ,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,67,    public static final RectangleAnchor TOP ,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,71,    public static final RectangleAnchor TOP_LEFT ,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,75,    public static final RectangleAnchor TOP_RIGHT ,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,79,    public static final RectangleAnchor BOTTOM ,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,83,    public static final RectangleAnchor BOTTOM_LEFT ,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,87,    public static final RectangleAnchor BOTTOM_RIGHT ,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,91,    public static final RectangleAnchor LEFT ,0.0087,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,95,    public static final RectangleAnchor RIGHT ,0.0087,0,-1,0
org/jfree/data/Range,15,99,        return this.lower;,0.00862,0,-1,0
org/jfree/data/Range,15,108,        return this.upper;,0.00862,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,72,    private PlotOrientation(String name) {,0.008,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,73,        this.name = name;,0.008,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,74,    },0.008,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,57,    public static final PlotOrientation HORIZONTAL,0.008,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,61,    public static final PlotOrientation VERTICAL,0.008,0,-1,0
org/jfree/data/Range,15,83,"    public Range(double lower, double upper) {",0.00794,0,-1,0
org/jfree/data/Range,15,84,        if (lower > upper) {,0.00794,0,-1,0
org/jfree/data/Range,15,89,        this.lower = lower;,0.00794,0,-1,0
org/jfree/data/Range,15,90,        this.upper = upper;,0.00794,0,-1,0
org/jfree/data/Range,15,91,    },0.00794,0,-1,0
org/jfree/chart/text/TextAnchor,15,124,    private TextAnchor(String name) {,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,125,        this.name = name;,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,126,    },0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,58,    public static final TextAnchor TOP_LEFT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,62,    public static final TextAnchor TOP_CENTER = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,66,    public static final TextAnchor TOP_RIGHT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,70,    public static final TextAnchor HALF_ASCENT_LEFT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,74,    public static final TextAnchor HALF_ASCENT_CENTER = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,78,    public static final TextAnchor HALF_ASCENT_RIGHT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,82,    public static final TextAnchor CENTER_LEFT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,86,"    public static final TextAnchor CENTER = new TextAnchor(""TextAnchor.CENTER"");",0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,89,    public static final TextAnchor CENTER_RIGHT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,93,    public static final TextAnchor BASELINE_LEFT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,97,    public static final TextAnchor BASELINE_CENTER = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,101,    public static final TextAnchor BASELINE_RIGHT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,105,    public static final TextAnchor BOTTOM_LEFT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,109,    public static final TextAnchor BOTTOM_CENTER = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/text/TextAnchor,15,113,    public static final TextAnchor BOTTOM_RIGHT = new TextAnchor(,0.0068,0,-1,0
org/jfree/chart/event/PlotChangeEvent,15,64,        super(plot);,0.00662,0,-1,0
org/jfree/chart/event/PlotChangeEvent,15,65,        this.plot = plot;,0.00662,0,-1,0
org/jfree/chart/event/PlotChangeEvent,15,66,    },0.00662,0,-1,0
org/jfree/chart/plot/Plot,15,890,        Object[] listeners = this.listenerList.getListenerList();,0.00662,0,-1,0
org/jfree/chart/plot/Plot,15,891,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.00662,0,-1,0
org/jfree/chart/plot/Plot,15,896,    },0.00662,0,-1,0
org/jfree/chart/plot/Plot,15,286,    protected Plot() {,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,266,    private int backgroundImageAlignment = Align.FIT;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,269,    private float backgroundImageAlpha = 0.5f;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,288,        this.parent = null;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,289,        this.insets = DEFAULT_INSETS;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,290,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,291,        this.backgroundAlpha = DEFAULT_BACKGROUND_ALPHA;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,292,        this.backgroundImage = null;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,293,        this.outlineVisible = true;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,294,        this.outlineStroke = DEFAULT_OUTLINE_STROKE;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,295,        this.outlinePaint = DEFAULT_OUTLINE_PAINT;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,296,        this.foregroundAlpha = DEFAULT_FOREGROUND_ALPHA;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,298,        this.noDataMessage = null;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,299,"        this.noDataMessageFont = new Font(""SansSerif"", Font.PLAIN, 12);",0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,300,        this.noDataMessagePaint = Color.black;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,302,        this.drawingSupplier = new DefaultDrawingSupplier();,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,304,        this.listenerList = new EventListenerList();,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,306,    },0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,193,    public static final Number ZERO = new Integer(0);,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,196,    public static final RectangleInsets DEFAULT_INSETS ,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,200,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f);,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,203,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,212,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,221,    public static final Shape DEFAULT_LEGEND_ITEM_BOX ,0.00641,0,-1,0
org/jfree/chart/plot/Plot,15,225,    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE ,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,150,"        this(DEFAULT_PAINT_SEQUENCE, DEFAULT_FILL_PAINT_SEQUENCE,",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,156,    },0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,197,            Shape[] shapeSequence) {,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,199,        this.paintSequence = paintSequence;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,200,        this.fillPaintSequence = fillPaintSequence;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,201,        this.outlinePaintSequence = outlinePaintSequence;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,202,        this.strokeSequence = strokeSequence;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,203,        this.outlineStrokeSequence = outlineStrokeSequence;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,204,        this.shapeSequence = shapeSequence;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,205,    },0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,83,    public static final Paint[] DEFAULT_PAINT_SEQUENCE ,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,87,    public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE = new Paint[] {,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,91,    public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE = new Paint[] {,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,95,    public static final Stroke[] DEFAULT_STROKE_SEQUENCE = new Stroke[] {,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,100,    public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE ,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,105,    public static final Shape[] DEFAULT_SHAPE_SEQUENCE ,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,289,        Shape[] result = new Shape[10];,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,291,        double size = 6.0;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,292,        double delta = size / 2.0;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,293,        int[] xpoints = null;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,294,        int[] ypoints = null;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,297,"        result[0] = new Rectangle2D.Double(-delta, -delta, size, size);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,299,"        result[1] = new Ellipse2D.Double(-delta, -delta, size, size);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,302,"        xpoints = intArray(0.0, delta, -delta);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,303,"        ypoints = intArray(-delta, delta, delta);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,304,"        result[2] = new Polygon(xpoints, ypoints, 3);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,307,"        xpoints = intArray(0.0, delta, 0.0, -delta);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,308,"        ypoints = intArray(-delta, 0.0, delta, 0.0);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,309,"        result[3] = new Polygon(xpoints, ypoints, 4);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,312,"        result[4] = new Rectangle2D.Double(-delta, -delta / 2, size, size / 2);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,315,"        xpoints = intArray(-delta, +delta, 0.0);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,316,"        ypoints = intArray(-delta, -delta, delta);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,317,"        result[5] = new Polygon(xpoints, ypoints, 3);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,320,"        result[6] = new Ellipse2D.Double(-delta, -delta / 2, size, size / 2);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,323,"        xpoints = intArray(-delta, delta, -delta);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,324,"        ypoints = intArray(-delta, 0.0, delta);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,325,"        result[7] = new Polygon(xpoints, ypoints, 3);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,328,"        result[8] = new Rectangle2D.Double(-delta / 2, -delta, size / 2, size);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,331,"        xpoints = intArray(-delta, delta, delta);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,332,"        ypoints = intArray(0.0, -delta, +delta);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,333,"        result[9] = new Polygon(xpoints, ypoints, 3);",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,335,        return result;,0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,517,"        return new int[] {(int) a, (int) b, (int) c};",0.00641,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,532,"        return new int[] {(int) a, (int) b, (int) c, (int) d};",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,59,"    public static final Color VERY_DARK_RED = new Color(0x80, 0x00, 0x00);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,62,"    public static final Color DARK_RED = new Color(0xc0, 0x00, 0x00);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,65,"    public static final Color LIGHT_RED = new Color(0xFF, 0x40, 0x40);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,68,"    public static final Color VERY_LIGHT_RED = new Color(0xFF, 0x80, 0x80);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,71,"    public static final Color VERY_DARK_YELLOW = new Color(0x80, 0x80, 0x00);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,74,"    public static final Color DARK_YELLOW = new Color(0xC0, 0xC0, 0x00);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,77,"    public static final Color LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x40);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,80,"    public static final Color VERY_LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x80);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,83,"    public static final Color VERY_DARK_GREEN = new Color(0x00, 0x80, 0x00);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,86,"    public static final Color DARK_GREEN = new Color(0x00, 0xC0, 0x00);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,89,"    public static final Color LIGHT_GREEN = new Color(0x40, 0xFF, 0x40);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,92,"    public static final Color VERY_LIGHT_GREEN = new Color(0x80, 0xFF, 0x80);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,95,"    public static final Color VERY_DARK_CYAN = new Color(0x00, 0x80, 0x80);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,98,"    public static final Color DARK_CYAN = new Color(0x00, 0xC0, 0xC0);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,101,"    public static final Color LIGHT_CYAN = new Color(0x40, 0xFF, 0xFF);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,104,"    public static final Color VERY_LIGHT_CYAN = new Color(0x80, 0xFF, 0xFF);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,107,"    public static final Color VERY_DARK_BLUE = new Color(0x00, 0x00, 0x80);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,110,"    public static final Color DARK_BLUE = new Color(0x00, 0x00, 0xC0);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,113,"    public static final Color LIGHT_BLUE = new Color(0x40, 0x40, 0xFF);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,116,"    public static final Color VERY_LIGHT_BLUE = new Color(0x80, 0x80, 0xFF);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,119,"    public static final Color VERY_DARK_MAGENTA = new Color(0x80, 0x00, 0x80);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,122,"    public static final Color DARK_MAGENTA = new Color(0xC0, 0x00, 0xC0);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,125,"    public static final Color LIGHT_MAGENTA = new Color(0xFF, 0x40, 0xFF);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,128,"    public static final Color VERY_LIGHT_MAGENTA = new Color(0xFF, 0x80, 0xFF);",0.00641,0,-1,0
org/jfree/chart/ChartColor,15,151,        return new Paint[] {,0.00641,0,-1,0
org/jfree/chart/util/RectangleInsets,15,102,"        this(UnitType.ABSOLUTE, top, left, bottom, right);   ",0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,103,    },0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,116,"                           double bottom, double right) {",0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,117,        if (unitType == null) {,0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,120,        this.unitType = unitType;,0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,121,        this.top = top;,0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,122,        this.bottom = bottom;,0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,123,        this.left = left;,0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,124,        this.right = right;,0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,125,    },0.00588,0,-1,0
org/jfree/chart/util/RectangleInsets,15,65,    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(,0.00588,0,-1,0
org/jfree/chart/util/UnitType,15,69,    private UnitType(String name) {,0.00575,0,-1,0
org/jfree/chart/util/UnitType,15,70,        this.name = name;,0.00575,0,-1,0
org/jfree/chart/util/UnitType,15,71,    },0.00575,0,-1,0
org/jfree/chart/util/UnitType,15,56,"    public static final UnitType ABSOLUTE = new UnitType(""UnitType.ABSOLUTE"");",0.00575,0,-1,0
org/jfree/chart/util/UnitType,15,59,"    public static final UnitType RELATIVE = new UnitType(""UnitType.RELATIVE"");",0.00575,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,77,        this(DEFAULT_INITIAL_CAPACITY);,0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,78,    },0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,86,"        this (initialCapacity, initialCapacity);",0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,87,    },0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,95,"    protected AbstractObjectList(int initialCapacity, int increment) {",0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,68,    private int size = 0;,0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,71,    private int increment = DEFAULT_INITIAL_CAPACITY;,0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,96,        this.objects = new Object[initialCapacity];,0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,97,        this.increment = increment;,0.00549,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,98,    },0.00549,0,-1,0
org/jfree/chart/util/ObjectList,15,58,    public ObjectList() {,0.00549,0,-1,0
org/jfree/chart/util/ObjectList,15,59,    },0.00549,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,69,"        this(source, null, ChartChangeEventType.GENERAL);",0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,70,    },0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,93,        super(source);,0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,94,        this.chart = chart;,0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,95,        this.type = type;,0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,96,    },0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,74,    private ChartChangeEventType(String name) {,0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,75,        this.name = name;,0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,76,    },0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,55,    public static final ChartChangeEventType GENERAL ,0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,59,    public static final ChartChangeEventType NEW_DATASET ,0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,63,    public static final ChartChangeEventType DATASET_UPDATED,0.00543,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,80,"        this(source, chart, ChartChangeEventType.GENERAL);",0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,81,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,104,        return this.chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,113,        this.chart = chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,114,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,122,        return this.type;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,131,        this.type = type;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,15,132,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,327,"        this(null, null, plot, true);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,328,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,343,"        this(title, JFreeChart.DEFAULT_TITLE_FONT, plot, true);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,344,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,367,"            throw new NullPointerException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,405,                titleFont = DEFAULT_TITLE_FONT;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,427,        return this.renderingHints;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,441,        if (renderingHints == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,442,"            throw new NullPointerException(""RenderingHints given are null"");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,444,        this.renderingHints = renderingHints;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,445,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,446,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,469,        this.borderVisible = visible;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,470,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,471,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,481,        return this.borderStroke;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,492,        this.borderStroke = stroke;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,493,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,494,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,504,        return this.borderPaint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,515,        this.borderPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,516,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,517,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,527,        return this.padding;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,539,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,540,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,542,        this.padding = padding;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,543,        notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,544,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,557,        return this.title;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,571,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,572,            this.title.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,574,        this.title = title;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,575,        if (title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,576,            title.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,578,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,579,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,594,        if (text != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,595,            if (this.title == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,596,"                setTitle(new TextTitle(text, JFreeChart.DEFAULT_TITLE_FONT));",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,599,                this.title.setText(text);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,603,            setTitle((TextTitle) null);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,605,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,616,        addSubtitle(legend);    ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,617,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,628,        return getLegend(0);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,641,        int seen = 0;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,642,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,643,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,644,            Title subtitle = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,645,            if (subtitle instanceof LegendTitle) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,646,                if (seen == index) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,647,                    return (LegendTitle) subtitle;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,650,                    seen++;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,653,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,654,        return null;        ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,664,        removeSubtitle(getLegend());,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,665,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,675,        return new ArrayList(this.subtitles);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,689,        if (subtitles == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,690,"            throw new NullPointerException(""Null 'subtitles' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,692,        setNotify(false);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,693,        clearSubtitles();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,694,        Iterator iterator = subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,695,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,696,            Title t = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,697,            if (t != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,698,                addSubtitle(t);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,700,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,701,        setNotify(true);  // this fires a ChartChangeEvent,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,702,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,712,        return this.subtitles.size();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,725,        if ((index < 0) || (index >= getSubtitleCount())) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,726,"            throw new IllegalArgumentException(""Index out of range."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,728,        return (Title) this.subtitles.get(index);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,740,        if (subtitle == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,741,"            throw new IllegalArgumentException(""Null 'subtitle' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,743,        this.subtitles.add(subtitle);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,744,        subtitle.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,745,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,746,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,758,        if (index < 0 || index > getSubtitleCount()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,759,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,762,        if (subtitle == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,763,"            throw new IllegalArgumentException(""Null 'subtitle' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,765,"        this.subtitles.add(index, subtitle);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,766,        subtitle.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,767,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,768,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,777,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,778,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,779,            Title t = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,780,            t.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,781,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,782,        this.subtitles.clear();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,783,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,784,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,795,        this.subtitles.remove(title);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,796,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,797,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,807,        return this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,821,        return (CategoryPlot) this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,835,        return (XYPlot) this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,847,        Object val = this.renderingHints.get(RenderingHints.KEY_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,848,        return RenderingHints.VALUE_ANTIALIAS_ON.equals(val);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,863,        Object val = this.renderingHints.get(RenderingHints.KEY_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,864,        if (val == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,865,            val = RenderingHints.VALUE_ANTIALIAS_DEFAULT;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,867,        if (!flag && RenderingHints.VALUE_ANTIALIAS_OFF.equals(val) ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,870,            return;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,872,        if (flag) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,873,"            this.renderingHints.put(RenderingHints.KEY_ANTIALIASING, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,877,"            this.renderingHints.put(RenderingHints.KEY_ANTIALIASING, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,880,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,882,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,895,        return this.renderingHints.get(RenderingHints.KEY_TEXT_ANTIALIASING); ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,913,        if (flag) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,914,            setTextAntiAlias(RenderingHints.VALUE_TEXT_ANTIALIAS_ON);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,917,            setTextAntiAlias(RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,919,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,934,"        this.renderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING, val);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,935,        this.notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,936,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,946,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,959,        if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,960,            if (!this.backgroundPaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,961,                this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,962,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,966,            if (paint != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,967,                this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,968,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,972,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,983,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,996,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,997,            if (!this.backgroundImage.equals(image)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,998,                this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,999,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1003,            if (image != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1004,                this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1005,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1009,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1021,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1033,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1034,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1035,            fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1037,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1047,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1060,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1061,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1062,            fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1065,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1076,        return this.notify;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1088,        this.notify = notify;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1090,        if (notify) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1091,            notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1093,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1105,"        draw(g2, area, null, null);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1106,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1117,"        draw(g2, area, null, info);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1118,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1141,            info.clear();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1142,            info.setChartArea(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1158,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1159,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1161,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1164,"            Align.align(dest, chartArea, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1165,"            g2.drawImage(this.backgroundImage, (int) dest.getX(), ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1168,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1172,            Paint paint = getBorderPaint();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1173,            Stroke stroke = getBorderStroke();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1174,            if (paint != null && stroke != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1175,                Rectangle2D borderArea = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1179,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1180,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1181,                g2.draw(borderArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1192,            entities = info.getEntityCollection();   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1198,                entities.addAll(e);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1208,                entities.addAll(e);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1217,            plotInfo = info.getPlotInfo();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1221,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1223,"        notifyListeners(new ChartProgressEvent(this, this, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1225,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1243,            x = frame.getX();   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1248,        else if (hAlign == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1249,            x = frame.getMaxX() - dimensions.width;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1255,            y = frame.getCenterY() - (dimensions.height / 2.0);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1283,"            throw new IllegalArgumentException(""Null 't' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1286,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1292,            return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1296,            return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1321,        else if (position == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1322,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1323,"            titleArea = createAlignedRectangle2D(size, area, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1325,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1326,"            area.setRect(area.getX(), area.getY(), area.getWidth() ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1328,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1330,        else if (position == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1331,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1332,"            titleArea = createAlignedRectangle2D(size, area, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1334,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1335,"            area.setRect(area.getX() + size.width, area.getY(), area.getWidth() ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1337,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1339,"            throw new RuntimeException(""Unrecognised title position."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1358,"        return createBufferedImage(width, height, null);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1373,"        return createBufferedImage(width, height, BufferedImage.TYPE_INT_ARGB,",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1391,"        BufferedImage image = new BufferedImage(width, height, imageType);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1392,        Graphics2D g2 = image.createGraphics();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1393,"        draw(g2, new Rectangle2D.Double(0, 0, width, height), null, info);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1394,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1395,        return image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1418,"        BufferedImage image = new BufferedImage(imageWidth, imageHeight, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1420,        Graphics2D g2 = image.createGraphics();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1421,        double scaleX = imageWidth / drawWidth;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1422,        double scaleY = imageHeight / drawHeight;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1423,"        AffineTransform st = AffineTransform.getScaleInstance(scaleX, scaleY);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1424,        g2.transform(st);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1425,"        draw(g2, new Rectangle2D.Double(0, 0, drawWidth, drawHeight), null, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1427,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1428,        return image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1448,"        this.plot.handleClick(x, y, info.getPlotInfo());",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1450,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1460,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1461,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1463,"        this.changeListeners.add(ChartChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1464,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1474,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1475,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1477,"        this.changeListeners.remove(ChartChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1478,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1486,        ChartChangeEvent event = new ChartChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1487,        notifyListeners(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1488,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1497,        if (this.notify) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1498,            Object[] listeners = this.changeListeners.getListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1499,            for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1500,                if (listeners[i] == ChartChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1501,                    ((ChartChangeListener) listeners[i + 1]).chartChanged(,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1506,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1517,"        this.progressListeners.add(ChartProgressListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1518,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1528,"        this.progressListeners.remove(ChartProgressListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1529,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1541,            if (listeners[i] == ChartProgressListener.class) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1542,                ((ChartProgressListener) listeners[i + 1]).chartProgress(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1555,        event.setChart(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1556,        notifyListeners(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1557,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1566,        event.setChart(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1567,        notifyListeners(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1568,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1578,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1579,            return true;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1581,        if (!(obj instanceof JFreeChart)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1582,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1584,        JFreeChart that = (JFreeChart) obj;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1585,        if (!this.renderingHints.equals(that.renderingHints)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1586,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1588,        if (this.borderVisible != that.borderVisible) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1589,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1591,"        if (!ObjectUtilities.equal(this.borderStroke, that.borderStroke)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1592,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1594,"        if (!PaintUtilities.equal(this.borderPaint, that.borderPaint)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1595,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1597,        if (!this.padding.equals(that.padding)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1598,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1600,"        if (!ObjectUtilities.equal(this.title, that.title)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1601,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1603,"        if (!ObjectUtilities.equal(this.subtitles, that.subtitles)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1604,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1606,"        if (!ObjectUtilities.equal(this.plot, that.plot)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1607,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1609,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1612,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1614,"        if (!ObjectUtilities.equal(this.backgroundImage, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1616,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1618,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1619,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1621,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1622,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1624,        if (this.notify != that.notify) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1625,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1627,        return true;,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1638,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1639,"        SerialUtilities.writeStroke(this.borderStroke, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1640,"        SerialUtilities.writePaint(this.borderPaint, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1641,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1642,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1654,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1655,        this.borderStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1656,        this.borderPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1657,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1658,        this.progressListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1659,        this.changeListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1660,        this.renderingHints = new RenderingHints(,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1665,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1666,            this.title.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1669,        for (int i = 0; i < getSubtitleCount(); i++) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1670,            getSubtitle(i).addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1672,        this.plot.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1673,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1681,        System.out.println(JFreeChart.INFO.toString());,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1682,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1693,        JFreeChart chart = (JFreeChart) super.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1695,        chart.renderingHints = (RenderingHints) this.renderingHints.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1700,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1701,            chart.title = (TextTitle) this.title.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1702,            chart.title.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1705,        chart.subtitles = new ArrayList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1706,        for (int i = 0; i < getSubtitleCount(); i++) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1707,            Title subtitle = (Title) getSubtitle(i).clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1708,            chart.subtitles.add(subtitle);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1709,            subtitle.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1712,        if (this.plot != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1713,            chart.plot = (Plot) this.plot.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1714,            chart.plot.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1717,        chart.progressListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1718,        chart.changeListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,15,1719,        return chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,84,        return this.name;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,96,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,97,            return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,99,        if (!(obj instanceof ChartChangeEventType)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,100,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,102,        ChartChangeEventType that = (ChartChangeEventType) obj;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,103,        if (!this.name.equals(that.toString())) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,104,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,106,        return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,115,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,126,        if (this.equals(ChartChangeEventType.GENERAL)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,127,            return ChartChangeEventType.GENERAL;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,129,        else if (this.equals(ChartChangeEventType.NEW_DATASET)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,130,            return ChartChangeEventType.NEW_DATASET;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,132,        else if (this.equals(ChartChangeEventType.DATASET_UPDATED)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,133,            return ChartChangeEventType.DATASET_UPDATED;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,15,135,        return null;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,88,        return this.chart;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,97,        this.chart = chart;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,98,    },0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,106,        return this.type;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,115,        this.type = type;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,116,    },0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,124,        return this.percent;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,133,        this.percent = percent;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,15,134,    },0.0,0,-1,0
org/jfree/chart/event/TitleChangeEvent,15,74,        return this.title;,0.0,0,-1,0
org/jfree/chart/title/Title,15,150,"        this(position, horizontalAlignment, verticalAlignment,",0.0,0,-1,0
org/jfree/chart/title/Title,15,153,    },0.0,0,-1,0
org/jfree/chart/title/Title,15,176,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,15,179,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/title/Title,15,184,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/title/Title,15,188,"            throw new IllegalArgumentException(""Null 'spacer' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,15,217,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,15,242,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,243,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,15,245,        if (this.horizontalAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,246,            this.horizontalAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/Title,15,247,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,15,249,    },0.0,0,-1,0
org/jfree/chart/title/Title,15,257,        return this.verticalAlignment;,0.0,0,-1,0
org/jfree/chart/title/Title,15,268,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,269,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,15,271,        if (this.verticalAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,272,            this.verticalAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/Title,15,273,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,15,275,    },0.0,0,-1,0
org/jfree/chart/title/Title,15,284,        return this.notify;,0.0,0,-1,0
org/jfree/chart/title/Title,15,295,        this.notify = flag;,0.0,0,-1,0
org/jfree/chart/title/Title,15,296,        if (flag) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,297,            notifyListeners(new TitleChangeEvent(this));   ,0.0,0,-1,0
org/jfree/chart/title/Title,15,299,    },0.0,0,-1,0
org/jfree/chart/title/Title,15,325,        Title duplicate = (Title) super.clone();,0.0,0,-1,0
org/jfree/chart/title/Title,15,326,        duplicate.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/title/Title,15,328,        return duplicate;,0.0,0,-1,0
org/jfree/chart/title/Title,15,346,"        this.listenerList.remove(TitleChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/title/Title,15,347,    },0.0,0,-1,0
org/jfree/chart/title/Title,15,360,                if (listeners[i] == TitleChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,361,                    ((TitleChangeListener) listeners[i + 1]).titleChanged(,0.0,0,-1,0
org/jfree/chart/title/Title,15,376,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,377,            return true;,0.0,0,-1,0
org/jfree/chart/title/Title,15,379,        if (!(obj instanceof Title)) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,380,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,15,382,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,383,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/Title,15,385,        Title that = (Title) obj;,0.0,0,-1,0
org/jfree/chart/title/Title,15,386,        if (this.position != that.position) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,387,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,15,389,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,390,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,15,392,        if (this.verticalAlignment != that.verticalAlignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,393,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,15,395,        if (this.notify != that.notify) {,0.0,0,-1,0
org/jfree/chart/title/Title,15,396,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,15,398,        return true;,0.0,0,-1,0
org/jfree/chart/title/Title,15,407,        int result = 193;,0.0,0,-1,0
org/jfree/chart/title/Title,15,408,        result = 37 * result + ObjectUtilities.hashCode(this.position);    ,0.0,0,-1,0
org/jfree/chart/title/Title,15,409,        result = 37 * result ,0.0,0,-1,0
org/jfree/chart/title/Title,15,411,        result = 37 * result + ObjectUtilities.hashCode(this.verticalAlignment);,0.0,0,-1,0
org/jfree/chart/title/Title,15,412,        return result;,0.0,0,-1,0
org/jfree/chart/title/Title,15,423,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/title/Title,15,424,    },0.0,0,-1,0
org/jfree/chart/title/Title,15,436,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/title/Title,15,437,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/title/Title,15,438,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,127,        return this.id;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,138,        this.id = id;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,139,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,151,        return this.width;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,162,        this.width = width;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,163,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,175,        return this.height;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,186,        this.height = height;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,187,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,197,        return this.margin;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,210,"            throw new IllegalArgumentException(""Null 'margin' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,227,"        setMargin(new RectangleInsets(top, left, bottom, right));",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,228,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,252,"            throw new IllegalArgumentException(""Null 'frame' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,265,        return this.padding;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,278,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,293,"        setPadding(new RectangleInsets(top, left, bottom, right));",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,294,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,304,        return this.margin.getLeft() + this.frame.getInsets().getLeft() ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,316,        return this.margin.getTop() + this.frame.getInsets().getTop() ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,329,"        return arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,342,"        Size2D base = new Size2D(getWidth(), getHeight());",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,343,        return constraint.calculateConstrainedSize(base);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,354,        return this.bounds;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,365,        if (bounds == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,366,"            throw new IllegalArgumentException(""Null 'bounds' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,368,        this.bounds = bounds;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,369,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,417,"            throw new IllegalArgumentException(""Null 'c' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,420,            return c;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,438,            return null;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,443,            lowerBound = trimToContentWidth(r.getLowerBound());   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,453,            return null;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,458,            lowerBound = trimToContentHeight(r.getLowerBound());   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,556,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,557,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,559,        if (!(obj instanceof AbstractBlock)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,560,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,562,        AbstractBlock that = (AbstractBlock) obj;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,563,"        if (!ObjectUtilities.equal(this.id, that.id)) {",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,564,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,566,        if (!this.frame.equals(that.frame)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,567,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,569,        if (!this.bounds.equals(that.bounds)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,570,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,572,        if (!this.margin.equals(that.margin)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,573,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,575,        if (!this.padding.equals(that.padding)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,576,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,578,        if (this.height != that.height) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,579,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,581,        if (this.width != that.width) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,582,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,584,        return true;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,596,        AbstractBlock clone = (AbstractBlock) super.clone();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,597,        clone.bounds = (Rectangle2D) ShapeUtilities.clone(this.bounds);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,598,        if (this.frame instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,599,            PublicCloneable pc = (PublicCloneable) this.frame;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,600,            clone.frame = (BlockFrame) pc.clone();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,602,        return clone;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,613,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,614,"        SerialUtilities.writeShape(this.bounds, stream);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,615,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,627,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,628,        this.bounds = (Rectangle2D) SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,15,629,    },0.0,0,-1,0
org/jfree/chart/event/PlotChangeEvent,15,74,        return this.plot;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,316,        return this.datasetGroup;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,327,        this.datasetGroup = group;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,328,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,341,        return this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,354,        this.noDataMessage = message;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,355,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,356,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,367,        return this.noDataMessageFont;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,379,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,380,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,382,        this.noDataMessageFont = font;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,383,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,384,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,395,        return this.noDataMessagePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,407,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,408,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,410,        this.noDataMessagePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,411,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,412,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,435,        return this.parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,447,        this.parent = parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,448,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,459,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,460,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,461,            return this;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,464,            return p.getRootPlot();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,480,        return (getParent() != null);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,520,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,539,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,552,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,553,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,554,                this.backgroundPaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,555,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,559,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,560,                if (this.backgroundPaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,561,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,564,            this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,565,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,568,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,578,        return this.backgroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,590,        if (this.backgroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,591,            this.backgroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,592,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,594,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,604,        DrawingSupplier result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,605,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,606,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,607,            result = p.getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,610,            result = this.drawingSupplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,612,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,626,        this.drawingSupplier = supplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,627,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,628,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,639,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,651,        this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,652,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,653,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,664,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,677,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,678,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,679,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,681,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,693,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,708,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Plot,15,709,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,711,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,712,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,713,            this.notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,715,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,731,        return this.outlineVisible;    ,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,745,        this.outlineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,746,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,747,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,757,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,770,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,771,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,772,                this.outlineStroke = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,773,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,777,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,778,                if (this.outlineStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,779,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,782,            this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,783,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,785,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,795,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,808,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,809,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,810,                this.outlinePaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,811,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,815,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,816,                if (this.outlinePaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,817,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,820,            this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,821,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,823,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,833,        return this.foregroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,845,        if (this.foregroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,846,            this.foregroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,847,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,849,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,859,        return null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,881,"        this.listenerList.remove(PlotChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,882,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,892,            if (listeners[i] == PlotChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,893,                ((PlotChangeListener) listeners[i + 1]).plotChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,964,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,967,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,971,            GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,972,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,973,"                p = new GradientPaint((float) area.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,978,            else if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,979,"                p = new GradientPaint((float) area.getMinX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1006,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1007,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1009,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1012,"            Align.align(dest, area, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1013,"            g2.drawImage(this.backgroundImage, (int) dest.getX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1016,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1030,        if (!this.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1031,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1033,        if ((this.outlineStroke != null) && (this.outlinePaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1034,            g2.setStroke(this.outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1035,            g2.setPaint(this.outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1036,            g2.draw(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1038,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1047,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1048,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1049,        String message = this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1050,        if (message != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1051,            g2.setFont(this.noDataMessageFont);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1052,            g2.setPaint(this.noDataMessagePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1053,            TextBlock block = TextUtilities.createTextBlock(,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1057,"            block.draw(g2, (float) area.getCenterX(), (float) area.getCenterY(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1060,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1061,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1075,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1085,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1093,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1094,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1105,        PlotChangeEvent newEvent = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1106,        newEvent.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1107,        notifyListeners(newEvent);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1108,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1119,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1120,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1135,        double result = x;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1136,        if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1137,            result = result + w1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1139,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1140,            result = result + w2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1142,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1159,        double result = y;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1160,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1161,            result = result + h1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1163,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1164,            result = result + h2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1166,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1178,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1179,            return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1181,        if (!(obj instanceof Plot)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1182,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1184,        Plot that = (Plot) obj;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1185,"        if (!ObjectUtilities.equal(this.noDataMessage, that.noDataMessage)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1186,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1188,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1191,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1193,"        if (!PaintUtilities.equal(this.noDataMessagePaint, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1195,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1197,"        if (!ObjectUtilities.equal(this.insets, that.insets)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1198,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1200,        if (this.outlineVisible != that.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1201,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1203,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1204,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1206,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1207,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1209,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1210,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1212,"        if (!ObjectUtilities.equal(this.backgroundImage, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1214,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1216,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1217,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1219,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1220,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1222,        if (this.foregroundAlpha != that.foregroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1223,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1225,        if (this.backgroundAlpha != that.backgroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1226,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1228,        if (!this.drawingSupplier.equals(that.drawingSupplier)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1229,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1231,        return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1244,        Plot clone = (Plot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1247,        if (this.datasetGroup != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1248,            clone.datasetGroup ,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1251,        clone.drawingSupplier ,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1253,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1254,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1266,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1267,"        SerialUtilities.writePaint(this.noDataMessagePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1268,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1269,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1271,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1272,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1284,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1285,        this.noDataMessagePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1286,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1287,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1289,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1291,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1293,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1306,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1307,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1309,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1310,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1313,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1315,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1316,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1317,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1319,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1320,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1323,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1324,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1325,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1327,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1328,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1331,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1332,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1333,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1335,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1336,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1339,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1340,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1341,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1343,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1344,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1348,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1349,"            throw new IllegalStateException(""resolveDomainAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1351,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1366,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1367,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1369,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1370,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1373,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1375,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1376,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1377,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1379,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1380,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1383,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1384,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1385,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1387,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1388,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1391,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1392,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1393,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1395,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1396,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1399,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1400,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1401,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1403,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1404,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1409,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1410,"            throw new IllegalStateException(""resolveRangeAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,15,1412,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,15,72,        return this.info;,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,15,83,        EntityCollection result = null;,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,15,84,        if (this.info != null) {,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,15,85,            ChartRenderingInfo owner = this.info.getOwner();,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,15,86,            if (owner != null) {,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,15,87,                result = owner.getEntityCollection(); ,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,15,90,        return result;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,102,"        this(DEFAULT_SECTION_LABEL_FORMAT, locale);",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,103,    },0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,112,"        this(labelFormat, NumberFormat.getNumberInstance(), ",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,114,    },0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,125,"        this(labelFormat, NumberFormat.getNumberInstance(locale),",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,127,    },0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,154,        return (AttributedString) this.attributedLabels.get(section);    ,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,164,"        this.attributedLabels.set(section, label);",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,165,    },0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,176,"        return super.generateSectionLabel(dataset, key);",0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,208,        return getAttributedLabel(dataset.getIndex(key));,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,219,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,220,            return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,222,        if (!(obj instanceof StandardPieSectionLabelGenerator)) {,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,223,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,225,        StandardPieSectionLabelGenerator that ,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,227,        if (!this.attributedLabels.equals(that.attributedLabels)) {,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,228,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,230,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,231,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,233,        return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardPieSectionLabelGenerator,15,244,        return super.clone();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,85,"            throw new IllegalArgumentException(""Null 'labelFormat' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,88,"            throw new IllegalArgumentException(""Null 'numberFormat' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,91,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,107,        return this.labelFormat;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,116,        return this.numberFormat;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,125,        return this.percentFormat;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,145,        Object[] result = new Object[4];,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,146,        double total = DatasetUtilities.calculatePieDatasetTotal(dataset);,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,147,        result[0] = key.toString();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,148,        Number value = dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,149,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,150,            result[1] = this.numberFormat.format(value);  ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,153,"            result[1] = ""null"";",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,155,        double percent = 0.0;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,156,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,157,            double v = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,158,            if (v > 0.0) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,159,                percent = v / total; ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,162,        result[2] = this.percentFormat.format(percent);,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,163,        result[3] = this.numberFormat.format(total);,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,164,        return result;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,176,        String result = null;    ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,177,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,178,"            Object[] items = createItemArray(dataset, key);",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,179,"            result = MessageFormat.format(this.labelFormat, items);",0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,181,        return result;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,192,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,193,            return true;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,195,        if (!(obj instanceof AbstractPieItemLabelGenerator)) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,196,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,199,        AbstractPieItemLabelGenerator that ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,201,        if (!this.labelFormat.equals(that.labelFormat)) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,202,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,204,        if (!this.numberFormat.equals(that.numberFormat)) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,205,            return false;   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,207,        if (!this.percentFormat.equals(that.percentFormat)) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,208,            return false;   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,210,        return true;,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,222,        AbstractPieItemLabelGenerator clone ,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,224,        if (this.numberFormat != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,225,            clone.numberFormat = (NumberFormat) this.numberFormat.clone();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,227,        if (this.percentFormat != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,228,            clone.percentFormat = (NumberFormat) this.percentFormat.clone();,0.0,0,-1,0
org/jfree/chart/labels/AbstractPieItemLabelGenerator,15,230,        return clone;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,99,            return true;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,101,        if (!(obj instanceof HorizontalAlignment)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,102,            return false;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,104,        HorizontalAlignment that = (HorizontalAlignment) obj;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,105,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,106,            return false;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,108,        return true;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,117,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,128,        HorizontalAlignment result = null;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,129,        if (this.equals(HorizontalAlignment.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,130,            result = HorizontalAlignment.LEFT;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,132,        else if (this.equals(HorizontalAlignment.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,133,            result = HorizontalAlignment.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,135,        else if (this.equals(HorizontalAlignment.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,136,            result = HorizontalAlignment.CENTER;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,15,138,        return result;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,79,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,91,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,92,            return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,94,        if (!(obj instanceof UnitType)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,95,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,97,        UnitType that = (UnitType) obj;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,98,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,99,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,101,        return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,110,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,121,        if (this.equals(UnitType.ABSOLUTE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,122,            return UnitType.ABSOLUTE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,124,        else if (this.equals(UnitType.RELATIVE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,125,            return UnitType.RELATIVE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,15,127,        return null;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,109,        Object result = null;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,110,        if (index >= 0 && index < this.size) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,111,            result = this.objects[index];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,113,        return result;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,123,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,124,"            throw new IllegalArgumentException(""Requires index >= 0."");",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,126,        if (index >= this.objects.length) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,127,            Object[] enlarged = new Object[index + this.increment];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,128,"            System.arraycopy(this.objects, 0, enlarged, 0, this.objects.length);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,129,            this.objects = enlarged;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,131,        this.objects[index] = object;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,132,"        this.size = Math.max(this.size, index + 1);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,133,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,139,"        Arrays.fill(this.objects, null);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,140,        this.size = 0;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,141,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,149,        return this.size;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,161,        for (int index = 0; index < this.size; index++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,162,            if (this.objects[index] == object) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,163,                return (index);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,166,        return -1;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,178,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,179,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,182,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,183,            return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,186,        if (!(obj instanceof AbstractObjectList)) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,187,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,190,        AbstractObjectList other = (AbstractObjectList) obj;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,191,        int listSize = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,192,        for (int i = 0; i < listSize; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,193,"           if (!ObjectUtilities.equal(get(i), other.get(i))) {",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,194,               return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,197,        return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,206,    	int result = 127;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,207,    	int size = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,208,"    	result = HashUtilities.hashCode(result, size());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,211,        if (size > 0) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,212,"            result = HashUtilities.hashCode(result, this.objects[0]);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,213,            if (size > 1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,214,"                result = HashUtilities.hashCode(result, this.objects[size - 1]);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,215,                if (size > 2) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,216,"                    result = HashUtilities.hashCode(result, ",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,221,        return result;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,235,        AbstractObjectList clone = (AbstractObjectList) super.clone();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,236,        if (this.objects != null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,237,            clone.objects = new Object[this.objects.length];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,238,"            System.arraycopy(this.objects, 0, clone.objects, 0, ",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,241,        return clone;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,255,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,256,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,257,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,258,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,259,            final Object object = get(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,260,            if (object != null && object instanceof Serializable) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,261,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,262,                stream.writeObject(object);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,265,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,269,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,282,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,283,        this.objects = new Object[this.size];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,284,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,285,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,286,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,287,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,288,"                set(index, stream.readObject());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,15,292,    },0.0,0,-1,0
org/jfree/chart/util/Rotation,15,92,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,102,        return this.factor;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,114,        if (this == o) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,115,            return true;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,117,        if (!(o instanceof Rotation)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,118,            return false;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,121,        final Rotation rotation = (Rotation) o;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,123,        if (this.factor != rotation.factor) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,124,            return false;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,127,        return true;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,136,        final long temp = Double.doubleToLongBits(this.factor);,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,137,        return (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,148,        if (this.equals(Rotation.CLOCKWISE)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,149,            return Rotation.CLOCKWISE;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,151,        else if (this.equals(Rotation.ANTICLOCKWISE)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,152,            return Rotation.ANTICLOCKWISE;,0.0,0,-1,0
org/jfree/chart/util/Rotation,15,154,        return null;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,89,"        this(1.0, 1.0, 1.0, 1.0);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,90,    },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,118,"            throw new IllegalArgumentException(""Null 'unitType' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,134,        return this.unitType;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,143,        return this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,152,        return this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,161,        return this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,170,        return this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,182,            return true;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,185,                return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,189,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,194,        if (this.right != that.right) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,195,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,197,        if (this.top != that.top) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,198,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,200,        if (this.bottom != that.bottom) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,201,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,203,        return true;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,214,        result = (this.unitType != null ? this.unitType.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,215,        temp = this.top != +0.0d ? Double.doubleToLongBits(this.top) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,216,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,217,        temp = this.bottom != +0.0d ? Double.doubleToLongBits(this.bottom) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,218,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,219,        temp = this.left != +0.0d ? Double.doubleToLongBits(this.left) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,220,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,221,        temp = this.right != +0.0d ? Double.doubleToLongBits(this.right) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,222,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,223,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,233,"        return ""RectangleInsets[t="" + this.top + "",l="" + this.left",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,252,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,253,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,255,        double x = base.getX();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,256,        double y = base.getY();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,257,        double w = base.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,258,        double h = base.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,259,        if (horizontal == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,260,            double leftOutset = calculateLeftOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,261,            x = x - leftOutset;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,262,            w = w + leftOutset + calculateRightOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,263,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,264,        else if (horizontal == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,265,            double leftMargin = calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,266,            x = x + leftMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,267,            w = w - leftMargin - calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,269,        if (vertical == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,270,            double topMargin = calculateTopOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,271,            y = y - topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,272,            h = h + topMargin + calculateBottomOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,273,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,274,        else if (vertical == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,275,            double topMargin = calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,276,            y = y + topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,277,            h = h - topMargin - calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,279,"        return new Rectangle2D.Double(x, y, w, h);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,290,"        return createInsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,304,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,305,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,307,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,308,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,309,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,310,            topMargin = calculateTopInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,311,            bottomMargin = calculateBottomInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,313,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,314,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,315,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,316,            leftMargin = calculateLeftInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,317,            rightMargin = calculateRightInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,319,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,335,"        return createOutsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,350,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,351,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,353,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,354,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,355,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,356,            topMargin = calculateTopOutset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,357,            bottomMargin = calculateBottomOutset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,359,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,360,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,361,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,362,            leftMargin = calculateLeftOutset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,363,            rightMargin = calculateRightOutset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,365,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,383,            result = (this.top * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,398,            result = (height / (1 - this.top - this.bottom)) * this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,413,            result = (this.bottom * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,428,            result = (height / (1 - this.top - this.bottom)) * this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,443,            result = (this.left * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,458,            result = (width / (1 - this.left - this.right)) * this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,473,            result = (this.right * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,15,488,            result = (width / (1 - this.left - this.right)) * this.right;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,89,    private ObjectUtilities() {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,90,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,99,        return classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,113,        ObjectUtilities.classLoaderSource = classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,114,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,125,        if (o1 == o2) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,126,            return true;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,128,        if (o1 != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,129,            return o1.equals(o2);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,132,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,145,        int result = 0;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,146,        if (object != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,147,            result = object.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,149,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,162,        if (object == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,163,"            throw new IllegalArgumentException(""Null 'object' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,165,        if (object instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,166,            final PublicCloneable pc = (PublicCloneable) object;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,167,            return pc.clone();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,171,"                final Method method = object.getClass().getMethod(""clone"",",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,173,                if (Modifier.isPublic(method.getModifiers())) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,174,"                    return method.invoke(object, (Object[]) null);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,185,            },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,177,            catch (NoSuchMethodException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,178,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,180,            catch (IllegalAccessException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,181,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,183,            catch (InvocationTargetException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,184,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,187,"        throw new CloneNotSupportedException(""Failed to clone."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,203,        if (collection == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,204,"            throw new IllegalArgumentException(""Null 'collection' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,209,        final Collection result,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,211,        result.clear();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,212,        final Iterator iterator = collection.iterator();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,213,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,214,            final Object item = iterator.next();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,215,            if (item != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,216,                result.add(clone(item));,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,219,                result.add(null);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,221,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,222,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,232,        ObjectUtilities.classLoader = classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,233,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,241,      return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,256,            return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,267,        final ClassLoader applicationCL = c.getClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,268,        if (applicationCL == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,269,            return ClassLoader.getSystemClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,272,            return applicationCL;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,285,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,286,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,287,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,289,        return cl.getResource(name);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,300,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,301,"        final String cname = convertName(name, c);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,302,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,303,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,305,        return cl.getResource(cname);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,319,"        if (name.startsWith(""/"")) {",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,321,            return name.substring(1);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,325,        while (c.isArray()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,326,            c = c.getComponentType();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,329,        final String baseName = c.getName();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,330,        final int index = baseName.lastIndexOf('.');,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,331,        if (index == -1) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,332,            return name;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,335,"        final String pkgName = baseName.substring(0, index);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,336,"        return pkgName.replace('.', '/') + ""/"" + name;",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,349,"        final URL url = getResource(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,350,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,351,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,355,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,357,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,358,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,372,"        final URL url = getResourceRelative(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,373,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,374,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,378,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,380,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,381,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,396,            final ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,397,            final Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,398,            return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,400,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,401,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,421,            ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,422,            Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,423,            if (type.isAssignableFrom(c)) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,424,                return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,429,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,427,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,428,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,430,        return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,445,            catch (ClassNotFoundException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,446,              return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,448,            catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,455,            String version = System.getProperty(,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,458,            if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,459,                return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,462,            String[] versions = parseVersions(version);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,463,"            String[] target = new String[]{ ""1"", ""4"" };",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,464,"            return (ArrayUtilities.compareVersionArrays(versions, target) >= 0);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,466,        catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,467,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,472,      if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,473,        return new String[0];,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,476,      ArrayList versions = new ArrayList();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,477,"      StringTokenizer strtok = new StringTokenizer(version, ""."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,478,      while (strtok.hasMoreTokens()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,479,          versions.add (strtok.nextToken());,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,15,481,      return (String[]) versions.toArray(new String[versions.size()]);,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,90,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,103,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,104,            return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,106,        if (!(obj instanceof RectangleEdge)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,107,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,110,        RectangleEdge order = (RectangleEdge) obj;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,111,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,112,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,115,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,125,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,149,        return (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT);    ,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,160,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,161,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,162,            result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,164,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,165,            result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,167,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,168,            result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,170,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,171,            result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,173,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,186,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,187,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,188,            result = rectangle.getMinY();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,190,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,191,            result = rectangle.getMaxY();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,193,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,194,            result = rectangle.getMinX();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,196,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,197,            result = rectangle.getMaxX();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,199,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,210,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,211,        if (this.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,212,            result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,214,        else if (this.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,215,            result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,217,        else if (this.equals(RectangleEdge.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,218,            result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,220,        else if (this.equals(RectangleEdge.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,221,            result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,15,223,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,116,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,129,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,130,            return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,132,        if (!(obj instanceof RectangleAnchor)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,133,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,136,        final RectangleAnchor order = (RectangleAnchor) obj;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,137,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,138,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,141,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,150,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,163,        Point2D result = new Point2D.Double();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,164,        if (anchor == RectangleAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,165,"            result.setLocation(rectangle.getCenterX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,167,        else if (anchor == RectangleAnchor.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,168,"            result.setLocation(rectangle.getCenterX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,170,        else if (anchor == RectangleAnchor.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,171,"            result.setLocation(rectangle.getCenterX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,173,        else if (anchor == RectangleAnchor.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,174,"            result.setLocation(rectangle.getMinX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,176,        else if (anchor == RectangleAnchor.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,177,"            result.setLocation(rectangle.getMaxX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,179,        else if (anchor == RectangleAnchor.TOP_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,180,"            result.setLocation(rectangle.getMinX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,182,        else if (anchor == RectangleAnchor.TOP_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,183,"            result.setLocation(rectangle.getMaxX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,185,        else if (anchor == RectangleAnchor.BOTTOM_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,186,"            result.setLocation(rectangle.getMinX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,188,        else if (anchor == RectangleAnchor.BOTTOM_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,189,"            result.setLocation(rectangle.getMaxX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,191,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,209,        Rectangle2D result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,210,        final double w = dimensions.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,211,        final double h = dimensions.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,212,        if (anchor == RectangleAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,213,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,217,        else if (anchor == RectangleAnchor.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,218,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,222,        else if (anchor == RectangleAnchor.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,223,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,227,        else if (anchor == RectangleAnchor.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,228,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,232,        else if (anchor == RectangleAnchor.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,233,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,237,        else if (anchor == RectangleAnchor.TOP_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,238,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,242,        else if (anchor == RectangleAnchor.TOP_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,243,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,247,        else if (anchor == RectangleAnchor.BOTTOM_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,248,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,252,        else if (anchor == RectangleAnchor.BOTTOM_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,253,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,257,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,268,        RectangleAnchor result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,269,        if (this.equals(RectangleAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,270,            result = RectangleAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,272,        else if (this.equals(RectangleAnchor.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,273,            result = RectangleAnchor.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,275,        else if (this.equals(RectangleAnchor.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,276,            result = RectangleAnchor.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,278,        else if (this.equals(RectangleAnchor.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,279,            result = RectangleAnchor.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,281,        else if (this.equals(RectangleAnchor.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,282,            result = RectangleAnchor.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,284,        else if (this.equals(RectangleAnchor.TOP_LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,285,            result = RectangleAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,287,        else if (this.equals(RectangleAnchor.TOP_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,288,            result = RectangleAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,290,        else if (this.equals(RectangleAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,291,            result = RectangleAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,293,        else if (this.equals(RectangleAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,294,            result = RectangleAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,15,296,        return result;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,101,        this.width = width;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,102,    },0.0,0,-1,0
org/jfree/chart/util/Size2D,15,119,        this.height = height;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,120,    },0.0,0,-1,0
org/jfree/chart/util/Size2D,15,129,"        return ""Size2D[width="" + this.width + "", height="" + this.height + ""]"";   ",0.0,0,-1,0
org/jfree/chart/util/Size2D,15,140,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,141,            return true;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,143,        if (!(obj instanceof Size2D)) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,144,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,146,        final Size2D that = (Size2D) obj;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,147,        if (this.width != that.width) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,148,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,150,        if (this.height != that.height) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,151,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,153,        return true;,0.0,0,-1,0
org/jfree/chart/util/Size2D,15,164,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,99,            return true;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,101,        if (!(obj instanceof VerticalAlignment)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,102,            return false;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,105,        VerticalAlignment alignment = (VerticalAlignment) obj;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,106,        if (!this.name.equals(alignment.name)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,107,            return false;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,109,        return true;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,118,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,129,        if (this.equals(VerticalAlignment.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,130,            return VerticalAlignment.TOP;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,132,        else if (this.equals(VerticalAlignment.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,133,            return VerticalAlignment.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,135,        else if (this.equals(VerticalAlignment.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,136,            return VerticalAlignment.CENTER;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,15,139,            return null;  // this should never happen,0.0,0,-1,0
org/jfree/chart/util/ObjectList,15,67,        super(initialCapacity);,0.0,0,-1,0
org/jfree/chart/util/ObjectList,15,68,    },0.0,0,-1,0
org/jfree/chart/util/ObjectList,15,85,        return super.get(index);         ,0.0,0,-1,0
org/jfree/chart/util/ObjectList,15,95,"        super.set(index, object);        ",0.0,0,-1,0
org/jfree/chart/util/ObjectList,15,96,    }    ,0.0,0,-1,0
org/jfree/chart/util/ObjectList,15,107,        return super.indexOf(object);    ,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,90,"        super(name, version, info, copyright, licenceName);",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,91,        this.logo = logo;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,92,        this.licenceText = licenceText;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,94,    },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,102,        return this.logo;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,120,        return this.licenceText;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,138,        return this.contributors;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,157,        final StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,158,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,159,"        result.append("" version "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,160,        result.append(getVersion());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,161,"        result.append("".\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,162,        result.append(getCopyright());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,163,"        result.append("".\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,164,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,165,"        result.append(""For terms of use, see the licence below.\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,166,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,167,"        result.append(""FURTHER INFORMATION:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,168,        result.append(getInfo());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,169,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,170,"        result.append(""CONTRIBUTORS:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,171,        if (this.contributors != null) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,172,            final Iterator iterator = this.contributors.iterator();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,173,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,174,                final Contributor contributor = (Contributor) iterator.next();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,175,                result.append(contributor.getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,176,"                result.append("" ("");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,177,                result.append(contributor.getEmail());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,178,"                result.append("")."");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,179,            },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,180,        },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,182,"            result.append(""None"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,185,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,186,"        result.append(""OTHER LIBRARIES USED BY "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,187,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,188,"        result.append("":"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,189,        final Library[] libraries = getLibraries();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,190,        if (libraries.length != 0) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,191,            for (int i = 0; i < libraries.length; i++) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,192,                final Library lib = libraries[i];,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,193,                result.append(lib.getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,194,"                result.append("" "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,195,                result.append(lib.getVersion());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,196,"                result.append("" ("");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,197,                result.append(lib.getInfo());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,198,"                result.append("")."");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,202,"            result.append(""None"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,204,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,205,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,206,"        result.append("" LICENCE TERMS:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,207,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,208,        result.append(getLicenceText());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,15,210,        return result.toString();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,160,        this();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,161,        setName(name);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,162,        setVersion(version);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,163,        setLicenceName(licence);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,164,        setInfo(info);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,165,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,179,"        this(name, version, licenceName, info);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,180,        setCopyright(copyright);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,181,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,189,        return this.copyright;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,243,        return (Library[]) this.libraries.toArray,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,253,        if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,254,            throw new NullPointerException();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,256,        this.libraries.add(library);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,257,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,265,        ArrayList libraries = new ArrayList();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,266,        for (int i = 0; i < this.optionalLibraries.size(); i++) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,267,          OptionalLibraryHolder holder =,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,269,          Library l = holder.getLibrary();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,270,          if (l != null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,271,              libraries.add(l);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,274,        return (Library[]) libraries.toArray(new Library[libraries.size()]);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,283,        if (libraryClass == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,284,"            throw new NullPointerException(""Library classname must be given."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,286,        this.optionalLibraries.add,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,288,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,299,      if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,300,"          throw new NullPointerException(""Library must be given."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,302,      this.optionalLibraries.add(new OptionalLibraryHolder(library));,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,303,  },0.0,0,-1,0
org/jfree/chart/ui/Library,15,71,"    public Library(String name, String version, String licence, String info) {",0.0,0,-1,0
org/jfree/chart/ui/Library,15,73,        this.name = name;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,74,        this.version = version;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,75,        this.licenceName = licence;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,76,        this.info = info;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,77,    },0.0,0,-1,0
org/jfree/chart/ui/Library,15,92,        return this.name;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,101,        return this.version;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,110,        return this.licenceName;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,119,        return this.info;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,159,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/ui/Library,15,160,            return true;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,162,        if (obj == null || getClass() != obj.getClass()) {,0.0,0,-1,0
org/jfree/chart/ui/Library,15,163,            return false;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,166,        Library library = (Library) obj;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,168,        if (this.name != null ? !this.name.equals(library.name) ,0.0,0,-1,0
org/jfree/chart/ui/Library,15,170,            return false;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,173,        return true;,0.0,0,-1,0
org/jfree/chart/ui/Library,15,177,      return (this.name != null ? this.name.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,67,        public OptionalLibraryHolder(String libraryClass) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,68,            if (libraryClass == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,69,                throw new NullPointerException(,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,72,            this.libraryClass = libraryClass;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,73,        },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,80,        public OptionalLibraryHolder(Library library) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,81,          if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,82,"              throw new NullPointerException(""Library must not be null."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,84,          this.library = library;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,85,          this.libraryClass = library.getClass().getName();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,86,        },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,94,            return this.libraryClass;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,103,            if (this.library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,104,                this.library = loadLibrary(this.libraryClass);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,106,            return this.library;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,110,            if (classname == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,111,                return null;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,114,                Class c = ObjectUtilities.getClassLoader(,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,117,"                    Method m = c.getMethod(""getInstance"", (Class[]) null);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,118,"                    return (Library) m.invoke(null, (Object[]) null);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,120,                catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,123,                return (Library) c.newInstance();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,125,            catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,15,128,                return null;,0.0,0,-1,0
org/jfree/chart/ui/Licences,15,812,        return GPL;,0.0,0,-1,0
org/jfree/chart/ui/Contributor,15,74,        return this.name;,0.0,0,-1,0
org/jfree/chart/ui/Contributor,15,83,        return this.email;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,499,"        this(null, null, null, null);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,500,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,518,        super();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,343,"    private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,346,    private transient Paint[] quadrantPaint,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,417,    private boolean domainCrosshairLockedOnData = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,435,    private boolean rangeCrosshairLockedOnData = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,472,    private DatasetRenderingOrder datasetRenderingOrder,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,479,    private SeriesRenderingOrder seriesRenderingOrder,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,520,        this.orientation = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,521,        this.weight = 1;  // only relevant when this is a subplot,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,522,"        this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,525,        this.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,526,        this.domainAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,527,        this.foregroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,528,        this.backgroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,530,        this.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,531,        this.rangeAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,532,        this.foregroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,533,        this.backgroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,535,        this.datasets = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,536,        this.renderers = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,538,        this.datasetToDomainAxisMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,539,        this.datasetToRangeAxisMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,541,"        this.datasets.set(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,542,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,543,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,546,"        this.renderers.set(0, renderer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,547,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,548,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,549,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,552,"        this.domainAxes.set(0, domainAxis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,553,"        this.mapDatasetToDomainAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,554,        if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,555,            domainAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,556,            domainAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,558,"        this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,560,"        this.rangeAxes.set(0, rangeAxis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,561,"        this.mapDatasetToRangeAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,562,        if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,563,            rangeAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,564,            rangeAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,566,"        this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,568,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,569,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,571,        this.domainGridlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,572,        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,573,        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,575,        this.domainZeroBaselineVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,576,        this.domainZeroBaselinePaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,577,        this.domainZeroBaselineStroke = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,579,        this.rangeGridlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,580,        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,581,        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,583,        this.rangeZeroBaselineVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,584,        this.rangeZeroBaselinePaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,585,        this.rangeZeroBaselineStroke = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,587,        this.domainCrosshairVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,588,        this.domainCrosshairValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,589,        this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,590,        this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,592,        this.rangeCrosshairVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,593,        this.rangeCrosshairValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,594,        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,595,        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,597,        this.annotations = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,599,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,282,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,287,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,293,    public static final Stroke DEFAULT_CROSSHAIR_STROKE,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,297,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,300,    protected static ResourceBundle localizationResources ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,607,"        return localizationResources.getString(""XY_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,618,        return this.orientation;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,630,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,631,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,633,        if (orientation != this.orientation) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,634,            this.orientation = orientation;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,635,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,637,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,647,        return this.axisOffset;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,659,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,660,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,662,        this.axisOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,663,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,664,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,677,        return getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,690,        ValueAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,691,        if (index < this.domainAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,692,            result = (ValueAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,694,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,695,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,696,            if (parent instanceof XYPlot) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,697,                XYPlot xy = (XYPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,698,                result = xy.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,701,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,714,"        setDomainAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,715,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,728,"        setDomainAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,729,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,742,        ValueAxis existing = getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,743,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,744,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,746,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,747,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,749,"        this.domainAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,750,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,751,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,752,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,754,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,755,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,757,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,768,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,769,"            setDomainAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,771,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,772,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,782,        return (AxisLocation) this.domainAxisLocations.get(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,795,"        setDomainAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,796,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,809,"        setDomainAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,810,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,822,"        return Plot.resolveDomainAxisLocation(getDomainAxisLocation(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,834,        return this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,844,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,845,            ValueAxis axis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,846,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,847,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,850,        this.domainAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,851,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,852,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,858,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,859,            ValueAxis axis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,860,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,861,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,864,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,878,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,879,        if (index < this.domainAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,880,            result = (AxisLocation) this.domainAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,882,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,883,            result = AxisLocation.getOpposite(getDomainAxisLocation());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,885,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,900,"        setDomainAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,901,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,920,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,921,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,924,"        this.domainAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,925,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,926,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,928,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,940,        AxisLocation location = getDomainAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,941,"        RectangleEdge result = Plot.resolveDomainAxisLocation(location, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,943,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,944,            result = RectangleEdge.opposite(getDomainAxisEdge());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,946,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,960,        return getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,974,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,975,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,979,        ValueAxis existing = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,980,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,981,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,984,"        this.rangeAxes.set(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,985,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,986,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,987,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,989,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,991,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1001,        return (AxisLocation) this.rangeAxisLocations.get(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1014,"        setRangeAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1015,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1028,"        setRangeAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1029,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1040,"        return Plot.resolveRangeAxisLocation(getRangeAxisLocation(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1054,        ValueAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1055,        if (index < this.rangeAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1056,            result = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1058,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1059,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1060,            if (parent instanceof XYPlot) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1061,                XYPlot xy = (XYPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1062,                result = xy.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1065,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1078,"        setRangeAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1079,    } ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1092,        ValueAxis existing = getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1093,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1094,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1096,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1097,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1099,"        this.rangeAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1100,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1101,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1102,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1104,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1105,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1107,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1118,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1119,"            setRangeAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1121,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1122,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1132,        return this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1142,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1143,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1144,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1145,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1148,        this.rangeAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1149,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1150,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1158,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1159,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1160,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1161,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1164,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1178,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1179,        if (index < this.rangeAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1180,            result = (AxisLocation) this.rangeAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1182,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1183,            result = AxisLocation.getOpposite(getRangeAxisLocation());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1185,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1199,"        setRangeAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1200,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1219,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1220,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1223,"        this.rangeAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1224,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1225,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1227,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1240,        AxisLocation location = getRangeAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1241,"        RectangleEdge result = Plot.resolveRangeAxisLocation(location, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1243,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1244,            result = RectangleEdge.opposite(getRangeAxisEdge());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1246,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1258,        return getDataset(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1271,        XYDataset result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1272,        if (this.datasets.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1273,            result = (XYDataset) this.datasets.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1275,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1288,"        setDataset(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1289,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1300,        XYDataset existing = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1301,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1302,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1304,"        this.datasets.set(index, dataset);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1305,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1306,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1310,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1311,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1312,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1320,        return this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1332,        int result = -1;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1333,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1334,            if (dataset == this.datasets.get(i)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1335,                result = i;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1336,                break;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1339,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1352,"        this.datasetToDomainAxisMap.put(new Integer(index), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1355,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1356,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1368,"        this.datasetToRangeAxisMap.put(new Integer(index), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1371,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1372,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1382,        return getRenderer(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1395,        XYItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1396,        if (this.renderers.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1397,            result = (XYItemRenderer) this.renderers.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1399,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1413,"        setRenderer(0, renderer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1414,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1426,"        setRenderer(index, renderer, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1427,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1441,        XYItemRenderer existing = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1442,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1443,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1445,"        this.renderers.set(index, renderer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1446,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1447,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1448,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1450,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1451,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1452,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1453,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1455,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1464,        for (int i = 0; i < renderers.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1465,"            setRenderer(i, renderers[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1467,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1468,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1478,        return this.datasetRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1492,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1493,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1495,        this.datasetRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1496,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1497,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1507,        return this.seriesRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1521,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1522,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1524,        this.seriesRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1525,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1526,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1537,        return this.renderers.indexOf(renderer);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1550,        XYItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1551,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1552,            if (this.datasets.get(i) == dataset) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1553,                result = (XYItemRenderer) this.renderers.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1554,                if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1555,                    result = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1560,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1572,        return this.weight;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1584,        this.weight = weight;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1585,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1586,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1597,        return this.domainGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1612,        if (this.domainGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1613,            this.domainGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1614,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1616,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1627,        return this.domainGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1644,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1645,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1647,        this.domainGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1648,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1649,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1660,        return this.domainGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1675,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1676,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1678,        this.domainGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1679,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1680,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1691,        return this.rangeGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1706,        if (this.rangeGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1707,            this.rangeGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1708,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1710,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1721,        return this.rangeGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1733,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1734,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1736,        this.rangeGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1737,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1738,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1749,        return this.rangeGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1761,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1762,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1764,        this.rangeGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1765,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1766,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1779,        return this.domainZeroBaselineVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1794,        this.domainZeroBaselineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1795,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1796,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1808,        return this.domainZeroBaselineStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1822,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1823,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1825,        this.domainZeroBaselineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1826,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1827,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1840,        return this.domainZeroBaselinePaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1854,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1855,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1857,        this.domainZeroBaselinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1858,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1859,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1870,        return this.rangeZeroBaselineVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1883,        this.rangeZeroBaselineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1884,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1885,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1895,        return this.rangeZeroBaselineStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1907,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1908,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1910,        this.rangeZeroBaselineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1911,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1912,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1923,        return this.rangeZeroBaselinePaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1935,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1936,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1938,        this.rangeZeroBaselinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1939,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1940,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1951,        return this.domainTickBandPaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1962,        this.domainTickBandPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1963,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1964,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1975,        return this.rangeTickBandPaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1986,        this.rangeTickBandPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1987,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1988,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,1999,        return this.quadrantOrigin;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2011,        if (origin == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2012,"            throw new IllegalArgumentException(""Null 'origin' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2014,        this.quadrantOrigin = origin;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2015,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2016,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2028,        if (index < 0 || index > 3) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2029,"            throw new IllegalArgumentException(""The index value ("" + index ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2032,        return this.quadrantPaint[index];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2045,        if (index < 0 || index > 3) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2046,"            throw new IllegalArgumentException(""The index value ("" + index ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2049,        this.quadrantPaint[index] = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2050,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2051,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2067,"        addDomainMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2068,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2083,"        addDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2084,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2093,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2094,            Set keys = this.backgroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2095,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2096,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2097,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2098,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2099,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2100,            this.backgroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2102,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2103,            Set keys = this.foregroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2104,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2105,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2106,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2107,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2108,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2109,            this.foregroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2111,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2112,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2123,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2124,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2125,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2127,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2128,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2129,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2130,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2131,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2132,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2133,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2136,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2137,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2139,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2140,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2141,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2142,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2143,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2144,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2145,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2148,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2149,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2167,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2168,"            throw new IllegalArgumentException(""Null 'marker' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2170,        if (layer == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2171,"            throw new IllegalArgumentException(""Null 'layer' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2174,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2175,            markers = (Collection) this.foregroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2177,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2178,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2179,"                this.foregroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2181,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2183,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2184,            markers = (Collection) this.backgroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2186,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2187,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2188,"                this.backgroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2190,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2192,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2193,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2194,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2208,"        return removeDomainMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2224,"        return removeDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2242,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2243,            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2247,            markers = (ArrayList)this.backgroundDomainMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2250,        boolean removed = markers.remove(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2251,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2252,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2254,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2269,"        addRangeMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2270,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2285,"        addRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2286,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2295,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2296,            Set keys = this.backgroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2297,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2298,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2299,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2300,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2301,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2302,            this.backgroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2304,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2305,            Set keys = this.foregroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2306,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2307,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2308,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2309,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2310,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2311,            this.foregroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2313,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2314,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2332,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2333,            markers = (Collection) this.foregroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2335,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2336,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2337,"                this.foregroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2339,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2341,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2342,            markers = (Collection) this.backgroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2344,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2345,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2346,"                this.backgroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2348,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2350,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2351,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2352,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2361,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2362,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2363,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2365,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2366,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2367,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2368,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2369,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2370,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2371,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2374,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2375,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2377,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2378,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2379,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2380,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2381,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2382,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2383,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2386,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2387,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2401,"        return removeRangeMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2417,"        return removeRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2434,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2435,"            throw new IllegalArgumentException(""Null 'marker' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2438,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2439,            markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2443,            markers = (ArrayList)this.backgroundRangeMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2447,        boolean removed = markers.remove(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2448,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2449,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2451,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2464,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2465,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2467,        this.annotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2468,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2469,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2483,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2484,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2486,        boolean removed = this.annotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2487,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2488,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2490,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2503,        return new ArrayList(this.annotations);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2513,        this.annotations.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2514,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2515,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2527,        AxisSpace space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2528,"        space = calculateDomainAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2529,"        space = calculateRangeAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2530,        return space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2546,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2547,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2551,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2552,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2553,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getLeft(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2555,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2558,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2559,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2561,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2567,            for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2568,                Axis axis = (Axis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2569,                if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2570,                    RectangleEdge edge = getDomainAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2571,"                    space = axis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2576,        return space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2593,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2594,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2598,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2599,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2600,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2602,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2605,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2606,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2608,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2614,            for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2615,                Axis axis = (Axis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2616,                if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2617,                    RectangleEdge edge = getRangeAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2618,"                    space = axis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2622,        return space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2645,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2646,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2647,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2648,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2652,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2653,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2657,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2658,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2660,"        AxisSpace space = calculateAxisSpace(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2661,"        Rectangle2D dataArea = space.shrink(area, null);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2662,        this.axisOffset.trim(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2664,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2665,            info.setDataArea(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2669,"        drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2670,"        Map axisStateMap = drawAxes(g2, area, dataArea, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2672,        PlotOrientation orient = getOrientation();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2676,        if (anchor != null && !dataArea.contains(anchor)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2677,            anchor = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2679,        CrosshairState crosshairState = new CrosshairState();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2680,        crosshairState.setCrosshairDistance(Double.POSITIVE_INFINITY);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2681,        crosshairState.setAnchor(anchor);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2683,        crosshairState.setAnchorX(Double.NaN);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2684,        crosshairState.setAnchorY(Double.NaN);            ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2685,        if (anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2686,            ValueAxis domainAxis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2687,            if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2689,                if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2690,"                    x = domainAxis.java2DToValue(anchor.getX(), dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2694,"                    x = domainAxis.java2DToValue(anchor.getY(), dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2697,                crosshairState.setAnchorX(x);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2699,            ValueAxis rangeAxis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2700,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2702,                if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2703,"                    y = rangeAxis.java2DToValue(anchor.getY(), dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2707,"                    y = rangeAxis.java2DToValue(anchor.getX(), dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2710,                crosshairState.setAnchorY(y);                ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2713,        crosshairState.setCrosshairX(getDomainCrosshairValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2714,        crosshairState.setCrosshairY(getRangeCrosshairValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2715,        Shape originalClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2716,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2718,        g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2719,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2722,        AxisState domainAxisState = (AxisState) axisStateMap.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2724,        if (domainAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2725,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2726,                domainAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2731,        AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2732,        if (rangeAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2733,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2734,                rangeAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2738,        if (domainAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2739,"            drawDomainTickBands(g2, dataArea, domainAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2741,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2742,"            drawRangeTickBands(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2744,        if (domainAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2745,"            drawDomainGridlines(g2, dataArea, domainAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2746,"            drawZeroDomainBaseline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2748,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2749,"            drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2750,"            drawZeroRangeBaseline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2754,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2755,"            drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2757,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2758,"            drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2762,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2763,        DatasetRenderingOrder order = getDatasetRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2764,        if (order == DatasetRenderingOrder.FORWARD) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2767,            int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2768,            for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2769,                XYItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2770,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2771,                    ValueAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2772,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2773,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2779,            for (int i = 0; i < getDatasetCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2780,"                foundData = render(g2, dataArea, i, info, crosshairState)",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2785,            for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2786,                XYItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2787,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2788,                    ValueAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2789,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2790,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2795,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2796,        else if (order == DatasetRenderingOrder.REVERSE) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2799,            int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2800,            for (int i = rendererCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2801,                XYItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2802,                if (i >= getDatasetCount()) { // we need the dataset to make,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2803,                    continue;                 // a link to the axes,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2805,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2806,                    ValueAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2807,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2808,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2813,            for (int i = getDatasetCount() - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2814,"                foundData = render(g2, dataArea, i, info, crosshairState)",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2819,            for (int i = rendererCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2820,                XYItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2821,                if (i >= getDatasetCount()) { // we need the dataset to make,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2822,                    continue;                 // a link to the axes,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2824,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2825,                    ValueAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2826,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2827,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2835,        int xAxisIndex = crosshairState.getDomainAxisIndex();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2836,        ValueAxis xAxis = getDomainAxis(xAxisIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2837,        RectangleEdge xAxisEdge = getDomainAxisEdge(xAxisIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2838,        if (!this.domainCrosshairLockedOnData && anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2840,            if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2841,"                xx = xAxis.java2DToValue(anchor.getX(), dataArea, xAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2844,"                xx = xAxis.java2DToValue(anchor.getY(), dataArea, xAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2846,            crosshairState.setCrosshairX(xx);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2848,"        setDomainCrosshairValue(crosshairState.getCrosshairX(), false);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2849,        if (isDomainCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2850,            double x = getDomainCrosshairValue();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2851,            Paint paint = getDomainCrosshairPaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2852,            Stroke stroke = getDomainCrosshairStroke();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2853,"            drawDomainCrosshair(g2, dataArea, orient, x, xAxis, stroke, paint);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2857,        int yAxisIndex = crosshairState.getRangeAxisIndex();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2858,        ValueAxis yAxis = getRangeAxis(yAxisIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2859,        RectangleEdge yAxisEdge = getRangeAxisEdge(yAxisIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2860,        if (!this.rangeCrosshairLockedOnData && anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2862,            if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2863,"                yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2865,"                yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2867,            crosshairState.setCrosshairY(yy);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2869,"        setRangeCrosshairValue(crosshairState.getCrosshairY(), false);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2870,        if (isRangeCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2871,            double y = getRangeCrosshairValue();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2872,            Paint paint = getRangeCrosshairPaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2873,            Stroke stroke = getRangeCrosshairStroke();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2874,"            drawRangeCrosshair(g2, dataArea, orient, y, yAxis, stroke, paint);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2877,        if (!foundData) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2878,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2881,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2882,"            drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2884,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2885,"            drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2888,"        drawAnnotations(g2, dataArea, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2889,        g2.setClip(originalClip);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2890,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2892,"        drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2894,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2903,"        fillBackground(g2, area, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2904,"        drawQuadrants(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2905,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2906,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2921,        boolean somethingToDraw = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2923,        ValueAxis xAxis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2924,        double x = this.quadrantOrigin.getX();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2925,"        double xx = xAxis.valueToJava2D(x, area, getDomainAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2927,        ValueAxis yAxis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2928,        double y = this.quadrantOrigin.getY();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2929,"        double yy = yAxis.valueToJava2D(y, area, getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2931,        double xmin = xAxis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2932,"        double xxmin = xAxis.valueToJava2D(xmin, area, getDomainAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2934,        double xmax = xAxis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2935,"        double xxmax = xAxis.valueToJava2D(xmax, area, getDomainAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2937,        double ymin = yAxis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2938,"        double yymin = yAxis.valueToJava2D(ymin, area, getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2940,        double ymax = yAxis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2941,"        double yymax = yAxis.valueToJava2D(ymax, area, getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2943,"        Rectangle2D[] r = new Rectangle2D[] {null, null, null, null};",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2944,        if (this.quadrantPaint[0] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2945,            if (x > xmin && y < ymax) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2946,                if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2947,"                    r[0] = new Rectangle2D.Double(Math.min(yymax, yy), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2953,"                    r[0] = new Rectangle2D.Double(Math.min(xxmin, xx), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2957,                somethingToDraw = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2960,        if (this.quadrantPaint[1] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2961,            if (x < xmax && y < ymax) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2962,                if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2963,"                    r[1] = new Rectangle2D.Double(Math.min(yymax, yy), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2968,"                    r[1] = new Rectangle2D.Double(Math.min(xx, xxmax), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2972,                somethingToDraw = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2975,        if (this.quadrantPaint[2] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2976,            if (x > xmin && y > ymin) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2977,                if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2978,"                    r[2] = new Rectangle2D.Double(Math.min(yymin, yy), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2983,"                    r[2] = new Rectangle2D.Double(Math.min(xxmin, xx), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2987,                somethingToDraw = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2990,        if (this.quadrantPaint[3] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2991,            if (x < xmax && y > ymin) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2992,                if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2993,"                    r[3] = new Rectangle2D.Double(Math.min(yymin, yy), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,2998,"                    r[3] = new Rectangle2D.Double(Math.min(xx, xxmax), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3002,                somethingToDraw = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3005,        if (somethingToDraw) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3006,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3007,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3009,            for (int i = 0; i < 4; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3010,                if (this.quadrantPaint[i] != null && r[i] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3011,                    g2.setPaint(this.quadrantPaint[i]);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3012,                    g2.fill(r[i]);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3015,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3017,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3030,        Paint bandPaint = getDomainTickBandPaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3031,        if (bandPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3032,            boolean fillBand = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3033,            ValueAxis xAxis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3034,            double previous = xAxis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3035,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3036,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3037,                ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3038,                double current = tick.getValue();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3039,                if (fillBand) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3040,"                    getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3043,                previous = current;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3044,                fillBand = !fillBand;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3045,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3046,            double end = xAxis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3047,            if (fillBand) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3048,"                getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3052,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3065,        Paint bandPaint = getRangeTickBandPaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3066,        if (bandPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3067,            boolean fillBand = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3068,            ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3069,            double previous = axis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3070,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3071,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3072,                ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3073,                double current = tick.getValue();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3074,                if (fillBand) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3075,"                    getRenderer().fillRangeGridBand(g2, this, axis, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3078,                previous = current;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3079,                fillBand = !fillBand;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3080,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3081,            double end = axis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3082,            if (fillBand) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3083,"                getRenderer().fillRangeGridBand(g2, this, axis, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3087,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3105,        AxisCollection axisCollection = new AxisCollection();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3108,        for (int index = 0; index < this.domainAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3109,            ValueAxis axis = (ValueAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3110,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3111,"                axisCollection.add(axis, getDomainAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3116,        for (int index = 0; index < this.rangeAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3117,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3118,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3119,"                axisCollection.add(yAxis, getRangeAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3123,        Map axisStateMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3126,        double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3128,        Iterator iterator = axisCollection.getAxesAtTop().iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3129,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3130,            ValueAxis axis = (ValueAxis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3131,"            AxisState info = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3133,            cursor = info.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3134,"            axisStateMap.put(axis, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3135,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3138,        cursor = dataArea.getMaxY(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3140,        iterator = axisCollection.getAxesAtBottom().iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3141,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3142,            ValueAxis axis = (ValueAxis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3143,"            AxisState info = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3145,            cursor = info.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3146,"            axisStateMap.put(axis, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3147,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3150,        cursor = dataArea.getMinX(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3152,        iterator = axisCollection.getAxesAtLeft().iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3153,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3154,            ValueAxis axis = (ValueAxis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3155,"            AxisState info = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3157,            cursor = info.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3158,"            axisStateMap.put(axis, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3159,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3162,        cursor = dataArea.getMaxX(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3164,        iterator = axisCollection.getAxesAtRight().iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3165,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3166,            ValueAxis axis = (ValueAxis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3167,"            AxisState info = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3169,            cursor = info.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3170,"            axisStateMap.put(axis, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3171,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3173,        return axisStateMap;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3198,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3199,        XYDataset dataset = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3200,        if (!DatasetUtilities.isEmptyOrNull(dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3201,            foundData = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3202,            ValueAxis xAxis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3203,            ValueAxis yAxis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3204,            XYItemRenderer renderer = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3205,            if (renderer == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3206,                renderer = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3207,                if (renderer == null) { // no default renderer available,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3208,                    return foundData;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3212,"            XYItemRendererState state = renderer.initialise(g2, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3214,            int passCount = renderer.getPassCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3216,            SeriesRenderingOrder seriesOrder = getSeriesRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3217,            if (seriesOrder == SeriesRenderingOrder.REVERSE) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3219,                for (int pass = 0; pass < passCount; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3220,                    int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3221,                    for (int series = seriesCount - 1; series >= 0; series--) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3222,                        int firstItem = 0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3223,                        int lastItem = dataset.getItemCount(series) - 1;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3224,                        if (lastItem == -1) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3225,                            continue;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3227,                        if (state.getProcessVisibleItemsOnly()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3228,                            int[] itemBounds = RendererUtilities.findLiveItems(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3231,                            firstItem = itemBounds[0];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3232,                            lastItem = itemBounds[1];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3234,                        for (int item = firstItem; item <= lastItem; item++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3235,"                            renderer.drawItem(g2, state, dataArea, info,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3244,                for (int pass = 0; pass < passCount; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3245,                    int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3246,                    for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3247,                        int firstItem = 0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3248,                        int lastItem = dataset.getItemCount(series) - 1;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3249,                        if (state.getProcessVisibleItemsOnly()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3250,                            int[] itemBounds = RendererUtilities.findLiveItems(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3253,                            firstItem = itemBounds[0];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3254,                            lastItem = itemBounds[1];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3256,                        for (int item = firstItem; item <= lastItem; item++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3257,"                            renderer.drawItem(g2, state, dataArea, info,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3265,        return foundData;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3277,        if (index < 0 || index >= getDatasetCount()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3278,"            throw new IllegalArgumentException(""Index "" + index ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3282,        ValueAxis valueAxis = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3283,        Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3285,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3286,            valueAxis = getDomainAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3289,            valueAxis = getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3291,        return valueAxis;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3304,        if (index < 0 || index >= getDatasetCount()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3305,"            throw new IllegalArgumentException(""Index "" + index ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3309,        ValueAxis valueAxis = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3310,        Integer axisIndex,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3312,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3313,            valueAxis = getRangeAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3316,            valueAxis = getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3318,        return valueAxis;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3335,        if (getRenderer() == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3336,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3340,        if (isDomainGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3341,            Stroke gridStroke = getDomainGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3342,            Paint gridPaint = getDomainGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3343,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3344,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3345,                ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3346,"                getRenderer().drawDomainLine(g2, this, getDomainAxis(),",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3348,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3350,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3366,        if (getRenderer() == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3367,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3371,        if (isRangeGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3372,            Stroke gridStroke = getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3373,            Paint gridPaint = getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3374,            ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3375,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3376,                Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3377,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3378,                    ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3379,                    if (tick.getValue() != 0.0,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3381,"                        getRenderer().drawRangeLine(g2, this, getRangeAxis(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3384,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3387,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3400,        if (isDomainZeroBaselineVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3401,            XYItemRenderer r = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3402,"            r.drawDomainLine(g2, this, getDomainAxis(), area, 0.0, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3406,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3417,        if (isRangeZeroBaselineVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3418,"            getRenderer().drawRangeLine(g2, this, getRangeAxis(), area, 0.0, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3421,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3434,        Iterator iterator = this.annotations.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3435,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3436,            XYAnnotation annotation = (XYAnnotation) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3437,            ValueAxis xAxis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3438,            ValueAxis yAxis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3439,"            annotation.draw(g2, this, dataArea, xAxis, yAxis, 0, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3440,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3442,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3456,        XYItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3457,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3458,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3462,        if (index >= getDatasetCount()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3463,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3465,"        Collection markers = getDomainMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3466,        ValueAxis axis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3467,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3468,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3469,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3470,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3471,"                r.drawDomainMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3472,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3475,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3489,        XYItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3490,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3491,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3495,        if (index >= getDatasetCount()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3496,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3498,"        Collection markers = getRangeMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3499,        ValueAxis axis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3500,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3501,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3502,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3503,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3504,"                r.drawRangeMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3505,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3507,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3519,"        return getDomainMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3532,"        return getRangeMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3547,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3548,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3549,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3550,            result = (Collection) this.foregroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3552,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3553,            result = (Collection) this.backgroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3555,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3556,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3558,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3573,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3574,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3575,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3576,            result = (Collection) this.foregroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3578,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3579,            result = (Collection) this.backgroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3581,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3582,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3584,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3601,        ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3602,        if (getOrientation() == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3603,            axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3605,        if (axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3606,"            double yy = axis.valueToJava2D(value, dataArea, RectangleEdge.LEFT);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3607,"            Line2D line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3609,            g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3610,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3611,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3614,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3633,        if (axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3634,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3635,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3636,"                double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3638,"                line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3640,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3642,"                double yy = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3644,"                line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3647,            g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3648,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3649,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3652,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3666,        ValueAxis axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3667,        if (getOrientation() == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3668,            axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3670,        if (axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3671,"            double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3673,"            Line2D line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3675,            g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3676,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3677,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3680,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3699,        if (axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3700,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3701,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3702,"                double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3704,"                line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3706,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3708,"                double yy = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3710,"                line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3713,            g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3714,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3715,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3718,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3729,        Rectangle2D dataArea = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3730,"        if (dataArea.contains(x, y)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3732,            ValueAxis da = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3733,            if (da != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3734,"                double hvalue = da.java2DToValue(x, info.getDataArea(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3736,                setDomainCrosshairValue(hvalue);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3740,            ValueAxis ra = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3741,            if (ra != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3742,"                double vvalue = ra.java2DToValue(y, info.getDataArea(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3744,                setRangeCrosshairValue(vvalue);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3747,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3758,        if (axisIndex == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3759,"            throw new IllegalArgumentException(""Null 'axisIndex' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3761,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3762,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3763,            Integer mappedAxis = (Integer) this.datasetToDomainAxisMap.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3765,            if (mappedAxis == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3766,                if (axisIndex.equals(ZERO)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3767,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3771,                if (mappedAxis.equals(axisIndex)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3772,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3776,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3788,        if (axisIndex == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3789,"            throw new IllegalArgumentException(""Null 'axisIndex' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3791,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3792,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3793,            Integer mappedAxis = (Integer) this.datasetToRangeAxisMap.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3795,            if (mappedAxis == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3796,                if (axisIndex.equals(ZERO)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3797,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3801,                if (mappedAxis.equals(axisIndex)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3802,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3806,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3819,        int result = this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3820,        if (result < 0) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3822,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3823,            if (parent instanceof XYPlot) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3824,                XYPlot p = (XYPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3825,                result = p.getDomainAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3828,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3841,        int result = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3842,        if (result < 0) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3844,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3845,            if (parent instanceof XYPlot) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3846,                XYPlot p = (XYPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3847,                result = p.getRangeAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3850,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3862,        Range result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3863,        List mappedDatasets = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3864,        boolean isDomainAxis = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3867,        int domainIndex = getDomainAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3868,        if (domainIndex >= 0) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3869,            isDomainAxis = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3870,            mappedDatasets.addAll(getDatasetsMappedToDomainAxis(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3875,        int rangeIndex = getRangeAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3876,        if (rangeIndex >= 0) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3877,            isDomainAxis = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3878,            mappedDatasets.addAll(getDatasetsMappedToRangeAxis(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3884,        Iterator iterator = mappedDatasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3885,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3886,            XYDataset d = (XYDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3887,            if (d != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3888,                XYItemRenderer r = getRendererForDataset(d);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3889,                if (isDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3890,                    if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3891,"                        result = Range.combine(result, r.findDomainBounds(d));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3894,"                        result = Range.combine(result, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3899,                    if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3900,"                        result = Range.combine(result, r.findRangeBounds(d));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3903,"                        result = Range.combine(result, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3908,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3909,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3921,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3922,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3923,        if (getParent() != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3924,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3927,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3928,            e.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3929,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3931,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3939,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3940,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3950,        return this.domainCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3963,        if (this.domainCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3964,            this.domainCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3965,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3967,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3978,        return this.domainCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3991,        if (this.domainCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3992,            this.domainCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3993,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,3995,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4005,        return this.domainCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4017,"        setDomainCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4018,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4031,        this.domainCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4032,        if (isDomainCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4033,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4035,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4047,        return this.domainCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4060,        if (stroke == null) { ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4061,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4063,        this.domainCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4064,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4065,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4077,        return this.domainCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4089,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4090,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4092,        this.domainCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4093,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4094,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4105,        return this.rangeCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4118,        if (this.rangeCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4119,            this.rangeCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4120,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4122,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4133,        return this.rangeCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4146,        if (this.rangeCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4147,            this.rangeCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4148,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4150,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4160,        return this.rangeCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4174,"        setRangeCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4175,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4188,        this.rangeCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4189,        if (isRangeCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4190,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4192,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4204,        return this.rangeCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4217,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4218,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4220,        this.rangeCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4221,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4222,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4234,        return this.rangeCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4246,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4247,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4249,        this.rangeCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4250,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4251,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4261,        return this.fixedDomainAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4273,"        setFixedDomainAxisSpace(space, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4274,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4288,        this.fixedDomainAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4289,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4290,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4292,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4302,        return this.fixedRangeAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4314,"        setFixedRangeAxisSpace(space, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4315,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4329,        this.fixedRangeAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4330,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4331,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4333,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4347,"        zoomDomainAxes(factor, info, source, false);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4348,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4366,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4367,            ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4368,            if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4369,                if (useAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4372,                    double sourceX = source.getX();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4373,                    if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4374,                        sourceX = source.getY();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4376,"                    double anchorX = domainAxis.java2DToValue(sourceX, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4378,"                    domainAxis.resizeRange(factor, anchorX);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4379,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4381,                    domainAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4385,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4403,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4404,            ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4405,            if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4406,"                domainAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4409,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4423,"        zoomRangeAxes(factor, info, source, false);    ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4424,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4443,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4444,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4445,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4446,                if (useAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4449,                    double sourceY = source.getY();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4450,                    if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4451,                        sourceY = source.getX();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4453,"                    double anchorY = rangeAxis.java2DToValue(sourceY, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4455,"                    rangeAxis.resizeRange(factor, anchorY);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4456,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4458,                    rangeAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4462,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4476,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4477,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4478,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4479,"                rangeAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4482,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4493,        return true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4505,        return true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4515,        int result = 0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4516,        XYDataset dataset = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4517,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4518,            result = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4520,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4531,        return this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4544,        this.fixedLegendItems = items;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4545,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4546,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4556,        if (this.fixedLegendItems != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4557,            return this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4559,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4560,        int count = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4561,        for (int datasetIndex = 0; datasetIndex < count; datasetIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4562,            XYDataset dataset = getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4563,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4564,                XYItemRenderer renderer = getRenderer(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4565,                if (renderer == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4566,                    renderer = getRenderer(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4568,                if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4569,                    int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4570,                    for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4571,                        if (renderer.isSeriesVisible(i),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4573,                            LegendItem item = renderer.getLegendItem(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4575,                            if (item != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4576,                                result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4583,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4595,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4596,            return true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4598,        if (!(obj instanceof XYPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4599,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4602,        XYPlot that = (XYPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4603,        if (this.weight != that.weight) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4604,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4606,        if (this.orientation != that.orientation) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4607,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4609,        if (!this.domainAxes.equals(that.domainAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4610,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4612,        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4613,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4615,        if (this.rangeCrosshairLockedOnData,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4617,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4619,        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4620,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4622,        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4623,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4625,        if (this.domainZeroBaselineVisible != that.domainZeroBaselineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4626,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4628,        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4629,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4631,        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4632,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4634,        if (this.domainCrosshairValue != that.domainCrosshairValue) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4635,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4637,        if (this.domainCrosshairLockedOnData,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4639,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4641,        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4642,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4644,        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4645,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4647,"        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4648,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4650,"        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4651,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4653,"        if (!ObjectUtilities.equal(this.rangeAxes, that.rangeAxes)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4654,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4656,        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4657,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4659,"        if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4661,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4663,"        if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4665,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4667,"        if (!ObjectUtilities.equal(this.domainGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4669,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4671,"        if (!PaintUtilities.equal(this.domainGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4673,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4675,"        if (!ObjectUtilities.equal(this.rangeGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4677,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4679,"        if (!PaintUtilities.equal(this.rangeGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4681,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4683,"        if (!PaintUtilities.equal(this.domainZeroBaselinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4685,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4687,"        if (!ObjectUtilities.equal(this.domainZeroBaselineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4689,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4691,"        if (!PaintUtilities.equal(this.rangeZeroBaselinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4693,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4695,"        if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4697,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4699,"        if (!ObjectUtilities.equal(this.domainCrosshairStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4701,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4703,"        if (!PaintUtilities.equal(this.domainCrosshairPaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4705,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4707,"        if (!ObjectUtilities.equal(this.rangeCrosshairStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4709,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4711,"        if (!PaintUtilities.equal(this.rangeCrosshairPaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4713,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4715,"        if (!ObjectUtilities.equal(this.foregroundDomainMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4717,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4719,"        if (!ObjectUtilities.equal(this.backgroundDomainMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4721,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4723,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4725,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4727,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4729,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4731,"        if (!ObjectUtilities.equal(this.foregroundDomainMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4733,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4735,"        if (!ObjectUtilities.equal(this.backgroundDomainMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4737,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4739,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4741,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4743,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4745,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4747,"        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4748,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4750,"        if (!PaintUtilities.equal(this.domainTickBandPaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4752,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4754,"        if (!PaintUtilities.equal(this.rangeTickBandPaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4756,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4758,        if (!this.quadrantOrigin.equals(that.quadrantOrigin)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4759,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4761,        for (int i = 0; i < 4; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4762,"            if (!PaintUtilities.equal(this.quadrantPaint[i], ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4764,                return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4767,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4780,        XYPlot clone = (XYPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4781,        clone.domainAxes = (ObjectList) ObjectUtilities.clone(this.domainAxes);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4782,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4783,            ValueAxis axis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4784,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4785,                ValueAxis clonedAxis = (ValueAxis) axis.clone();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4786,"                clone.domainAxes.set(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4787,                clonedAxis.setPlot(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4788,                clonedAxis.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4791,        clone.domainAxisLocations = (ObjectList) ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4794,        clone.rangeAxes = (ObjectList) ObjectUtilities.clone(this.rangeAxes);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4795,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4796,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4797,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4798,                ValueAxis clonedAxis = (ValueAxis) axis.clone();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4799,"                clone.rangeAxes.set(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4800,                clonedAxis.setPlot(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4801,                clonedAxis.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4804,        clone.rangeAxisLocations = (ObjectList) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4808,        clone.datasets = (ObjectList) ObjectUtilities.clone(this.datasets);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4809,        for (int i = 0; i < clone.datasets.size(); ++i) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4810,            XYDataset d = getDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4811,            if (d != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4812,                d.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4816,        clone.datasetToDomainAxisMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4817,        clone.datasetToDomainAxisMap.putAll(this.datasetToDomainAxisMap);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4818,        clone.datasetToRangeAxisMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4819,        clone.datasetToRangeAxisMap.putAll(this.datasetToRangeAxisMap);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4821,        clone.renderers = (ObjectList) ObjectUtilities.clone(this.renderers);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4822,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4823,            XYItemRenderer renderer2 = (XYItemRenderer) this.renderers.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4824,            if (renderer2 instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4825,                PublicCloneable pc = (PublicCloneable) renderer2;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4826,"                clone.renderers.set(i, pc.clone());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4829,        clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4831,        clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4833,        clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4835,        clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4837,        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4838,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4839,            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4842,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4843,            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4847,        clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4849,        clone.quadrantPaint = (Paint[]) this.quadrantPaint.clone();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4850,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4862,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4863,"        SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4864,"        SerialUtilities.writePaint(this.domainGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4865,"        SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4866,"        SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4867,"        SerialUtilities.writeStroke(this.rangeZeroBaselineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4868,"        SerialUtilities.writePaint(this.rangeZeroBaselinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4869,"        SerialUtilities.writeStroke(this.domainCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4870,"        SerialUtilities.writePaint(this.domainCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4871,"        SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4872,"        SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4873,"        SerialUtilities.writePaint(this.domainTickBandPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4874,"        SerialUtilities.writePaint(this.rangeTickBandPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4875,"        SerialUtilities.writePoint2D(this.quadrantOrigin, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4876,        for (int i = 0; i < 4; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4877,"            SerialUtilities.writePaint(this.quadrantPaint[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4879,"        SerialUtilities.writeStroke(this.domainZeroBaselineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4880,"        SerialUtilities.writePaint(this.domainZeroBaselinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4881,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4894,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4895,        this.domainGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4896,        this.domainGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4897,        this.rangeGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4898,        this.rangeGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4899,        this.rangeZeroBaselineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4900,        this.rangeZeroBaselinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4901,        this.domainCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4902,        this.domainCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4903,        this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4904,        this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4905,        this.domainTickBandPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4906,        this.rangeTickBandPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4907,        this.quadrantOrigin = SerialUtilities.readPoint2D(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4908,        this.quadrantPaint = new Paint[4];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4909,        for (int i = 0; i < 4; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4910,            this.quadrantPaint[i] = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4913,        this.domainZeroBaselineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4914,        this.domainZeroBaselinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4918,        int domainAxisCount = this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4919,        for (int i = 0; i < domainAxisCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4920,            Axis axis = (Axis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4921,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4922,                axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4923,                axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4926,        int rangeAxisCount = this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4927,        for (int i = 0; i < rangeAxisCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4928,            Axis axis = (Axis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4929,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4930,                axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4931,                axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4934,        int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4935,        for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4936,            Dataset dataset = (Dataset) this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4937,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4938,                dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4941,        int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4942,        for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4943,            XYItemRenderer renderer = (XYItemRenderer) this.renderers.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4944,            if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4945,                renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,15,4949,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,272,    protected Axis(String label) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,274,        this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,275,        this.visible = DEFAULT_AXIS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,276,        this.labelFont = DEFAULT_AXIS_LABEL_FONT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,277,        this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,278,        this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,279,        this.labelAngle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,280,        this.labelToolTip = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,281,        this.labelURL = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,283,        this.axisLineVisible = true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,284,        this.axisLinePaint = DEFAULT_AXIS_LINE_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,285,        this.axisLineStroke = DEFAULT_AXIS_LINE_STROKE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,287,        this.tickLabelsVisible = DEFAULT_TICK_LABELS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,288,        this.tickLabelFont = DEFAULT_TICK_LABEL_FONT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,289,        this.tickLabelPaint = DEFAULT_TICK_LABEL_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,290,        this.tickLabelInsets = DEFAULT_TICK_LABEL_INSETS;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,292,        this.tickMarksVisible = DEFAULT_TICK_MARKS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,293,        this.tickMarkStroke = DEFAULT_TICK_MARK_STROKE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,294,        this.tickMarkPaint = DEFAULT_TICK_MARK_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,295,        this.tickMarkInsideLength = DEFAULT_TICK_MARK_INSIDE_LENGTH;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,296,        this.tickMarkOutsideLength = DEFAULT_TICK_MARK_OUTSIDE_LENGTH;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,298,        this.plot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,300,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,302,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,136,    public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,140,    public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,143,    public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,147,    public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,150,    public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,156,"    public static final Font DEFAULT_TICK_LABEL_FONT = new Font(""SansSerif"", ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,160,    public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,163,    public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,170,    public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,173,    public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,313,        return this.visible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,325,        if (flag != this.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,326,            this.visible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,327,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,329,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,341,        return this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,356,        String existing = this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,357,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,358,            if (!existing.equals(label)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,359,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,360,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,364,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,365,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,366,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,370,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,380,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,392,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,393,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,395,        if (!this.labelFont.equals(font)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,396,            this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,397,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,399,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,409,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,421,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,422,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,424,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,425,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,426,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,437,        return this.labelInsets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,449,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,450,"            throw new IllegalArgumentException(""Null 'insets' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,452,        if (!insets.equals(this.labelInsets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,453,            this.labelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,454,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,456,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,466,        return this.labelAngle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,478,        this.labelAngle = angle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,479,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,480,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,492,        return this.labelToolTip;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,506,        this.labelToolTip = text;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,507,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,508,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,520,        return this.labelURL;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,534,        this.labelURL = url;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,535,        notifyListeners(new AxisChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,536,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,548,        return this.axisLineVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,562,        this.axisLineVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,563,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,564,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,574,        return this.axisLinePaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,586,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,587,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,589,        this.axisLinePaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,590,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,591,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,601,        return this.axisLineStroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,613,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,614,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,616,        this.axisLineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,617,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,618,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,630,        return this.tickLabelsVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,646,        if (flag != this.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,647,            this.tickLabelsVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,648,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,651,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,661,        return this.tickLabelFont;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,674,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,675,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,678,        if (!this.tickLabelFont.equals(font)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,679,            this.tickLabelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,680,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,683,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,693,        return this.tickLabelPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,705,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,706,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,708,        this.tickLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,709,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,710,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,720,        return this.tickLabelInsets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,732,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,733,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,735,        if (!this.tickLabelInsets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,736,            this.tickLabelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,737,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,739,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,751,        return this.tickMarksVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,763,        if (flag != this.tickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,764,            this.tickMarksVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,765,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,767,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,778,        return this.tickMarkInsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,790,        this.tickMarkInsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,791,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,792,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,803,        return this.tickMarkOutsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,815,        this.tickMarkOutsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,816,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,817,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,827,        return this.tickMarkStroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,839,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,840,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,842,        if (!this.tickMarkStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,843,            this.tickMarkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,844,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,846,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,856,        return this.tickMarkPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,868,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,869,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,871,        this.tickMarkPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,872,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,873,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,885,        return this.plot;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,898,        this.plot = plot;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,899,        configure();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,900,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,910,        return this.fixedDimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,927,        this.fixedDimension = dimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,928,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,999,"        this.listenerList.add(AxisChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1000,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1010,"        this.listenerList.remove(AxisChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1011,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1023,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1024,        return list.contains(listener);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1035,        Object[] listeners = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1036,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1037,            if (listeners[i] == AxisChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1038,                ((AxisChangeListener) listeners[i + 1]).axisChanged(event);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1042,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1055,        Rectangle2D result = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1056,        String axisLabel = getLabel();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1057,"        if (axisLabel != null && !axisLabel.equals("""")) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1058,            FontMetrics fm = g2.getFontMetrics(getLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1059,"            Rectangle2D bounds = TextUtilities.getTextBounds(axisLabel, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1060,            RectangleInsets insets = getLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1061,            bounds = insets.createOutsetRectangle(bounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1062,            double angle = getLabelAngle();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1063,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1064,                angle = angle - Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1066,            double x = bounds.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1067,            double y = bounds.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1068,            AffineTransform transformer ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1070,            Shape labelBounds = transformer.createTransformedShape(bounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1071,            result = labelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1074,        return result;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1096,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1097,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1100,"        if ((label == null) || (label.equals(""""))) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1101,            return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1104,        Font font = getLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1105,        RectangleInsets insets = getLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1106,        g2.setFont(font);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1107,        g2.setPaint(getLabelPaint());,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1108,        FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1109,"        Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1110,        Shape hotspot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1112,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1113,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1116,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1117,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1118,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1119,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1120,            float labelx = (float) dataArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1121,            float labely = (float) (state.getCursor() - insets.getBottom() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1123,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1125,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1127,            state.cursorUp(insets.getTop() + labelBounds.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1129,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1130,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1131,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1134,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1135,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1136,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1137,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1138,            float labelx = (float) dataArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1139,            float labely = (float) (state.getCursor() + insets.getTop() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1141,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1143,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1145,            state.cursorDown(insets.getTop() + labelBounds.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1147,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1148,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1149,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1152,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1153,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1154,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1155,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1156,            float labelx = (float) (state.getCursor() - insets.getRight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1158,            float labely = (float) dataArea.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1159,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1162,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1164,            state.cursorLeft(insets.getLeft() + labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1166,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1167,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1169,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1172,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1173,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1174,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1175,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1176,            float labelx = (float) (state.getCursor() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1178,            float labely = (float) (dataArea.getY() + dataArea.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1180,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1183,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1185,            state.cursorRight(insets.getLeft() + labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1189,        if (plotState != null && hotspot != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1190,            ChartRenderingInfo owner = plotState.getOwner();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1191,            if (owner != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1192,                EntityCollection entities = owner.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1193,                if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1194,"                    entities.add(new AxisLabelEntity(this, hotspot, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1199,        return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1214,        Line2D axisLine = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1215,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1216,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1219,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1220,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1223,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1224,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1227,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1228,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1231,        g2.setPaint(this.axisLinePaint);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1232,        g2.setStroke(this.axisLineStroke);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1233,        g2.draw(axisLine);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1235,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1246,        Axis clone = (Axis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1248,        clone.plot = null;        ,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1249,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1250,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1261,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1262,            return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1264,        if (!(obj instanceof Axis)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1265,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1267,        Axis that = (Axis) obj;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1268,        if (this.visible != that.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1269,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1271,"        if (!ObjectUtilities.equal(this.label, that.label)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1272,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1274,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1275,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1277,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1278,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1280,"        if (!ObjectUtilities.equal(this.labelInsets, that.labelInsets)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1281,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1283,        if (this.labelAngle != that.labelAngle) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1284,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1286,"        if (!ObjectUtilities.equal(this.labelToolTip, that.labelToolTip)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1287,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1289,"        if (!ObjectUtilities.equal(this.labelURL, that.labelURL)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1290,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1292,        if (this.axisLineVisible != that.axisLineVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1293,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1295,"        if (!ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1296,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1298,"        if (!PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1299,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1301,        if (this.tickLabelsVisible != that.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1302,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1304,"        if (!ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1305,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1307,"        if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1308,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1310,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1313,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1315,        if (this.tickMarksVisible != that.tickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1316,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1318,        if (this.tickMarkInsideLength != that.tickMarkInsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1319,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1321,        if (this.tickMarkOutsideLength != that.tickMarkOutsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1322,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1324,"        if (!PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1325,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1327,"        if (!ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1328,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1330,        if (this.fixedDimension != that.fixedDimension) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1331,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1333,        return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1344,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1345,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1346,"        SerialUtilities.writePaint(this.tickLabelPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1347,"        SerialUtilities.writeStroke(this.axisLineStroke, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1348,"        SerialUtilities.writePaint(this.axisLinePaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1349,"        SerialUtilities.writeStroke(this.tickMarkStroke, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1350,"        SerialUtilities.writePaint(this.tickMarkPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1351,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1363,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1364,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1365,        this.tickLabelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1366,        this.axisLineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1367,        this.axisLinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1368,        this.tickMarkStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1369,        this.tickMarkPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1370,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,15,1371,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,262,        super(label);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,264,        this.positiveArrowVisible = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,265,        this.negativeArrowVisible = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,267,        this.range = DEFAULT_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,268,        this.autoRange = DEFAULT_AUTO_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,269,        this.defaultAutoRange = DEFAULT_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,271,        this.inverted = DEFAULT_INVERTED;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,272,        this.autoRangeMinimumSize = DEFAULT_AUTO_RANGE_MINIMUM_SIZE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,274,        this.lowerMargin = DEFAULT_LOWER_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,275,        this.upperMargin = DEFAULT_UPPER_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,277,        this.fixedAutoRange = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,279,        this.autoTickUnitSelection = DEFAULT_AUTO_TICK_UNIT_SELECTION;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,280,        this.standardTickUnits = standardTickUnits;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,282,        Polygon p1 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,283,"        p1.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,284,"        p1.addPoint(-2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,285,"        p1.addPoint(2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,287,        this.upArrow = p1;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,289,        Polygon p2 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,290,"        p2.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,291,"        p2.addPoint(-2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,292,"        p2.addPoint(2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,294,        this.downArrow = p2;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,296,        Polygon p3 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,297,"        p3.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,298,"        p3.addPoint(-2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,299,"        p3.addPoint(-2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,301,        this.rightArrow = p3;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,303,        Polygon p4 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,304,"        p4.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,305,"        p4.addPoint(2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,306,"        p4.addPoint(2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,308,        this.leftArrow = p4;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,310,        this.verticalTickLabels = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,312,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,147,"    public static final Range DEFAULT_RANGE = new Range(0.0, 1.0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,323,        return this.verticalTickLabels;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,337,        if (this.verticalTickLabels != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,338,            this.verticalTickLabels = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,339,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,341,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,352,        return this.positiveArrowVisible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,365,        this.positiveArrowVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,366,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,367,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,378,        return this.negativeArrowVisible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,391,        this.negativeArrowVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,392,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,393,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,404,        return this.upArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,417,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,418,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,420,        this.upArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,421,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,422,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,433,        return this.downArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,446,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,447,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,449,        this.downArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,450,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,451,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,462,        return this.leftArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,475,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,476,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,478,        this.leftArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,479,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,480,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,491,        return this.rightArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,504,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,505,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,507,        this.rightArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,508,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,509,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,521,        Line2D axisLine = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,522,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,523,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,526,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,527,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,530,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,531,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,534,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,535,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,538,        g2.setPaint(getAxisLinePaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,539,        g2.setStroke(getAxisLineStroke());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,540,        g2.draw(axisLine);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,542,        boolean drawUpOrRight = false;  ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,543,        boolean drawDownOrLeft = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,544,        if (this.positiveArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,545,            if (this.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,546,                drawDownOrLeft = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,549,                drawUpOrRight = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,552,        if (this.negativeArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,553,            if (this.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,554,                drawUpOrRight = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,557,                drawDownOrLeft = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,560,        if (drawUpOrRight) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,561,            double x = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,562,            double y = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,563,            Shape arrow = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,564,            if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,565,                x = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,566,                y = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,567,                arrow = this.rightArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,569,            else if (edge == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,571,                x = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,572,                y = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,573,                arrow = this.upArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,577,            AffineTransform transformer = new AffineTransform();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,578,"            transformer.setToTranslation(x, y);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,579,            Shape shape = transformer.createTransformedShape(arrow);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,580,            g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,581,            g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,584,        if (drawDownOrLeft) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,585,            double x = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,586,            double y = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,587,            Shape arrow = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,588,            if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,589,                x = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,590,                y = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,591,                arrow = this.leftArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,593,            else if (edge == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,595,                x = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,596,                y = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,597,                arrow = this.downArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,601,            AffineTransform transformer = new AffineTransform();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,602,"            transformer.setToTranslation(x, y);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,603,            Shape shape = transformer.createTransformedShape(arrow);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,604,            g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,605,            g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,608,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,625,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,626,        float[] result = new float[2];,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,627,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,628,"            result[0] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,629,            result[1] = (float) (cursor - insets.getBottom() - 2.0);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,631,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,632,"            result[0] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,633,            result[1] = (float) (cursor + insets.getTop() + 2.0); ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,635,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,636,            result[0] = (float) (cursor - insets.getLeft() - 2.0);    ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,637,"            result[1] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,639,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,640,            result[0] = (float) (cursor + insets.getRight() + 2.0);    ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,641,"            result[1] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,643,        return result;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,662,        AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,664,        if (isAxisLineVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,665,"            drawAxisLine(g2, cursor, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,668,        double ol = getTickMarkOutsideLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,669,        double il = getTickMarkInsideLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,671,"        List ticks = refreshTicks(g2, state, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,672,        state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,673,        g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,674,        Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,675,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,676,            ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,677,            if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,678,                g2.setPaint(getTickLabelPaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,679,"                float[] anchorPoint = calculateAnchorPoint(tick, cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,681,"                TextUtilities.drawRotatedString(tick.getText(), g2, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,686,            if (isTickMarksVisible() && tick.getTickType().equals(TickType.MAJOR)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,687,"                float xx = (float) valueToJava2D(tick.getValue(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,689,                Line2D mark = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,690,                g2.setStroke(getTickMarkStroke());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,691,                g2.setPaint(getTickMarkPaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,692,                if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,693,"                    mark = new Line2D.Double(cursor - ol, xx, cursor + il, xx);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,695,                else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,696,"                    mark = new Line2D.Double(cursor + ol, xx, cursor - il, xx);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,698,                else if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,699,"                    mark = new Line2D.Double(xx, cursor - ol, xx, cursor + il);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,701,                else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,702,"                    mark = new Line2D.Double(xx, cursor + ol, xx, cursor - il);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,704,                g2.draw(mark);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,706,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,710,        double used = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,711,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,712,            if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,713,"                used += findMaximumTickLabelWidth(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,715,                state.cursorLeft(used);      ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,717,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,718,"                used = findMaximumTickLabelWidth(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,720,                state.cursorRight(used);      ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,722,            else if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,723,"                used = findMaximumTickLabelHeight(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,725,                state.cursorUp(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,727,            else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,728,"                used = findMaximumTickLabelHeight(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,730,                state.cursorDown(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,734,        return state;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,754,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,755,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,759,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,760,            return space;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,764,        double dimension = getFixedDimension();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,765,        if (dimension > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,766,"            space.ensureAtLeast(dimension, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,770,        double tickLabelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,771,        double tickLabelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,772,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,773,            g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,774,"            List ticks = refreshTicks(g2, new AxisState(), plotArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,775,            if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,776,"                tickLabelHeight = findMaximumTickLabelHeight(ticks, g2, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,779,            else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,780,"                tickLabelWidth = findMaximumTickLabelWidth(ticks, g2, plotArea,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,786,"        Rectangle2D labelEnclosure = getLabelEnclosure(g2, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,787,        double labelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,788,        double labelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,789,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,790,            labelHeight = labelEnclosure.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,791,"            space.add(labelHeight + tickLabelHeight, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,793,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,794,            labelWidth = labelEnclosure.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,795,"            space.add(labelWidth + tickLabelWidth, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,798,        return space;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,818,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,819,        Font font = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,820,        double maxHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,821,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,822,            FontMetrics fm = g2.getFontMetrics(font);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,823,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,824,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,825,                Tick tick = (Tick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,826,                Rectangle2D labelBounds = TextUtilities.getTextBounds(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,828,                if (labelBounds.getWidth() + insets.getTop() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,830,                    maxHeight = labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,833,            },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,834,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,836,"            LineMetrics metrics = font.getLineMetrics(""ABCxyz"", ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,838,            maxHeight = metrics.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,841,        return maxHeight;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,861,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,862,        Font font = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,863,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,864,        if (!vertical) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,865,            FontMetrics fm = g2.getFontMetrics(font);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,866,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,867,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,868,                Tick tick = (Tick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,869,                Rectangle2D labelBounds = TextUtilities.getTextBounds(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,871,                if (labelBounds.getWidth() + insets.getLeft() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,873,                    maxWidth = labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,876,            },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,877,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,879,"            LineMetrics metrics = font.getLineMetrics(""ABCxyz"", ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,881,            maxWidth = metrics.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,884,        return maxWidth;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,900,        return this.inverted;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,913,        if (this.inverted != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,914,            this.inverted = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,915,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,918,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,929,        return this.autoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,942,"        setAutoRange(auto, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,943,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,955,        if (this.autoRange != auto) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,956,            this.autoRange = auto;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,957,            if (this.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,958,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,960,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,961,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,964,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,975,        return this.autoRangeMinimumSize;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,987,"        setAutoRangeMinimumSize(size, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,988,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1001,        if (size <= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1002,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1005,        if (this.autoRangeMinimumSize != size) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1006,            this.autoRangeMinimumSize = size;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1007,            if (this.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1008,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1010,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1011,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1015,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1027,        return this.defaultAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1041,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1042,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1044,        this.defaultAutoRange = range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1045,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1046,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1059,        return this.lowerMargin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1074,        this.lowerMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1075,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1076,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1078,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1079,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1092,        return this.upperMargin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1107,        this.upperMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1108,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1109,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1111,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1112,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1122,        return this.fixedAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1133,        this.fixedAutoRange = length;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1134,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1135,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1137,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1138,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1148,        return this.range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1160,        if (this.range.getUpperBound() > min) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1161,"            setRange(new Range(min, this.range.getUpperBound()));            ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1164,"            setRange(new Range(min, min + 1.0));                        ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1166,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1176,        return this.range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1188,        if (this.range.getLowerBound() < max) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1189,"            setRange(new Range(this.range.getLowerBound(), max));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1192,"            setRange(max - 1.0, max);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1194,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1204,        return this.range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1218,"        setRange(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1219,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1236,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1237,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1239,        if (turnOffAutoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1240,            this.autoRange = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1242,        this.range = range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1243,        if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1244,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1246,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1260,"        setRange(new Range(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1261,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1271,"        setRangeWithMargins(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1272,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1289,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1290,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1292,"        setRange(Range.expand(range, getLowerMargin(), getUpperMargin()), ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1294,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1305,"        setRangeWithMargins(new Range(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1306,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1316,"        setRange(new Range(value - length / 2, value + length / 2));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1317,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1329,        return this.autoTickUnitSelection;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1342,"        setAutoTickUnitSelection(flag, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1343,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1356,        if (this.autoTickUnitSelection != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1357,            this.autoTickUnitSelection = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1358,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1359,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1362,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1372,        return this.standardTickUnits;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1388,        this.standardTickUnits = source;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1389,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1390,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1421,"        double zero = valueToJava2D(0.0, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1422,"        double l = valueToJava2D(length, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1423,        return Math.abs(l - zero);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1458,        double central = this.range.getCentralValue();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1459,"        Range adjusted = new Range(this.range.getLowerBound() + value - central,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1461,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1463,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1478,"        resizeRange(percent, this.range.getCentralValue());",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1479,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1495,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1496,            double halfLength = this.range.getLength() * percent / 2;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1497,"            Range adjusted = new Range(anchorValue - halfLength, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1499,            setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1500,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1502,            setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1504,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1513,        double start = this.range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1514,        double length = this.range.getLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1515,        Range adjusted = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1516,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1517,"            adjusted = new Range(start + (length * (1 - upperPercent)), ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1521,"            adjusted = new Range(start + length * lowerPercent, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1524,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1525,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1535,        return this.autoTickIndex;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1546,        this.autoTickIndex = index;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1547,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1558,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1559,            return true;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1561,        if (!(obj instanceof ValueAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1562,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1565,        ValueAxis that = (ValueAxis) obj;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1567,        if (this.positiveArrowVisible != that.positiveArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1568,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1570,        if (this.negativeArrowVisible != that.negativeArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1571,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1573,        if (this.inverted != that.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1574,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1576,"        if (!ObjectUtilities.equal(this.range, that.range)) {",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1577,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1579,        if (this.autoRange != that.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1580,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1582,        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1583,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1585,        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1586,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1588,        if (this.upperMargin != that.upperMargin) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1589,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1591,        if (this.lowerMargin != that.lowerMargin) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1592,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1594,        if (this.fixedAutoRange != that.fixedAutoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1595,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1597,        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1598,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1600,"        if (!ObjectUtilities.equal(this.standardTickUnits, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1602,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1604,        if (this.verticalTickLabels != that.verticalTickLabels) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1605,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1608,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1621,        ValueAxis clone = (ValueAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1622,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1633,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1634,"        SerialUtilities.writeShape(this.upArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1635,"        SerialUtilities.writeShape(this.downArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1636,"        SerialUtilities.writeShape(this.leftArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1637,"        SerialUtilities.writeShape(this.rightArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1638,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1651,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1652,        this.upArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1653,        this.downArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1654,        this.leftArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1655,        this.rightArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,15,1657,    },0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,82,        return this.name;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,94,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,95,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,97,        if (!(obj instanceof PlotOrientation)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,98,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,100,        PlotOrientation orientation = (PlotOrientation) obj;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,101,        if (!this.name.equals(orientation.toString())) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,102,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,104,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,113,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,124,        Object result = null;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,125,        if (this.equals(PlotOrientation.HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,126,            result = PlotOrientation.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,128,        else if (this.equals(PlotOrientation.VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,129,            result = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,15,131,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,144,        this(Color.gray);,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,145,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,153,"        this(paint, new BasicStroke(0.5f), Color.gray, new BasicStroke(0.5f), ",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,155,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,173,                     float alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,115,    private String label = null;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,175,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,176,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,178,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,179,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,181,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Marker,15,182,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,185,        this.paint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,186,        this.stroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,187,        this.outlinePaint = outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,188,        this.outlineStroke = outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,189,        this.alpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,191,"        this.labelFont = new Font(""SansSerif"", Font.PLAIN, 9);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,192,        this.labelPaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,193,        this.labelAnchor = RectangleAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,194,"        this.labelOffset = new RectangleInsets(3.0, 3.0, 3.0, 3.0);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,195,        this.labelOffsetType = LengthAdjustmentType.CONTRACT;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,196,        this.labelTextAnchor = TextAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,198,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,199,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,209,        return this.paint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,221,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,222,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,224,        this.paint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,225,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,226,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,236,        return this.stroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,248,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,249,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,251,        this.stroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,252,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,253,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,263,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,275,        this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,276,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,277,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,287,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,299,        this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,300,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,301,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,311,        return this.alpha;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,329,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Marker,15,330,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,332,        this.alpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,333,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,334,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,344,        return this.label;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,356,        this.label = label;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,357,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,358,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,368,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,380,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,381,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,383,        this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,384,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,385,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,395,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,407,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,408,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,410,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,411,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,412,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,423,        return this.labelAnchor;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,436,        if (anchor == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,437,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,439,        this.labelAnchor = anchor;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,440,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,441,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,451,        return this.labelOffset;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,463,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,464,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,466,        this.labelOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,467,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,468,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,478,        return this.labelOffsetType;   ,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,490,        if (adj == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,491,"            throw new IllegalArgumentException(""Null 'adj' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,493,        this.labelOffsetType = adj;    ,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,494,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,495,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,505,        return this.labelTextAnchor;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,517,        if (anchor == null) { ,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,518,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,520,        this.labelTextAnchor = anchor;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,521,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,522,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,534,"        this.listenerList.add(MarkerChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,535,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,547,"        this.listenerList.remove(MarkerChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,548,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,559,        Object[] listeners = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,560,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,561,            if (listeners[i] == MarkerChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,562,                ((MarkerChangeListener) listeners[i + 1]).markerChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,566,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,578,        return this.listenerList.getListeners(listenerType);    ,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,589,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,590,            return true;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,592,        if (!(obj instanceof Marker)) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,593,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,595,        Marker that = (Marker) obj;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,596,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,597,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,599,"        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,600,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,602,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,603,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,605,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,606,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,608,        if (this.alpha != that.alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,609,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,611,"        if (!ObjectUtilities.equal(this.label, that.label)) {",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,612,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,614,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,615,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,617,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,618,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,620,        if (this.labelAnchor != that.labelAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,621,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,623,        if (this.labelTextAnchor != that.labelTextAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,624,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,626,"        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,627,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,629,        if (!this.labelOffsetType.equals(that.labelOffsetType)) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,630,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,632,        return true;,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,643,        return super.clone();,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,654,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,655,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,656,"        SerialUtilities.writeStroke(this.stroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,657,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,658,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,659,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Marker,15,660,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,15,672,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,673,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,674,        this.stroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,675,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,676,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,677,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,678,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Marker,15,679,    },0.0,0,-1,0
org/jfree/data/Range,15,85,"            String msg = ""Range(double, double): require lower ("" + lower ",0.0,0,-1,0
org/jfree/data/Range,15,87,            throw new IllegalArgumentException(msg);,0.0,0,-1,0
org/jfree/data/Range,15,117,        return this.upper - this.lower;,0.0,0,-1,0
org/jfree/data/Range,15,126,        return this.lower / 2.0 + this.upper / 2.0;,0.0,0,-1,0
org/jfree/data/Range,15,138,        return (value >= this.lower && value <= this.upper);,0.0,0,-1,0
org/jfree/data/Range,15,151,        if (b0 <= this.lower) {,0.0,0,-1,0
org/jfree/data/Range,15,152,            return (b1 > this.lower);,0.0,0,-1,0
org/jfree/data/Range,15,155,            return (b0 < this.upper && b1 >= b0);,0.0,0,-1,0
org/jfree/data/Range,15,168,        double result = value;,0.0,0,-1,0
org/jfree/data/Range,15,169,        if (!contains(value)) {,0.0,0,-1,0
org/jfree/data/Range,15,170,            if (value > this.upper) {,0.0,0,-1,0
org/jfree/data/Range,15,171,                result = this.upper;   ,0.0,0,-1,0
org/jfree/data/Range,15,173,            else if (value < this.lower) {,0.0,0,-1,0
org/jfree/data/Range,15,174,                result = this.lower;   ,0.0,0,-1,0
org/jfree/data/Range,15,177,        return result;,0.0,0,-1,0
org/jfree/data/Range,15,197,        if (range1 == null) {,0.0,0,-1,0
org/jfree/data/Range,15,198,            return range2;,0.0,0,-1,0
org/jfree/data/Range,15,201,            if (range2 == null) {,0.0,0,-1,0
org/jfree/data/Range,15,202,                return range1;,0.0,0,-1,0
org/jfree/data/Range,15,205,"                double l = Math.min(range1.getLowerBound(), ",0.0,0,-1,0
org/jfree/data/Range,15,207,"                double u = Math.max(range1.getUpperBound(), ",0.0,0,-1,0
org/jfree/data/Range,15,209,"                return new Range(l, u);",0.0,0,-1,0
org/jfree/data/Range,15,226,        if (range == null) {,0.0,0,-1,0
org/jfree/data/Range,15,227,"            return new Range(value, value);",0.0,0,-1,0
org/jfree/data/Range,15,229,        if (value < range.getLowerBound()) {,0.0,0,-1,0
org/jfree/data/Range,15,230,"            return new Range(value, range.getUpperBound());",0.0,0,-1,0
org/jfree/data/Range,15,232,        else if (value > range.getUpperBound()) {,0.0,0,-1,0
org/jfree/data/Range,15,233,"            return new Range(range.getLowerBound(), value);",0.0,0,-1,0
org/jfree/data/Range,15,236,            return range;,0.0,0,-1,0
org/jfree/data/Range,15,253,        if (range == null) {,0.0,0,-1,0
org/jfree/data/Range,15,254,"            throw new IllegalArgumentException(""Null 'range' argument."");   ",0.0,0,-1,0
org/jfree/data/Range,15,256,        double length = range.getLength();,0.0,0,-1,0
org/jfree/data/Range,15,257,        double lower = length * lowerMargin;,0.0,0,-1,0
org/jfree/data/Range,15,258,        double upper = length * upperMargin;,0.0,0,-1,0
org/jfree/data/Range,15,259,"        return new Range(range.getLowerBound() - lower, ",0.0,0,-1,0
org/jfree/data/Range,15,272,"        return shift(base, delta, false);",0.0,0,-1,0
org/jfree/data/Range,15,288,        if (allowZeroCrossing) {,0.0,0,-1,0
org/jfree/data/Range,15,289,"            return new Range(base.getLowerBound() + delta, ",0.0,0,-1,0
org/jfree/data/Range,15,293,"            return new Range(shiftWithNoZeroCrossing(base.getLowerBound(), ",0.0,0,-1,0
org/jfree/data/Range,15,309,        if (value > 0.0) {,0.0,0,-1,0
org/jfree/data/Range,15,310,"            return Math.max(value + delta, 0.0);  ",0.0,0,-1,0
org/jfree/data/Range,15,312,        else if (value < 0.0) {,0.0,0,-1,0
org/jfree/data/Range,15,313,"            return Math.min(value + delta, 0.0);",0.0,0,-1,0
org/jfree/data/Range,15,316,            return value + delta;   ,0.0,0,-1,0
org/jfree/data/Range,15,328,        if (!(obj instanceof Range)) {,0.0,0,-1,0
org/jfree/data/Range,15,329,            return false;,0.0,0,-1,0
org/jfree/data/Range,15,331,        Range range = (Range) obj;,0.0,0,-1,0
org/jfree/data/Range,15,332,        if (!(this.lower == range.lower)) {,0.0,0,-1,0
org/jfree/data/Range,15,333,            return false;,0.0,0,-1,0
org/jfree/data/Range,15,335,        if (!(this.upper == range.upper)) {,0.0,0,-1,0
org/jfree/data/Range,15,336,            return false;,0.0,0,-1,0
org/jfree/data/Range,15,338,        return true;,0.0,0,-1,0
org/jfree/data/Range,15,349,        temp = Double.doubleToLongBits(this.lower);,0.0,0,-1,0
org/jfree/data/Range,15,350,        result = (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/data/Range,15,351,        temp = Double.doubleToLongBits(this.upper);,0.0,0,-1,0
org/jfree/data/Range,15,352,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/data/Range,15,353,        return result;,0.0,0,-1,0
org/jfree/data/Range,15,363,"        return (""Range["" + this.lower + "","" + this.upper + ""]"");",0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,75,        this.items.add(item);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,76,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,84,        this.items.addAll(collection.items);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,85,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,95,        return (LegendItem) this.items.get(index);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,113,        return this.items.iterator();,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,124,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,125,            return true;   ,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,127,        if (!(obj instanceof LegendItemCollection)) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,128,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,130,        LegendItemCollection that = (LegendItemCollection) obj;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,131,        if (!this.items.equals(that.items)) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,132,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,134,        return true;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,15,146,        return super.clone();   ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,122,        this(null);   ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,123,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,131,        super(dataset);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,132,        this.separatorsVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,133,        this.separatorStroke = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,134,        this.separatorPaint = Color.gray;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,135,        this.innerSeparatorExtension = 0.20;  // twenty percent,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,136,        this.outerSeparatorExtension = 0.20;  // twenty percent,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,137,        this.sectionDepth = 0.20; // 20%,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,138,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,149,        return this.separatorsVisible;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,162,        this.separatorsVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,163,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,164,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,174,        return this.separatorStroke;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,186,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,187,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,189,        this.separatorStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,190,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,191,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,201,        return this.separatorPaint;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,213,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,214,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,216,        this.separatorPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,217,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,218,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,230,        return this.innerSeparatorExtension;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,245,        this.innerSeparatorExtension = percent;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,246,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,247,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,259,        return this.outerSeparatorExtension;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,273,        this.outerSeparatorExtension = percent;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,274,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,275,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,287,        return this.sectionDepth;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,300,        this.sectionDepth = sectionDepth;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,301,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,302,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,322,"        PiePlotState state = super.initialise(g2, plotArea, plot, index, info);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,323,        state.setPassesRequired(3);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,324,        return state;   ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,343,        PieDataset dataset = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,344,        Number n = dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,345,        if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,346,            return;   ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,348,        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,349,        double angle1 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,350,        double angle2 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,352,        Rotation direction = getDirection();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,353,        if (direction == Rotation.CLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,354,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,355,            angle2 = angle1 - value / state.getTotal() * 360.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,357,        else if (direction == Rotation.ANTICLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,358,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,359,            angle2 = angle1 + value / state.getTotal() * 360.0;         ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,362,"            throw new IllegalStateException(""Rotation type not recognised."");   ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,365,        double angle = (angle2 - angle1);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,366,        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,367,            Comparable key = getSectionKey(section);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,368,            double ep = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,369,            double mep = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,370,            if (mep > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,371,                ep = getExplodePercent(key) / mep;                ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,373,"            Rectangle2D arcBounds = getArcBounds(state.getPieArea(), ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,375,"            Arc2D.Double arc = new Arc2D.Double(arcBounds, angle1, angle, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,379,            double depth = this.sectionDepth / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,380,"            RectangleInsets s = new RectangleInsets(UnitType.RELATIVE, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,382,            Rectangle2D innerArcBounds = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,383,            innerArcBounds.setRect(arcBounds);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,384,            s.trim(innerArcBounds);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,387,"            Arc2D.Double arc2 = new Arc2D.Double(innerArcBounds, angle1 ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,389,            GeneralPath path = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,390,"            path.moveTo((float) arc.getStartPoint().getX(), ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,392,"            path.append(arc.getPathIterator(null), false);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,393,"            path.append(arc2.getPathIterator(null), true);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,394,            path.closePath();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,396,"            Line2D separator = new Line2D.Double(arc2.getEndPoint(), ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,399,            if (currentPass == 0) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,400,                Paint shadowPaint = getShadowPaint();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,401,                double shadowXOffset = getShadowXOffset();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,402,                double shadowYOffset = getShadowYOffset();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,403,                if (shadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,404,                    Shape shadowArc = ShapeUtilities.createTranslatedShape(,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,406,                    g2.setPaint(shadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,407,                    g2.fill(shadowArc);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,409,            },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,410,            else if (currentPass == 1) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,411,"                Paint paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,412,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,413,                g2.fill(path);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,414,                Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,415,                Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,416,                if (outlinePaint != null && outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,417,                    g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,418,                    g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,419,                    g2.draw(path);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,423,                if (state.getInfo() != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,424,                    EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,425,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,426,                        String tip = null;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,427,                        PieToolTipGenerator toolTipGenerator ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,429,                        if (toolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,430,"                            tip = toolTipGenerator.generateToolTip(dataset, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,433,                        String url = null;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,434,                        PieURLGenerator urlGenerator = getURLGenerator();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,435,                        if (urlGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,436,"                            url = urlGenerator.generateURL(dataset, key, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,439,"                        PieSectionEntity entity = new PieSectionEntity(path, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,442,                        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,445,            },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,446,            else if (currentPass == 2) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,447,                if (this.separatorsVisible) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,448,"                    Line2D extendedSeparator = extendLine(separator,",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,451,                    g2.setStroke(this.separatorStroke);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,452,                    g2.setPaint(this.separatorPaint);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,453,                    g2.draw(extendedSeparator);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,457,        state.setLatestAngle(angle2);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,458,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,468,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,469,            return true;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,471,        if (!(obj instanceof RingPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,472,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,474,        RingPlot that = (RingPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,475,        if (this.separatorsVisible != that.separatorsVisible) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,476,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,478,"        if (!ObjectUtilities.equal(this.separatorStroke, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,480,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,482,"        if (!PaintUtilities.equal(this.separatorPaint, that.separatorPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,483,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,485,        if (this.innerSeparatorExtension != that.innerSeparatorExtension) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,486,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,488,        if (this.outerSeparatorExtension != that.outerSeparatorExtension) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,489,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,491,        if (this.sectionDepth != that.sectionDepth) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,492,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,494,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,509,        if (line == null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,510,"            throw new IllegalArgumentException(""Null 'line' argument."");",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,512,        double x1 = line.getX1();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,513,        double x2 = line.getX2();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,514,        double deltaX = x2 - x1;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,515,        double y1 = line.getY1();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,516,        double y2 = line.getY2();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,517,        double deltaY = y2 - y1;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,518,        x1 = x1 - (startPercent * deltaX);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,519,        y1 = y1 - (startPercent * deltaY);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,520,        x2 = x2 + (endPercent * deltaX);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,521,        y2 = y2 + (endPercent * deltaY);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,522,"        return new Line2D.Double(x1, y1, x2, y2);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,533,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,534,"        SerialUtilities.writeStroke(this.separatorStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,535,"        SerialUtilities.writePaint(this.separatorPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,536,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,548,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,549,        this.separatorStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,550,        this.separatorPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,15,551,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,483,        this(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,484,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,495,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,564,        PieDataset existing = this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,565,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,566,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,570,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,571,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,572,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,573,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,577,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,578,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,579,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,590,        return this.pieIndex;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,602,        this.pieIndex = index;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,603,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,614,        return this.startAngle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,628,        this.startAngle = angle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,629,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,630,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,641,        return this.direction;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,653,        if (direction == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,654,"            throw new IllegalArgumentException(""Null 'direction' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,656,        this.direction = direction;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,657,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,659,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,685,        if ((percent < 0.0) || (percent > MAX_INTERIOR_GAP)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,686,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,690,        if (this.interiorGap != percent) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,691,            this.interiorGap = percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,692,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,695,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,718,"        setCircular(flag, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,719,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,733,            notifyListeners(new PlotChangeEvent(this));   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,746,        return this.ignoreNullValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,761,        this.ignoreNullValues = flag;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,762,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,763,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,774,        return this.ignoreZeroValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,789,        this.ignoreZeroValues = flag;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,790,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,791,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,808,"        return lookupSectionPaint(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,833,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,836,        result = this.sectionPaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,837,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,838,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,842,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,843,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,844,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,845,                result = ds.getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,846,"                this.sectionPaintMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,849,                result = this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,851,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,853,            result = this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,855,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,873,        Comparable key = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,874,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,875,            if (section >= 0 && section < this.dataset.getItemCount()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,876,                key = this.dataset.getKey(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,879,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,880,            key = new Integer(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,882,        return key;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,903,        return this.sectionPaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,922,"        this.sectionPaintMap.put(key, paint);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,923,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,924,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,935,        return this.baseSectionPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,947,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,948,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,950,        this.baseSectionPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,951,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,952,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,966,        return this.sectionOutlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,979,        this.sectionOutlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,980,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,981,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,996,"        return lookupSectionOutlinePaint(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1023,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1026,        result = this.sectionOutlinePaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1027,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1028,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1032,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1033,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1034,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1035,                result = ds.getNextOutlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1036,"                this.sectionOutlinePaintMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1039,                result = this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1041,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1043,            result = this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1045,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1066,        return this.sectionOutlinePaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1085,"        this.sectionOutlinePaintMap.put(key, paint);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1086,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1087,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1098,        return this.baseSectionOutlinePaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1109,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1110,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1112,        this.baseSectionOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1113,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1114,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1131,"        return lookupSectionOutlineStroke(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1158,        Stroke result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1161,        result = this.sectionOutlineStrokeMap.getStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1162,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1163,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1167,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1168,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1169,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1170,                result = ds.getNextOutlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1171,"                this.sectionOutlineStrokeMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1174,                result = this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1176,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1178,            result = this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1180,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1201,        return this.sectionOutlineStrokeMap.getStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1220,"        this.sectionOutlineStrokeMap.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1221,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1222,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1233,        return this.baseSectionOutlineStroke;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1244,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1245,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1247,        this.baseSectionOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1248,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1249,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1259,        return this.shadowPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1271,        this.shadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1272,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1273,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1283,        return this.shadowXOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1295,        this.shadowXOffset = offset;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1296,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1297,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1307,        return this.shadowYOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1319,        this.shadowYOffset = offset;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1320,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1321,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1340,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1341,        if (this.explodePercentages != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1342,            Number percent = (Number) this.explodePercentages.get(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1343,            if (percent != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1344,                result = percent.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1347,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1362,        if (key == null) { ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1363,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1365,        if (this.explodePercentages == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1366,            this.explodePercentages = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1368,"        this.explodePercentages.put(key, new Double(percent));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1369,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1370,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1378,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1379,        Iterator iterator = this.dataset.getKeys().iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1380,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1381,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1382,            Number explode = (Number) this.explodePercentages.get(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1383,            if (explode != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1384,"                result = Math.max(result, explode.doubleValue());   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1386,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1387,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1410,        this.labelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1411,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1412,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1436,        this.labelGap = gap;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1437,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1438,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1460,        this.maximumLabelWidth = width;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1461,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1462,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1473,        return this.labelLinksVisible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1488,        this.labelLinksVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1489,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1490,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1501,        return this.labelLinkMargin;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1513,        this.labelLinkMargin = margin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1514,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1515,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1526,        return this.labelLinkPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1539,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1540,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1542,        this.labelLinkPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1543,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1544,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1554,        return this.labelLinkStroke;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1566,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1567,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1569,        this.labelLinkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1570,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1571,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1581,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1593,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1594,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1596,        this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1597,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1598,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1608,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1620,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1621,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1623,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1624,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1625,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1635,        return this.labelBackgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1647,        this.labelBackgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1648,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1649,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1659,        return this.labelOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1671,        this.labelOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1672,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1673,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1683,        return this.labelOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1695,        this.labelOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1696,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1697,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1707,        return this.labelShadowPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1719,        this.labelShadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1720,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1721,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1733,        return this.labelPadding;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1747,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1748,"            throw new IllegalArgumentException(""Null 'padding' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1750,        this.labelPadding = padding;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1751,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1752,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1763,        return this.simpleLabels;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1776,        this.simpleLabels = simple;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1777,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1778,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1790,        return this.simpleLabelOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1804,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1805,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1807,        this.simpleLabelOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1808,        notifyListeners(new PlotChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1809,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1820,        return this.labelDistributor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1832,        if (distributor == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1833,"            throw new IllegalArgumentException(""Null 'distributor' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1835,        this.labelDistributor = distributor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1836,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1837,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1849,        return this.toolTipGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1862,        this.toolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1863,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1864,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1874,        return this.urlGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1886,        this.urlGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1887,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1888,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1899,        return this.minimumArcAngleToDraw;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1921,        this.minimumArcAngleToDraw = angle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1922,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1932,        return this.legendItemShape;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1944,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1945,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1947,        this.legendItemShape = shape;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1948,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1949,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1959,        return this.legendLabelGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1971,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1972,"            throw new IllegalArgumentException(""Null 'generator' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1974,        this.legendLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1975,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1976,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1986,        return this.legendLabelToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,1999,        this.legendLabelToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2000,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2001,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2013,        return this.legendLabelURLGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2027,        this.legendLabelURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2028,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2029,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2053,        state.setLatestAngle(plot.getStartAngle());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2054,        return state;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2073,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2074,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2076,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2077,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2078,            info.setDataArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2081,"        drawBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2082,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2084,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2085,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2087,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2088,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2091,        if (!DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2092,"            drawPie(g2, area, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2095,"            drawNoDataMessage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2098,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2099,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2101,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2103,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2115,"        PiePlotState state = initialise(g2, plotArea, this, null, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2118,        double labelReserve = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2119,        if (this.labelGenerator != null && !this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2120,            labelReserve = this.labelGap + this.maximumLabelWidth;    ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2122,        double gapHorizontal = plotArea.getWidth() * (this.interiorGap ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2124,        double gapVertical = plotArea.getHeight() * this.interiorGap * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2140,        double linkX = plotArea.getX() + gapHorizontal / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2141,        double linkY = plotArea.getY() + gapVertical / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2142,        double linkW = plotArea.getWidth() - gapHorizontal;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2143,        double linkH = plotArea.getHeight() - gapVertical;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2146,        if (this.circular) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2147,"            double min = Math.min(linkW, linkH) / 2;",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2148,            linkX = (linkX + linkX + linkW) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2149,            linkY = (linkY + linkY + linkH) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2150,            linkW = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2151,            linkH = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2156,"        Rectangle2D linkArea = new Rectangle2D.Double(linkX, linkY, linkW, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2158,        state.setLinkArea(linkArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2171,        double lm = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2172,        if (!this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2173,            lm = this.labelLinkMargin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2175,        double hh = linkArea.getWidth() * lm * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2176,        double vv = linkArea.getHeight() * lm * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2177,"        Rectangle2D explodeArea = new Rectangle2D.Double(linkX + hh / 2.0, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2180,        state.setExplodedPieArea(explodeArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2185,        double maximumExplodePercent = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2186,        double percent = maximumExplodePercent / (1.0 + maximumExplodePercent);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2188,        double h1 = explodeArea.getWidth() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2189,        double v1 = explodeArea.getHeight() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2190,        Rectangle2D pieArea = new Rectangle2D.Double(explodeArea.getX() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2198,        state.setPieArea(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2199,        state.setPieCenterX(pieArea.getCenterX());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2200,        state.setPieCenterY(pieArea.getCenterY());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2201,        state.setPieWRadius(pieArea.getWidth() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2202,        state.setPieHRadius(pieArea.getHeight() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2205,        if ((this.dataset != null) && (this.dataset.getKeys().size() > 0)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2207,            List keys = this.dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2208,            double totalValue = DatasetUtilities.calculatePieDatasetTotal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2211,            int passesRequired = state.getPassesRequired();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2212,            for (int pass = 0; pass < passesRequired; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2213,                double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2214,                for (int section = 0; section < keys.size(); section++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2215,                    Number n = this.dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2216,                    if (n != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2217,                        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2218,                        if (value > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2219,                            runningTotal += value;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2220,"                            drawItem(g2, section, explodeArea, state, pass);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2225,            if (this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2226,"                drawSimpleLabels(g2, keys, totalValue, plotArea, linkArea, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2230,"                drawLabels(g2, keys, totalValue, plotArea, linkArea, state);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2233,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2235,"            drawNoDataMessage(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2237,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2251,        Number n = this.dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2252,        if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2253,            return;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2255,        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2256,        double angle1 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2257,        double angle2 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2259,        if (this.direction == Rotation.CLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2260,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2261,            angle2 = angle1 - value / state.getTotal() * 360.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2263,        else if (this.direction == Rotation.ANTICLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2264,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2265,            angle2 = angle1 + value / state.getTotal() * 360.0;         ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2268,"            throw new IllegalStateException(""Rotation type not recognised."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2271,        double angle = (angle2 - angle1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2272,        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2273,            double ep = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2274,            double mep = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2275,            if (mep > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2276,                ep = getExplodePercent(getSectionKey(section)) / mep;                ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2278,"            Rectangle2D arcBounds = getArcBounds(state.getPieArea(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2280,"            Arc2D.Double arc = new Arc2D.Double(arcBounds, angle1, angle, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2283,            if (currentPass == 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2284,                if (this.shadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2285,                    Shape shadowArc = ShapeUtilities.createTranslatedShape(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2288,                    g2.setPaint(this.shadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2289,                    g2.fill(shadowArc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2290,                },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2292,            else if (currentPass == 1) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2293,                Comparable key = getSectionKey(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2294,"                Paint paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2295,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2296,                g2.fill(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2298,                Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2299,                Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2300,                if (this.sectionOutlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2301,                    g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2302,                    g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2303,                    g2.draw(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2308,                if (state.getInfo() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2309,                    EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2310,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2311,                        String tip = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2312,                        if (this.toolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2313,                            tip = this.toolTipGenerator.generateToolTip(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2316,                        String url = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2317,                        if (this.urlGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2318,"                            url = this.urlGenerator.generateURL(this.dataset, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2321,                        PieSectionEntity entity = new PieSectionEntity(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2324,                        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2329,        state.setLatestAngle(angle2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2330,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2348,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2349,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2352,"        RectangleInsets labelInsets = new RectangleInsets(UnitType.RELATIVE, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2354,        Rectangle2D labelsArea = labelInsets.createInsetRectangle(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2355,        double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2356,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2357,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2358,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2359,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2360,            double v = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2361,            Number n = getDataset().getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2362,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2363,                include = !getIgnoreNullValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2366,                v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2367,                include = getIgnoreZeroValues() ? v > 0.0 : v >= 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2370,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2371,                runningTotal = runningTotal + v;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2374,                double mid = getStartAngle() + (getDirection().getFactor(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2377,"                Arc2D arc = new Arc2D.Double(labelsArea, getStartAngle(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2379,                int x = (int) arc.getEndPoint().getX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2380,                int y = (int) arc.getEndPoint().getY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2382,                PieSectionLabelGenerator labelGenerator = getLabelGenerator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2383,                if (labelGenerator == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2384,                    continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2386,                String label = labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2388,                if (label == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2389,                    continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2391,                g2.setFont(this.labelFont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2392,                FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2393,"                Rectangle2D bounds = TextUtilities.getTextBounds(label, g2, fm);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2394,                Rectangle2D out = this.labelPadding.createOutsetRectangle(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2396,"                Shape bg = ShapeUtilities.createTranslatedShape(out, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2398,                if (this.labelShadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2399,"                    Shape shadow = ShapeUtilities.createTranslatedShape(bg, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2401,                    g2.setPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2402,                    g2.fill(shadow);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2404,                if (this.labelBackgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2405,                    g2.setPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2406,                    g2.fill(bg);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2408,                if (this.labelOutlinePaint != null ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2410,                    g2.setPaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2411,                    g2.setStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2412,                    g2.draw(bg);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2415,                g2.setPaint(this.labelPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2416,                g2.setFont(this.labelFont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2417,                TextUtilities.drawAlignedString(getLabelGenerator(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2422,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2424,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2426,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2442,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2443,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2447,        DefaultKeyedValues leftKeys = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2448,        DefaultKeyedValues rightKeys = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2450,        double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2451,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2452,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2453,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2454,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2455,            double v = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2456,            Number n = this.dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2457,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2458,                include = !this.ignoreNullValues;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2461,                v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2462,                include = this.ignoreZeroValues ? v > 0.0 : v >= 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2465,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2466,                runningTotal = runningTotal + v;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2469,                double mid = this.startAngle + (this.direction.getFactor(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2471,                if (Math.cos(Math.toRadians(mid)) < 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2472,"                    leftKeys.addValue(key, new Double(mid));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2475,"                    rightKeys.addValue(key, new Double(mid));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2478,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2480,        g2.setFont(getLabelFont());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2484,        double marginX = plotArea.getX() + this.interiorGap * plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2485,        double gap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2486,        double ww = linkArea.getX() - gap - marginX;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2487,        float labelWidth = (float) this.labelPadding.trimWidth(ww);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2490,        if (this.labelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2491,"            drawLeftLabels(leftKeys, g2, plotArea, linkArea, labelWidth, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2493,"            drawRightLabels(rightKeys, g2, plotArea, linkArea, labelWidth, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2496,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2498,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2516,        this.labelDistributor.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2517,        double lGap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2518,        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2519,        for (int i = 0; i < leftKeys.getItemCount(); i++) {   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2520,            String label = this.labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2522,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2523,"                TextBlock block = TextUtilities.createTextBlock(label, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2526,                TextBox labelBox = new TextBox(block);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2527,                labelBox.setBackgroundPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2528,                labelBox.setOutlinePaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2529,                labelBox.setOutlineStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2530,                labelBox.setShadowPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2531,                labelBox.setInteriorGap(this.labelPadding);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2532,                double theta = Math.toRadians(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2534,                double baseY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2536,                double hh = labelBox.getHeight(g2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2538,                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2544,"        this.labelDistributor.distributeLabels(plotArea.getMinY(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2546,        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2547,"            drawLeftLabel(g2, state, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2550,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2567,        this.labelDistributor.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2568,        double lGap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2569,        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2571,        for (int i = 0; i < keys.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2572,            String label = this.labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2575,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2576,"                TextBlock block = TextUtilities.createTextBlock(label, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2579,                TextBox labelBox = new TextBox(block);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2580,                labelBox.setBackgroundPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2581,                labelBox.setOutlinePaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2582,                labelBox.setOutlineStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2583,                labelBox.setShadowPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2584,                labelBox.setInteriorGap(this.labelPadding);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2585,                double theta = Math.toRadians(keys.getValue(i).doubleValue());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2586,                double baseY = state.getPieCenterY() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2588,                double hh = labelBox.getHeight(g2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2589,                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2595,"        this.labelDistributor.distributeLabels(plotArea.getMinY(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2597,        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2598,"            drawRightLabel(g2, state, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2602,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2613,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2615,        List keys = this.dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2616,        int section = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2617,        Shape shape = getLegendItemShape();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2618,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2619,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2620,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2621,            Number n = this.dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2622,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2623,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2624,                include = !this.ignoreNullValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2627,                double v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2628,                if (v == 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2629,                    include = !this.ignoreZeroValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2632,                    include = v > 0.0;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2635,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2636,                String label = this.legendLabelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2638,                if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2639,                    String description = label;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2640,                    String toolTipText = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2641,                    if (this.legendLabelToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2642,                        toolTipText = this.legendLabelToolTipGenerator,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2645,                    String urlText = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2646,                    if (this.legendLabelURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2647,                        urlText = this.legendLabelURLGenerator.generateURL(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2650,"                    Paint paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2651,                    Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2652,                    Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2653,"                    LegendItem item = new LegendItem(label, description, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2658,                    item.setDataset(getDataset());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2659,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2661,                section++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2662,            },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2664,                section++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2666,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2667,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2676,"        return localizationResources.getString(""Pie_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2698,        if (explodePercent == 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2699,            return unexploded;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2702,"            Arc2D arc1 = new Arc2D.Double(unexploded, angle, extent / 2, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2704,            Point2D point1 = arc1.getEndPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2705,"            Arc2D.Double arc2 = new Arc2D.Double(exploded, angle, extent / 2, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2707,            Point2D point2 = arc2.getEndPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2708,            double deltaX = (point1.getX() - point2.getX()) * explodePercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2709,            double deltaY = (point1.getY() - point2.getY()) * explodePercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2710,"            return new Rectangle2D.Double(unexploded.getX() - deltaX, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2726,        double anchorX = state.getLinkArea().getMinX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2727,        double targetX = anchorX - record.getGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2728,        double targetY = record.getAllocatedY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2730,        if (this.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2731,            double theta = record.getAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2732,            double linkX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2734,            double linkY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2736,            double elbowX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2738,            double elbowY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2740,            double anchorY = elbowY;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2741,            g2.setPaint(this.labelLinkPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2742,            g2.setStroke(this.labelLinkStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2743,"            g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2744,"            g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2745,"            g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2747,        TextBox tb = record.getLabel();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2748,"        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.RIGHT);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2750,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2762,        double anchorX = state.getLinkArea().getMaxX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2763,        double targetX = anchorX + record.getGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2764,        double targetY = record.getAllocatedY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2766,        if (this.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2767,            double theta = record.getAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2768,            double linkX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2770,            double linkY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2772,            double elbowX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2774,            double elbowY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2776,            double anchorY = elbowY;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2777,            g2.setPaint(this.labelLinkPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2778,            g2.setStroke(this.labelLinkStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2779,"            g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2780,"            g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2781,"            g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2784,        TextBox tb = record.getLabel();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2785,"        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.LEFT);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2787,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2798,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2799,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2801,        if (!(obj instanceof PiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2802,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2804,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2805,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2807,        PiePlot that = (PiePlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2808,        if (this.pieIndex != that.pieIndex) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2809,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2811,        if (this.interiorGap != that.interiorGap) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2812,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2814,        if (this.circular != that.circular) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2815,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2817,        if (this.startAngle != that.startAngle) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2818,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2820,        if (this.direction != that.direction) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2821,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2823,        if (this.ignoreZeroValues != that.ignoreZeroValues) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2824,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2826,        if (this.ignoreNullValues != that.ignoreNullValues) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2827,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2829,"        if (!ObjectUtilities.equal(this.sectionPaintMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2831,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2833,"        if (!PaintUtilities.equal(this.baseSectionPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2835,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2837,        if (this.sectionOutlinesVisible != that.sectionOutlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2838,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2840,"        if (!ObjectUtilities.equal(this.sectionOutlinePaintMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2842,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2844,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2847,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2849,"        if (!ObjectUtilities.equal(this.sectionOutlineStrokeMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2851,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2853,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2856,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2858,"        if (!PaintUtilities.equal(this.shadowPaint, that.shadowPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2859,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2861,        if (!(this.shadowXOffset == that.shadowXOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2862,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2864,        if (!(this.shadowYOffset == that.shadowYOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2865,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2867,"        if (!ObjectUtilities.equal(this.explodePercentages, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2869,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2871,"        if (!ObjectUtilities.equal(this.labelGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2873,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2875,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2876,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2878,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2879,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2881,"        if (!PaintUtilities.equal(this.labelBackgroundPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2883,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2885,"        if (!PaintUtilities.equal(this.labelOutlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2887,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2889,"        if (!ObjectUtilities.equal(this.labelOutlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2891,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2893,"        if (!PaintUtilities.equal(this.labelShadowPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2895,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2897,        if (this.simpleLabels != that.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2898,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2900,        if (!this.simpleLabelOffset.equals(that.simpleLabelOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2901,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2903,        if (!this.labelPadding.equals(that.labelPadding)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2904,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2906,        if (!(this.maximumLabelWidth == that.maximumLabelWidth)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2907,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2909,        if (!(this.labelGap == that.labelGap)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2910,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2912,        if (!(this.labelLinkMargin == that.labelLinkMargin)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2913,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2915,        if (this.labelLinksVisible != that.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2916,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2918,"        if (!PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2919,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2921,"        if (!ObjectUtilities.equal(this.labelLinkStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2923,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2925,"        if (!ObjectUtilities.equal(this.toolTipGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2927,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2929,"        if (!ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2930,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2932,        if (!(this.minimumArcAngleToDraw == that.minimumArcAngleToDraw)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2933,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2935,"        if (!ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2936,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2938,"        if (!ObjectUtilities.equal(this.legendLabelGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2940,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2942,"        if (!ObjectUtilities.equal(this.legendLabelToolTipGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2944,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2946,"        if (!ObjectUtilities.equal(this.legendLabelURLGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2948,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2951,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2963,        PiePlot clone = (PiePlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2964,        if (clone.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2965,            clone.dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2967,        if (this.urlGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2968,            clone.urlGenerator = (PieURLGenerator) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2971,        clone.legendItemShape = ShapeUtilities.clone(this.legendItemShape);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2972,        if (this.legendLabelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2973,            clone.legendLabelGenerator = (PieSectionLabelGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2976,        if (this.legendLabelToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2977,            clone.legendLabelToolTipGenerator = (PieSectionLabelGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2980,        if (this.legendLabelURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2981,            clone.legendLabelURLGenerator = (PieURLGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2984,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2995,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2996,"        SerialUtilities.writePaint(this.baseSectionPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2997,"        SerialUtilities.writePaint(this.baseSectionOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2998,"        SerialUtilities.writeStroke(this.baseSectionOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,2999,"        SerialUtilities.writePaint(this.shadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3000,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3001,"        SerialUtilities.writePaint(this.labelBackgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3002,"        SerialUtilities.writePaint(this.labelOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3003,"        SerialUtilities.writeStroke(this.labelOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3004,"        SerialUtilities.writePaint(this.labelShadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3005,"        SerialUtilities.writePaint(this.labelLinkPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3006,"        SerialUtilities.writeStroke(this.labelLinkStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3007,"        SerialUtilities.writeShape(this.legendItemShape, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3008,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3020,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3021,        this.baseSectionPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3022,        this.baseSectionOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3023,        this.baseSectionOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3024,        this.shadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3025,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3026,        this.labelBackgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3027,        this.labelOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3028,        this.labelOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3029,        this.labelShadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3030,        this.labelLinkPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3031,        this.labelLinkStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3032,        this.legendItemShape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,15,3033,    },0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,72,        return (PieLabelRecord) this.labels.get(index);   ,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,81,        if (record == null) {,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,82,"            throw new IllegalArgumentException(""Null 'record' argument."");",0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,84,        this.labels.add(record);,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,85,    },0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,93,        return this.labels.size();   ,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,100,        this.labels.clear();,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,15,101,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,72,        sort();  // sorts the label records into ascending order by baseY,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,73,        if (isOverlap()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,74,            adjustInwards();,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,78,        if (isOverlap()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,79,"            adjustDownwards(minY, height);",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,82,        if (isOverlap()) { ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,83,"            adjustUpwards(minY, height);",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,86,        if (isOverlap()) {  ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,87,"            spreadEvenly(minY, height);",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,90,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,99,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,100,        for (int i = 0; i < this.labels.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,101,            PieLabelRecord plr = getPieLabelRecord(i);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,102,            if (y > plr.getLowerY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,103,                return true;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,105,            y = plr.getUpperY();    ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,107,        return false;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,115,        int lower = 0;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,116,        int upper = this.labels.size() - 1;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,117,        while (upper > lower) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,118,            if (lower < upper - 1) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,119,                PieLabelRecord r0 = getPieLabelRecord(lower);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,120,                PieLabelRecord r1 = getPieLabelRecord(lower + 1); ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,121,                if (r1.getLowerY() < r0.getUpperY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,122,                    double adjust = r0.getUpperY() - r1.getLowerY() ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,124,                    r1.setAllocatedY(r1.getAllocatedY() + adjust);   ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,127,            PieLabelRecord r2 = getPieLabelRecord(upper - 1);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,128,            PieLabelRecord r3 = getPieLabelRecord(upper);  ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,129,            if (r2.getUpperY() > r3.getLowerY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,130,                double adjust = (r2.getUpperY() - r3.getLowerY()) + this.minGap;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,131,                r3.setAllocatedY(r3.getAllocatedY() + adjust);   ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,133,            lower++; ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,134,            upper--;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,135,        },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,136,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,146,        for (int i = 0; i < this.labels.size() - 1; i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,147,            PieLabelRecord record0 = getPieLabelRecord(i);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,148,            PieLabelRecord record1 = getPieLabelRecord(i + 1);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,149,            if (record1.getLowerY() < record0.getUpperY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,150,"                record1.setAllocatedY(Math.min(minY + height, ",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,155,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,165,        for (int i = this.labels.size() - 1; i > 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,166,            PieLabelRecord record0 = getPieLabelRecord(i);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,167,            PieLabelRecord record1 = getPieLabelRecord(i - 1);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,168,            if (record1.getUpperY() > record0.getLowerY()) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,169,"                record1.setAllocatedY(Math.max(minY, record0.getLowerY() ",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,173,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,183,        double y = minY;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,184,        double sumOfLabelHeights = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,185,        for (int i = 0; i < this.labels.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,186,            sumOfLabelHeights += getPieLabelRecord(i).getLabelHeight();,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,188,"        double gap = Math.max(0, height - sumOfLabelHeights);",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,189,        if (this.labels.size() > 1) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,190,            gap = gap / (this.labels.size() - 1);   ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,192,        for (int i = 0; i < this.labels.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,193,            PieLabelRecord record = getPieLabelRecord(i);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,194,            y = y + record.getLabelHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,195,            record.setAllocatedY(y);,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,196,            y = y + record.getLabelHeight() / 2.0 + gap;,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,198,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,204,        Collections.sort(this.labels);  ,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,205,    },0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,214,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,215,        for (int i = 0; i < this.labels.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,216,"            result.append(getPieLabelRecord(i).toString()).append(""\n"");   ",0.0,0,-1,0
org/jfree/chart/plot/PieLabelDistributor,15,218,        return result.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,116,"        this(area, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,117,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,127,"        this(area, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,128,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,138,"    public ChartEntity(Shape area, String toolTipText, String urlText) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,139,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,140,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,142,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,143,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,144,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,145,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,153,        return this.area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,166,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,167,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,169,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,170,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,178,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,187,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,188,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,196,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,205,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,206,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,215,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,216,"            return ""rect"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,219,"            return ""poly"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,229,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,230,            return getRectCoords((Rectangle2D) this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,233,            return getPolyCoords(this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,246,        if (rectangle == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,247,"            throw new IllegalArgumentException(""Null 'rectangle' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,249,        int x1 = (int) rectangle.getX();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,250,        int y1 = (int) rectangle.getY();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,251,        int x2 = x1 + (int) rectangle.getWidth();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,252,        int y2 = y1 + (int) rectangle.getHeight();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,254,        if (x2 == x1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,255,            x2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,257,        if (y2 == y1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,258,            y2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,261,"        return x1 + "","" + y1 + "","" + x2 + "","" + y2;",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,273,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,274,"            throw new IllegalArgumentException(""Null 'shape' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,276,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,277,        boolean first = true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,278,        float[] coords = new float[6];,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,279,"        PathIterator pi = shape.getPathIterator(null, 1.0);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,280,        while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,281,            pi.currentSegment(coords);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,282,            if (first) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,283,                first = false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,284,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,285,"                result.append("","").append((int) coords[1]);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,288,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,289,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,290,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,291,                result.append((int) coords[1]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,293,            pi.next();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,295,        return result.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,315,        StringBuffer tag = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,316,        boolean hasURL = (this.urlText == null ? false ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,318,        boolean hasToolTip = (this.toolTipText == null ? false ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,320,        if (hasURL || hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,321,"            tag.append(""<area shape=\"""" + getShapeType() + ""\"""" + "" coords=\"""" ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,323,            if (hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,324,                tag.append(toolTipTagFragmentGenerator.generateToolTipFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,327,            if (hasURL) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,328,                tag.append(urlTagFragmentGenerator.generateURLFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,332,"                tag.append("" nohref=\""nohref\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,336,            if (!hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,337,"                tag.append("" alt=\""\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,339,"            tag.append(""/>"");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,341,        return tag.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,351,"        StringBuffer buf = new StringBuffer(""ChartEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,352,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,353,        buf.append(this.toolTipText);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,354,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,365,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,366,            return true;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,368,        if (!(obj instanceof ChartEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,369,            return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,371,        ChartEntity that = (ChartEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,372,        if (!this.area.equals(that.area)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,373,            return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,375,"        if (!ObjectUtilities.equal(this.toolTipText, that.toolTipText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,376,            return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,378,"        if (!ObjectUtilities.equal(this.urlText, that.urlText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,379,            return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,381,        return true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,390,        int result = 37;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,391,"        result = HashUtilities.hashCode(result, this.toolTipText);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,392,"        result = HashUtilities.hashCode(result, this.urlText);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,393,        return result;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,405,        return super.clone();    ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,416,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,417,"        SerialUtilities.writeShape(this.area, stream);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,418,     },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,430,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,431,        this.area = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,15,432,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,99,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,100,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,101,        this.pieIndex = pieIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,102,        this.sectionIndex = sectionIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,103,        this.sectionKey = sectionKey;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,105,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,113,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,122,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,123,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,133,        return this.pieIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,142,        this.pieIndex = index;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,143,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,151,        return this.sectionIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,160,        this.sectionIndex = index;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,161,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,169,        return this.sectionKey;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,178,        this.sectionKey = key;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,179,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,15,187,"        return ""PieSection: "" + this.pieIndex + "", "" + this.sectionIndex + ""(""",0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,100,        return this.passesRequired;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,118,        return this.total;,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,127,        this.total = total;,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,128,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,136,        return this.latestAngle;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,145,        this.latestAngle = angle;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,146,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,154,        return this.pieArea;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,163,       this.pieArea = area;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,164,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,172,        return this.explodedPieArea;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,181,        this.explodedPieArea = area;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,182,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,190,        return this.pieCenterX;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,199,        this.pieCenterX = x;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,200,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,210,        return this.pieCenterY;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,220,        this.pieCenterY = y;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,221,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,230,        return this.linkArea;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,240,        this.linkArea = area;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,241,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,249,        return this.pieHRadius;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,258,        this.pieHRadius = radius;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,259,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,267,        return this.pieWRadius;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,276,        this.pieWRadius = radius;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlotState,15,277,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,424,"        this(null, null, null, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,425,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,441,        super();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,320,    private DatasetRenderingOrder renderingOrder ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,327,    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,333,    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,381,    private boolean rangeCrosshairLockedOnData = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,443,        this.orientation = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,446,        this.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,447,        this.domainAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,448,        this.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,449,        this.rangeAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,451,        this.datasetToDomainAxisMap = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,452,        this.datasetToRangeAxisMap = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,454,        this.renderers = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,456,        this.datasets = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,457,"        this.datasets.set(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,458,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,459,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,462,"        this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,464,"        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,465,"        setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,467,"        this.renderers.set(0, renderer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,468,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,469,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,470,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,473,"        this.domainAxes.set(0, domainAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,474,"        this.mapDatasetToDomainAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,475,        if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,476,            domainAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,477,            domainAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,479,        this.drawSharedDomainAxis = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,481,"        this.rangeAxes.set(0, rangeAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,482,"        this.mapDatasetToRangeAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,483,        if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,484,            rangeAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,485,            rangeAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,488,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,489,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,491,        this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,492,        this.domainGridlinePosition = CategoryAnchor.MIDDLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,493,        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,494,        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,496,        this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,497,        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,498,        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,500,        this.foregroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,501,        this.backgroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,502,        this.foregroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,503,        this.backgroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,505,"        Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,508,"        addRangeMarker(baseline, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,510,        this.anchorValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,512,        this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,513,        this.rangeCrosshairValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,514,        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,515,        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,517,        this.annotations = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,519,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,245,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,250,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,253,"    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(""SansSerif"", ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,268,    public static final Stroke DEFAULT_CROSSHAIR_STROKE,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,276,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,279,    protected static ResourceBundle localizationResources ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,527,"        return localizationResources.getString(""Category_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,538,        return this.orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,550,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,551,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,553,        this.orientation = orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,554,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,555,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,565,        return this.axisOffset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,577,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,578,"            throw new IllegalArgumentException(""Null 'offset' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,580,        this.axisOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,581,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,582,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,594,        return getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,607,        CategoryAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,608,        if (index < this.domainAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,609,            result = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,611,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,612,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,613,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,614,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,615,                result = cp.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,618,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,630,"        setDomainAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,631,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,643,"        setDomainAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,644,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,655,        CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,656,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,657,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,659,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,660,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,662,"        this.domainAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,663,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,664,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,665,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,667,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,668,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,670,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,681,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,682,"            setDomainAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,684,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,685,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,701,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,702,"            throw new IllegalArgumentException(""Null 'axis' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,704,        return this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,715,        return getDomainAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,728,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,729,        if (index < this.domainAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,730,            result = (AxisLocation) this.domainAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,732,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,733,            result = AxisLocation.getOpposite(getDomainAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,735,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,749,"        setDomainAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,750,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,761,"        setDomainAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,762,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,776,"        setDomainAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,777,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,794,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,795,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,798,"        this.domainAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,799,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,800,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,802,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,811,        return getDomainAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,822,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,823,        AxisLocation location = getDomainAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,824,        if (location != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,825,"            result = Plot.resolveDomainAxisLocation(location, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,828,            result = RectangleEdge.opposite(getDomainAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,830,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,839,        return this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,847,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,848,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,849,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,850,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,853,        this.domainAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,854,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,855,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,861,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,862,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,863,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,864,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,867,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,877,        return getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,888,        ValueAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,889,        if (index < this.rangeAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,890,            result = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,892,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,893,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,894,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,895,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,896,                result = cp.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,899,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,909,"        setRangeAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,910,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,920,"        setRangeAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,921,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,932,        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,933,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,934,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,936,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,937,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,939,"        this.rangeAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,940,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,941,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,942,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,944,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,945,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,947,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,958,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,959,"            setRangeAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,961,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,962,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,978,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,979,"            throw new IllegalArgumentException(""Null 'axis' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,981,        int result = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,982,        if (result < 0) { // try the parent plot,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,983,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,984,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,985,                CategoryPlot p = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,986,                result = p.getRangeAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,989,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,998,        return getRangeAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1011,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1012,        if (index < this.rangeAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1013,            result = (AxisLocation) this.rangeAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1015,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1016,            result = AxisLocation.getOpposite(getRangeAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1018,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1032,"        setRangeAxisLocation(location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1033,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1045,"        setRangeAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1046,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1059,"        setRangeAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1060,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1075,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1076,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1079,"        this.rangeAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1080,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1081,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1083,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1091,        return getRangeAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1102,        AxisLocation location = getRangeAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1103,"        RectangleEdge result = Plot.resolveRangeAxisLocation(location, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1105,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1106,            result = RectangleEdge.opposite(getRangeAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1108,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1117,        return this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1125,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1126,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1127,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1128,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1131,        this.rangeAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1132,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1133,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1139,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1140,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1141,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1142,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1145,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1155,        return getDataset(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1168,        CategoryDataset result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1169,        if (this.datasets.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1170,            result = (CategoryDataset) this.datasets.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1172,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1187,"        setDataset(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1188,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1200,        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1201,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1202,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1204,"        this.datasets.set(index, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1205,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1206,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1210,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1211,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1213,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1223,        return this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1235,"        this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));  ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1237,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));  ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1238,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1251,        CategoryAxis result = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1252,        Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1253,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1254,            result = getDomainAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1256,        return result;    ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1268,"        this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1270,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));  ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1271,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1284,        ValueAxis result = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1285,        Integer axisIndex = (Integer) this.datasetToRangeAxisMap.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1286,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1287,            result = getRangeAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1289,        return result;    ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1300,        return getRenderer(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1313,        CategoryItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1314,        if (this.renderers.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1315,            result = (CategoryItemRenderer) this.renderers.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1317,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1330,"        setRenderer(0, renderer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1331,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1351,"        setRenderer(0, renderer, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1352,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1365,"        setRenderer(index, renderer, true);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1366,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1382,        CategoryItemRenderer existing ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1384,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1385,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1389,"        this.renderers.set(index, renderer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1390,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1391,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1392,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1395,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1396,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1398,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1399,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1401,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1410,        for (int i = 0; i < renderers.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1411,"            setRenderer(i, renderers[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1413,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1414,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1425,        CategoryItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1426,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1427,            if (this.datasets.get(i) == dataset) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1428,                result = (CategoryItemRenderer) this.renderers.get(i);   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1429,                break;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1432,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1444,        return this.renderers.indexOf(renderer);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1455,        return this.renderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1469,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1470,"            throw new IllegalArgumentException(""Null 'order' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1472,        this.renderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1473,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1474,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1485,        return this.columnRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1500,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1501,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1503,        this.columnRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1504,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1505,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1516,        return this.rowRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1531,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1532,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1534,        this.rowRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1535,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1536,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1546,        return this.domainGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1561,        if (this.domainGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1562,            this.domainGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1563,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1565,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1575,        return this.domainGridlinePosition;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1587,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1588,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1590,        this.domainGridlinePosition = position;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1591,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1592,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1602,        return this.domainGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1614,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1615,"            throw new IllegalArgumentException(""Null 'stroke' not permitted."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1617,        this.domainGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1618,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1619,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1629,        return this.domainGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1641,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1642,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1644,        this.domainGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1645,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1646,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1656,        return this.rangeGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1669,        if (this.rangeGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1670,            this.rangeGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1671,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1673,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1683,        return this.rangeGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1695,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1696,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1698,        this.rangeGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1699,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1700,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1710,        return this.rangeGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1722,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1723,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1725,        this.rangeGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1726,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1727,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1737,        return this.fixedLegendItems;   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1750,        this.fixedLegendItems = items;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1751,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1752,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1762,        LegendItemCollection result = this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1763,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1764,            result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1766,            int count = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1767,            for (int datasetIndex = 0; datasetIndex < count; datasetIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1768,                CategoryDataset dataset = getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1769,                if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1770,                    CategoryItemRenderer renderer = getRenderer(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1771,                    if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1772,                        int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1773,                        for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1774,                            LegendItem item = renderer.getLegendItem(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1776,                            if (item != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1777,                                result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1784,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1797,        Rectangle2D dataArea = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1798,"        if (dataArea.contains(x, y)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1800,            double java2D = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1801,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1802,                java2D = x;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1804,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1805,                java2D = y;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1807,            RectangleEdge edge = Plot.resolveRangeAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1809,            double value = getRangeAxis().java2DToValue(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1811,            setAnchorValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1812,            setRangeCrosshairValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1815,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1828,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1829,            double range = getRangeAxis().getRange().getLength();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1830,            double scaledRange = range * percent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1831,"            getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1833,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1835,            getRangeAxis().setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1838,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1849,        int count = this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1850,        for (int axisIndex = 0; axisIndex < count; axisIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1851,            ValueAxis yAxis = getRangeAxis(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1852,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1853,                yAxis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1856,        if (getParent() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1857,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1860,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1861,            e.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1862,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1865,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1873,        Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1874,        if (parent != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1875,            if (parent instanceof RendererChangeListener) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1876,                RendererChangeListener rcl = (RendererChangeListener) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1877,                rcl.rendererChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1878,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1882,                throw new RuntimeException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1887,            configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1888,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1889,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1891,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1902,"        addDomainMarker(marker, Layer.FOREGROUND); ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1903,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1916,"        addDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1917,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1930,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1931,"            throw new IllegalArgumentException(""Null 'marker' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1933,        if (layer == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1934,"            throw new IllegalArgumentException(""Null 'layer' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1937,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1938,            markers = (Collection) this.foregroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1940,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1941,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1942,"                this.foregroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1944,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1946,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1947,            markers = (Collection) this.backgroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1949,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1950,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1951,"                this.backgroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1953,            markers.add(marker);            ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1955,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1956,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1957,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1966,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1967,            Set keys = this.backgroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1968,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1969,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1970,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1971,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1972,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1973,            this.backgroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1975,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1976,            Set keys = this.foregroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1977,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1978,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1979,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1980,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1981,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1982,            this.foregroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1984,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1985,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,1995,"        return getDomainMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2008,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2009,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2010,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2011,            result = (Collection) this.foregroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2013,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2014,            result = (Collection) this.backgroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2016,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2017,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2019,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2030,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2031,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2032,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2034,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2035,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2036,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2037,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2038,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2039,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2040,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2043,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2044,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2046,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2047,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2048,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2049,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2050,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2051,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2052,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2055,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2056,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2070,"        return removeDomainMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2086,"        return removeDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2104,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2105,            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2109,            markers = (ArrayList)this.backgroundDomainMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2112,        boolean removed = markers.remove(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2113,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2114,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2116,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2128,"        addRangeMarker(marker, Layer.FOREGROUND); ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2129,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2142,"        addRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2143,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2157,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2158,            markers = (Collection) this.foregroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2160,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2161,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2162,"                this.foregroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2164,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2166,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2167,            markers = (Collection) this.backgroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2169,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2170,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2171,"                this.backgroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2173,            markers.add(marker);            ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2175,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2176,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2177,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2186,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2187,            Set keys = this.backgroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2188,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2189,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2190,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2191,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2192,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2193,            this.backgroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2195,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2196,            Set keys = this.foregroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2197,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2198,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2199,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2200,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2201,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2202,            this.foregroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2204,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2205,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2217,"        return getRangeMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2230,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2231,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2232,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2233,            result = (Collection) this.foregroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2235,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2236,            result = (Collection) this.backgroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2238,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2239,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2241,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2252,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2253,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2254,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2256,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2257,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2258,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2259,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2260,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2261,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2262,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2265,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2266,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2268,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2269,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2270,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2271,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2272,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2273,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2274,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2277,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2278,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2292,"        return removeRangeMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2308,"        return removeRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2325,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2326,"            throw new IllegalArgumentException(""Null 'marker' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2329,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2330,            markers = (ArrayList)this.foregroundRangeMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2334,            markers = (ArrayList)this.backgroundRangeMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2338,        boolean removed = markers.remove(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2339,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2340,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2342,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2353,        return this.rangeCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2364,        if (this.rangeCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2365,            this.rangeCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2366,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2368,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2379,        return this.rangeCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2392,        if (this.rangeCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2393,            this.rangeCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2394,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2397,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2407,        return this.rangeCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2421,"        setRangeCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2422,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2436,        this.rangeCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2437,        if (isRangeCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2438,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2440,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2453,        return this.rangeCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2467,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2468,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2470,        this.rangeCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2471,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2472,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2484,        return this.rangeCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2496,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2497,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2499,        this.rangeCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2500,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2501,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2509,        return this.annotations;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2521,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2522,"            throw new IllegalArgumentException(""Null 'annotation' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2524,        this.annotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2525,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2526,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2539,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2540,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2542,        boolean removed = this.annotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2543,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2544,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2546,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2554,        this.annotations.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2555,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2556,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2571,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2572,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2576,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2577,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2578,                space.ensureAtLeast(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2580,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2583,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2584,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2586,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2592,            RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2594,            if (this.drawSharedDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2595,"                space = getDomainAxis().reserveSpace(g2, this, plotArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2600,            for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2601,                Axis xAxis = (Axis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2602,                if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2603,                    RectangleEdge edge = getDomainAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2604,"                    space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2609,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2626,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2627,            space = new AxisSpace(); ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2631,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2632,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2633,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2635,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2638,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2639,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2641,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2647,            for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2648,                Axis yAxis = (Axis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2649,                if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2650,                    RectangleEdge edge = getRangeAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2651,"                    space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2655,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2669,        AxisSpace space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2670,"        space = calculateRangeAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2671,"        space = calculateDomainAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2672,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2697,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2698,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2699,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2700,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2704,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2708,            state = new PlotRenderingInfo(null);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2710,        state.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2713,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2714,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2717,"        AxisSpace space = calculateAxisSpace(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2718,"        Rectangle2D dataArea = space.shrink(area, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2719,        this.axisOffset.trim(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2721,        state.setDataArea(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2725,        if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2726,"            getRenderer().drawBackground(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2729,"            drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2732,"        Map axisStateMap = drawAxes(g2, area, dataArea, state);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2735,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2736,        g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2738,"        drawDomainGridlines(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2740,        AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2741,        if (rangeAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2742,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2743,                rangeAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2747,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2748,"            drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2752,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2753,"            drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2755,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2756,"            drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2760,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2763,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2764,        g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2767,        DatasetRenderingOrder order = getDatasetRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2768,        if (order == DatasetRenderingOrder.FORWARD) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2771,            int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2772,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2773,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2774,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2775,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2776,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2777,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2782,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2783,"                foundData = render(g2, dataArea, i, state) || foundData;",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2787,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2788,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2789,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2790,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2791,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2792,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2796,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2800,            int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2801,            for (int i = datasetCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2802,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2803,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2804,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2805,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2806,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2811,            for (int i = this.datasets.size() - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2812,"                foundData = render(g2, dataArea, i, state) || foundData;   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2816,            for (int i = datasetCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2817,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2818,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2819,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2820,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2821,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2828,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2829,"            drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2831,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2832,"            drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2836,"        drawAnnotations(g2, dataArea, state);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2838,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2839,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2841,        if (!foundData) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2842,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2846,        if (isRangeCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2848,"            drawRangeCrosshair(g2, dataArea, getOrientation(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2854,        if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2855,"            getRenderer().drawOutline(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2858,"            drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2861,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2874,"        fillBackground(g2, area, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2875,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2876,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2894,        AxisCollection axisCollection = new AxisCollection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2897,        for (int index = 0; index < this.domainAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2898,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2899,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2900,"                axisCollection.add(xAxis, getDomainAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2905,        for (int index = 0; index < this.rangeAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2906,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2907,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2908,"                axisCollection.add(yAxis, getRangeAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2912,        Map axisStateMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2915,        double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2917,        Iterator iterator = axisCollection.getAxesAtTop().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2918,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2919,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2920,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2921,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2923,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2924,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2926,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2929,        cursor = dataArea.getMaxY() ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2931,        iterator = axisCollection.getAxesAtBottom().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2932,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2933,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2934,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2935,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2937,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2938,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2940,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2943,        cursor = dataArea.getMinX() ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2945,        iterator = axisCollection.getAxesAtLeft().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2946,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2947,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2948,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2949,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2951,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2952,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2954,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2957,        cursor = dataArea.getMaxX() ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2959,        iterator = axisCollection.getAxesAtRight().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2960,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2961,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2962,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2963,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2965,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2966,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2968,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2970,        return axisStateMap;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2988,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2989,        CategoryDataset currentDataset = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2990,        CategoryItemRenderer renderer = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2991,        CategoryAxis domainAxis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2992,        ValueAxis rangeAxis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2993,        boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2994,        if (hasData && renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2996,            foundData = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2997,"            CategoryItemRendererState state = renderer.initialise(g2, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,2999,            int columnCount = currentDataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3000,            int rowCount = currentDataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3001,            int passCount = renderer.getPassCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3002,            for (int pass = 0; pass < passCount; pass++) {            ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3003,                if (this.columnRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3004,                    for (int column = 0; column < columnCount; column++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3005,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3006,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3007,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3013,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3014,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3022,                    for (int column = columnCount - 1; column >= 0; column--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3023,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3024,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3025,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3031,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3032,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3041,        return foundData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3056,        if (isDomainGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3057,            CategoryAnchor anchor = getDomainGridlinePosition();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3058,            RectangleEdge domainAxisEdge = getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3059,            Stroke gridStroke = getDomainGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3060,            Paint gridPaint = getDomainGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3061,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3063,                CategoryDataset data = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3064,                if (data != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3065,                    CategoryAxis axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3066,                    if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3067,                        int columnCount = data.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3068,                        for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3069,                            double xx = axis.getCategoryJava2DCoordinate(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3072,                            CategoryItemRenderer renderer1 = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3073,                            if (renderer1 != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3074,"                                renderer1.drawDomainGridline(g2, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3082,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3096,        if (isRangeGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3097,            Stroke gridStroke = getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3098,            Paint gridPaint = getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3099,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3100,                ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3101,                if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3102,                    Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3103,                    while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3104,                        ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3105,                        CategoryItemRenderer renderer1 = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3106,                        if (renderer1 != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3107,"                            renderer1.drawRangeGridline(g2, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3110,                    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3114,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3126,        Iterator iterator = getAnnotations().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3127,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3128,            CategoryAnnotation annotation ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3130,"            annotation.draw(g2, this, dataArea, getDomainAxis(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3132,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3134,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3150,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3151,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3152,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3155,"        Collection markers = getDomainMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3156,        CategoryAxis axis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3157,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3158,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3159,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3160,                CategoryMarker marker = (CategoryMarker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3161,"                r.drawDomainMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3162,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3165,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3181,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3182,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3183,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3186,"        Collection markers = getRangeMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3187,        ValueAxis axis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3188,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3189,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3190,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3191,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3192,"                r.drawRangeMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3193,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3196,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3211,"        double java2D = getRangeAxis().valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3213,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3214,        if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3215,"            line = new Line2D.Double(java2D, dataArea.getMinY(), java2D, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3218,        else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3219,"            line = new Line2D.Double(dataArea.getMinX(), java2D, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3222,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3223,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3224,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3226,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3245,        if (!axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3246,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3248,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3249,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3250,"            double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3252,"            line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3254,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3256,"            double yy = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3258,"            line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3261,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3262,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3263,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3265,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3278,        Range result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3279,        List mappedDatasets = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3281,        int rangeIndex = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3282,        if (rangeIndex >= 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3283,            mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3285,        else if (axis == getRangeAxis()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3286,            mappedDatasets.addAll(datasetsMappedToRangeAxis(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3291,        Iterator iterator = mappedDatasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3292,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3293,            CategoryDataset d = (CategoryDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3294,            CategoryItemRenderer r = getRendererForDataset(d);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3295,            if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3296,"                result = Range.combine(result, r.findRangeBounds(d));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3298,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3299,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3314,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3315,        for (int datasetIndex = 0; datasetIndex < this.datasets.size(); ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3317,            Object dataset = this.datasets.get(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3318,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3319,                Integer m = (Integer) this.datasetToDomainAxisMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3321,                if (m == null) {  // a dataset with no mapping is assigned to ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3323,                    if (axisIndex == 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3324,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3328,                    if (m.intValue() == axisIndex) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3329,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3316,                datasetIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3334,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3346,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3347,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3348,            Object dataset = this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3349,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3350,                Integer m = (Integer) this.datasetToRangeAxisMap.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3351,                if (m == null) {  // a dataset with no mapping is assigned to ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3353,                    if (index == 0) { ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3354,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3358,                    if (m.intValue() == index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3359,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3364,        return result;    ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3376,        return this.weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3387,        this.weight = weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3389,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3399,        return this.fixedDomainAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3410,        this.fixedDomainAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3412,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3422,        return this.fixedRangeAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3433,        this.fixedRangeAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3435,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3445,        List result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3446,        if (getDataset() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3447,            result = Collections.unmodifiableList(getDataset().getColumnKeys());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3449,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3463,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3464,        int axisIndex = this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3465,        List datasets = datasetsMappedToDomainAxis(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3466,        Iterator iterator = datasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3467,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3468,            CategoryDataset dataset = (CategoryDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3470,            for (int i = 0; i < dataset.getColumnCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3471,                Comparable category = dataset.getColumnKey(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3472,                if (!result.contains(category)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3473,                    result.add(category);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3476,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3477,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3489,        return this.drawSharedDomainAxis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3501,        this.drawSharedDomainAxis = draw;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3502,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3503,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3514,        return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3525,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3539,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3553,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3571,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3583,"        zoomRangeAxes(factor, state, source, false);    ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3584,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3603,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3604,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3605,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3606,                if (useAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3609,                    double sourceY = source.getY();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3610,                    if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3611,                        sourceY = source.getX();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3613,"                    double anchorY = rangeAxis.java2DToValue(sourceY, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3615,"                    rangeAxis.resizeRange(factor, anchorY);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3616,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3618,                    rangeAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3622,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3634,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3635,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3636,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3637,"                rangeAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3640,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3650,        return this.anchorValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3662,"        setAnchorValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3663,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3675,        this.anchorValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3676,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3677,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3679,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3690,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3691,            return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3693,        if (!(obj instanceof CategoryPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3694,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3696,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3697,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3700,        CategoryPlot that = (CategoryPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3702,        if (this.orientation != that.orientation) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3703,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3705,"        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3706,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3708,        if (!this.domainAxes.equals(that.domainAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3709,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3711,        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3712,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3714,        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3715,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3717,        if (!this.rangeAxes.equals(that.rangeAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3718,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3720,        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3721,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3723,"        if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3725,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3727,"        if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3729,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3731,"        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3732,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3734,        if (this.renderingOrder != that.renderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3735,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3737,        if (this.columnRenderingOrder != that.columnRenderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3738,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3740,        if (this.rowRenderingOrder != that.rowRenderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3741,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3743,        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3744,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3746,        if (this.domainGridlinePosition != that.domainGridlinePosition) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3747,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3749,"        if (!ObjectUtilities.equal(this.domainGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3751,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3753,"        if (!PaintUtilities.equal(this.domainGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3755,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3757,        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3758,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3760,"        if (!ObjectUtilities.equal(this.rangeGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3762,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3764,"        if (!PaintUtilities.equal(this.rangeGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3766,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3768,        if (this.anchorValue != that.anchorValue) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3769,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3771,        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3772,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3774,        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3775,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3777,"        if (!ObjectUtilities.equal(this.rangeCrosshairStroke, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3779,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3781,"        if (!PaintUtilities.equal(this.rangeCrosshairPaint, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3783,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3785,        if (this.rangeCrosshairLockedOnData ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3787,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3789,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3791,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3793,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3795,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3797,"        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3798,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3800,        if (this.weight != that.weight) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3801,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3803,"        if (!ObjectUtilities.equal(this.fixedDomainAxisSpace, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3805,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3807,"        if (!ObjectUtilities.equal(this.fixedRangeAxisSpace, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3809,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3812,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3825,        CategoryPlot clone = (CategoryPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3827,        clone.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3828,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3829,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3830,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3831,                CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3832,"                clone.setDomainAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3835,        clone.domainAxisLocations ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3838,        clone.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3839,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3840,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3841,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3842,                ValueAxis clonedAxis = (ValueAxis) yAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3843,"                clone.setRangeAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3846,        clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3848,        clone.datasets = (ObjectList) this.datasets.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3849,        for (int i = 0; i < clone.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3850,            CategoryDataset dataset = clone.getDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3851,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3852,                dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3855,        clone.datasetToDomainAxisMap ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3857,        clone.datasetToRangeAxisMap ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3859,        clone.renderers = (ObjectList) this.renderers.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3860,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3861,            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3864,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3865,            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3869,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3881,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3882,"        SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3883,"        SerialUtilities.writePaint(this.domainGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3884,"        SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3885,"        SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3886,"        SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3887,"        SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3888,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3901,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3902,        this.domainGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3903,        this.domainGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3904,        this.rangeGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3905,        this.rangeGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3906,        this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3907,        this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3909,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3910,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3911,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3912,                xAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3913,                xAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3916,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3917,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3918,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3919,                yAxis.setPlot(this);   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3920,                yAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3923,        int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3924,        for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3925,            Dataset dataset = (Dataset) this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3926,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3927,                dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3930,        int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3931,        for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3932,            CategoryItemRenderer renderer ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3934,            if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3935,                renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,15,3939,    },0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,68,        super();,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,69,        this.value = value;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,70,    },0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,80,"        this(value, paint, stroke, paint, stroke, 1.0f);",0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,81,    },0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,95,"        super(paint, stroke, outlinePaint, outlineStroke, alpha);",0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,96,        this.value = value;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,97,    },0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,107,        return this.value;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,121,        this.value = value;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,122,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,123,    },0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,141,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,142,            return true;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,144,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,145,            return false;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,147,        if (!(obj instanceof ValueMarker)) {,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,148,            return false;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,150,        ValueMarker that = (ValueMarker) obj;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,151,        if (this.value != that.value) {,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,152,            return false;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,15,154,        return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,189,        this(null);    ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,190,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,199,        super(label);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,201,        this.lowerMargin = DEFAULT_AXIS_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,202,        this.upperMargin = DEFAULT_AXIS_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,203,        this.categoryMargin = DEFAULT_CATEGORY_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,204,        this.maximumCategoryLabelLines = 1;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,205,        this.maximumCategoryLabelWidthRatio = 0.0f;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,207,        setTickMarksVisible(false);  // not supported by this axis type yet,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,209,        this.categoryLabelPositionOffset = 4;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,210,        this.categoryLabelPositions = CategoryLabelPositions.STANDARD;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,211,        this.tickLabelFontMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,212,        this.tickLabelPaintMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,213,        this.categoryLabelToolTips = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,215,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,226,        return this.lowerMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,239,        this.lowerMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,240,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,241,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,252,        return this.upperMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,265,        this.upperMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,266,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,267,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,277,        return this.categoryMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,291,        this.categoryMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,292,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,293,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,303,        return this.maximumCategoryLabelLines;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,315,        this.maximumCategoryLabelLines = lines;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,316,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,317,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,327,        return this.maximumCategoryLabelWidthRatio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,339,        this.maximumCategoryLabelWidthRatio = ratio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,340,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,341,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,352,        return this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,364,        this.categoryLabelPositionOffset = offset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,365,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,366,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,377,        return this.categoryLabelPositions;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,389,        if (positions == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,390,"            throw new IllegalArgumentException(""Null 'positions' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,392,        this.categoryLabelPositions = positions;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,393,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,394,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,406,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,407,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,409,        Font result = (Font) this.tickLabelFontMap.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,411,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,412,            result = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,414,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,427,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,428,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,430,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,431,            this.tickLabelFontMap.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,434,"            this.tickLabelFontMap.put(category, font);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,436,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,437,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,449,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,450,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,452,        Paint result = (Paint) this.tickLabelPaintMap.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,454,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,455,            result = getTickLabelPaint();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,457,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,470,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,471,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,473,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,474,            this.tickLabelPaintMap.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,477,"            this.tickLabelPaintMap.put(category, paint);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,479,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,480,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,492,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,493,"            throw new IllegalArgumentException(""Null 'category' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,495,"        this.categoryLabelToolTips.put(category, tooltip);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,496,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,497,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,511,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,512,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,514,        return (String) this.categoryLabelToolTips.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,527,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,528,"            throw new IllegalArgumentException(""Null 'category' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,530,        this.categoryLabelToolTips.remove(category);   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,531,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,532,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,542,        this.categoryLabelToolTips.clear();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,543,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,544,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,563,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,564,        if (anchor == CategoryAnchor.START) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,565,"            result = getCategoryStart(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,567,        else if (anchor == CategoryAnchor.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,568,"            result = getCategoryMiddle(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,570,        else if (anchor == CategoryAnchor.END) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,571,"            result = getCategoryEnd(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,573,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,594,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,595,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,596,            result = area.getX() + area.getWidth() * getLowerMargin();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,598,        else if ((edge == RectangleEdge.LEFT) ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,600,            result = area.getMinY() + area.getHeight() * getLowerMargin();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,603,"        double categorySize = calculateCategorySize(categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,604,"        double categoryGapWidth = calculateCategoryGapSize(categoryCount, area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,607,        result = result + category * (categorySize + categoryGapWidth);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,608,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,628,"        return getCategoryStart(category, categoryCount, area, edge)",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,649,"        return getCategoryStart(category, categoryCount, area, edge)",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,673,        int categoryIndex = dataset.getColumnIndex(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,674,        int categoryCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,675,        int seriesIndex = dataset.getRowIndex(seriesKey);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,676,        int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,677,"        double start = getCategoryStart(categoryIndex, categoryCount, area, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,679,"        double end = getCategoryEnd(categoryIndex, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,680,        double width = end - start;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,681,        if (seriesCount == 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,682,            return start + width / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,685,            double gap = (width * itemMargin) / (seriesCount - 1);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,686,            double ww = (width * (1 - itemMargin)) / seriesCount;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,687,            return start + (seriesIndex * (ww + gap)) + ww / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,704,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,705,        double available = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,707,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,708,            available = area.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,710,        else if ((edge == RectangleEdge.LEFT) ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,712,            available = area.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,714,        if (categoryCount > 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,715,            result = available * (1 - getLowerMargin() - getUpperMargin() ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,717,            result = result / categoryCount;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,720,            result = available * (1 - getLowerMargin() - getUpperMargin());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,722,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,740,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,741,        double available = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,743,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,744,            available = area.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,746,        else if ((edge == RectangleEdge.LEFT) ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,748,            available = area.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,751,        if (categoryCount > 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,752,            result = available * getCategoryMargin() / (categoryCount - 1);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,755,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,775,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,776,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,780,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,781,            return space;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,785,        double tickLabelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,786,        double tickLabelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,787,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,788,            g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,789,            AxisState state = new AxisState();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,791,"            refreshTicks(g2, state, plotArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,792,            if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,793,                tickLabelHeight = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,795,            else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,796,                tickLabelHeight = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,798,            else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,799,                tickLabelWidth = state.getMax(); ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,801,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,802,                tickLabelWidth = state.getMax(); ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,807,"        Rectangle2D labelEnclosure = getLabelEnclosure(g2, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,808,        double labelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,809,        double labelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,810,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,811,            labelHeight = labelEnclosure.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,812,            space.add(labelHeight + tickLabelHeight ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,815,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,816,            labelWidth = labelEnclosure.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,817,            space.add(labelWidth + tickLabelWidth ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,820,        return space;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,829,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,855,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,856,            return new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,859,        if (isAxisLineVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,860,"            drawAxisLine(g2, cursor, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,864,        AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,865,"        state = drawCategoryLabels(g2, plotArea, dataArea, edge, state, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,867,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,870,        return state;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,897,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,898,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,901,        if (isTickLabelsVisible()) {       ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,902,"            List ticks = refreshTicks(g2, state, plotArea, edge);       ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,903,            state.setTicks(ticks);        ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,905,            int categoryIndex = 0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,906,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,907,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,909,                CategoryTick tick = (CategoryTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,910,                g2.setFont(getTickLabelFont(tick.getCategory()));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,911,                g2.setPaint(getTickLabelPaint(tick.getCategory()));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,913,                CategoryLabelPosition position ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,915,                double x0 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,916,                double x1 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,917,                double y0 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,918,                double y1 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,919,                if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,920,"                    x0 = getCategoryStart(categoryIndex, ticks.size(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,922,"                    x1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,924,                    y1 = state.getCursor() - this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,925,                    y0 = y1 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,927,                else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,928,"                    x0 = getCategoryStart(categoryIndex, ticks.size(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,930,"                    x1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,932,                    y0 = state.getCursor() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,933,                    y1 = y0 + state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,935,                else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,936,"                    y0 = getCategoryStart(categoryIndex, ticks.size(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,938,"                    y1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,940,                    x1 = state.getCursor() - this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,941,                    x0 = x1 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,943,                else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,944,"                    y0 = getCategoryStart(categoryIndex, ticks.size(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,946,"                    y1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,948,                    x0 = state.getCursor() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,949,                    x1 = x0 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,951,"                Rectangle2D area = new Rectangle2D.Double(x0, y0, (x1 - x0), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,953,"                Point2D anchorPoint = RectangleAnchor.coordinates(area, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,955,                TextBlock block = tick.getLabel();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,956,"                block.draw(g2, (float) anchorPoint.getX(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,960,"                Shape bounds = block.calculateBounds(g2, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,964,                if (plotState != null && plotState.getOwner() != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,965,                    EntityCollection entities ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,967,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,968,                        String tooltip = getCategoryLabelToolTip(,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,970,"                        entities.add(new CategoryLabelEntity(tick.getCategory(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,974,                categoryIndex++;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,975,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,977,            if (edge.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,978,                double h = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,979,                state.cursorUp(h);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,980,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,981,            else if (edge.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,982,                double h = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,983,                state.cursorDown(h);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,984,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,985,            else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,986,                double w = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,987,                state.cursorLeft(w);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,988,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,989,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,990,                double w = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,991,                state.cursorRight(w);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,994,        return state;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1012,        List ticks = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1015,        if (dataArea.getHeight() <= 0.0 || dataArea.getWidth() < 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1016,            return ticks;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1019,        CategoryPlot plot = (CategoryPlot) getPlot();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1020,        List categories = plot.getCategoriesForAxis(this);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1021,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1023,        if (categories != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1024,            CategoryLabelPosition position ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1026,            float r = this.maximumCategoryLabelWidthRatio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1027,            if (r <= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1028,                r = position.getWidthRatio();   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1031,            float l = 0.0f;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1032,            if (position.getWidthType() == CategoryLabelWidthType.CATEGORY) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1033,"                l = (float) calculateCategorySize(categories.size(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1037,                if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1038,                    l = (float) dataArea.getWidth();   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1041,                    l = (float) dataArea.getHeight();   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1044,            int categoryIndex = 0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1045,            Iterator iterator = categories.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1046,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1047,                Comparable category = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1048,"                TextBlock label = createLabel(category, l * r, edge, g2);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1049,                if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1050,"                    max = Math.max(max, calculateTextBlockHeight(label, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1053,                else if (edge == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1055,"                    max = Math.max(max, calculateTextBlockWidth(label, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1058,"                Tick tick = new CategoryTick(category, label, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1061,                ticks.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1062,                categoryIndex = categoryIndex + 1;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1063,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1065,        state.setMax(max);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1066,        return ticks;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1082,"        TextBlock label = TextUtilities.createTextBlock(category.toString(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1085,        return label; ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1101,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1102,        Size2D size = block.calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1103,"        Rectangle2D box = new Rectangle2D.Double(0.0, 0.0, size.getWidth(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1105,"        Shape rotatedBox = ShapeUtilities.rotateShape(box, position.getAngle(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1107,        double w = rotatedBox.getBounds2D().getWidth() + insets.getTop() ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1109,        return w;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1126,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1127,        Size2D size = block.calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1128,"        Rectangle2D box = new Rectangle2D.Double(0.0, 0.0, size.getWidth(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1130,"        Shape rotatedBox = ShapeUtilities.rotateShape(box, position.getAngle(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1132,        double h = rotatedBox.getBounds2D().getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1134,        return h;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1147,        CategoryAxis clone = (CategoryAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1148,        clone.tickLabelFontMap = new HashMap(this.tickLabelFontMap);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1149,        clone.tickLabelPaintMap = new HashMap(this.tickLabelPaintMap);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1150,        clone.categoryLabelToolTips = new HashMap(this.categoryLabelToolTips);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1151,        return clone;  ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1162,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1163,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1165,        if (!(obj instanceof CategoryAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1166,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1168,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1169,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1171,        CategoryAxis that = (CategoryAxis) obj;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1172,        if (that.lowerMargin != this.lowerMargin) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1173,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1175,        if (that.upperMargin != this.upperMargin) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1176,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1178,        if (that.categoryMargin != this.categoryMargin) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1179,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1181,        if (that.maximumCategoryLabelWidthRatio ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1183,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1185,        if (that.categoryLabelPositionOffset ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1187,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1189,"        if (!ObjectUtilities.equal(that.categoryLabelPositions, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1191,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1193,"        if (!ObjectUtilities.equal(that.categoryLabelToolTips, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1195,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1197,"        if (!ObjectUtilities.equal(this.tickLabelFontMap, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1199,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1201,"        if (!equalPaintMaps(this.tickLabelPaintMap, that.tickLabelPaintMap)) {",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1202,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1204,        return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1213,        if (getLabel() != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1214,            return getLabel().hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1217,            return 0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1229,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1230,"        writePaintMap(this.tickLabelPaintMap, stream);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1231,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1243,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1244,        this.tickLabelPaintMap = readPaintMap(stream);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1245,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1262,        boolean isNull = in.readBoolean();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1263,        if (isNull) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1264,            return null;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1266,        Map result = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1267,        int count = in.readInt();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1268,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1269,            Comparable category = (Comparable) in.readObject();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1270,            Paint paint = SerialUtilities.readPaint(in);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1271,"            result.put(category, paint);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1273,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1289,        if (map == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1290,            out.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1293,            out.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1294,            Set keys = map.keySet();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1295,            int count = keys.size();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1296,            out.writeInt(count);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1297,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1298,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1299,                Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1300,                out.writeObject(key);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1301,"                SerialUtilities.writePaint((Paint) map.get(key), out);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1302,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1304,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1316,        if (map1.size() != map2.size()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1317,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1319,        Set entries = map1.entrySet();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1320,        Iterator iterator = entries.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1321,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1322,            Map.Entry entry = (Map.Entry) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1323,            Paint p1 = (Paint) entry.getValue();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1324,            Paint p2 = (Paint) map2.get(entry.getKey());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1325,"            if (!PaintUtilities.equal(p1, p2)) {",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1326,                return false;  ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1328,        },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,15,1329,        return true;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,134,        return this.name;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,147,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,148,            return true;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,150,        if (!(obj instanceof TextAnchor)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,151,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,154,        TextAnchor order = (TextAnchor) obj;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,155,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,156,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,159,        return true;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,168,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,179,        TextAnchor result = null;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,180,        if (this.equals(TextAnchor.TOP_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,181,            result = TextAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,183,        else if (this.equals(TextAnchor.TOP_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,184,            result = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,186,        else if (this.equals(TextAnchor.TOP_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,187,            result = TextAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,189,        else if (this.equals(TextAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,190,            result = TextAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,192,        else if (this.equals(TextAnchor.BOTTOM_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,193,            result = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,195,        else if (this.equals(TextAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,196,            result = TextAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,198,        else if (this.equals(TextAnchor.BASELINE_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,199,            result = TextAnchor.BASELINE_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,201,        else if (this.equals(TextAnchor.BASELINE_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,202,            result = TextAnchor.BASELINE_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,204,        else if (this.equals(TextAnchor.BASELINE_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,205,            result = TextAnchor.BASELINE_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,207,        else if (this.equals(TextAnchor.CENTER_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,208,            result = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,210,        else if (this.equals(TextAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,211,            result = TextAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,213,        else if (this.equals(TextAnchor.CENTER_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,214,            result = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,216,        else if (this.equals(TextAnchor.HALF_ASCENT_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,217,            result = TextAnchor.HALF_ASCENT_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,219,        else if (this.equals(TextAnchor.HALF_ASCENT_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,220,            result = TextAnchor.HALF_ASCENT_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,222,        else if (this.equals(TextAnchor.HALF_ASCENT_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,223,            result = TextAnchor.HALF_ASCENT_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,15,225,        return result;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,133,        this(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,134,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,142,        super();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,109,    private double limit = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,143,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,144,        PiePlot piePlot = new PiePlot(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,145,        this.pieChart = new JFreeChart(piePlot);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,146,        this.pieChart.removeLegend();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,147,        this.dataExtractOrder = TableOrder.BY_COLUMN;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,148,        this.pieChart.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,149,"        TextTitle seriesTitle = new TextTitle(""Series Title"", ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,151,        seriesTitle.setPosition(RectangleEdge.BOTTOM);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,152,        this.pieChart.setTitle(seriesTitle);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,153,"        this.aggregatedItemsKey = ""Other"";",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,154,        this.aggregatedItemsPaint = Color.lightGray;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,155,        this.sectionPaints = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,156,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,164,        return this.dataset;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,176,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,177,            this.dataset.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,181,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,182,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,183,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,184,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,188,"        datasetChanged(new DatasetChangeEvent(this, dataset));",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,189,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,199,        return this.pieChart;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,211,        if (pieChart == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,212,"            throw new IllegalArgumentException(""Null 'pieChart' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,214,        if (!(pieChart.getPlot() instanceof PiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,215,"            throw new IllegalArgumentException(""The 'pieChart' argument must """,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,218,        this.pieChart = pieChart;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,219,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,220,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,228,        return this.dataExtractOrder;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,238,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,239,"            throw new IllegalArgumentException(""Null 'order' argument"");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,241,        this.dataExtractOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,242,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,243,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,252,        return this.limit;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,262,        this.limit = limit;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,263,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,264,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,275,        return this.aggregatedItemsKey;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,287,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,288,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,290,        this.aggregatedItemsKey = key;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,291,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,292,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,303,        return this.aggregatedItemsPaint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,315,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,316,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,318,        this.aggregatedItemsPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,319,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,320,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,328,"        return ""Multiple Pie Plot"";  ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,350,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,351,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,352,"        drawBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,353,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,356,        if (DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,357,"            drawNoDataMessage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,358,            return;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,361,        int pieCount = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,362,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,363,            pieCount = this.dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,366,            pieCount = this.dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,370,        int displayCols = (int) Math.ceil(Math.sqrt(pieCount));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,371,        int displayRows ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,375,        if (displayCols > displayRows && area.getWidth() < area.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,376,            int temp = displayCols;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,377,            displayCols = displayRows;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,378,            displayRows = temp;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,381,        prefetchSectionPaints();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,383,        int x = (int) area.getX();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,384,        int y = (int) area.getY();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,385,        int width = ((int) area.getWidth()) / displayCols;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,386,        int height = ((int) area.getHeight()) / displayRows;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,387,        int row = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,388,        int column = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,389,        int diff = (displayRows * displayCols) - pieCount;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,390,        int xoffset = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,391,        Rectangle rect = new Rectangle();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,393,        for (int pieIndex = 0; pieIndex < pieCount; pieIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,394,"            rect.setBounds(x + xoffset + (width * column), y + (height * row), ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,397,            String title = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,398,            if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,399,                title = this.dataset.getRowKey(pieIndex).toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,402,                title = this.dataset.getColumnKey(pieIndex).toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,404,            this.pieChart.setTitle(title);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,406,            PieDataset piedataset = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,407,"            PieDataset dd = new CategoryToPieDataset(this.dataset, ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,409,            if (this.limit > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,410,                piedataset = DatasetUtilities.createConsolidatedPieDataset(,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,414,                piedataset = dd;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,416,            PiePlot piePlot = (PiePlot) this.pieChart.getPlot();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,417,            piePlot.setDataset(piedataset);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,418,            piePlot.setPieIndex(pieIndex);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,421,            for (int i = 0; i < piedataset.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,422,                Comparable key = piedataset.getKey(i);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,424,                if (key.equals(this.aggregatedItemsKey)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,425,                    p = this.aggregatedItemsPaint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,428,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,430,"                piePlot.setSectionPaint(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,433,            ChartRenderingInfo subinfo = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,434,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,435,                subinfo = new ChartRenderingInfo();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,437,"            this.pieChart.draw(g2, rect, subinfo);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,438,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,439,                info.getOwner().getEntityCollection().addAll(,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,441,                info.addSubplotInfo(subinfo.getPlotInfo());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,444,            ++column;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,445,            if (column == displayCols) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,446,                column = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,447,                ++row;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,449,                if (row == displayRows - 1 && diff != 0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,450,                    xoffset = (diff * width) / 2;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,455,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,469,        PiePlot piePlot = (PiePlot) getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,471,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,473,            for (int c = 0; c < this.dataset.getColumnCount(); c++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,474,                Comparable key = this.dataset.getColumnKey(c);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,475,                Paint p = piePlot.getSectionPaint(key); ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,476,                if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,477,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,478,                    if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,479,                        p = getDrawingSupplier().getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,482,"                this.sectionPaints.put(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,487,            for (int r = 0; r < this.dataset.getRowCount(); r++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,488,                Comparable key = this.dataset.getRowKey(r);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,489,                Paint p = piePlot.getSectionPaint(key); ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,490,                if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,491,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,492,                    if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,493,                        p = getDrawingSupplier().getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,496,"                this.sectionPaints.put(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,500,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,509,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,511,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,512,            List keys = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,514,            prefetchSectionPaints();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,515,            if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,516,                keys = this.dataset.getColumnKeys();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,518,            else if (this.dataExtractOrder == TableOrder.BY_COLUMN) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,519,                keys = this.dataset.getRowKeys();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,522,            if (keys != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,523,                int section = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,524,                Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,525,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,526,                    Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,527,                    String label = key.toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,528,                    String description = label;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,529,                    Paint paint = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,530,"                    LegendItem item = new LegendItem(label, description, ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,533,                    item.setDataset(getDataset());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,534,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,535,                    section++;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,536,                },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,538,            if (this.limit > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,539,"                result.add(new LegendItem(this.aggregatedItemsKey.toString(), ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,547,        return result;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,560,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,561,            return true;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,563,        if (!(obj instanceof MultiplePiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,564,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,566,        MultiplePiePlot that = (MultiplePiePlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,567,        if (this.dataExtractOrder != that.dataExtractOrder) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,568,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,570,        if (this.limit != that.limit) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,571,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,573,        if (!this.aggregatedItemsKey.equals(that.aggregatedItemsKey)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,574,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,576,"        if (!PaintUtilities.equal(this.aggregatedItemsPaint, ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,578,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,580,"        if (!ObjectUtilities.equal(this.pieChart, that.pieChart)) {",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,581,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,583,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,584,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,586,        return true;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,597,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,598,"        SerialUtilities.writePaint(this.aggregatedItemsPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,599,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,611,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,612,        this.aggregatedItemsPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,613,        this.sectionPaints = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,15,614,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,141,        this(null);   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,142,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,163,        return this.depthFactor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,175,        this.depthFactor = factor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,176,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,177,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,191,        return this.darkerSides;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,208,        this.darkerSides = darker;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,209,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,210,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,235,            info.setPlotArea(plotArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,236,            info.setDataArea(plotArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,273,"            double min = Math.min(linkW, linkH) / 2;",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,274,            linkX = (linkX + linkX + linkW) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,275,            linkY = (linkY + linkY + linkH) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,276,            linkW = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,277,            linkH = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,284,"        Rectangle2D linkAreaXX = new Rectangle2D.Double(linkX, linkY, linkW, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,286,        state.setLinkArea(linkAreaXX);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,299,        double hh = linkW * getLabelLinkMargin();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,300,        double vv = linkH * getLabelLinkMargin();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,301,"        Rectangle2D explodeArea = new Rectangle2D.Double(linkX + hh / 2.0, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,304,        state.setExplodedPieArea(explodeArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,309,        double maximumExplodePercent = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,310,        double percent = maximumExplodePercent / (1.0 + maximumExplodePercent);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,312,        double h1 = explodeArea.getWidth() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,313,        double v1 = explodeArea.getHeight() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,314,        Rectangle2D pieArea = new Rectangle2D.Double(explodeArea.getX() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,320,        int depth = (int) (pieArea.getHeight() * this.depthFactor);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,321,"        Rectangle2D linkArea = new Rectangle2D.Double(linkX, linkY, linkW, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,323,        state.setLinkArea(linkArea);   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,325,        state.setPieArea(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,326,        state.setPieCenterX(pieArea.getCenterX());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,327,        state.setPieCenterY(pieArea.getCenterY() - depth / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,328,        state.setPieWRadius(pieArea.getWidth() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,329,        state.setPieHRadius((pieArea.getHeight() - depth) / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,332,        PieDataset dataset = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,333,        if (DatasetUtilities.isEmptyOrNull(getDataset())) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,334,"            drawNoDataMessage(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,335,            g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,336,"            drawOutline(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,337,            return;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,341,        if (dataset.getKeys().size() > plotArea.getWidth()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,342,"            String text = ""Too many elements"";",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,343,"            Font sfont = new Font(""dialog"", Font.BOLD, 10);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,344,            g2.setFont(sfont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,345,            FontMetrics fm = g2.getFontMetrics(sfont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,346,            int stringWidth = fm.stringWidth(text);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,348,"            g2.drawString(text, (int) (plotArea.getX() + (plotArea.getWidth() ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,351,            return;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,356,        if (isCircular()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,357,"            double min = Math.min(plotArea.getWidth(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,359,"            plotArea = new Rectangle2D.Double(plotArea.getCenterX() - min, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,363,        List sectionKeys = dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,365,        if (sectionKeys.size() == 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,366,            return;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,370,        double arcX = pieArea.getX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,371,        double arcY = pieArea.getY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,374,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,375,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,378,        double totalValue = DatasetUtilities.calculatePieDatasetTotal(dataset);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,379,        double runningTotal = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,380,        if (depth < 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,381,            return;  // if depth is negative don't draw anything,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,384,        ArrayList arcList = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,390,        Iterator iterator = sectionKeys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,391,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,393,            Comparable currentKey = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,394,            Number dataValue = dataset.getValue(currentKey);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,395,            if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,396,                arcList.add(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,397,                continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,399,            double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,400,            if (value <= 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,401,                arcList.add(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,402,                continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,404,            double startAngle = getStartAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,405,            double direction = getDirection().getFactor();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,406,            double angle1 = startAngle + (direction * (runningTotal * 360)) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,408,            double angle2 = startAngle + (direction * (runningTotal + value) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,410,            if (Math.abs(angle2 - angle1) > getMinimumArcAngleToDraw()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,411,"                arcList.add(new Arc2D.Double(arcX, arcY + depth, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,416,                arcList.add(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,418,            runningTotal += value;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,419,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,421,        Shape oldClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,423,"        Ellipse2D top = new Ellipse2D.Double(pieArea.getX(), pieArea.getY(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,426,"        Ellipse2D bottom = new Ellipse2D.Double(pieArea.getX(), pieArea.getY() ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,429,"        Rectangle2D lower = new Rectangle2D.Double(top.getX(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,433,"        Rectangle2D upper = new Rectangle2D.Double(pieArea.getX(), top.getY(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,436,        Area a = new Area(top);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,437,        a.add(new Area(lower));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,438,        Area b = new Area(bottom);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,439,        b.add(new Area(upper));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,440,        Area pie = new Area(a);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,441,        pie.intersect(b);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,443,        Area front = new Area(pie);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,444,        front.subtract(new Area(top));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,446,        Area back = new Area(pie);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,447,        back.subtract(new Area(bottom));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,452,"        arc = new Arc2D.Double(arcX, arcY + depth, pieArea.getWidth(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,455,        int categoryCount = arcList.size();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,456,        for (int categoryIndex = 0; categoryIndex < categoryCount; ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,458,            arc = (Arc2D.Double) arcList.get(categoryIndex);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,459,            if (arc == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,460,                continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,462,            Comparable key = getSectionKey(categoryIndex);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,463,"            paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,464,            outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,465,            outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,466,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,467,            g2.fill(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,468,            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,469,            g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,470,            g2.draw(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,471,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,473,            Point2D p1 = arc.getStartPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,476,"            xs = new int[] {(int) arc.getCenterX(), (int) arc.getCenterX(),",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,478,"            ys = new int[] {(int) arc.getCenterY(), (int) arc.getCenterY() ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,480,"            Polygon polygon = new Polygon(xs, ys, 4);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,481,            g2.setPaint(java.awt.Color.lightGray);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,482,            g2.fill(polygon);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,483,            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,484,            g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,485,            g2.draw(polygon);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,486,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,457,                 categoryIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,490,        g2.setPaint(Color.gray);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,491,        g2.fill(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,492,        g2.fill(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,495,        int cat = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,496,        iterator = arcList.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,497,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,498,            Arc2D segment = (Arc2D) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,499,            if (segment != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,500,                Comparable key = getSectionKey(cat);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,501,"                paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,502,                outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,503,                outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,504,"                drawSide(g2, pieArea, segment, front, back, paint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,507,            cat++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,508,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,511,        cat = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,512,        iterator = arcList.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,513,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,514,            Arc2D segment = (Arc2D) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,515,            if (segment != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,516,                Comparable key = getSectionKey(cat);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,517,                paint = lookupSectionPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,518,                outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,519,                outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,520,"                drawSide(g2, pieArea, segment, front, back, paint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,523,            cat++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,524,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,526,        g2.setClip(oldClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,530,        for (int sectionIndex = 0; sectionIndex < categoryCount; ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,532,            arc = (Arc2D.Double) arcList.get(sectionIndex);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,533,            if (arc == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,534,                continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,536,"            upperArc = new Arc2D.Double(arcX, arcY, pieArea.getWidth(),",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,540,            Comparable currentKey = (Comparable) sectionKeys.get(sectionIndex);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,541,"            paint = lookupSectionPaint(currentKey, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,542,            outlinePaint = lookupSectionOutlinePaint(currentKey);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,543,            outlineStroke = lookupSectionOutlineStroke(currentKey);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,544,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,545,            g2.fill(upperArc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,546,            g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,547,            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,548,            g2.draw(upperArc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,551,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,552,                EntityCollection entities ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,554,                if (entities != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,555,                    String tip = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,556,                    PieToolTipGenerator tipster = getToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,557,                    if (tipster != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,559,"                        tip = tipster.generateToolTip(dataset, currentKey);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,561,                    String url = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,562,                    if (getURLGenerator() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,563,"                        url = getURLGenerator().generateURL(dataset, currentKey,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,566,                    PieSectionEntity entity = new PieSectionEntity(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,569,                    entities.add(entity);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,572,            List keys = dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,573,            Rectangle2D adjustedPlotArea = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,577,            if (getSimpleLabels()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,578,"                drawSimpleLabels(g2, keys, totalValue, adjustedPlotArea, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,582,"                drawLabels(g2, keys, totalValue, adjustedPlotArea, linkArea, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,531,                 sectionIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,587,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,588,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,589,"        drawOutline(g2, originalPlotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,591,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,618,        if (getDarkerSides()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,619,            if (paint instanceof Color) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,620,                Color c = (Color) paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,621,                c = c.darker();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,622,                paint = c;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,626,        double start = arc.getAngleStart();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,627,        double extent = arc.getAngleExtent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,628,        double end = start + extent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,630,        g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,633,        if (extent < 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,635,            if (isAngleAtFront(start)) {  // start at front,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,637,                if (!isAngleAtBack(end)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,639,                    if (extent > -180.0) {  // the segment is entirely at the ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,641,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,642,                            Area side = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,647,                            side.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,648,                            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,649,                            g2.fill(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,650,                            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,651,                            g2.draw(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,652,                        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,657,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,661,                        side1.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,663,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,668,                        side2.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,669,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,670,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,671,                            g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,672,                            g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,675,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,676,                            g2.fill(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,679,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,680,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,681,                            g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,682,                            g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,685,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,686,                            g2.draw(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,689,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,694,                    if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,695,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,699,                        side2.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,700,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,701,                        g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,702,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,703,                        g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,706,                    if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,707,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,711,                        side1.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,712,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,713,                        g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,714,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,715,                        g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,716,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,722,                if (!isAngleAtFront(end)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,723,                    if (extent > -180.0) {  // whole segment stays at the back,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,724,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,725,                            Area side = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,730,                            side.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,731,                            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,732,                            g2.fill(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,733,                            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,734,                            g2.draw(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,735,                        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,739,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,743,                        side1.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,745,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,750,                        side2.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,752,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,753,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,754,                            g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,755,                            g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,758,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,759,                            g2.fill(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,762,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,763,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,764,                            g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,765,                            g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,768,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,769,                            g2.draw(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,772,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,776,                    if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,777,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,781,                        side1.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,782,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,783,                        g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,784,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,785,                        g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,788,                    if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,789,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,793,                        side2.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,794,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,795,                        g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,796,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,797,                        g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,798,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,803,        else if (extent > 0.0) {  // the pie sections are arranged ANTICLOCKWISE,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,805,            if (isAngleAtFront(start)) {  // segment starts at the front,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,807,                if (!isAngleAtBack(end)) {  // and finishes at the front,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,809,                    if (extent < 180.0) {  // segment only occupies the front,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,810,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,811,                            Area side = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,816,                            side.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,817,                            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,818,                            g2.fill(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,819,                            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,820,                            g2.draw(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,821,                        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,824,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,828,                        side1.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,830,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,834,                        side2.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,836,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,837,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,838,                            g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,839,                            g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,842,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,843,                            g2.fill(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,846,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,847,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,848,                            g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,849,                            g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,852,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,853,                            g2.draw(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,856,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,859,                    if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,860,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,864,                        side2.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,865,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,866,                        g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,867,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,868,                        g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,871,                    if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,872,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,876,                        side1.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,877,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,878,                        g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,879,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,880,                        g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,881,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,886,                if (!isAngleAtFront(end)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,887,                    if (extent < 180.0) {  // and finishes at back,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,888,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,889,                            Area side = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,894,                            side.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,895,                            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,896,                            g2.fill(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,897,                            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,898,                            g2.draw(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,899,                        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,903,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,907,                        side1.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,909,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,913,                        side2.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,915,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,916,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,917,                            g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,918,                            g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,921,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,922,                            g2.fill(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,925,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,926,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,927,                            g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,928,                            g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,931,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,932,                            g2.draw(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,935,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,939,                    if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,940,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,944,                        side1.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,945,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,946,                        g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,947,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,948,                        g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,951,                    if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,952,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,956,                        side2.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,957,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,958,                        g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,959,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,960,                        g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,967,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,975,"        return localizationResources.getString(""Pie_3D_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,988,        return (Math.sin(Math.toRadians(angle)) < 0.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1001,        return (Math.sin(Math.toRadians(angle)) > 0.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1012,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1013,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1015,        if (!(obj instanceof PiePlot3D)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1016,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1018,        PiePlot3D that = (PiePlot3D) obj;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1019,        if (this.depthFactor != that.depthFactor) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1020,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1022,        if (this.darkerSides != that.darkerSides) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1023,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,15,1025,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,171,                                  Shape[] shapeSequence) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,173,        this.paintSequence = paintSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,174,        this.fillPaintSequence = DEFAULT_FILL_PAINT_SEQUENCE;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,175,        this.outlinePaintSequence = outlinePaintSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,176,        this.strokeSequence = strokeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,177,        this.outlineStrokeSequence = outlineStrokeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,178,        this.shapeSequence = shapeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,180,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,213,        Paint result ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,215,        this.paintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,216,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,225,        Paint result = this.outlinePaintSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,227,        this.outlinePaintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,228,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,239,        Paint result = this.fillPaintSequence[this.fillPaintIndex ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,241,        this.fillPaintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,242,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,251,        Stroke result = this.strokeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,253,        this.strokeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,254,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,263,        Stroke result = this.outlineStrokeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,265,        this.outlineStrokeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,266,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,275,        Shape result = this.shapeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,277,        this.shapeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,278,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,348,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,349,            return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,352,        if (!(obj instanceof DefaultDrawingSupplier)) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,353,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,356,        DefaultDrawingSupplier that = (DefaultDrawingSupplier) obj;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,358,"        if (!Arrays.equals(this.paintSequence, that.paintSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,359,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,361,        if (this.paintIndex != that.paintIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,362,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,364,"        if (!Arrays.equals(this.outlinePaintSequence, ",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,366,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,368,        if (this.outlinePaintIndex != that.outlinePaintIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,369,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,371,"        if (!Arrays.equals(this.strokeSequence, that.strokeSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,372,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,374,        if (this.strokeIndex != that.strokeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,375,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,377,"        if (!Arrays.equals(this.outlineStrokeSequence, ",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,379,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,381,        if (this.outlineStrokeIndex != that.outlineStrokeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,382,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,384,"        if (!equalShapes(this.shapeSequence, that.shapeSequence)) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,385,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,387,        if (this.shapeIndex != that.shapeIndex) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,388,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,390,        return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,403,        if (s1 == null) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,404,            return s2 == null;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,406,        if (s2 == null) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,407,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,409,        if (s1.length != s2.length) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,410,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,412,        for (int i = 0; i < s1.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,413,"            if (!ShapeUtilities.equal(s1[i], s2[i])) {",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,414,                return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,417,        return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,428,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,430,        int paintCount = this.paintSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,431,        stream.writeInt(paintCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,432,        for (int i = 0; i < paintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,433,"            SerialUtilities.writePaint(this.paintSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,436,        int outlinePaintCount = this.outlinePaintSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,437,        stream.writeInt(outlinePaintCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,438,        for (int i = 0; i < outlinePaintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,439,"            SerialUtilities.writePaint(this.outlinePaintSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,442,        int strokeCount = this.strokeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,443,        stream.writeInt(strokeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,444,        for (int i = 0; i < strokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,445,"            SerialUtilities.writeStroke(this.strokeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,448,        int outlineStrokeCount = this.outlineStrokeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,449,        stream.writeInt(outlineStrokeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,450,        for (int i = 0; i < outlineStrokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,451,"            SerialUtilities.writeStroke(this.outlineStrokeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,454,        int shapeCount = this.shapeSequence.length;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,455,        stream.writeInt(shapeCount);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,456,        for (int i = 0; i < shapeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,457,"            SerialUtilities.writeShape(this.shapeSequence[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,460,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,472,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,474,        int paintCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,475,        this.paintSequence = new Paint[paintCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,476,        for (int i = 0; i < paintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,477,            this.paintSequence[i] = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,480,        int outlinePaintCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,481,        this.outlinePaintSequence = new Paint[outlinePaintCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,482,        for (int i = 0; i < outlinePaintCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,483,            this.outlinePaintSequence[i] = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,486,        int strokeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,487,        this.strokeSequence = new Stroke[strokeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,488,        for (int i = 0; i < strokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,489,            this.strokeSequence[i] = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,492,        int outlineStrokeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,493,        this.outlineStrokeSequence = new Stroke[outlineStrokeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,494,        for (int i = 0; i < outlineStrokeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,495,            this.outlineStrokeSequence[i] = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,498,        int shapeCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,499,        this.shapeSequence = new Shape[shapeCount];,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,500,        for (int i = 0; i < shapeCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,501,            this.shapeSequence[i] = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,504,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,544,        DefaultDrawingSupplier clone = (DefaultDrawingSupplier) super.clone(); ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,15,545,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,125,        this(null);   ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,126,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,134,"        this(dataset, null);",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,135,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,145,        super();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,147,        this.orientation = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,149,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,150,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,151,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,154,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,155,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,156,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,157,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,160,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,82,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,90,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.lightGray;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,96,    public static final Stroke DEFAULT_CROSSHAIR_STROKE ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,100,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,103,    protected static ResourceBundle localizationResources = ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,168,"        return (""WMAP_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,177,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,189,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,190,            this.dataset.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,194,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,195,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,196,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,197,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,201,"        datasetChanged(new DatasetChangeEvent(this, dataset));",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,202,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,213,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,214,            this.renderer.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,217,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,218,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,219,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,222,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,224,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,240,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,241,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,242,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,243,            return;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,247,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,248,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,252,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,253,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,255,"        drawChipGrid(g2, area);       ",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,256,"        drawWaferEdge(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,258,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,268,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,269,        g2.setClip(getWaferEdge(plotArea));,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,270,        Rectangle2D chip = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,271,        int xchips = 35;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,272,        int ychips = 20;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,273,        double space = 1d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,274,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,275,            xchips = this.dataset.getMaxChipX() + 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,276,            ychips = this.dataset.getMaxChipY() + 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,277,            space = this.dataset.getChipSpace();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,279,        double startX = plotArea.getX();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,280,        double startY = plotArea.getY();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,281,        double chipWidth = 1d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,282,        double chipHeight = 1d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,283,        if (plotArea.getWidth() != plotArea.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,284,            double major = 0d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,285,            double minor = 0d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,286,            if (plotArea.getWidth() > plotArea.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,287,                major = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,288,                minor = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,291,                major = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,292,                minor = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,295,            if (plotArea.getWidth() == minor) { // x is minor,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,296,                startY += (major - minor) / 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,297,                chipWidth = (plotArea.getWidth() - (space * xchips - 1)) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,299,                chipHeight = (plotArea.getWidth() - (space * ychips - 1)) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,303,                startX += (major - minor) / 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,304,                chipWidth = (plotArea.getHeight() - (space * xchips - 1)) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,306,                chipHeight = (plotArea.getHeight() - (space * ychips - 1)) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,311,        for (int x = 1; x <= xchips; x++) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,312,            double upperLeftX = (startX - chipWidth) + (chipWidth * x) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,314,            for (int y = 1; y <= ychips; y++) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,315,                double upperLeftY = (startY - chipHeight) + (chipHeight * y) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,317,"                chip.setFrame(upperLeftX, upperLeftY, chipWidth, chipHeight);",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,318,                g2.setColor(Color.white);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,319,"                if (this.dataset.getChipValue(x - 1, ychips - y - 1) != null) {",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,320,                    g2.setPaint(,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,326,                g2.fill(chip);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,327,                g2.setColor(Color.lightGray);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,328,                g2.draw(chip);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,331,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,332,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,342,        Ellipse2D edge = new Ellipse2D.Double();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,343,        double diameter = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,344,        double upperLeftX = plotArea.getX();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,345,        double upperLeftY = plotArea.getY();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,347,        if (plotArea.getWidth() != plotArea.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,348,            double major = 0d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,349,            double minor = 0d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,350,            if (plotArea.getWidth() > plotArea.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,351,                major = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,352,                minor = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,355,                major = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,356,                minor = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,359,            diameter = minor;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,361,            if (plotArea.getWidth() == minor) { // x is minor,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,362,                upperLeftY = plotArea.getY() + (major - minor) / 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,365,                upperLeftX = plotArea.getX() + (major - minor) / 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,368,"        edge.setFrame(upperLeftX, upperLeftY, diameter, diameter); ",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,369,        return edge;        ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,380,        Ellipse2D waferEdge = getWaferEdge(plotArea);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,381,        g2.setColor(Color.black);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,382,        g2.draw(waferEdge);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,386,        Arc2D notch = null;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,387,        Rectangle2D waferFrame = waferEdge.getFrame();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,388,        double notchDiameter = waferFrame.getWidth() * 0.04;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,389,        if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,390,            Rectangle2D notchFrame = ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,397,"            notch = new Arc2D.Double(notchFrame, 90d, 180d, Arc2D.OPEN);",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,398,        },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,400,            Rectangle2D notchFrame = ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,407,"            notch = new Arc2D.Double(notchFrame, 0d, 180d, Arc2D.OPEN);        ",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,409,        g2.setColor(Color.white);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,410,        g2.fill(notch);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,411,        g2.setColor(Color.black);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,412,        g2.draw(notch);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,414,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,422,        return this.renderer.getLegendCollection();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,431,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,15,432,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,191,"        this(null, null, null);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,192,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,205,        super();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,158,    private boolean angleLabelsVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,161,"    private Font angleLabelFont = new Font(""SansSerif"", Font.PLAIN, 12);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,164,    private transient Paint angleLabelPaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,185,    private List cornerTextItems = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,207,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,208,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,209,            this.dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,211,        this.angleTickUnit = new NumberTickUnit(DEFAULT_ANGLE_TICK_UNIT_SIZE);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,213,        this.axis = radiusAxis;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,214,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,215,            this.axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,216,            this.axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,219,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,220,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,221,            this.renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,222,            this.renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,225,        this.angleGridlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,226,        this.angleGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,227,        this.angleGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,229,        this.radiusGridlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,230,        this.radiusGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,231,        this.radiusGridlinePaint = DEFAULT_GRIDLINE_PAINT;      ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,232,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,124,    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,129,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,132,    protected static ResourceBundle localizationResources ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,243,        if (text == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,244,"            throw new IllegalArgumentException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,246,        this.cornerTextItems.add(text);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,247,        this.notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,248,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,259,        boolean removed = this.cornerTextItems.remove(text);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,260,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,261,            this.notifyListeners(new PlotChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,263,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,273,        if (this.cornerTextItems.size() > 0) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,274,            this.cornerTextItems.clear();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,275,            this.notifyListeners(new PlotChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,277,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,285,"       return PolarPlot.localizationResources.getString(""Polar_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,296,        return this.axis;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,306,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,307,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,311,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,312,            this.axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,315,        this.axis = axis;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,316,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,317,            this.axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,318,            this.axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,320,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,321,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,331,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,345,        XYDataset existing = this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,346,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,347,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,351,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,352,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,353,            setDatasetGroup(this.dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,354,            this.dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,358,"        DatasetChangeEvent event = new DatasetChangeEvent(this, this.dataset);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,359,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,360,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,370,        return this.renderer;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,384,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,385,            this.renderer.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,388,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,389,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,390,            this.renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,393,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,394,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,405,        return this.angleTickUnit;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,417,    	if (unit == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,418,"    		throw new IllegalArgumentException(""Null 'unit' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,420,        this.angleTickUnit = unit;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,421,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,422,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,432,        return this.angleLabelsVisible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,444,        if (this.angleLabelsVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,445,            this.angleLabelsVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,446,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,448,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,458,        return this.angleLabelFont;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,470,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,471,"            throw new IllegalArgumentException(""Null 'font' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,473,        this.angleLabelFont = font;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,474,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,475,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,485,        return this.angleLabelPaint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,495,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,496,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,498,        this.angleLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,499,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,500,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,511,        return this.angleGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,526,        if (this.angleGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,527,            this.angleGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,528,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,530,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,541,        return this.angleGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,555,        this.angleGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,556,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,557,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,568,        return this.angleGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,581,        this.angleGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,582,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,583,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,594,        return this.radiusGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,609,        if (this.radiusGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,610,            this.radiusGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,611,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,613,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,624,        return this.radiusGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,638,        this.radiusGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,639,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,640,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,651,        return this.radiusGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,665,        this.radiusGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,666,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,667,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,677,        List ticks = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,678,        for (double currentTickVal = 0.0; currentTickVal < 360.0; ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,680,"            NumberTick tick = new NumberTick(Double.valueOf(currentTickVal),",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,683,            ticks.add(tick);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,679,                currentTickVal += this.angleTickUnit.getSize()) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,685,        return ticks;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,715,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,716,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,717,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,718,            return;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,722,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,723,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,727,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,728,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,730,        Rectangle2D dataArea = area;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,731,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,732,            info.setDataArea(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,736,"        drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,737,"        double h = Math.min(dataArea.getWidth() / 2.0, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,739,"        Rectangle2D quadrant = new Rectangle2D.Double(dataArea.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,741,"        AxisState state = drawAxis(g2, area, quadrant);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,742,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,743,            Shape originalClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,744,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,746,            g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,747,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,750,            this.angleTicks = refreshAngleTicks();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,751,"            drawGridlines(g2, dataArea, this.angleTicks, state.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,754,"            render(g2, dataArea, info);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,756,            g2.setClip(originalClip);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,757,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,759,"        drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,760,"        drawCornerTextItems(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,761,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,770,        if (this.cornerTextItems.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,771,            return;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,774,        g2.setColor(Color.black);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,775,        double width = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,776,        double height = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,777,        for (Iterator it = this.cornerTextItems.iterator(); it.hasNext();) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,778,            String msg = (String) it.next();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,779,            FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,780,"            Rectangle2D bounds = TextUtilities.getTextBounds(msg, g2, fm);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,781,"            width = Math.max(width, bounds.getWidth());",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,782,            height += bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,783,        },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,785,        double xadj = ANNOTATION_MARGIN * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,786,        double yadj = ANNOTATION_MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,787,        width += xadj;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,788,        height += yadj;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,790,        double x = area.getMaxX() - width;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,791,        double y = area.getMaxY() - height;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,792,"        g2.drawRect((int) x, (int) y, (int) width, (int) height);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,793,        x += ANNOTATION_MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,794,        for (Iterator it = this.cornerTextItems.iterator(); it.hasNext();) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,795,            String msg = (String) it.next();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,796,"            Rectangle2D bounds = TextUtilities.getTextBounds(msg, g2, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,798,            y += bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,799,"            g2.drawString(msg, (int) x, (int) y);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,800,        },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,801,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,814,"        return this.axis.draw(g2, dataArea.getMinY(), plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,833,        if (!DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,834,            int seriesCount = this.dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,835,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,836,"                this.renderer.drawSeries(g2, dataArea, info, this, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,839,        },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,841,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,843,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,857,        if (this.renderer == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,858,            return;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,862,        if (isAngleGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,863,            Stroke gridStroke = getAngleGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,864,            Paint gridPaint = getAngleGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,865,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,866,"                this.renderer.drawAngularGridLines(g2, this, angularTicks, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,872,        if (isRadiusGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,873,            Stroke gridStroke = getRadiusGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,874,            Paint gridPaint = getRadiusGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,875,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,876,"                this.renderer.drawRadialGridLines(g2, this, this.axis, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,880,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,888,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,889,            double radius = getMaxRadius();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,890,            double scaledRadius = radius * percent;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,891,            this.axis.setUpperBound(scaledRadius);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,892,            getAxis().setAutoRange(false);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,893,        } ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,895,            getAxis().setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,897,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,907,        Range result = null;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,908,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,909,"            result = Range.combine(result, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,912,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,924,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,925,            this.axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,928,        if (getParent() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,929,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,932,            super.datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,934,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,944,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,945,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,954,        int result = 0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,956,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,957,            result = this.dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,959,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,970,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,973,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,974,            if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,975,                int seriesCount = this.dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,976,                for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,977,                    LegendItem item = this.renderer.getLegendItem(i);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,978,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,982,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,993,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,994,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,996,        if (!(obj instanceof PolarPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,997,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,999,        PolarPlot that = (PolarPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1000,"        if (!ObjectUtilities.equal(this.axis, that.axis)) {",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1001,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1003,"        if (!ObjectUtilities.equal(this.renderer, that.renderer)) {",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1004,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1006,        if (!this.angleTickUnit.equals(that.angleTickUnit)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1007,        	return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1009,        if (this.angleGridlinesVisible != that.angleGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1010,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1012,        if (this.angleLabelsVisible != that.angleLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1013,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1015,        if (!this.angleLabelFont.equals(that.angleLabelFont)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1016,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1018,"        if (!PaintUtilities.equal(this.angleLabelPaint, that.angleLabelPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1019,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1021,"        if (!ObjectUtilities.equal(this.angleGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1023,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1025,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1028,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1030,        if (this.radiusGridlinesVisible != that.radiusGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1031,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1033,"        if (!ObjectUtilities.equal(this.radiusGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1035,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1037,"        if (!PaintUtilities.equal(this.radiusGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1039,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1041,        if (!this.cornerTextItems.equals(that.cornerTextItems)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1042,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1044,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1057,        PolarPlot clone = (PolarPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1058,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1059,            clone.axis = (ValueAxis) ObjectUtilities.clone(this.axis);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1060,            clone.axis.setPlot(clone);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1061,            clone.axis.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1064,        if (clone.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1065,            clone.dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1068,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1069,            clone.renderer ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1073,        clone.cornerTextItems = new ArrayList(this.cornerTextItems);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1075,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1086,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1087,"        SerialUtilities.writeStroke(this.angleGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1088,"        SerialUtilities.writePaint(this.angleGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1089,"        SerialUtilities.writeStroke(this.radiusGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1090,"        SerialUtilities.writePaint(this.radiusGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1091,"        SerialUtilities.writePaint(this.angleLabelPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1092,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1105,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1106,        this.angleGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1107,        this.angleGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1108,        this.radiusGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1109,        this.radiusGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1110,        this.angleLabelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1112,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1113,            this.axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1114,            this.axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1117,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1118,            this.dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1120,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1133,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1149,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1163,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1174,        zoom(factor);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1175,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1192,        if (useAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1195,            double sourceX = source.getX();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1196,"            double anchorX = this.axis.java2DToValue(sourceX, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1198,"            this.axis.resizeRange(factor, anchorX);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1199,        },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1201,            this.axis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1204,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1216,        zoom((upperPercent + lowerPercent) / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1217,    }   ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1225,        return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1234,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1243,        return PlotOrientation.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1252,        return this.axis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1270,        double radians = Math.toRadians(angleDegrees - 90.0);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1272,        double minx = dataArea.getMinX() + MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1273,        double maxx = dataArea.getMaxX() - MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1274,        double miny = dataArea.getMinY() + MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1275,        double maxy = dataArea.getMaxY() - MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1277,        double lengthX = maxx - minx;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1278,        double lengthY = maxy - miny;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1279,"        double length = Math.min(lengthX, lengthY);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1281,        double midX = minx + lengthX / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1282,        double midY = miny + lengthY / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1284,        double axisMin = this.axis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1285,        double axisMax =  getMaxRadius();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1286,"        double adjustedRadius = Math.max(radius, axisMin);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1288,        double xv = length / 2.0 * Math.cos(radians);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1289,        double yv = length / 2.0 * Math.sin(radians);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1291,        float x = (float) (midX + (xv * (adjustedRadius - axisMin) ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1293,        float y = (float) (midY + (yv * (adjustedRadius - axisMin) ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1296,        int ix = Math.round(x);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1297,        int iy = Math.round(y);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1299,"        Point p = new Point(ix, iy);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,15,1300,        return p;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,96,        return this.lineAlignment;   ,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,106,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,137,        TextLine last = null;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,138,        final int index = this.lines.size() - 1;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,139,        if (index >= 0) {,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,140,            last = (TextLine) this.lines.get(index);,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,142,        return last;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,151,        return Collections.unmodifiableList(this.lines);,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,191,        Size2D d = calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,192,"        float[] offsets = calculateOffsets(anchor, d.getWidth(), d.getHeight());",0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,193,"        Rectangle2D bounds = new Rectangle2D.Double(anchorX + offsets[0], ",0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,195,"        Shape rotatedBounds = ShapeUtilities.rotateShape(bounds, angle, ",0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,197,        return rotatedBounds;   ,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,242,            else if (this.lineAlignment == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,243,                lineOffset = (float) (d.getWidth() - dimension.getWidth());   ,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,277,        else if (anchor == TextBlockAnchor.TOP_RIGHT,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,281,            xAdj = (float) -width;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,292,        else if (anchor == TextBlockAnchor.CENTER_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,296,            yAdj = (float) -height / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,299,        else if (anchor == TextBlockAnchor.BOTTOM_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,303,            yAdj = (float) -height;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,319,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,320,            return true;   ,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,322,        if (obj instanceof TextBlock) {,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,323,            final TextBlock block = (TextBlock) obj;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,324,            return this.lines.equals(block.lines);,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,326,        return false;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,15,335,        return (this.lines != null ? this.lines.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,110,        return this.name;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,123,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,124,            return true;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,126,        if (!(obj instanceof TextBlockAnchor)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,127,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,130,        TextBlockAnchor other = (TextBlockAnchor) obj;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,131,        if (!this.name.equals(other.name)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,132,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,135,        return true;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,144,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,155,        if (this.equals(TextBlockAnchor.TOP_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,156,            return TextBlockAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,158,        else if (this.equals(TextBlockAnchor.TOP_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,159,            return TextBlockAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,161,        else if (this.equals(TextBlockAnchor.TOP_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,162,            return TextBlockAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,164,        else if (this.equals(TextBlockAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,165,            return TextBlockAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,167,        else if (this.equals(TextBlockAnchor.CENTER_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,168,            return TextBlockAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,170,        else if (this.equals(TextBlockAnchor.CENTER_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,171,            return TextBlockAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,173,        else if (this.equals(TextBlockAnchor.BOTTOM_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,174,            return TextBlockAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,176,        else if (this.equals(TextBlockAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,177,            return TextBlockAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,179,        else if (this.equals(TextBlockAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,180,            return TextBlockAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,15,182,        return null;,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,75,    public TextLine() {,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,76,        this.fragments = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,77,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,15,85,"        this(text, TextFragment.DEFAULT_FONT);   ",0.0,0,-1,0
org/jfree/chart/text/TextLine,15,86,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,15,94,"    public TextLine(String text, Font font) {",0.0,0,-1,0
org/jfree/chart/text/TextLine,15,95,        this.fragments = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,96,"        TextFragment fragment = new TextFragment(text, font);",0.0,0,-1,0
org/jfree/chart/text/TextLine,15,97,        this.fragments.add(fragment);,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,98,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,15,109,"            throw new IllegalArgumentException(""Null 'text' argument."");   ",0.0,0,-1,0
org/jfree/chart/text/TextLine,15,112,"            throw new IllegalArgumentException(""Null 'font' argument."");   ",0.0,0,-1,0
org/jfree/chart/text/TextLine,15,115,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/text/TextLine,15,128,        this.fragments.add(fragment);        ,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,129,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,15,137,        this.fragments.remove(fragment);,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,138,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,15,195,        TextFragment result = null;,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,196,        if (this.fragments.size() > 0) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,197,            result = (TextFragment) this.fragments.get(0);,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,199,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,208,        TextFragment result = null;,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,209,        if (this.fragments.size() > 0) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,210,            result = (TextFragment) this.fragments.get(this.fragments.size() ,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,213,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,245,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,246,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,248,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,249,            return true;   ,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,251,        if (obj instanceof TextLine) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,252,            TextLine line = (TextLine) obj;,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,253,            return this.fragments.equals(line.fragments);,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,255,        return false;,0.0,0,-1,0
org/jfree/chart/text/TextLine,15,264,        return (this.fragments != null ? this.fragments.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,104,"        this(text, DEFAULT_FONT, DEFAULT_PAINT);",0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,105,    },0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,114,"        this(text, font, DEFAULT_PAINT);",0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,115,    },0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,139,"            throw new IllegalArgumentException(""Null 'text' argument."");  ",0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,142,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,145,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,159,        return this.text;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,168,        return this.font;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,177,        return this.paint;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,186,        return this.baselineOffset;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,244,        else if (anchor == TextAnchor.BOTTOM_LEFT ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,247,            result = -lm.getDescent() - lm.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,260,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,261,            return false;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,263,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,264,            return true;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,266,        if (obj instanceof TextFragment) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,267,            TextFragment tf = (TextFragment) obj;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,268,            if (!this.text.equals(tf.text)) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,269,                return false;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,271,            if (!this.font.equals(tf.font)) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,272,                return false;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,274,            if (!this.paint.equals(tf.paint)) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,275,                return false;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,277,            return true;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,279,        return false;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,289,        result = (this.text != null ? this.text.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,290,        result = 29 * result + (this.font != null ? this.font.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,291,        result = 29 * result + (this.paint != null ? this.paint.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,292,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,303,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,304,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,305,    },0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,317,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,318,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,15,319,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,99,    private TextUtilities() {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,100,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,114,        if (text == null) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,115,"            throw new IllegalArgumentException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,117,        TextBlock result = new TextBlock();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,118,        String input = text;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,119,        boolean moreInputToProcess = (text.length() > 0);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,120,        int start = 0;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,121,        while (moreInputToProcess) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,122,"            int index = input.indexOf(""\n"");",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,123,            if (index > start) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,124,"                String line = input.substring(start, index);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,125,                if (index < input.length() - 1) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,126,"                    result.addLine(line, font, paint);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,127,                    input = input.substring(index + 1);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,130,                    moreInputToProcess = false;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,132,            },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,133,            else if (index == start) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,134,                if (index < input.length() - 1) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,135,                    input = input.substring(index + 1);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,138,                    moreInputToProcess = false;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,142,"                result.addLine(input, font, paint);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,143,                moreInputToProcess = false;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,145,        },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,146,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,199,"            result.addLine(text.substring(current, next), font, paint);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,200,            lines++;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,201,            current = next;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,202,            while (current < text.length()&& text.charAt(current) == '\n') {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,203,                current++;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,205,        },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,206,        if (current < length) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,207,            TextLine lastLine = result.getLastLine();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,208,            TextFragment lastFragment = lastLine.getLastTextFragment();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,209,            String oldStr = lastFragment.getText();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,210,"            String newStr = ""..."";",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,211,            if (oldStr.length() > 3) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,212,"                newStr = oldStr.substring(0, oldStr.length() - 3) + ""..."";",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,215,            lastLine.removeFragment(lastFragment);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,216,"            TextFragment newFragment = new TextFragment(newStr, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,218,            lastLine.addFragment(newFragment);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,220,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,249,                return newline;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,253,                if (firstWord) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,254,"                    while (measurer.getStringWidth(text, start, end) > width) {",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,255,                        end--;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,256,                        if (end <= start) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,257,                            return end;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,260,                    return end;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,263,                    end = iterator.previous();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,264,                    return end;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,299,            double width = fm.stringWidth(text);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,300,            double height = fm.getHeight();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,301,"            bounds = new Rectangle2D.Double(0.0, -fm.getAscent(), width, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,322,        Rectangle2D textBounds = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,323,"        float[] adjust = deriveTextBoundsAnchorOffsets(g2, text, anchor, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,326,"        textBounds.setRect(x + adjust[0], y + adjust[1] + adjust[2],",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,328,"        g2.drawString(text, x + adjust[0], y + adjust[1]);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,329,        return textBounds;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,351,        float[] result = new float[3];,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,352,        FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,353,        Font f = g2.getFont();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,354,        FontMetrics fm = g2.getFontMetrics(f);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,355,"        Rectangle2D bounds = TextUtilities.getTextBounds(text, g2, fm);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,356,"        LineMetrics metrics = f.getLineMetrics(text, frc);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,357,        float ascent = metrics.getAscent();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,358,        result[2] = -ascent;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,359,        float halfAscent = ascent / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,360,        float descent = metrics.getDescent();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,361,        float leading = metrics.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,362,        float xAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,363,        float yAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,365,        if (anchor == TextAnchor.TOP_CENTER,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,371,            xAdj = (float) -bounds.getWidth() / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,374,        else if (anchor == TextAnchor.TOP_RIGHT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,380,            xAdj = (float) -bounds.getWidth();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,384,        if (anchor == TextAnchor.TOP_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,388,            yAdj = -descent - leading + (float) bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,391,        else if (anchor == TextAnchor.HALF_ASCENT_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,395,            yAdj = halfAscent;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,398,        else if (anchor == TextAnchor.CENTER_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,402,            yAdj = -descent - leading + (float) (bounds.getHeight() / 2.0);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,405,        else if (anchor == TextAnchor.BASELINE_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,409,            yAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,412,        else if (anchor == TextAnchor.BOTTOM_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,416,            yAdj = -metrics.getDescent() - metrics.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,419,        if (textBounds != null) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,420,            textBounds.setRect(bounds);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,422,        result[0] = xAdj;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,423,        result[1] = yAdj;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,424,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,438,        useDrawRotatedStringWorkaround = use;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,439,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,455,"        drawRotatedString(text, g2, x, y, angle, x, y);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,456,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,477,            return;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,489,"            TextLayout tl = new TextLayout(text, g2.getFont(), ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,491,"            tl.draw(g2, textX, textY);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,492,        },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,519,            return;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,542,"        if (text == null || text.equals("""")) {",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,543,            return;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,545,"        float[] textAdj = deriveTextBoundsAnchorOffsets(g2, text, textAnchor);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,546,"        float[] rotateAdj = deriveRotationAnchorOffsets(g2, text, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,548,"        drawRotatedString(text, g2, x + textAdj[0], y + textAdj[1],",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,552,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,573,"        if (text == null || text.equals("""")) {",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,574,            return null;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,576,"        float[] textAdj = deriveTextBoundsAnchorOffsets(g2, text, textAnchor);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,577,"        float[] rotateAdj = deriveRotationAnchorOffsets(g2, text, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,579,"        Shape result = calculateRotatedStringBounds(text, g2, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,582,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,621,            xAdj = (float) -bounds.getWidth() / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,630,            xAdj = (float) -bounds.getWidth();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,638,            yAdj = -descent - leading + (float) bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,645,            yAdj = halfAscent;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,652,            yAdj = -descent - leading + (float) (bounds.getHeight() / 2.0);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,662,        else if (anchor == TextAnchor.BOTTOM_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,666,            yAdj = -metrics.getDescent() - metrics.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,689,        float[] result = new float[2];,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,690,        FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,691,"        LineMetrics metrics = g2.getFont().getLineMetrics(text, frc);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,692,        FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,693,"        Rectangle2D bounds = TextUtilities.getTextBounds(text, g2, fm);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,694,        float ascent = metrics.getAscent();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,695,        float halfAscent = ascent / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,696,        float descent = metrics.getDescent();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,697,        float leading = metrics.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,698,        float xAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,699,        float yAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,701,        if (anchor == TextAnchor.TOP_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,707,            xAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,710,        else if (anchor == TextAnchor.TOP_CENTER,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,716,            xAdj = (float) bounds.getWidth() / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,719,        else if (anchor == TextAnchor.TOP_RIGHT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,725,            xAdj = (float) bounds.getWidth();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,729,        if (anchor == TextAnchor.TOP_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,733,            yAdj = descent + leading - (float) bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,736,        else if (anchor == TextAnchor.CENTER_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,740,            yAdj = descent + leading - (float) (bounds.getHeight() / 2.0);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,743,        else if (anchor == TextAnchor.HALF_ASCENT_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,747,            yAdj = -halfAscent;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,750,        else if (anchor == TextAnchor.BASELINE_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,754,            yAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,757,        else if (anchor == TextAnchor.BOTTOM_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,761,            yAdj = metrics.getDescent() + metrics.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,764,        result[0] = xAdj;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,765,        result[1] = yAdj;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,766,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,789,"        if ((text == null) || (text.equals(""""))) {",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,790,            return null;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,792,        FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,793,"        Rectangle2D bounds = TextUtilities.getTextBounds(text, g2, fm);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,794,        AffineTransform translate = AffineTransform.getTranslateInstance(,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,796,        Shape translatedBounds = translate.createTransformedShape(bounds);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,797,        AffineTransform rotate = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,799,        Shape result = rotate.createTransformedShape(translatedBounds);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,800,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,812,        return useFontMetricsGetStringBounds;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,823,        useFontMetricsGetStringBounds = use;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,824,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,15,833,        return useDrawRotatedStringWorkaround;,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,91,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,92,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/StrokeMap,15,94,        return (Stroke) this.store.get(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,107,        return this.store.containsKey(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,118,        if (key == null) { ,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,119,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/StrokeMap,15,121,"        this.store.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/StrokeMap,15,122,    },0.0,0,-1,0
org/jfree/chart/StrokeMap,15,128,        this.store.clear();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,129,    },0.0,0,-1,0
org/jfree/chart/StrokeMap,15,139,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,140,            return true;,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,142,        if (!(obj instanceof StrokeMap)) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,143,            return false;,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,145,        StrokeMap that = (StrokeMap) obj;,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,146,        if (this.store.size() != that.store.size()) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,147,            return false;,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,149,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,150,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,151,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,152,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,153,            Stroke s1 = getStroke(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,154,            Stroke s2 = that.getStroke(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,155,"            if (!ObjectUtilities.equal(s1, s2)) {",0.0,0,-1,0
org/jfree/chart/StrokeMap,15,156,                return false;,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,158,        },0.0,0,-1,0
org/jfree/chart/StrokeMap,15,159,        return true;,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,172,        return super.clone();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,183,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,184,        stream.writeInt(this.store.size());,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,185,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,186,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,187,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,188,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,189,            stream.writeObject(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,190,            Stroke stroke = getStroke(key);,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,191,"            SerialUtilities.writeStroke(stroke, stream);",0.0,0,-1,0
org/jfree/chart/StrokeMap,15,192,        },0.0,0,-1,0
org/jfree/chart/StrokeMap,15,193,    },0.0,0,-1,0
org/jfree/chart/StrokeMap,15,205,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,206,        this.store = new TreeMap();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,207,        int keyCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,208,        for (int i = 0; i < keyCount; i++) {,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,209,            Comparable key = (Comparable) stream.readObject();,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,210,            Stroke stroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/StrokeMap,15,211,"            this.store.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/StrokeMap,15,213,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,166,"        this("""");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,167,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,175,"        this(text, TextTitle.DEFAULT_FONT, TextTitle.DEFAULT_TEXT_PAINT,",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,178,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,214,"            throw new NullPointerException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,217,"            throw new NullPointerException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,220,"            throw new NullPointerException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,244,        return this.text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,254,        if (text == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,255,"            throw new IllegalArgumentException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,257,        if (!this.text.equals(text)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,258,            this.text = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,259,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,261,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,272,        return this.textAlignment;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,281,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,282,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,284,        this.textAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,285,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,286,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,296,        return this.font;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,308,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,309,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,311,        if (!this.font.equals(font)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,312,            this.font = font;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,313,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,315,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,325,        return this.paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,337,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,338,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,340,        if (!this.paint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,341,            this.paint = paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,342,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,344,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,352,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,363,        this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,364,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,365,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,373,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,383,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,384,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,385,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,393,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,403,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,404,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,405,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,414,        return this.expandToFitSpace;   ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,425,        this.expandToFitSpace = expand;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,426,        notifyListeners(new TitleChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,427,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,444,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,445,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,447,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,448,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,450,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,451,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,456,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,462,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,463,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,466,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,467,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,468,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,470,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,471,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,473,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,474,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,503,"                return new Size2D(maxWidth, contentSize.getHeight());",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,509,        else if (position == RectangleEdge.LEFT || position ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,511,            float maxWidth = (float) heightRange.getUpperBound();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,512,            g2.setFont(this.font);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,513,"            this.content = TextUtilities.createTextBlock(this.text, this.font, ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,515,            this.content.setLineAlignment(this.textAlignment);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,516,            Size2D contentSize = this.content.calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,519,            if (this.expandToFitSpace) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,520,"                return new Size2D(contentSize.getHeight(), maxWidth);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,523,"                return new Size2D(contentSize.height, contentSize.width);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,527,"            throw new RuntimeException(""Unrecognised exception."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,539,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,540,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,556,            return null;   ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,561,            return null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,567,"                entity = new ChartEntity(area, this.toolTipText, this.urlText);    ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,572,            g2.setPaint(this.backgroundPaint);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,573,            g2.fill(area);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,580,        else if (position == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,582,"            drawVertical(g2, area);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,586,            StandardEntityCollection sec = new StandardEntityCollection();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,587,            sec.add(entity);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,588,            result.setEntityCollection(sec);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,609,            x = (float) titleArea.getX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,610,            anchor = TextBlockAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,613,            x = (float) titleArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,614,            anchor = TextBlockAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,625,        else if (position == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,626,            y = (float) titleArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,627,            if (horizontalAlignment == HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,628,                anchor = TextBlockAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,630,            else if (horizontalAlignment == HorizontalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,631,                anchor = TextBlockAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,633,            else if (horizontalAlignment == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,634,                anchor = TextBlockAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,649,        Rectangle2D titleArea = (Rectangle2D) area.clone();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,650,        g2.setFont(this.font);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,651,        g2.setPaint(this.paint);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,652,        TextBlockAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,653,        float y = 0.0f;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,654,        VerticalAlignment verticalAlignment = getVerticalAlignment();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,655,        if (verticalAlignment == VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,656,            y = (float) titleArea.getY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,657,            anchor = TextBlockAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,659,        else if (verticalAlignment == VerticalAlignment.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,660,            y = (float) titleArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,661,            anchor = TextBlockAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,663,        else if (verticalAlignment == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,664,            y = (float) titleArea.getCenterY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,665,            anchor = TextBlockAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,667,        float x = 0.0f;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,668,        RectangleEdge position = getPosition();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,669,        if (position == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,670,            x = (float) titleArea.getX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,672,        else if (position == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,673,            x = (float) titleArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,674,            if (verticalAlignment == VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,675,                anchor = TextBlockAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,677,            else if (verticalAlignment == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,678,                anchor = TextBlockAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,680,            else if (verticalAlignment == VerticalAlignment.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,681,                anchor = TextBlockAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,684,"        this.content.draw(g2, x, y, anchor, x, y, -Math.PI / 2.0);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,685,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,695,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,696,            return true;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,698,        if (!(obj instanceof TextTitle)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,699,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,701,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,702,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,704,        TextTitle that = (TextTitle) obj;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,705,"        if (!ObjectUtilities.equal(this.text, that.text)) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,706,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,708,"        if (!ObjectUtilities.equal(this.font, that.font)) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,709,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,711,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,712,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,714,        if (this.textAlignment != that.textAlignment) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,715,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,717,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,718,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,720,        return true;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,729,        int result = super.hashCode();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,730,        result = 29 * result + (this.text != null ? this.text.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,731,        result = 29 * result + (this.font != null ? this.font.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,732,        result = 29 * result + (this.paint != null ? this.paint.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,733,        result = 29 * result + (this.backgroundPaint != null ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,735,        return result;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,746,        return super.clone();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,757,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,758,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,759,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,760,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,773,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,774,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,775,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,15,776,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,89,        this(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,93,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,102,        this(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,106,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,116,        this(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,120,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,130,        this(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,134,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,151,"            throw new IllegalArgumentException(""Null 'widthType' argument."");",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,154,"            throw new IllegalArgumentException(""Null 'heightType' argument.""); ",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,225,        if (this.widthConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,226,            return this;   ,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,229,            return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,243,        if (this.heightConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,244,            return this;   ,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,247,            return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,263,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,278,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,293,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,294,"            throw new IllegalArgumentException(""Null 'range' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,296,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,311,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,312,"            throw new IllegalArgumentException(""Null 'range' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,314,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,327,"        return ""RectangleConstraint["" ",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,341,        Size2D result = new Size2D();,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,342,        if (this.widthConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,343,            result.width = base.width;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,344,            if (this.heightConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,345,               result.height = base.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,347,            else if (this.heightConstraintType == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,348,               result.height = this.heightRange.constrain(base.height);,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,350,            else if (this.heightConstraintType == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,351,               result.height = this.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,354,        else if (this.widthConstraintType == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,355,            result.width = this.widthRange.constrain(base.width);,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,356,            if (this.heightConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,357,                result.height = base.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,359,            else if (this.heightConstraintType == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,360,                result.height = this.heightRange.constrain(base.height);,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,362,            else if (this.heightConstraintType == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,363,                result.height = this.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,366,        else if (this.widthConstraintType == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,367,            result.width = this.width;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,368,            if (this.heightConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,369,                result.height = base.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,371,            else if (this.heightConstraintType == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,372,                result.height = this.heightRange.constrain(base.height);,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,374,            else if (this.heightConstraintType == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,375,                result.height = this.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,15,378,        return result;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,196,        return this.sources;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,206,        if (sources == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,207,"            throw new IllegalArgumentException(""Null 'sources' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,209,        this.sources = sources;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,210,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,211,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,219,        return this.backgroundPaint;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,239,        return this.legendItemGraphicEdge;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,248,        if (edge == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,249,"            throw new IllegalArgumentException(""Null 'edge' argument."");",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,251,        this.legendItemGraphicEdge = edge;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,252,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,253,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,261,        return this.legendItemGraphicAnchor;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,270,        if (anchor == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,271,"            throw new IllegalArgumentException(""Null 'anchor' point."");",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,273,        this.legendItemGraphicAnchor = anchor;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,274,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,282,        return this.legendItemGraphicLocation;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,291,        this.legendItemGraphicLocation = anchor;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,292,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,300,        return this.legendItemGraphicPadding;    ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,310,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,311,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,313,        this.legendItemGraphicPadding = padding;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,314,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,315,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,323,        return this.itemFont;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,333,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,334,"            throw new IllegalArgumentException(""Null 'font' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,336,        this.itemFont = font;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,337,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,338,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,346,        return this.itemPaint;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,355,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,356,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,358,        this.itemPaint = paint;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,359,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,360,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,368,        return this.itemLabelPadding;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,377,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,378,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,380,        this.itemLabelPadding = padding;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,381,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,382,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,394,            this.items.setArrangement(this.vLayout);   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,400,                    LegendItem item = legendItems.get(i);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,401,                    Block block = createLegendItemBlock(item);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,402,                    this.items.add(block);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,416,        BlockContainer result = null;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,417,"        LegendGraphic lg = new LegendGraphic(item.getShape(), ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,419,        lg.setFillPaintTransformer(item.getFillPaintTransformer());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,420,        lg.setShapeFilled(item.isShapeFilled());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,421,        lg.setLine(item.getLine());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,422,        lg.setLineStroke(item.getLineStroke());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,423,        lg.setLinePaint(item.getLinePaint());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,424,        lg.setLineVisible(item.isLineVisible());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,425,        lg.setShapeVisible(item.isShapeVisible());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,426,        lg.setShapeOutlineVisible(item.isShapeOutlineVisible());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,427,        lg.setOutlinePaint(item.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,428,        lg.setOutlineStroke(item.getOutlineStroke());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,429,        lg.setPadding(this.legendItemGraphicPadding);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,431,        LegendItemBlockContainer legendItem = new LegendItemBlockContainer(,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,434,        lg.setShapeAnchor(getLegendItemGraphicAnchor());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,435,        lg.setShapeLocation(getLegendItemGraphicLocation());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,436,"        legendItem.add(lg, this.legendItemGraphicEdge);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,437,"        LabelBlock labelBlock = new LabelBlock(item.getLabel(), this.itemFont, ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,439,        labelBlock.setPadding(this.itemLabelPadding);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,440,        legendItem.add(labelBlock);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,441,        legendItem.setToolTipText(item.getToolTipText());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,442,        legendItem.setURLText(item.getURLText());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,444,        result = new BlockContainer(new CenterArrangement());,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,445,        result.add(legendItem);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,447,        return result;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,456,        return this.items;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,474,        BlockContainer container = this.wrapper;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,475,        if (container == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,476,            container = this.items;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,478,        RectangleConstraint c = toContentConstraint(constraint);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,479,"        Size2D size = container.arrange(g2, c);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,480,        result.height = calculateTotalHeight(size.height);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,481,        result.width = calculateTotalWidth(size.width);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,482,        return result;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,493,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,494,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,530,        this.wrapper = wrapper;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,531,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,541,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,542,            return true;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,544,        if (!(obj instanceof LegendTitle)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,545,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,547,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,548,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,550,        LegendTitle that = (LegendTitle) obj;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,551,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,552,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,554,        if (this.legendItemGraphicEdge != that.legendItemGraphicEdge) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,555,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,557,        if (this.legendItemGraphicAnchor != that.legendItemGraphicAnchor) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,558,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,560,        if (this.legendItemGraphicLocation != that.legendItemGraphicLocation) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,561,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,563,        if (!this.itemFont.equals(that.itemFont)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,564,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,566,        if (!this.itemPaint.equals(that.itemPaint)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,567,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,569,        if (!this.hLayout.equals(that.hLayout)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,570,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,572,        if (!this.vLayout.equals(that.vLayout)) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,573,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,575,        return true;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,586,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,587,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,588,"        SerialUtilities.writePaint(this.itemPaint, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,589,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,601,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,602,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,603,        this.itemPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,15,604,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,86,        this(new BorderArrangement());,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,87,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,97,"            throw new IllegalArgumentException(""Null 'arrangement' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,109,        return this.arrangement;    ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,119,"            throw new IllegalArgumentException(""Null 'arrangement' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,141,        return Collections.unmodifiableList(this.blocks);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,150,"        add(block, null);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,151,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,160,        this.blocks.add(block);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,161,"        this.arrangement.add(block, key);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,162,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,182,"        return this.arrangement.arrange(this, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,192,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,193,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,212,                sec = new StandardEntityCollection();   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,222,            Block block = (Block) iterator.next();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,223,            Rectangle2D bounds = block.getBounds();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,224,            Rectangle2D drawArea = new Rectangle2D.Double(bounds.getX() ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,227,"            Object r = block.draw(g2, drawArea, params);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,228,            if (sec != null) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,229,                if (r instanceof EntityBlockResult) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,230,                    EntityBlockResult ebr = (EntityBlockResult) r;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,231,                    EntityCollection ec = ebr.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,232,                    sec.addAll(ec);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,235,        },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,238,            result = new BlockResult();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,239,            result.setEntityCollection(sec);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,252,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,253,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,255,        if (!(obj instanceof BlockContainer)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,256,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,258,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,259,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,261,        BlockContainer that = (BlockContainer) obj;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,262,        if (!this.arrangement.equals(that.arrangement)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,263,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,265,        if (!this.blocks.equals(that.blocks)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,266,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,268,        return true;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,279,        BlockContainer clone = (BlockContainer) super.clone();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,15,281,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,322,        this(null);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,323,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,331,"        this(label, TimeZone.getDefault());",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,332,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,345,"        super(label, DateAxis.createStandardDateTickUnits(zone));",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,196,    private DateTickMarkPosition tickMarkPosition = DateTickMarkPosition.START;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,346,"        setTickUnit(DateAxis.DEFAULT_DATE_TICK_UNIT, false, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,347,        setAutoRangeMinimumSize(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,349,"        setRange(DEFAULT_DATE_RANGE, false, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,350,        this.dateFormatOverride = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,351,        this.timeZone = zone;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,352,        this.timeline = DEFAULT_TIMELINE;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,353,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,173,    public static final DateRange DEFAULT_DATE_RANGE = new DateRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,180,    public static final DateTickUnit DEFAULT_DATE_TICK_UNIT,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,184,    public static final Date DEFAULT_ANCHOR_DATE = new Date();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,310,    private static final Timeline DEFAULT_TIMELINE = new DefaultTimeline();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,364,        return this.timeZone;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,377,        if (!this.timeZone.equals(zone)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,378,            this.timeZone = zone;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,379,            setStandardTickUnits(createStandardDateTickUnits(zone));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,380,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,382,    } ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,390,        return this.timeline;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,402,        if (this.timeline != timeline) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,403,            this.timeline = timeline;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,404,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,406,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,422,        return this.tickUnit;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,436,"        setTickUnit(unit, true, true);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,437,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,451,        this.tickUnit = unit;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,452,        if (turnOffAutoSelection) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,453,"            setAutoTickUnitSelection(false, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,455,        if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,456,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,459,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,468,        return this.dateFormatOverride;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,478,        this.dateFormatOverride = formatter;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,479,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,480,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,490,"        setRange(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,491,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,506,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,507,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,511,        if (!(range instanceof DateRange)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,512,            range = new DateRange(range);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,514,"        super.setRange(range, turnOffAutoRange, notify);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,515,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,525,        if (lower.getTime() >= upper.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,526,"            throw new IllegalArgumentException(""Requires 'lower' < 'upper'."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,528,"        setRange(new DateRange(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,529,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,539,        if (lower >= upper) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,540,"            throw new IllegalArgumentException(""Requires 'lower' < 'upper'."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,542,"        setRange(new DateRange(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,543,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,554,        Date result = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,555,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,556,        if (range instanceof DateRange) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,557,            DateRange r = (DateRange) range;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,558,            result = r.getLowerDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,559,        },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,561,            result = new Date((long) range.getLowerBound());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,563,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,579,        if (date == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,580,"            throw new IllegalArgumentException(""Null 'date' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,583,        Date maxDate = getMaximumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,584,        long maxMillis = maxDate.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,585,        long newMinMillis = date.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,586,        if (maxMillis <= newMinMillis) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,587,            Date oldMin = getMinimumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,588,            long length = maxMillis - oldMin.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,589,            maxDate = new Date(newMinMillis + length);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,591,"        setRange(new DateRange(date, maxDate), true, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,592,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,593,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,604,        Date result = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,605,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,606,        if (range instanceof DateRange) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,607,            DateRange r = (DateRange) range;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,608,            result = r.getUpperDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,609,        },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,611,            result = new Date((long) range.getUpperBound());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,613,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,629,        if (maximumDate == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,630,"            throw new IllegalArgumentException(""Null 'maximumDate' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,633,        Date minDate = getMinimumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,634,        long minMillis = minDate.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,635,        long newMaxMillis = maximumDate.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,636,        if (minMillis >= newMaxMillis) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,637,            Date oldMax = getMaximumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,638,            long length = oldMax.getTime() - minMillis;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,639,            minDate = new Date(newMaxMillis - length);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,641,"        setRange(new DateRange(minDate, maximumDate), true, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,642,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,643,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,651,        return this.tickMarkPosition;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,661,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,662,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,664,        this.tickMarkPosition = position;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,665,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,666,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,673,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,674,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,676,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,687,        return (!this.timeline.containsDomainValue(new Date(millis)));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,704,        value = this.timeline.toTimelineValue((long) value);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,706,        DateRange range = (DateRange) getRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,707,        double axisMin = this.timeline.toTimelineValue(range.getLowerDate());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,708,        double axisMax = this.timeline.toTimelineValue(range.getUpperDate());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,709,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,710,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,711,            double minX = area.getX();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,712,            double maxX = area.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,713,            if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,714,                result = maxX + ((value - axisMin) / (axisMax - axisMin)) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,718,                result = minX + ((value - axisMin) / (axisMax - axisMin)) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,721,        },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,722,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,723,            double minY = area.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,724,            double maxY = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,725,            if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,726,                result = minY + (((value - axisMin) / (axisMax - axisMin)) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,730,                result = maxY - (((value - axisMin) / (axisMax - axisMin)) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,734,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,751,        double value = date.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,752,"        return valueToJava2D(value, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,770,        DateRange range = (DateRange) getRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,771,        double axisMin = this.timeline.toTimelineValue(range.getLowerDate());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,772,        double axisMax = this.timeline.toTimelineValue(range.getUpperDate());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,774,        double min = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,775,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,776,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,777,            min = area.getX();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,778,            max = area.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,780,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,781,            min = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,782,            max = area.getY();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,786,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,787,             result = axisMax - ((java2DValue - min) / (max - min) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,791,             result = axisMin + ((java2DValue - min) / (max - min) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,795,        return this.timeline.toMillisecond((long) result); ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,806,"        return nextStandardDate(getMinimumDate(), unit);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,817,"        return previousStandardDate(getMaximumDate(), unit);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,838,        Calendar calendar = Calendar.getInstance(this.timeZone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,839,        calendar.setTime(date);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,840,        int count = unit.getCount();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,841,        int current = calendar.get(unit.getCalendarField());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,842,        int value = count * (current / count);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,844,        switch (unit.getUnit()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,847,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,848,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,849,                days = calendar.get(Calendar.DATE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,850,                hours = calendar.get(Calendar.HOUR_OF_DAY);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,851,                minutes = calendar.get(Calendar.MINUTE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,852,                seconds = calendar.get(Calendar.SECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,853,"                calendar.set(years, months, days, hours, minutes, seconds);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,854,"                calendar.set(Calendar.MILLISECOND, value);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,855,                Date mm = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,856,                if (mm.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,857,"                    calendar.set(Calendar.MILLISECOND, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,858,                    mm = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,860,                return mm;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,863,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,864,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,865,                days = calendar.get(Calendar.DATE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,866,                hours = calendar.get(Calendar.HOUR_OF_DAY);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,867,                minutes = calendar.get(Calendar.MINUTE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,868,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,869,                    milliseconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,871,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,872,                    milliseconds = 500;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,875,                    milliseconds = 999;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,877,"                calendar.set(Calendar.MILLISECOND, milliseconds);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,878,"                calendar.set(years, months, days, hours, minutes, value);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,879,                Date dd = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,880,                if (dd.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,881,"                    calendar.set(Calendar.SECOND, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,882,                    dd = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,884,                return dd;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,887,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,888,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,889,                days = calendar.get(Calendar.DATE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,890,                hours = calendar.get(Calendar.HOUR_OF_DAY);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,891,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,892,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,894,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,895,                    seconds = 30;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,898,                    seconds = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,900,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,901,"                calendar.set(years, months, days, hours, value, seconds);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,902,                Date d0 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,903,                if (d0.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,904,"                    calendar.set(Calendar.MINUTE, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,905,                    d0 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,907,                return d0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,910,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,911,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,912,                days = calendar.get(Calendar.DATE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,913,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,914,                    minutes = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,915,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,917,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,918,                    minutes = 30;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,919,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,922,                    minutes = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,923,                    seconds = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,925,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,926,"                calendar.set(years, months, days, value, minutes, seconds);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,927,                Date d1 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,928,                if (d1.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,929,"                    calendar.set(Calendar.HOUR_OF_DAY, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,930,                    d1 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,932,                return d1;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,935,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,936,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,937,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,938,                    hours = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,939,                    minutes = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,940,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,942,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,943,                    hours = 12;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,944,                    minutes = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,945,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,948,                    hours = 23;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,949,                    minutes = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,950,                    seconds = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,952,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,953,"                calendar.set(years, months, value, hours, 0, 0);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,956,                Date d2 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,957,                if (d2.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,958,"                    calendar.set(Calendar.DATE, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,959,                    d2 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,961,                return d2;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,964,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,965,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,966,"                calendar.set(years, value, 1, 0, 0, 0);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,967,"                Month month = new Month(calendar.getTime(), this.timeZone);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,968,                Date standardDate = calculateDateForPosition(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,970,                long millis = standardDate.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,971,                if (millis >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,972,                    month = (Month) month.previous();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,973,                    standardDate = calculateDateForPosition(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,976,                return standardDate;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,979,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,980,                    months = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,981,                    days = 1;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,983,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,984,                    months = 6;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,985,                    days = 1;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,988,                    months = 11;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,989,                    days = 31;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,991,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,992,"                calendar.set(value, months, days, 0, 0, 0);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,993,                Date d3 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,994,                if (d3.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,995,"                    calendar.set(Calendar.YEAR, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,996,                    d3 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,998,                return d3;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1000,            default: return null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1018,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1019,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1021,        Date result = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1022,        if (position == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1023,            result = new Date(period.getFirstMillisecond());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1025,        else if (position == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1026,            result = new Date(period.getMiddleMillisecond());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1028,        else if (position == DateTickMarkPosition.END) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1029,            result = new Date(period.getLastMillisecond());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1031,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1045,"        Date previous = previousStandardDate(date, unit);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1046,        Calendar calendar = Calendar.getInstance(this.timeZone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1047,        calendar.setTime(previous);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1048,"        calendar.add(unit.getCalendarField(), unit.getCount());",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1049,        return calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1062,        return createStandardDateTickUnits(TimeZone.getDefault());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1078,        if (zone == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1079,"            throw new IllegalArgumentException(""Null 'zone' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1081,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1084,"        DateFormat f1 = new SimpleDateFormat(""HH:mm:ss.SSS"");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1085,"        DateFormat f2 = new SimpleDateFormat(""HH:mm:ss"");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1086,"        DateFormat f3 = new SimpleDateFormat(""HH:mm"");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1087,"        DateFormat f4 = new SimpleDateFormat(""d-MMM, HH:mm"");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1088,"        DateFormat f5 = new SimpleDateFormat(""d-MMM"");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1089,"        DateFormat f6 = new SimpleDateFormat(""MMM-yyyy"");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1090,"        DateFormat f7 = new SimpleDateFormat(""yyyy"");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1092,        f1.setTimeZone(zone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1093,        f2.setTimeZone(zone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1094,        f3.setTimeZone(zone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1095,        f4.setTimeZone(zone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1096,        f5.setTimeZone(zone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1097,        f6.setTimeZone(zone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1098,        f7.setTimeZone(zone);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1101,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 1, f1));",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1102,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 5, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1104,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 10, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1106,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 25, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1108,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 50, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1110,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 100, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1112,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 250, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1114,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 500, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1118,"        units.add(new DateTickUnit(DateTickUnit.SECOND, 1, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1120,"        units.add(new DateTickUnit(DateTickUnit.SECOND, 5, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1122,"        units.add(new DateTickUnit(DateTickUnit.SECOND, 10, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1124,"        units.add(new DateTickUnit(DateTickUnit.SECOND, 30, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1128,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 1, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1130,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 2, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1132,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 5, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1134,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 10, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1136,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 15, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1138,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 20, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1140,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 30, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1144,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 1, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1146,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 2, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1148,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 4, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1150,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 6, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1152,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 12, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1156,"        units.add(new DateTickUnit(DateTickUnit.DAY, 1, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1158,"        units.add(new DateTickUnit(DateTickUnit.DAY, 2, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1160,"        units.add(new DateTickUnit(DateTickUnit.DAY, 7, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1162,"        units.add(new DateTickUnit(DateTickUnit.DAY, 15, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1166,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 1, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1168,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 2, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1170,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 3, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1172,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 4,  ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1174,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 6,  ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1178,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 1,  ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1180,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 2,  ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1182,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 5,  ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1184,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 10,  ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1186,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 25, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1188,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 50, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1190,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 100, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1193,        return units;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1202,        Plot plot = getPlot();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1204,        if (plot == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1205,"            return;  // no plot, no data",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1208,        if (plot instanceof ValueAxisPlot) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1209,            ValueAxisPlot vap = (ValueAxisPlot) plot;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1211,            Range r = vap.getDataRange(this);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1212,            if (r == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1213,                if (this.timeline instanceof SegmentedTimeline) { ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1215,                    r = new DateRange((,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1221,                    r = new DateRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1225,            long upper = this.timeline.toTimelineValue(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1228,            long fixedAutoRange = (long) getFixedAutoRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1229,            if (fixedAutoRange > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1230,                lower = upper - fixedAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1233,                lower = this.timeline.toTimelineValue((long) r.getLowerBound());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1234,                double range = upper - lower;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1235,                long minRange = (long) getAutoRangeMinimumSize();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1236,                if (range < minRange) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1237,                    long expand = (long) (minRange - range) / 2;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1238,                    upper = upper + expand;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1239,                    lower = lower - expand;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1241,                upper = upper + (long) (range * getUpperMargin());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1242,                lower = lower - (long) (range * getLowerMargin());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1245,            upper = this.timeline.toMillisecond(upper);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1246,            lower = this.timeline.toMillisecond(lower);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1247,"            DateRange dr = new DateRange(new Date(lower), new Date(upper));",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1248,"            setRange(dr, false, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1251,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1266,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1267,"            selectHorizontalAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1269,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1270,"            selectVerticalAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1273,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1288,        long shift = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1289,        if (this.timeline instanceof SegmentedTimeline) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1290,            shift = ((SegmentedTimeline) this.timeline).getStartTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1292,"        double zero = valueToJava2D(shift + 0.0, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1293,        double tickLabelWidth ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1297,        TickUnitSource tickUnits = getStandardTickUnits();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1298,        TickUnit unit1 = tickUnits.getCeilingTickUnit(getTickUnit());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1299,"        double x1 = valueToJava2D(shift + unit1.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1300,        double unit1Width = Math.abs(x1 - zero);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1303,        double guess = (tickLabelWidth / unit1Width) * unit1.getSize();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1304,        DateTickUnit unit2 = (DateTickUnit) tickUnits.getCeilingTickUnit(guess);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1305,"        double x2 = valueToJava2D(shift + unit2.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1306,        double unit2Width = Math.abs(x2 - zero);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1307,"        tickLabelWidth = estimateMaximumTickLabelWidth(g2, unit2);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1308,        if (tickLabelWidth > unit2Width) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1309,            unit2 = (DateTickUnit) tickUnits.getLargerTickUnit(unit2);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1311,"        setTickUnit(unit2, false, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1312,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1328,        TickUnitSource tickUnits = getStandardTickUnits();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1329,"        double zero = valueToJava2D(0.0, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1332,        double estimate1 = getRange().getLength() / 10.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1333,        DateTickUnit candidate1 ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1335,"        double labelHeight1 = estimateMaximumTickLabelHeight(g2, candidate1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1336,"        double y1 = valueToJava2D(candidate1.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1337,        double candidate1UnitHeight = Math.abs(y1 - zero);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1340,        double estimate2 ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1342,        DateTickUnit candidate2 ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1344,"        double labelHeight2 = estimateMaximumTickLabelHeight(g2, candidate2);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1345,"        double y2 = valueToJava2D(candidate2.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1346,        double unit2Height = Math.abs(y2 - zero);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1350,       if (labelHeight2 < unit2Height) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1351,           finalUnit = candidate2;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1354,           finalUnit = (DateTickUnit) tickUnits.getLargerTickUnit(candidate2);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1356,"       setTickUnit(finalUnit, false, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1358,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1376,        RectangleInsets tickLabelInsets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1377,        double result = tickLabelInsets.getLeft() + tickLabelInsets.getRight();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1379,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1380,        FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1381,"        LineMetrics lm = tickLabelFont.getLineMetrics(""ABCxyz"", frc);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1382,        if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1385,            result += lm.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1389,            DateRange range = (DateRange) getRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1390,            Date lower = range.getLowerDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1391,            Date upper = range.getUpperDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1392,            String lowerStr = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1393,            String upperStr = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1394,            DateFormat formatter = getDateFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1395,            if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1396,                lowerStr = formatter.format(lower);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1397,                upperStr = formatter.format(upper);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1400,                lowerStr = unit.dateToString(lower);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1401,                upperStr = unit.dateToString(upper);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1403,            FontMetrics fm = g2.getFontMetrics(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1404,            double w1 = fm.stringWidth(lowerStr);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1405,            double w2 = fm.stringWidth(upperStr);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1406,"            result += Math.max(w1, w2);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1409,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1429,        RectangleInsets tickLabelInsets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1430,        double result = tickLabelInsets.getTop() + tickLabelInsets.getBottom();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1432,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1433,        FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1434,"        LineMetrics lm = tickLabelFont.getLineMetrics(""ABCxyz"", frc);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1435,        if (!isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1438,            result += lm.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1442,            DateRange range = (DateRange) getRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1443,            Date lower = range.getLowerDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1444,            Date upper = range.getUpperDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1445,            String lowerStr = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1446,            String upperStr = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1447,            DateFormat formatter = getDateFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1448,            if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1449,                lowerStr = formatter.format(lower);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1450,                upperStr = formatter.format(upper);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1453,                lowerStr = unit.dateToString(lower);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1454,                upperStr = unit.dateToString(upper);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1456,            FontMetrics fm = g2.getFontMetrics(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1457,            double w1 = fm.stringWidth(lowerStr);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1458,            double w2 = fm.stringWidth(upperStr);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1459,"            result += Math.max(w1, w2);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1462,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1482,        List result = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1483,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1484,"            result = refreshTicksHorizontal(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1486,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1487,"            result = refreshTicksVertical(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1489,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1506,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1508,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1509,        g2.setFont(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1511,        if (isAutoTickUnitSelection()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1512,"            selectAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1515,        DateTickUnit unit = getTickUnit();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1516,        Date tickDate = calculateLowestVisibleTickValue(unit);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1517,        Date upperDate = getMaximumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1519,        while (tickDate.before(upperDate)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1521,            if (!isHiddenValue(tickDate.getTime())) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1524,                DateFormat formatter = getDateFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1525,                if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1526,                    tickLabel = formatter.format(tickDate);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1529,                    tickLabel = this.tickUnit.dateToString(tickDate);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1531,                TextAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1532,                TextAnchor rotationAnchor = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1533,                double angle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1534,                if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1535,                    anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1536,                    rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1537,                    if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1538,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1541,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1545,                    if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1546,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1547,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1550,                        anchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1551,                        rotationAnchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1555,"                Tick tick = new DateTick(tickDate, tickLabel, anchor, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1557,                result.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1558,"                tickDate = unit.addToDate(tickDate, this.timeZone);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1559,            },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1561,"                tickDate = unit.rollDate(tickDate, this.timeZone);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1562,                continue;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1566,            switch (unit.getUnit()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1573,                    break;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1575,"                    tickDate = calculateDateForPosition(new Month(tickDate,",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1577,                    break;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1579,"                    tickDate = calculateDateForPosition(new Year(tickDate, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1581,                    break;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1583,                default: break;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1588,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1605,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1607,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1608,        g2.setFont(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1610,        if (isAutoTickUnitSelection()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1611,"            selectAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1613,        DateTickUnit unit = getTickUnit();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1614,        Date tickDate = calculateLowestVisibleTickValue(unit);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1616,        Date upperDate = getMaximumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1617,        while (tickDate.before(upperDate)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1619,            if (!isHiddenValue(tickDate.getTime())) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1622,                DateFormat formatter = getDateFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1623,                if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1624,                    tickLabel = formatter.format(tickDate);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1627,                    tickLabel = this.tickUnit.dateToString(tickDate);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1629,                TextAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1630,                TextAnchor rotationAnchor = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1631,                double angle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1632,                if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1633,                    anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1634,                    rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1635,                    if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1636,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1639,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1643,                    if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1644,                        anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1645,                        rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1648,                        anchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1649,                        rotationAnchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1653,"                Tick tick = new DateTick(tickDate, tickLabel, anchor, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1655,                result.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1656,"                tickDate = unit.addToDate(tickDate, this.timeZone);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1657,            },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1659,"                tickDate = unit.rollDate(tickDate, this.timeZone);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1662,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1689,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1690,            AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1693,"            List ticks = refreshTicks(g2, state, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1694,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1695,            return state;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1699,"        AxisState state = drawTickMarksAndLabels(g2, cursor, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1704,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1707,        return state;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1718,        double start = this.timeline.toTimelineValue(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1721,        double length = (this.timeline.toTimelineValue(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1725,        Range adjusted = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1726,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1727,            adjusted = new DateRange(this.timeline.toMillisecond((long) (start ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1733,            adjusted = new DateRange(this.timeline.toMillisecond(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1738,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1739,    } ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1749,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1750,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1752,        if (!(obj instanceof DateAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1753,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1755,        DateAxis that = (DateAxis) obj;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1756,"        if (!ObjectUtilities.equal(this.tickUnit, that.tickUnit)) {",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1757,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1759,"        if (!ObjectUtilities.equal(this.dateFormatOverride, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1761,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1763,"        if (!ObjectUtilities.equal(this.tickMarkPosition, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1765,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1767,"        if (!ObjectUtilities.equal(this.timeline, that.timeline)) {",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1768,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1770,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1771,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1773,        return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1782,        if (getLabel() != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1783,            return getLabel().hashCode();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1786,            return 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1800,        DateAxis clone = (DateAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1803,        if (this.dateFormatOverride != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1804,            clone.dateFormatOverride ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,1809,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,99,        this(null);    ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,100,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,108,        super(label);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,109,        setAxisLineVisible(false);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,110,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,132,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,133,            AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,136,"            List ticks = refreshTicks(g2, state, dataArea, edge); ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,137,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,138,            return state;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,142,        double xOffset = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,143,        double yOffset = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,144,        Plot plot = getPlot();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,145,        if (plot instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,146,            CategoryPlot cp = (CategoryPlot) plot;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,147,            CategoryItemRenderer r = cp.getRenderer();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,148,            if (r instanceof Effect3D) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,149,                Effect3D e3D = (Effect3D) r;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,150,                xOffset = e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,151,                yOffset = e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,155,        double adjustedX = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,156,        double adjustedY = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,157,        double adjustedW = dataArea.getWidth() - xOffset;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,158,        double adjustedH = dataArea.getHeight() - yOffset;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,160,        if (edge == RectangleEdge.LEFT || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,161,            adjustedY += yOffset;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,163,        else if (edge == RectangleEdge.RIGHT || edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,164,            adjustedX += xOffset;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,166,"        Rectangle2D adjustedDataArea = new Rectangle2D.Double(adjustedX, ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,170,"        AxisState info = drawTickMarksAndLabels(g2, cursor, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,174,"        info = drawLabel(getLabel(), g2, plotArea, dataArea, edge, info, ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,15,177,        return info;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,187,        this(null);    ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,188,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,196,"        super(label, NumberAxis.createStandardTickUnits());",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,197,        this.rangeType = RangeType.FULL;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,198,        this.autoRangeIncludesZero = DEFAULT_AUTO_RANGE_INCLUDES_ZERO;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,199,        this.autoRangeStickyZero = DEFAULT_AUTO_RANGE_STICKY_ZERO;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,200,        this.tickUnit = DEFAULT_TICK_UNIT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,201,        this.numberFormatOverride = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,202,        this.markerBand = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,203,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,148,    public static final NumberTickUnit DEFAULT_TICK_UNIT = new NumberTickUnit(,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,213,        return this.rangeType;   ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,224,        if (rangeType == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,225,"            throw new IllegalArgumentException(""Null 'rangeType' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,227,        this.rangeType = rangeType;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,228,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,229,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,238,        return this.autoRangeIncludesZero;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,255,        if (this.autoRangeIncludesZero != flag) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,256,            this.autoRangeIncludesZero = flag;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,257,            if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,258,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,260,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,262,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,273,        return this.autoRangeStickyZero;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,285,        if (this.autoRangeStickyZero != flag) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,286,            this.autoRangeStickyZero = flag;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,287,            if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,288,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,290,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,292,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,308,        return this.tickUnit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,325,"        setTickUnit(unit, true, true);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,326,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,342,        if (unit == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,343,"            throw new IllegalArgumentException(""Null 'unit' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,345,        this.tickUnit = unit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,346,        if (turnOffAutoSelect) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,347,"            setAutoTickUnitSelection(false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,349,        if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,350,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,353,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,364,        return this.numberFormatOverride;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,376,        this.numberFormatOverride = formatter;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,377,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,378,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,388,        return this.markerBand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,402,        this.markerBand = band;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,403,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,404,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,411,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,412,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,414,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,421,        Plot plot = getPlot();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,422,        if (plot == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,423,"            return;  // no plot, no data",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,426,        if (plot instanceof ValueAxisPlot) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,427,            ValueAxisPlot vap = (ValueAxisPlot) plot;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,429,            Range r = vap.getDataRange(this);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,430,            if (r == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,431,                r = getDefaultAutoRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,434,            double upper = r.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,435,            double lower = r.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,436,            if (this.rangeType == RangeType.POSITIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,437,"                lower = Math.max(0.0, lower);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,438,"                upper = Math.max(0.0, upper);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,440,            else if (this.rangeType == RangeType.NEGATIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,441,"                lower = Math.min(0.0, lower);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,442,"                upper = Math.min(0.0, upper);                   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,445,            if (getAutoRangeIncludesZero()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,446,"                lower = Math.min(lower, 0.0);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,447,"                upper = Math.max(upper, 0.0);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,449,            double range = upper - lower;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,452,            double fixedAutoRange = getFixedAutoRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,453,            if (fixedAutoRange > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,454,                lower = upper - fixedAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,458,                double minRange = getAutoRangeMinimumSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,459,                if (range < minRange) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,460,                    double expand = (minRange - range) / 2;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,461,                    upper = upper + expand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,462,                    lower = lower - expand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,463,                    if (lower == upper) { // see bug report 1549218,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,464,                        double adjust = Math.abs(lower) / 10.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,465,                        lower = lower - adjust;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,466,                        upper = upper + adjust;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,468,                    if (this.rangeType == RangeType.POSITIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,469,                        if (lower < 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,470,                            upper = upper - lower;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,471,                            lower = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,474,                    else if (this.rangeType == RangeType.NEGATIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,475,                        if (upper > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,476,                            lower = lower - upper;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,477,                            upper = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,482,                if (getAutoRangeStickyZero()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,483,                    if (upper <= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,484,"                        upper = Math.min(0.0, upper + getUpperMargin() * range);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,487,                        upper = upper + getUpperMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,489,                    if (lower >= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,490,"                        lower = Math.max(0.0, lower - getLowerMargin() * range);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,493,                        lower = lower - getLowerMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,497,                    upper = upper + getUpperMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,498,                    lower = lower - getLowerMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,502,"            setRange(new Range(lower, upper), false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,505,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,524,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,525,        double axisMin = range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,526,        double axisMax = range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,528,        double min = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,529,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,530,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,531,            min = area.getX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,532,            max = area.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,534,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,535,            max = area.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,536,            min = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,538,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,539,            return max ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,543,            return min ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,564,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,565,        double axisMin = range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,566,        double axisMax = range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,568,        double min = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,569,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,570,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,571,            min = area.getX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,572,            max = area.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,574,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,575,            min = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,576,            max = area.getY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,578,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,579,            return axisMax ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,583,            return axisMin ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,598,        double unit = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,599,        double index = Math.ceil(getRange().getLowerBound() / unit);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,600,        return index * unit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,613,        double unit = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,614,        double index = Math.floor(getRange().getUpperBound() / unit);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,615,        return index * unit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,626,        double unit = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,627,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,628,        return (int) (Math.floor(range.getUpperBound() / unit),0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,656,        AxisState state = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,658,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,659,            state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,662,"            List ticks = refreshTicks(g2, state, dataArea, edge); ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,663,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,664,            return state;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,668,"        state = drawTickMarksAndLabels(g2, cursor, plotArea, dataArea, edge,",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,680,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,683,        return state;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,701,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,702,"        DecimalFormat df0 = new DecimalFormat(""0.00000000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,703,"        DecimalFormat df1 = new DecimalFormat(""0.0000000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,704,"        DecimalFormat df2 = new DecimalFormat(""0.000000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,705,"        DecimalFormat df3 = new DecimalFormat(""0.00000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,706,"        DecimalFormat df4 = new DecimalFormat(""0.0000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,707,"        DecimalFormat df5 = new DecimalFormat(""0.000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,708,"        DecimalFormat df6 = new DecimalFormat(""0.00"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,709,"        DecimalFormat df7 = new DecimalFormat(""0.0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,710,"        DecimalFormat df8 = new DecimalFormat(""#,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,711,"        DecimalFormat df9 = new DecimalFormat(""#,###,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,712,"        DecimalFormat df10 = new DecimalFormat(""#,###,###,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,716,"        units.add(new NumberTickUnit(0.0000001, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,717,"        units.add(new NumberTickUnit(0.000001, df2));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,718,"        units.add(new NumberTickUnit(0.00001, df3));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,719,"        units.add(new NumberTickUnit(0.0001, df4));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,720,"        units.add(new NumberTickUnit(0.001, df5));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,721,"        units.add(new NumberTickUnit(0.01, df6));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,722,"        units.add(new NumberTickUnit(0.1, df7));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,723,"        units.add(new NumberTickUnit(1, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,724,"        units.add(new NumberTickUnit(10, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,725,"        units.add(new NumberTickUnit(100, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,726,"        units.add(new NumberTickUnit(1000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,727,"        units.add(new NumberTickUnit(10000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,728,"        units.add(new NumberTickUnit(100000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,729,"        units.add(new NumberTickUnit(1000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,730,"        units.add(new NumberTickUnit(10000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,731,"        units.add(new NumberTickUnit(100000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,732,"        units.add(new NumberTickUnit(1000000000, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,733,"        units.add(new NumberTickUnit(10000000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,734,"        units.add(new NumberTickUnit(100000000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,736,"        units.add(new NumberTickUnit(0.00000025, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,737,"        units.add(new NumberTickUnit(0.0000025, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,738,"        units.add(new NumberTickUnit(0.000025, df2));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,739,"        units.add(new NumberTickUnit(0.00025, df3));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,740,"        units.add(new NumberTickUnit(0.0025, df4));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,741,"        units.add(new NumberTickUnit(0.025, df5));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,742,"        units.add(new NumberTickUnit(0.25, df6));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,743,"        units.add(new NumberTickUnit(2.5, df7));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,744,"        units.add(new NumberTickUnit(25, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,745,"        units.add(new NumberTickUnit(250, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,746,"        units.add(new NumberTickUnit(2500, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,747,"        units.add(new NumberTickUnit(25000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,748,"        units.add(new NumberTickUnit(250000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,749,"        units.add(new NumberTickUnit(2500000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,750,"        units.add(new NumberTickUnit(25000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,751,"        units.add(new NumberTickUnit(250000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,752,"        units.add(new NumberTickUnit(2500000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,753,"        units.add(new NumberTickUnit(25000000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,754,"        units.add(new NumberTickUnit(250000000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,756,"        units.add(new NumberTickUnit(0.0000005, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,757,"        units.add(new NumberTickUnit(0.000005, df2));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,758,"        units.add(new NumberTickUnit(0.00005, df3));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,759,"        units.add(new NumberTickUnit(0.0005, df4));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,760,"        units.add(new NumberTickUnit(0.005, df5));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,761,"        units.add(new NumberTickUnit(0.05, df6));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,762,"        units.add(new NumberTickUnit(0.5, df7));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,763,"        units.add(new NumberTickUnit(5L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,764,"        units.add(new NumberTickUnit(50L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,765,"        units.add(new NumberTickUnit(500L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,766,"        units.add(new NumberTickUnit(5000L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,767,"        units.add(new NumberTickUnit(50000L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,768,"        units.add(new NumberTickUnit(500000L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,769,"        units.add(new NumberTickUnit(5000000L, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,770,"        units.add(new NumberTickUnit(50000000L, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,771,"        units.add(new NumberTickUnit(500000000L, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,772,"        units.add(new NumberTickUnit(5000000000L, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,773,"        units.add(new NumberTickUnit(50000000000L, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,774,"        units.add(new NumberTickUnit(500000000000L, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,776,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,790,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,791,"        DecimalFormat df0 = new DecimalFormat(""0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,792,"        DecimalFormat df1 = new DecimalFormat(""#,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,793,"        units.add(new NumberTickUnit(1, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,794,"        units.add(new NumberTickUnit(2, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,795,"        units.add(new NumberTickUnit(5, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,796,"        units.add(new NumberTickUnit(10, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,797,"        units.add(new NumberTickUnit(20, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,798,"        units.add(new NumberTickUnit(50, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,799,"        units.add(new NumberTickUnit(100, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,800,"        units.add(new NumberTickUnit(200, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,801,"        units.add(new NumberTickUnit(500, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,802,"        units.add(new NumberTickUnit(1000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,803,"        units.add(new NumberTickUnit(2000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,804,"        units.add(new NumberTickUnit(5000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,805,"        units.add(new NumberTickUnit(10000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,806,"        units.add(new NumberTickUnit(20000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,807,"        units.add(new NumberTickUnit(50000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,808,"        units.add(new NumberTickUnit(100000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,809,"        units.add(new NumberTickUnit(200000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,810,"        units.add(new NumberTickUnit(500000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,811,"        units.add(new NumberTickUnit(1000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,812,"        units.add(new NumberTickUnit(2000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,813,"        units.add(new NumberTickUnit(5000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,814,"        units.add(new NumberTickUnit(10000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,815,"        units.add(new NumberTickUnit(20000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,816,"        units.add(new NumberTickUnit(50000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,817,"        units.add(new NumberTickUnit(100000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,818,"        units.add(new NumberTickUnit(200000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,819,"        units.add(new NumberTickUnit(500000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,820,"        units.add(new NumberTickUnit(1000000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,821,"        units.add(new NumberTickUnit(2000000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,822,"        units.add(new NumberTickUnit(5000000000.0, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,823,"        units.add(new NumberTickUnit(10000000000.0, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,825,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,846,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,848,        NumberFormat numberFormat = NumberFormat.getNumberInstance(locale);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,852,"        units.add(new NumberTickUnit(0.0000001,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,853,"        units.add(new NumberTickUnit(0.000001,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,854,"        units.add(new NumberTickUnit(0.00001,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,855,"        units.add(new NumberTickUnit(0.0001,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,856,"        units.add(new NumberTickUnit(0.001,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,857,"        units.add(new NumberTickUnit(0.01,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,858,"        units.add(new NumberTickUnit(0.1,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,859,"        units.add(new NumberTickUnit(1,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,860,"        units.add(new NumberTickUnit(10,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,861,"        units.add(new NumberTickUnit(100,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,862,"        units.add(new NumberTickUnit(1000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,863,"        units.add(new NumberTickUnit(10000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,864,"        units.add(new NumberTickUnit(100000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,865,"        units.add(new NumberTickUnit(1000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,866,"        units.add(new NumberTickUnit(10000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,867,"        units.add(new NumberTickUnit(100000000,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,868,"        units.add(new NumberTickUnit(1000000000,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,869,"        units.add(new NumberTickUnit(10000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,871,"        units.add(new NumberTickUnit(0.00000025,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,872,"        units.add(new NumberTickUnit(0.0000025,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,873,"        units.add(new NumberTickUnit(0.000025,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,874,"        units.add(new NumberTickUnit(0.00025,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,875,"        units.add(new NumberTickUnit(0.0025,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,876,"        units.add(new NumberTickUnit(0.025,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,877,"        units.add(new NumberTickUnit(0.25,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,878,"        units.add(new NumberTickUnit(2.5,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,879,"        units.add(new NumberTickUnit(25,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,880,"        units.add(new NumberTickUnit(250,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,881,"        units.add(new NumberTickUnit(2500,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,882,"        units.add(new NumberTickUnit(25000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,883,"        units.add(new NumberTickUnit(250000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,884,"        units.add(new NumberTickUnit(2500000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,885,"        units.add(new NumberTickUnit(25000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,886,"        units.add(new NumberTickUnit(250000000,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,887,"        units.add(new NumberTickUnit(2500000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,888,"        units.add(new NumberTickUnit(25000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,890,"        units.add(new NumberTickUnit(0.0000005,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,891,"        units.add(new NumberTickUnit(0.000005,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,892,"        units.add(new NumberTickUnit(0.00005,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,893,"        units.add(new NumberTickUnit(0.0005,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,894,"        units.add(new NumberTickUnit(0.005,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,895,"        units.add(new NumberTickUnit(0.05,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,896,"        units.add(new NumberTickUnit(0.5,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,897,"        units.add(new NumberTickUnit(5L,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,898,"        units.add(new NumberTickUnit(50L,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,899,"        units.add(new NumberTickUnit(500L,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,900,"        units.add(new NumberTickUnit(5000L,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,901,"        units.add(new NumberTickUnit(50000L,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,902,"        units.add(new NumberTickUnit(500000L,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,903,"        units.add(new NumberTickUnit(5000000L,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,904,"        units.add(new NumberTickUnit(50000000L,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,905,"        units.add(new NumberTickUnit(500000000L,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,906,"        units.add(new NumberTickUnit(5000000000L,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,907,"        units.add(new NumberTickUnit(50000000000L,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,909,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,925,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,927,        NumberFormat numberFormat = NumberFormat.getNumberInstance(locale);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,929,"        units.add(new NumberTickUnit(1,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,930,"        units.add(new NumberTickUnit(2,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,931,"        units.add(new NumberTickUnit(5,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,932,"        units.add(new NumberTickUnit(10,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,933,"        units.add(new NumberTickUnit(20,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,934,"        units.add(new NumberTickUnit(50,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,935,"        units.add(new NumberTickUnit(100,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,936,"        units.add(new NumberTickUnit(200,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,937,"        units.add(new NumberTickUnit(500,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,938,"        units.add(new NumberTickUnit(1000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,939,"        units.add(new NumberTickUnit(2000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,940,"        units.add(new NumberTickUnit(5000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,941,"        units.add(new NumberTickUnit(10000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,942,"        units.add(new NumberTickUnit(20000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,943,"        units.add(new NumberTickUnit(50000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,944,"        units.add(new NumberTickUnit(100000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,945,"        units.add(new NumberTickUnit(200000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,946,"        units.add(new NumberTickUnit(500000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,947,"        units.add(new NumberTickUnit(1000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,948,"        units.add(new NumberTickUnit(2000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,949,"        units.add(new NumberTickUnit(5000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,950,"        units.add(new NumberTickUnit(10000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,951,"        units.add(new NumberTickUnit(20000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,952,"        units.add(new NumberTickUnit(50000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,953,"        units.add(new NumberTickUnit(100000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,954,"        units.add(new NumberTickUnit(200000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,955,"        units.add(new NumberTickUnit(500000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,956,"        units.add(new NumberTickUnit(1000000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,957,"        units.add(new NumberTickUnit(2000000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,958,"        units.add(new NumberTickUnit(5000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,959,"        units.add(new NumberTickUnit(10000000000.0,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,961,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,974,        RectangleInsets tickLabelInsets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,975,        double result = tickLabelInsets.getTop() + tickLabelInsets.getBottom();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,977,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,978,        FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,979,"        result += tickLabelFont.getLineMetrics(""123"", frc).getHeight();",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,980,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1000,        RectangleInsets tickLabelInsets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1001,        double result = tickLabelInsets.getLeft() + tickLabelInsets.getRight();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1003,        if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1006,            FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1007,"            LineMetrics lm = getTickLabelFont().getLineMetrics(""0"", frc);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1008,            result += lm.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1009,        },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1012,            FontMetrics fm = g2.getFontMetrics(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1013,            Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1014,            double lower = range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1015,            double upper = range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1016,"            String lowerStr = """";",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1017,"            String upperStr = """";",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1018,            NumberFormat formatter = getNumberFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1019,            if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1020,                lowerStr = formatter.format(lower);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1021,                upperStr = formatter.format(upper);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1024,                lowerStr = unit.valueToString(lower);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1025,                upperStr = unit.valueToString(upper);                ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1027,            double w1 = fm.stringWidth(lowerStr);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1028,            double w2 = fm.stringWidth(upperStr);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1029,"            result += Math.max(w1, w2);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1032,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1049,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1050,"            selectHorizontalAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1052,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1053,"            selectVerticalAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1056,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1071,        double tickLabelWidth = estimateMaximumTickLabelWidth(,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1076,        TickUnitSource tickUnits = getStandardTickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1077,        TickUnit unit1 = tickUnits.getCeilingTickUnit(getTickUnit());,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1078,"        double unit1Width = lengthToJava2D(unit1.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1081,        double guess = (tickLabelWidth / unit1Width) * unit1.getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1083,        NumberTickUnit unit2 ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1085,"        double unit2Width = lengthToJava2D(unit2.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1087,"        tickLabelWidth = estimateMaximumTickLabelWidth(g2, unit2);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1088,        if (tickLabelWidth > unit2Width) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1089,            unit2 = (NumberTickUnit) tickUnits.getLargerTickUnit(unit2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1092,"        setTickUnit(unit2, false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1094,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1109,        double tickLabelHeight = estimateMaximumTickLabelHeight(g2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1112,        TickUnitSource tickUnits = getStandardTickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1113,        TickUnit unit1 = tickUnits.getCeilingTickUnit(getTickUnit());,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1114,"        double unitHeight = lengthToJava2D(unit1.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1117,        double guess = (tickLabelHeight / unitHeight) * unit1.getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1119,        NumberTickUnit unit2 ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1121,"        double unit2Height = lengthToJava2D(unit2.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1123,        tickLabelHeight = estimateMaximumTickLabelHeight(g2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1124,        if (tickLabelHeight > unit2Height) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1125,            unit2 = (NumberTickUnit) tickUnits.getLargerTickUnit(unit2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1128,"        setTickUnit(unit2, false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1130,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1149,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1150,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1151,"            result = refreshTicksHorizontal(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1153,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1154,"            result = refreshTicksVertical(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1156,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1174,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1176,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1177,        g2.setFont(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1179,        if (isAutoTickUnitSelection()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1180,"            selectAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1183,        double size = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1184,        int count = calculateVisibleTickCount();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1185,        double lowestTickValue = calculateLowestVisibleTickValue();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1187,        if (count <= ValueAxis.MAXIMUM_TICK_COUNT) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1188,            for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1189,                double currentTickValue = lowestTickValue + (i * size);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1191,                NumberFormat formatter = getNumberFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1192,                if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1193,                    tickLabel = formatter.format(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1196,                    tickLabel = getTickUnit().valueToString(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1198,                TextAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1199,                TextAnchor rotationAnchor = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1200,                double angle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1201,                if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1202,                    anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1203,                    rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1204,                    if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1205,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1208,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1212,                    if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1213,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1214,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1217,                        anchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1218,                        rotationAnchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1222,"                Tick tick = new NumberTick(new Double(currentTickValue), ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1224,                result.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1227,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1246,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1247,        result.clear();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1249,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1250,        g2.setFont(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1251,        if (isAutoTickUnitSelection()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1252,"            selectAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1255,        double size = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1256,        int count = calculateVisibleTickCount();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1257,        double lowestTickValue = calculateLowestVisibleTickValue();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1259,        if (count <= ValueAxis.MAXIMUM_TICK_COUNT) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1260,            for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1261,                double currentTickValue = lowestTickValue + (i * size);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1263,                NumberFormat formatter = getNumberFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1264,                if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1265,                    tickLabel = formatter.format(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1268,                    tickLabel = getTickUnit().valueToString(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1271,                TextAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1272,                TextAnchor rotationAnchor = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1273,                double angle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1274,                if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1275,                    if (edge == RectangleEdge.LEFT) { ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1276,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1277,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1278,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1281,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1282,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1283,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1287,                    if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1288,                        anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1289,                        rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1292,                        anchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1293,                        rotationAnchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1297,                Tick tick = new NumberTick(,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1301,                result.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1304,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1317,        NumberAxis clone = (NumberAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1318,        if (this.numberFormatOverride != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1319,            clone.numberFormatOverride ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1322,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1333,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1334,            return true;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1336,        if (!(obj instanceof NumberAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1337,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1339,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1340,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1342,        NumberAxis that = (NumberAxis) obj;        ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1343,        if (this.autoRangeIncludesZero != that.autoRangeIncludesZero) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1344,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1346,        if (this.autoRangeStickyZero != that.autoRangeStickyZero) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1347,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1349,"        if (!ObjectUtilities.equal(this.tickUnit, that.tickUnit)) {",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1350,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1352,"        if (!ObjectUtilities.equal(this.numberFormatOverride, ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1354,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1356,        if (!this.rangeType.equals(that.rangeType)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1357,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1359,        return true; ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1368,        if (getLabel() != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1369,            return getLabel().hashCode();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,15,1372,            return 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,202,"    private static class DefaultTimeline implements Timeline, Serializable {",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,212,            return millisecond;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,223,            return date.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,235,            return value;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,247,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,259,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,272,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,285,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,296,            if (object == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,297,                return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,299,            if (object == this) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,300,                return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,302,            if (object instanceof DefaultTimeline) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,303,                return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,15,305,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,83,        this(null);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,84,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,92,        super(label);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,93,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,119,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,120,            return new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,126,        CategoryPlot plot = (CategoryPlot) getPlot();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,128,        Rectangle2D adjustedDataArea = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,129,        if (plot.getRenderer() instanceof Effect3D) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,130,            Effect3D e3D = (Effect3D) plot.getRenderer();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,131,            double adjustedX = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,132,            double adjustedY = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,133,            double adjustedW = dataArea.getWidth() - e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,134,            double adjustedH = dataArea.getHeight() - e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,136,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,137,                adjustedY += e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,139,            else if (edge == RectangleEdge.RIGHT || edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,140,                adjustedX += e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,142,"            adjustedDataArea.setRect(adjustedX, adjustedY, adjustedW, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,144,        },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,146,            adjustedDataArea.setRect(dataArea);   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,150,        AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,151,"        state = drawCategoryLabels(g2, plotArea, adjustedDataArea, edge, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,153,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,156,        return state;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,177,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,178,        Rectangle2D adjustedArea = area;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,179,        CategoryPlot plot = (CategoryPlot) getPlot();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,180,        CategoryItemRenderer renderer = plot.getRenderer();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,181,        if (renderer instanceof Effect3D) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,182,            Effect3D e3D = (Effect3D) renderer;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,183,            double adjustedX = area.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,184,            double adjustedY = area.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,185,            double adjustedW = area.getWidth() - e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,186,            double adjustedH = area.getHeight() - e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,188,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,189,                adjustedY += e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,191,            else if (edge == RectangleEdge.RIGHT || edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,192,                adjustedX += e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,194,"            adjustedArea = new Rectangle2D.Double(adjustedX, adjustedY, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,198,        if (anchor == CategoryAnchor.START) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,199,"            result = getCategoryStart(category, categoryCount, adjustedArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,202,        else if (anchor == CategoryAnchor.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,203,"            result = getCategoryMiddle(category, categoryCount, adjustedArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,206,        else if (anchor == CategoryAnchor.END) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,207,"            result = getCategoryEnd(category, categoryCount, adjustedArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,210,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,15,223,        return super.clone();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,84,        this(Color.black);    ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,85,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,93,"        this(new RectangleInsets(1, 1, 1, 1), paint);   ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,94,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,105,"        this(new RectangleInsets(top, left, bottom, right), Color.black);    ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,106,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,119,"        this(new RectangleInsets(top, left, bottom, right), paint);    ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,120,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,130,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,133,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,154,        return this.paint;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,177,"            rect.setRect(x, y, w, t);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,178,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,181,"            rect.setRect(x, y + h - b, w, b);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,182,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,185,"            rect.setRect(x, y, l, h);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,186,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,189,"            rect.setRect(x + w - r, y, r, h);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,190,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,202,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,203,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,205,        if (!(obj instanceof BlockBorder)) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,206,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,208,        BlockBorder that = (BlockBorder) obj;,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,209,        if (!this.insets.equals(that.insets)) {,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,210,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,212,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,213,            return false;,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,215,        return true;,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,226,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,227,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,228,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,240,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,241,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,15,242,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,91,"                             double hGap, double vGap) {        ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,92,        this.horizontalAlignment = hAlign;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,93,        this.verticalAlignment = vAlign;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,94,        this.horizontalGap = hGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,95,        this.verticalGap = vGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,96,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,109,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,126,        LengthConstraintType w = constraint.getWidthConstraintType();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,127,        LengthConstraintType h = constraint.getHeightConstraintType();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,128,        if (w == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,129,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,130,"                return arrangeNN(container, g2);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,132,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,133,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,135,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,136,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,139,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,140,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,141,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,143,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,144,"                return arrangeFF(container, g2, constraint); ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,146,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,147,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,150,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,151,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,152,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,154,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,155,"                return arrangeRF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,157,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,158,"                return arrangeRR(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,161,        return new Size2D();  // TODO: complete this,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,180,"        return arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,198,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,200,        double height = constraint.getHeight();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,201,        if (height <= 0.0) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,202,            height = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,205,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,206,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,207,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,208,        List itemsInColumn = new ArrayList();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,209,        for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,210,            Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,211,"            Size2D size = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,212,            if (y + size.height <= height) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,213,                itemsInColumn.add(block);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,214,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,217,                y = y + size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,218,"                maxWidth = Math.max(maxWidth, size.width);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,221,                if (itemsInColumn.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,223,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,228,                    y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,229,                    x = x + size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,233,                    itemsInColumn.clear();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,234,                    x = x + maxWidth + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,235,                    y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,236,                    maxWidth = size.width;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,237,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,242,                    y = size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,243,                    itemsInColumn.add(block);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,247,"        return new Size2D(x + maxWidth, constraint.getHeight());  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,255,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,256,        if (constraint.getHeightRange().contains(s1.height)) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,257,            return s1;  // TODO: we didn't check the width yet,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,260,            RectangleConstraint c = constraint.toFixedHeight(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,263,"            return arrangeRF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,280,"        Size2D s = arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,281,        if (constraint.getWidthRange().contains(s.width)) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,282,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,285,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,288,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,302,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,303,        double height = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,304,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,305,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,306,        int blockCount = blocks.size();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,307,        if (blockCount > 0) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,308,            Size2D[] sizes = new Size2D[blocks.size()];,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,309,            for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,310,                Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,311,"                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,312,                height = height + sizes[i].getHeight();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,313,"                maxWidth = Math.max(sizes[i].width, maxWidth);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,314,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,319,                y = y + sizes[i].height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,321,            if (blockCount > 1) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,322,                height = height + this.verticalGap * (blockCount - 1);   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,324,            if (this.horizontalAlignment != HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,325,                for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,327,                    if (this.horizontalAlignment ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,331,                    else if (this.horizontalAlignment ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,338,"        return new Size2D(maxWidth, height);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,346,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,356,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,357,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,359,        if (!(obj instanceof ColumnArrangement)) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,360,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,362,        ColumnArrangement that = (ColumnArrangement) obj;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,363,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,364,            return false;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,366,        if (this.verticalAlignment != that.verticalAlignment) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,367,            return false;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,369,        if (this.horizontalGap != that.horizontalGap) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,370,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,372,        if (this.verticalGap != that.verticalGap) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,373,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,15,375,        return true;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,84,        return this.name;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,96,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,97,            return true;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,99,        if (!(obj instanceof LengthConstraintType)) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,100,            return false;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,102,        LengthConstraintType that = (LengthConstraintType) obj;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,103,        if (!this.name.equals(that.toString())) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,104,            return false;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,106,        return true;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,115,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,126,        if (this.equals(LengthConstraintType.NONE)) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,127,            return LengthConstraintType.NONE;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,129,        else if (this.equals(LengthConstraintType.RANGE)) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,130,            return LengthConstraintType.RANGE;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,132,        else if (this.equals(LengthConstraintType.FIXED)) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,133,            return LengthConstraintType.FIXED;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,15,135,        return null;,0.0,0,-1,0
org/jfree/chart/block/BlockParams,15,104,        return this.translateX;   ,0.0,0,-1,0
org/jfree/chart/block/BlockParams,15,114,        this.translateX = x;   ,0.0,0,-1,0
org/jfree/chart/block/BlockParams,15,115,    },0.0,0,-1,0
org/jfree/chart/block/BlockParams,15,124,        return this.translateY;   ,0.0,0,-1,0
org/jfree/chart/block/BlockParams,15,134,        this.translateY = y;   ,0.0,0,-1,0
org/jfree/chart/block/BlockParams,15,135,    },0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,110,    },0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,127,        LengthConstraintType w = constraint.getWidthConstraintType();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,128,        LengthConstraintType h = constraint.getHeightConstraintType();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,129,        if (w == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,130,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,131,"                return arrangeNN(container, g2);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,133,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,134,"                return arrangeNF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,136,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,137,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,140,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,141,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,142,"                return arrangeFN(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,144,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,145,"                return arrangeFF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,147,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,148,"                return arrangeFR(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,151,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,152,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,153,"                return arrangeRN(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,155,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,156,"                return arrangeRF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,158,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,159,"                return arrangeRR(container, g2, constraint);   ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,162,"        throw new RuntimeException(""Unrecognised constraint type."");",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,179,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,180,        double width = constraint.getWidth();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,182,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,183,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,184,        double maxHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,185,        List itemsInRow = new ArrayList();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,186,        for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,187,            Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,188,"            Size2D size = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,189,            if (x + size.width <= width) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,190,                itemsInRow.add(block);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,191,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,194,                x = x + size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,195,"                maxHeight = Math.max(maxHeight, size.height);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,198,                if (itemsInRow.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,200,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,205,                    x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,206,                    y = y + size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,210,                    itemsInRow.clear();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,211,                    x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,212,                    y = y + maxHeight + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,213,                    maxHeight = size.height;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,214,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,219,                    x = size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,220,                    itemsInRow.add(block);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,224,"        return new Size2D(constraint.getWidth(), y + maxHeight);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,240,"        Size2D s = arrangeFN(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,241,        if (constraint.getHeightRange().contains(s.height)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,242,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,245,            RectangleConstraint c = constraint.toFixedHeight(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,248,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,266,"        return arrangeFN(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,284,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,285,        if (constraint.getWidthRange().contains(s1.width)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,286,            return s1;  // TODO: we didn't check the height yet,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,289,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,292,"            return arrangeFR(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,309,"        Size2D s = arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,310,        if (constraint.getWidthRange().contains(s.width)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,311,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,314,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,317,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,335,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,336,        if (constraint.getWidthRange().contains(s1.width)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,337,            return s1;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,340,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,343,"            return arrangeFN(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,357,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,358,        double width = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,359,        double maxHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,360,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,361,        int blockCount = blocks.size();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,362,        if (blockCount > 0) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,363,            Size2D[] sizes = new Size2D[blocks.size()];,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,364,            for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,365,                Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,366,"                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,367,                width = width + sizes[i].getWidth();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,368,"                maxHeight = Math.max(sizes[i].height, maxHeight);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,369,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,374,                x = x + sizes[i].width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,376,            if (blockCount > 1) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,377,                width = width + this.horizontalGap * (blockCount - 1);   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,379,            if (this.verticalAlignment != VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,380,                for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,382,                    if (this.verticalAlignment == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,385,                    else if (this.verticalAlignment ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,392,"        return new Size2D(width, maxHeight);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,408,"        return arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,426,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,427,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,429,        if (!(obj instanceof FlowArrangement)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,430,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,432,        FlowArrangement that = (FlowArrangement) obj;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,433,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,434,            return false;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,436,        if (this.verticalAlignment != that.verticalAlignment) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,437,            return false;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,439,        if (this.horizontalGap != that.horizontalGap) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,440,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,442,        if (this.verticalGap != that.verticalGap) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,443,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,15,445,        return true;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,95,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,98,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,101,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,114,        return this.paint;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,132,        return this.stroke;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,148,        double t = this.insets.calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,149,        double b = this.insets.calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,150,        double l = this.insets.calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,151,        double r = this.insets.calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,152,        double x = area.getX();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,153,        double y = area.getY();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,154,        double x0 = x + l / 2.0;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,155,        double x1 = x + w - r / 2.0;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,156,        double y0 = y + h - b / 2.0;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,157,        double y1 = y + t / 2.0;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,158,        g2.setPaint(getPaint());,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,159,        g2.setStroke(getStroke());,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,160,        Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,161,        if (t > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,162,"            line.setLine(x0, y1, x1, y1);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,163,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,165,        if (b > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,166,"            line.setLine(x0, y0, x1, y0);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,167,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,169,        if (l > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,170,"            line.setLine(x0, y0, x0, y1);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,171,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,173,        if (r > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,174,"            line.setLine(x1, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,175,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,177,    }    ,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,187,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,188,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,190,        if (!(obj instanceof LineBorder)) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,191,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,193,        LineBorder that = (LineBorder) obj;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,194,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,195,            return false;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,197,"        if (!ObjectUtilities.equal(this.stroke, that.stroke)){",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,198,            return false;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,200,        if (!this.insets.equals(that.insets)) {,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,201,            return false;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,203,        return true;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,214,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,215,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,216,"        SerialUtilities.writeStroke(this.stroke, stream);",0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,217,    },0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,229,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,230,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,231,        this.stroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/block/LineBorder,15,232,    }    ,0.0,0,-1,0
org/jfree/chart/block/BlockResult,15,76,        this.entities = entities;,0.0,0,-1,0
org/jfree/chart/block/BlockResult,15,77,    },0.0,0,-1,0
org/jfree/chart/ChartFactory,15,222,public abstract class ChartFactory {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,243,        PiePlot plot = new PiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,244,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator(locale));,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,245,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,246,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,247,            plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale));,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,249,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,274,        PiePlot plot = new PiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,275,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,276,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,277,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,278,            plot.setToolTipGenerator(new StandardPieToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,280,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,281,            plot.setURLGenerator(new StandardPieURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,283,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,333,        PiePlot plot = new PiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,334,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator(locale));,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,335,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,337,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,338,            plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale));,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,341,        List keys = dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,342,        DefaultPieDataset series = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,343,        if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,344,            series = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,347,        double colorPerPercent = 255.0 / percentDiffForMaxScale;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,348,        for (Iterator it = keys.iterator(); it.hasNext();) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,349,            Comparable key = (Comparable) it.next();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,350,            Number newValue = dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,351,            Number oldValue = previousDataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,353,            if (oldValue == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,354,                if (greenForIncrease) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,355,"                    plot.setSectionPaint(key, Color.green);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,358,"                    plot.setSectionPaint(key, Color.red);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,360,                if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,361,"                    series.setValue(key + "" (+100%)"", newValue);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,365,                double percentChange = (newValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,367,                double shade,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,370,                if (greenForIncrease ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,374,"                    plot.setSectionPaint(key, new Color(0, (int) shade, 0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,377,"                    plot.setSectionPaint(key, new Color((int) shade, 0, 0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,379,                if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,380,"                    series.setValue(key + "" ("" + (percentChange >= 0 ? ""+"" : """") ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,385,        },0.0,0,-1,0
org/jfree/chart/ChartFactory,15,387,        if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,388,            plot.setDataset(series);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,391,"        JFreeChart chart =  new JFreeChart(title, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,394,        if (subTitle) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,395,            TextTitle subtitle = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,396,"            subtitle = new TextTitle(""Bright "" + (greenForIncrease ? ""red"" ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,401,            chart.addSubtitle(subtitle);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,404,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,456,        PiePlot plot = new PiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,457,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,458,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,460,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,461,            plot.setToolTipGenerator(new StandardPieToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,463,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,464,            plot.setURLGenerator(new StandardPieURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,467,        List keys = dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,468,        DefaultPieDataset series = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,469,        if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,470,            series = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,473,        double colorPerPercent = 255.0 / percentDiffForMaxScale;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,474,        for (Iterator it = keys.iterator(); it.hasNext();) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,475,            Comparable key = (Comparable) it.next();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,476,            Number newValue = dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,477,            Number oldValue = previousDataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,479,            if (oldValue == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,480,                if (greenForIncrease) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,481,"                    plot.setSectionPaint(key, Color.green);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,484,"                    plot.setSectionPaint(key, Color.red);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,486,                if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,487,"                    series.setValue(key + "" (+100%)"", newValue);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,491,                double percentChange = (newValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,493,                double shade,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,496,                if (greenForIncrease ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,500,"                    plot.setSectionPaint(key, new Color(0, (int) shade, 0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,503,"                    plot.setSectionPaint(key, new Color((int) shade, 0, 0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,505,                if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,506,"                    series.setValue(key + "" ("" + (percentChange >= 0 ? ""+"" : """") ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,511,        },0.0,0,-1,0
org/jfree/chart/ChartFactory,15,513,        if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,514,            plot.setDataset(series);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,517,"        JFreeChart chart =  new JFreeChart(title, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,520,        if (subTitle) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,521,            TextTitle subtitle = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,522,"            subtitle = new TextTitle(""Bright "" + (greenForIncrease ? ""red"" ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,527,            chart.addSubtitle(subtitle);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,530,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,552,        RingPlot plot = new RingPlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,553,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator(locale));,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,554,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,555,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,556,            plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale));,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,558,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,583,        RingPlot plot = new RingPlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,584,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,585,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,586,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,587,            plot.setToolTipGenerator(new StandardPieToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,589,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,590,            plot.setURLGenerator(new StandardPieURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,592,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,619,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,620,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,622,        MultiplePiePlot plot = new MultiplePiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,623,        plot.setDataExtractOrder(order);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,624,        plot.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,625,        plot.setOutlineStroke(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,627,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,628,            PieToolTipGenerator tooltipGenerator ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,630,            PiePlot pp = (PiePlot) plot.getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,631,            pp.setToolTipGenerator(tooltipGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,634,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,635,            PieURLGenerator urlGenerator = new StandardPieURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,636,            PiePlot pp = (PiePlot) plot.getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,637,            pp.setURLGenerator(urlGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,640,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,643,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,665,        PiePlot3D plot = new PiePlot3D(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,666,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,667,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,668,            plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale));,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,670,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,697,            plot.setToolTipGenerator(new StandardPieToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,700,            plot.setURLGenerator(new StandardPieURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,729,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,730,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,732,        MultiplePiePlot plot = new MultiplePiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,733,        plot.setDataExtractOrder(order);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,734,        plot.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,735,        plot.setOutlineStroke(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,737,        JFreeChart pieChart = new JFreeChart(new PiePlot3D(null));,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,738,"        TextTitle seriesTitle = new TextTitle(""Series Title"", ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,740,        seriesTitle.setPosition(RectangleEdge.BOTTOM);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,741,        pieChart.setTitle(seriesTitle);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,742,        pieChart.removeLegend();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,743,        pieChart.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,744,        plot.setPieChart(pieChart);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,746,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,747,            PieToolTipGenerator tooltipGenerator ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,749,            PiePlot pp = (PiePlot) plot.getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,750,            pp.setToolTipGenerator(tooltipGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,753,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,754,            PieURLGenerator urlGenerator = new StandardPieURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,755,            PiePlot pp = (PiePlot) plot.getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,756,            pp.setURLGenerator(urlGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,759,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,762,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,795,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,796,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,798,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,799,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,801,        BarRenderer renderer = new BarRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,802,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,803,            ItemLabelPosition position1 = new ItemLabelPosition(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,805,            renderer.setBasePositiveItemLabelPosition(position1);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,806,            ItemLabelPosition position2 = new ItemLabelPosition(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,808,            renderer.setBaseNegativeItemLabelPosition(position2);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,809,         },0.0,0,-1,0
org/jfree/chart/ChartFactory,15,810,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,811,            ItemLabelPosition position1 = new ItemLabelPosition(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,813,            renderer.setBasePositiveItemLabelPosition(position1);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,814,            ItemLabelPosition position2 = new ItemLabelPosition(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,816,            renderer.setBaseNegativeItemLabelPosition(position2);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,818,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,819,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,822,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,823,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,826,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,828,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,829,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,832,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,866,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,867,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,870,        CategoryAxis categoryAxis = new CategoryAxis(domainAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,871,        ValueAxis valueAxis = new NumberAxis(rangeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,873,        StackedBarRenderer renderer = new StackedBarRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,874,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,875,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,878,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,879,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,882,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,884,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,885,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,888,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,921,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,922,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,924,        CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,925,        ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,927,        BarRenderer3D renderer = new BarRenderer3D();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,928,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,929,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,932,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,933,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,936,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,938,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,939,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,942,            plot.setRowRenderingOrder(SortOrder.DESCENDING);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,943,            plot.setColumnRenderingOrder(SortOrder.DESCENDING);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,945,        plot.setForegroundAlpha(0.75f);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,947,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,950,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,984,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,985,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,987,        CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,988,        ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,991,        CategoryItemRenderer renderer = new StackedBarRenderer3D();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,992,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,993,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,996,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,997,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1001,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1003,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1004,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1007,            plot.setColumnRenderingOrder(SortOrder.DESCENDING);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1011,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1014,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1047,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1048,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1050,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1051,        categoryAxis.setCategoryMargin(0.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1053,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1055,        AreaRenderer renderer = new AreaRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1056,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1057,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1060,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1061,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1064,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1066,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1067,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1070,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1104,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1105,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1107,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1108,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1110,        StackedAreaRenderer renderer = new StackedAreaRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1111,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1112,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1115,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1116,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1119,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1121,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1122,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1125,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1158,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1159,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1161,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1162,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1164,"        LineAndShapeRenderer renderer = new LineAndShapeRenderer(true, false);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1165,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1166,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1169,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1170,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1172,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1174,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1175,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1178,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1211,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1212,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1214,        CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1215,        ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1217,        LineRenderer3D renderer = new LineRenderer3D();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1218,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1219,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1222,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1223,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1225,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1227,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1228,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1231,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1262,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1263,        DateAxis dateAxis = new DateAxis(dateAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1265,        CategoryItemRenderer renderer = new GanttRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1266,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1267,            renderer.setBaseToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1271,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1272,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1275,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, dateAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1277,        plot.setOrientation(PlotOrientation.HORIZONTAL);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1278,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1281,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1314,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1315,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1317,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1318,        categoryAxis.setCategoryMargin(0.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1320,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1322,        WaterfallBarRenderer renderer = new WaterfallBarRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1323,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1324,            ItemLabelPosition position = new ItemLabelPosition(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1327,            renderer.setBasePositiveItemLabelPosition(position);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1328,            renderer.setBaseNegativeItemLabelPosition(position);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1329,         },0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1330,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1331,            ItemLabelPosition position = new ItemLabelPosition(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1334,            renderer.setBasePositiveItemLabelPosition(position);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1335,            renderer.setBaseNegativeItemLabelPosition(position);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1337,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1338,            StandardCategoryToolTipGenerator generator ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1340,            renderer.setBaseToolTipGenerator(generator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1342,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1343,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1346,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1348,        plot.clearRangeMarkers();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1349,        Marker baseline = new ValueMarker(0.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1350,        baseline.setPaint(Color.black);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1351,"        plot.addRangeMarker(baseline, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1352,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1353,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1356,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1380,        PolarPlot plot = new PolarPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1381,        plot.setDataset(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1382,        NumberAxis rangeAxis = new NumberAxis();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1383,        rangeAxis.setAxisLineVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1384,        rangeAxis.setTickMarksVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1385,"        rangeAxis.setTickLabelInsets(new RectangleInsets(0.0, 0.0, 0.0, 0.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1386,        plot.setAxis(rangeAxis);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1387,        plot.setRenderer(new DefaultPolarItemRenderer());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1388,        JFreeChart chart = new JFreeChart(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1390,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1417,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1418,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1420,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1421,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1422,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1423,        yAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1425,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1427,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1428,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1429,            toolTipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1432,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1433,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1434,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1436,"        XYItemRenderer renderer = new XYLineAndShapeRenderer(false, true);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1437,        renderer.setBaseToolTipGenerator(toolTipGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1438,        renderer.setBaseURLGenerator(urlGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1439,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1440,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1442,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1444,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1479,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1480,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1482,        ValueAxis domainAxis = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1483,        if (dateAxis) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1484,            domainAxis = new DateAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1487,            NumberAxis axis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1488,            axis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1489,            domainAxis = axis;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1491,        ValueAxis valueAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1493,        XYBarRenderer renderer = new XYBarRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1494,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1496,            if (dateAxis) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1497,                tt = StandardXYToolTipGenerator.getTimeSeriesInstance();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1500,                tt = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1502,            renderer.setBaseToolTipGenerator(tt);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1504,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1505,            renderer.setBaseURLGenerator(new StandardXYURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1508,"        XYPlot plot = new XYPlot(dataset, domainAxis, valueAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1509,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1511,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1514,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1547,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1548,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1550,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1551,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1552,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1553,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1554,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1555,        plot.setForegroundAlpha(0.5f);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1557,        XYToolTipGenerator tipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1558,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1559,            tipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1562,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1563,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1564,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1567,        plot.setRenderer(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1570,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1573,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1604,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1605,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1607,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1608,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1609,        xAxis.setLowerMargin(0.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1610,        xAxis.setUpperMargin(0.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1611,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1612,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1613,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1614,            toolTipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1617,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1618,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1619,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1621,        StackedXYAreaRenderer2 renderer = new StackedXYAreaRenderer2(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1623,        renderer.setOutline(true);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1624,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1625,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1627,        plot.setRangeAxis(yAxis);  // forces recalculation of the axis range,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1629,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1631,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1660,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1661,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1663,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1664,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1665,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1666,"        XYItemRenderer renderer = new XYLineAndShapeRenderer(true, false);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1667,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1668,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1669,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1670,            renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1672,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1673,            renderer.setBaseURLGenerator(new StandardXYURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1676,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1679,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1707,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1708,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1710,        DateAxis xAxis = new DateAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1711,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1712,        yAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1714,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1715,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1716,            toolTipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1719,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1720,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1721,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1723,        XYItemRenderer renderer ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1726,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1727,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1728,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1729,        plot.setDomainCrosshairVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1730,        plot.setRangeCrosshairVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1731,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1733,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1761,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1762,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1764,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1765,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1766,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1768,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1769,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1770,            toolTipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1773,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1774,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1775,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1777,        XYItemRenderer renderer = new XYStepAreaRenderer(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1781,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1782,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1783,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1784,        plot.setDomainCrosshairVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1785,        plot.setRangeCrosshairVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1786,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1788,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1820,        ValueAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1821,        timeAxis.setLowerMargin(0.02);  // reduce the default margins ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1822,        timeAxis.setUpperMargin(0.02);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1823,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1824,        valueAxis.setAutoRangeIncludesZero(false);  // override default,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1825,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1827,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1828,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1829,            toolTipGenerator ,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1833,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1834,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1835,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1838,"        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer(true, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1840,        renderer.setBaseToolTipGenerator(toolTipGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1841,        renderer.setBaseURLGenerator(urlGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1842,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1844,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1846,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1869,        ValueAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1870,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1871,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1872,        plot.setRenderer(new CandlestickRenderer());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1873,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1875,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1898,        ValueAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1899,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1900,        HighLowRenderer renderer = new HighLowRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1901,        renderer.setBaseToolTipGenerator(new HighLowItemLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1902,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1903,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1905,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1934,        DateAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1935,        timeAxis.setTimeline(timeline);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1936,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1937,        HighLowRenderer renderer = new HighLowRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1938,        renderer.setBaseToolTipGenerator(new HighLowItemLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1939,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1940,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1942,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1973,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1974,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1976,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1977,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1978,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1979,        yAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1981,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1983,        XYItemRenderer renderer = new XYBubbleRenderer(,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1985,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1986,            renderer.setBaseToolTipGenerator(new StandardXYZToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1988,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1989,            renderer.setBaseURLGenerator(new StandardXYZURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1991,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1992,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1994,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,1997,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2027,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2028,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2030,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2031,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2032,        ValueAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2034,        XYItemRenderer renderer = new XYBarRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2035,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2036,            renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2038,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2039,            renderer.setBaseURLGenerator(new StandardXYURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2042,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2043,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2044,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2046,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2070,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2071,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2072,        valueAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2074,        BoxAndWhiskerRenderer renderer = new BoxAndWhiskerRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2075,        renderer.setBaseToolTipGenerator(new BoxAndWhiskerToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2077,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2079,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2102,        ValueAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2103,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2104,        valueAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2105,        XYBoxAndWhiskerRenderer renderer = new XYBoxAndWhiskerRenderer(10.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2106,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2107,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2134,        ValueAxis xAxis = new DateAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2135,        ValueAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2136,"        yAxis.setRange(-12.0, 12.0);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2138,        WindItemRenderer renderer = new WindItemRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2139,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2140,            renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2142,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2143,            renderer.setBaseURLGenerator(new StandardXYURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2145,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2146,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2149,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2173,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2174,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2176,        WaferMapPlot plot = new WaferMapPlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2177,        WaferMapRenderer renderer = new WaferMapRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2178,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2180,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,15,2183,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartColor,15,139,"        super(r, g, b);",0.0,0,-1,0
org/jfree/chart/ChartColor,15,140,    },0.0,0,-1,0
org/jfree/chart/PaintMap,15,93,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/PaintMap,15,94,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/PaintMap,15,96,        return (Paint) this.store.get(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,15,109,        return this.store.containsKey(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,15,123,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/PaintMap,15,124,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/PaintMap,15,126,"        this.store.put(key, paint);",0.0,0,-1,0
org/jfree/chart/PaintMap,15,127,    },0.0,0,-1,0
org/jfree/chart/PaintMap,15,133,        this.store.clear();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,134,    },0.0,0,-1,0
org/jfree/chart/PaintMap,15,144,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/PaintMap,15,145,            return true;,0.0,0,-1,0
org/jfree/chart/PaintMap,15,147,        if (!(obj instanceof PaintMap)) {,0.0,0,-1,0
org/jfree/chart/PaintMap,15,148,            return false;,0.0,0,-1,0
org/jfree/chart/PaintMap,15,150,        PaintMap that = (PaintMap) obj;,0.0,0,-1,0
org/jfree/chart/PaintMap,15,151,        if (this.store.size() != that.store.size()) {,0.0,0,-1,0
org/jfree/chart/PaintMap,15,152,            return false;,0.0,0,-1,0
org/jfree/chart/PaintMap,15,154,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,155,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,156,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/PaintMap,15,157,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,158,            Paint p1 = getPaint(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,15,159,            Paint p2 = that.getPaint(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,15,160,"            if (!PaintUtilities.equal(p1, p2)) {",0.0,0,-1,0
org/jfree/chart/PaintMap,15,161,                return false;,0.0,0,-1,0
org/jfree/chart/PaintMap,15,163,        },0.0,0,-1,0
org/jfree/chart/PaintMap,15,164,        return true;,0.0,0,-1,0
org/jfree/chart/PaintMap,15,177,        return super.clone();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,188,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,189,        stream.writeInt(this.store.size());,0.0,0,-1,0
org/jfree/chart/PaintMap,15,190,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,191,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,192,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/PaintMap,15,193,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,194,            stream.writeObject(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,15,195,            Paint paint = getPaint(key);,0.0,0,-1,0
org/jfree/chart/PaintMap,15,196,"            SerialUtilities.writePaint(paint, stream);",0.0,0,-1,0
org/jfree/chart/PaintMap,15,197,        },0.0,0,-1,0
org/jfree/chart/PaintMap,15,198,    },0.0,0,-1,0
org/jfree/chart/PaintMap,15,210,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,211,        this.store = new HashMap();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,212,        int keyCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,213,        for (int i = 0; i < keyCount; i++) {,0.0,0,-1,0
org/jfree/chart/PaintMap,15,214,            Comparable key = (Comparable) stream.readObject();,0.0,0,-1,0
org/jfree/chart/PaintMap,15,215,            Paint paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/PaintMap,15,216,"            this.store.put(key, paint);",0.0,0,-1,0
org/jfree/chart/PaintMap,15,218,    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,138,    private DatasetUtilities() {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,140,    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,153,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,155,        List keys = dataset.getKeys();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,156,        double totalValue = 0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,157,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,158,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,159,            Comparable current = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,160,            if (current != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,161,                Number value = dataset.getValue(current);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,162,                double v = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,163,                if (value != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,164,                    v = value.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,166,                if (v > 0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,167,                    totalValue = totalValue + v;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,170,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,171,        return totalValue;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,185,        int row = dataset.getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,186,"        return createPieDatasetForRow(dataset, row);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,200,        DefaultPieDataset result = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,201,        int columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,202,        for (int current = 0; current < columnCount; current++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,203,            Comparable columnKey = dataset.getColumnKey(current);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,204,"            result.setValue(columnKey, dataset.getValue(row, current));",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,206,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,220,        int column = dataset.getColumnIndex(columnKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,221,"        return createPieDatasetForColumn(dataset, column);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,235,        DefaultPieDataset result = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,236,        int rowCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,237,        for (int i = 0; i < rowCount; i++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,238,            Comparable rowKey = dataset.getRowKey(i);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,239,"            result.setValue(rowKey, dataset.getValue(i, column));",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,241,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,261,        return DatasetUtilities.createConsolidatedPieDataset(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,286,        DefaultPieDataset result = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,287,        double total = DatasetUtilities.calculatePieDatasetTotal(source);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,290,        List keys = source.getKeys();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,291,        ArrayList otherKeys = new ArrayList();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,292,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,293,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,294,            Comparable currentKey = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,295,            Number dataValue = source.getValue(currentKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,296,            if (dataValue != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,297,                double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,298,                if (value / total < minimumPercent) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,299,                    otherKeys.add(currentKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,302,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,305,        iterator = keys.iterator();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,306,        double otherValue = 0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,307,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,308,            Comparable currentKey = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,309,            Number dataValue = source.getValue(currentKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,310,            if (dataValue != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,311,                if (otherKeys.contains(currentKey) ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,314,                    otherValue += dataValue.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,318,"                    result.setValue(currentKey, dataValue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,321,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,323,        if (otherKeys.size() >= minItems) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,324,"            result.setValue(key, otherValue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,326,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,347,        DefaultCategoryDataset result = new DefaultCategoryDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,348,        for (int r = 0; r < data.length; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,349,            String rowKey = rowKeyPrefix + (r + 1);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,350,            for (int c = 0; c < data[r].length; c++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,351,                String columnKey = columnKeyPrefix + (c + 1);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,352,"                result.addValue(new Double(data[r][c]), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,355,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,376,        DefaultCategoryDataset result = new DefaultCategoryDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,377,        for (int r = 0; r < data.length; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,378,            String rowKey = rowKeyPrefix + (r + 1);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,379,            for (int c = 0; c < data[r].length; c++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,380,                String columnKey = columnKeyPrefix + (c + 1);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,381,"                result.addValue(data[r][c], rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,384,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,406,        if (rowKeys == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,407,"            throw new IllegalArgumentException(""Null 'rowKeys' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,409,        if (columnKeys == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,410,"            throw new IllegalArgumentException(""Null 'columnKeys' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,412,        if (ArrayUtilities.hasDuplicateItems(rowKeys)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,413,"            throw new IllegalArgumentException(""Duplicate items in 'rowKeys'."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,415,        if (ArrayUtilities.hasDuplicateItems(columnKeys)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,416,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,420,        if (rowKeys.length != data.length) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,421,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,426,        int columnCount = 0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,427,        for (int r = 0; r < data.length; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,428,"            columnCount = Math.max(columnCount, data[r].length);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,430,        if (columnKeys.length != columnCount) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,431,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,438,        DefaultCategoryDataset result = new DefaultCategoryDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,439,        for (int r = 0; r < data.length; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,440,            Comparable rowKey = rowKeys[r];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,441,            for (int c = 0; c < data[r].length; c++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,442,                Comparable columnKey = columnKeys[c];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,443,"                result.addValue(new Double(data[r][c]), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,446,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,462,        if (rowKey == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,463,"            throw new IllegalArgumentException(""Null 'rowKey' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,465,        if (rowData == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,466,"            throw new IllegalArgumentException(""Null 'rowData' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,468,        DefaultCategoryDataset result = new DefaultCategoryDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,469,        for (int i = 0; i < rowData.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,470,"            result.addValue(rowData.getValue(i), rowKey, rowData.getKey(i));",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,472,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,495,        if (f == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,496,"            throw new IllegalArgumentException(""Null 'f' argument."");   ",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,498,        if (seriesKey == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,499,"            throw new IllegalArgumentException(""Null 'seriesKey' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,501,        if (start >= end) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,502,"            throw new IllegalArgumentException(""Requires 'start' < 'end'."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,504,        if (samples < 2) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,505,"            throw new IllegalArgumentException(""Requires 'samples' > 1"");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,508,        XYSeries series = new XYSeries(seriesKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,509,        double step = (end - start) / samples;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,510,        for (int i = 0; i <= samples; i++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,511,            double x = start + (step * i);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,512,"            series.add(x, f.getValue(x));",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,514,        XYSeriesCollection collection = new XYSeriesCollection(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,515,        return collection;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,529,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,530,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,533,        int itemCount = dataset.getItemCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,534,        if (itemCount == 0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,535,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,538,        for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,539,            Number y = dataset.getValue(item);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,540,            if (y != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,541,                double yy = y.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,542,                if (yy > 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,543,                    return false;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,548,        return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,562,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,563,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,566,        int rowCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,567,        int columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,568,        if (rowCount == 0 || columnCount == 0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,569,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,572,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,573,            for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,574,"                if (dataset.getValue(r, c) != null) {",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,575,                    return false;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,581,        return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,594,        if (dataset != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,595,            for (int s = 0; s < dataset.getSeriesCount(); s++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,596,                if (dataset.getItemCount(s) > 0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,597,                    return false;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,601,        return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,612,"        return findDomainBounds(dataset, true);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,628,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,629,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,632,        Range result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,634,        if (dataset instanceof DomainInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,635,            DomainInfo info = (DomainInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,636,            result = info.getDomainBounds(includeInterval);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,637,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,639,"            result = iterateDomainBounds(dataset, includeInterval);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,641,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,654,"        return iterateDomainBounds(dataset, true);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,670,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,671,"            throw new IllegalArgumentException(""Null 'dataset' argument."");   ",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,673,        double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,674,        double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,675,        int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,678,        if (includeInterval && dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,679,            IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,680,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,681,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,682,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,683,"                    lvalue = intervalXYData.getStartXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,684,"                    uvalue = intervalXYData.getEndXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,685,"                    minimum = Math.min(minimum, lvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,686,"                    maximum = Math.max(maximum, uvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,689,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,691,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,692,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,693,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,694,"                    lvalue = dataset.getXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,695,                    uvalue = lvalue;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,696,"                    minimum = Math.min(minimum, lvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,697,"                    maximum = Math.max(maximum, uvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,701,        if (minimum > maximum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,702,            return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,705,"            return new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,717,"        return findRangeBounds(dataset, true);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,731,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,732,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,734,        Range result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,735,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,736,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,737,            result = info.getRangeBounds(includeInterval);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,738,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,740,"            result = iterateCategoryRangeBounds(dataset, includeInterval);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,742,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,754,"        return findRangeBounds(dataset, true);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,770,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,771,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,773,        Range result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,774,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,775,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,776,            result = info.getRangeBounds(includeInterval);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,777,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,779,            result = iterateXYRangeBounds(dataset);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,781,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,796,        double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,797,        double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,798,        boolean interval = includeInterval ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,800,        int rowCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,801,        int columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,802,        for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,803,            for (int column = 0; column < columnCount; column++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,806,                if (interval) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,807,                    IntervalCategoryDataset icd ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,809,"                    lvalue = icd.getStartValue(row, column);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,810,"                    uvalue = icd.getEndValue(row, column);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,811,                },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,813,"                    lvalue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,814,                    uvalue = lvalue;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,816,                if (lvalue != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,817,"                    minimum = Math.min(minimum, lvalue.doubleValue());",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,819,                if (uvalue != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,820,"                    maximum = Math.max(maximum, uvalue.doubleValue());",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,824,        if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,825,            return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,828,"            return new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,841,        double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,842,        double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,843,        int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,844,        for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,845,            int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,846,            for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,849,                if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,850,                    IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,852,"                    lvalue = intervalXYData.getStartYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,853,"                    uvalue = intervalXYData.getEndYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,854,                },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,855,                else if (dataset instanceof OHLCDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,856,                    OHLCDataset highLowData = (OHLCDataset) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,857,"                    lvalue = highLowData.getLowValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,858,"                    uvalue = highLowData.getHighValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,859,                },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,861,"                    lvalue = dataset.getYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,862,                    uvalue = lvalue;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,864,                if (!Double.isNaN(lvalue)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,865,"                    minimum = Math.min(minimum, lvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,867,                if (!Double.isNaN(uvalue)) {     ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,868,"                    maximum = Math.max(maximum, uvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,872,        if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,873,            return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,876,"            return new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,894,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,895,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,897,        Number result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,899,        if (dataset instanceof DomainInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,900,            DomainInfo info = (DomainInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,901,            return new Double(info.getDomainLowerBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,904,            double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,905,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,906,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,907,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,908,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,911,                    if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,912,                        IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,914,"                        value = intervalXYData.getStartXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,915,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,917,"                        value = dataset.getXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,919,                    if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,920,"                        minimum = Math.min(minimum, value);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,925,            if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,926,                result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,929,                result = new Double(minimum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,933,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,949,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,950,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,952,        Number result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,954,        if (dataset instanceof DomainInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,955,            DomainInfo info = (DomainInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,956,            return new Double(info.getDomainUpperBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,961,            double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,962,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,963,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,964,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,965,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,968,                    if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,969,                        IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,971,"                        value = intervalXYData.getEndXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,972,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,974,"                        value = dataset.getXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,976,                    if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,977,"                        maximum = Math.max(maximum, value);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,981,            if (maximum == Double.NEGATIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,982,                result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,985,                result = new Double(maximum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,990,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1008,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1009,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1013,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1014,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1015,            return new Double(info.getRangeLowerBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1020,            double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1021,            int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1022,            int itemCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1023,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1024,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1026,                    if (dataset instanceof IntervalCategoryDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1027,                        IntervalCategoryDataset icd ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1029,"                        value = icd.getStartValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1030,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1032,"                        value = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1034,                    if (value != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1035,"                        minimum = Math.min(minimum, value.doubleValue());",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1039,            if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1040,                return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1043,                return new Double(minimum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1064,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1065,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1069,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1070,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1071,            return new Double(info.getRangeLowerBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1076,            double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1077,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1078,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1079,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1080,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1083,                    if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1084,                        IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1086,"                        value = intervalXYData.getStartYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1087,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1088,                    else if (dataset instanceof OHLCDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1089,                        OHLCDataset highLowData = (OHLCDataset) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1090,"                        value = highLowData.getLowValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1091,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1093,"                        value = dataset.getYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1095,                    if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1096,"                        minimum = Math.min(minimum, value);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1101,            if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1102,                return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1105,                return new Double(minimum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1125,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1126,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1130,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1131,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1132,            return new Double(info.getRangeUpperBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1138,            double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1139,            int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1140,            int itemCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1141,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1142,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1144,                    if (dataset instanceof IntervalCategoryDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1145,                        IntervalCategoryDataset icd ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1147,"                        value = icd.getEndValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1148,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1150,"                        value = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1152,                    if (value != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1153,"                        maximum = Math.max(maximum, value.doubleValue());",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1157,            if (maximum == Double.NEGATIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1158,                return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1161,                return new Double(maximum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1181,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1182,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1186,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1187,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1188,            return new Double(info.getRangeUpperBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1194,            double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1195,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1196,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1197,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1198,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1200,                    if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1201,                        IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1203,"                        value = intervalXYData.getEndYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1204,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1205,                    else if (dataset instanceof OHLCDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1206,                        OHLCDataset highLowData = (OHLCDataset) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1207,"                        value = highLowData.getHighValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1208,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1210,"                        value = dataset.getYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1212,                    if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1213,"                        maximum = Math.max(maximum, value);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1217,            if (maximum == Double.NEGATIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1218,                return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1221,                return new Double(maximum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1237,"        return findStackedRangeBounds(dataset, 0.0);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1251,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1252,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1254,        Range result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1255,        double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1256,        double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1257,        int categoryCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1258,        for (int item = 0; item < categoryCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1259,            double positive = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1260,            double negative = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1261,            int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1262,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1263,"                Number number = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1264,                if (number != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1265,                    double value = number.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1266,                    if (value > 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1267,                        positive = positive + value;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1269,                    if (value < 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1270,                        negative = negative + value;  ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1275,"            minimum = Math.min(minimum, negative);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1276,"            maximum = Math.max(maximum, positive);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1278,        if (minimum <= maximum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1279,"            result = new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1281,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1298,        Range result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1299,        if (dataset != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1302,            int[] groupIndex = new int[dataset.getRowCount()];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1303,            for (int i = 0; i < dataset.getRowCount(); i++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1304,                groupIndex[i] = map.getGroupIndex(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1310,            int groupCount = map.getGroupCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1311,            double[] minimum = new double[groupCount];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1312,            double[] maximum = new double[groupCount];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1314,            int categoryCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1315,            for (int item = 0; item < categoryCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1316,                double[] positive = new double[groupCount];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1317,                double[] negative = new double[groupCount];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1318,                int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1319,                for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1320,"                    Number number = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1321,                    if (number != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1322,                        double value = number.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1323,                        if (value > 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1324,                            positive[groupIndex[series]] ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1327,                        if (value < 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1328,                            negative[groupIndex[series]] ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1334,                for (int g = 0; g < groupCount; g++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1335,"                    minimum[g] = Math.min(minimum[g], negative[g]);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1336,"                    maximum[g] = Math.max(maximum[g], positive[g]);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1339,            for (int j = 0; j < groupCount; j++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1340,                result = Range.combine(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1345,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1359,        Number result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1360,        if (dataset != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1361,            double minimum = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1362,            int categoryCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1363,            for (int item = 0; item < categoryCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1364,                double total = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1366,                int seriesCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1367,                for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1368,"                    Number number = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1369,                    if (number != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1370,                        double value = number.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1371,                        if (value < 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1372,                            total = total + value;  ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1377,"                minimum = Math.min(minimum, total);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1380,            result = new Double(minimum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1382,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1396,        Number result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1398,        if (dataset != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1399,            double maximum = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1400,            int categoryCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1401,            for (int item = 0; item < categoryCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1402,                double total = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1403,                int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1404,                for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1405,"                    Number number = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1406,                    if (number != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1407,                        double value = number.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1408,                        if (value > 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1409,                            total = total + value;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1413,"                maximum = Math.max(maximum, total);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1415,            result = new Double(maximum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1418,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1431,"        return findStackedRangeBounds(dataset, 0.0);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1445,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1446,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1448,        double minimum = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1449,        double maximum = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1450,        for (int itemNo = 0; itemNo < dataset.getItemCount(); itemNo++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1451,            double positive = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1452,            double negative = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1453,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1454,            for (int seriesNo = 0; seriesNo < seriesCount; seriesNo++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1455,"                double y = dataset.getYValue(seriesNo, itemNo);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1456,                if (!Double.isNaN(y)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1457,                    if (y > 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1458,                        positive += y;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1461,                        negative += y;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1465,            if (positive > maximum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1466,                maximum = positive;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1468,            if (negative < minimum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1469,                minimum = negative;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1472,        if (minimum <= maximum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1473,"            return new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1476,            return null;   ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1492,        double total = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1493,        int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1494,        for (int s = 0; s < seriesCount; s++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1495,"            double value = dataset.getYValue(s, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1496,            if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1497,                total = total + value;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1500,        return total;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1515,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1516,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1519,        boolean allItemsNull = true; // we'll set this to false if there is at ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1521,        double minimum = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1522,        double maximum = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1523,        for (int row = 0; row < dataset.getRowCount(); row++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1524,            double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1525,            for (int column = 0; column < dataset.getColumnCount() - 1; ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1527,"                Number n = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1528,                if (n != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1529,                    allItemsNull = false;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1530,                    double value = n.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1531,                    runningTotal = runningTotal + value;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1532,"                    minimum = Math.min(minimum, runningTotal);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1533,"                    maximum = Math.max(maximum, runningTotal);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1526,                 column++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1537,        if (!allItemsNull) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1538,"            return new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,15,1541,            return null;,0.0,0,-1,0
