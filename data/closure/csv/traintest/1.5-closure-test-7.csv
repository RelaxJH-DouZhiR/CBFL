dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,285,"        Context rhsContext = Context.OTHER;
",6,0,0,0,0,0,0,2,0,8,35,6,0.00855,1,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,214,"    if (node.isName()
",0,0,0,1,3,0,4,0,0,4,17,6,0.25000,1,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1661,"      if (fnType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00198,1,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,785,"    for (int index = 0; index < len; index++) {
",8,1,0,1,3,0,0,0,0,10,43,4,0.01639,1,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,172,"      if (name.globalSets == 1 && name.localSets == 0 &&
",8,4,0,0,1,0,0,0,0,12,50,6,0.00341,1,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2401,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00044,1,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,873,"      if (""prototype"".equals(field)) {
",0,0,0,2,5,0,4,0,0,5,32,6,0.06557,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,609,"          ++propsSkipped;
",2,0,0,0,0,0,0,0,0,3,15,10,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,154,"      if (types == null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,155,"        types = new StandardUnionFind<T>();
",2,0,0,1,2,0,0,4,0,7,35,7,0.06452,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,157,"      return types;
",2,0,0,0,0,1,0,0,0,2,13,5,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,253,"      boolean changed = !skipRenaming;
",4,0,0,0,0,0,0,0,0,5,32,6,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,254,"      skipRenaming = true;
",2,0,0,0,0,0,0,0,0,4,20,5,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,255,"      types = null;
",2,0,0,0,0,0,0,0,0,3,13,5,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,256,"      return changed;
",2,0,0,0,0,1,0,0,0,2,15,5,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,57,"  public StandardUnionFind() {
",2,0,0,1,3,1,0,0,0,3,28,2,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,54,"  private final Map<E, Node<E>> elmap = Maps.newLinkedHashMap();
",2,0,0,1,2,2,4,8,0,16,62,2,0.06452,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,58,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,80,"    Node<E> nodeA = findRootOrCreateNode(a);
",2,0,0,1,2,0,4,4,0,10,40,4,0.06452,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,81,"    Node<E> nodeB = findRootOrCreateNode(b);
",2,0,0,1,2,0,4,4,0,10,40,4,0.06452,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,83,"    if (nodeA == nodeB) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,84,"      return nodeA.element;
",4,0,0,0,0,1,0,0,0,4,21,7,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,143,"    Node<E> node = elmap.get(e);
",2,0,0,1,2,0,6,4,0,12,28,4,0.06452,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,144,"    if (node != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,145,"      return findRoot(node);
",0,0,0,1,2,1,4,0,0,4,22,7,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,147,"    node = new Node<E>(e);
",4,0,0,1,2,0,0,4,0,9,22,4,0.06452,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,148,"    elmap.put(e, node);
",0,0,0,1,2,0,8,0,0,8,19,5,0.06452,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,149,"    return node;
",2,0,0,0,0,1,0,0,0,2,12,4,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,160,"    if (node.parent != node) {
",6,1,0,1,3,0,0,0,0,7,26,4,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,163,"    return node.parent;
",4,0,0,0,0,1,0,0,0,4,19,5,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,223,"    Node(E element) {
",4,0,0,1,3,0,0,2,0,6,17,3,0.06452,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,215,"    int rank = 0;
",2,0,0,0,0,0,0,0,0,2,13,4,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,221,"    int size = 1;
",2,0,0,0,0,0,0,0,0,2,13,4,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,224,"      this.parent = this;
",2,0,0,0,0,0,0,0,0,3,19,5,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,225,"      this.element = element;
",4,0,0,0,0,0,0,0,0,5,23,5,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,226,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,788,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.06452,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,551,"      Iterable<T> alternatives = typeSystem.getTypeAlternatives(type);
",2,0,0,1,2,0,6,4,0,12,64,5,0.06349,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,552,"      if (alternatives != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.06349,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,562,"        T topType = typeSystem.getTypeWithProperty(prop.name, type);
",6,0,0,1,2,0,6,2,0,14,60,7,0.06349,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,563,"        if (typeSystem.isInvalidatingType(topType)) {
",0,0,0,2,5,0,6,0,0,6,45,8,0.06349,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,942,"        if (objectJsType != null && objectJsType.isFunctionType()) {
",2,2,0,2,5,0,4,0,0,8,60,8,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,795,"    for (int index = 0; index < len; index++) {
",8,1,0,1,3,0,0,0,0,10,43,4,0.06250,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,796,"      char c = s.charAt(index);
",2,0,0,1,2,0,6,0,0,8,25,7,0.06250,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,797,"      if (c < '0' || c > '9') {
",4,3,0,1,3,0,0,0,0,9,25,6,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1567,"          ObjectType qVarType = ObjectType.cast(qVar.getType());
",2,0,0,2,4,0,8,2,0,12,54,9,0.06154,0,0
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1568,"          if (qVarType != null &&
",2,3,0,0,1,0,0,0,0,5,23,9,0.06154,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,270,"        if (typeSystem.isInvalidatingType(type)) {
",0,0,0,2,5,0,6,0,0,6,42,8,0.06154,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,277,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.06154,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,791,"    int len = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.06154,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,792,"    if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.06154,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,805,"    if (isSimpleNumber(s)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.06154,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,118,735,"        n.getString();
",0,0,0,1,2,0,4,0,0,4,14,9,0.06154,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,118,738,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06154,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,791,"      ObjectType objType = ObjectType.cast(type);
",2,0,0,1,2,0,6,2,0,10,43,5,0.06154,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,792,"      return objType != null && !objType.hasReferenceName();
",2,2,0,1,2,1,4,0,0,9,54,5,0.06154,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,608,"        if (prop.skipRenaming) {
",4,0,0,1,3,0,0,0,0,4,24,9,0.06061,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,389,"        scopes.push(typeSystem.getFunctionScope(t.getScopeRoot()));
",0,0,0,3,6,0,12,0,0,12,59,8,0.06061,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,774,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.06061,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,181,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.06061,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,303,"      TypeSystem<T> typeSystem, Map<String, CheckLevel> propertiesToErrorFor) {
",4,0,0,0,2,0,0,10,0,14,73,3,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,281,"  private Map<String, Property> properties = Maps.newHashMap();
",2,0,0,1,2,1,4,6,0,13,61,2,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,304,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,305,"    this.typeSystem = typeSystem;
",4,0,0,0,0,0,0,0,0,5,29,4,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,306,"    this.propertiesToErrorFor = propertiesToErrorFor;
",4,0,0,0,0,0,0,0,0,5,49,4,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,307,"    if (!this.propertiesToErrorFor.isEmpty()) {
",2,0,0,2,5,0,2,0,0,5,43,4,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,312,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,83,"  private static final Logger logger = Logger.getLogger(
",2,0,0,0,1,3,4,2,0,11,54,2,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,286,"    return new DisambiguateProperties<JSType>(
",0,0,0,0,1,1,0,4,0,4,42,7,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,316,"    Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,318,"    for (TypeMismatch mis : compiler.getTypeValidator().getMismatches()) {
",2,0,0,3,7,0,6,2,0,10,70,4,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,323,"    NodeTraversal.traverse(compiler, externs, new FindExternProperties());
",0,0,0,2,4,0,8,2,0,10,70,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,324,"    NodeTraversal.traverse(compiler, root, new FindRenameableProperties());
",0,0,0,2,4,0,8,2,0,10,71,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,325,"    renameProperties();
",0,0,0,1,2,0,2,0,0,2,19,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,326,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,363,"    if (!properties.containsKey(name)) {
",0,0,0,2,5,0,6,0,0,7,36,4,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,364,"      properties.put(name, new Property(name));
",2,0,0,2,4,0,6,2,0,10,41,7,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,366,"    return properties.get(name);
",0,0,0,1,2,1,6,0,0,6,28,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,574,"    int propsRenamed = 0, propsSkipped = 0, instancesRenamed = 0,
",6,0,0,0,0,0,0,0,0,6,61,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,575,"        instancesSkipped = 0, singleTypeProps = 0;
",4,0,0,0,0,0,0,0,0,4,42,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,577,"    Set<String> reported = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,41,4,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,578,"    for (Property prop : properties.values()) {
",2,0,0,2,5,0,4,2,0,8,43,4,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,579,"      if (prop.shouldRename()) {
",0,0,0,2,5,0,4,0,0,4,26,7,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,614,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,615,"    logger.fine(""Renamed "" + instancesRenamed + "" instances of ""
",2,1,0,0,1,0,4,0,0,9,60,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,617,"    logger.fine(""Skipped renaming "" + instancesSkipped + "" invalidated ""
",2,1,0,0,1,0,4,0,0,9,68,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,621,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,148,"    Property(String name) {
",4,0,0,1,3,0,0,2,0,6,23,3,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,130,"    Set<T> typesToSkip = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,39,3,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,139,"    Set<Node> renameNodes = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,42,3,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,146,"    final Map<Node, T> rootTypes = Maps.newHashMap();
",2,0,0,1,2,1,4,6,0,13,49,3,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,149,"      this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,150,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,235,"      return !skipRenaming && types != null
",4,3,0,0,0,1,0,0,0,8,37,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,269,"      if (!skipRenaming) {
",2,0,0,1,3,0,0,0,0,3,20,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,436,"  private class FindRenameableProperties extends AbstractScopingCallback {
",2,0,0,0,1,1,0,2,0,5,72,2,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,439,"      if (n.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,20,6,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,440,"        handleGetProp(t, n);
",0,0,0,1,2,0,6,0,0,6,20,8,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,441,"      } else if (n.isObjectLit()) {
",0,0,0,2,6,0,4,0,0,4,29,7,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,444,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,450,"      String name = n.getLastChild().getString();
",2,0,0,2,4,0,6,2,0,10,43,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,451,"      T type = typeSystem.getType(getScope(), n.getFirstChild(), name);
",2,0,0,3,6,0,12,2,0,16,65,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,453,"      Property prop = getProperty(name);
",2,0,0,1,2,0,4,2,0,8,34,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,454,"      if (!prop.scheduleRenaming(n.getLastChild(),
",0,0,0,1,4,0,8,0,0,9,44,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,485,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,546,"      type = typeSystem.restrictByNotNullOrUndefined(type);
",2,0,0,1,2,0,6,0,0,9,53,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,547,"      if (prop.skipRenaming || typeSystem.isInvalidatingType(type)) {
",4,1,0,2,5,0,6,0,0,11,63,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,375,"  private abstract class AbstractScopingCallback implements ScopedCallback {
",2,0,0,0,1,2,0,2,0,6,74,2,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,376,"    protected final Stack<StaticScope<T>> scopes =
",2,0,0,0,0,2,0,6,0,10,46,3,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,381,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,386,"      if (t.inGlobalScope()) {
",0,0,0,2,5,0,4,0,0,4,24,6,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,387,"        scopes.push(typeSystem.getRootScope());
",0,0,0,2,4,0,8,0,0,8,39,8,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,391,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,395,"      scopes.pop();
",0,0,0,1,2,0,4,0,0,4,13,6,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,396,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,400,"      return scopes.peek();
",0,0,0,1,2,1,4,0,0,4,21,6,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,752,"    public JSTypeSystem(AbstractCompiler compiler) {
",4,0,0,1,3,1,0,2,0,7,48,3,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,753,"      registry = compiler.getTypeRegistry();
",2,0,0,1,2,0,4,0,0,7,38,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,754,"      invalidatingTypes = Sets.newHashSet(
",2,0,0,0,1,0,4,0,0,7,36,5,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,764,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,771,"    @Override public StaticScope<JSType> getRootScope() { return null; }
",4,0,0,2,4,2,0,4,0,9,68,3,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,779,"      if (node.getJSType() == null) {
",0,1,0,2,5,0,4,0,0,5,31,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,782,"      return node.getJSType();
",0,0,0,1,2,1,4,0,0,4,24,6,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,786,"      if (type == null || invalidatingTypes.contains(type) ||
",2,3,0,1,3,0,6,0,0,11,55,5,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,831,"      return type.restrictByNotNullOrUndefined();
",0,0,0,1,2,1,4,0,0,4,43,6,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,408,"  private class FindExternProperties extends AbstractScopingCallback {
",2,0,0,0,1,1,0,2,0,5,68,2,0.05970,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,411,"      if (n.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,20,6,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,429,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05970,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,177,"    if (!type.matchesObjectContext()) {
",0,0,0,2,5,0,4,0,0,5,35,4,0.05882,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,710,"      ObjectType objType = type.toObjectType();
",2,0,0,1,2,0,4,2,0,8,41,6,0.05479,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,711,"      if (objType != null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.05479,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,712,"        if (prototypeSlot != null &&
",2,2,0,0,1,0,0,0,0,4,28,8,0.05479,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1560,"        Var qVar = scope.getVar(qName);
",2,0,0,1,2,0,6,2,0,10,31,7,0.05405,0,0
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1561,"        if (qVar != null) {
",2,1,0,1,3,0,0,0,0,3,19,7,0.05405,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,211,"    if (!type.matchesStringContext()) {
",0,0,0,2,5,0,4,0,0,5,35,4,0.05333,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,214,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05333,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,118,281,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.05063,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,798,"    FunctionType greatestFn =
",2,0,0,0,0,0,0,2,0,4,25,4,0.05000,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,800,"    FunctionType leastFn =
",2,0,0,0,0,0,0,2,0,4,22,4,0.05000,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,802,"    return leastSuper ? greatestFn : leastFn;
",6,0,0,0,0,1,0,0,0,6,41,5,0.05000,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,118,280,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,343,"      } else if (dereferenced != null && dereferenced.isArrayType()) {
",2,2,0,2,6,0,4,0,0,8,64,7,0.04819,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,788,"    } else if (functionInstance.isEquivalentTo(this)) {
",0,0,0,2,6,0,4,0,0,4,51,6,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,118,556,"        ret = transform(n);
",2,0,0,1,2,0,4,0,0,7,19,8,0.04762,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,118,557,"        ret.putBooleanProp(Node.QUOTED_PROP, true);
",4,0,0,1,2,0,4,0,0,9,43,9,0.04762,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,118,276,"    for (JSType typ : getAlternates()) {
",2,0,0,2,5,0,2,2,0,6,36,4,0.04706,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,118,277,"      if (typ.isStruct()) {
",0,0,0,2,5,0,4,0,0,4,21,7,0.04706,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,2012,"      return getNativeType(UNKNOWN_TYPE);
",0,0,0,1,2,1,4,0,0,4,35,7,0.04651,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,784,"    JSType functionInstance = registry.getNativeType(
",2,0,0,0,1,0,4,2,0,8,49,4,0.04396,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,786,"    if (functionInstance.isEquivalentTo(that)) {
",0,0,0,2,5,0,6,0,0,6,44,5,0.04396,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,118,290,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.04348,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,761,"    if (isOrdinaryFunction() && that.isOrdinaryFunction() &&
",0,1,0,2,5,0,6,0,0,7,56,4,0.04255,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,336,"      ObjectType dereferenced = objType.dereference();
",2,0,0,1,2,0,4,2,0,8,48,6,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,337,"      if (dereferenced != null && dereferenced
",2,2,0,0,1,0,2,0,0,6,40,6,0.04167,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,118,217,"    Preconditions.checkNotNull(objectIndexTemplateKey);
",0,0,0,1,2,0,6,0,0,6,51,5,0.04124,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,118,218,"    return objectIndexTemplateKey;
",2,0,0,0,0,1,0,0,0,2,30,4,0.04124,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,118,552,"      } else if (n instanceof NumberLiteral) {
",2,0,0,1,4,0,0,2,0,4,40,7,0.04040,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,578,"        visitGetElem(t, n);
",0,0,0,1,2,0,6,0,0,6,19,6,0.03922,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,582,"        typeable = false;
",2,0,0,0,0,0,0,0,0,4,17,5,0.03922,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,583,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03922,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,1579,"    validator.expectIndexMatch(
",0,0,0,0,1,0,4,0,0,4,27,5,0.03922,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,1581,"    ensureTyped(t, n);
",0,0,0,1,2,0,6,0,0,6,18,5,0.03922,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,1582,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03922,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,327,"    Preconditions.checkState(n.isGetElem());
",0,0,0,2,4,0,8,0,0,8,40,5,0.03922,0,0
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,328,"    Node indexNode = n.getLastChild();
",2,0,0,1,2,0,4,2,0,8,34,4,0.03922,0,0
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,329,"    if (objType.isStruct()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.03922,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,333,"    if (objType.isUnknownType()) {
",0,0,0,2,5,0,4,0,0,4,30,5,0.03922,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,353,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03922,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,118,151,"          FunctionType other =
",2,0,0,0,0,0,0,2,0,4,20,10,0.03883,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,118,153,"          FunctionType supremum =
",2,0,0,0,0,0,0,2,0,4,23,10,0.03883,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,118,155,"          alternates.set(functionTypePosition, supremum);
",0,0,0,1,2,0,8,0,0,8,47,11,0.03883,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,118,156,"          result = null;
",2,0,0,0,0,0,0,0,0,3,14,10,0.03883,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,118,157,"          return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.03883,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,751,"    Preconditions.checkNotNull(that);
",0,0,0,1,2,0,6,0,0,6,33,5,0.03810,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,753,"    if (isEquivalentTo(that)) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.03810,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,118,217,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.03738,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,423,"        scope = traverseGetElem(n, scope);
",2,0,0,1,2,0,6,0,0,9,34,5,0.03636,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,424,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03636,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,1257,"    scope = traverseChildren(n, scope);
",2,0,0,1,2,0,6,0,0,9,35,4,0.03636,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,1258,"    JSType type = getJSType(n.getFirstChild()).restrictByNotNullOrUndefined();
",2,0,0,3,6,0,8,2,0,12,74,4,0.03636,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,1259,"    TemplateTypeMap typeMap = type.getTemplateTypeMap();
",2,0,0,1,2,0,4,2,0,8,52,4,0.03636,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,1260,"    if (typeMap.hasTemplateType(registry.getObjectElementKey())) {
",0,0,0,3,7,0,8,0,0,8,62,5,0.03636,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,1263,"    return dereferencePointer(n.getFirstChild(), scope);
",0,0,0,2,4,1,8,0,0,8,52,5,0.03636,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,777,"            var.setType(oldType == null ?
",2,1,0,0,1,0,4,0,0,7,29,13,0.03540,0,0
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,118,593,"    unknown = true;
",2,0,0,0,0,0,0,0,0,4,15,4,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,118,594,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,464,"      oldPrototype.setOwnerFunction(null);
",0,0,0,1,2,0,4,0,0,4,36,7,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,483,"      clearCachedValues();
",0,0,0,1,2,0,2,0,0,2,20,7,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,1142,"    super.clearCachedValues();
",2,0,0,1,2,0,0,0,0,2,26,5,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,1144,"    if (subTypes != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,1150,"    if (!isNativeObjectType()) {
",0,0,0,2,5,0,2,0,0,3,28,4,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,1159,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,118,120,"    return System.identityHashCode(this);
",0,0,0,1,2,1,4,0,0,4,37,5,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,154,"    return mismatches;
",2,0,0,0,0,1,0,0,0,2,18,4,0.03175,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,118,142,"    return getTemplateTypeIndex(key) != -1;
",0,1,0,1,2,1,4,0,0,6,39,4,0.03008,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,611,"          ++singleTypeProps;
",2,0,0,0,0,0,0,0,0,3,18,10,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,118,464,"            joinedType = slotA.getType().getLeastSupertype(fnSlotType);
",2,0,0,2,4,0,8,0,0,11,59,11,0.02941,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,118,228,"      return getReferenceName();
",0,0,0,1,2,1,2,0,0,2,26,7,0.02920,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,773,"          String qKeyName = qObjName + ""."" + memberName;
",6,1,0,0,0,0,0,2,0,10,46,10,0.02878,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,774,"          Var var = syntacticScope.getVar(qKeyName);
",2,0,0,1,2,0,6,2,0,10,42,10,0.02878,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,775,"          JSType oldType = var == null ? null : var.getType();
",4,1,0,1,2,0,4,2,0,11,52,10,0.02878,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,776,"          if (var != null && var.isTypeInferred()) {
",2,2,0,2,5,0,4,0,0,8,42,10,0.02878,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,781,"          scope.inferQualifiedSlot(name, qKeyName,
",0,0,0,0,1,0,8,0,0,8,40,11,0.02878,0,0
defect4j,closure,com/google/javascript/rhino/Node,118,120,"        case QUOTED_PROP:        return ""quoted"";
",2,0,0,0,0,1,0,0,0,3,41,4,0.02500,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,587,"            String newName = propNames.get(rootType);
",2,0,0,1,2,0,6,2,0,10,41,12,0.02500,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,588,"            node.setString(newName);
",0,0,0,1,2,0,6,0,0,6,24,13,0.02500,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,589,"            compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,13,0.02500,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,590,"            ++instancesRenamed;
",2,0,0,0,0,0,0,0,0,3,19,12,0.02500,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,591,"          } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.02500,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,118,457,"          StaticSlot<JSType> fnSlot
",2,0,0,0,0,0,0,4,0,6,25,9,0.02381,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,118,459,"          JSType fnSlotType = fnSlot == null ? null : fnSlot.getType();
",4,1,0,1,2,0,4,2,0,11,61,9,0.02381,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,118,460,"          if (fnSlotType == null) {
",2,1,0,1,3,0,0,0,0,3,25,9,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,118,466,"        } else if (slotA == null || slotA.getType() == null) {
",2,3,0,2,6,0,4,0,0,9,54,8,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,585,"          T rootType = prop.rootTypes.get(node);
",6,0,0,1,2,0,4,2,0,12,38,10,0.02326,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,586,"          if (prop.shouldRename(rootType)) {
",0,0,0,2,5,0,6,0,0,6,34,11,0.02326,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,606,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,245,"      return !skipRenaming && !typesToSkip.contains(type);
",2,1,0,1,2,1,6,0,0,11,52,5,0.02326,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,907,"        return this == that;
",2,1,0,0,0,1,0,0,0,3,20,8,0.02286,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,761,"      String memberName = NodeUtil.getObjectLitKeyName(name);
",2,0,0,1,2,0,6,2,0,10,55,6,0.02260,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,762,"      if (memberName != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.02260,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,763,"        JSType rawValueType =  name.getFirstChild().getJSType();
",2,0,0,2,4,0,6,2,0,10,56,8,0.02260,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,764,"        JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
",2,0,0,0,1,0,4,2,0,8,61,8,0.02260,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,766,"        if (valueType == null) {
",2,1,0,1,3,0,0,0,0,3,24,8,0.02260,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,769,"        objectType.defineInferredProperty(memberName, valueType, name);
",0,0,0,1,2,0,10,0,0,10,63,9,0.02260,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,772,"        if (qObjName != null && name.isStringKey()) {
",2,2,0,2,5,0,4,0,0,8,45,8,0.02260,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,785,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.02260,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,118,760,"         name = name.getNext()) {
",2,0,0,1,4,0,4,0,0,7,24,4,0.02260,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,661,"            ret.put(entry.getKey(), c);
",0,0,0,2,4,0,10,0,0,10,27,13,0.02222,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,935,"          constructor = objType.getConstructor();
",2,0,0,1,2,0,4,0,0,7,39,10,0.02222,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,118,914,"      return that.toMaybeUnionType().getLeastSupertype(this);
",0,0,0,2,4,1,6,0,0,6,55,7,0.02151,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,118,299,"          return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02139,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,906,"      if (that.isConstructor()) {
",0,0,0,2,5,0,4,0,0,4,27,7,0.02094,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,580,"        Map<T, String> propNames = buildPropNames(prop.getTypes(), prop.name);
",6,0,0,2,4,0,6,6,0,18,70,8,0.02083,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,582,"        ++propsRenamed;
",2,0,0,0,0,0,0,0,0,3,15,8,0.02083,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,583,"        prop.expandTypesToSkip();
",0,0,0,1,2,0,4,0,0,4,25,9,0.02083,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,584,"        for (Node node : prop.renameNodes) {
",6,0,0,1,3,0,0,2,0,8,36,8,0.02083,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,607,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.02083,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,628,"    Map<T, String> names = Maps.newHashMap();
",2,0,0,1,2,0,4,6,0,12,41,4,0.02083,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,629,"    for (Set<T> set : types.allEquivalenceClasses()) {
",2,0,0,2,5,0,4,4,0,10,50,4,0.02083,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,630,"      checkState(!set.isEmpty());
",0,0,0,2,4,0,6,0,0,7,27,7,0.02083,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,220,"      name = name.parent;
",6,0,0,0,0,0,0,0,0,7,19,6,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,523,"      validateCatch(catches.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,39,7,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,524,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,539,"    validateNodeType(Token.CATCH, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,540,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,541,"    validateName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,542,"    validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,543,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,655,"      AstNode catchVar = clauseNode.getVarName();
",2,0,0,1,2,0,4,2,0,8,43,5,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,656,"      Node node = newNode(Token.CATCH, transform(catchVar));
",6,0,0,2,4,0,6,2,0,14,54,5,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,657,"      if (clauseNode.getCatchCondition() != null) {
",0,1,0,2,5,0,4,0,0,5,45,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,663,"      node.addChildToBack(transformBlock(clauseNode.getBody()));
",0,0,0,3,6,0,10,0,0,10,58,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,664,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1155,"        if (lineSet == false) {
",2,1,0,1,3,0,0,0,0,4,23,7,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1156,"          block.setLineno(cc.getLineno());
",0,0,0,2,4,0,8,0,0,8,32,10,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1157,"          maybeSetLengthFrom(block, cc);
",0,0,0,1,2,0,6,0,0,6,30,10,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1158,"          lineSet = true;
",2,0,0,0,0,0,0,0,0,4,15,9,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1160,"        block.addChildToBack(transform(cc));
",0,0,0,2,4,0,8,0,0,8,36,8,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1161,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,191,"        return processCatchClause((CatchClause) node);
",2,0,0,2,4,1,2,2,0,6,46,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,149,"        Preconditions.checkState(n.getChildCount() == 2);
",0,1,0,2,4,0,8,0,0,9,49,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,150,"        Preconditions.checkState(n.getFirstChild().isName());
",0,0,0,3,6,0,10,0,0,10,53,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,154,"        final Node var = n.getFirstChild();
",2,0,0,1,2,1,4,2,0,9,35,5,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,155,"        final Node block = var.getNext();
",2,0,0,1,2,1,4,2,0,9,33,5,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,157,"        declareVar(var);
",0,0,0,1,2,0,4,0,0,4,16,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,158,"        scanVars(block);
",0,0,0,1,2,0,4,0,0,4,16,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,159,"        return;  // only one child to scan
",0,0,0,0,0,1,0,0,0,0,34,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,135,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,136,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,511,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,512,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,513,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,514,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,516,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,519,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,520,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,521,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,522,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,528,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,533,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,536,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1147,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1149,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1150,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1152,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1162,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1164,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1165,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1172,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1177,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,159,"          reportRefToUndefinedName(name, ref);
",0,0,0,1,2,0,6,0,0,6,36,11,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,218,"    while (name.parent != null &&
",4,2,0,0,1,0,0,0,0,6,29,4,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,223,"    compiler.report(
",0,0,0,0,1,0,4,0,0,4,16,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,226,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,158,"        if (!isGlobalExpr) {
",2,0,0,1,3,0,0,0,0,3,20,8,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,205,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,198,"    Node parent = ref.node.getParent();
",6,0,0,1,2,0,2,2,0,10,35,4,0.05882,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,199,"    if (parent.isExprResult()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.05882,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1141,"      return newNode(Token.THROW,
",4,0,0,0,1,1,2,0,0,6,27,6,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,264,"        return processThrowStatement((ThrowStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.04762,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,132,"        validateThrow(n);
",0,0,0,1,2,0,4,0,0,4,17,6,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,133,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,489,"    validateNodeType(Token.THROW, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.04762,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,490,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,491,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,492,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/JSError,119,203,"    return type.key + "". "" + description + "" at "" +
",6,1,0,0,0,1,0,0,0,9,47,4,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,1269,"      return source == null ? """" : source.getName();
",2,1,0,1,2,1,4,0,0,8,46,6,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,81,"      namespace = new GlobalNamespace(compiler, externs, root);
",8,0,0,1,2,0,0,2,0,11,57,6,0.02273,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,796,"      valid = n.hasMoreThanOneChild();
",2,0,0,1,2,0,4,0,0,7,32,7,0.02128,0,0
defect4j,closure,com/google/javascript/jscomp/CodingConventions,119,240,"      return nextConvention.getIndirectlyDeclaredProperties();
",0,0,0,1,2,1,4,0,0,4,56,6,0.02083,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1074,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.01639,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.01639,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,129,"      for (Name prop : name.props) {
",6,0,0,1,3,0,0,2,0,8,30,6,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,132,"        boolean propIsDefined = false;
",2,0,0,0,0,0,0,0,0,3,30,9,0.01538,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,133,"        if (nameIsDefined) {
",2,0,0,1,3,0,0,0,0,2,20,8,0.01538,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,140,"        validateName(prop, propIsDefined);
",0,0,0,1,2,0,6,0,0,6,34,9,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,141,"        checkDescendantNames(prop, propIsDefined);
",0,0,0,1,2,0,6,0,0,6,42,9,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,142,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01538,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,149,"    Ref declaration = name.getDeclaration();
",2,0,0,1,2,0,4,2,0,8,40,4,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,150,"    Name parent = name.parent;
",6,0,0,0,0,0,0,2,0,8,26,4,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,152,"    JSModuleGraph moduleGraph = compiler.getModuleGraph();
",2,0,0,1,2,0,4,2,0,8,54,4,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,153,"    for (Ref ref : name.getRefs()) {
",2,0,0,2,5,0,4,2,0,8,32,4,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,155,"      boolean isGlobalExpr = ref.getNode().getParent().isExprResult();
",2,0,0,3,6,0,8,0,0,10,64,7,0.01538,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,157,"      if (!isDefined && !isTypedef(ref)) {
",2,1,0,2,5,0,4,0,0,9,36,6,0.01538,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,193,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01538,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,194,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01538,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,264,"      v = externsScope.getVar(name);
",2,0,0,1,2,0,6,0,0,9,30,6,0.01515,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,795,"    } else if (i == 2) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.01515,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,813,"      valid = n.getChildCount() <= i;
",4,1,0,1,2,0,4,0,0,10,31,6,0.01471,0,1
defect4j,closure,com/google/javascript/jscomp/JSError,119,140,"    return new JSError(sourceName, n, n.getLineno(), n.getCharno(), type, level,
",8,0,0,2,5,1,8,2,0,18,76,5,0.01370,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,232,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.01370,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,233,"    if (!irNode.isBlock()) {
",0,0,0,2,5,0,4,0,0,5,24,4,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,245,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,119,1709,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.01351,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,178,"      } else if (methodName.equals(""mixin"")) {
",0,0,0,2,6,0,4,0,0,5,40,8,0.01087,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,166,"      methodName = callName.getLastChild().getString();
",2,0,0,2,4,0,6,0,0,9,49,6,0.01042,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,176,"      if (methodName.equals(""inherits"")) {
",0,0,0,2,5,0,4,0,0,5,36,7,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,101,"      checkDescendantNames(name, name.globalSets + name.localSets > 0);
",8,2,0,1,2,0,4,0,0,14,65,7,0.00952,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,102,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00952,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,128,"    if (name.props != null) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00952,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,144,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00952,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,658,"              type = Ref.Type.ALIASING_GET;
",8,0,0,0,0,0,0,0,0,9,29,11,0.00943,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,660,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00943,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,110,"          Node fullName = ref.getNode().getParent().getParent();
",2,0,0,3,6,0,8,2,0,12,54,10,0.00909,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,111,"          if (fullName.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,27,11,0.00909,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,112,"            props.add(fullName.getLastChild().getString());
",0,0,0,3,6,0,10,0,0,10,47,13,0.00909,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,1251,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00885,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,108,"      for (Ref ref : slot.getRefs()) {
",2,0,0,2,5,0,4,2,0,8,32,6,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,109,"        if (ref.type == Ref.Type.PROTOTYPE_GET) {
",10,1,0,1,3,0,0,0,0,11,41,8,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,115,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00885,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,655,"            } else if (isClassDefiningCall(parent)) {
",0,0,0,2,6,0,4,0,0,4,41,10,0.00877,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,695,"      SubclassRelationship classes =
",2,0,0,0,0,0,0,2,0,4,30,5,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,697,"      return classes != null;
",2,1,0,0,0,1,0,0,0,3,23,5,0.00877,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,98,"        continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00877,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,430,"    return indirectlyDeclaredProperties;
",2,0,0,0,0,1,0,0,0,2,36,4,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,104,"    return externsRoot != null;
",2,1,0,0,0,1,0,0,0,3,27,4,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,62,"  CheckGlobalNames(AbstractCompiler compiler, CheckLevel level) {
",6,0,0,1,3,0,0,4,0,10,63,2,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,39,"  private GlobalNamespace namespace = null;
",2,0,0,0,0,1,0,2,0,5,41,2,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,40,"  private final Set<String> objectPrototypeProps = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,67,2,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,41,"  private final Set<String> functionPrototypeProps = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,69,2,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,63,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,64,"    this.convention = compiler.getCodingConvention();
",2,0,0,1,2,0,4,0,0,7,49,4,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,65,"    this.level = level;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,66,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,80,"    if (namespace == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,85,"    Preconditions.checkState(namespace.hasExternsRoot());
",0,0,0,2,4,0,8,0,0,8,53,5,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,86,"    findPrototypeProps(""Object"", objectPrototypeProps);
",0,0,0,1,2,0,4,0,0,5,51,5,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,87,"    findPrototypeProps(""Function"", functionPrototypeProps);
",0,0,0,1,2,0,4,0,0,5,55,5,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,88,"    objectPrototypeProps.addAll(
",0,0,0,0,1,0,4,0,0,4,28,5,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,91,"    for (Name name : namespace.getNameForest()) {
",2,0,0,2,5,0,4,2,0,8,45,4,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,97,"      if (name.inExterns) {
",4,0,0,1,3,0,0,0,0,4,21,7,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,103,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,106,"    Name slot = namespace.getSlot(type);
",2,0,0,1,2,0,6,2,0,10,36,4,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,107,"    if (slot != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,117,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,119,"    return getOwnSlot(name);
",0,0,0,1,2,1,4,0,0,4,24,5,0.00794,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,124,"    ensureGenerated();
",0,0,0,1,2,0,2,0,0,2,18,5,0.00794,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,125,"    return nameMap.get(name);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00794,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,220,"      inExterns = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.00671,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,221,"      NodeTraversal.traverse(compiler, externsRoot, new BuildGlobalNamespace());
",0,0,0,2,4,0,8,2,0,10,74,7,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,298,"        externsScope = t.getScope();
",2,0,0,1,2,0,4,0,0,7,28,7,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,48,"      } else if (level == CheckLevel.WARNING) {
",6,1,0,1,4,0,0,0,0,7,41,7,0.00658,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,49,"        warningCount++;
",2,0,0,0,0,0,0,0,0,3,15,9,0.00658,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,551,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00549,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,807,"        prefix = name.substring(0, i);
",2,0,0,1,2,0,6,0,0,9,30,7,0.00543,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,808,"        numLevelsToRemove = 2;
",2,0,0,0,0,0,0,0,0,3,22,7,0.00543,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,809,"        i = name.indexOf('.', i + 11);
",4,1,0,1,2,0,4,0,0,11,30,7,0.00543,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,810,"        while (i >= 0) {
",2,1,0,1,3,0,0,0,0,3,16,7,0.00543,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,816,"      if (parent != null && NodeUtil.isObjectLitKey(n)) {
",2,2,0,2,5,0,6,0,0,10,51,5,0.00543,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,822,"      for (int i = 0; i < numLevelsToRemove; i++) {
",8,1,0,1,3,0,0,0,0,10,45,5,0.00543,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,823,"        parent = n;
",4,0,0,0,0,0,0,0,0,5,11,7,0.00543,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,824,"        n = n.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,22,7,0.00543,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,827,"      handleGet(module, scope, n, parent, prefix, Ref.Type.PROTOTYPE_GET);
",6,0,0,1,2,0,12,0,0,18,68,6,0.00543,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,828,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.00543,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,686,"            type = Ref.Type.ALIASING_GET;
",8,0,0,0,0,0,0,0,0,9,29,8,0.00524,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,154,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00505,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,182,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00505,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,652,"            if (n == parent.getFirstChild()) {
",2,1,0,2,5,0,4,0,0,7,34,8,0.00498,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,96,"    SubclassRelationship relationship =
",2,0,0,0,0,0,0,2,0,4,35,4,0.00490,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,98,"    if (relationship != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00490,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,102,"    Node callName = callNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,41,4,0.00490,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,103,"    SubclassType type = typeofClassDefiningName(callName);
",2,0,0,1,2,0,4,2,0,8,54,4,0.00490,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,104,"    if (type != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00490,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,164,"    String methodName = null;
",2,0,0,0,0,0,0,2,0,4,25,4,0.00490,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,165,"    if (callName.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.00490,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,175,"    if (methodName != null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00490,0,1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,119,105,"      return nextConvention.getClassesDefinedByCall(callNode);
",0,0,0,1,2,1,6,0,0,6,56,6,0.00490,0,1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,119,298,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00490,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,147,"        int sourceCompare = source1.compareTo(source2);
",2,0,0,1,2,0,6,0,0,8,47,8,0.00481,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,148,"        if (sourceCompare != 0) {
",2,1,0,1,3,0,0,0,0,3,25,7,0.00481,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,151,"      } else if (source1 == null && source2 != null) {
",4,3,0,1,4,0,0,0,0,7,48,6,0.00481,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,106,"      if (p.level == level) {
",6,1,0,1,3,0,0,0,0,7,23,6,0.00455,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,107,"        errors.add(p.error);
",4,0,0,1,2,0,4,0,0,8,20,9,0.00455,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,109,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00455,0,1
defect4j,closure,com/google/javascript/jscomp/JSError,119,214,"    return charno;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,45,"    if (messages.add(new ErrorWithLevel(error, level))) {
",4,0,0,3,7,0,4,2,0,10,53,5,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,46,"      if (level == CheckLevel.ERROR) {
",6,1,0,1,3,0,0,0,0,7,32,6,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,52,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2139,"      if (getOptions().errorHandler != null) {
",2,1,0,2,5,0,2,0,0,6,40,6,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2142,"      errorManager.report(level, error);
",0,0,0,1,2,0,8,0,0,8,34,7,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,185,"    ErrorWithLevel(JSError error, CheckLevel level) {
",6,0,0,1,3,0,0,4,0,10,49,3,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,186,"      this.error = error;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,187,"      this.level = level;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,188,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,130,"      if (p2 == null) {
",2,1,0,1,3,0,0,0,0,3,17,5,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,139,"      if (p1.level != p2.level) {
",8,1,0,1,3,0,0,0,0,9,27,5,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,144,"      String source1 = p1.error.sourceName;
",8,0,0,0,0,0,0,2,0,10,37,5,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,145,"      String source2 = p2.error.sourceName;
",8,0,0,0,0,0,0,2,0,10,37,5,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,146,"      if (source1 != null && source2 != null) {
",4,3,0,1,3,0,0,0,0,7,41,5,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,157,"      int lineno1 = p1.error.lineNumber;
",8,0,0,0,0,0,0,0,0,8,34,6,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,158,"      int lineno2 = p2.error.lineNumber;
",8,0,0,0,0,0,0,0,0,8,34,6,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,159,"      if (lineno1 != lineno2) {
",4,1,0,1,3,0,0,0,0,5,25,5,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,161,"      } else if (lineno1 < 0 && 0 <= lineno2) {
",4,3,0,1,4,0,0,0,0,7,41,6,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,163,"      } else if (0 <= lineno1 && lineno2 < 0) {
",4,3,0,1,4,0,0,0,0,7,41,7,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,167,"      int charno1 = p1.error.getCharno();
",6,0,0,1,2,0,2,0,0,8,35,6,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,168,"      int charno2 = p2.error.getCharno();
",6,0,0,1,2,0,2,0,0,8,35,6,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,169,"      if (charno1 != charno2) {
",4,1,0,1,3,0,0,0,0,5,25,5,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,171,"      } else if (charno1 < 0 && 0 <= charno2) {
",4,3,0,1,4,0,0,0,0,7,41,6,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,173,"      } else if (0 <= charno1 && charno2 < 0) {
",4,3,0,1,4,0,0,0,0,7,41,7,0.00452,0,1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,177,"      return p1.error.description.compareTo(p2.error.description);
",12,0,0,1,2,1,2,0,0,14,60,6,0.00452,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,170,"        n.putBooleanProp(Node.FREE_CALL, true);
",4,0,0,1,2,0,4,0,0,9,39,8,0.00450,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,968,"          totalGets++;
",2,0,0,0,0,0,0,0,0,3,12,6,0.00444,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,969,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00444,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,1118,"      declaredType = true;
",2,0,0,0,0,0,0,0,0,4,20,5,0.00427,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,1119,"      for (Name ancestor = parent; ancestor != null;
",6,1,0,0,1,0,0,2,0,9,46,5,0.00427,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,1123,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00427,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,569,"        nameObj.setDeclaredType();
",0,0,0,1,2,0,4,0,0,4,26,9,0.00427,0,0
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,66,"          info = current.getJSDocInfo();
",2,0,0,1,2,0,4,0,0,7,30,11,0.00395,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,281,"      validateStatement(c);
",0,0,0,1,2,0,4,0,0,4,21,7,0.00392,0,1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,55,"      boolean visitedFunction = false;
",2,0,0,0,0,0,0,0,0,3,32,7,0.00388,0,1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,56,"      for (Node current = node;
",4,0,0,0,1,0,0,2,0,6,25,7,0.00388,0,0
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,57,"           current != null;
",2,1,0,0,0,0,0,0,0,3,16,6,0.00388,0,1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,59,"        int type = current.getType();
",2,0,0,1,2,0,4,0,0,6,29,9,0.00388,0,0
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,60,"        JSDocInfo info = null;
",2,0,0,0,0,0,0,2,0,4,22,8,0.00388,0,0
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,62,"        if (type == Token.FUNCTION) {
",6,1,0,1,3,0,0,0,0,7,29,8,0.00388,0,0
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,65,"        } else if (type == Token.SCRIPT) {
",6,1,0,1,4,0,0,0,0,7,34,9,0.00388,0,0
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,67,"        } else if (current.isVar() || current.isAssign()) {
",0,1,0,3,8,0,8,0,0,9,51,10,0.00388,0,1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,84,"        if (info != null) {
",2,1,0,1,3,0,0,0,0,3,19,8,0.00388,0,1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,119,58,"           current = current.getParent()) {
",2,0,0,1,4,0,4,0,0,7,32,6,0.00388,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,971,"          aliasingGets++;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00362,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,972,"          totalGets++;
",2,0,0,0,0,0,0,0,0,3,12,6,0.00362,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,973,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00362,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,757,"        node.addChildToBack(transform(child));
",0,0,0,2,4,0,8,0,0,8,38,8,0.00358,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,758,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00358,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,398,"                return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00355,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2280,"    return options;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00351,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2130,"    CheckLevel level = error.getDefaultLevel();
",2,0,0,1,2,0,4,2,0,8,43,4,0.00348,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2131,"    if (warningsGuard != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00348,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2132,"      CheckLevel newLevel = warningsGuard.level(error);
",2,0,0,1,2,0,6,2,0,10,49,6,0.00348,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2133,"      if (newLevel != null) {
",2,1,0,1,3,0,0,0,0,3,23,6,0.00348,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2138,"    if (level.isOn()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00348,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,119,2144,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00348,0,1
defect4j,closure,com/google/javascript/jscomp/JSError,119,242,"    return defaultLevel;
",2,0,0,0,0,1,0,0,0,2,20,4,0.00346,0,1
defect4j,closure,com/google/javascript/rhino/Node,119,1547,"      if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {
",0,1,0,3,7,0,10,0,0,11,71,8,0.00341,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,119,1186,"    return moduleGraph;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00339,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,363,"                isSet = true;
",2,0,0,0,0,0,0,0,0,4,13,9,0.00332,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,364,"                type = Name.Type.FUNCTION;
",8,0,0,0,0,0,0,0,0,9,26,9,0.00332,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,365,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00332,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,534,"        node.addChildToBack(transform((AstNode) child));
",2,0,0,3,6,0,6,2,0,10,48,8,0.00324,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,535,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00324,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,119,3147,"        return parent;
",2,0,0,0,0,1,0,0,0,2,14,5,0.00313,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,935,"      return parent == null ? baseName : parent.getFullName() + '.' + baseName;
",6,2,0,1,2,1,4,0,0,13,73,6,0.00307,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,261,"        validateCall(n);
",0,0,0,1,2,0,4,0,0,4,16,6,0.00301,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,262,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00301,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,375,"    validateNodeType(Token.CALL, n);
",4,0,0,1,2,0,4,0,0,8,32,5,0.00301,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,376,"    validateMinimumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.00301,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,377,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,0.00301,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,378,"      validateExpression(c);
",0,0,0,1,2,0,4,0,0,4,22,7,0.00301,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,380,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00301,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,513,"          return Name.Type.FUNCTION;
",6,0,0,0,0,1,0,0,0,6,26,7,0.00291,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,361,"                  return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00272,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,639,"      Ref.Type type = Ref.Type.DIRECT_GET;
",12,0,0,0,0,0,0,0,0,12,36,5,0.00254,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,640,"      if (parent != null) {
",2,1,0,1,3,0,0,0,0,3,21,5,0.00254,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,641,"        switch (parent.getType()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.00254,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,691,"      handleGet(module, scope, n, parent, name, type);
",0,0,0,1,2,0,14,0,0,14,48,6,0.00254,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,692,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00254,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1381,"        return Token.CALL;
",4,0,0,0,0,1,0,0,0,4,18,6,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,754,"      Node node = newNode(transformTokenType(callNode.getType()),
",2,0,0,2,5,0,8,2,0,12,59,5,0.00252,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,756,"      for (AstNode child : callNode.getArguments()) {
",2,0,0,2,5,0,4,2,0,8,47,5,0.00252,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,760,"      node.setLineno(node.getFirstChild().getLineno());
",0,0,0,3,6,0,10,0,0,10,49,6,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,761,"      node.setCharno(node.getFirstChild().getCharno());
",0,0,0,3,6,0,10,0,0,10,49,6,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,762,"      maybeSetLengthFrom(node, callNode);
",0,0,0,1,2,0,6,0,0,6,35,6,0.00252,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,763,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,186,"        return processFunctionCall((FunctionCall) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.00252,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,135,"          annotateCalls(n);
",0,0,0,1,2,0,4,0,0,4,17,7,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,136,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,158,"      Preconditions.checkState(n.isCall());
",0,0,0,2,4,0,8,0,0,8,37,6,0.00252,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,162,"      Node first = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,5,0.00252,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,165,"      while (first.isCast()) {
",0,0,0,2,5,0,4,0,0,4,24,6,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,169,"      if (!NodeUtil.isGet(first)) {
",0,0,0,2,5,0,6,0,0,7,29,5,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,175,"      if (first.isName() &&
",0,1,0,1,3,0,4,0,0,5,21,5,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,119,179,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00252,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,400,"                if (NodeUtil.isAssignmentOp(parent) &&
",0,1,0,1,3,0,6,0,0,7,38,9,0.00249,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,418,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00236,0,1
defect4j,closure,com/google/javascript/rhino/Node,119,2314,"    return this.getType() == Token.GETELEM;
",4,1,0,1,2,1,2,0,0,7,39,4,0.00235,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.00235,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.00234,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.00234,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.00234,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,119,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00234,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,917,"      if (props == null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.00231,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,918,"        props = new ArrayList<Name>();
",2,0,0,1,2,0,0,4,0,7,30,7,0.00231,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,920,"      Name node = new Name(name, this, inExterns);
",6,0,0,1,2,0,0,4,0,10,44,5,0.00231,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,921,"      props.add(node);
",0,0,0,1,2,0,6,0,0,6,16,6,0.00231,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,922,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00231,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,856,"          String parentName = name.substring(0, i);
",2,0,0,1,2,0,6,2,0,10,41,9,0.00231,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,857,"          Name parent = getOrCreateName(parentName);
",2,0,0,1,2,0,4,2,0,8,42,9,0.00231,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,858,"          node = parent.addProperty(name.substring(i + 1), inExterns);
",4,1,0,2,4,0,10,0,0,16,60,9,0.00231,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,859,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00231,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,161,"    ensureGenerated();
",0,0,0,1,2,0,2,0,0,2,18,5,0.00230,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,162,"    return globalNames;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00230,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,428,"        handleGet(module, scope, n, parent, name);
",0,0,0,1,2,0,12,0,0,12,42,8,0.00228,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,635,"      if (maybeHandlePrototypePrefix(module, scope, n, parent, name)) {
",0,0,0,2,5,0,12,0,0,12,65,6,0.00228,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,119,210,"        TemplateType thatKey = thatKeys.get(j);
",2,0,0,1,2,0,6,2,0,10,39,8,0.00227,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,119,211,"        JSType thatType = that.getResolvedTemplateType(thatKey);
",2,0,0,1,2,0,6,2,0,10,56,8,0.00227,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,119,216,"        if (thisKey == thatKey) {
",4,1,0,1,3,0,0,0,0,5,25,8,0.00227,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,387,"                  isSet = true;
",2,0,0,0,0,0,0,0,0,4,13,11,0.00227,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,388,"                  type = getValueType(n.getNext());
",2,0,0,2,4,0,6,0,0,9,33,11,0.00227,0,0
defect4j,closure,com/google/javascript/rhino/Node,120,1430,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,1446,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,120,1459,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,2194,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,120,2195,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,2196,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,2197,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,312,"              aliasInit = candidate.refInfo.getInitializingReference();
",6,0,0,1,2,0,2,0,0,9,57,13,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,313,"              Node value = aliasInit.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,42,13,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,314,"              Preconditions.checkNotNull(value);
",0,0,0,1,2,0,6,0,0,6,34,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,315,"              inlineWellDefinedVariable(candidate.alias,
",4,0,0,0,1,0,2,0,0,6,42,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,318,"              staleVars.add(candidate.alias);
",4,0,0,1,2,0,4,0,0,8,31,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,308,"            AliasCandidate candidate = aliasCandidates.get(nameNode);
",2,0,0,1,2,0,6,2,0,10,57,11,0.05263,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,309,"            if (!staleVars.contains(candidate.alias) &&
",4,1,0,1,3,0,4,0,0,10,43,11,0.05263,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,651,"        Node parent = initialization.getParent();
",2,0,0,1,2,0,4,2,0,8,41,8,0.04348,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,652,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,9,0.04348,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,696,"          Preconditions.checkState(refInit == refSet.get(1));
",2,1,0,2,4,0,8,0,0,11,51,10,0.04348,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,697,"          startingReadRef = 2;
",2,0,0,0,0,0,0,0,0,3,20,9,0.04348,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,283,"        lookAhead = null;
",2,0,0,0,0,0,0,0,0,3,17,7,0.03448,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,284,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03448,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,711,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03333,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,701,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,0.03030,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,625,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02778,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,328,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,2185,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,659,"        return compiler.getCodingConvention().isInlinableFunction(n);
",0,0,0,2,4,1,8,0,0,8,61,8,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,535,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.02632,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,609,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,601,"        it = NodeIterators.LocalVarMotion.forVar(
",6,0,0,0,1,0,2,0,0,9,41,7,0.02174,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,383,"      Reference decl = refSet.get(0);
",2,0,0,1,2,0,4,2,0,8,31,5,0.02000,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,384,"      for (int i = 1; i < refSet.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,41,5,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,385,"        inlineValue(v, refSet.get(i), value.cloneTree());
",0,0,0,3,6,0,14,0,0,14,49,8,0.02000,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,387,"      removeDeclaration(decl);
",0,0,0,1,2,0,4,0,0,4,24,6,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,388,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1607,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,0.01961,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,183,"              aliasCandidates.put(value, new AliasCandidate(v, referenceInfo));
",4,0,0,2,4,0,6,2,0,12,65,14,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,131,"    AliasCandidate(Var alias, ReferenceCollection refInfo) {
",6,0,0,1,3,0,0,4,0,10,56,3,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,132,"      this.alias = alias;
",4,0,0,0,0,0,0,0,0,5,19,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,133,"      this.refInfo = refInfo;
",4,0,0,0,0,0,0,0,0,5,23,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,600,"      if (initialization.getParent().isVar()) {
",0,0,0,3,7,0,6,0,0,6,41,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,617,"      Node targetName = reference.getNode();
",2,0,0,1,2,0,4,2,0,8,38,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,618,"      while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,619,"        Node curNode = it.next();
",2,0,0,1,2,0,4,2,0,8,25,7,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,620,"        if (curNode == targetName) {
",4,1,0,1,3,0,0,0,0,5,28,7,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,623,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,335,"        staleVars.add(scope.getVar(root.getString()));
",0,0,0,3,6,0,12,0,0,12,46,8,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,120,1397,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.01613,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,165,"      Preconditions.checkArgument(var.isVar());
",0,0,0,2,4,0,8,0,0,8,41,6,0.01587,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,166,"      Preconditions.checkArgument(NodeUtil.isStatement(var));
",0,0,0,2,4,0,10,0,0,10,55,6,0.01587,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,171,"      return new LocalVarMotion(
",0,0,0,0,1,1,0,2,0,2,26,7,0.01587,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1223,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,193,"    private LocalVarMotion(Node nameNode, FunctionlessLocalScope iterator) {
",6,0,0,1,3,1,0,4,0,11,72,3,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,194,"      Preconditions.checkArgument(nameNode.isName());
",0,0,0,2,4,0,8,0,0,8,47,6,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,195,"      Node valueNode = NodeUtil.getAssignedValue(nameNode);
",2,0,0,1,2,0,6,2,0,10,53,5,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,196,"      this.varName = nameNode.getString();
",2,0,0,1,2,0,4,0,0,7,36,5,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,197,"      this.valueHasSideEffects = valueNode != null &&
",4,2,0,0,0,0,0,0,0,7,47,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,199,"      this.iterator = iterator;
",4,0,0,0,0,0,0,0,0,5,25,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,200,"      advanceLookAhead(true);
",0,0,0,1,2,0,2,0,0,3,23,6,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,201,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,205,"      return lookAhead != null;
",2,1,0,0,0,1,0,0,0,3,25,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,210,"      Node next = lookAhead;
",4,0,0,0,0,0,0,2,0,6,22,5,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,211,"      advanceLookAhead(false);
",0,0,0,1,2,0,2,0,0,3,24,6,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,212,"      return next;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,221,"      if (!atStart) {
",2,0,0,1,3,0,0,0,0,3,15,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,222,"        if (lookAhead == null) {
",2,1,0,1,3,0,0,0,0,3,24,7,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,228,"        Node curNode = iterator.current();
",2,0,0,1,2,0,4,2,0,8,34,7,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,229,"        if (curNode.isName() &&
",0,1,0,1,3,0,4,0,0,5,23,7,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,236,"      if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,241,"      Node nextNode = iterator.next();
",2,0,0,1,2,0,4,2,0,8,32,5,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,242,"      Node nextParent = iterator.currentParent();
",2,0,0,1,2,0,4,2,0,8,43,5,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,243,"      int type = nextNode.getType();
",2,0,0,1,2,0,4,0,0,6,30,6,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,245,"      if (valueHasSideEffects) {
",2,0,0,1,3,0,0,0,0,2,26,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,281,"      if (NodeUtil.nodeTypeMayHaveSideEffects(nextNode) && type != Token.NAME
",6,2,0,1,3,0,6,0,0,14,71,6,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,287,"      lookAhead = nextNode;
",4,0,0,0,0,0,0,0,0,5,21,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,288,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,51,"    FunctionlessLocalScope(Node ... ancestors) {
",4,0,0,1,3,0,0,2,0,6,44,3,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,44,"    private final Stack<Node> ancestors = new Stack<Node>();
",2,0,0,1,2,2,0,8,0,12,56,3,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,52,"      Preconditions.checkArgument(ancestors.length > 0);
",4,1,0,1,2,0,4,0,0,9,50,6,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,54,"      for (Node n : ancestors) {
",4,0,0,1,3,0,0,2,0,6,26,5,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,55,"        if (n.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,21,8,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,59,"        this.ancestors.add(0, n);
",2,0,0,1,2,0,4,0,0,6,25,8,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,66,"      return !(ancestors.size() == 1 && ancestors.peek().getNext() == null);
",0,3,0,4,8,1,10,0,0,14,70,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,71,"      Node current = ancestors.pop();
",2,0,0,1,2,0,4,2,0,8,31,5,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,72,"      if (current.getNext() == null) {
",0,1,0,2,5,0,4,0,0,5,32,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,73,"        current = ancestors.peek();
",2,0,0,1,2,0,4,0,0,7,27,7,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,76,"        if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,80,"        current = current.getNext();
",2,0,0,1,2,0,4,0,0,7,28,7,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,81,"        ancestors.push(current);
",0,0,0,1,2,0,6,0,0,6,24,8,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,84,"        if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,88,"        while (current.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,31,8,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,89,"          current = current.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,34,9,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,90,"          ancestors.push(current);
",0,0,0,1,2,0,6,0,0,6,24,10,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,93,"          if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,10,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,99,"      return current;
",2,0,0,0,0,1,0,0,0,2,15,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,111,"      return ancestors.peek();
",0,0,0,1,2,1,4,0,0,4,24,6,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,118,"      return ancestors.size() >= 2 ?
",0,1,0,1,2,1,4,0,0,5,30,6,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,376,"        Reference maybeDecl = references.get(index - 1);
",4,1,0,1,2,0,4,2,0,11,48,7,0.01316,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,377,"        if (maybeDecl.isVarDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,35,8,0.01316,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,398,"      } else if (isInitializingAssignmentAt(1)) {
",0,0,0,2,6,0,2,0,0,2,43,7,0.01316,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,565,"      return getParent().isVar();
",0,0,0,2,4,1,4,0,0,4,27,6,0.01316,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,575,"      return canMoveAggressively(value) ||
",0,1,0,1,2,1,4,0,0,5,36,5,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,585,"      return NodeUtil.isLiteralValue(value, true)
",0,0,0,1,2,1,6,0,0,7,43,7,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,365,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01282,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,375,"      if (index < references.size() && index > 0) {
",4,3,0,2,5,0,4,0,0,11,45,5,0.01282,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,710,"        if (currentBlock.isHoisted) {
",4,0,0,1,3,0,0,0,0,4,29,8,0.01282,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,547,"      Node value = initialization.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,47,5,0.01266,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,548,"      Preconditions.checkState(value != null);
",2,1,0,1,2,0,4,0,0,7,40,6,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,549,"      if (value.isGetProp()
",0,0,0,1,3,0,4,0,0,4,21,8,0.01266,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,555,"      if (value.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,25,6,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1606,"    } else if (parent.isAssign() && parent.getFirstChild() == n) {
",2,2,0,3,8,0,8,0,0,12,62,5,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,413,"      Node varNode = decl.getParent();
",2,0,0,1,2,0,4,2,0,8,32,5,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,414,"      Node grandparent = decl.getGrandparent();
",2,0,0,1,2,0,4,2,0,8,41,5,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,416,"      compiler.reportChangeToEnclosingScope(decl.getNode());
",0,0,0,2,4,0,8,0,0,8,54,6,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,417,"      varNode.removeChild(decl.getNode());
",0,0,0,2,4,0,8,0,0,8,36,6,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,419,"      if (!varNode.hasChildren()) {
",0,0,0,2,5,0,4,0,0,5,29,5,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,420,"        Preconditions.checkState(varNode.isVar());
",0,0,0,2,4,0,8,0,0,8,42,8,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,421,"        NodeUtil.removeChild(grandparent, varNode);
",0,0,0,1,2,0,8,0,0,8,43,8,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,423,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,439,"        ref.getParent().replaceChild(ref.getNode(), value);
",0,0,0,3,6,0,12,0,0,12,51,8,0.01042,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,330,"      for (Node c = root.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,65,5,0.01020,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,334,"      if (root.isName()) {
",0,0,0,2,5,0,4,0,0,4,20,6,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,337,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,434,"      compiler.reportChangeToEnclosingScope(ref.getNode());
",0,0,0,2,4,0,8,0,0,8,53,6,0.01020,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,435,"      if (ref.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,37,6,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,441,"      blacklistVarReferencesInTree(value, v.scope);
",4,0,0,1,2,0,4,0,0,8,45,6,0.01020,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,442,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,306,"          Node nameNode = refs.get(i).getNode();
",2,0,0,2,4,0,8,2,0,12,38,9,0.00990,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,307,"          if (aliasCandidates.containsKey(nameNode)) {
",0,0,0,2,5,0,6,0,0,6,44,10,0.00990,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,526,"      if (declaration != initialization &&
",4,2,0,0,1,0,0,0,0,6,36,5,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,533,"      if (declaration.getBasicBlock() != initialization.getBasicBlock()
",0,1,0,2,5,0,8,0,0,9,65,6,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,715,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,615,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.00813,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,616,"      return parent.isAssign()
",0,0,0,1,2,1,4,0,0,4,24,7,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,662,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,280,"        Reference reference = referenceInfo.references.get(
",6,0,0,0,1,0,2,2,0,10,51,8,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,282,"        if (canInline(declaration, init, reference)) {
",0,0,0,2,5,0,8,0,0,8,46,9,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,286,"      } else if (declaration != init && refCount == 2) {
",6,3,0,1,4,0,0,0,0,9,50,7,0.00746,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,517,"      if (!isValidDeclaration(declaration)
",0,0,0,1,3,0,4,0,0,5,36,7,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,669,"      return !reference.isDeclaration() && !reference.isLvalue();
",0,1,0,2,4,1,8,0,0,11,59,5,0.00741,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,646,"        if (!NodeUtil.isFunctionDeclaration(initialization.getParent())
",0,0,0,2,5,0,8,0,0,9,63,9,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,704,"        Node value = refInit.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,40,7,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,705,"        Preconditions.checkNotNull(value);
",0,0,0,1,2,0,6,0,0,6,34,8,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,707,"        boolean isImmutableValueWorthInlining =
",2,0,0,0,0,0,0,0,0,2,39,8,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,711,"        boolean isInlinableThisAlias =
",2,0,0,0,0,0,0,0,0,2,30,8,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,714,"        if (!isImmutableValueWorthInlining && !isInlinableThisAlias) {
",4,1,0,1,3,0,0,0,0,7,62,7,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,643,"      } else if (initialization.isDeclaration()) {
",0,0,0,2,6,0,4,0,0,4,44,7,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,657,"      Node n = initialization.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,43,5,0.00667,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,658,"      if (n.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,21,6,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,695,"        if (refDecl != refInit) {
",4,1,0,1,3,0,0,0,0,5,25,7,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,700,"        if (!refInfo.isWellDefined()) {
",0,0,0,2,5,0,4,0,0,5,31,7,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,468,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.00658,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,641,"      if (initialization == null) {
",2,1,0,1,3,0,0,0,0,3,29,5,0.00658,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,690,"        Reference refInit = refInfo.getInitializingReference();
",2,0,0,1,2,0,4,2,0,8,55,7,0.00658,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,691,"        if (!isValidInitialization(refInit)) {
",0,0,0,2,5,0,4,0,0,5,38,7,0.00658,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,464,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.00641,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,465,"      for (int i = 0; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.00641,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,466,"        Reference ref = references.get(i);
",2,0,0,1,2,0,6,2,0,10,34,7,0.00641,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,467,"        if (ref.isLvalue() || ref.isInitializingDeclaration()) {
",0,1,0,3,7,0,8,0,0,9,56,7,0.00641,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,686,"      boolean isNeverAssigned = refInfo.isNeverAssigned();
",2,0,0,1,2,0,4,0,0,6,52,6,0.00641,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,689,"      if (!isNeverAssigned) {
",2,0,0,1,3,0,0,0,0,3,23,5,0.00641,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,180,"            Reference init = referenceInfo.getInitializingReference();
",2,0,0,1,2,0,4,2,0,8,58,11,0.00637,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,181,"            Node value = init.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,37,11,0.00637,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,182,"            if (value != null && value.isName()) {
",2,2,0,2,5,0,4,0,0,8,38,11,0.00637,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,304,"        List<Reference> refs = referenceInfo.references;
",6,0,0,0,0,0,0,4,0,10,48,7,0.00629,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,305,"        for (int i = 1 /* start from a read */; i < refs.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,63,7,0.00629,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,92,"        return Predicates.<Var>alwaysTrue();
",0,0,0,1,2,1,4,2,0,6,36,6,0.00578,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,632,"      return (declaration.getParent().isVar()
",0,0,0,2,5,1,6,0,0,6,39,9,0.00575,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,679,"      List<Reference> refSet = refInfo.references;
",6,0,0,0,0,0,0,4,0,10,44,5,0.00575,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,680,"      int startingReadRef = 1;
",2,0,0,0,0,0,0,0,0,2,24,6,0.00575,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,681,"      Reference refDecl = refSet.get(0);
",2,0,0,1,2,0,4,2,0,8,34,5,0.00575,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,682,"      if (!isValidDeclaration(refDecl)) {
",0,0,0,2,5,0,4,0,0,5,35,5,0.00575,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,451,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00562,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,219,"          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);
",0,0,0,1,2,0,8,0,0,8,61,12,0.00546,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,257,"      int refCount = referenceInfo.references.size();
",6,0,0,1,2,0,2,0,0,8,47,6,0.00546,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,258,"      Reference declaration = referenceInfo.references.get(0);
",6,0,0,1,2,0,2,2,0,10,56,5,0.00546,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,259,"      Reference init = referenceInfo.getInitializingReference();
",2,0,0,1,2,0,4,2,0,8,58,5,0.00546,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,260,"      int firstRefAfterInit = (declaration == init) ? 2 : 3;
",6,1,0,1,2,0,0,0,0,7,54,6,0.00546,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,262,"      if (refCount > 1 &&
",2,2,0,0,1,0,0,0,0,4,19,5,0.00546,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,301,"      if (!maybeModifiedArguments &&
",2,1,0,0,1,0,0,0,0,4,30,5,0.00546,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,323,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00546,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,221,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00521,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,209,"        } else if (isInlineableDeclaredConstant(v, referenceInfo)) {
",0,0,0,2,6,0,6,0,0,6,60,9,0.00515,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,450,"      if (!identifyConstants.apply(var)) {
",0,0,0,2,5,0,6,0,0,7,36,5,0.00515,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,227,"        Var arguments = scope.getArgumentsVar();
",2,0,0,1,2,0,4,2,0,8,40,7,0.00513,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,228,"        ReferenceCollection refs = referenceMap.getReferences(arguments);
",2,0,0,1,2,0,6,2,0,10,65,7,0.00513,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,229,"        if (refs != null && !refs.references.isEmpty()) {
",6,2,0,2,5,0,2,0,0,11,49,7,0.00513,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1605,"      return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,7,0.00510,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,113,"      return var.isConst();
",0,0,0,1,2,1,4,0,0,4,21,6,0.00505,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,428,"      for (BasicBlock block = ref.getBasicBlock();
",2,0,0,1,3,0,4,2,0,8,44,6,0.00505,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,429,"           block != null; block = block.getParent()) {
",4,1,0,1,4,0,4,0,0,10,43,5,0.00505,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,430,"        if (block.isFunction) {
",4,0,0,1,3,0,0,0,0,4,23,8,0.00505,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,437,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.00505,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,457,"      return assignment;
",2,0,0,0,0,1,0,0,0,2,18,5,0.00505,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,422,"      Reference ref = getOneAndOnlyAssignment();
",2,0,0,1,2,0,2,2,0,6,42,5,0.00493,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,423,"      if (ref == null) {
",2,1,0,1,3,0,0,0,0,3,18,5,0.00493,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,445,"      Reference assignment = null;
",2,0,0,0,0,0,0,2,0,4,28,5,0.00493,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,446,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.00493,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,447,"      for (int i = 0; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.00493,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,448,"        Reference ref = references.get(i);
",2,0,0,1,2,0,6,2,0,10,34,7,0.00493,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,449,"        if (ref.isLvalue() || ref.isInitializingDeclaration()) {
",0,1,0,3,7,0,8,0,0,9,56,7,0.00493,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,450,"          if (assignment == null) {
",2,1,0,1,3,0,0,0,0,3,25,9,0.00493,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,451,"            assignment = ref;
",4,0,0,0,0,0,0,0,0,5,17,11,0.00493,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,716,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.00490,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,326,"        if (!initBlock.provablyExecutesBefore(
",0,0,0,0,2,0,4,0,0,5,38,7,0.00488,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,332,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.00476,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,715,"      if (currentBlock == this) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.00474,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,397,"        return references.get(0);
",0,0,0,1,2,1,4,0,0,4,25,8,0.00472,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,323,"      Preconditions.checkState(references.get(0).isDeclaration());
",0,0,0,3,6,0,10,0,0,10,60,6,0.00467,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,324,"      BasicBlock initBlock = init.getBasicBlock();
",2,0,0,1,2,0,4,2,0,8,44,5,0.00467,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,325,"      for (int i = 1; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.00467,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,707,"      for (currentBlock = thatBlock;
",4,0,0,0,1,0,0,0,0,5,30,5,0.00461,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,708,"           currentBlock != null && currentBlock != this;
",4,3,0,0,0,0,0,0,0,7,45,5,0.00461,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,588,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.00459,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,589,"      return (parent.isFunction())
",0,0,0,2,4,1,4,0,0,4,28,8,0.00459,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1602,"    Preconditions.checkState(n.isName());
",0,0,0,2,4,0,8,0,0,8,37,5,0.00457,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1603,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,0.00457,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1604,"    if (parent.isVar()) {
",0,0,0,2,5,0,4,0,0,4,21,5,0.00457,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,607,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,5,0.00455,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,608,"      if (parent.isVar()) {
",0,0,0,2,5,0,4,0,0,4,21,6,0.00455,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,611,"      return NodeUtil.isForIn(parent) && parent.getFirstChild() == n;
",2,2,0,2,4,1,10,0,0,14,63,5,0.00455,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,363,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.00450,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,602,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.00450,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,603,"      return parent == null ? null : parent.getParent();
",2,1,0,1,2,1,4,0,0,7,50,6,0.00450,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,311,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.00448,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,312,"      if (size == 0) {
",2,1,0,1,3,0,0,0,0,3,16,5,0.00448,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,318,"      Reference init = getInitializingReference();
",2,0,0,1,2,0,2,2,0,6,44,5,0.00448,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,319,"      if (init == null) {
",2,1,0,1,3,0,0,0,0,3,19,5,0.00448,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,396,"      if (isInitializingDeclarationAt(0)) {
",0,0,0,2,5,0,2,0,0,2,37,6,0.00448,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,621,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.00437,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,622,"      int parentType = parent.getType();
",2,0,0,1,2,0,4,0,0,6,34,6,0.00437,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,623,"      return (parentType == Token.VAR && nameNode.getFirstChild() != null)
",6,3,0,2,4,1,4,0,0,13,68,10,0.00437,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,358,"      Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,5,0.00429,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,359,"      if (maybeInit.isInitializingDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,44,6,0.00429,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,578,"      return isDeclaration() &&
",0,1,0,1,2,1,2,0,0,3,25,6,0.00429,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,120,377,"      return System.identityHashCode(this);
",0,0,0,1,2,1,4,0,0,4,37,6,0.00400,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,120,543,"    if (arguments == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00394,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,120,544,"      arguments = new Arguments(this);
",2,0,0,1,2,0,0,2,0,5,32,6,0.00394,0,0
defect4j,closure,com/google/javascript/jscomp/Scope,120,546,"    return arguments;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00394,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,120,355,"      super(
",0,0,0,0,1,0,0,0,0,0,6,3,0.00394,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,120,365,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00394,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,170,"        for (Iterator<Var> it = t.getScope().getVars(); it.hasNext();) {
",2,0,0,4,9,0,10,4,0,16,64,7,0.00380,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,171,"          Var v = it.next();
",2,0,0,1,2,0,4,2,0,8,18,9,0.00380,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,172,"          ReferenceCollection referenceInfo = referenceMap.getReferences(v);
",2,0,0,1,2,0,6,2,0,10,66,9,0.00380,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,177,"          if (referenceInfo != null && referenceInfo.references.size() >= 2 &&
",6,5,0,1,3,0,2,0,0,13,68,9,0.00380,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,186,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00380,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,349,"      return var.isExtern()
",0,0,0,1,2,1,4,0,0,4,21,9,0.00369,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,110,"  private class IdentifyConstants implements Predicate<Var> {
",2,0,0,0,1,1,0,4,0,7,59,2,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/CodingConventions,120,164,"      return nextConvention.isInlinableFunction(n);
",0,0,0,1,2,1,6,0,0,6,45,6,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,142,"  private class InliningBehavior implements Behavior {
",2,0,0,0,1,1,0,2,0,5,52,2,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,148,"    private final Set<Var> staleVars = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,53,3,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,155,"    final Map<Node, AliasCandidate> aliasCandidates = Maps.newHashMap();
",2,0,0,1,2,1,4,6,0,13,68,3,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,159,"      collectAliasCandidates(t, referenceMap);
",0,0,0,1,2,0,6,0,0,6,40,6,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,160,"      doInlinesForScope(t, referenceMap);
",0,0,0,1,2,0,6,0,0,6,35,6,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,161,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,169,"      if (mode != Mode.CONSTANTS_ONLY) {
",6,1,0,1,3,0,0,0,0,7,34,5,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,188,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,196,"      boolean maybeModifiedArguments =
",2,0,0,0,0,0,0,0,0,2,32,6,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,198,"      for (Iterator<Var> it = t.getScope().getVars(); it.hasNext();) {
",2,0,0,4,9,0,10,4,0,16,64,5,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,199,"        Var v = it.next();
",2,0,0,1,2,0,4,2,0,8,18,7,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,201,"        ReferenceCollection referenceInfo = referenceMap.getReferences(v);
",2,0,0,1,2,0,6,2,0,10,66,7,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,205,"        if (referenceInfo == null || isVarInlineForbidden(v)) {
",2,2,0,2,5,0,4,0,0,9,55,7,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,222,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,226,"      if (scope.isLocal()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,243,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,90,"    switch (mode) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,76,"      boolean inlineAllStrings) {
",2,0,0,0,2,0,0,0,0,2,27,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,71,"  private final IdentifyConstants identifyConstants = new IdentifyConstants();
",2,0,0,1,2,2,0,4,0,8,76,2,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,77,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,78,"    this.mode = mode;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,79,"    this.inlineAllStrings = inlineAllStrings;
",4,0,0,0,0,0,0,0,0,5,41,4,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,84,"    ReferenceCollectingCallback callback = new ReferenceCollectingCallback(
",2,0,0,0,1,0,0,4,0,6,71,4,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,86,"    callback.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,32,5,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,87,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,90,"    switch (mode) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,58,"  enum Mode {
",2,0,0,0,1,0,0,0,0,2,11,2,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,60,"    CONSTANTS_ONLY,
",2,0,0,0,0,0,0,0,0,2,15,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,62,"    LOCALS_ONLY,
",2,0,0,0,0,0,0,0,0,2,12,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,63,"    ALL
",2,0,0,0,0,0,0,0,0,2,3,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,58,"  enum Mode {
",2,0,0,0,1,0,0,0,0,2,11,2,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,58,"  enum Mode {
",2,0,0,0,1,0,0,0,0,2,11,2,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,120,357,"      Preconditions.checkState(n.isFunction());
",0,0,0,2,4,0,8,0,0,8,41,6,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,2185,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,121,1397,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1223,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,316,"              aliasInit = candidate.refInfo.getInitializingReference();
",6,0,0,1,2,0,2,0,0,9,57,13,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,317,"              Node value = aliasInit.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,42,13,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,318,"              Preconditions.checkNotNull(value);
",0,0,0,1,2,0,6,0,0,6,34,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,319,"              inlineWellDefinedVariable(candidate.alias,
",4,0,0,0,1,0,2,0,0,6,42,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,322,"              staleVars.add(candidate.alias);
",4,0,0,1,2,0,4,0,0,8,31,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,312,"            AliasCandidate candidate = aliasCandidates.get(nameNode);
",2,0,0,1,2,0,6,2,0,10,57,11,0.05263,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,313,"            if (!staleVars.contains(candidate.alias) &&
",4,1,0,1,3,0,4,0,0,10,43,11,0.05263,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,127,"  private static class AliasCandidate {
",2,0,0,0,1,2,0,0,0,4,37,2,0.05263,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,283,"        lookAhead = null;
",2,0,0,0,0,0,0,0,0,3,17,7,0.04545,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,284,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04545,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,655,"        Node parent = initialization.getParent();
",2,0,0,1,2,0,4,2,0,8,41,8,0.04348,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,656,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,9,0.04348,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,700,"          Preconditions.checkState(refInit == refSet.get(1));
",2,1,0,2,4,0,8,0,0,11,51,10,0.04348,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,701,"          startingReadRef = 2;
",2,0,0,0,0,0,0,0,0,3,20,9,0.04348,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,734,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.04000,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,0.03448,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1607,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,705,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,328,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,629,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02778,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,663,"        return compiler.getCodingConvention().isInlinableFunction(n);
",0,0,0,2,4,1,8,0,0,8,61,8,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,539,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.02632,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,204,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.02564,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,205,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02564,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,956,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,8,0.02439,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,960,"      if (first == null || first.getType() != Token.NAME) {
",6,3,0,2,5,0,4,0,0,13,53,7,0.02439,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,963,"        sb.append(first.getString());
",0,0,0,2,4,0,8,0,0,8,29,10,0.02439,0,0
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,164,"      return nextConvention.isInlinableFunction(n);
",0,0,0,1,2,1,6,0,0,6,45,6,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,357,"      Preconditions.checkState(n.isFunction());
",0,0,0,2,4,0,8,0,0,8,41,6,0.02439,0,0
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,358,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,632,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,0.02439,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,133,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,0.02273,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,121,146,"        return processInfixExpression((InfixExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.02222,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,605,"        it = NodeIterators.LocalVarMotion.forVar(
",6,0,0,0,1,0,2,0,0,9,41,7,0.02174,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,165,"      Preconditions.checkArgument(var.isVar());
",0,0,0,2,4,0,8,0,0,8,41,6,0.02174,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,166,"      Preconditions.checkArgument(NodeUtil.isStatement(var));
",0,0,0,2,4,0,10,0,0,10,55,6,0.02174,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,171,"      return new LocalVarMotion(
",0,0,0,0,1,1,0,2,0,2,26,7,0.02174,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,387,"      Reference decl = refSet.get(0);
",2,0,0,1,2,0,4,2,0,8,31,5,0.02000,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,388,"      for (int i = 1; i < refSet.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,41,5,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,389,"        inlineValue(v, refSet.get(i), value.cloneTree());
",0,0,0,3,6,0,14,0,0,14,49,8,0.02000,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,391,"      removeDeclaration(decl);
",0,0,0,1,2,0,4,0,0,4,24,6,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,392,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,0.01887,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,0.01887,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,0.01887,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,183,"              aliasCandidates.put(value, new AliasCandidate(v, referenceInfo));
",4,0,0,2,4,0,6,2,0,12,65,14,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,131,"    AliasCandidate(Var alias, ReferenceCollection refInfo) {
",6,0,0,1,3,0,0,4,0,10,56,3,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,132,"      this.alias = alias;
",4,0,0,0,0,0,0,0,0,5,19,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,133,"      this.refInfo = refInfo;
",4,0,0,0,0,0,0,0,0,5,23,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,604,"      if (initialization.getParent().isVar()) {
",0,0,0,3,7,0,6,0,0,6,41,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,621,"      Node targetName = reference.getNode();
",2,0,0,1,2,0,4,2,0,8,38,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,622,"      while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,623,"        Node curNode = it.next();
",2,0,0,1,2,0,4,2,0,8,25,7,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,624,"        if (curNode == targetName) {
",4,1,0,1,3,0,0,0,0,5,28,7,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,627,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,51,"    FunctionlessLocalScope(Node ... ancestors) {
",4,0,0,1,3,0,0,2,0,6,44,3,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,44,"    private final Stack<Node> ancestors = new Stack<Node>();
",2,0,0,1,2,2,0,8,0,12,56,3,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,52,"      Preconditions.checkArgument(ancestors.length > 0);
",4,1,0,1,2,0,4,0,0,9,50,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,54,"      for (Node n : ancestors) {
",4,0,0,1,3,0,0,2,0,6,26,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,55,"        if (n.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,21,8,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,59,"        this.ancestors.add(0, n);
",2,0,0,1,2,0,4,0,0,6,25,8,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,66,"      return !(ancestors.size() == 1 && ancestors.peek().getNext() == null);
",0,3,0,4,8,1,10,0,0,14,70,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,71,"      Node current = ancestors.pop();
",2,0,0,1,2,0,4,2,0,8,31,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,72,"      if (current.getNext() == null) {
",0,1,0,2,5,0,4,0,0,5,32,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,73,"        current = ancestors.peek();
",2,0,0,1,2,0,4,0,0,7,27,7,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,76,"        if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,80,"        current = current.getNext();
",2,0,0,1,2,0,4,0,0,7,28,7,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,81,"        ancestors.push(current);
",0,0,0,1,2,0,6,0,0,6,24,8,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,84,"        if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,88,"        while (current.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,31,8,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,89,"          current = current.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,34,9,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,90,"          ancestors.push(current);
",0,0,0,1,2,0,6,0,0,6,24,10,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,93,"          if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,10,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,99,"      return current;
",2,0,0,0,0,1,0,0,0,2,15,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,111,"      return ancestors.peek();
",0,0,0,1,2,1,4,0,0,4,24,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,118,"      return ancestors.size() >= 2 ?
",0,1,0,1,2,1,4,0,0,5,30,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,193,"    private LocalVarMotion(Node nameNode, FunctionlessLocalScope iterator) {
",6,0,0,1,3,1,0,4,0,11,72,3,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,194,"      Preconditions.checkArgument(nameNode.isName());
",0,0,0,2,4,0,8,0,0,8,47,6,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,195,"      Node valueNode = NodeUtil.getAssignedValue(nameNode);
",2,0,0,1,2,0,6,2,0,10,53,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,196,"      this.varName = nameNode.getString();
",2,0,0,1,2,0,4,0,0,7,36,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,197,"      this.valueHasSideEffects = valueNode != null &&
",4,2,0,0,0,0,0,0,0,7,47,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,199,"      this.iterator = iterator;
",4,0,0,0,0,0,0,0,0,5,25,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,200,"      advanceLookAhead(true);
",0,0,0,1,2,0,2,0,0,3,23,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,201,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,205,"      return lookAhead != null;
",2,1,0,0,0,1,0,0,0,3,25,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,210,"      Node next = lookAhead;
",4,0,0,0,0,0,0,2,0,6,22,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,211,"      advanceLookAhead(false);
",0,0,0,1,2,0,2,0,0,3,24,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,212,"      return next;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,221,"      if (!atStart) {
",2,0,0,1,3,0,0,0,0,3,15,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,222,"        if (lookAhead == null) {
",2,1,0,1,3,0,0,0,0,3,24,7,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,228,"        Node curNode = iterator.current();
",2,0,0,1,2,0,4,2,0,8,34,7,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,229,"        if (curNode.isName() &&
",0,1,0,1,3,0,4,0,0,5,23,7,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,236,"      if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,241,"      Node nextNode = iterator.next();
",2,0,0,1,2,0,4,2,0,8,32,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,242,"      Node nextParent = iterator.currentParent();
",2,0,0,1,2,0,4,2,0,8,43,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,243,"      int type = nextNode.getType();
",2,0,0,1,2,0,4,0,0,6,30,6,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,245,"      if (valueHasSideEffects) {
",2,0,0,1,3,0,0,0,0,2,26,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,281,"      if (NodeUtil.nodeTypeMayHaveSideEffects(nextNode) && type != Token.NAME
",6,2,0,1,3,0,6,0,0,14,71,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,287,"      lookAhead = nextNode;
",4,0,0,0,0,0,0,0,0,5,21,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,288,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,153,"  static class LocalVarMotion implements Iterator<Node> {
",2,0,0,0,1,1,0,4,0,7,55,2,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,750,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,751,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,752,"    validateExpression(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,5,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,753,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,339,"        staleVars.add(scope.getVar(root.getString()));
",0,0,0,3,6,0,12,0,0,12,46,8,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,733,"        if (currentBlock.isHoisted) {
",4,0,0,1,3,0,0,0,0,4,29,8,0.01563,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1606,"    } else if (parent.isAssign() && parent.getFirstChild() == n) {
",2,2,0,3,8,0,8,0,0,12,62,5,0.01471,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,376,"        Reference maybeDecl = references.get(index - 1);
",4,1,0,1,2,0,4,2,0,11,48,7,0.01429,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,377,"        if (maybeDecl.isVarDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,35,8,0.01429,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,398,"      } else if (isInitializingAssignmentAt(1)) {
",0,0,0,2,6,0,2,0,0,2,43,7,0.01429,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,588,"      return getParent().isVar();
",0,0,0,2,4,1,4,0,0,4,27,6,0.01429,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3332,"      map.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,21,7,0.01408,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,121,2029,"      reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,7,0.01408,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3367,"              Node clone = mtoc.get(n);
",2,0,0,1,2,0,6,2,0,10,25,12,0.01408,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3368,"              if (n.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,48,12,0.01408,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3370,"              } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,13,0.01408,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,365,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,375,"      if (index < references.size() && index > 0) {
",4,3,0,2,5,0,4,0,0,11,45,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1103,"        return NodeUtil.functionCallHasSideEffects(n, compiler);
",0,0,0,1,2,1,8,0,0,8,56,6,0.01351,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,579,"      return canMoveAggressively(value) ||
",0,1,0,1,2,1,4,0,0,5,36,5,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,589,"      return NodeUtil.isLiteralValue(value, true)
",0,0,0,1,2,1,6,0,0,7,43,7,0.01299,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,114,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,123,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,134,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,135,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,871,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,872,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,873,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,876,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,877,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,878,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,879,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,882,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,883,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,934,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,970,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,971,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,972,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,973,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,978,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,979,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,980,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,981,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,982,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,983,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,984,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,986,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,988,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,991,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,992,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,997,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1009,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1014,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,1015,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1016,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1023,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1024,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1028,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,1029,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,1031,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,1032,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,1033,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,1034,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1036,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1035,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.01282,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,1038,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/InputId,121,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.01282,0,1
defect4j,closure,com/google/javascript/jscomp/SourceFile,121,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,349,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,317,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.01282,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,941,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.01266,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,942,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.01266,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,943,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.01266,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,951,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.01266,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,952,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.01266,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,953,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.01266,0,0
defect4j,closure,com/google/javascript/rhino/Node,121,954,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.01266,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,955,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.01266,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,965,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.01266,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,969,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.01266,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,977,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.01266,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,996,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.01266,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1005,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,551,"      Node value = initialization.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,47,5,0.01266,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,552,"      Preconditions.checkState(value != null);
",2,1,0,1,2,0,4,0,0,7,40,6,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,553,"      if (value.isGetProp()
",0,0,0,1,3,0,4,0,0,4,21,8,0.01266,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,559,"      if (value.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,25,6,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1020,"      String name = nameNode.getString();
",2,0,0,1,2,0,4,2,0,8,35,6,0.01250,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1021,"      if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) {
",0,0,0,2,5,0,6,0,0,6,59,7,0.01250,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1024,"    } else if (nameNode.isGetProp()) {
",0,0,0,2,6,0,4,0,0,4,34,6,0.01250,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1108,"        return n.hasChildren();
",0,0,0,1,2,1,4,0,0,4,23,6,0.01250,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1559,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.01235,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,1519,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.01205,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,417,"      Node varNode = decl.getParent();
",2,0,0,1,2,0,4,2,0,8,32,5,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,418,"      Node grandparent = decl.getGrandparent();
",2,0,0,1,2,0,4,2,0,8,41,5,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,420,"      compiler.reportChangeToEnclosingScope(decl.getNode());
",0,0,0,2,4,0,8,0,0,8,54,6,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,421,"      varNode.removeChild(decl.getNode());
",0,0,0,2,4,0,8,0,0,8,36,6,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,423,"      if (!varNode.hasChildren()) {
",0,0,0,2,5,0,4,0,0,5,29,5,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,424,"        Preconditions.checkState(varNode.isVar());
",0,0,0,2,4,0,8,0,0,8,42,8,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,425,"        NodeUtil.removeChild(grandparent, varNode);
",0,0,0,1,2,0,8,0,0,8,43,8,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,427,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1088,"    return nodeTypeMayHaveSideEffects(n, null);
",0,0,0,1,2,1,4,0,0,5,43,4,0.01075,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,431,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01075,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,777,"    return mayHaveSideEffects(n, null);
",0,0,0,1,2,1,4,0,0,5,35,4,0.01064,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,443,"        ref.getParent().replaceChild(ref.getNode(), value);
",0,0,0,3,6,0,12,0,0,12,51,8,0.01042,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1110,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01031,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,334,"      for (Node c = root.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,65,5,0.01020,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,338,"      if (root.isName()) {
",0,0,0,2,5,0,4,0,0,4,20,6,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,341,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,438,"      compiler.reportChangeToEnclosingScope(ref.getNode());
",0,0,0,2,4,0,8,0,0,8,53,6,0.01020,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,439,"      if (ref.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,37,6,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,445,"      blacklistVarReferencesInTree(value, v.scope);
",4,0,0,1,2,0,4,0,0,8,45,6,0.01020,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,446,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,310,"          Node nameNode = refs.get(i).getNode();
",2,0,0,2,4,0,8,2,0,12,38,9,0.00990,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,311,"          if (aliasCandidates.containsKey(nameNode)) {
",0,0,0,2,5,0,6,0,0,6,44,10,0.00990,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1815,"    return parent.isTry() && parent.getChildCount() == 3
",0,3,0,2,4,1,8,0,0,11,52,4,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1821,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,0.00917,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1822,"    return parent.isTry()
",0,0,0,1,2,1,4,0,0,4,21,6,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1828,"    if (isTryFinallyNode(parent, node)) {
",0,0,0,2,5,0,6,0,0,6,37,5,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1836,"    } else if (node.isCatch()) {
",0,0,0,2,6,0,4,0,0,4,28,6,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1851,"    } else if (isStatementBlock(parent)
",0,0,0,1,4,0,4,0,0,4,35,10,0.00917,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1854,"      parent.removeChild(node);
",0,0,0,1,2,0,6,0,0,6,25,11,0.00917,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1880,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,530,"      if (declaration != initialization &&
",4,2,0,0,1,0,0,0,0,6,36,5,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,537,"      if (declaration.getBasicBlock() != initialization.getBasicBlock()
",0,1,0,2,5,0,8,0,0,9,65,6,0.00917,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,719,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,638,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,639,"      return parent.isAssign()
",0,0,0,1,2,1,4,0,0,4,24,7,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,121,343,"          Preconditions.checkState(value.booleanValue() == isConst,
",2,1,0,1,3,0,8,0,0,11,57,10,0.00820,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,121,2023,"    if (phaseOptimizer != null) {
",2,1,0,1,3,0,0,0,0,3,29,4,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,121,2031,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1096,"    switch(n.getType()) {
",0,0,0,2,5,0,4,0,0,4,21,5,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,666,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,506,"        String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,5,0.00758,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,509,"        return ""undefined"".equals(name)
",0,0,0,1,2,1,4,0,0,5,31,8,0.00758,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,2206,"      case Token.ASSIGN: return ""="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.00746,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,280,"        Reference reference = referenceInfo.references.get(
",6,0,0,0,1,0,2,2,0,10,51,8,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,282,"        if (canInline(declaration, init, reference)) {
",0,0,0,2,5,0,8,0,0,8,46,9,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,286,"      } else if (declaration != init && refCount == 2) {
",6,3,0,1,4,0,0,0,0,9,50,7,0.00746,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,521,"      if (!isValidDeclaration(declaration)
",0,0,0,1,3,0,4,0,0,5,36,7,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,673,"      return !reference.isDeclaration() && !reference.isLvalue();
",0,1,0,2,4,1,8,0,0,11,59,5,0.00741,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,121,320,"              info = var.getJSDocInfo();
",2,0,0,1,2,0,4,0,0,7,26,13,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1213,"      case Token.ASSIGN: return 1;
",4,0,0,0,0,1,0,0,0,4,28,6,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,650,"        if (!NodeUtil.isFunctionDeclaration(initialization.getParent())
",0,0,0,2,5,0,8,0,0,9,63,9,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,708,"        Node value = refInit.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,40,7,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,709,"        Preconditions.checkNotNull(value);
",0,0,0,1,2,0,6,0,0,6,34,8,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,711,"        boolean isImmutableValueWorthInlining =
",2,0,0,0,0,0,0,0,0,2,39,8,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,715,"        boolean isInlinableThisAlias =
",2,0,0,0,0,0,0,0,0,2,30,8,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,718,"        if (!isImmutableValueWorthInlining && !isInlinableThisAlias) {
",4,1,0,1,3,0,0,0,0,7,62,7,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,514,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00699,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1092,"    if (isAssignmentOp(n)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.00699,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,121,170,"        n.putBooleanProp(Node.FREE_CALL, true);
",4,0,0,1,2,0,4,0,0,9,39,8,0.00685,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,315,"            expectedConst = false;
",2,0,0,0,0,0,0,0,0,4,22,11,0.00676,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,317,"            JSDocInfo info = null;
",2,0,0,0,0,0,0,2,0,4,22,11,0.00676,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,318,"            Var var = t.getScope().getVar(n.getString());
",2,0,0,3,6,0,10,2,0,14,45,11,0.00676,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,319,"            if (var != null) {
",2,1,0,1,3,0,0,0,0,3,18,11,0.00676,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,121,323,"            if (info != null && info.isConstant()) {
",2,2,0,2,5,0,4,0,0,8,40,11,0.00676,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,121,326,"              expectedConst = false;
",2,0,0,0,0,0,0,0,0,4,22,13,0.00676,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,334,"            Preconditions.checkState(expectedConst == isConst,
",4,1,0,0,1,0,4,0,0,9,50,12,0.00676,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,302,"        String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,7,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,303,"        if (n.getString().isEmpty()) {
",0,0,0,3,7,0,6,0,0,6,30,8,0.00671,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,121,307,"        boolean isConst = n.getBooleanProp(Node.IS_CONSTANT_NAME);
",6,0,0,1,2,0,4,0,0,10,58,8,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,308,"        if (checkUserDeclarations) {
",2,0,0,1,3,0,0,0,0,2,28,7,0.00671,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,121,309,"          boolean expectedConst = false;
",2,0,0,0,0,0,0,0,0,3,30,10,0.00671,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,121,310,"          CodingConvention convention = compiler.getCodingConvention();
",2,0,0,1,2,0,4,2,0,8,61,9,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,311,"          if (NodeUtil.isConstantName(n)
",0,0,0,1,3,0,6,0,0,6,30,11,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,330,"          if (expectedConst) {
",2,0,0,1,3,0,0,0,0,2,20,9,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,339,"        Boolean value = constantMap.get(name);
",2,0,0,1,2,0,6,2,0,10,38,7,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,121,340,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,7,0.00671,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,121,341,"          constantMap.put(name, isConst);
",0,0,0,1,2,0,8,0,0,8,31,10,0.00671,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1605,"      return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,7,0.00667,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,121,537,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,647,"      } else if (initialization.isDeclaration()) {
",0,0,0,2,6,0,4,0,0,4,44,7,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,661,"      Node n = initialization.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,43,5,0.00667,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,662,"      if (n.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,21,6,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,699,"        if (refDecl != refInit) {
",4,1,0,1,3,0,0,0,0,5,25,7,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,704,"        if (!refInfo.isWellDefined()) {
",0,0,0,2,5,0,4,0,0,5,31,7,0.00667,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,121,210,"        TemplateType thatKey = thatKeys.get(j);
",2,0,0,1,2,0,6,2,0,10,39,8,0.00667,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,121,211,"        JSType thatType = that.getResolvedTemplateType(thatKey);
",2,0,0,1,2,0,6,2,0,10,56,8,0.00667,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,121,216,"        if (thisKey == thatKey) {
",4,1,0,1,3,0,0,0,0,5,25,8,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3323,"    Preconditions.checkState(main.isEquivalentTo(clone));
",0,0,0,2,4,0,10,0,0,10,53,5,0.00662,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3324,"    Map<Node, Node> mtoc = new HashMap<Node, Node>();
",2,0,0,1,2,0,0,12,0,14,49,4,0.00662,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3325,"    mtoc.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,22,5,0.00662,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,201,"          irFactory.handleBlockComment(comment);
",0,0,0,1,2,0,6,0,0,6,38,12,0.28125,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,258,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.28125,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,50,"  public SimpleSourceFile(String name, boolean extern) {
",6,0,0,1,3,1,0,2,0,9,54,2,0.07895,0,0
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,51,"    this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,0.07895,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,52,"    this.extern = extern;
",4,0,0,0,0,0,0,0,0,5,21,4,0.07895,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,53,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07895,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,57,"    return name;
",2,0,0,0,0,1,0,0,0,2,12,4,0.07895,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,122,54,"    return createConfig(isIdeMode, languageMode, acceptConstKeyword, null);
",0,0,0,1,2,1,8,0,0,9,71,4,0.05422,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,122,217,"    this(reporter, false);
",2,0,0,1,2,0,0,0,0,3,22,4,0.05389,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,122,218,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05389,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,510,"      node.setLength(source.getLength());
",0,0,0,2,4,0,8,0,0,8,35,7,0.03475,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,935,"        return TokenStream.isKeyword(identifier);
",0,0,0,1,2,1,6,0,0,6,41,8,0.00838,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,163,"        reservedKeywords = null; // use TokenStream.isKeyword instead
",2,0,0,0,0,0,0,0,0,3,61,5,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,164,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00826,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,187,"        return id;
",2,0,0,0,0,1,0,0,0,2,10,4,0.00636,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,58,"        boolean id = false;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00631,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,59,"        String s = name;
",4,0,0,0,0,0,0,2,0,6,16,4,0.00631,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,122,61,"            String X = null;
",2,0,0,0,0,0,0,2,0,4,16,6,0.00631,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,122,63,"            partial: switch (s.length()) {
",2,0,0,2,5,0,4,0,0,6,30,6,0.00631,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,185,"            if (X!=null && X!=s && !X.equals(s)) return false;
",6,4,0,2,4,1,6,0,0,18,50,6,0.00631,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,122,490,"    return getPropertyMap().getPropertiesCount();
",0,0,0,2,4,1,4,0,0,4,45,5,0.00414,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,152,"    PropertyMap primaryParent = getPrimaryParent();
",2,0,0,1,2,0,2,2,0,6,47,4,0.00414,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,153,"    if (primaryParent == null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00414,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,156,"    Set<String> props = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,38,4,0.00414,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,157,"    collectPropertyNames(props);
",0,0,0,1,2,0,4,0,0,4,28,5,0.00414,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,158,"    return props.size();
",0,0,0,1,2,1,4,0,0,4,20,5,0.00414,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,174,"    for (String prop : properties.keySet()) {
",2,0,0,2,5,0,4,2,0,8,41,4,0.00412,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,175,"      props.add(prop);
",0,0,0,1,2,0,6,0,0,6,16,7,0.00412,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,176,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00412,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,177,"    PropertyMap primaryParent = getPrimaryParent();
",2,0,0,1,2,0,2,2,0,6,47,4,0.00412,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,178,"    if (primaryParent != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00412,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,179,"      primaryParent.collectPropertyNames(props);
",0,0,0,1,2,0,6,0,0,6,42,7,0.00412,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,181,"    for (PropertyMap p : getSecondaryParents()) {
",2,0,0,2,5,0,2,2,0,6,45,4,0.00412,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,186,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00412,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,114,"    Iterable<ObjectType> extendedInterfaces =
",2,0,0,0,0,0,0,4,0,6,41,4,0.00318,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,118,"    if (Iterables.isEmpty(extendedInterfaces)) {
",0,0,0,2,5,0,6,0,0,6,44,5,0.00318,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,119,"      return ImmutableList.of();
",0,0,0,1,2,1,4,0,0,4,26,7,0.00318,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,102,"    ObjectType iProto = parentSource.getImplicitPrototype();
",2,0,0,1,2,0,4,2,0,8,56,4,0.00318,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,103,"    return iProto == null ? null : iProto.getPropertyMap();
",2,1,0,1,2,1,4,0,0,7,55,5,0.00318,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,111,"    if (parentSource == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00315,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,99,"    if (parentSource == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00314,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1523,"    return IR.number(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,53,5,0.00292,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,122,250,"        return processNumberLiteral((NumberLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00292,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,956,"      return newNumberNode(literalNode.getNumber());
",0,0,0,2,4,1,6,0,0,6,46,6,0.00292,0,1
defect4j,closure,com/google/javascript/rhino/Node,122,1135,"    putIntProp(LENGTH, length);
",0,0,0,1,2,0,6,0,0,6,27,5,0.00291,0,0
defect4j,closure,com/google/javascript/rhino/Node,122,1136,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00291,0,1
defect4j,closure,com/google/javascript/rhino/IR,122,455,"    return Node.newNumber(d);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00281,0,1
defect4j,closure,com/google/javascript/rhino/Node,122,502,"    return new NumberNode(number);
",2,0,0,1,2,1,0,2,0,4,30,5,0.00280,0,0
defect4j,closure,com/google/javascript/rhino/Node,122,151,"      super(Token.NUMBER);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00280,0,0
defect4j,closure,com/google/javascript/rhino/Node,122,152,"      this.number = number;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00280,0,1
defect4j,closure,com/google/javascript/rhino/Node,122,153,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00280,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,520,"      return position - lineIndex - 1;
",4,1,0,0,0,1,0,0,0,5,32,6,0.00262,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,200,"        } else if (comment.getCommentType() == CommentType.BLOCK_COMMENT) {
",4,1,0,2,6,0,4,0,0,9,67,9,0.00243,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,196,"      for (Comment comment : node.getComments()) {
",2,0,0,2,5,0,4,2,0,8,44,6,0.00243,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,197,"        if (comment.getCommentType() == CommentType.JSDOC &&
",4,2,0,1,3,0,4,0,0,10,52,8,0.00243,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,203,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00243,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1246,"        Node initalizer = transform(initializerNode.getInitializer());
",2,0,0,2,4,0,6,2,0,10,62,7,0.00213,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1247,"        node.addChildToBack(initalizer);
",0,0,0,1,2,0,6,0,0,6,32,8,0.00213,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,122,210,"        TemplateType thatKey = thatKeys.get(j);
",2,0,0,1,2,0,6,2,0,10,39,8,0.00156,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,122,211,"        JSType thatType = that.getResolvedTemplateType(thatKey);
",2,0,0,1,2,0,6,2,0,10,56,8,0.00156,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,122,216,"        if (thisKey == thatKey) {
",4,1,0,1,3,0,0,0,0,5,25,8,0.00156,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,122,537,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,122,269,"        if (node instanceof VariableDeclaration) {
",2,0,0,1,3,0,0,2,0,4,42,6,0.00154,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,122,270,"          return processVariableDeclaration((VariableDeclaration) node);
",2,0,0,2,4,1,2,2,0,6,62,8,0.00154,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,122,271,"        } else  if (node instanceof VariableInitializer) {
",2,0,0,1,4,0,0,2,0,4,50,7,0.00154,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,122,272,"          return processVariableInitializer((VariableInitializer) node);
",2,0,0,2,4,1,2,2,0,6,62,9,0.00154,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1230,"      if (!config.acceptConstKeyword && declarationNode.getType() ==
",4,2,0,1,3,0,4,0,0,11,62,5,0.00154,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1235,"      Node node = newNode(Token.VAR);
",6,0,0,1,2,0,2,2,0,10,31,5,0.00154,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1236,"      for (VariableInitializer child : declarationNode.getVariables()) {
",2,0,0,2,5,0,4,2,0,8,66,5,0.00154,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1237,"        node.addChildToBack(transform(child));
",0,0,0,2,4,0,8,0,0,8,38,8,0.00154,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1238,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00154,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1239,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00154,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1244,"      Node node = transform(initializerNode.getTarget());
",2,0,0,2,4,0,6,2,0,10,51,5,0.00154,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,1245,"      if (initializerNode.getInitializer() != null) {
",0,1,0,2,5,0,4,0,0,5,47,5,0.00154,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2191,"      case Token.IN: return ""in"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1397,"        return Token.IN;
",4,0,0,0,0,1,0,0,0,4,16,6,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2205,"      case Token.NEG: return ""-"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,267,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,7,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,272,"        if (n.getFirstChild().isNumber()) {
",0,0,0,3,7,0,6,0,0,6,35,7,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,275,"          cc.addOp(NodeUtil.opToStrNoFail(type), false);
",0,0,0,2,4,0,10,0,0,11,46,9,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,276,"          addExpr(first, NodeUtil.precedence(type), Context.OTHER);
",4,0,0,2,4,0,10,0,0,14,57,9,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,279,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,422,"            add(first, Context.IN_FOR_INIT_CLAUSE);
",4,0,0,1,2,0,4,0,0,8,39,10,0.05882,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,135,"        addExpr(first, p, context);
",0,0,0,1,2,0,8,0,0,8,27,9,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,136,"        cc.addOp(opstr, true);
",0,0,0,1,2,0,6,0,0,7,22,9,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,137,"        addExpr(last, p, rhsContext);
",0,0,0,1,2,0,8,0,0,8,29,9,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1201,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.02778,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,222,"      append("" "");
",0,0,0,1,2,0,2,0,0,3,12,8,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1361,"        return Token.NEG;
",4,0,0,0,0,1,0,0,0,4,17,6,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1490,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2060,"    this.prettyPrint = prettyPrint;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2061,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,1649,"    this.languageOut = languageOut;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01471,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,1650,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01471,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2092,"    this.lineLengthThreshold = lineLengthThreshold;
",4,0,0,0,0,0,0,0,0,5,47,4,0.01449,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2093,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01449,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,244,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,245,"        unrollBinaryOperator(n, Token.COMMA, "","", context,
",4,0,0,0,1,0,6,0,0,11,50,6,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,247,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1410,"        return Token.COMMA;
",4,0,0,0,0,1,0,0,0,4,19,6,0.01064,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,1984,"    putBooleanProp(EMPTY_BLOCK, val);
",0,0,0,1,2,0,6,0,0,6,33,5,0.01031,0,0
defect4j,closure,com/google/javascript/rhino/Node,123,1985,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01031,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1229,"      case Token.IN:     return 9;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01031,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,234,"        irNode.setType(Token.BLOCK);
",4,0,0,1,2,0,4,0,0,8,28,9,0.01031,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,235,"        irNode.setWasEmptyNode(true);
",0,0,0,1,2,0,4,0,0,5,29,9,0.01031,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,706,"      Node node = newNode(Token.EMPTY);
",6,0,0,1,2,0,2,2,0,10,33,5,0.01010,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,707,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1483,"    switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00909,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,424,"            addExpr(first, 0, Context.IN_FOR_INIT_CLAUSE);
",4,0,0,1,2,0,4,0,0,8,46,10,0.00901,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,223,"        } else  if (node instanceof ForLoop) {
",2,0,0,1,4,0,0,2,0,4,38,7,0.00862,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,224,"          return processForLoop((ForLoop) node);
",2,0,0,2,4,1,2,2,0,6,38,9,0.00862,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,743,"      Node node = newNode(
",2,0,0,0,1,0,2,2,0,6,20,5,0.00862,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,748,"      node.addChildToBack(transformBlock(loopNode.getBody()));
",0,0,0,3,6,0,10,0,0,10,56,6,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,749,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1214,"      case Token.HOOK:   return 2;  // ?: operator
",4,0,0,0,0,1,0,0,0,4,44,6,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,283,"        Preconditions.checkState(childCount == 3);
",2,1,0,1,2,0,4,0,0,7,42,7,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,284,"        int p = NodeUtil.precedence(type);
",2,0,0,1,2,0,6,0,0,8,34,7,0.00855,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,286,"        addExpr(first, p + 1, context);
",2,1,0,1,2,0,6,0,0,9,31,7,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,287,"        cc.addOp(""?"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.00855,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,288,"        addExpr(first.getNext(), 1, rhsContext);
",0,0,0,2,4,0,8,0,0,8,40,7,0.00855,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,289,"        cc.addOp("":"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.00855,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,290,"        addExpr(last, 1, rhsContext);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00855,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,291,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00855,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,2330,"    return this.getType() == Token.IN;
",4,1,0,1,2,1,2,0,0,7,34,4,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,420,"          add(""for("");
",0,0,0,1,3,0,2,0,0,3,12,8,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,421,"          if (first.isVar()) {
",0,0,0,2,5,0,4,0,0,4,20,8,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,426,"          add("";"");
",0,0,0,1,2,0,2,0,0,3,9,8,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,427,"          add(first.getNext());
",0,0,0,2,4,0,6,0,0,6,21,8,0.00826,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,428,"          add("";"");
",0,0,0,1,2,0,2,0,0,3,9,8,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,429,"          add(first.getNext().getNext());
",0,0,0,3,6,0,8,0,0,8,31,8,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,430,"          add("")"");
",0,0,0,1,3,0,2,0,0,3,9,8,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,431,"          addNonEmptyStatement(
",0,0,0,0,1,0,2,0,0,2,21,8,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2181,"      case Token.OR: return ""||"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.00725,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1215,"      case Token.OR:     return 3;
",4,0,0,0,0,1,0,0,0,4,28,6,0.00662,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1438,"        return Token.OR;
",4,0,0,0,0,1,0,0,0,4,16,6,0.00641,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,238,"        return processConditionalExpression((ConditionalExpression) node);
",2,0,0,2,4,1,2,2,0,6,66,6,0.00633,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,669,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.00633,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,858,"          cc.endStatement(true);
",0,0,0,1,2,0,4,0,0,5,22,11,0.00610,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,854,"        if (cc.shouldPreserveExtraBlocks()) {
",0,0,0,2,5,0,4,0,0,4,37,9,0.00606,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,860,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00606,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,221,"        if (node instanceof ForInLoop) {
",2,0,0,1,3,0,0,2,0,4,32,6,0.00585,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,419,"        if (childCount == 4) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.00571,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,770,"    trustedStrings = yes;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00565,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,771,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00565,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2234,"    String res = opToStr(operator);
",2,0,0,1,2,0,4,2,0,8,31,4,0.00556,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2235,"    if (res == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00556,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2239,"    return res;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00556,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,139,"      append("";"");
",0,0,0,1,2,0,2,0,0,3,12,7,0.00459,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,140,"      maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,7,0.00459,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,141,"      statementNeedsEnded = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.00459,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,928,"      add(""("");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00435,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,929,"      add(n, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,22,7,0.00435,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,930,"      add("")"");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00435,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,237,"        Node newBlock = newNode(Token.BLOCK, irNode);
",6,0,0,1,2,0,4,2,0,12,45,8,0.00420,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,238,"        newBlock.setLineno(irNode.getLineno());
",0,0,0,2,4,0,8,0,0,8,39,9,0.00420,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,239,"        newBlock.setCharno(irNode.getCharno());
",0,0,0,2,4,0,8,0,0,8,39,9,0.00420,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,240,"        maybeSetLengthFrom(newBlock, node);
",0,0,0,1,2,0,6,0,0,6,35,9,0.00420,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,241,"        irNode = newBlock;
",4,0,0,0,0,0,0,0,0,5,18,8,0.00420,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1608,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00383,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1604,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00366,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1605,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00366,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1607,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00366,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1610,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00366,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1611,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00366,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,233,"      if (irNode.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,23,7,0.00344,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1512,"    return new Node(type, child1, child2, child3).clonePropsFrom(templateNode);
",8,0,0,2,4,1,4,2,0,14,75,5,0.00333,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2202,"      case Token.ADD: return ""+"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.00326,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1234,"      case Token.ADD:    return 11;
",4,0,0,0,0,1,0,0,0,4,29,6,0.00317,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,877,"          nodeToProcess = firstAndOnlyChild;
",4,0,0,0,0,0,0,0,0,5,34,10,0.00303,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1254,"    return currentContext == Context.BEFORE_DANGLING_ELSE ?
",6,1,0,0,0,1,0,0,0,7,55,5,0.00298,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,904,"    if (n.isLabel()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.00297,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,921,"      return (n.isFunction() || n.isDo());
",0,1,0,3,6,1,8,0,0,9,36,7,0.00297,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,867,"        Node firstAndOnlyChild = getFirstNonEmptyChild(n);
",2,0,0,1,2,0,4,2,0,8,50,8,0.00294,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,868,"        boolean alwaysWrapInBlock = cc.shouldPreserveExtraBlocks();
",2,0,0,1,2,0,4,0,0,6,59,9,0.00294,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,869,"        if (alwaysWrapInBlock || isOneExactlyFunctionOrDo(firstAndOnlyChild)) {
",2,1,0,2,5,0,4,0,0,7,71,8,0.00294,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1225,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,0.00294,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1226,"      if (c.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,7,0.00294,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1232,"        return c;
",2,0,0,0,0,1,0,0,0,2,9,9,0.00294,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,398,"  public Node(int nodeType, Node left, Node mid, Node right) {
",10,0,0,1,3,1,0,6,0,17,60,2,0.00289,0,0
defect4j,closure,com/google/javascript/rhino/Node,123,399,"    Preconditions.checkArgument(left.parent == null);
",4,1,0,1,2,0,4,0,0,9,49,5,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,400,"    Preconditions.checkArgument(left.next == null);
",4,1,0,1,2,0,4,0,0,9,47,5,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,401,"    Preconditions.checkArgument(mid.parent == null);
",4,1,0,1,2,0,4,0,0,9,48,5,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,402,"    Preconditions.checkArgument(mid.next == null);
",4,1,0,1,2,0,4,0,0,9,46,5,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,403,"    Preconditions.checkArgument(right.parent == null);
",4,1,0,1,2,0,4,0,0,9,50,5,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,404,"    Preconditions.checkArgument(right.next == null);
",4,1,0,1,2,0,4,0,0,9,48,5,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,405,"    type = nodeType;
",4,0,0,0,0,0,0,0,0,5,16,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,406,"    parent = null;
",2,0,0,0,0,0,0,0,0,3,14,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,407,"    first = left;
",4,0,0,0,0,0,0,0,0,5,13,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,408,"    last = right;
",4,0,0,0,0,0,0,0,0,5,13,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,409,"    left.next = mid;
",6,0,0,0,0,0,0,0,0,7,16,4,0.00289,0,0
defect4j,closure,com/google/javascript/rhino/Node,123,410,"    left.parent = this;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,411,"    mid.next = right;
",6,0,0,0,0,0,0,0,0,7,17,4,0.00289,0,0
defect4j,closure,com/google/javascript/rhino/Node,123,412,"    mid.parent = this;
",4,0,0,0,0,0,0,0,0,5,18,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,413,"    right.next = null;
",4,0,0,0,0,0,0,0,0,5,18,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,414,"    right.parent = this;
",4,0,0,0,0,0,0,0,0,5,20,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,415,"    sourcePosition = -1;
",2,0,0,0,0,0,0,0,0,4,20,4,0.00289,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,416,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00289,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1188,"        if (type == Token.DELPROP &&
",6,2,0,0,1,0,0,0,0,8,28,7,0.00267,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1210,"        Node node = newNode(type, operand);
",2,0,0,1,2,0,6,2,0,10,35,7,0.00267,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1211,"        if (exprNode.isPostfix()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.00267,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1214,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.00267,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,465,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.00265,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,466,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00265,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1345,"        return Token.ADD;
",4,0,0,0,0,1,0,0,0,4,17,6,0.00265,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,881,"      if (count > 1) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00256,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,171,"        return processUnaryExpression((UnaryExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.00251,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1182,"      int type = transformTokenType(exprNode.getType());
",2,0,0,2,4,0,6,0,0,8,50,6,0.00251,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1183,"      Node operand = transform(exprNode.getOperand());
",2,0,0,2,4,0,6,2,0,10,48,5,0.00251,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1184,"      if (type == Token.NEG && operand.isNumber()) {
",6,2,0,2,5,0,4,0,0,12,46,5,0.00251,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,863,"      if (count == 1) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.00251,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1214,"      if (c.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,7,0.00251,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1216,"      } else if (!c.isEmpty()) {
",0,0,0,2,6,0,4,0,0,5,26,7,0.00251,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1217,"        i++;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00251,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,886,"    if (nodeToProcess.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,30,5,0.00247,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,889,"      add(nodeToProcess, context);
",0,0,0,1,2,0,6,0,0,6,28,7,0.00247,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,893,"      if (nodeToProcess.isVar()) {
",0,0,0,2,5,0,4,0,0,4,28,7,0.00247,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,897,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00247,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,300,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00226,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,852,"      int count = getNonEmptyChildCount(n, 2);
",2,0,0,1,2,0,4,0,0,6,40,7,0.00200,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,853,"      if (count == 0) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.00200,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1211,"    int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00200,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1212,"    Node c = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,27,4,0.00200,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1213,"    for (; c != null && i < maxCount; c = c.getNext()) {
",8,3,0,2,5,0,4,0,0,16,52,4,0.00200,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1220,"    return i;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00200,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,843,"    Node nodeToProcess = n;
",4,0,0,0,0,0,0,2,0,6,23,4,0.00195,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,845,"    if (!allowNonBlockChild && !n.isBlock()) {
",2,1,0,2,5,0,4,0,0,9,42,4,0.00195,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,851,"    if (n.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.00195,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,951,"        cc.listSeparator();
",0,0,0,1,2,0,4,0,0,4,19,9,0.00180,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,952,"        addExpr(n, isArrayOrFunctionArgument ? 1 : 0,
",2,0,0,0,1,0,4,0,0,6,45,9,0.00180,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,244,"        return processParenthesizedExpression((ParenthesizedExpression) node);
",2,0,0,2,4,1,2,2,0,6,70,6,0.00180,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1023,"      Node node = transform(exprNode.getExpression());
",2,0,0,2,4,0,6,2,0,10,48,5,0.00180,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1024,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00180,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,231,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.00168,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,232,"    if (!irNode.isBlock()) {
",0,0,0,2,5,0,4,0,0,5,24,4,0.00168,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,244,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00168,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.00164,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.00164,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1074,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.00164,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1014,"      switch (s.charAt(i)) {
",0,0,0,2,5,0,6,0,0,6,22,7,0.00162,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,670,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.00162,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,672,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.00162,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,673,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00162,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1071,"      char c = s.charAt(i);
",2,0,0,1,2,0,6,0,0,8,21,7,0.00156,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1072,"      switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,6,0.00156,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1158,"          if (outputCharsetEncoder != null) {
",2,1,0,1,3,0,0,0,0,3,35,7,0.00156,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1169,"            if (c > 0x1f && c < 0x7f) {
",4,3,0,1,3,0,0,0,0,7,27,9,0.00156,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1170,"              sb.append(c);
",0,0,0,1,2,0,6,0,0,6,13,12,0.00156,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1000,"      String cached = escapedJsStrings.get(s);
",2,0,0,1,2,0,6,2,0,10,40,6,0.00155,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1001,"      if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1002,"        cached = jsString(n.getString(), useSlashV);
",2,0,0,2,4,0,8,0,0,11,44,8,0.00155,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1003,"        escapedJsStrings.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,32,9,0.00155,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1005,"      add(cached);
",0,0,0,1,2,0,4,0,0,4,12,7,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1030,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1031,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1032,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,995,"    String s = n.getString();
",2,0,0,1,2,0,4,2,0,8,25,4,0.00155,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,996,"    boolean useSlashV = n.getBooleanProp(Node.SLASH_V);
",6,0,0,1,2,0,4,0,0,10,51,5,0.00155,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,997,"    if (useSlashV) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1010,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1013,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1022,"    if (preferSingleQuotes ?
",2,0,0,0,1,0,0,0,0,2,24,5,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1035,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.00155,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,123,"    add("","");
",0,0,0,1,2,0,2,0,0,3,9,5,0.00149,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,124,"    maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,5,0.00149,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,125,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00149,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1068,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.00149,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1069,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00149,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1070,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00149,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1180,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00149,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1181,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00149,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,2286,"    return this.getType() == Token.DO;
",4,1,0,1,2,1,2,0,0,7,34,4,0.00146,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,323,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.00141,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,123,349,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,7,0.00139,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,195,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.00138,0,0
defect4j,closure,com/google/javascript/rhino/Node,123,530,"    this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00135,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,531,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00135,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,712,"      Node node = newNode(Token.EMPTY);
",6,0,0,1,2,0,2,2,0,10,33,5,0.00133,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,713,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,319,"    } else if (!options.checkTypes) {
",4,0,0,1,4,0,0,0,0,5,33,6,0.00133,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,193,"        add(""return"");
",0,0,0,1,2,1,2,0,0,3,14,6,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,194,"        if (childCount == 1) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,199,"        cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,6,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,200,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,317,"    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
",4,0,0,2,6,0,4,0,0,8,60,6,0.00132,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,146,"        return processInfixExpression((InfixExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.00132,0,0
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,123,137,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00131,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,1169,"    return warningsGuard.disables(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00130,0,1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,123,126,"    for (DiagnosticType type : group.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,46,5,0.00130,0,0
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,123,127,"      DiagnosticGroup singleton = DiagnosticGroup.forType(type);
",2,0,0,1,2,0,6,2,0,10,58,7,0.00130,0,0
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,123,129,"      for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,7,0.00130,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,60,"  private DiagnosticGroup(DiagnosticType type) {
",4,0,0,1,3,1,0,2,0,7,46,2,0.00130,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,61,"    this.name = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00130,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,62,"    this.types = ImmutableSet.of(type);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00130,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,63,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00130,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,71,"    if (!singletons.containsKey(type)) {
",0,0,0,2,5,0,6,0,0,7,36,4,0.00130,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,72,"      singletons.put(type, new DiagnosticGroup(type));
",2,0,0,2,4,0,6,2,0,10,48,7,0.00130,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,74,"    return singletons.get(type);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00130,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,117,"    for (DiagnosticType type : group.types) {
",6,0,0,1,3,0,0,2,0,8,41,4,0.00126,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,118,"      if (!matches(type)) {
",0,0,0,2,5,0,4,0,0,5,21,6,0.00126,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,123,119,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00126,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,199,"        return (node instanceof EmptyExpression) ?
",2,0,0,1,2,1,0,2,0,4,42,8,0.00123,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,682,"        boolean needsParens = (context == Context.START_OF_EXPR);
",8,1,0,1,2,0,0,0,0,9,57,7,0.00115,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,683,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.00115,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,686,"        add(""{"");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00115,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,155,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,211,"    Preconditions.checkArgument(node.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,5,0.25000,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,213,"      node = node.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,28,4,0.25000,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,219,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.25000,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,113,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,122,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,133,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,134,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,869,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,870,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,871,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,874,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,875,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,876,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,877,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,880,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,881,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,932,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,968,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,969,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,970,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,971,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,976,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,977,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,978,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,979,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,980,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,981,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,982,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,984,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,986,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,989,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,990,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,995,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1007,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1012,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1013,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1014,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1021,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1022,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1026,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1027,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1029,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1030,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1031,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1032,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1034,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1033,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1036,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/InputId,124,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,55,"      reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,136,"          if (next.isQualifiedName()) {
",0,0,0,2,5,0,4,0,0,4,29,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,137,"            String nextName = next.getQualifiedName();
",2,0,0,1,2,0,4,2,0,8,42,9,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,138,"            if (value.isQualifiedName() &&
",0,1,0,1,3,0,4,0,0,5,30,9,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,145,"              if (!isSafeReplacement(next, assign)) {
",0,0,0,2,5,0,6,0,0,7,39,11,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,149,"              exprParent.removeChild(expr);
",0,0,0,1,2,0,6,0,0,6,29,12,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,150,"              expr.removeChild(assign);
",0,0,0,1,2,0,6,0,0,6,25,12,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,151,"              parent.replaceChild(next, assign);
",0,0,0,1,2,0,8,0,0,8,34,12,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,152,"              return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,208,"    if (node.isName()) {
",0,0,0,2,5,0,4,0,0,4,20,5,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/SourceFile,124,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,315,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,347,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.14286,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.14286,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.14286,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.14286,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.14286,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.14286,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.14286,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.14286,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.14286,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.14286,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.14286,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.14286,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,58,"      collapseAssign(rightValue, expr, exprParent);
",0,0,0,1,2,0,8,0,0,8,45,9,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,124,2016,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,1492,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3323,"    Preconditions.checkState(main.isEquivalentTo(clone));
",0,0,0,2,4,0,10,0,0,10,53,5,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3324,"    Map<Node, Node> mtoc = new HashMap<Node, Node>();
",2,0,0,1,2,0,0,12,0,14,49,4,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3325,"    mtoc.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,22,5,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3326,"    mtocHelper(mtoc, main, clone);
",0,0,0,1,2,0,8,0,0,8,30,5,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3327,"    return mtoc;
",2,0,0,0,0,1,0,0,0,2,12,4,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3331,"    if (main.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3334,"    Node mchild = main.getFirstChild(), cchild = clone.getFirstChild();
",4,0,0,2,4,0,8,2,0,14,67,4,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3335,"    while (mchild != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3336,"      mtocHelper(map, mchild, cchild);
",0,0,0,1,2,0,8,0,0,8,32,7,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3337,"      mchild = mchild.getNext();
",2,0,0,1,2,0,4,0,0,7,26,6,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3338,"      cchild = cchild.getNext();
",2,0,0,1,2,0,4,0,0,7,26,6,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3340,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3354,"    final Map<Node, Node> mtoc = map;
",4,0,0,0,0,1,0,6,0,11,33,4,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3355,"    final boolean checkUnchanged = verifyUnchangedNodes;
",4,0,0,0,0,1,0,0,0,5,52,4,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3356,"    Node clone = mtoc.get(main);
",2,0,0,1,2,0,6,2,0,10,28,4,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3357,"    if (main.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,51,4,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3359,"    } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3362,"    visitPreOrder(main,
",0,0,0,0,1,0,4,0,0,4,19,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3377,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,69,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,70,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,71,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,72,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,73,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,74,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3363,"        new Visitor() {
",0,0,0,1,3,0,0,2,0,2,15,7,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3366,"            if (n.isFunction() && mtoc.containsKey(n)) {
",0,1,0,3,7,0,10,0,0,11,44,10,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3374,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,136,"        addExpr(first, p, context);
",0,0,0,1,2,0,8,0,0,8,27,10,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,137,"        cc.addOp(opstr, true);
",0,0,0,1,2,0,6,0,0,7,22,10,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,138,"        addExpr(last, p, rhsContext);
",0,0,0,1,2,0,8,0,0,8,29,10,0.12500,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1557,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,175,"            parent = next;
",4,0,0,0,0,0,0,0,0,5,14,9,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,176,"            next = leftSide.getNext();
",2,0,0,1,2,0,4,0,0,7,26,9,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,177,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.11111,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,537,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.11111,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,124,210,"        TemplateType thatKey = thatKeys.get(j);
",2,0,0,1,2,0,6,2,0,10,39,8,0.11111,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,124,211,"        JSType thatType = that.getResolvedTemplateType(thatKey);
",2,0,0,1,2,0,6,2,0,10,56,8,0.11111,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,124,216,"        if (thisKey == thatKey) {
",4,1,0,1,3,0,0,0,0,5,25,8,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,170,"          Node leftSide = next.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,37,7,0.10000,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,171,"          if (leftSide.isName() ||
",0,1,0,1,3,0,4,0,0,5,24,7,0.10000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,1483,"    switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.10000,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,530,"    for (ObjectType current = this;
",2,0,0,0,1,0,0,2,0,4,31,5,0.09091,0,0
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,531,"         current != null;
",2,1,0,0,0,0,0,0,0,3,16,4,0.09091,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,533,"      if (current.isTemplatizedType()) {
",0,0,0,2,5,0,4,0,0,4,34,7,0.09091,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,536,"      if (current.isEquivalentTo(prototype)) {
",0,0,0,2,5,0,6,0,0,6,40,7,0.09091,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,532,"         current = current.getImplicitPrototype()) {
",2,0,0,1,4,0,4,0,0,7,43,4,0.09091,0,0
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,540,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.09091,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1517,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.08333,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1555,"        if (!n.isEquivalentTo(
",0,0,0,0,2,0,4,0,0,5,22,8,0.08333,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1554,"           n = n.next, n2 = n2.next) {
",12,0,0,0,2,0,0,0,0,14,27,6,0.08333,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,124,248,"              return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,122,"          parent = next;
",4,0,0,0,0,0,0,0,0,5,14,7,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,123,"          next = next.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,28,7,0.06667,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,124,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,114,"      switch (next.getType()) {
",0,0,0,2,5,0,4,0,0,4,25,7,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,2789,"    visitor.visit(node);
",0,0,0,1,2,0,6,0,0,6,20,5,0.05882,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,2791,"    if (traverseChildrenPred.apply(node)) {
",0,0,0,2,5,0,6,0,0,6,39,5,0.05882,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,2792,"      for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,65,6,0.05882,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,2793,"        visitPreOrder(c, visitor, traverseChildrenPred);
",0,0,0,1,2,0,8,0,0,8,48,9,0.05882,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,2796,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,86,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.05556,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,198,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.04167,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1552,"      for (n = first, n2 = node.first;
",10,0,0,0,1,0,0,0,0,12,32,6,0.04000,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1553,"           n != null;
",2,1,0,0,0,0,0,0,0,3,10,6,0.04000,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,83,"        return !isLValue || value.getFirstChild().isThis();
",2,1,0,2,4,1,6,0,0,10,51,5,0.03571,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1489,"    return isEquivalentTo(node, false, true, false);
",0,0,0,1,2,1,4,0,0,7,48,5,0.03448,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,124,316,"      options.checkTypes = true;
",4,0,0,0,0,0,0,0,0,6,26,6,0.03333,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1722,"        result.last.next = n2clone;
",8,0,0,0,0,0,0,0,0,9,27,8,0.03226,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,110,"    Node assign = expr.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,35,4,0.03226,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,111,"    Node parent = exprParent;
",4,0,0,0,0,0,0,2,0,6,25,4,0.03226,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,112,"    Node next = expr.getNext();
",2,0,0,1,2,0,4,2,0,8,27,4,0.03226,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,113,"    while (next != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.03226,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1719,"      Node n2clone = n2.cloneTree();
",2,0,0,1,2,0,4,2,0,8,30,6,0.02941,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1720,"      n2clone.parent = result;
",6,0,0,0,0,0,0,0,0,7,24,6,0.02941,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1721,"      if (result.last != null) {
",4,1,0,1,3,0,0,0,0,5,26,6,0.02941,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1724,"      if (result.first == null) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.02941,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1725,"        result.first = n2clone;
",6,0,0,0,0,0,0,0,0,7,23,8,0.02941,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1727,"      result.last = n2clone;
",6,0,0,0,0,0,0,0,0,7,22,6,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,36,"        collapseAssign(child.getFirstChild(), child, subtree);
",0,0,0,2,4,0,10,0,0,10,54,9,0.02439,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,48,"    Node leftValue = assign.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,40,4,0.02439,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,49,"    Node rightValue = leftValue.getNext();
",2,0,0,1,2,0,4,2,0,8,38,4,0.02439,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,50,"    if (isCollapsibleValue(leftValue, true) &&
",0,1,0,1,3,0,4,0,0,6,42,4,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,53,"    } else if (isCollapsibleValue(rightValue, false) &&
",0,1,0,1,4,0,4,0,0,6,51,5,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,56,"    } else if (rightValue.isAssign()) {
",0,0,0,2,6,0,4,0,0,4,35,7,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,60,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,77,"    switch (value.getType()) {
",0,0,0,2,5,0,4,0,0,4,26,5,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,89,"        return NodeUtil.isImmutableValue(value);
",0,0,0,1,2,1,6,0,0,6,40,6,0.02439,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,286,"    boolean result = defineProperty(propertyName, type, false, propertyNode);
",2,0,0,1,2,0,8,0,0,11,73,5,0.01961,0,0
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,291,"    registry.registerPropertyOnType(propertyName, this);
",0,0,0,1,2,0,6,0,0,6,52,5,0.01961,0,0
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,292,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01961,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,124,1062,"    return createUnionType(type, getNativeType(JSTypeNative.NULL_TYPE));
",4,0,0,2,4,1,6,0,0,10,68,5,0.01961,0,0
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,121,"    return getPropertyMap().getOwnProperty(name);
",0,0,0,2,4,1,6,0,0,6,45,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,445,"    return getOwnSlot(propertyName) != null;
",0,1,0,1,2,1,4,0,0,6,40,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,124,477,"    return hasOwnProperty(name) && isPropertyTypeDeclared(name);
",0,1,0,2,4,1,8,0,0,9,60,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,124,131,"    return properties;
",2,0,0,0,0,1,0,0,0,2,18,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,124,137,"    if (hasOwnDeclaredProperty(name)) {
",0,0,0,2,5,0,4,0,0,4,35,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,124,140,"    Property newProp = new Property(
",2,0,0,0,1,0,0,4,0,6,32,4,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,124,142,"    properties.putProperty(name, newProp);
",0,0,0,1,2,0,8,0,0,8,38,5,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,124,143,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,124,281,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,124,304,"    } else if (ownerFunction != null) {
",2,1,0,1,4,0,0,0,0,3,35,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,124,305,"      return ownerFunction.getReferenceName() + "".prototype"";
",0,1,0,1,2,1,4,0,0,6,55,7,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,124,88,"    ObjectType proto = getImplicitPrototype();
",2,0,0,1,2,0,2,2,0,6,42,4,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,124,89,"    if (proto != null && proto.hasOwnDeclaredProperty(name)) {
",2,2,0,2,5,0,6,0,0,10,58,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,124,92,"    return super.defineProperty(name, type, inferred, propertyNode);
",10,0,0,1,2,1,0,0,0,10,64,5,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,124,148,"    return properties.get(propertyName);
",0,0,0,1,2,1,6,0,0,6,36,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,124,193,"    Property oldProp = properties.get(name);
",2,0,0,1,2,0,6,2,0,10,40,4,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,124,194,"    if (oldProp != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,124,199,"    properties.put(name, newProp);
",0,0,0,1,2,0,8,0,0,8,30,5,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,124,200,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01923,0,1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,124,62,"    Preconditions.checkNotNull(compiler);
",0,0,0,1,2,0,6,0,0,6,37,5,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,124,63,"    compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,124,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,725,"      Node prev = getChildBefore(child);
",2,0,0,1,2,0,4,2,0,8,34,6,0.01695,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,726,"      prev.next = newChild;
",6,0,0,0,0,0,0,0,0,7,21,6,0.01695,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1717,"    Node result = cloneNode();
",2,0,0,1,2,0,2,2,0,6,26,4,0.01695,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1718,"    for (Node n2 = getFirstChild(); n2 != null; n2 = n2.getNext()) {
",6,1,0,3,7,0,6,2,0,17,64,4,0.01695,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1729,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01695,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1896,"    return getIntProp(CHANGE_TIME);
",0,0,0,1,2,1,4,0,0,4,31,5,0.01695,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1700,"      result = (Node) super.clone();
",4,0,0,2,4,0,0,2,0,7,30,6,0.01639,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1703,"      result.next = null;
",4,0,0,0,0,0,0,0,0,5,19,6,0.01639,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1704,"      result.first = null;
",4,0,0,0,0,0,0,0,0,5,20,6,0.01639,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1705,"      result.last = null;
",4,0,0,0,0,0,0,0,0,5,19,6,0.01639,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1706,"      result.parent = null;
",4,0,0,0,0,0,0,0,0,5,21,6,0.01639,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1709,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01639,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1710,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01639,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,124,573,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,124,151,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,124,50,"          return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,124,48,"      for (DiagnosticType type : otherGroup.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,51,6,0.01299,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,124,49,"        if (group.matches(type)) {
",0,0,0,2,5,0,6,0,0,6,26,9,0.01299,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,124,52,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01299,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1631,"    Preconditions.checkState(parent != null);
",2,1,0,1,2,0,4,0,0,7,41,5,0.01136,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1632,"    parent.removeChild(this);
",0,0,0,1,2,0,4,0,0,4,25,5,0.01136,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1633,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01136,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,514,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,124,2092,"          mode = Config.LanguageMode.ECMASCRIPT5;
",8,0,0,0,0,0,0,0,0,9,39,7,0.01099,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,124,2093,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01099,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,124,159,"        reservedKeywords = ES5_RESERVED_KEYWORDS;
",4,0,0,0,0,0,0,0,0,5,41,5,0.01099,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,124,160,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01099,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,2206,"      case Token.ASSIGN: return ""="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.01087,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,1213,"      case Token.ASSIGN: return 1;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01075,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,464,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,467,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,470,"        boolean needsParens = (first.isNumber());
",2,0,0,2,4,0,4,0,0,6,41,7,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,471,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,474,"        addExpr(first, NodeUtil.precedence(type), context);
",0,0,0,2,4,0,12,0,0,12,51,7,0.01010,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,475,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,478,"        add(""."");
",0,0,0,1,2,0,2,0,0,3,9,7,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,479,"        addIdentifier(last.getString());
",0,0,0,2,4,0,6,0,0,6,32,7,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,480,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,116,"      Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.00971,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,120,"      int p = NodeUtil.precedence(type);
",2,0,0,1,2,0,6,0,0,8,34,7,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,124,"      Context rhsContext = getContextForNoInOperator(context);
",2,0,0,1,2,0,4,2,0,8,56,6,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,129,"      if (last.getType() == type &&
",2,2,0,1,3,0,4,0,0,8,29,6,0.00971,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,134,"      } else if (NodeUtil.isAssignmentOp(n) && NodeUtil.isAssignmentOp(last)) {
",0,1,0,3,8,0,12,0,0,13,73,7,0.00971,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,140,"        unrollBinaryOperator(n, type, opstr, context, rhsContext, p, p + 1);
",2,1,0,1,2,0,14,0,0,17,68,10,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,142,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00971,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,769,"    Node firstNonOperator = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,4,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,770,"    while (firstNonOperator.getType() == op) {
",2,1,0,2,5,0,4,0,0,7,42,4,0.00971,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,774,"    addExpr(firstNonOperator, leftPrecedence, context);
",0,0,0,1,2,0,8,0,0,8,51,5,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,776,"    Node current = firstNonOperator;
",4,0,0,0,0,0,0,2,0,6,32,4,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,778,"      current = current.getParent();
",2,0,0,1,2,0,4,0,0,7,30,6,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,779,"      cc.addOp(opStr, true);
",0,0,0,1,2,0,6,0,0,7,22,7,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,780,"      addExpr(current.getFirstChild().getNext(), rightPrecedence, rhsContext);
",0,0,0,3,6,0,12,0,0,12,72,7,0.00971,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,781,"    } while (current != n);
",4,1,0,1,3,0,0,0,0,5,23,4,0.00971,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,782,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00971,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,699,"      prev.next = child.next;
",8,0,0,0,0,0,0,0,0,9,23,6,0.00962,0,0
defect4j,closure,com/google/javascript/jscomp/CodePrinter,124,478,"        char ch = code.charAt(len - 1);
",4,1,0,1,2,0,4,0,0,9,31,8,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/CodePrinter,124,479,"        if (ch == ';') {
",2,1,0,1,3,0,0,0,0,4,16,7,0.00877,0,1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,124,480,"          preferredBreakPosition = len;
",4,0,0,0,0,0,0,0,0,5,29,9,0.00877,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1531,"      if (type == Token.STRING_KEY) {
",6,1,0,1,3,0,0,0,0,7,31,7,0.00847,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1539,"      int slashV1 = this.getIntProp(SLASH_V);
",2,0,0,1,2,0,4,0,0,6,39,8,0.00847,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1540,"      int slashV2 = node.getIntProp(SLASH_V);
",2,0,0,1,2,0,6,0,0,8,39,8,0.00847,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1541,"      if (slashV1 != slashV2) {
",4,1,0,1,3,0,0,0,0,5,25,7,0.00847,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1544,"    } else if (type == Token.CALL) {
",6,1,0,1,4,0,0,0,0,7,32,6,0.00847,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,124,1538,"    this.languageIn = languageIn;
",4,0,0,0,0,0,0,0,0,5,29,4,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,124,1539,"    this.languageOut = languageIn;
",4,0,0,0,0,0,0,0,0,5,30,4,0.00813,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,958,"      return thisType.toMaybeFunctionType().supAndInfHelper(
",0,0,0,1,3,1,6,0,0,6,54,7,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,202,"        if (outcome) {
",2,0,0,1,3,0,0,0,0,2,14,5,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,203,"          return caseEquality(condition, blindScope, SHEQ);
",0,0,0,1,2,1,8,0,0,8,49,8,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,205,"          return caseEquality(condition, blindScope, SHNE);
",0,0,0,1,2,1,8,0,0,8,49,8,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,678,"          if (!leftTypeRestricted.canTestForShallowEqualityWith(
",0,0,0,0,2,0,4,0,0,5,54,8,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,423,"        declareNameInScope(informed, right, restrictedRightType);
",0,0,0,1,2,0,8,0,0,8,57,9,0.04348,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,877,"    JSType inf = getGreatestSubtype(that);
",2,0,0,1,2,0,4,2,0,8,38,4,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,878,"    return !inf.isEmptyType() ||
",0,1,0,1,2,1,4,0,0,6,28,4,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,901,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.03704,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,873,"    if (isEmptyType() || that.isEmptyType()) {
",0,1,0,3,7,0,6,0,0,7,42,4,0.03226,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1164,"    JSType commonType = getGreatestSubtype(that);
",2,0,0,1,2,0,4,2,0,8,45,4,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1165,"    return new TypePair(commonType, commonType);
",4,0,0,1,2,1,0,2,0,6,44,5,0.03030,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,83,"        return p.typeA.getTypesUnderShallowEquality(p.typeB);
",8,0,0,1,2,1,2,0,0,10,53,9,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1179,"    if (that.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.02941,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1187,"    if (isNullType() && that.isNullType() ||
",0,2,0,2,5,0,6,0,0,8,40,4,0.02941,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1191,"      return new TypePair(this, that);
",2,0,0,1,2,1,0,2,0,4,32,7,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,98,"        return p.typeA.getTypesUnderShallowInequality(p.typeB);
",8,0,0,1,2,1,2,0,0,10,55,9,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,80,"        if (p.typeA == null || p.typeB == null) {
",8,3,0,1,3,0,0,0,0,11,41,8,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,95,"        if (p.typeA == null || p.typeB == null) {
",8,3,0,1,3,0,0,0,0,11,41,8,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,287,"      rightIsRefineable = true;
",2,0,0,0,0,0,0,0,0,4,25,6,0.02500,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,1360,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,420,"        declareNameInScope(informed, left, restrictedLeftType);
",0,0,0,1,2,0,8,0,0,8,55,9,0.01493,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,418,"      FlowScope informed = blindScope.createChildFlowScope();
",2,0,0,1,2,0,4,2,0,8,55,6,0.01370,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,419,"      if (shouldRefineLeft) {
",2,0,0,1,3,0,0,0,0,2,23,6,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,422,"      if (shouldRefineRight) {
",2,0,0,1,3,0,0,0,0,2,24,6,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,425,"      return informed;
",2,0,0,0,0,1,0,0,0,2,16,6,0.01370,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,790,"    FunctionType greatestFn =
",2,0,0,0,0,0,0,2,0,4,25,4,0.01299,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,792,"    FunctionType leastFn =
",2,0,0,0,0,0,0,2,0,4,22,4,0.01299,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,794,"    return leastSuper ? greatestFn : leastFn;
",6,0,0,0,0,1,0,0,0,6,41,5,0.01299,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,780,"    } else if (functionInstance.isEquivalentTo(this)) {
",0,0,0,2,6,0,4,0,0,4,51,6,0.01235,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,427,"    return blindScope;
",2,0,0,0,0,1,0,0,0,2,18,4,0.01176,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,776,"    JSType functionInstance = registry.getNativeType(
",2,0,0,0,1,0,4,2,0,8,49,4,0.01163,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,778,"    if (functionInstance.isEquivalentTo(that)) {
",0,0,0,2,5,0,6,0,0,6,44,5,0.01163,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,320,"    return Integer.MAX_VALUE;
",4,0,0,0,0,1,0,0,0,4,25,5,0.01136,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,753,"    if (isOrdinaryFunction() && that.isOrdinaryFunction() &&
",0,1,0,2,5,0,6,0,0,7,56,4,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,149,"        } else if (right.isTypeOf() &&
",0,1,0,1,4,0,4,0,0,5,30,6,0.01087,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,277,"      leftIsRefineable = true;
",2,0,0,0,0,0,0,0,0,4,24,6,0.01020,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,151,"          FunctionType other =
",2,0,0,0,0,0,0,2,0,4,20,10,0.01020,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,153,"          FunctionType supremum =
",2,0,0,0,0,0,0,2,0,4,23,10,0.01020,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,155,"          alternates.set(functionTypePosition, supremum);
",0,0,0,1,2,0,8,0,0,8,47,11,0.01020,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,156,"          result = null;
",2,0,0,0,0,0,0,0,0,3,14,10,0.01020,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,157,"          return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01020,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,743,"    Preconditions.checkNotNull(that);
",0,0,0,1,2,0,6,0,0,6,33,5,0.01000,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,745,"    if (isEquivalentTo(that)) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.01000,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,651,"        } else if (right.isTypeOf() && left.isString()) {
",0,1,0,3,8,0,8,0,0,9,49,7,0.00980,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,267,"    return caseEquality(condition.getFirstChild(), condition.getLastChild(),
",0,0,0,2,5,1,10,0,0,10,72,5,0.00943,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,140,"          left = condition.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00847,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,141,"          right = condition.getLastChild();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00847,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,298,"      return maybeRestrictTwoNames(
",0,0,0,0,1,1,2,0,0,2,29,7,0.00820,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,274,"    JSType leftType = getTypeIfRefinable(left, blindScope);
",2,0,0,1,2,0,6,2,0,10,55,4,0.00813,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,276,"    if (leftType != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,284,"    JSType rightType = getTypeIfRefinable(right, blindScope);
",2,0,0,1,2,0,6,2,0,10,57,4,0.00813,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,286,"    if (rightType != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,294,"    TypePair merged = merging.apply(new TypePair(leftType, rightType));
",6,0,0,2,4,0,4,4,0,14,67,4,0.00813,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,297,"    if (merged != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00813,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1410,"    public TypePair(JSType typeA, JSType typeB) {
",6,0,0,1,3,1,0,4,0,11,45,3,0.00813,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1411,"      this.typeA = typeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00813,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1412,"      this.typeB = typeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00813,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1413,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,464,"            joinedType = slotA.getType().getLeastSupertype(fnSlotType);
",2,0,0,2,4,0,8,0,0,11,59,11,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,644,"        left = n.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,645,"        right = n.getLastChild();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,647,"        if (left.isTypeOf()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.00741,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,655,"        leftType = getJSType(left);
",2,0,0,1,2,0,4,0,0,7,27,6,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,656,"        rightType = getJSType(right);
",2,0,0,1,2,0,4,0,0,7,29,6,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,667,"        JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,2,0,8,68,6,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,668,"        JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,2,0,8,70,6,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,670,"        TernaryValue result = TernaryValue.UNKNOWN;
",6,0,0,0,0,0,0,2,0,8,43,6,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,671,"        if (n.getType() == Token.EQ || n.getType() == Token.NE) {
",8,3,0,3,7,0,8,0,0,19,57,6,0.00741,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,685,"        if (result != TernaryValue.UNKNOWN) {
",6,1,0,1,3,0,0,0,0,7,37,6,0.00741,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,689,"        ensureTyped(t, n, BOOLEAN_TYPE);
",0,0,0,1,2,0,8,0,0,8,32,7,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,690,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00741,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,136,"        if (operatorToken == Token.CASE) {
",6,1,0,1,3,0,0,0,0,7,34,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,144,"        Node typeOfNode = null;
",2,0,0,0,0,0,0,2,0,4,23,5,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,145,"        Node stringNode = null;
",2,0,0,0,0,0,0,2,0,4,23,5,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,146,"        if (left.isTypeOf() && right.isString()) {
",0,1,0,3,7,0,8,0,0,9,42,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,154,"        if (typeOfNode != null && stringNode != null) {
",4,3,0,1,3,0,0,0,0,7,47,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,413,"    boolean shouldRefineLeft =
",2,0,0,0,0,0,0,0,0,2,26,5,0.00709,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,415,"    boolean shouldRefineRight =
",2,0,0,0,0,0,0,0,0,2,27,5,0.00709,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,417,"    if (shouldRefineLeft || shouldRefineRight) {
",4,1,0,1,3,0,0,0,0,5,44,4,0.00709,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,899,"        return this == that;
",2,1,0,0,0,1,0,0,0,3,20,8,0.00667,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,457,"          StaticSlot<JSType> fnSlot
",2,0,0,0,0,0,0,4,0,6,25,9,0.00613,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,459,"          JSType fnSlotType = fnSlot == null ? null : fnSlot.getType();
",4,1,0,1,2,0,4,2,0,11,61,9,0.00613,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,460,"          if (fnSlotType == null) {
",2,1,0,1,3,0,0,0,0,3,25,9,0.00613,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,466,"        } else if (slotA == null || slotA.getType() == null) {
",2,3,0,2,6,0,4,0,0,9,54,8,0.00613,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,898,"      if (that.isConstructor()) {
",0,0,0,2,5,0,4,0,0,4,27,7,0.00613,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,577,"    return extendedInterfaces.size();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00559,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1769,"      for (ObjectType extInterface : functionType.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,70,7,0.00559,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1779,"      if (functionType.getExtendedInterfacesCount() > 1) {
",0,1,0,2,5,0,4,0,0,5,52,7,0.00559,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,125,1368,"      return ImmutableList.of();
",0,0,0,1,2,1,4,0,0,4,26,7,0.00546,0,1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,688,"        typeRegistry.declareType(fnName, fnType.getInstanceType());
",0,0,0,2,4,0,10,0,0,10,59,10,0.00535,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,125,1510,"    return FunctionType.forInterface(this, name, source,
",0,0,0,0,1,1,8,0,0,8,52,5,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,125,1367,"    if (info == null || info.extendedInterfaces == null) {
",6,3,0,1,3,0,0,0,0,9,54,4,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,164,"    super(registry, name,
",4,0,0,0,1,0,0,0,0,4,21,4,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,167,"    setPrettyPrint(true);
",0,0,0,1,2,0,2,0,0,3,21,5,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,169,"    Preconditions.checkArgument(source == null ||
",2,2,0,0,1,0,4,0,0,8,45,5,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,171,"    Preconditions.checkArgument(name != null);
",2,1,0,1,2,0,4,0,0,7,42,5,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,172,"    this.source = source;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,173,"    this.call = new ArrowType(registry, new Node(Token.PARAM_LIST), null);
",8,0,0,2,4,0,0,4,0,15,70,4,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,174,"    this.kind = Kind.INTERFACE;
",6,0,0,0,0,0,0,0,0,7,27,4,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,175,"    this.typeOfThis = new InstanceObjectType(registry, this);
",4,0,0,1,2,0,0,2,0,7,57,4,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,176,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,182,"    return new FunctionType(registry, name, source, typeParameters);
",8,0,0,1,2,1,0,2,0,10,64,5,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,466,"        for (ObjectType interfaceType : getExtendedInterfaces()) {
",2,0,0,2,5,0,2,2,0,6,58,8,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,582,"    if (isInterface()) {
",0,0,0,2,5,0,2,0,0,2,20,5,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,583,"      this.extendedInterfaces = ImmutableList.copyOf(extendedInterfaces);
",2,0,0,1,2,0,6,0,0,9,67,6,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,584,"      for (ObjectType extendedInterface : this.extendedInterfaces) {
",4,0,0,1,3,0,0,2,0,6,62,6,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,591,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00529,0,1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,404,"        extendedInterfaces = Lists.newArrayList();
",2,0,0,1,2,0,4,0,0,7,42,8,0.00529,0,0
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,405,"        for (JSTypeExpression t : info.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,57,8,0.00529,0,0
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,685,"      fnType = typeRegistry.createInterfaceType(
",2,0,0,0,1,0,4,0,0,7,42,7,0.00529,0,0
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,687,"      if (getScopeDeclaredIn().isGlobal() && !fnName.isEmpty()) {
",0,1,0,4,9,0,8,0,0,10,59,7,0.00529,0,1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,690,"      maybeSetBaseType(fnType);
",0,0,0,1,2,0,4,0,0,4,25,8,0.00529,0,0
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,708,"      fnType.setExtendedInterfaces(extendedInterfaces);
",0,0,0,1,2,0,6,0,0,6,49,7,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,125,55,"    this(registry, constructor, false);
",4,0,0,1,2,0,0,0,0,5,35,4,0.00529,0,0
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,125,56,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00529,0,1
defect4j,closure,com/google/javascript/rhino/Node,125,2399,"    return this.getType() == Token.TYPEOF;
",4,1,0,1,2,1,2,0,0,7,38,4,0.00505,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,125,407,"    setFlag(value, MASK_INTERFACE);
",0,0,0,1,2,0,6,0,0,6,31,5,0.00481,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,125,408,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00481,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,125,371,"          if (!jsdocBuilder.recordInterface()) {
",0,0,0,2,5,0,4,0,0,5,38,7,0.00481,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,125,380,"          return eatTokensUntilEOL();
",0,0,0,1,2,1,2,0,0,2,27,8,0.00481,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,125,887,"    if (hasAnySingletonTypeTags() ||
",0,1,0,1,3,0,2,0,0,3,32,4,0.00481,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,125,892,"    currentInfo.setInterface(true);
",0,0,0,1,2,0,4,0,0,5,31,5,0.00481,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,125,893,"    populated = true;
",2,0,0,0,0,0,0,0,0,4,17,4,0.00481,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,125,894,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00481,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,363,"      createEdge(node, Branch.ON_FALSE,
",4,0,0,0,1,0,4,0,0,8,33,7,0.00463,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,722,"        return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,6,0.00463,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,289,"                conditionFlowScope =
",2,0,0,0,0,0,0,0,0,3,20,13,0.00422,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,288,"              if (conditionFlowScope == null) {
",2,1,0,1,3,0,0,0,0,3,33,11,0.00388,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,292,"              newScope =
",2,0,0,0,0,0,0,0,0,3,10,11,0.00388,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,250,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00373,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,246,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,298,"        handleIf(n);
",0,0,0,1,2,0,4,0,0,4,12,6,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,299,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,358,"    Node thenBlock = node.getFirstChild().getNext();
",2,0,0,2,4,0,6,2,0,10,48,4,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,359,"    Node elseBlock = thenBlock.getNext();
",2,0,0,1,2,0,4,2,0,8,37,4,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,360,"    createEdge(node, Branch.ON_TRUE, computeFallThrough(thenBlock));
",4,0,0,2,4,0,8,0,0,12,64,5,0.00361,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,362,"    if (elseBlock == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,368,"    connectToPossibleExceptionHandler(
",0,0,0,0,1,0,2,0,0,2,34,5,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,370,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00361,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,258,"            if (condition.isAnd() ||
",0,1,0,1,3,0,4,0,0,5,24,9,0.00358,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,418,"        scope = traverseChildren(n, scope);
",2,0,0,1,2,0,6,0,0,9,35,5,0.00350,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,419,"        n.setJSType(getNativeType(BOOLEAN_TYPE));
",0,0,0,2,4,0,8,0,0,8,41,6,0.00350,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,420,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00350,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,211,"          if (NodeUtil.isForIn(source)) {
",0,0,0,2,5,0,6,0,0,6,31,8,0.00348,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,243,"          if (condition == null) {
",2,1,0,1,3,0,0,0,0,3,24,7,0.00348,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,244,"            condition = NodeUtil.getConditionExpression(source);
",2,0,0,1,2,0,6,0,0,9,52,9,0.00348,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,245,"            if (condition == null && source.isCase()) {
",2,2,0,2,5,0,4,0,0,8,43,9,0.00348,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,257,"          if (condition != null) {
",2,1,0,1,3,0,0,0,0,3,24,7,0.00348,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,260,"          return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,7,0.00326,0,1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,161,"        scope.inferSlotType(node.getString(), type);
",0,0,0,2,4,0,10,0,0,10,44,6,0.00323,0,0
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,162,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,125,1734,"        return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,6,0.00310,0,1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,159,"    switch (node.getType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.00266,0,1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,181,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00266,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,944,"    return getGreatestSubtype(this, that);
",0,0,0,1,2,1,4,0,0,4,38,5,0.00261,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,952,"    if (thisType.isFunctionType() && thatType.isFunctionType()) {
",0,1,0,3,7,0,8,0,0,9,61,4,0.00261,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,125,56,"public enum TernaryValue {
",2,0,0,0,1,1,0,0,0,3,26,1,0.00245,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,125,60,"  FALSE {
",2,0,0,0,1,0,0,0,0,2,7,2,0.00245,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,125,95,"  TRUE {
",2,0,0,0,1,0,0,0,0,2,6,2,0.00245,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,125,131,"  UNKNOWN {
",2,0,0,0,1,0,0,0,0,2,9,2,0.00245,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,125,56,"public enum TernaryValue {
",2,0,0,0,1,1,0,0,0,3,26,1,0.00245,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,125,60,"  FALSE {
",2,0,0,0,1,0,0,0,0,2,7,2,0.00245,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,125,95,"  TRUE {
",2,0,0,0,1,0,0,0,0,2,6,2,0.00245,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,125,131,"  UNKNOWN {
",2,0,0,0,1,0,0,0,0,2,9,2,0.00245,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,125,1731,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00242,0,1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,124,"          JSType nameVarType = nameVar.getType();
",2,0,0,1,2,0,4,2,0,8,39,7,0.00242,0,0
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,125,"          if (nameVarType == null) {
",2,1,0,1,3,0,0,0,0,3,26,7,0.00242,0,1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,128,"          return nameVarType;
",2,0,0,0,0,1,0,0,0,2,19,7,0.00242,0,1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,122,"        StaticSlot<JSType> nameVar = scope.getSlot(node.getString());
",2,0,0,2,4,0,8,4,0,14,61,5,0.00238,0,0
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,123,"        if (nameVar != null) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.00238,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,693,"          Var maybeOuterVar = syntacticScope.getParent().getVar(varName);
",2,0,0,2,4,0,8,2,0,12,63,10,0.00201,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,694,"          if (var == maybeOuterVar &&
",4,2,0,0,1,0,0,0,0,6,27,10,0.00201,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1662,"        visitParameterList(t, n, fnType);
",0,0,0,1,2,0,8,0,0,8,33,9,0.00200,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1663,"        ensureTyped(t, n, fnType.getInstanceType());
",0,0,0,2,4,0,10,0,0,10,44,9,0.00200,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,168,"    switch (operatorToken) {
",2,0,0,1,3,0,0,0,0,2,24,4,0.00199,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1660,"      FunctionType fnType = type.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,49,6,0.00198,0,0
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,125,848,"      return scope.isGlobal() || !type.isReturnTypeInferred();
",0,1,0,2,4,1,8,0,0,10,56,5,0.00195,0,1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,125,120,"    switch (node.getType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.00192,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,125,844,"      if (lValue != null &&
",2,2,0,0,1,0,0,0,0,4,21,5,0.00189,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,591,"        visitNew(t, n);
",0,0,0,1,2,0,6,0,0,6,15,6,0.00186,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1657,"    Node constructor = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,37,4,0.00186,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1658,"    JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
",2,0,0,2,4,0,6,2,0,10,68,4,0.00186,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1659,"    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
",0,1,0,4,9,0,12,0,0,13,73,4,0.00186,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,127,"    int operatorToken = condition.getType();
",2,0,0,1,2,0,4,0,0,6,40,5,0.00186,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,128,"    switch (operatorToken) {
",2,0,0,1,3,0,0,0,0,2,24,4,0.00186,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,923,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.00180,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,484,"          symbols.put(name, new SimpleSlot(name, joinedType, true));
",4,0,0,2,4,0,6,2,0,13,58,10,0.00180,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,350,"      if (!slots.containsKey(slot.getName())) {
",0,0,0,3,7,0,8,0,0,9,41,6,0.00178,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,351,"        slots.put(slot.getName(), slot);
",0,0,0,2,4,0,10,0,0,10,32,9,0.00178,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,452,"        StaticSlot<JSType> slotA = slotsA.get(name);
",2,0,0,1,2,0,6,4,0,12,44,7,0.00178,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,453,"        StaticSlot<JSType> slotB = slotsB.get(name);
",2,0,0,1,2,0,6,4,0,12,44,7,0.00178,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,455,"        JSType joinedType = null;
",2,0,0,0,0,0,0,2,0,4,25,7,0.00178,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,456,"        if (slotB == null || slotB.getType() == null) {
",2,3,0,2,5,0,4,0,0,9,47,7,0.00178,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,483,"        if (joinedType != null) {
",2,1,0,1,3,0,0,0,0,3,25,7,0.00178,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,486,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00178,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,254,"      return new LinkedFlowScope(new FlatFlowScopeCache(linkedA, linkedB));
",4,0,0,2,4,1,0,4,0,8,69,6,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,93,"    return getFunctionScope().isBottom();
",0,0,0,2,4,1,4,0,0,4,37,5,0.00173,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,347,"    Map<String, StaticSlot<JSType>> slots = Maps.newHashMap();
",2,0,0,1,2,0,4,8,0,14,58,4,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,348,"    for (LinkedFlowSlot slot = lastSlot;
",4,0,0,0,1,0,0,2,0,6,36,5,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,349,"         slot != null; slot = slot.parent) {
",8,1,0,0,2,0,0,0,0,10,35,4,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,355,"    for (Map.Entry<String, StaticSlot<JSType>> symbolEntry : cache.symbols.entrySet()) {
",10,0,0,2,5,0,2,6,0,18,84,4,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,361,"    return slots;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00173,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,424,"        LinkedFlowScope joinedScopeB) {
",2,0,0,0,2,0,0,2,0,4,31,4,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,425,"      linkedEquivalent = null;
",2,0,0,0,0,0,0,0,0,3,24,5,0.00173,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,429,"      functionScope = joinedScopeA.flowsFromBottom() ?
",2,0,0,1,2,0,4,0,0,7,48,5,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,432,"      Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots();
",2,0,0,1,2,0,4,8,0,14,69,5,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,433,"      Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots();
",2,0,0,1,2,0,4,8,0,14,69,5,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,435,"      symbols = slotsA;
",4,0,0,0,0,0,0,0,0,5,17,5,0.00173,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,448,"      Set<String> symbolNames = Sets.newHashSet(symbols.keySet());
",2,0,0,2,4,0,8,4,0,14,60,5,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,449,"      symbolNames.addAll(slotsB.keySet());
",0,0,0,2,4,0,8,0,0,8,36,6,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,451,"      for (String name : symbolNames) {
",4,0,0,1,3,0,0,2,0,6,33,5,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,487,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00173,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1205,"        FunctionType ct = constructorType.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,56,8,0.00173,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1206,"        if (ct == null && constructorType instanceof FunctionType) {
",4,2,0,1,3,0,0,2,0,8,60,8,0.00173,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1212,"        if (ct != null && ct.isConstructor()) {
",2,2,0,2,5,0,4,0,0,8,39,8,0.00173,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1201,"      constructorType = constructorType.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,0,0,7,65,6,0.00171,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1202,"      if (constructorType.isUnknownType()) {
",0,0,0,2,5,0,4,0,0,4,38,7,0.00171,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,342,"        scope = traverseNew(n, scope);
",2,0,0,1,2,0,6,0,0,9,30,5,0.00171,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,343,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00171,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1195,"    scope = traverseChildren(n, scope);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00171,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1197,"    Node constructor = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,37,4,0.00171,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1198,"    JSType constructorType = constructor.getJSType();
",2,0,0,1,2,0,4,2,0,8,49,4,0.00171,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1199,"    JSType type = null;
",2,0,0,0,0,0,0,2,0,4,19,4,0.00171,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1200,"    if (constructorType != null) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00171,0,1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1228,"    n.setJSType(type);
",0,0,0,1,2,0,6,0,0,6,18,5,0.00171,0,0
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,1229,"    return scope;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00171,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,842,"      Node node = newNode(Token.IF);
",6,0,0,1,2,0,2,2,0,10,30,5,0.00162,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,843,"      node.addChildToBack(transform(statementNode.getCondition()));
",0,0,0,3,6,0,10,0,0,10,61,6,0.00162,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,844,"      node.addChildToBack(transformBlock(statementNode.getThenPart()));
",0,0,0,3,6,0,10,0,0,10,65,6,0.00162,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,845,"      if (statementNode.getElsePart() != null) {
",0,1,0,2,5,0,4,0,0,5,42,5,0.00162,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,848,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00162,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,125,240,"        return processIfStatement((IfStatement) node);
",2,0,0,2,4,1,2,2,0,6,46,6,0.00162,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,299,"      i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00155,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,300,"      if (!n.isOptionalArg() && !n.isVarArgs()) {
",0,1,0,3,7,0,8,0,0,11,43,6,0.00155,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,303,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00155,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,125,1689,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.00146,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,125,424,"    return isBottom;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00137,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1014,"    if (type.isNoResolvedType()) {
",0,0,0,2,5,0,4,0,0,4,30,5,0.00126,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1018,"    } else if (type.isUnionType()) {
",0,0,0,2,6,0,4,0,0,4,32,6,0.00126,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1039,"    return type;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00126,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,917,"    return getLeastSupertype(this, that);
",0,0,0,1,2,1,4,0,0,4,37,5,0.00115,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,1045,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.00113,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,125,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.00113,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,125,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.00113,0,0
defect4j,closure,com/google/javascript/rhino/Node,125,2387,"    return this.getType() == Token.THROW;
",4,1,0,1,2,1,2,0,0,7,37,4,0.00110,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,925,"    boolean areEquivalent = thisType.isEquivalentTo(thatType);
",2,0,0,1,2,0,6,0,0,8,58,5,0.00109,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,926,"    return areEquivalent ? thisType :
",4,0,0,0,0,1,0,0,0,4,33,5,0.00109,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,125,76,"    return inferred;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00108,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,913,"    if (that.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.00107,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,225,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.00107,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,226,"    if (!irNode.isBlock()) {
",0,0,0,2,5,0,4,0,0,5,24,4,0.00107,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,238,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00107,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,1334,"        return Token.NEW;
",4,0,0,0,0,1,0,0,0,4,17,6,0.00106,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,926,"      Node node = newNode(
",2,0,0,0,1,0,2,2,0,6,20,5,0.00106,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,929,"      for (AstNode child : exprNode.getArguments()) {
",2,0,0,2,5,0,4,2,0,8,47,5,0.00106,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,932,"      node.setLineno(exprNode.getLineno());
",0,0,0,2,4,0,8,0,0,8,37,6,0.00106,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,933,"      node.setCharno(position2charno(exprNode.getAbsolutePosition()));
",0,0,0,3,6,0,10,0,0,10,64,6,0.00106,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,934,"      maybeSetLengthFrom(node, exprNode);
",0,0,0,1,2,0,6,0,0,6,35,6,0.00106,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,935,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00106,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,125,248,"        return processNewExpression((NewExpression) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00106,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1646,"          validator.expectCanAssignTo(
",0,0,0,0,1,0,4,0,0,4,28,11,0.00104,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,148,"          return slot;
",2,0,0,0,0,1,0,0,0,2,12,10,0.00099,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,147,"        if (slot.getName().equals(name)) {
",0,0,0,3,7,0,8,0,0,8,34,9,0.00098,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,145,"      for (LinkedFlowSlot slot = lastSlot;
",4,0,0,0,1,0,0,2,0,6,36,7,0.00096,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,146,"           slot != null; slot = slot.parent) {
",8,1,0,0,2,0,0,0,0,10,35,6,0.00096,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,125,3073,"        return getBestJSDocInfo(parent);
",0,0,0,1,2,1,4,0,0,4,32,9,0.00094,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,125,3101,"      return parent;
",2,0,0,0,0,1,0,0,0,2,14,7,0.00092,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,247,"      LinkedFlowScope linkedA = (LinkedFlowScope) a;
",4,0,0,1,2,0,0,4,0,8,46,5,0.00091,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,248,"      LinkedFlowScope linkedB = (LinkedFlowScope) b;
",4,0,0,1,2,0,0,4,0,8,46,5,0.00091,0,0
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,249,"      linkedA.frozen = true;
",4,0,0,0,0,0,0,0,0,6,22,5,0.00091,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,250,"      linkedB.frozen = true;
",4,0,0,0,0,0,0,0,0,6,22,5,0.00091,0,1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,251,"      if (linkedA.optimize() == linkedB.optimize()) {
",0,1,0,3,7,0,8,0,0,9,47,5,0.00091,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,125,245,"          NodeTraversal.traverse(compiler, functionNode.getLastChild(),
",0,0,0,1,3,0,10,0,0,10,61,11,0.00090,0,0
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,125,1779,"      CollectProperties(JSType thisType) {
",4,0,0,1,3,0,0,2,0,6,36,4,0.00090,0,0
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,125,1780,"        this.thisType = thisType;
",4,0,0,0,0,0,0,0,0,5,25,6,0.00090,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,125,1781,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00090,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,125,1785,"        if (n.isExprResult()) {
",0,0,0,2,5,0,4,0,0,4,23,7,0.00090,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,125,1797,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00090,0,1
defect4j,closure,com/google/javascript/jscomp/JoinOp,125,42,"      } else if (size == 2) {
",2,1,0,1,4,0,0,0,0,3,23,6,0.00089,0,1
defect4j,closure,com/google/javascript/jscomp/JoinOp,125,43,"        return apply(values.get(0), values.get(1));
",0,0,0,3,6,1,10,0,0,10,43,9,0.00089,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,1017,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00088,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,296,"    int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00085,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,297,"    int min = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00085,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,298,"    for (Node n : getParameters()) {
",2,0,0,2,5,0,2,2,0,6,32,4,0.00085,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,304,"    return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00085,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,312,"    Node params = getParametersNode();
",2,0,0,1,2,0,2,2,0,6,34,4,0.00085,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,313,"    if (params != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00085,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,314,"      Node lastParam = params.getLastChild();
",2,0,0,1,2,0,4,2,0,8,39,6,0.00085,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,315,"      if (lastParam == null || !lastParam.isVarArgs()) {
",2,2,0,2,5,0,4,0,0,9,50,6,0.00085,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1862,"    Iterator<Node> arguments = call.children().iterator();
",2,0,0,2,4,0,6,4,0,12,54,4,0.00085,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1863,"    arguments.next(); // skip the function name
",0,0,0,1,2,0,4,0,0,4,43,5,0.00085,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1865,"    Iterator<Node> parameters = functionType.getParameters().iterator();
",2,0,0,2,4,0,6,4,0,12,68,4,0.00085,0,0
defect4j,closure,com/google/javascript/rhino/Node,126,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,126,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,126,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,126,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,126,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,126,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1111,"      return newNode(Token.THROW,
",4,0,0,0,1,1,2,0,0,6,27,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,264,"        return processThrowStatement((ThrowStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,132,"        validateThrow(n);
",0,0,0,1,2,0,4,0,0,4,17,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,133,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,489,"    validateNodeType(Token.THROW, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,490,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,491,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,492,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1143,"        block.setLineno(finallyBlock.getLineno());
",0,0,0,2,4,0,8,0,0,8,42,8,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1144,"        maybeSetLengthFrom(block, finallyBlock);
",0,0,0,1,2,0,6,0,0,6,40,8,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,128,"      Node tryBlock = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,6,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,129,"      tryMinimizeExits(tryBlock, exitType, labelName);
",0,0,0,1,2,0,8,0,0,8,48,7,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,130,"      Node allCatchNodes = NodeUtil.getCatchBlock(n);
",2,0,0,1,2,0,6,2,0,10,47,6,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,131,"      if (NodeUtil.hasCatchHandler(allCatchNodes)) {
",0,0,0,2,5,0,6,0,0,6,46,7,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,141,"      if (NodeUtil.hasFinally(n)) {
",0,0,0,2,5,0,6,0,0,6,29,7,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,609,"        Preconditions.checkState(childCount <= 1);
",2,1,0,1,2,0,4,0,0,7,42,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,610,"        add(""break"");
",0,0,0,1,2,0,2,0,0,3,13,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,611,"        if (childCount == 1) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,618,"        cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,619,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.80000,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.80000,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.80000,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,138,"        validateBreak(n);
",0,0,0,1,2,0,4,0,0,4,17,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,139,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,495,"    validateNodeType(Token.BREAK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.80000,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,496,"    validateMaximumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,497,"    if (n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,500,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,632,"      Node node = newNode(Token.BREAK);
",6,0,0,1,2,0,2,2,0,10,33,5,0.66667,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,633,"      if (statementNode.getBreakLabel() != null) {
",0,1,0,2,5,0,4,0,0,5,44,5,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,639,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,184,"        return processBreakStatement((BreakStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.66667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,149,"        Preconditions.checkState(first.getNext().isBlock() &&
",0,1,0,2,5,0,10,0,0,11,53,7,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,151,"        Preconditions.checkState(childCount >= 2 && childCount <= 3);
",4,3,0,1,2,0,4,0,0,11,61,7,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,153,"        add(""try"");
",0,0,0,1,2,0,2,0,0,3,11,7,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,154,"        add(first, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,35,7,0.66667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,158,"        Node catchblock = first.getNext().getFirstChild();
",2,0,0,2,4,0,6,2,0,10,50,6,0.66667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,159,"        if (catchblock != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,163,"        if (childCount == 3) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,135,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,136,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,511,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,0.66667,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,512,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,513,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,514,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,516,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,519,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,0.66667,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,520,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,0.66667,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,521,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,522,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,528,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,533,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,536,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.66667,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2789,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2790,"    return n.getChildCount() == 3;
",0,1,0,1,2,1,4,0,0,5,30,4,0.57143,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2798,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2799,"    return n.getFirstChild().getNext();
",0,0,0,2,4,1,6,0,0,6,35,5,0.57143,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2807,"    Preconditions.checkArgument(n.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2808,"    return n.hasChildren() && n.getFirstChild().isCatch();
",0,1,0,3,6,1,10,0,0,11,54,4,0.57143,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3303,"      map.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,21,7,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1117,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1119,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1120,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,0.57143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1122,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1132,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1134,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1135,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.57143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1142,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,0.57143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1147,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.57143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3334,"              Node clone = mtoc.get(n);
",2,0,0,1,2,0,6,2,0,10,25,12,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3335,"              if (n.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,48,12,0.57143,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3337,"              } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,13,0.57143,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,110,"      NodeUtil.removeChild(n.getParent(), n);
",0,0,0,2,4,0,10,0,0,10,39,7,0.50000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,111,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,7,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,112,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,285,"          return n.hasChildren()
",0,0,0,1,2,1,4,0,0,4,22,12,0.50000,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,634,"        Node labelName = transform(statementNode.getBreakLabel());
",2,0,0,2,4,0,6,2,0,10,58,7,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,636,"        labelName.setType(Token.LABEL_NAME);
",4,0,0,1,2,0,4,0,0,8,36,8,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,637,"        node.addChildToBack(labelName);
",0,0,0,1,2,0,6,0,0,6,31,8,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,612,"          if (!first.isLabelName()) {
",0,0,0,2,5,0,4,0,0,5,27,7,0.33333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,615,"          add("" "");
",0,0,0,1,2,0,2,0,0,3,9,8,0.33333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,616,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,498,"      validateLabelName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,37,7,0.33333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,1238,"    return currentContext == Context.BEFORE_DANGLING_ELSE ?
",6,1,0,0,0,1,0,0,0,7,55,5,0.28571,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,1557,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.23529,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3294,"    Preconditions.checkState(main.isEquivalentTo(clone));
",0,0,0,2,4,0,10,0,0,10,53,5,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3295,"    Map<Node, Node> mtoc = new HashMap<Node, Node>();
",2,0,0,1,2,0,0,12,0,14,49,4,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3296,"    mtoc.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,22,5,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3297,"    mtocHelper(mtoc, main, clone);
",0,0,0,1,2,0,8,0,0,8,30,5,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3298,"    return mtoc;
",2,0,0,0,0,1,0,0,0,2,12,4,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3302,"    if (main.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3305,"    Node mchild = main.getFirstChild(), cchild = clone.getFirstChild();
",4,0,0,2,4,0,8,2,0,14,67,4,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3306,"    while (mchild != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3307,"      mtocHelper(map, mchild, cchild);
",0,0,0,1,2,0,8,0,0,8,32,7,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3308,"      mchild = mchild.getNext();
",2,0,0,1,2,0,4,0,0,7,26,6,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3309,"      cchild = cchild.getNext();
",2,0,0,1,2,0,4,0,0,7,26,6,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3311,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3321,"    final Map<Node, Node> mtoc = map;
",4,0,0,0,0,1,0,6,0,11,33,4,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3322,"    final boolean checkUnchanged = verifyUnchangedNodes;
",4,0,0,0,0,1,0,0,0,5,52,4,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3323,"    Node clone = mtoc.get(main);
",2,0,0,1,2,0,6,2,0,10,28,4,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3324,"    if (main.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,51,4,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3326,"    } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,5,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3329,"    visitPreOrder(main,
",0,0,0,0,1,0,4,0,0,4,19,5,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3344,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3330,"        new Visitor() {
",0,0,0,1,3,0,0,2,0,2,15,7,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3333,"            if (n.isFunction() && mtoc.containsKey(n)) {
",0,1,0,3,7,0,10,0,0,11,44,10,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3341,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,69,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.22222,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,70,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,71,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,72,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,73,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.22222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,74,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.22222,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,1517,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.21053,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,126,534,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.21053,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,129,"    JSType templateType = getTemplateTypeInternal(key);
",2,0,0,1,2,0,4,2,0,8,51,4,0.21053,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,130,"    return (templateType == null) ?
",2,1,0,1,2,1,0,0,0,3,31,6,0.21053,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,172,"      JSType thisTemplateType = getTemplateType(templateKeys.get(i));
",2,0,0,2,4,0,8,2,0,12,63,6,0.21053,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,173,"      JSType thatTemplateType = that.getTemplateType(
",2,0,0,0,1,0,4,2,0,8,47,6,0.21053,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,175,"      if (!thisTemplateType.checkEquivalenceHelper(
",0,0,0,0,2,0,4,0,0,5,45,6,0.21053,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,796,"      valid = n.hasMoreThanOneChild();
",2,0,0,1,2,0,4,0,0,7,32,7,0.21053,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,148,"    int index = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,149,"    for (TemplateType item : templateKeys) {
",4,0,0,1,3,0,0,2,0,6,40,4,0.20000,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,151,"      if (item == key) {
",4,1,0,1,3,0,0,0,0,5,18,6,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,152,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,156,"    if (index < 0 || index >= templateValues.size()) {
",4,3,0,2,5,0,4,0,0,11,50,4,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,126,157,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,132,"        Preconditions.checkState(allCatchNodes.hasOneChild());
",0,0,0,2,4,0,8,0,0,8,54,9,0.20000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,133,"        Node catchNode = allCatchNodes.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,47,8,0.20000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,134,"        Node catchCodeBlock = catchNode.getLastChild();
",2,0,0,1,2,0,4,2,0,8,47,8,0.20000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,135,"        tryMinimizeExits(catchCodeBlock, exitType, labelName);
",0,0,0,1,2,0,8,0,0,8,54,9,0.20000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,224,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,247,"      } else if (destBlock.isEmpty()) {
",0,0,0,2,6,0,4,0,0,4,33,8,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,250,"      } else if (destBlock.isBlock()) {
",0,0,0,2,6,0,4,0,0,4,33,9,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,252,"        newDestBlock = destBlock;
",4,0,0,0,0,0,0,0,0,5,25,10,0.20000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,282,"        if (labelName == null) {
",2,1,0,1,3,0,0,0,0,3,24,8,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,450,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,451,"        add(""while("");
",0,0,0,1,3,0,2,0,0,3,14,6,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,452,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,453,"        add("")"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,454,"        addNonEmptyStatement(
",0,0,0,0,1,0,2,0,0,2,21,6,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,456,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,871,"    if (nodeToProcess.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,30,5,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,874,"      add(nodeToProcess, context);
",0,0,0,1,2,0,6,0,0,6,28,7,0.20000,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,878,"      if (nodeToProcess.isVar()) {
",0,0,0,2,5,0,4,0,0,4,28,7,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,882,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,111,"        validateWhile(n);
",0,0,0,1,2,0,4,0,0,4,17,6,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,112,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,450,"    validateNodeType(Token.WHILE, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.20000,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,451,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,452,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,453,"    validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,454,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,126,530,"    for (ObjectType current = this;
",2,0,0,0,1,0,0,2,0,4,31,5,0.19048,0,0
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,126,531,"         current != null;
",2,1,0,0,0,0,0,0,0,3,16,4,0.19048,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,126,533,"      if (current.isEquivalentTo(prototype)) {
",0,0,0,2,5,0,6,0,0,6,40,7,0.19048,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,126,532,"         current = current.getImplicitPrototype()) {
",2,0,0,1,4,0,4,0,0,7,43,4,0.19048,0,0
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,126,537,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.19048,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,190,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.19048,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,1555,"        if (!n.isEquivalentTo(
",0,0,0,0,2,0,4,0,0,5,22,8,0.18182,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,1554,"           n = n.next, n2 = n2.next) {
",12,0,0,0,2,0,0,0,0,14,27,6,0.18182,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,126,248,"              return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.18182,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,714,"      if (loopNode.isForEach()) {
",0,0,0,2,5,0,4,0,0,4,27,6,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,723,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1225,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,222,"          return processForInLoop((ForInLoop) node);
",2,0,0,2,4,1,2,2,0,6,42,8,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,280,"        return processWhileLoop((WhileLoop) node);
",2,0,0,2,4,1,2,2,0,6,42,6,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,51,"        tryMinimizeExits(
",0,0,0,0,1,0,2,0,0,2,17,6,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,53,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,280,"        return !n.hasChildren();
",0,0,0,1,2,1,4,0,0,5,24,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,428,"          Preconditions.checkState(childCount == 3);
",2,1,0,1,2,0,4,0,0,7,42,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,429,"          add(""for("");
",0,0,0,1,3,0,2,0,0,3,12,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,430,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,431,"          add(""in"");
",0,0,0,1,2,0,2,0,0,3,10,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,432,"          add(first.getNext());
",0,0,0,2,4,0,6,0,0,6,21,8,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,433,"          add("")"");
",0,0,0,1,3,0,2,0,0,3,9,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,434,"          addNonEmptyStatement(
",0,0,0,0,1,0,2,0,0,2,21,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,437,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,828,"    Node nodeToProcess = n;
",4,0,0,0,0,0,0,2,0,6,23,4,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,830,"    if (!allowNonBlockChild && !n.isBlock()) {
",2,1,0,2,5,0,4,0,0,9,42,4,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,836,"    if (n.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,411,"      validateChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,25,7,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,412,"      validateVarOrAssignmentTarget(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,49,7,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,413,"      validateExpression(n.getChildAtIndex(1));
",0,0,0,2,4,0,6,0,0,6,41,7,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,433,"    if (n.isVar()) {
",0,0,0,2,5,0,4,0,0,4,16,5,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,438,"      validateAssignmentTarget(n);
",0,0,0,1,2,0,4,0,0,4,28,7,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,440,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,795,"    } else if (i == 2) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1044,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.16000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.16000,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.16000,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2760,"    visitor.visit(node);
",0,0,0,1,2,0,6,0,0,6,20,5,0.15385,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2762,"    if (traverseChildrenPred.apply(node)) {
",0,0,0,2,5,0,6,0,0,6,39,5,0.15385,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2763,"      for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,65,6,0.15385,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2764,"        visitPreOrder(c, visitor, traverseChildrenPred);
",0,0,0,1,2,0,8,0,0,8,48,9,0.15385,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2767,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.15385,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,813,"      valid = n.getChildCount() <= i;
",4,1,0,1,2,0,4,0,0,10,31,6,0.15385,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,179,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,6,0.14815,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,180,"        add(""throw"");
",0,0,0,1,2,0,2,0,0,3,13,6,0.14815,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,181,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,0.14815,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,185,"        cc.endStatement(true);
",0,0,0,1,2,0,4,0,0,5,22,6,0.14815,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,186,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.14815,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,1982,"    putBooleanProp(EMPTY_BLOCK, val);
",0,0,0,1,2,0,6,0,0,6,33,5,0.14286,0,0
defect4j,closure,com/google/javascript/rhino/Node,126,1983,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,2315,"    return this.getType() == Token.LABEL_NAME;
",4,1,0,1,2,1,2,0,0,7,42,4,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,228,"        irNode.setType(Token.BLOCK);
",4,0,0,1,2,0,4,0,0,8,28,9,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,229,"        irNode.setWasEmptyNode(true);
",0,0,0,1,2,0,4,0,0,5,29,9,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,845,"        node.addChildToBack(transformBlock(statementNode.getElsePart()));
",0,0,0,3,6,0,10,0,0,10,65,8,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,869,"      return newStringNode(Token.LABEL_NAME, labelNode.getName());
",4,0,0,2,4,1,6,0,0,10,60,6,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,874,"      Node node = newNode(Token.LABEL);
",6,0,0,1,2,0,2,2,0,10,33,5,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,875,"      Node prev = null;
",2,0,0,0,0,0,0,2,0,4,17,5,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,876,"      Node cur = node;
",4,0,0,0,0,0,0,2,0,6,16,5,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,877,"      for (Label label : statementNode.getLabels()) {
",2,0,0,2,5,0,4,2,0,8,47,5,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,878,"        if (prev != null) {
",2,1,0,1,3,0,0,0,0,3,19,7,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,881,"        cur.addChildToBack(transform(label));
",0,0,0,2,4,0,8,0,0,8,37,8,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,883,"        cur.setLineno(label.getLineno());
",0,0,0,2,4,0,8,0,0,8,33,8,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,884,"        maybeSetLengthFrom(cur, label);
",0,0,0,1,2,0,6,0,0,6,31,8,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,886,"        int clauseAbsolutePosition =
",2,0,0,0,0,0,0,0,0,2,28,8,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,888,"        cur.setCharno(clauseAbsolutePosition);
",0,0,0,1,2,0,6,0,0,6,38,8,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,890,"        prev = cur;
",4,0,0,0,0,0,0,0,0,5,11,7,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,891,"        cur = newNode(Token.LABEL);
",6,0,0,1,2,0,2,0,0,9,27,7,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,892,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,893,"      prev.addChildToBack(transform(statementNode.getStatement()));
",0,0,0,3,6,0,10,0,0,10,61,6,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,894,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,206,"        } else  if (node instanceof LabeledStatement) {
",2,0,0,1,4,0,0,2,0,4,47,7,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,207,"          return processLabeledStatement((LabeledStatement) node);
",2,0,0,2,4,1,2,2,0,6,56,9,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,242,"        return processLabel((Label) node);
",2,0,0,2,4,1,2,2,0,6,34,6,0.14286,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,278,"      if (type == Token.RETURN) {
",6,1,0,1,3,0,0,0,0,7,27,6,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,160,"          add(catchblock);
",0,0,0,1,2,0,4,0,0,4,16,9,0.14286,0,0
defect4j,closure,com/google/javascript/rhino/Node,127,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,127,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,127,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,127,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,127,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,127,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,841,"          if (lastJump == cfgNode) {
",4,1,0,1,3,0,0,0,0,5,26,10,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,842,"            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());
",4,0,0,2,4,0,8,0,0,12,58,13,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,854,"        lastJump = handler;
",4,0,0,0,0,0,0,0,0,5,19,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,855,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,164,"          add(""finally"");
",0,0,0,1,2,0,2,0,0,3,15,9,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,165,"          add(last, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,34,9,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,529,"      validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,530,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1136,"        node.addChildToBack(transformBlock(finallyBlock));
",0,0,0,2,4,0,8,0,0,8,50,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1143,"        block.setLineno(finallyBlock.getLineno());
",0,0,0,2,4,0,8,0,0,8,42,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1144,"        maybeSetLengthFrom(block, finallyBlock);
",0,0,0,1,2,0,6,0,0,6,40,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,491,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,766,"            for (Node finallyNode : cfa.finallyMap.get(parent)) {
",6,0,0,2,5,0,4,2,0,12,53,11,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,350,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,764,"        } else if (parent.getLastChild() == node){
",2,1,0,2,6,0,4,0,0,7,42,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,765,"          if (cfa != null) {
",2,1,0,1,3,0,0,0,0,3,18,9,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,770,"          return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,10,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,806,"        return computeFallThrough(n.getLastChild());
",0,0,0,2,4,1,6,0,0,6,44,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,837,"        Preconditions.checkState(handler.isTry());
",0,0,0,2,4,0,8,0,0,8,42,9,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,838,"        Node catchBlock = NodeUtil.getCatchBlock(handler);
",2,0,0,1,2,0,6,2,0,10,50,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,840,"        if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.
",0,0,0,2,5,0,6,0,0,7,71,8,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,2315,"    return this.getType() == Token.LABEL_NAME;
",4,1,0,1,2,1,2,0,0,7,42,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,149,"        Preconditions.checkState(first.getNext().isBlock() &&
",0,1,0,2,5,0,10,0,0,11,53,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,151,"        Preconditions.checkState(childCount >= 2 && childCount <= 3);
",4,3,0,1,2,0,4,0,0,11,61,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,153,"        add(""try"");
",0,0,0,1,2,0,2,0,0,3,11,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,154,"        add(first, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,35,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,158,"        Node catchblock = first.getNext().getFirstChild();
",2,0,0,2,4,0,6,2,0,10,50,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,159,"        if (catchblock != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,163,"        if (childCount == 3) {
",2,1,0,1,3,0,0,0,0,3,22,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,206,"        Preconditions.checkState(!n.getString().isEmpty());
",0,0,0,3,6,0,10,0,0,11,51,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,207,"        addIdentifier(n.getString());
",0,0,0,2,4,0,6,0,0,6,29,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,208,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,735,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,736,"        if (!first.isLabelName()) {
",0,0,0,2,5,0,4,0,0,5,27,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,739,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,740,"        add("":"");
",0,0,0,1,2,0,2,0,0,3,9,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,741,"        addNonEmptyStatement(
",0,0,0,0,1,0,2,0,0,2,21,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,743,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,96,"        validateLabel(n);
",0,0,0,1,2,0,4,0,0,4,17,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,97,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,314,"    validateNodeType(Token.LABEL, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,315,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,316,"    validateLabelName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,37,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,317,"    validateStatement(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,36,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,318,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,321,"    validateNodeType(Token.LABEL_NAME, n);
",4,0,0,1,2,0,4,0,0,8,38,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,322,"    validateNonEmptyString(n);
",0,0,0,1,2,0,4,0,0,4,26,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,323,"    validateChildCount(n, 0);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,324,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,869,"      return newStringNode(Token.LABEL_NAME, labelNode.getName());
",4,0,0,2,4,1,6,0,0,10,60,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,874,"      Node node = newNode(Token.LABEL);
",6,0,0,1,2,0,2,2,0,10,33,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,875,"      Node prev = null;
",2,0,0,0,0,0,0,2,0,4,17,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,876,"      Node cur = node;
",4,0,0,0,0,0,0,2,0,6,16,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,877,"      for (Label label : statementNode.getLabels()) {
",2,0,0,2,5,0,4,2,0,8,47,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,878,"        if (prev != null) {
",2,1,0,1,3,0,0,0,0,3,19,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,881,"        cur.addChildToBack(transform(label));
",0,0,0,2,4,0,8,0,0,8,37,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,883,"        cur.setLineno(label.getLineno());
",0,0,0,2,4,0,8,0,0,8,33,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,884,"        maybeSetLengthFrom(cur, label);
",0,0,0,1,2,0,6,0,0,6,31,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,886,"        int clauseAbsolutePosition =
",2,0,0,0,0,0,0,0,0,2,28,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,888,"        cur.setCharno(clauseAbsolutePosition);
",0,0,0,1,2,0,6,0,0,6,38,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,890,"        prev = cur;
",4,0,0,0,0,0,0,0,0,5,11,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,891,"        cur = newNode(Token.LABEL);
",6,0,0,1,2,0,2,0,0,9,27,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,892,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,893,"      prev.addChildToBack(transform(statementNode.getStatement()));
",0,0,0,3,6,0,10,0,0,10,61,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,894,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,206,"        } else  if (node instanceof LabeledStatement) {
",2,0,0,1,4,0,0,2,0,4,47,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,207,"          return processLabeledStatement((LabeledStatement) node);
",2,0,0,2,4,1,2,2,0,6,56,9,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,242,"        return processLabel((Label) node);
",2,0,0,2,4,1,2,2,0,6,34,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,135,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,136,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,511,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,512,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,513,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,514,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,516,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,519,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,520,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,521,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,522,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,528,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,533,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,536,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,757,"        } else if (NodeUtil.getCatchBlock(parent) == node){
",2,1,0,2,6,0,6,0,0,9,51,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2798,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2799,"    return n.getFirstChild().getNext();
",0,0,0,2,4,1,6,0,0,6,35,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2807,"    Preconditions.checkArgument(n.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2808,"    return n.hasChildren() && n.getFirstChild().isCatch();
",0,1,0,3,6,1,10,0,0,11,54,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,171,"              removeNode(n);
",0,0,0,1,2,0,4,0,0,4,14,11,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1117,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1119,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1120,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1122,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1132,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1134,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1135,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1142,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1147,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,230,"        exceptionHandler.push(n);
",0,0,0,1,2,0,6,0,0,6,25,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,231,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,285,"          if (n == parent.getFirstChild().getNext()) {
",2,1,0,3,7,0,6,0,0,9,44,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,286,"            Preconditions.checkState(exceptionHandler.peek() == parent);
",2,1,0,2,4,0,8,0,0,11,60,10,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,287,"            exceptionHandler.pop();
",0,0,0,1,2,0,4,0,0,4,23,10,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,332,"        handleTry(n);
",0,0,0,1,2,0,4,0,0,4,13,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,333,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,544,"    createEdge(node, Branch.UNCOND, node.getFirstChild());
",4,0,0,2,4,0,8,0,0,12,54,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,545,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,750,"        if (parent.getFirstChild() == node) {
",2,1,0,2,5,0,4,0,0,7,37,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,898,"    while (target.isLabel()) {
",0,0,0,2,5,0,4,0,0,4,26,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,899,"      if (target.getFirstChild().getString().equals(label)) {
",0,0,0,4,9,0,10,0,0,10,55,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,900,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,570,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,571,"        cc.addConstant(""null"");
",0,0,0,1,2,0,4,0,0,5,23,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,572,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,132,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,161,"          List<DiGraphEdge<Node, Branch>> outEdges = gNode.getOutEdges();
",2,0,0,1,2,0,4,8,0,14,63,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,162,"          if (outEdges.size() == 1 &&
",0,2,0,1,3,0,4,0,0,6,27,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,166,"            Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,9,1,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,168,"            Node fallThrough = computeFollowing(n);
",2,0,0,1,2,0,4,2,0,8,39,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,169,"            Node nextCfgNode = outEdges.get(0).getDestination().getValue();
",2,0,0,3,6,0,8,2,0,12,63,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,170,"            if (nextCfgNode == fallThrough) {
",4,1,0,1,3,0,0,0,0,5,33,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,179,"      Node next = ControlFlowAnalysis.computeFollowNode(n);
",2,0,0,1,2,0,6,2,0,10,53,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,180,"      while (next != null && next.isBlock()) {
",2,2,0,2,5,0,4,0,0,8,40,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,187,"      return next;
",2,0,0,0,0,1,0,0,0,2,12,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,515,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,612,"          if (!first.isLabelName()) {
",0,0,0,2,5,0,4,0,0,5,27,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,615,"          add("" "");
",0,0,0,1,2,0,2,0,0,3,9,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,616,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,555,"      label = node.getFirstChild().getString();
",2,0,0,2,4,0,6,0,0,9,41,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,268,"          return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3334,"              Node clone = mtoc.get(n);
",2,0,0,1,2,0,6,2,0,10,25,12,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3335,"              if (n.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,48,12,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3337,"              } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,13,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,895,"    if (label == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3303,"      map.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,21,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,867,"        context = Context.PRESERVE_BLOCK;
",6,0,0,0,0,0,0,0,0,7,33,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,498,"      validateLabelName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,37,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,634,"        Node labelName = transform(statementNode.getBreakLabel());
",2,0,0,2,4,0,6,2,0,10,58,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,636,"        labelName.setType(Token.LABEL_NAME);
",4,0,0,1,2,0,4,0,0,8,36,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,637,"        node.addChildToBack(labelName);
",0,0,0,1,2,0,6,0,0,6,31,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,752,"            return computeFallThrough(parent.getLastChild());
",0,0,0,2,4,1,6,0,0,6,49,10,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,904,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,796,"      valid = n.hasMoreThanOneChild();
",2,0,0,1,2,0,4,0,0,7,32,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,871,"    if (nodeToProcess.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,30,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,874,"      add(nodeToProcess, context);
",0,0,0,1,2,0,6,0,0,6,28,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,878,"      if (nodeToProcess.isVar()) {
",0,0,0,2,5,0,4,0,0,4,28,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,882,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1351,"        return Token.NULL;
",4,0,0,0,0,1,0,0,0,4,18,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,595,"      createEdge(lastJump, Branch.UNCOND, computeFollowNode(cur, this));
",4,0,0,2,4,0,8,0,0,12,66,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,1238,"    return currentContext == Context.BEFORE_DANGLING_ELSE ?
",6,1,0,0,0,1,0,0,0,7,55,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,609,"        Preconditions.checkState(childCount <= 1);
",2,1,0,1,2,0,4,0,0,7,42,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,610,"        add(""break"");
",0,0,0,1,2,0,2,0,0,3,13,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,611,"        if (childCount == 1) {
",2,1,0,1,3,0,0,0,0,3,22,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,618,"        cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,619,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,795,"    } else if (i == 2) {
",2,1,0,1,4,0,0,0,0,3,20,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2789,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2790,"    return n.getChildCount() == 3;
",0,1,0,1,2,1,4,0,0,5,30,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,594,"    if (lastJump == node) {
",4,1,0,1,3,0,0,0,0,5,23,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,599,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,751,"          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.
",0,0,0,2,5,0,6,0,0,6,61,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,828,"    Node nodeToProcess = n;
",4,0,0,0,0,0,0,2,0,6,23,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,830,"    if (!allowNonBlockChild && !n.isBlock()) {
",2,1,0,2,5,0,4,0,0,9,42,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,836,"    if (n.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,127,2013,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,813,"      valid = n.getChildCount() <= i;
",4,1,0,1,2,0,4,0,0,10,31,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,138,"        validateBreak(n);
",0,0,0,1,2,0,4,0,0,4,17,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,139,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,495,"    validateNodeType(Token.BREAK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,496,"    validateMaximumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,497,"    if (n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,500,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,338,"        handleBreak(n);
",0,0,0,1,2,0,4,0,0,4,15,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,339,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,552,"    String label = null;
",2,0,0,0,0,0,0,2,0,4,20,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,554,"    if (node.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,25,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,558,"    Node previous = null;
",2,0,0,0,0,0,0,2,0,4,21,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,560,"    Node parent = node.getParent();
",2,0,0,1,2,0,4,2,0,8,31,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,570,"    for (cur = node, lastJump = node;
",8,0,0,0,1,0,0,0,0,10,33,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,571,"        !isBreakTarget(cur, label);
",0,0,0,1,2,0,6,0,0,7,27,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,573,"      if (cur.isTry() && NodeUtil.hasFinally(cur)
",0,1,0,2,5,0,10,0,0,11,43,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,583,"      if (parent == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,592,"      previous = cur;
",4,0,0,0,0,0,0,0,0,5,15,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,572,"        cur = parent, parent = parent.getParent()) {
",6,0,0,1,4,0,4,0,0,12,44,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2238,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,1557,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2236,"    Collection<Node> vars = getVarsDeclaredInBranch(branch);
",2,0,0,1,2,0,4,4,0,10,56,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2237,"    if (vars.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,21,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2523,"    VarCollector collector = new VarCollector();
",2,0,0,1,2,0,0,4,0,6,44,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2524,"    visitPreOrder(
",0,0,0,0,1,0,2,0,0,2,14,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2528,"    return collector.vars.values();
",4,0,0,1,2,1,2,0,0,6,31,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3294,"    Preconditions.checkState(main.isEquivalentTo(clone));
",0,0,0,2,4,0,10,0,0,10,53,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3295,"    Map<Node, Node> mtoc = new HashMap<Node, Node>();
",2,0,0,1,2,0,0,12,0,14,49,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3296,"    mtoc.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,22,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3297,"    mtocHelper(mtoc, main, clone);
",0,0,0,1,2,0,8,0,0,8,30,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3298,"    return mtoc;
",2,0,0,0,0,1,0,0,0,2,12,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3302,"    if (main.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,24,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3305,"    Node mchild = main.getFirstChild(), cchild = clone.getFirstChild();
",4,0,0,2,4,0,8,2,0,14,67,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3306,"    while (mchild != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3307,"      mtocHelper(map, mchild, cchild);
",0,0,0,1,2,0,8,0,0,8,32,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3308,"      mchild = mchild.getNext();
",2,0,0,1,2,0,4,0,0,7,26,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3309,"      cchild = cchild.getNext();
",2,0,0,1,2,0,4,0,0,7,26,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3311,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3321,"    final Map<Node, Node> mtoc = map;
",4,0,0,0,0,1,0,6,0,11,33,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3322,"    final boolean checkUnchanged = verifyUnchangedNodes;
",4,0,0,0,0,1,0,0,0,5,52,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3323,"    Node clone = mtoc.get(main);
",2,0,0,1,2,0,6,2,0,10,28,4,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3324,"    if (main.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,51,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3326,"    } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3329,"    visitPreOrder(main,
",0,0,0,0,1,0,4,0,0,4,19,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3344,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,1517,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2502,"  private static class VarCollector implements Visitor {
",2,0,0,0,1,2,0,2,0,6,54,2,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2503,"    final Map<String, Node> vars = Maps.newLinkedHashMap();
",2,0,0,1,2,1,4,6,0,13,55,3,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2507,"      if (n.isName()) {
",0,0,0,2,5,0,4,0,0,4,17,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2516,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,241,"      codeChanged = true;
",2,0,0,0,0,0,0,0,0,4,19,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,242,"      NodeUtil.redeclareVarsInsideBranch(n);
",0,0,0,1,2,0,6,0,0,6,38,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,243,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,244,"      if (logger.isLoggable(Level.FINE)) {
",4,0,0,2,5,0,4,0,0,8,36,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,247,"      NodeUtil.removeChild(n.getParent(), n);
",0,0,0,2,4,0,10,0,0,10,39,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,248,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,69,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,70,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,71,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,72,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,73,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,74,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,632,"      Node node = newNode(Token.BREAK);
",6,0,0,1,2,0,2,2,0,10,33,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,633,"      if (statementNode.getBreakLabel() != null) {
",0,1,0,2,5,0,4,0,0,5,44,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,639,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,184,"        return processBreakStatement((BreakStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,1,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,1,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,1,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,127,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3330,"        new Visitor() {
",0,0,0,1,3,0,0,2,0,2,15,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3333,"            if (n.isFunction() && mtoc.containsKey(n)) {
",0,1,0,3,7,0,10,0,0,11,44,10,1,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,3341,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,127,534,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,542,"        ret = transformNumberAsString((NumberLiteral)n);
",4,0,0,2,4,0,2,2,0,9,48,8,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,543,"        ret.putBooleanProp(Node.QUOTED_PROP, true);
",4,0,0,1,2,0,4,0,0,9,43,9,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,409,"    Node irNode = newStringNode(getStringValue(literalNode.getNumber()));
",2,0,0,3,6,0,8,2,0,12,69,4,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,410,"    JSDocInfo jsDocInfo = handleJsDoc(literalNode, irNode);
",2,0,0,1,2,0,6,2,0,10,55,4,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,411,"    if (jsDocInfo != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,414,"    setSourceInfo(irNode, literalNode);
",0,0,0,1,2,0,6,0,0,6,35,5,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,415,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,419,"    long longValue = (long) value;
",4,0,0,1,2,0,0,0,0,4,30,5,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,422,"    if (longValue == value) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,423,"      return Long.toString(longValue);
",0,0,0,1,2,1,6,0,0,6,32,7,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,791,"    return len > 0 && s.charAt(0) != '0';
",2,3,0,1,2,1,4,0,0,10,37,4,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,650,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,652,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,653,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,698,"                addExpr(c, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,29,15,0.02041,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,805,"    return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,5,0.01887,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,694,"              double d = getSimpleNumber(key);
",2,0,0,1,2,0,4,0,0,6,32,13,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,695,"              if (!Double.isNaN(d)) {
",0,0,0,2,5,0,6,0,0,7,23,12,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,1978,"    this.prettyPrint = prettyPrint;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,1979,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,786,"      char c = s.charAt(index);
",2,0,0,1,2,0,6,0,0,8,25,7,0.01667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,787,"      if (c < '0' || c > '9') {
",4,3,0,1,3,0,0,0,0,9,25,6,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,784,"    int len = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.01639,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,795,"    if (isSimpleNumber(s)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,2010,"    this.lineLengthThreshold = lineLengthThreshold;
",4,0,0,0,0,0,0,0,0,5,47,4,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,2011,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,541,"      } else if (n instanceof NumberLiteral) {
",2,0,0,1,4,0,0,2,0,4,40,7,0.01316,0,0
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,740,"    trustedStrings = yes;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00575,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,741,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00575,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1609,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00386,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1605,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00369,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1606,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00369,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1608,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00369,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1611,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00369,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1612,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00369,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,681,"            Preconditions.checkState(c.isStringKey());
",0,0,0,2,4,0,8,0,0,8,42,11,0.00309,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,682,"            String key = c.getString();
",2,0,0,1,2,0,4,2,0,8,27,10,0.00309,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,685,"            if (!c.isQuotedString() &&
",0,1,0,1,3,0,4,0,0,6,26,10,0.00309,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,701,"            add("":"");
",0,0,0,1,2,0,2,0,0,3,9,11,0.00309,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,702,"            addExpr(c.getFirstChild(), 1, Context.OTHER);
",4,0,0,2,4,0,6,0,0,10,45,11,0.00309,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,674,"          if (c != first) {
",4,1,0,1,3,0,0,0,0,5,17,8,0.00275,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,678,"          if (c.isGetterDef() || c.isSetterDef()) {
",0,1,0,3,7,0,8,0,0,9,41,8,0.00275,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,2367,"    return this.getType() == Token.SETTER_DEF;
",4,1,0,1,2,1,2,0,0,7,42,4,0.00234,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,2279,"    return this.getType() == Token.GETTER_DEF;
",4,1,0,1,2,1,2,0,0,7,42,4,0.00225,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,969,"        } else if (el.isSetter()) {
",0,0,0,2,6,0,4,0,0,4,27,9,0.00187,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,949,"        if (config.languageMode == LanguageMode.ECMASCRIPT3) {
",8,1,0,1,3,0,0,0,0,9,54,7,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,959,"        Node key = transformAsString(el.getLeft());
",2,0,0,2,4,0,6,2,0,10,43,7,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,960,"        key.setType(Token.STRING_KEY);
",4,0,0,1,2,0,4,0,0,8,30,8,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,962,"        Node value = transform(el.getRight());
",2,0,0,2,4,0,6,2,0,10,38,7,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,963,"        if (el.isGetter()) {
",0,0,0,2,5,0,4,0,0,4,20,8,0.00181,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,976,"        key.addChildToFront(value);
",0,0,0,1,2,0,6,0,0,6,27,8,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,977,"        node.addChildToBack(key);
",0,0,0,1,2,0,6,0,0,6,25,8,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,978,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00181,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,149,"        Node value = key.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,33,7,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,150,"        normalizeObjectLiteralKeyAnnotations(objlit, key, value);
",0,0,0,1,2,0,8,0,0,8,57,8,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,213,"      Preconditions.checkState(objlit.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,47,6,0.00181,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,214,"      if (key.getJSDocInfo() != null &&
",0,2,0,1,3,0,4,0,0,6,33,5,0.00181,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,218,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00181,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,242,"      return getBooleanProp(QUOTED_PROP);
",0,0,0,1,2,1,4,0,0,4,35,6,0.00181,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,995,"      switch (s.charAt(i)) {
",0,0,0,2,5,0,6,0,0,6,22,7,0.00168,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1052,"      char c = s.charAt(i);
",2,0,0,1,2,0,6,0,0,8,21,7,0.00161,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1053,"      switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,6,0.00161,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1139,"          if (outputCharsetEncoder != null) {
",2,1,0,1,3,0,0,0,0,3,35,7,0.00161,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1150,"            if (c > 0x1f && c < 0x7f) {
",4,3,0,1,3,0,0,0,0,7,27,9,0.00161,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1151,"              sb.append(c);
",0,0,0,1,2,0,6,0,0,6,13,12,0.00161,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,981,"      String cached = ESCAPED_JS_STRINGS.get(s);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00160,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,982,"      if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00160,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,983,"        cached = jsString(n.getString(), useSlashV);
",2,0,0,2,4,0,8,0,0,11,44,8,0.00160,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,984,"        ESCAPED_JS_STRINGS.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,34,9,0.00160,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,986,"      add(cached);
",0,0,0,1,2,0,4,0,0,4,12,7,0.00160,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1011,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.00160,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1012,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.00160,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1013,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.00160,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,976,"    String s = n.getString();
",2,0,0,1,2,0,4,2,0,8,25,4,0.00159,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,977,"    boolean useSlashV = n.getBooleanProp(Node.SLASH_V);
",6,0,0,1,2,0,4,0,0,10,51,5,0.00159,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,978,"    if (useSlashV) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.00159,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,988,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00159,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,991,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.00159,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,994,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00159,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1003,"    if (preferSingleQuotes ?
",2,0,0,0,1,0,0,0,0,2,24,5,0.00159,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1016,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.00159,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1049,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.00153,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1050,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00153,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1051,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00153,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1161,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00153,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1162,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00153,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,323,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.00143,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,128,349,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,7,0.00141,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,528,"    this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00140,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,529,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00140,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,319,"    } else if (!options.checkTypes) {
",4,0,0,1,4,0,0,0,0,5,33,6,0.00136,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,128,317,"    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
",4,0,0,2,6,0,4,0,0,8,60,6,0.00135,0,1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,138,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00134,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,1134,"    return warningsGuard.disables(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,127,"    for (DiagnosticType type : group.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,46,5,0.00133,0,0
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,128,"      DiagnosticGroup singleton = DiagnosticGroup.forType(type);
",2,0,0,1,2,0,6,2,0,10,58,7,0.00133,0,0
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,130,"      for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,7,0.00133,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,60,"  private DiagnosticGroup(DiagnosticType type) {
",4,0,0,1,3,1,0,2,0,7,46,2,0.00133,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,61,"    this.name = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,62,"    this.types = ImmutableSet.of(type);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00133,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,63,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,71,"    if (!singletons.containsKey(type)) {
",0,0,0,2,5,0,6,0,0,7,36,4,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,72,"      singletons.put(type, new DiagnosticGroup(type));
",2,0,0,2,4,0,6,2,0,10,48,7,0.00133,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,74,"    return singletons.get(type);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,158,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00133,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,117,"    for (DiagnosticType type : group.types) {
",6,0,0,1,3,0,0,2,0,8,41,4,0.00128,0,0
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,118,"      if (!matches(type)) {
",0,0,0,2,5,0,4,0,0,5,21,6,0.00128,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,119,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00128,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,668,"        boolean needsParens = (context == Context.START_OF_EXPR);
",8,1,0,1,2,0,0,0,0,9,57,7,0.00121,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,669,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.00121,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,672,"        add(""{"");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00121,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,673,"        for (Node c = first; c != null; c = c.getNext()) {
",8,1,0,2,5,0,4,2,0,16,50,6,0.00121,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,705,"        add(""}"");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00121,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,706,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.00121,0,1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,153,"      } else if (guard.disables(group)) {
",0,0,0,2,6,0,6,0,0,6,35,8,0.00112,0,1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,156,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00112,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,128,45,"    return !level.isOn() && group.isSubGroup(otherGroup);
",0,1,0,2,4,1,10,0,0,12,53,4,0.00112,0,1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,128,58,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00112,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1485,"    return IR.string(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,53,5,0.00106,0,0
defect4j,closure,com/google/javascript/rhino/IR,128,447,"    return Node.newString(s);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00097,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,508,"    return new StringNode(Token.STRING, str);
",6,0,0,1,2,1,0,2,0,8,41,5,0.00097,0,0
defect4j,closure,com/google/javascript/rhino/Node,128,599,"      last = child;
",4,0,0,0,0,0,0,0,0,5,13,6,0.00091,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,127,"        normalizeObjectLiteralAnnotations(n);
",0,0,0,1,2,0,4,0,0,4,37,8,0.00078,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,146,"      Preconditions.checkState(objlit.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,47,6,0.00078,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,147,"      for (Node key = objlit.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,39,6,0.00078,0,0
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,148,"           key != null; key = key.getNext()) {
",4,1,0,1,4,0,4,0,0,10,35,5,0.00078,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,152,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00078,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,943,"      if (literalNode.isDestructuring()) {
",0,0,0,2,5,0,4,0,0,4,36,6,0.00077,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,947,"      Node node = newNode(Token.OBJECTLIT);
",6,0,0,1,2,0,2,2,0,10,37,5,0.00077,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,948,"      for (ObjectProperty el : literalNode.getElements()) {
",2,0,0,2,5,0,4,2,0,8,53,5,0.00077,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,979,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00077,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,128,252,"        return processObjectLiteral((ObjectLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00077,0,0
defect4j,closure,com/google/javascript/rhino/Node,128,593,"    Preconditions.checkArgument(child.parent == null);
",4,1,0,1,2,0,4,0,0,9,50,5,0.00077,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,594,"    Preconditions.checkArgument(child.next == null);
",4,1,0,1,2,0,4,0,0,9,48,5,0.00077,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,595,"    child.parent = this;
",4,0,0,0,0,0,0,0,0,5,20,4,0.00077,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,596,"    child.next = first;
",6,0,0,0,0,0,0,0,0,7,19,4,0.00077,0,0
defect4j,closure,com/google/javascript/rhino/Node,128,597,"    first = child;
",4,0,0,0,0,0,0,0,0,5,14,4,0.00077,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,598,"    if (last == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00077,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,601,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00077,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,245,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,246,"        cc.addNumber(n.getDouble());
",0,0,0,2,4,0,8,0,0,8,28,6,0.00057,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,247,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,252,"      long value = (long) x;
",4,0,0,1,2,0,0,0,0,4,22,8,0.00057,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,253,"      long mantissa = value;
",4,0,0,0,0,0,0,0,0,4,22,8,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,254,"      int exp = 0;
",2,0,0,0,0,0,0,0,0,2,12,8,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,255,"      if (Math.abs(x) >= 100) {
",0,1,0,2,5,0,6,0,0,7,25,7,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,261,"      if (exp > 2) {
",2,1,0,1,3,0,0,0,0,3,14,7,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,264,"        long valueAbs = Math.abs(value);
",2,0,0,1,2,0,6,0,0,8,32,10,0.00057,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,265,"        if (Long.toHexString(valueAbs).length() + 2 <
",0,2,0,2,5,0,8,0,0,10,45,9,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,270,"          addConstant(Long.toString(value));
",0,0,0,2,4,0,8,0,0,8,34,12,0.00057,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,273,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,251,"    } else if ((long) x == x) {
",4,1,0,2,6,0,0,0,0,5,27,5,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,243,"    char prev = getLastChar();
",2,0,0,1,2,0,2,0,0,4,26,5,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,244,"    boolean negativeZero = isNegativeZero(x);
",2,0,0,1,2,0,4,0,0,6,41,5,0.00057,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,245,"    if ((x < 0 || negativeZero) && prev == '-') {
",6,4,0,2,5,0,0,0,0,11,45,4,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,249,"    if (negativeZero) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,276,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,283,"    return x == 0.0 && Math.copySign(1, x) == -1.0;
",2,3,0,1,2,1,6,0,0,12,47,4,0.00057,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,279,"    add(newcode);
",0,0,0,1,2,0,4,0,0,4,13,5,0.00051,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,280,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00051,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,160,"      return this.number;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00050,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,222,"            addExpr(first, 0, getContextForNoInOperator(context));
",0,0,0,2,4,0,8,0,0,8,54,10,0.00049,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,225,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00049,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,214,"          Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,8,0.00049,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,215,"          addIdentifier(n.getString());
",0,0,0,2,4,0,6,0,0,6,29,8,0.00049,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,216,"          cc.addOp(""="", true);
",0,0,0,1,2,0,4,0,0,6,20,8,0.00049,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,217,"          if (first.isComma()) {
",0,0,0,2,5,0,4,0,0,4,22,8,0.00049,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,938,"      return newNumberNode(literalNode.getNumber());
",0,0,0,2,4,1,6,0,0,6,46,6,0.00049,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,128,250,"        return processNumberLiteral((NumberLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00049,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1493,"    return IR.number(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,53,5,0.00049,0,0
defect4j,closure,com/google/javascript/rhino/Node,128,2375,"    return this.getType() == Token.STRING_KEY;
",4,1,0,1,2,1,2,0,0,7,42,4,0.00047,0,1
defect4j,closure,com/google/javascript/rhino/IR,128,455,"    return Node.newNumber(d);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00047,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,500,"    return new NumberNode(number);
",2,0,0,1,2,1,0,2,0,4,30,5,0.00047,0,0
defect4j,closure,com/google/javascript/rhino/Node,128,149,"      super(Token.NUMBER);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00047,0,0
defect4j,closure,com/google/javascript/rhino/Node,128,150,"      this.number = number;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00047,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,151,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00047,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,393,"            cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,11,0.00043,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,199,"        if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.00042,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,200,"          add(""var "");
",0,0,0,1,2,0,2,0,0,3,12,8,0.00042,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,201,"          addList(first, false, getContextForNoInOperator(context));
",0,0,0,2,4,0,8,0,0,9,58,8,0.00042,0,0
defect4j,closure,com/google/javascript/rhino/Node,128,2259,"    return this.getType() == Token.EMPTY;
",4,1,0,1,2,1,2,0,0,7,37,4,0.00039,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,2231,"    return this.getType() == Token.COMMA;
",4,1,0,1,2,1,2,0,0,7,37,4,0.00038,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,539,"      if (n instanceof Name) {
",2,0,0,1,3,0,0,2,0,4,24,6,0.00038,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,548,"      Preconditions.checkState(ret.isString());
",0,0,0,2,4,0,8,0,0,8,41,6,0.00038,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,549,"      return ret;
",2,0,0,0,0,1,0,0,0,2,11,5,0.00038,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1216,"        Node initalizer = transform(initializerNode.getInitializer());
",2,0,0,2,4,0,6,2,0,10,62,7,0.00036,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1217,"        node.addChildToBack(initalizer);
",0,0,0,1,2,0,6,0,0,6,32,8,0.00036,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,929,"      boolean isFirst = n == firstInList;
",6,1,0,0,0,0,0,0,0,7,35,7,0.00035,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,930,"      if (isFirst) {
",2,0,0,1,3,0,0,0,0,2,14,6,0.00035,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,931,"        addExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);
",2,0,0,1,2,0,6,0,0,8,58,9,0.00035,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,236,"      maybeCutLine();
",0,0,0,1,2,0,2,0,0,2,15,7,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,207,"    append(op);
",0,0,0,1,2,0,4,0,0,4,11,5,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,208,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,224,"    } else if (prev == '-' && first == '>') {
",4,3,0,1,4,0,0,0,0,9,41,6,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,211,"    maybeEndStatement();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,213,"    char first = op.charAt(0);
",2,0,0,1,2,0,4,0,0,6,26,5,0.00034,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,214,"    char prev = getLastChar();
",2,0,0,1,2,0,2,0,0,4,26,5,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,216,"    if ((first == '+' || first == '-') && prev == first) {
",8,5,0,2,5,0,0,0,0,15,54,4,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,220,"    } else if (Character.isLetter(first) &&
",0,1,0,1,4,0,6,0,0,7,39,5,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,230,"    appendOp(op, binOp);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00034,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,235,"    if (binOp) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,128,238,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00034,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1244,"    return (context == Context.IN_FOR_INIT_CLAUSE
",6,1,0,0,1,1,0,0,0,7,45,6,0.00034,0,1
defect4j,closure,com/google/javascript/rhino/Node,128,2371,"    return this.getType() == Token.STRING;
",4,1,0,1,2,1,2,0,0,7,38,4,0.00031,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1200,"      if (!config.acceptConstKeyword && declarationNode.getType() ==
",4,2,0,1,3,0,4,0,0,11,62,5,0.00029,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1205,"      Node node = newNode(Token.VAR);
",6,0,0,1,2,0,2,2,0,10,31,5,0.00029,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1206,"      for (VariableInitializer child : declarationNode.getVariables()) {
",2,0,0,2,5,0,4,2,0,8,66,5,0.00029,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1207,"        node.addChildToBack(transform(child));
",0,0,0,2,4,0,8,0,0,8,38,8,0.00029,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1208,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00029,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1209,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00029,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1214,"      Node node = transform(initializerNode.getTarget());
",2,0,0,2,4,0,6,2,0,10,51,5,0.00029,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1215,"      if (initializerNode.getInitializer() != null) {
",0,1,0,2,5,0,4,0,0,5,47,5,0.00029,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,1219,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00029,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,128,269,"        if (node instanceof VariableDeclaration) {
",2,0,0,1,3,0,0,2,0,4,42,6,0.00029,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,128,270,"          return processVariableDeclaration((VariableDeclaration) node);
",2,0,0,2,4,1,2,2,0,6,62,8,0.00029,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1546,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,3165,"        return isExpressionResultUsed(parent);
",0,0,0,1,2,1,4,0,0,4,38,6,0.25000,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,132,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1428,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1444,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1457,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,2163,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,2164,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,2165,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,2166,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,530,"          add(""(0,"");
",0,0,0,1,3,0,2,0,0,3,11,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,531,"          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);
",8,0,0,2,4,0,8,0,0,16,64,8,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,532,"          add("")"");
",0,0,0,1,3,0,2,0,0,3,9,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,61,"          n.removeChild(left);
",0,0,0,1,2,0,6,0,0,6,20,8,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,62,"          n.removeChild(right);
",0,0,0,1,2,0,6,0,0,6,21,8,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,63,"          parent.replaceChild(n, IR.getprop(left, right));
",0,0,0,2,4,0,14,0,0,14,48,8,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,64,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,8,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,129,414,"          parent.replaceChild(n, n.removeFirstChild());
",0,0,0,2,4,0,10,0,0,10,45,7,0.10000,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1332,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,57,"        Node left = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,5,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,58,"        Node right = left.getNext();
",2,0,0,1,2,0,4,2,0,8,28,5,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,59,"        if (right.isString() &&
",0,1,0,1,3,0,4,0,0,5,23,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1329,"    if (left.isArrayLit()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,122,"        return tryFoldGetElem(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1323,"    Preconditions.checkArgument(n.isGetElem());
",0,0,0,2,4,0,8,0,0,8,43,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1325,"    if (left.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,403,"        return n;
",2,0,0,0,0,1,0,0,0,2,9,8,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,82,"        return tryFoldCtorCall(subtree);
",0,0,0,1,2,1,4,0,0,4,32,6,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1258,"    Preconditions.checkArgument(n.isNew());
",0,0,0,2,4,0,8,0,0,8,39,5,0.06250,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1261,"    if (inForcedStringContext(n)) {
",0,0,0,2,5,0,4,0,0,4,31,5,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1264,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1269,"    if (n.getParent().isGetElem() &&
",0,1,0,2,5,0,6,0,0,7,32,4,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1275,"    if (n.getParent().isAdd()) {
",0,0,0,3,7,0,6,0,0,6,28,5,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1278,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,140,"          return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.05556,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,122,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.05000,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,134,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.05000,0,1
defect4j,closure,com/google/javascript/rhino/InputId,129,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,138,"        node = tryFoldStandardConstructors(node);
",2,0,0,1,2,0,4,0,0,7,41,5,0.05000,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,139,"        if (!node.isCall()) {
",0,0,0,2,5,0,4,0,0,5,21,5,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1346,"    Preconditions.checkState(n.isNew());
",0,0,0,2,4,0,8,0,0,8,36,5,0.05000,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1351,"    if (isASTNormalized()) {
",0,0,0,2,5,0,2,0,0,2,24,5,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1352,"      if (n.getFirstChild().isName()) {
",0,0,0,3,7,0,6,0,0,6,33,7,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1353,"        String className = n.getFirstChild().getString();
",2,0,0,2,4,0,6,2,0,10,49,8,0.05000,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1354,"        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
",0,0,0,2,5,0,6,0,0,6,55,9,0.05000,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1362,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.05000,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,347,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.04762,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1007,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1012,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1013,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1014,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1021,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1022,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1026,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1027,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1029,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1030,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1031,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1032,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1034,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1033,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1036,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,100,"      return subtree;
",2,0,0,0,0,1,0,0,0,2,15,6,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,412,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,402,"      if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {
",0,2,0,3,7,0,10,0,0,13,67,6,0.03704,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,1171,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.03571,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,407,"    Node arrayNode = callTarget.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,4,0.03448,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,408,"    Node functionName = arrayNode.getNext();
",2,0,0,1,2,0,4,2,0,8,40,4,0.03448,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,410,"    if (!arrayNode.isArrayLit() ||
",0,1,0,1,3,0,4,0,0,6,30,4,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,113,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,133,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,871,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,876,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,877,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,970,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,971,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,978,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,979,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,980,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,981,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,982,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,984,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,986,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,989,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,990,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,315,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/SourceFile,129,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,869,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.03030,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,870,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,874,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,875,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,880,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,881,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.03030,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,932,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.03030,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,968,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,969,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.03030,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,976,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.03030,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,977,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,995,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.03030,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,68,"        subtree = tryFoldKnownStringMethods(subtree);
",2,0,0,1,2,0,4,0,0,7,45,8,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,82,"    Preconditions.checkArgument(subtree.isCall());
",0,0,0,2,4,0,8,0,0,8,46,5,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,86,"    Node callTarget = subtree.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,4,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,87,"    if (callTarget == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,91,"    if (!NodeUtil.isGet(callTarget)) {
",0,0,0,2,5,0,6,0,0,7,34,4,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,95,"    Node stringNode = callTarget.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,45,4,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,96,"    Node functionName = stringNode.getNext();
",2,0,0,1,2,0,4,2,0,8,41,4,0.02941,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,98,"    if ((!stringNode.isString()) ||
",0,1,0,2,5,0,4,0,0,6,31,4,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,400,"    Node right = callTarget.getNext();
",2,0,0,1,2,0,4,2,0,8,34,4,0.02778,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,401,"    if (right != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.02778,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.02632,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.02632,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.02381,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,2187,"    return this.getType() == Token.ADD;
",4,1,0,1,2,1,2,0,0,7,35,4,0.02174,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.02083,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,397,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.02083,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.02041,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.02041,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.02041,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.02041,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.02041,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.02041,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.02041,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02041,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/ClosureOptimizePrimitives,129,48,"        String fnName = n.getFirstChild().getQualifiedName();
",2,0,0,2,4,0,6,2,0,10,53,7,0.02041,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureOptimizePrimitives,129,49,"        if (""goog$object$create"".equals(fnName) ||
",0,1,0,1,3,0,4,0,0,6,42,7,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1372,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/deps/JsFileLineParser,129,163,"                  revisedLine =
",2,0,0,0,0,0,0,0,0,3,13,19,0.01613,0,0
defect4j,closure,com/google/javascript/jscomp/deps/JsFileLineParser,129,170,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01613,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,129,94,"                } break partial;
",2,0,0,0,1,0,0,0,0,2,16,8,0.01587,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1345,"    if (right.isString() &&
",0,1,0,1,3,0,4,0,0,5,23,4,0.01587,0,1
defect4j,closure,com/google/javascript/jscomp/deps/JsFileLineParser,129,155,"                int endOfMultilineComment = revisedLine.indexOf(""*/"",
",2,0,0,0,1,0,4,0,0,7,53,18,0.01563,0,0
defect4j,closure,com/google/javascript/jscomp/deps/JsFileLineParser,129,157,"                if (endOfMultilineComment == -1) {
",2,1,0,1,3,0,0,0,0,4,34,17,0.01563,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,119,"        return tryFoldGetProp(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1339,"    Preconditions.checkArgument(n.isGetProp());
",0,0,0,2,4,0,8,0,0,8,43,5,0.01538,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1341,"    if (left.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.01538,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,161,"          createSynthesizedExternVar(varName);
",0,0,0,1,2,0,4,0,0,4,36,11,0.01515,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,162,"          scope.getGlobalScope().declare(varName, n,
",0,0,0,1,3,0,10,0,0,10,42,11,0.01515,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,166,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01515,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,149,"      if (NodeUtil.isFunctionExpression(parent)) {
",0,0,0,2,5,0,6,0,0,6,44,7,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,154,"        if (!strictExternCheck || !t.getInput().isExtern()) {
",2,1,0,3,7,0,6,0,0,11,53,8,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,155,"          t.report(n, UNDEFINED_VAR_ERROR, varName);
",0,0,0,1,2,0,10,0,0,10,42,11,0.01493,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,158,"        if (sanityCheck) {
",2,0,0,1,3,0,0,0,0,2,18,8,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,62,"      Node callTarget = subtree.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,6,0.01408,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,63,"      if (callTarget == null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.01408,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,67,"      if (NodeUtil.isGet(callTarget)) {
",0,0,0,2,5,0,6,0,0,6,33,7,0.01408,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,49,"      return tryFoldKnownMethods(subtree);
",0,0,0,1,2,1,4,0,0,4,36,7,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,59,"    subtree = tryFoldArrayJoin(subtree);
",2,0,0,1,2,0,4,0,0,7,36,4,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,61,"    if (subtree.isCall()) {
",0,0,0,2,5,0,4,0,0,4,23,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,74,"    return subtree;
",2,0,0,0,0,1,0,0,0,2,15,4,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,394,"    Node callTarget = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,4,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,396,"    if (callTarget == null || !callTarget.isGetProp()) {
",2,2,0,2,5,0,4,0,0,9,52,4,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,129,441,"    Scope result = this;
",2,0,0,0,0,0,0,2,0,4,20,4,0.01299,0,0
defect4j,closure,com/google/javascript/jscomp/Scope,129,442,"    while (result.getParent() != null) {
",0,1,0,2,5,0,4,0,0,5,36,4,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,129,445,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,210,"    Node nameNode = IR.name(varName);
",2,0,0,1,2,0,6,2,0,10,33,4,0.01299,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,218,"    if (compiler.getCodingConvention().isConstant(varName)) {
",0,0,0,3,7,0,8,0,0,8,57,5,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,222,"    getSynthesizedExternsRoot().addChildToBack(
",0,0,0,1,3,0,4,0,0,4,43,5,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,224,"    varsToDeclareInExterns.remove(varName);
",0,0,0,1,2,0,6,0,0,6,39,5,0.01299,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,225,"    compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,5,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,226,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,268,"    return compiler.getSynthesizedExternsInput();
",0,0,0,1,2,1,4,0,0,4,45,5,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,273,"    if (synthesizedExternsRoot == null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,274,"      CompilerInput synthesizedExterns = getSynthesizedExternsInput();
",2,0,0,1,2,0,2,2,0,6,64,6,0.01299,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,275,"      synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler);
",2,0,0,1,2,0,6,0,0,9,65,6,0.01299,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,277,"    return synthesizedExternsRoot;
",2,0,0,0,0,1,0,0,0,2,30,4,0.01299,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1628,"        } else if (options.inlineLocalVariables) {
",4,0,0,1,4,0,0,0,0,4,42,12,0.01176,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1629,"          mode = InlineVariables.Mode.LOCALS_ONLY;
",8,0,0,0,0,0,0,0,0,9,40,13,0.01176,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,129,94,"        return new IdentifyLocals();
",0,0,0,1,2,1,0,2,0,2,28,7,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,129,120,"  private class IdentifyLocals implements Predicate<Var> {
",2,0,0,0,1,1,0,4,0,7,56,2,0.01149,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,129,123,"      return var.scope.isLocal();
",4,0,0,1,2,1,2,0,0,6,27,6,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,2444,"    if (synthesizedExternsInput == null) {
",2,1,0,1,3,0,0,0,0,3,38,4,0.01136,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,2445,"      synthesizedExternsInput = newExternInput(SYNTHETIC_EXTERNS);
",2,0,0,1,2,0,4,0,0,7,60,6,0.01136,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,129,2447,"    return synthesizedExternsInput;
",2,0,0,0,0,1,0,0,0,2,31,4,0.01136,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1087,"    SourceAst ast = new SyntheticAst(name);
",4,0,0,1,2,0,0,4,0,8,39,4,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1088,"    if (inputsById.containsKey(ast.getInputId())) {
",0,0,0,3,7,0,8,0,0,8,47,5,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1091,"    CompilerInput input = new CompilerInput(ast, true);
",4,0,0,1,2,0,0,4,0,9,51,4,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1092,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1093,"    externsRoot.addChildToFront(ast.getAstRoot(this));
",0,0,0,2,4,0,8,0,0,8,50,5,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1094,"    externs.add(0, input);
",0,0,0,1,2,0,6,0,0,6,22,5,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1095,"    return input;
",2,0,0,0,0,1,0,0,0,2,13,4,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,37,"  SyntheticAst(String sourceName) {
",4,0,0,1,3,0,0,2,0,6,33,2,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,38,"    this.inputId = new InputId(sourceName);
",4,0,0,1,2,0,0,2,0,7,39,4,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,39,"    this.sourceFile = new SourceFile(sourceName);
",4,0,0,1,2,0,0,2,0,7,45,4,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,40,"    clearAst();
",0,0,0,1,2,0,2,0,0,2,11,5,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,41,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,45,"    return root;
",2,0,0,0,0,1,0,0,0,2,12,4,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,50,"    root = IR.script();
",2,0,0,1,2,0,4,0,0,7,19,4,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,51,"    root.setInputId(inputId);
",0,0,0,1,2,0,6,0,0,6,25,5,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,52,"    root.setStaticSourceFile(sourceFile);
",0,0,0,1,2,0,6,0,0,6,37,5,0.01111,0,0
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,53,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,57,"    return inputId;
",2,0,0,0,0,1,0,0,0,2,15,4,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,62,"    return sourceFile;
",2,0,0,0,0,1,0,0,0,2,18,4,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,129,2060,"      return parseTypeExpression(next());
",0,0,0,2,4,1,4,0,0,4,35,7,0.01099,0,1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,129,39,"        addDefaultWarnings(options);
",0,0,0,1,2,0,4,0,0,4,28,6,0.01075,0,1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,129,40,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01075,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,129,2054,"    token = next();
",2,0,0,1,2,0,2,0,0,5,15,4,0.01064,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,129,2055,"    skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,5,0.01064,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,129,2056,"    if (match(JsDocToken.STRING) && ""void"".equals(stream.getString())) {
",4,1,0,4,9,0,8,0,0,14,68,4,0.01064,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,711,"        passes.add(removeUnusedVars);
",0,0,0,1,2,0,6,0,0,6,29,9,0.01053,0,0
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,129,185,"        Node target = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,32,7,0.01031,0,0
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,129,188,"        if (target.isName() && target.getString().equals(PROTECTOR_FN)) {
",0,1,0,4,9,0,12,0,0,13,65,7,0.01031,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,129,295,"          valid = node instanceof ParenthesizedExpression;
",4,0,0,0,0,0,0,2,0,7,48,7,0.01010,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,129,296,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,129,371,"      irNode = newNode(Token.CAST, irNode);
",6,0,0,1,2,0,4,0,0,11,37,6,0.01010,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureRewriteClass,129,397,"      String targetName = value.getFirstChild().getQualifiedName();
",2,0,0,2,4,0,6,2,0,10,61,6,0.00990,0,0
defect4j,closure,com/google/javascript/jscomp/ClosureRewriteClass,129,398,"      return (""goog.defineClass"".equals(targetName) ||
",0,1,0,1,3,1,4,0,0,6,48,7,0.00990,0,1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,129,242,"          String className = codingConvention.getSingletonGetterClassName(n);
",2,0,0,1,2,0,6,2,0,10,67,7,0.00990,0,0
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,129,243,"          if (className != null) {
",2,1,0,1,3,0,0,0,0,3,24,7,0.00990,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,129,73,"            case 3: switch (s.charAt(0)) {
",0,0,0,2,5,0,4,0,0,4,30,9,0.00980,0,1
defect4j,closure,com/google/javascript/jscomp/RenameVars,129,234,"        reservedNames.add(name);
",0,0,0,1,2,0,6,0,0,6,24,8,0.00962,0,0
defect4j,closure,com/google/javascript/jscomp/RenameVars,129,235,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00962,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,2498,"    return isValidSimpleName(name);
",0,0,0,1,2,1,4,0,0,4,31,5,0.00935,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,2464,"    return TokenStream.isJSIdentifier(name) &&
",0,1,0,1,2,1,6,0,0,7,42,4,0.00909,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,129,1560,"    return assumeStrictThis;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00893,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1767,"      boolean enableBlockInlining = !isInliningForbidden();
",2,0,0,1,2,0,2,0,0,5,53,9,0.00893,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1768,"      return new InlineFunctions(
",0,0,0,0,1,1,0,2,0,2,27,10,0.00893,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2139,"      return new RenameLabels(compiler);
",2,0,0,1,2,1,0,2,0,4,34,9,0.00893,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2148,"      return new ConvertToDottedProperties(compiler);
",2,0,0,1,2,1,0,2,0,4,47,9,0.00893,0,0
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,129,233,"        Var modifiedVar = null;
",2,0,0,0,0,0,0,2,0,4,23,5,0.00893,0,0
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,129,236,"        SubclassRelationship subclassRelationship =
",2,0,0,0,0,0,0,2,0,4,43,5,0.00893,0,0
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,129,238,"        if (subclassRelationship != null) {
",2,1,0,1,3,0,0,0,0,3,35,5,0.00893,0,1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,129,252,"        if (modifiedVar != null && modifiedVar.isGlobal()
",2,3,0,1,3,0,4,0,0,9,49,5,0.00893,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,371,"      passes.add(optimizeArgumentsArray);
",0,0,0,1,2,0,6,0,0,6,35,7,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,524,"        passes.add(removeUnusedVars);
",0,0,0,1,2,0,6,0,0,6,29,9,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,581,"      passes.add(convertToDottedProperties);
",0,0,0,1,2,0,6,0,0,6,38,7,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,617,"        passes.add(peepholeOptimizations);
",0,0,0,1,2,0,6,0,0,6,34,9,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,654,"      passes.add(renameLabels);
",0,0,0,1,2,0,6,0,0,6,25,7,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,695,"      passes.add(inlineFunctions);
",0,0,0,1,2,0,6,0,0,6,28,7,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2118,"      reservedNames.addAll(exportedNames);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,76,"    this(compiler, PARAMETER_PREFIX);
",4,0,0,1,2,0,0,0,0,4,33,4,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,77,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00885,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1882,"      return new CollapseVariableDeclarations(compiler);
",2,0,0,1,2,1,0,2,0,4,50,9,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,129,65,"    Preconditions.checkNotNull(externs);
",0,0,0,1,2,0,6,0,0,6,36,5,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,129,66,"    Preconditions.checkNotNull(root);
",0,0,0,1,2,0,6,0,0,6,33,5,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,129,67,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,129,68,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00885,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1849,"      return new FlowSensitiveInlineVariables(compiler);
",2,0,0,1,2,1,0,2,0,4,50,9,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1450,"      return new OptimizeArgumentsArray(compiler);
",2,0,0,1,2,1,0,2,0,4,44,9,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1758,"      return new DeadAssignmentsElimination(compiler);
",2,0,0,1,2,1,0,2,0,4,48,9,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1858,"      return new CoalesceVariableNames(compiler, options.generatePseudoNames);
",6,0,0,1,2,1,0,2,0,8,72,9,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1869,"      return new PeepholeOptimizationsPass(compiler,
",2,0,0,0,1,1,0,2,0,4,46,9,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,129,88,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.00885,0,0
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,129,89,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00885,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,519,"      passes.add(flowSensitiveInlineVariables);
",0,0,0,1,2,0,6,0,0,6,41,7,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,523,"      if (options.removeUnusedVars || options.removeUnusedLocalVars) {
",8,1,0,1,3,0,0,0,0,9,64,6,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,611,"      passes.add(coalesceVariableNames);
",0,0,0,1,2,0,6,0,0,6,34,7,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,616,"      if (options.foldConstants) {
",4,0,0,1,3,0,0,0,0,4,28,7,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,622,"      passes.add(exploitAssign);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,623,"      passes.add(collapseVariableDeclarations);
",0,0,0,1,2,0,6,0,0,6,41,7,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,708,"        passes.add(deadAssignmentsElimination);
",0,0,0,1,2,0,6,0,0,6,39,9,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/CombinedCompilerPass,129,76,"      NodeTraversal.traverse(compiler, root, callbacks.get(0));
",0,0,0,2,4,0,12,0,0,12,57,7,0.00877,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1498,"      return new InlineObjectLiterals(
",0,0,0,0,1,1,0,2,0,2,32,10,0.00877,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,2195,"    return this.getType() == Token.ARRAYLIT;
",4,1,0,1,2,1,2,0,0,7,40,4,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,725,"      passes.add(collapseObjectLiterals);
",0,0,0,1,2,0,6,0,0,6,35,7,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/RenameLabels,129,77,"    this(compiler, new DefaultNameSupplier(), true);
",2,0,0,2,4,0,0,2,0,5,48,4,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/RenameLabels,129,78,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00870,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1667,"      return new UnreachableCodeElimination(compiler, true);
",2,0,0,1,2,1,0,2,0,5,54,9,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/RenameLabels,129,89,"  static class DefaultNameSupplier implements Supplier<String> {
",2,0,0,0,1,1,0,4,0,7,62,2,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/RenameLabels,129,91,"    final NameGenerator nameGenerator =
",2,0,0,0,0,1,0,2,0,5,35,3,0.00870,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,741,"      passes.add(removeUnreachableCode);
",0,0,0,1,2,0,6,0,0,6,34,7,0.00862,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,35,"  ConvertToDottedProperties(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,54,2,0.00862,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,36,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,37,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,41,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.00862,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,46,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,68,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1619,"      if (isInliningForbidden()) {
",0,0,0,2,5,0,2,0,0,2,28,9,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1626,"        if (options.inlineVariables) {
",4,0,0,1,3,0,0,0,0,4,30,11,0.00855,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1634,"        return new InlineVariables(compiler, mode, true);
",4,0,0,1,2,1,0,2,0,7,49,11,0.00855,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,140,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,729,"      passes.add(inlineVariables);
",0,0,0,1,2,0,6,0,0,6,28,7,0.00847,0,0
defect4j,closure,com/google/javascript/jscomp/StatementFusion,129,54,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00847,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,139,"      if (t.inGlobalScope()) {
",0,0,0,2,5,0,4,0,0,4,24,6,0.00847,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2112,"    char[] reservedChars =
",2,0,0,1,2,0,0,0,0,2,22,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2114,"    boolean preserveAnonymousFunctionNames =
",2,0,0,0,0,0,0,0,0,2,40,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2116,"    Set<String> reservedNames = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,46,4,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2117,"    if (exportedNames != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2120,"    reservedNames.addAll(ParserRunner.getReservedVars());
",0,0,0,2,4,0,8,0,0,8,53,5,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2121,"    RenameVars rn = new RenameVars(
",2,0,0,0,1,0,0,4,0,6,31,4,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2131,"    rn.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,26,5,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2132,"    return rn.getVariableMap();
",0,0,0,1,2,1,4,0,0,4,27,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1794,"      boolean removeOnlyLocals = options.removeUnusedLocalVars
",6,0,0,0,0,0,0,0,0,6,56,9,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1796,"      boolean preserveAnonymousFunctionNames =
",2,0,0,0,0,0,0,0,0,2,40,9,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1798,"      return new RemoveUnusedVars(
",0,0,0,0,1,1,0,2,0,2,28,10,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,103,"  CollapseVariableDeclarations(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,57,2,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,94,"  private final List<Collapse> collapses = Lists.newArrayList();
",2,0,0,1,2,2,4,4,0,12,62,2,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,101,"  private final Set<Node> nodesToCollapse = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,60,2,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,104,"    Preconditions.checkState(!compiler.getLifeCycleStage().isNormalized());
",0,0,0,3,6,0,10,0,0,11,71,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,105,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,106,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,110,"    collapses.clear();
",0,0,0,1,2,0,4,0,0,4,18,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,111,"    nodesToCollapse.clear();
",0,0,0,1,2,0,4,0,0,4,24,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,113,"    NodeTraversal.traverse(compiler, root, new GatherCollapses());
",0,0,0,2,4,0,8,2,0,10,62,5,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,115,"    if (!collapses.isEmpty()) {
",0,0,0,2,5,0,4,0,0,5,27,4,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,119,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,129,78,"    initResourceConfig();
",0,0,0,1,2,0,2,0,0,2,21,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,129,79,"    return reservedVars;
",2,0,0,0,0,1,0,0,0,2,20,4,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2099,"      final VariableMap prevVariableMap = options.inputVariableMap;
",6,0,0,0,0,1,0,2,0,9,61,8,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2100,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,128,"  private class GatherCollapses extends AbstractPostOrderCallback {
",2,0,0,0,1,1,0,2,0,5,65,2,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,134,"    private final Set<Var> blacklistedVars = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,59,3,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,138,"      if (n.isVar()) {
",0,0,0,2,5,0,4,0,0,4,16,6,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,143,"      if (!n.isVar() && !canBeRedeclared(n, t.getScope())) return;
",0,1,0,4,8,1,12,0,0,15,60,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,191,"      if (!NodeUtil.isExprAssign(n)) {
",0,0,0,2,5,0,6,0,0,7,32,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,129,192,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2100,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2102,"          variableMap = runVariableRenaming(
",2,0,0,0,1,0,2,0,0,5,34,13,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2104,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,641,"      passes.add(renameVars);
",0,0,0,1,2,0,6,0,0,6,23,7,0.00833,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,707,"      if (options.deadAssignmentElimination) {
",4,0,0,1,3,0,0,0,0,4,40,7,0.00833,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,710,"      if (!runOptimizeCalls) {
",2,0,0,1,3,0,0,0,0,3,24,6,0.00833,0,1
defect4j,closure,com/google/javascript/jscomp/ProcessDefines,129,362,"          for (DefineInfo info : assignableDefines.values()) {
",2,0,0,2,5,0,4,2,0,8,52,9,0.00833,0,0
defect4j,closure,com/google/javascript/jscomp/ProcessDefines,129,366,"          assignableDefines.clear();
",0,0,0,1,2,0,4,0,0,4,26,10,0.00833,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,129,29,"class ExploitAssigns extends AbstractPeepholeOptimization {
",2,0,0,0,1,0,0,2,0,4,59,1,0.00826,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,129,33,"    for (Node child = subtree.getFirstChild(); child != null;) {
",4,1,0,2,5,0,4,2,0,11,60,4,0.00826,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,129,34,"      Node next = child.getNext();
",2,0,0,1,2,0,4,2,0,8,28,6,0.00826,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,129,35,"      if (NodeUtil.isExprAssign(child)) {
",0,0,0,2,5,0,6,0,0,6,35,7,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,129,38,"      child = next;
",4,0,0,0,0,0,0,0,0,5,13,6,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,129,39,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,129,40,"    return subtree;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/RenameVars,129,157,"      this.reservedNames = Sets.newHashSet(reservedNames);
",2,0,0,1,2,0,6,0,0,9,52,6,0.00820,0,0
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,129,74,"      protectSideEffects();
",0,0,0,1,2,0,2,0,0,2,21,7,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,129,139,"    if (!problemNodes.isEmpty()) {
",0,0,0,2,5,0,4,0,0,5,30,4,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,129,151,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/AnonymousFunctionNamingPolicy,129,59,"    return reservedCharacters;
",2,0,0,0,0,1,0,0,0,2,26,4,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/RenameVars,129,260,"        if (!local) {
",2,0,0,1,3,0,0,0,0,3,13,7,0.00806,0,1
defect4j,closure,com/google/javascript/jscomp/RenameVars,129,263,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00806,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,177,"    JSModule currModule = currInput.getModule();
",2,0,0,1,2,0,4,2,0,8,44,4,0.00800,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,178,"    JSModule varModule = varInput.getModule();
",2,0,0,1,2,0,4,2,0,8,42,4,0.00800,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,179,"    JSModuleGraph moduleGraph = compiler.getModuleGraph();
",2,0,0,1,2,0,4,2,0,8,54,4,0.00800,0,0
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,180,"    if (!sanityCheck &&
",2,3,0,0,1,0,0,0,0,6,19,4,0.00800,0,1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,203,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00800,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1067,"      final boolean late = false;
",2,0,0,0,0,1,0,0,0,4,27,8,0.00781,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1068,"      return new PeepholeOptimizationsPass(compiler,
",2,0,0,0,1,1,0,2,0,4,46,9,0.00781,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1082,"      final boolean late = true;
",2,0,0,0,0,1,0,0,0,4,26,8,0.00781,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1083,"      return new PeepholeOptimizationsPass(compiler,
",2,0,0,0,1,1,0,2,0,4,46,9,0.00781,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1656,"      return new MinimizeExitPoints(compiler);
",2,0,0,1,2,1,0,2,0,4,40,9,0.00781,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,658,"      passes.add(latePeepholeOptimizations);
",0,0,0,1,2,0,6,0,0,6,38,7,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,736,"      passes.add(minimizeExitPoints);
",0,0,0,1,2,0,6,0,0,6,31,7,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,737,"      passes.add(peepholeOptimizations);
",0,0,0,1,2,0,6,0,0,6,34,7,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,100,"      Map<Node, String> pseudoNameMap) {
",2,0,0,0,2,0,0,6,0,8,34,3,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,75,"  private final Multimap<Node, String> scopeUpRefMap = HashMultimap.create();
",2,0,0,1,2,2,4,6,0,14,75,2,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,79,"  private final Multimap<Var, Node> varToNameUsage = HashMultimap.create();
",2,0,0,1,2,2,4,6,0,14,73,2,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,101,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,102,"    this.assignments = assignments;
",4,0,0,0,0,0,0,0,0,5,31,4,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,103,"    this.varsByFrequency = varsByFrequency;
",4,0,0,0,0,0,0,0,0,5,39,4,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,104,"    this.oldPseudoNameMap = pseudoNameMap;
",4,0,0,0,0,0,0,0,0,5,38,4,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,105,"    this.deltaPseudoNameMap = Maps.newLinkedHashMap();
",2,0,0,1,2,0,4,0,0,7,50,4,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,106,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,119,"    NodeTraversal.traverse(compiler, root, new GatherReferenceInfo());
",0,0,0,2,4,0,8,2,0,10,66,5,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,120,"    NodeTraversal.traverse(compiler, root, new DoShadowVariables());
",0,0,0,2,4,0,8,2,0,10,64,5,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,122,"    if (oldPseudoNameMap != null) {
",2,1,0,1,3,0,0,0,0,3,31,4,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,125,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/RenameVars,129,340,"      new ShadowVariables(
",0,0,0,0,1,0,0,2,0,2,20,9,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,127,"  private class GatherReferenceInfo extends AbstractPostOrderCallback {
",2,0,0,0,1,1,0,2,0,5,69,2,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,131,"      if (!NodeUtil.isReferenceName(n)) {
",0,0,0,2,5,0,6,0,0,7,35,5,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,132,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,171,"  private class DoShadowVariables extends AbstractPostOrderCallback
",2,0,0,0,0,1,0,2,0,5,65,2,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,176,"      Scope s = t.getScope();
",2,0,0,1,2,0,4,2,0,8,23,5,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,177,"      if (!s.isLocal()) {
",0,0,0,2,5,0,4,0,0,5,19,5,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,178,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00775,0,1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,228,"    public void exitScope(NodeTraversal t) {}
",4,0,0,2,4,1,0,2,0,7,41,3,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,129,231,"    public void visit(NodeTraversal t, Node n, Node parent) {}
",8,0,0,2,4,1,0,6,0,15,58,3,0.00775,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,520,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00769,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,529,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00769,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,537,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00769,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,544,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00769,0,1
defect4j,closure,com/google/javascript/jscomp/PhaseOptimizer,129,308,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00769,0,1
defect4j,closure,com/google/javascript/jscomp/ReorderConstantExpression,129,28,"class ReorderConstantExpression extends AbstractPeepholeOptimization {
",2,0,0,0,1,0,0,2,0,4,70,1,0.00769,0,0
defect4j,closure,com/google/javascript/jscomp/ReorderConstantExpression,129,35,"    if (NodeUtil.isSymmetricOperation(subtree)
",0,0,0,1,3,0,6,0,0,6,42,6,0.00769,0,0
defect4j,closure,com/google/javascript/jscomp/ReorderConstantExpression,129,56,"    return subtree;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00769,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,83,"  OptimizeArgumentsArray(AbstractCompiler compiler, String paramPrefix) {
",6,0,0,1,3,0,0,4,0,10,71,2,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,60,"  private int uniqueId = 0;
",2,0,0,0,0,1,0,0,0,3,25,2,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,66,"  private final Deque<List<Node>> argumentsAccessStack = Lists.newLinkedList();
",2,0,0,1,2,2,4,6,0,14,77,2,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,69,"  private List<Node> currentArgumentsAccess = null;
",2,0,0,0,0,1,0,4,0,7,49,2,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,84,"    this.compiler = Preconditions.checkNotNull(compiler);
",2,0,0,1,2,0,6,0,0,9,53,4,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,85,"    this.paramPredix = Preconditions.checkNotNull(paramPrefix);
",2,0,0,1,2,0,6,0,0,9,59,4,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,86,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,90,"    NodeTraversal.traverse(compiler, Preconditions.checkNotNull(root), this);
",0,0,0,2,4,0,12,0,0,12,73,5,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,91,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,95,"    Preconditions.checkNotNull(traversal);
",0,0,0,1,2,0,6,0,0,6,38,5,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,99,"    Node function = traversal.getScopeRoot();
",2,0,0,1,2,0,4,2,0,8,41,4,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,100,"    if (!function.isFunction()) {
",0,0,0,2,5,0,4,0,0,5,29,4,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,101,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,114,"    Preconditions.checkNotNull(traversal);
",0,0,0,1,2,0,6,0,0,6,38,5,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,119,"    if (currentArgumentsAccess == null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,120,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,145,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,150,"    Preconditions.checkNotNull(traversal);
",0,0,0,1,2,0,6,0,0,6,38,5,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,151,"    Preconditions.checkNotNull(node);
",0,0,0,1,2,0,6,0,0,6,33,5,0.00763,0,0
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,159,"    if (currentArgumentsAccess == null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,129,160,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,107,"      tryRemoveUnconditionalBranching(n);
",0,0,0,1,2,0,4,0,0,4,35,6,0.00758,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,108,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00758,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,141,"      if (n == null) {
",2,1,0,1,3,0,0,0,0,3,16,5,0.00758,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,145,"      DiGraphNode<Node, Branch> gNode = cfg.getDirectedGraphNode(n);
",2,0,0,1,2,0,6,6,0,14,62,5,0.00758,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,147,"      if (gNode == null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.00758,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,151,"      switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.00758,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,175,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00758,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1469,"      return new ClosureOptimizePrimitives(compiler);
",2,0,0,1,2,1,0,2,0,4,47,9,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/PhaseOptimizer,129,310,"    int timeOfLastRun = lastRuns.get(currentPass);
",2,0,0,1,2,0,6,0,0,8,46,5,0.00746,0,0
defect4j,closure,com/google/javascript/jscomp/PhaseOptimizer,129,312,"    return timeOfLastRun == START_TIME
",4,1,0,0,0,1,0,0,0,5,34,5,0.00746,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,102,"      if (gNode.getAnnotation() != GraphReachability.REACHABLE ||
",4,2,0,1,3,0,4,0,0,10,59,5,0.00746,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1416,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00741,0,1
defect4j,closure,com/google/javascript/jscomp/RenameVars,129,532,"    return new VariableMap(ImmutableMap.copyOf(renameMap));
",0,0,0,2,4,1,6,2,0,8,55,5,0.00741,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,129,2011,"      return phaseOptimizer.hasScopeChanged(n);
",0,0,0,1,2,1,6,0,0,6,41,7,0.00735,0,1
defect4j,closure,com/google/javascript/jscomp/PhaseOptimizer,129,307,"    if (!inLoop) {
",2,0,0,1,3,0,0,0,0,3,14,4,0.00735,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,98,"      DiGraphNode<Node, Branch> gNode = cfg.getDirectedGraphNode(n);
",2,0,0,1,2,0,6,6,0,14,62,5,0.00735,0,0
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,99,"      if (gNode == null) { // Not in CFG.
",2,1,0,1,3,0,0,0,0,3,35,5,0.00735,0,1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,129,100,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00735,0,1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,378,"      passes.add(closureCodeRemoval);
",0,0,0,1,2,0,6,0,0,6,31,7,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,448,"      passes.add(closureOptimizePrimitives);
",0,0,0,1,2,0,6,0,0,6,38,7,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,2223,"    return options.propertyRenaming == PropertyRenamingPolicy.HEURISTIC ||
",8,2,0,0,0,1,0,0,0,10,70,4,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,129,147,"    return compiler.getCodingConvention();
",0,0,0,1,2,1,4,0,0,4,38,5,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,147,"          result = tryFoldSimpleFunctionCall(node);
",2,0,0,1,2,0,4,0,0,7,41,7,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,148,"          if (result == node) {
",4,1,0,1,3,0,0,0,0,5,21,7,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,149,"            result = tryFoldImmediateCallToBoundFunction(node);
",2,0,0,1,2,0,4,0,0,7,51,9,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,212,"    Preconditions.checkState(n.isCall());
",0,0,0,2,4,0,8,0,0,8,37,5,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,213,"    Node callTarget = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,214,"    if (callTarget != null && callTarget.isName() &&
",2,3,0,1,3,0,4,0,0,9,48,4,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,233,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,238,"    Preconditions.checkState(n.isCall());
",0,0,0,2,4,0,8,0,0,8,37,5,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,239,"    Node callTarget = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,240,"    Bind bind = getCodingConvention().describeFunctionBind(callTarget, false);
",2,0,0,2,4,0,6,2,0,11,74,4,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,241,"    if (bind != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,264,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00730,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,930,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,931,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,932,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,940,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,941,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,942,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,943,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,944,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,954,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,958,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,966,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,985,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,994,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,223,"          ReferenceCollectingCallback.Reference aliasRef =
",6,0,0,0,0,0,0,0,0,6,48,10,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,226,"          Node newNode = alias.node.cloneTree();
",6,0,0,1,2,0,2,2,0,10,38,10,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,227,"          aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);
",0,0,0,3,6,0,12,0,0,12,63,11,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,228,"          newNodes.add(newNode);
",0,0,0,1,2,0,6,0,0,6,22,11,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,459,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.10000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,460,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.10000,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,475,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,476,"      if (size > 0 && references.get(0).isInitializingDeclaration()) {
",2,2,0,3,7,0,6,0,0,10,64,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,477,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,180,"    NodeTraversal t = new NodeTraversal(compiler,
",4,0,0,0,1,0,0,4,0,8,45,4,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,182,"    t.traverseAtScope(scope);
",0,0,0,1,2,0,6,0,0,6,25,5,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,183,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,990,"            aliasingGets--;
",2,0,0,0,0,0,0,0,0,3,15,8,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,991,"            totalGets--;
",2,0,0,0,0,0,0,0,0,3,12,8,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,992,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,192,"    NodeFilter(Set<Node> newNodes) {
",4,0,0,1,3,0,0,4,0,8,32,3,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,193,"      this.newNodes = newNodes;
",4,0,0,0,0,0,0,0,0,5,25,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,194,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,198,"      if (!n.isQualifiedName()) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,199,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,203,"      for (current = n;
",4,0,0,0,1,0,0,0,0,5,17,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,204,"           current.isGetProp();
",0,0,0,1,2,0,4,0,0,4,20,6,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,211,"      return current.isName() && newNodes.contains(current);
",0,1,0,2,4,1,10,0,0,11,54,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,189,"  private static class NodeFilter implements Predicate<Node> {
",2,0,0,0,1,2,0,4,0,8,60,2,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,181,"              name.removeRef(ref);
",0,0,0,1,2,0,6,0,0,6,20,15,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,220,"        int size = aliasRefs.references.size();
",6,0,0,1,2,0,2,0,0,8,39,9,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,221,"        Set<Node> newNodes = Sets.newHashSetWithExpectedSize(size - 1);
",4,1,0,1,2,0,4,4,0,13,63,8,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,222,"        for (int i = 1; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,8,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,232,"        aliasParent.replaceChild(alias.node, IR.nullNode());
",4,0,0,2,4,0,8,0,0,12,52,9,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,233,"        compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,9,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,237,"        namespace.scanNewNodes(alias.scope, newNodes);
",4,0,0,1,2,0,6,0,0,10,46,9,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,238,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,312,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.09091,0,1
defect4j,closure,com/google/javascript/rhino/IR,130,471,"    return new Node(Token.NULL);
",4,0,0,1,2,1,0,2,0,6,28,5,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,965,"      if (refs != null && refs.remove(ref)) {
",2,2,0,2,5,0,6,0,0,10,39,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,966,"        if (ref == declaration) {
",4,1,0,1,3,0,0,0,0,5,25,7,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,978,"        switch (ref.type) {
",4,0,0,1,3,0,0,0,0,4,19,8,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,1004,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,140,"    return referenceMap.get(v);
",0,0,0,1,2,1,6,0,0,6,27,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,281,"    public void afterExitScope(NodeTraversal t, ReferenceMap referenceMap) {}
",6,0,0,2,4,1,0,4,0,11,73,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,207,"      Scope scope = alias.scope;
",6,0,0,0,0,0,0,2,0,8,26,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,208,"      Var aliasVar = scope.getVar(aliasParent.getString());
",2,0,0,2,4,0,8,2,0,12,53,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,209,"      ReferenceCollectingCallback collector =
",2,0,0,0,0,0,0,2,0,4,39,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,213,"      (new NodeTraversal(compiler, collector)).traverseAtScope(scope);
",4,0,0,3,6,0,4,2,0,10,64,7,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,215,"      ReferenceCollection aliasRefs = collector.getReferences(aliasVar);
",2,0,0,1,2,0,6,2,0,10,66,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,216,"      if (aliasRefs.isWellDefined()
",0,0,0,1,3,0,4,0,0,4,29,9,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,709,"           currentBlock = currentBlock.getParent()) {
",2,0,0,1,4,0,4,0,0,7,42,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,570,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,571,"        cc.addConstant(""null"");
",0,0,0,1,2,0,4,0,0,5,23,6,0.06667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,572,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,180,"            if (inlineAliasIfPossible(ref, namespace)) {
",0,0,0,2,5,0,6,0,0,6,44,13,0.06667,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,204,"    Node aliasParent = alias.node.getParent();
",6,0,0,1,2,0,2,2,0,10,42,4,0.06667,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,205,"    if (aliasParent.isName()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,710,"        if (currentBlock.isHoisted) {
",4,0,0,1,3,0,0,0,0,4,29,8,0.06250,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,933,"        cc.listSeparator();
",0,0,0,1,2,0,4,0,0,4,19,9,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,934,"        addExpr(n, isArrayOrFunctionArgument ? 1 : 0, Context.OTHER);
",6,0,0,1,2,0,4,0,0,10,61,9,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/Scope,130,294,"      if (!(other instanceof Var)) {
",2,0,0,2,5,0,0,2,0,5,30,5,0.03030,0,0
defect4j,closure,com/google/javascript/jscomp/Scope,130,298,"      Var otherVar = (Var) other;
",4,0,0,1,2,0,0,4,0,8,27,5,0.03030,0,0
defect4j,closure,com/google/javascript/jscomp/Scope,130,299,"      return otherVar.nameNode == nameNode;
",6,1,0,0,0,1,0,0,0,7,37,5,0.03030,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,122,"      namespace = new GlobalNamespace(compiler, externs, root);
",8,0,0,1,2,0,0,2,0,11,57,6,0.03030,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,684,"      return parent;
",2,0,0,0,0,1,0,0,0,2,14,5,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,264,"      v = externsScope.getVar(name);
",2,0,0,1,2,0,6,0,0,9,30,6,0.02632,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,431,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02326,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,124,"    add("","");
",0,0,0,1,2,0,2,0,0,3,9,5,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,125,"    maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,5,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,126,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,220,"      inExterns = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.01887,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,221,"      NodeTraversal.traverse(compiler, externsRoot, new BuildGlobalNamespace());
",0,0,0,2,4,0,8,2,0,10,74,7,0.01887,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,318,"        externsScope = t.getScope();
",2,0,0,1,2,0,4,0,0,7,28,7,0.01887,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,707,"      for (currentBlock = thatBlock;
",4,0,0,0,1,0,0,0,0,5,30,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,708,"           currentBlock != null && currentBlock != this;
",4,3,0,0,0,0,0,0,0,7,45,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,715,"      if (currentBlock == this) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,716,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,326,"        if (!initBlock.provablyExecutesBefore(
",0,0,0,0,2,0,4,0,0,5,38,7,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,607,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,5,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,608,"      if (parent.isVar()) {
",0,0,0,2,5,0,4,0,0,4,21,6,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,611,"      return NodeUtil.isForIn(parent) && parent.getFirstChild() == n;
",2,2,0,2,4,1,10,0,0,14,63,5,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,640,"  static final class BasicBlock {
",2,0,0,0,1,2,0,0,0,4,31,2,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,428,"      for (BasicBlock block = ref.getBasicBlock();
",2,0,0,1,3,0,4,2,0,8,44,6,0.01724,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,429,"           block != null; block = block.getParent()) {
",4,1,0,1,4,0,4,0,0,10,43,5,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,430,"        if (block.isFunction) {
",4,0,0,1,3,0,0,0,0,4,23,8,0.01724,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,437,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,457,"      return assignment;
",2,0,0,0,0,1,0,0,0,2,18,5,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,332,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,422,"      Reference ref = getOneAndOnlyAssignment();
",2,0,0,1,2,0,2,2,0,6,42,5,0.01695,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,423,"      if (ref == null) {
",2,1,0,1,3,0,0,0,0,3,18,5,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,445,"      Reference assignment = null;
",2,0,0,0,0,0,0,2,0,4,28,5,0.01695,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,446,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.01695,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,447,"      for (int i = 0; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.01695,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,448,"        Reference ref = references.get(i);
",2,0,0,1,2,0,6,2,0,10,34,7,0.01695,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,449,"        if (ref.isLvalue() || ref.isInitializingDeclaration()) {
",0,1,0,3,7,0,8,0,0,9,56,7,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,450,"          if (assignment == null) {
",2,1,0,1,3,0,0,0,0,3,25,9,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,451,"            assignment = ref;
",4,0,0,0,0,0,0,0,0,5,17,11,0.01695,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,621,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.01667,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,622,"      int parentType = parent.getType();
",2,0,0,1,2,0,4,0,0,6,34,6,0.01667,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,623,"      return (parentType == Token.VAR && nameNode.getFirstChild() != null)
",6,3,0,2,4,1,4,0,0,13,68,10,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,323,"      Preconditions.checkState(references.get(0).isDeclaration());
",0,0,0,3,6,0,10,0,0,10,60,6,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,324,"      BasicBlock initBlock = init.getBasicBlock();
",2,0,0,1,2,0,4,2,0,8,44,5,0.01667,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,325,"      for (int i = 1; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.01667,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,397,"        return references.get(0);
",0,0,0,1,2,1,4,0,0,4,25,8,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,483,"      validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,7,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,810,"    Ref ref = n.getDeclaration();
",2,0,0,1,2,0,4,2,0,8,29,4,0.01667,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,811,"    String fnName = ref.node.getString();
",6,0,0,1,2,0,2,2,0,10,37,4,0.01667,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,812,"    addStubsForUndeclaredProperties(
",0,0,0,0,1,0,2,0,0,2,32,5,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,814,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,311,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.01639,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,312,"      if (size == 0) {
",2,1,0,1,3,0,0,0,0,3,16,5,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,318,"      Reference init = getInitializingReference();
",2,0,0,1,2,0,2,2,0,6,44,5,0.01639,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,319,"      if (init == null) {
",2,1,0,1,3,0,0,0,0,3,19,5,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,363,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,396,"      if (isInitializingDeclarationAt(0)) {
",0,0,0,2,5,0,2,0,0,2,37,6,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,578,"      return isDeclaration() &&
",0,1,0,1,2,1,2,0,0,3,25,6,0.01613,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,358,"      Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,5,0.01613,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,359,"      if (maybeInit.isInitializingDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,44,6,0.01613,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,191,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.01587,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,128,"        validateReturn(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.01563,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,129,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01563,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,480,"    validateNodeType(Token.RETURN, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.01563,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,481,"    validateMaximumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.01563,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,482,"    if (n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.01563,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,485,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01563,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,189,"        add(""return"");
",0,0,0,1,2,1,2,0,0,3,14,6,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,190,"        if (childCount == 1) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,195,"        cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,6,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,196,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,645,"        updateFunctionDeclarationAtFunctionNode(n, canCollapseChildNames);
",0,0,0,1,2,0,6,0,0,6,66,6,0.01493,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,806,"    if (!canCollapseChildNames) {
",2,0,0,1,3,0,0,0,0,3,29,4,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,1034,"        node.addChildToBack(transform(statementNode.getReturnValue()));
",0,0,0,3,6,0,10,0,0,10,63,8,0.01471,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,161,"        validateChildless(n);
",0,0,0,1,2,0,4,0,0,4,21,6,0.01449,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,162,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01449,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,1032,"      Node node = newNode(Token.RETURN);
",6,0,0,1,2,0,2,2,0,10,34,5,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,1033,"      if (statementNode.getReturnValue() != null) {
",0,1,0,2,5,0,4,0,0,5,45,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,1036,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,130,256,"        return processReturnStatement((ReturnStatement) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,594,"      return basicBlock;
",2,0,0,0,0,1,0,0,0,2,18,5,0.01282,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,544,"      return nameNode;
",2,0,0,0,0,1,0,0,0,2,16,5,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,557,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.01266,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,558,"      Node grandparent = parent.getParent();
",2,0,0,1,2,0,4,2,0,8,38,5,0.01266,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,559,"      return DECLARATION_PARENTS.contains(parent.getType()) ||
",0,1,0,2,4,1,8,0,0,9,56,5,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,598,"      return getNode().getParent();
",0,0,0,2,4,1,4,0,0,4,29,6,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,578,"      scopeCallback.enterScope(this);
",0,0,0,1,2,0,4,0,0,4,31,7,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,1069,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,953,"          callGets++;
",2,0,0,0,0,0,0,0,0,3,11,6,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,954,"          totalGets++;
",2,0,0,0,0,0,0,0,0,3,12,6,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,955,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01020,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,1096,"      declaredType = true;
",2,0,0,0,0,0,0,0,0,4,20,5,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,1097,"      for (Name ancestor = parent; ancestor != null;
",6,1,0,0,1,0,0,2,0,9,46,5,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,1101,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00840,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,571,"        nameObj.setDeclaredType();
",0,0,0,1,2,0,4,0,0,4,26,9,0.00840,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,646,"            type = n == parent.getFirstChild()
",4,1,0,1,2,0,4,0,0,10,34,8,0.00806,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,649,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00806,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,152,"        v = t.getScope().getArgumentsVar();
",2,0,0,2,4,0,6,0,0,9,35,8,0.00794,0,0
defect4j,closure,com/google/javascript/jscomp/Scope,130,543,"    if (arguments == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00794,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,130,544,"      arguments = new Arguments(this);
",2,0,0,1,2,0,0,2,0,5,32,6,0.00794,0,0
defect4j,closure,com/google/javascript/jscomp/Scope,130,546,"    return arguments;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00794,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,130,355,"      super(
",0,0,0,0,1,0,0,0,0,0,6,3,0.00794,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,130,365,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00794,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,352,"    Node n = s.getRootNode();
",2,0,0,1,2,0,4,2,0,8,25,4,0.00787,0,0
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,353,"    if (n.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,21,5,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,356,"      if (inputId == null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,357,"        inputId = NodeUtil.getInputId(n);
",2,0,0,1,2,0,6,0,0,9,33,8,0.00787,0,0
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,359,"      sourceName = getSourceName(n);
",2,0,0,1,2,0,4,0,0,7,30,6,0.00787,0,0
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,360,"      curNode = n;
",4,0,0,0,0,0,0,0,0,5,12,6,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,361,"      pushScope(s);
",0,0,0,1,2,0,4,0,0,4,13,7,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,363,"      Node args = n.getFirstChild().getNext();
",2,0,0,2,4,0,6,2,0,10,40,6,0.00787,0,0
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,364,"      Node body = args.getNext();
",2,0,0,1,2,0,4,2,0,8,27,6,0.00787,0,0
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,365,"      traverseBranch(args, n);
",0,0,0,1,2,0,6,0,0,6,24,7,0.00787,0,0
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,366,"      traverseBranch(body, n);
",0,0,0,1,2,0,6,0,0,6,24,7,0.00787,0,0
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,368,"      popScope();
",0,0,0,1,2,0,2,0,0,2,11,7,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,369,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,372,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00787,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,176,"        List<Ref> refs = Lists.newArrayList(name.getRefs());
",2,0,0,2,4,0,8,4,0,14,52,8,0.00769,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,177,"        for (Ref ref : refs) {
",4,0,0,1,3,0,0,2,0,6,22,8,0.00769,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,178,"          if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {
",12,2,0,2,5,0,2,0,0,16,59,10,0.00769,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,184,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00769,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,130,304,"          return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00763,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,499,"      this(nameNode, basicBlock, t.getScope(), t.getInput().getInputId());
",4,0,0,4,8,0,10,0,0,14,68,5,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,500,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,522,"        BasicBlock basicBlock, Scope scope, InputId inputId) {
",6,0,0,0,2,0,0,6,0,12,54,4,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,523,"      this.nameNode = nameNode;
",4,0,0,0,0,0,0,0,0,5,25,5,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,524,"      this.basicBlock = basicBlock;
",4,0,0,0,0,0,0,0,0,5,29,5,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,525,"      this.scope = scope;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,526,"      this.inputId = inputId;
",4,0,0,0,0,0,0,0,0,5,23,5,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,527,"      this.sourceFile = nameNode.getStaticSourceFile();
",2,0,0,1,2,0,4,0,0,7,49,5,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,528,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,488,"    private static final Set<Integer> DECLARATION_PARENTS =
",2,0,0,0,0,3,0,4,0,9,55,3,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,157,"        addReference(v, new Reference(n, t, blockStack.peek()));
",4,0,0,3,6,0,8,2,0,14,56,9,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,241,"    ReferenceCollection referenceInfo = referenceMap.get(v);
",2,0,0,1,2,0,6,2,0,10,56,4,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,242,"    if (referenceInfo == null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,243,"      referenceInfo = new ReferenceCollection();
",2,0,0,1,2,0,0,2,0,5,42,6,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,244,"      referenceMap.put(v, referenceInfo);
",0,0,0,1,2,0,8,0,0,8,35,7,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,248,"    referenceInfo.add(reference);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,249,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,288,"  static class ReferenceCollection implements Iterable<Reference> {
",2,0,0,0,1,1,0,4,0,7,65,2,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,290,"    List<Reference> references = Lists.newArrayList();
",2,0,0,1,2,0,4,4,0,10,50,3,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,298,"      references.add(reference);
",0,0,0,1,2,0,6,0,0,6,26,6,0.00730,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,299,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00730,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,187,"      behavior.afterExitScope(t, new ReferenceMapWrapper(referenceMap));
",2,0,0,2,4,0,6,2,0,10,66,7,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,674,"        int pType = root.getParent().getType();
",2,0,0,2,4,0,6,0,0,8,39,8,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,675,"        this.isLoop = pType == Token.DO ||
",8,3,0,0,0,0,0,0,0,12,34,7,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,678,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,258,"    public ReferenceMapWrapper(Map<Var, ReferenceCollection> referenceMap) {
",4,0,0,1,3,1,0,6,0,11,72,3,0.00719,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,259,"      this.referenceMap = referenceMap;
",4,0,0,0,0,0,0,0,0,5,33,5,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,260,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00719,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,98,"      Predicate<Var> varFilter) {
",2,0,0,0,2,0,0,4,0,6,27,3,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,61,"  private final Map<Var, ReferenceCollection> referenceMap =
",2,0,0,0,0,2,0,6,0,10,58,2,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,67,"  private final Deque<BasicBlock> blockStack = new ArrayDeque<BasicBlock>();
",2,0,0,1,2,2,0,8,0,12,74,2,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,99,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,100,"    this.behavior = behavior;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,101,"    this.varFilter = varFilter;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,102,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,279,"  static Behavior DO_NOTHING_BEHAVIOR = new Behavior() {
",2,0,0,1,3,1,0,4,0,7,54,2,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,149,"    if (n.isName()) {
",0,0,0,2,5,0,4,0,0,4,17,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,151,"      if (n.getString().equals(""arguments"")) {
",0,0,0,3,7,0,6,0,0,7,40,7,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,154,"        v = t.getScope().getVar(n.getString());
",2,0,0,3,6,0,10,0,0,13,39,8,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,156,"      if (v != null && varFilter.apply(v)) {
",2,2,0,2,5,0,6,0,0,10,38,6,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,161,"    if (isBlockBoundary(n, parent)) {
",0,0,0,2,5,0,6,0,0,6,33,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,164,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,171,"    Node n = t.getScope().getRootNode();
",2,0,0,2,4,0,6,2,0,10,36,4,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,172,"    BasicBlock parent = blockStack.isEmpty() ? null : blockStack.peek();
",2,0,0,2,4,0,8,2,0,12,68,4,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,173,"    blockStack.push(new BasicBlock(parent, n));
",4,0,0,2,4,0,4,2,0,10,43,5,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,174,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,181,"    blockStack.pop();
",0,0,0,1,2,0,4,0,0,4,17,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,182,"    if (t.getScope().isGlobal()) {
",0,0,0,3,7,0,6,0,0,6,30,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,189,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,198,"    if (isBlockBoundary(n, parent)) {
",0,0,0,2,5,0,6,0,0,6,33,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,201,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,208,"    if (parent != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,209,"      switch (parent.getType()) {
",0,0,0,2,5,0,4,0,0,4,27,7,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,236,"    return n.isCase();
",0,0,0,1,2,1,4,0,0,4,18,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,665,"    BasicBlock(BasicBlock parent, Node root) {
",6,0,0,1,3,0,0,4,0,10,42,3,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,666,"      this.parent = parent;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,669,"      this.isHoisted = NodeUtil.isHoistedFunctionDeclaration(root);
",2,0,0,1,2,0,6,0,0,9,61,5,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,671,"      this.isFunction = root.isFunction();
",2,0,0,1,2,0,4,0,0,7,36,5,0.00714,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,673,"      if (root.getParent() != null) {
",0,1,0,2,5,0,4,0,0,5,31,5,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,681,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00714,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,279,"  static Behavior DO_NOTHING_BEHAVIOR = new Behavior() {
",2,0,0,1,3,1,0,4,0,7,54,2,0.00714,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,2188,"    return this.getType() == Token.CASE;
",4,1,0,1,2,1,2,0,0,7,36,4,0.00699,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,675,"            type = Ref.Type.ALIASING_GET;
",8,0,0,0,0,0,0,0,0,9,29,8,0.00685,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,185,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00662,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,718,"        Node prev = getChildBefore(child);
",2,0,0,1,2,0,4,2,0,8,34,6,0.00641,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,719,"        prev.next = newChild;
",6,0,0,0,0,0,0,0,0,7,21,6,0.00641,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,170,"      endLine();
",0,0,0,1,2,0,2,0,0,2,10,7,0.00625,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,397,"            cc.maybeLineBreak();
",0,0,0,1,2,0,4,0,0,4,20,11,0.00625,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,130,663,"        Node next = current.getNext();
",2,0,0,1,2,0,4,2,0,8,30,7,0.00592,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,130,664,"        if (NodeUtil.isFunctionDeclaration(current)) {
",0,0,0,2,5,0,6,0,0,6,46,8,0.00592,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,130,675,"          previous = current;
",4,0,0,0,0,0,0,0,0,5,19,9,0.00592,0,0
defect4j,closure,com/google/javascript/jscomp/Normalize,130,677,"        current = next;
",4,0,0,0,0,0,0,0,0,5,15,7,0.00592,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,130,678,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00592,0,1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,130,165,"        n.putBooleanProp(Node.FREE_CALL, true);
",4,0,0,1,2,0,4,0,0,9,39,8,0.00585,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,372,"                isSet = true;
",2,0,0,0,0,0,0,0,0,4,13,9,0.00585,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,373,"                type = Name.Type.FUNCTION;
",8,0,0,0,0,0,0,0,0,9,26,9,0.00585,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,374,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00585,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,1320,"    Preconditions.checkArgument(level >= 0);
",2,1,0,1,2,0,4,0,0,7,40,5,0.00571,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,1321,"    Node node = this;
",2,0,0,0,0,0,0,2,0,4,17,4,0.00571,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,1322,"    while (node != null && level-- > 0) {
",4,3,0,1,3,0,0,0,0,8,37,4,0.00571,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,1323,"      node = node.getParent();
",2,0,0,1,2,0,4,0,0,7,24,6,0.00571,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,1325,"    return node;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00571,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,743,"        node.addChildToBack(transform(child));
",0,0,0,2,4,0,8,0,0,8,38,8,0.00571,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,744,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00571,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,130,303,"      return nameNode.hashCode();
",0,0,0,1,2,1,4,0,0,4,27,6,0.00568,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,574,"    Preconditions.checkState(curNode != null);
",2,1,0,1,2,0,4,0,0,7,42,5,0.00556,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,575,"    scopes.push(s);
",0,0,0,1,2,0,6,0,0,6,15,5,0.00556,0,0
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,576,"    cfgs.push(null);
",0,0,0,1,2,0,4,0,0,4,16,5,0.00556,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,577,"    if (scopeCallback != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00556,0,1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,130,580,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00556,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,130,3097,"        return parent;
",2,0,0,0,0,1,0,0,0,2,14,5,0.00535,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,949,"          aliasingGets++;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00532,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,950,"          totalGets++;
",2,0,0,0,0,0,0,0,0,3,12,6,0.00532,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,951,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00532,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,280,"      validateStatement(c);
",0,0,0,1,2,0,4,0,0,4,21,7,0.00526,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,1499,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00500,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,521,"        node.addChildToBack(transform((AstNode)child));
",2,0,0,3,6,0,6,2,0,10,47,8,0.00483,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,522,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00483,0,1
defect4j,closure,com/google/javascript/jscomp/Scope,130,433,"    return rootNode;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00478,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,371,"                    NodeUtil.isFunctionExpression(parent)) return;
",0,0,0,1,3,1,6,0,0,6,46,11,0.00472,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,260,"        validateCall(n);
",0,0,0,1,2,0,4,0,0,4,16,6,0.00469,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,261,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00469,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,374,"    validateNodeType(Token.CALL, n);
",4,0,0,1,2,0,4,0,0,8,32,5,0.00469,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,375,"    validateMinimumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.00469,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,376,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,0.00469,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,377,"      validateExpression(c);
",0,0,0,1,2,0,4,0,0,4,22,7,0.00469,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,379,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00469,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,130,1611,"    return n.isFor()
",0,0,0,1,2,1,4,0,0,4,16,6,0.00467,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,193,"      append("" "");
",0,0,0,1,2,0,2,0,0,3,12,7,0.00465,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,528,"        if (isIndirectEval(first)
",0,0,0,1,3,0,4,0,0,4,25,7,0.00463,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,534,"          addExpr(first, NodeUtil.precedence(type), context);
",0,0,0,2,4,0,12,0,0,12,51,8,0.00463,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,536,"        add(""("");
",0,0,0,1,3,0,2,0,0,3,9,6,0.00463,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,537,"        addList(first.getNext());
",0,0,0,2,4,0,6,0,0,6,25,6,0.00463,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,538,"        add("")"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.00463,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,539,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00463,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,812,"    return n.isName() && ""eval"".equals(n.getString()) &&
",0,1,0,3,6,1,10,0,0,12,52,4,0.00463,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,2240,"    return this.getType() == Token.FOR;
",4,1,0,1,2,1,2,0,0,7,35,4,0.00461,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1417,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1433,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1446,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,2132,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,2133,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,2134,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,2135,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,121,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,133,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,1,0,1
defect4j,closure,com/google/javascript/rhino/InputId,131,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1156,"              appendHexJavaScriptRepresentation(sb, c);
",0,0,0,1,2,0,6,0,0,6,41,12,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1254,"      appendHexJavaScriptRepresentation(c, sb);
",0,0,0,1,2,0,6,0,0,6,41,7,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1258,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1259,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1271,"    if (Character.isSupplementaryCodePoint(codePoint)) {
",0,0,0,2,5,0,6,0,0,6,52,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1281,"    out.append(""\\u"")
",0,0,0,1,2,0,4,0,0,5,17,9,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1286,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,118,"        case QUOTED_PROP:        return ""quoted"";
",2,0,0,0,0,1,0,0,0,3,41,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,998,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1003,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1004,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1005,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1012,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1013,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1017,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1018,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1020,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1021,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1022,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1023,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1025,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1024,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1027,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,343,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1517,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,2434,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,195,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.44444,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,112,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,132,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,860,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,861,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,862,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,865,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,866,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,867,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,868,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,871,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,872,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,923,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,959,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,960,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,961,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,962,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,967,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,968,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,969,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,970,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,971,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,972,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,973,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,975,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,977,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,980,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,981,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,986,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,311,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.40000,0,1
defect4j,closure,com/google/javascript/jscomp/SourceFile,131,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,942,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.33333,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,943,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.33333,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,160,"                case 'e': X=""default"";id=true; break partial;
",6,0,0,0,0,0,0,0,0,11,45,8,0.33333,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,201,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,954,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.26667,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.25000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,956,"      sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,9,0.25000,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,64,"            case 2: c=s.charAt(1);
",2,0,0,1,2,0,4,0,0,7,22,8,0.23529,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,65,"                if (c=='f') {
",2,1,0,1,3,0,0,0,0,4,13,8,0.23529,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,67,"                } else if (c=='n') {
",2,1,0,1,4,0,0,0,0,4,20,9,0.23529,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,69,"                } else if (c=='o') {
",2,1,0,1,4,0,0,0,0,4,20,10,0.23529,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,944,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,158,"            case 7: switch (s.charAt(1)) {
",0,0,0,2,5,0,4,0,0,4,30,9,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,930,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.19048,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,931,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.19048,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,932,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.19048,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,940,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.19048,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,941,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.19048,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,958,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.19048,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,966,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.19048,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,985,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.19048,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,994,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.19048,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,61,"          n.removeChild(left);
",0,0,0,1,2,0,6,0,0,6,20,8,0.10000,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,62,"          n.removeChild(right);
",0,0,0,1,2,0,6,0,0,6,21,8,0.10000,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,63,"          parent.replaceChild(n, IR.getprop(left, right));
",0,0,0,2,4,0,14,0,0,14,48,8,0.10000,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,64,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,8,0.10000,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,57,"        Node left = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,5,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,58,"        Node right = left.getNext();
",2,0,0,1,2,0,4,2,0,8,28,5,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,59,"        if (right.isString() &&
",0,1,0,1,3,0,4,0,0,5,23,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,51,"          n.putBooleanProp(Node.QUOTED_PROP, false);
",4,0,0,1,2,0,4,0,0,9,42,8,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,52,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,8,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,50,"        if (NodeUtil.isValidPropertyName(n.getString())) {
",0,0,0,3,7,0,8,0,0,8,50,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,670,"          add(""("");
",0,0,0,1,3,0,2,0,0,3,9,9,0.05000,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,707,"          add("")"");
",0,0,0,1,3,0,2,0,0,3,9,9,0.05000,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,791,"    return len > 0 && s.charAt(0) != '0';
",2,3,0,1,2,1,4,0,0,10,37,4,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,2444,"    return TokenStream.isJSIdentifier(name) &&
",0,1,0,1,2,1,6,0,0,7,42,4,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,2478,"    return isValidSimpleName(name);
",0,0,0,1,2,1,4,0,0,4,31,5,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,35,"  ConvertToDottedProperties(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,54,2,0.03509,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,36,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.03509,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,37,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03509,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,41,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.03509,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03509,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,46,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.03509,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,68,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03509,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,650,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,652,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,653,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,698,"                addExpr(c, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,29,15,0.02381,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,788,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.02326,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,805,"    return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,5,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,694,"              double d = getSimpleNumber(key);
",2,0,0,1,2,0,4,0,0,6,32,13,0.02083,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,695,"              if (!Double.isNaN(d)) {
",0,0,0,2,5,0,6,0,0,7,23,12,0.02083,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,734,"        n.getString();
",0,0,0,1,2,0,4,0,0,4,14,9,0.02000,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,737,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,786,"      char c = s.charAt(index);
",2,0,0,1,2,0,6,0,0,8,25,7,0.01961,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,787,"      if (c < '0' || c > '9') {
",4,3,0,1,3,0,0,0,0,9,25,6,0.01961,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,784,"    int len = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.01923,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,785,"    for (int index = 0; index < len; index++) {
",8,1,0,1,3,0,0,0,0,10,43,4,0.01923,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,795,"    if (isSimpleNumber(s)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.01923,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,543,"        ret = transform(n);
",2,0,0,1,2,0,4,0,0,7,19,8,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,544,"        ret.putBooleanProp(Node.QUOTED_PROP, true);
",4,0,0,1,2,0,4,0,0,9,43,9,0.01754,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,94,"                } break partial;
",2,0,0,0,1,0,0,0,0,2,16,8,0.01563,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,539,"      } else if (n instanceof NumberLiteral) {
",2,0,0,1,4,0,0,2,0,4,40,7,0.01515,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,199,"        if (
",0,0,0,0,1,0,0,0,0,0,4,3,0.01238,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,73,"            case 3: switch (s.charAt(0)) {
",0,0,0,2,5,0,4,0,0,4,30,9,0.00971,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,995,"      switch (s.charAt(i)) {
",0,0,0,2,5,0,6,0,0,6,22,7,0.00966,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1052,"      char c = s.charAt(i);
",2,0,0,1,2,0,6,0,0,8,21,7,0.00955,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1053,"      switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,6,0.00955,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1139,"          if (outputCharsetEncoder != null) {
",2,1,0,1,3,0,0,0,0,3,35,7,0.00955,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1150,"            if (c > 0x1f && c < 0x7f) {
",4,3,0,1,3,0,0,0,0,7,27,9,0.00955,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1151,"              sb.append(c);
",0,0,0,1,2,0,6,0,0,6,13,12,0.00955,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,981,"      String cached = ESCAPED_JS_STRINGS.get(s);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00915,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,982,"      if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00915,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,983,"        cached = jsString(n.getString(), useSlashV);
",2,0,0,2,4,0,8,0,0,11,44,8,0.00915,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,984,"        ESCAPED_JS_STRINGS.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,34,9,0.00915,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,986,"      add(cached);
",0,0,0,1,2,0,4,0,0,4,12,7,0.00915,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1011,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.00915,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1012,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.00915,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1013,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.00915,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,976,"    String s = n.getString();
",2,0,0,1,2,0,4,2,0,8,25,4,0.00913,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,977,"    boolean useSlashV = n.getBooleanProp(Node.SLASH_V);
",6,0,0,1,2,0,4,0,0,10,51,5,0.00913,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,978,"    if (useSlashV) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.00913,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,988,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00913,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,991,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.00913,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,994,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00913,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1003,"    if (preferSingleQuotes ?
",2,0,0,0,1,0,0,0,0,2,24,5,0.00913,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1016,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.00913,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1049,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.00905,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1050,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00905,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1051,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00905,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1161,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00905,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1162,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00905,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,187,"        return id;
",2,0,0,0,0,1,0,0,0,2,10,4,0.00686,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,58,"        boolean id = false;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00671,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,59,"        String s = name;
",4,0,0,0,0,0,0,2,0,6,16,4,0.00671,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,61,"            String X = null;
",2,0,0,0,0,0,0,2,0,4,16,6,0.00671,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,63,"            partial: switch (s.length()) {
",2,0,0,2,5,0,4,0,0,6,30,6,0.00671,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,185,"            if (X!=null && X!=s && !X.equals(s)) return false;
",6,4,0,2,4,1,6,0,0,18,50,6,0.00671,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,205,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00659,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,198,"      for (int i = 1; i < length; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.00658,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,191,"      int length = s.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.00656,0,0
defect4j,closure,com/google/javascript/rhino/TokenStream,131,193,"      if (length == 0 ||
",2,2,0,0,1,0,0,0,0,4,18,4,0.00656,0,1
defect4j,closure,com/google/javascript/rhino/IR,131,323,"    Preconditions.checkState(mayBeExpression(target));
",0,0,0,2,4,0,8,0,0,8,50,5,0.00602,0,0
defect4j,closure,com/google/javascript/rhino/IR,131,324,"    Preconditions.checkState(prop.isString());
",0,0,0,2,4,0,8,0,0,8,42,5,0.00602,0,0
defect4j,closure,com/google/javascript/rhino/IR,131,325,"    return new Node(Token.GETPROP, target, prop);
",8,0,0,1,2,1,0,2,0,10,45,5,0.00602,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,2172,"      case Token.ADD: return ""+"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.00588,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,1204,"      case Token.ADD:    return 11;
",4,0,0,0,0,1,0,0,0,4,29,6,0.00578,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,1046,"      String value = literalNode.getValue();
",2,0,0,1,2,0,4,2,0,8,38,5,0.00576,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,1047,"      Node n = newStringNode(value);
",2,0,0,1,2,0,4,2,0,8,30,5,0.00576,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,1048,"      if (value.indexOf('\u000B') != -1) {
",0,1,0,2,5,0,4,0,0,7,36,5,0.00576,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,1070,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,5,0.00576,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,131,260,"        return processStringLiteral((StringLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00576,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,1483,"    return IR.string(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,53,5,0.00568,0,0
defect4j,closure,com/google/javascript/rhino/IR,131,447,"    return Node.newString(s);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00520,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,504,"    return new StringNode(Token.STRING, str);
",6,0,0,1,2,1,0,2,0,8,41,5,0.00519,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,1312,"        return Token.ADD;
",4,0,0,0,0,1,0,0,0,4,17,6,0.00472,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,483,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.00467,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,486,"        addExpr(first, NodeUtil.precedence(type), context);
",0,0,0,2,4,0,12,0,0,12,51,6,0.00467,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,487,"        add(""["");
",0,0,0,1,3,0,2,0,0,3,9,6,0.00467,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,488,"        add(first.getNext());
",0,0,0,2,4,0,6,0,0,6,21,6,0.00467,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,489,"        add(""]"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.00467,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,490,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00467,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,240,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.00370,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,241,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00370,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,684,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.00352,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,131,234,"        return processElementGet((ElementGet) node);
",2,0,0,2,4,1,2,2,0,6,44,6,0.00352,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,691,"              add(key);
",0,0,0,1,2,0,4,0,0,4,9,13,0.00350,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,170,"        double thisValue = getDouble();
",2,0,0,1,2,0,2,0,0,4,31,8,0.00332,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,171,"        double thatValue = ((NumberNode) node).getDouble();
",4,0,0,3,6,0,2,2,0,8,51,8,0.00332,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,172,"        if (thisValue == thatValue) {
",4,1,0,1,3,0,0,0,0,5,29,7,0.00332,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,174,"          return (thisValue != 0.0) || (1/thisValue == 1/thatValue);
",6,5,0,2,4,1,0,0,0,11,58,9,0.00332,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,168,"      boolean equivalent = super.isEquivalentTo(node, compareJsType, recurse);
",10,0,0,1,2,0,0,0,0,10,72,6,0.00331,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,169,"      if (equivalent) {
",2,0,0,1,3,0,0,0,0,2,17,5,0.00331,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,245,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,246,"        cc.addNumber(n.getDouble());
",0,0,0,2,4,0,8,0,0,8,28,6,0.00323,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,247,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,252,"      long value = (long) x;
",4,0,0,1,2,0,0,0,0,4,22,8,0.00323,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,253,"      long mantissa = value;
",4,0,0,0,0,0,0,0,0,4,22,8,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,254,"      int exp = 0;
",2,0,0,0,0,0,0,0,0,2,12,8,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,255,"      if (Math.abs(x) >= 100) {
",0,1,0,2,5,0,6,0,0,7,25,7,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,261,"      if (exp > 2) {
",2,1,0,1,3,0,0,0,0,3,14,7,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,264,"        long valueAbs = Math.abs(value);
",2,0,0,1,2,0,6,0,0,8,32,10,0.00323,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,265,"        if (Long.toHexString(valueAbs).length() + 2 <
",0,2,0,2,5,0,8,0,0,10,45,9,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,270,"          addConstant(Long.toString(value));
",0,0,0,2,4,0,8,0,0,8,34,12,0.00323,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,273,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,251,"    } else if ((long) x == x) {
",4,1,0,2,6,0,0,0,0,5,27,5,0.00323,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,243,"    char prev = getLastChar();
",2,0,0,1,2,0,2,0,0,4,26,5,0.00322,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,244,"    boolean negativeZero = isNegativeZero(x);
",2,0,0,1,2,0,4,0,0,6,41,5,0.00322,0,0
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,245,"    if ((x < 0 || negativeZero) && prev == '-') {
",6,4,0,2,5,0,0,0,0,11,45,4,0.00322,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,249,"    if (negativeZero) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00322,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,276,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00322,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,283,"    return x == 0.0 && Math.copySign(1, x) == -1.0;
",2,3,0,1,2,1,6,0,0,12,47,4,0.00322,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,681,"            Preconditions.checkState(c.isStringKey());
",0,0,0,2,4,0,8,0,0,8,42,11,0.00319,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,682,"            String key = c.getString();
",2,0,0,1,2,0,4,2,0,8,27,10,0.00319,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,685,"            if (!c.isQuotedString() &&
",0,1,0,1,3,0,4,0,0,6,26,10,0.00319,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,701,"            add("":"");
",0,0,0,1,2,0,2,0,0,3,9,11,0.00319,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,702,"            addExpr(c.getFirstChild(), 1, Context.OTHER);
",4,0,0,2,4,0,6,0,0,10,45,11,0.00319,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,232,"        validateNumber(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.00300,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,233,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00300,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,649,"    validateNodeType(Token.NUMBER, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.00300,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,650,"    validateChildCount(n, 0);
",0,0,0,1,2,0,4,0,0,4,25,5,0.00300,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,653,"      n.getDouble();
",0,0,0,1,2,0,4,0,0,4,14,7,0.00300,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,656,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00300,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,657,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00300,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,279,"    add(newcode);
",0,0,0,1,2,0,4,0,0,4,13,5,0.00297,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,131,280,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00297,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1538,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00292,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,158,"      return this.number;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00286,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,674,"          if (c != first) {
",4,1,0,1,3,0,0,0,0,5,17,8,0.00283,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,678,"          if (c.isGetterDef() || c.isSetterDef()) {
",0,1,0,3,7,0,8,0,0,9,41,8,0.00283,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1514,"        int quoted1 = this.getIntProp(QUOTED_PROP);
",2,0,0,1,2,0,4,0,0,6,43,10,0.00281,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1515,"        int quoted2 = node.getIntProp(QUOTED_PROP);
",2,0,0,1,2,0,6,0,0,8,43,10,0.00281,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1516,"        if (quoted1 != quoted2) {
",4,1,0,1,3,0,0,0,0,5,25,9,0.00281,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,1491,"    return IR.number(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,53,5,0.00278,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,936,"      return newNumberNode(literalNode.getNumber());
",0,0,0,2,4,1,6,0,0,6,46,6,0.00278,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,131,250,"        return processNumberLiteral((NumberLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00278,0,0
defect4j,closure,com/google/javascript/rhino/IR,131,455,"    return Node.newNumber(d);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00269,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,496,"    return new NumberNode(number);
",2,0,0,1,2,1,0,2,0,4,30,5,0.00269,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,147,"      super(Token.NUMBER);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00269,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,148,"      this.number = number;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00269,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,149,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00269,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,203,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.00262,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,204,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00262,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,997,"      Node node = transform(exprNode.getExpression());
",2,0,0,2,4,0,6,2,0,10,48,5,0.00250,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,131,998,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00250,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,131,244,"        return processParenthesizedExpression((ParenthesizedExpression) node);
",2,0,0,2,4,1,2,2,0,6,70,6,0.00250,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,656,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.00242,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,658,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.00242,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,659,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00242,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1513,"      if (type == Token.STRING_KEY) {
",6,1,0,1,3,0,0,0,0,7,31,7,0.00239,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,112,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,132,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,860,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,861,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,862,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,865,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,866,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,867,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,868,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,871,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,872,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,923,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,944,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,954,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,959,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,960,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,961,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,962,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,967,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,968,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,969,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,970,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,971,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,972,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,973,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,975,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,977,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,980,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,981,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,986,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,311,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/SourceFile,132,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,512,"          cc.addOp(o, false);
",0,0,0,1,2,0,6,0,0,7,19,9,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,513,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,9,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,515,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,930,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.50000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,931,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.50000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,932,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,940,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.50000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,941,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.50000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,942,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.50000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,943,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,958,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,966,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,985,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,994,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,2155,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1356,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,776,"          Node lhs = thenOp.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,10,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,777,"          if (areNodesEqualForInlining(lhs, elseOp.getFirstChild()) &&
",0,1,0,2,5,0,8,0,0,9,60,10,0.33333,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,784,"            n.removeChild(cond);
",0,0,0,1,2,0,6,0,0,6,20,13,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,785,"            Node assignName = thenOp.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,786,"            Node thenExpr = thenOp.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,787,"            Node elseExpr = elseOp.getLastChild();
",2,0,0,1,2,0,4,2,0,8,38,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,788,"            elseOp.removeChild(elseExpr);
",0,0,0,1,2,0,6,0,0,6,29,13,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,790,"            Node hookNode = IR.hook(cond, thenExpr, elseExpr).srcref(n);
",2,0,0,2,4,0,14,2,0,18,60,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,791,"            Node assign = new Node(thenOp.getType(), assignName, hookNode)
",6,0,0,2,4,0,4,4,0,14,62,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,793,"            Node expr = NodeUtil.newExpr(assign);
",2,0,0,1,2,0,6,2,0,10,37,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,794,"            parent.replaceChild(n, expr);
",0,0,0,1,2,0,8,0,0,8,29,13,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,795,"            reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,13,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,797,"            return expr;
",2,0,0,0,0,1,0,0,0,2,12,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,132,111,"    return NodeUtil.mayEffectMutableState(n, compiler);
",0,0,0,1,2,1,8,0,0,8,51,5,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,775,"        if (NodeUtil.isAssignmentOp(thenOp)) {
",0,0,0,2,5,0,6,0,0,6,38,9,0.20000,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,1193,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,771,"      Node thenOp = getBlockExpression(thenBranch).getFirstChild();
",2,0,0,2,4,0,6,2,0,10,61,6,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,772,"      Node elseOp = getBlockExpression(elseBranch).getFirstChild();
",2,0,0,2,4,0,6,2,0,10,61,6,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,773,"      if (thenOp.getType() == elseOp.getType()) {
",0,1,0,3,7,0,8,0,0,9,43,6,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,503,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,7,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,504,"        String o = type == Token.INC ? ""++"" : ""--"";
",8,1,0,0,0,0,0,2,0,13,43,6,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,505,"        int postProp = n.getIntProp(Node.INCRDECR_PROP);
",6,0,0,1,2,0,4,0,0,10,48,7,0.12500,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,508,"        if (postProp != 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.12500,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1166,"          if (!validAssignmentTarget(operand)) {
",0,0,0,2,5,0,4,0,0,5,38,10,0.11111,0,0
defect4j,closure,com/google/javascript/rhino/IR,132,341,"    Preconditions.checkState(mayBeExpression(cond));
",0,0,0,2,4,0,8,0,0,8,48,5,0.10000,0,0
defect4j,closure,com/google/javascript/rhino/IR,132,342,"    Preconditions.checkState(mayBeExpression(trueval));
",0,0,0,2,4,0,8,0,0,8,51,5,0.10000,0,0
defect4j,closure,com/google/javascript/rhino/IR,132,343,"    Preconditions.checkState(mayBeExpression(falseval));
",0,0,0,2,4,0,8,0,0,8,52,5,0.10000,0,0
defect4j,closure,com/google/javascript/rhino/IR,132,344,"    return new Node(Token.HOOK, cond, trueval, falseval);
",10,0,0,1,2,1,0,2,0,12,53,5,0.10000,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,769,"    return checkForStateChangeHelper(n, true, compiler);
",0,0,0,1,2,1,6,0,0,7,52,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,240,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,241,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,1184,"      case Token.HOOK:   return 2;  // ?: operator
",4,0,0,0,0,1,0,0,0,4,44,6,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,278,"        Preconditions.checkState(childCount == 3);
",2,1,0,1,2,0,4,0,0,7,42,7,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,279,"        int p = NodeUtil.precedence(type);
",2,0,0,1,2,0,6,0,0,8,34,7,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,280,"        addExpr(first, p + 1, context);
",2,1,0,1,2,0,6,0,0,9,31,7,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,281,"        cc.addOp(""?"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,282,"        addExpr(first.getNext(), 1, Context.OTHER);
",4,0,0,2,4,0,6,0,0,10,43,7,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,283,"        cc.addOp("":"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,284,"        addExpr(last, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,32,7,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,285,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,483,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,486,"        addExpr(first, NodeUtil.precedence(type), context);
",0,0,0,2,4,0,12,0,0,12,51,6,0.08333,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,487,"        add(""["");
",0,0,0,1,3,0,2,0,0,3,9,6,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,488,"        add(first.getNext());
",0,0,0,2,4,0,6,0,0,6,21,6,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,489,"        add(""]"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,490,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,223,"        validateTrinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,21,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,224,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,755,"    validateChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,25,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,756,"    Node first = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,4,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,757,"    validateExpression(first);
",0,0,0,1,2,0,4,0,0,4,26,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,758,"    validateExpression(first.getNext());
",0,0,0,2,4,0,6,0,0,6,36,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,759,"    validateExpression(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,760,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,655,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,238,"        return processConditionalExpression((ConditionalExpression) node);
",2,0,0,2,4,1,2,2,0,6,66,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,684,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.05556,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,234,"        return processElementGet((ElementGet) node);
",2,0,0,2,4,1,2,2,0,6,44,6,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,913,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.04000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,989,"        Node first = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,8,0.04000,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,990,"        if (first.isReturn()) {
",0,0,0,2,5,0,4,0,0,4,23,9,0.04000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1479,"    return new Node(type, child1, child2, child3).clonePropsFrom(templateNode);
",8,0,0,2,4,1,4,2,0,14,75,5,0.04000,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,963,"    Preconditions.checkState(isFoldableExpressBlock(n));
",0,0,0,2,4,0,8,0,0,8,52,5,0.03846,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,964,"    return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,5,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,755,"    return IR.exprResult(child).srcref(child);
",0,0,0,2,4,1,10,0,0,10,42,5,0.03571,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,749,"    if (isReturnExpressBlock(thenBranch) && isReturnExpressBlock(elseBranch)) {
",0,1,0,3,7,0,8,0,0,9,75,4,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,767,"    boolean thenBranchIsExpressionBlock = isFoldableExpressBlock(thenBranch);
",2,0,0,1,2,0,4,0,0,6,73,5,0.03226,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,768,"    boolean elseBranchIsExpressionBlock = isFoldableExpressBlock(elseBranch);
",2,0,0,1,2,0,4,0,0,6,73,5,0.03226,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,770,"    if (thenBranchIsExpressionBlock && elseBranchIsExpressionBlock) {
",4,1,0,1,3,0,0,0,0,5,65,4,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,987,"    if (n.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,988,"      if (n.hasOneChild()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,996,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,736,"    tryRemoveRepeatedStatements(n);
",0,0,0,1,2,0,4,0,0,4,31,5,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,740,"    if (cond.isNot() && !consumesDanglingElse(elseBranch)) {
",0,1,0,3,7,0,8,0,0,10,56,4,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,893,"    Preconditions.checkState(n.isIf());
",0,0,0,2,4,0,8,0,0,8,35,5,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,895,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,896,"    if (!NodeUtil.isStatementBlock(parent)) {
",0,0,0,2,5,0,6,0,0,7,41,4,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,902,"    Node cond = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,4,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,903,"    Node trueBranch = cond.getNext();
",2,0,0,1,2,0,4,2,0,8,33,4,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,904,"    Node falseBranch = trueBranch.getNext();
",2,0,0,1,2,0,4,2,0,8,40,4,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,905,"    Preconditions.checkNotNull(trueBranch);
",0,0,0,1,2,0,6,0,0,6,39,5,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,906,"    Preconditions.checkNotNull(falseBranch);
",0,0,0,1,2,0,6,0,0,6,40,5,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,909,"      Node lastTrue = trueBranch.getLastChild();
",2,0,0,1,2,0,4,2,0,8,42,6,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,910,"      Node lastFalse = falseBranch.getLastChild();
",2,0,0,1,2,0,4,2,0,8,44,6,0.03125,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,911,"      if (lastTrue == null || lastFalse == null
",4,4,0,0,1,0,0,0,0,8,41,6,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,920,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,469,"      validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,7,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,842,"        node.addChildToBack(transformBlock(statementNode.getElsePart()));
",0,0,0,3,6,0,10,0,0,10,65,8,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,132,74,"    Preconditions.checkNotNull(compiler);
",0,0,0,1,2,0,6,0,0,6,37,5,0.03030,0,0
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,132,75,"    return compiler.areNodesEqualForInlining(n1, n2);
",0,0,0,1,2,1,8,0,0,8,49,5,0.03030,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,132,1041,"    if (options.ambiguateProperties ||
",4,1,0,0,1,0,0,0,0,5,34,4,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,132,1047,"      return n1.isEquivalentTo(n2);
",0,0,0,1,2,1,6,0,0,6,29,7,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,937,"          if (maybeExpr.getFirstChild().isCall()) {
",0,0,0,3,7,0,6,0,0,6,41,11,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,950,"          return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.02857,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,177,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02632,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,2300,"    return this.getType() == Token.NOT;
",4,1,0,1,2,1,2,0,0,7,35,4,0.02273,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,175,"        validateUnaryOp(n);
",0,0,0,1,2,0,4,0,0,4,19,6,0.02222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,176,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,744,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,0.02222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,745,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.02222,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,746,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02222,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,997,"      Node node = transform(exprNode.getExpression());
",2,0,0,2,4,0,6,2,0,10,48,5,0.02222,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,998,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.02222,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,244,"        return processParenthesizedExpression((ParenthesizedExpression) node);
",2,0,0,2,4,1,2,2,0,6,70,6,0.02222,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1155,"        if (type == Token.DELPROP &&
",6,2,0,0,1,0,0,0,0,8,28,7,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1177,"        Node node = newNode(type, operand);
",2,0,0,1,2,0,6,2,0,10,35,7,0.02174,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1178,"        if (exprNode.isPostfix()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1181,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1149,"      int type = transformTokenType(exprNode.getType());
",2,0,0,2,4,0,6,0,0,8,50,6,0.02041,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1150,"      Node operand = transform(exprNode.getOperand());
",2,0,0,2,4,0,6,2,0,10,48,5,0.02041,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1151,"      if (type == Token.NEG && operand.isNumber()) {
",6,2,0,2,5,0,4,0,0,12,46,5,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,171,"        return processUnaryExpression((UnaryExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.02041,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,132,102,"    this.retraverseOnChange = retraverse;
",4,0,0,0,0,0,0,0,0,5,37,4,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,132,103,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,929,"        Node maybeExpr = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,35,8,0.01961,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,930,"        if (maybeExpr.isExprResult()) {
",0,0,0,2,5,0,4,0,0,4,31,9,0.01961,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,392,"  public Node(int nodeType, Node left, Node mid, Node right) {
",10,0,0,1,3,1,0,6,0,17,60,2,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,393,"    Preconditions.checkArgument(left.parent == null);
",4,1,0,1,2,0,4,0,0,9,49,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,394,"    Preconditions.checkArgument(left.next == null);
",4,1,0,1,2,0,4,0,0,9,47,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,395,"    Preconditions.checkArgument(mid.parent == null);
",4,1,0,1,2,0,4,0,0,9,48,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,396,"    Preconditions.checkArgument(mid.next == null);
",4,1,0,1,2,0,4,0,0,9,46,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,397,"    Preconditions.checkArgument(right.parent == null);
",4,1,0,1,2,0,4,0,0,9,50,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,398,"    Preconditions.checkArgument(right.next == null);
",4,1,0,1,2,0,4,0,0,9,48,5,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,399,"    type = nodeType;
",4,0,0,0,0,0,0,0,0,5,16,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,400,"    parent = null;
",2,0,0,0,0,0,0,0,0,3,14,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,401,"    first = left;
",4,0,0,0,0,0,0,0,0,5,13,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,402,"    last = right;
",4,0,0,0,0,0,0,0,0,5,13,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,403,"    left.next = mid;
",6,0,0,0,0,0,0,0,0,7,16,4,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,404,"    left.parent = this;
",4,0,0,0,0,0,0,0,0,5,19,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,405,"    mid.next = right;
",6,0,0,0,0,0,0,0,0,7,17,4,0.01923,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,406,"    mid.parent = this;
",4,0,0,0,0,0,0,0,0,5,18,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,407,"    right.next = null;
",4,0,0,0,0,0,0,0,0,5,18,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,408,"    right.parent = this;
",4,0,0,0,0,0,0,0,0,5,20,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,409,"    sourcePosition = -1;
",2,0,0,0,0,0,0,0,0,4,20,4,0.01923,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,410,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01923,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,927,"    if (n.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.01786,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,928,"      if (n.hasOneChild()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.01786,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,649,"    Node thenBranch = cond.getNext();
",2,0,0,1,2,0,4,2,0,8,33,4,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,650,"    Node elseBranch = thenBranch.getNext();
",2,0,0,1,2,0,4,2,0,8,39,4,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,652,"    if (elseBranch == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,119,"        validateIf(n);
",0,0,0,1,2,0,4,0,0,4,14,6,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,120,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,463,"    validateNodeType(Token.IF, n);
",4,0,0,1,2,0,4,0,0,8,30,5,0.01724,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,464,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,465,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,466,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,467,"    validateBlock(n.getChildAtIndex(1));
",0,0,0,2,4,0,6,0,0,6,36,5,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,468,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,471,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01724,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,110,"        tryMinimizeCondition(node.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,43,6,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,111,"        return tryMinimizeIf(node);
",0,0,0,1,2,1,4,0,0,4,27,6,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,638,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,0.01695,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,640,"    Node cond = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,4,0.01695,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,645,"    if (NodeUtil.isLiteralValue(cond, true)) {
",0,0,0,2,5,0,6,0,0,7,42,5,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,795,"      valid = n.hasMoreThanOneChild();
",2,0,0,1,2,0,4,0,0,7,32,7,0.01639,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,838,"      Node node = newNode(Token.IF);
",6,0,0,1,2,0,2,2,0,10,30,5,0.01639,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,839,"      node.addChildToBack(transform(statementNode.getCondition()));
",0,0,0,3,6,0,10,0,0,10,61,6,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,840,"      node.addChildToBack(transformBlock(statementNode.getThenPart()));
",0,0,0,3,6,0,10,0,0,10,65,6,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,841,"      if (statementNode.getElsePart() != null) {
",0,1,0,2,5,0,4,0,0,5,42,5,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,844,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,240,"        return processIfStatement((IfStatement) node);
",2,0,0,2,4,1,2,2,0,6,46,6,0.01639,0,0
defect4j,closure,com/google/javascript/rhino/IR,132,175,"    Preconditions.checkState(mayBeExpression(expr));
",0,0,0,2,4,0,8,0,0,8,48,5,0.01613,0,0
defect4j,closure,com/google/javascript/rhino/IR,132,176,"    return new Node(Token.EXPR_RESULT, expr);
",6,0,0,1,2,1,0,2,0,8,41,5,0.01613,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1041,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.01587,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.01587,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.01587,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,794,"    } else if (i == 2) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,203,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,204,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,812,"      valid = n.getChildCount() <= i;
",4,1,0,1,2,0,4,0,0,10,31,6,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,225,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.01266,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,226,"    if (!irNode.isBlock()) {
",0,0,0,2,5,0,4,0,0,5,24,4,0.01266,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,238,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01266,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,1624,"    Node child = first;
",4,0,0,0,0,0,0,2,0,6,19,4,0.01250,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,1625,"    if (child != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.01250,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,1626,"      removeChild(child);
",0,0,0,1,2,0,4,0,0,4,19,7,0.01250,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,1628,"    return child;
",2,0,0,0,0,1,0,0,0,2,13,4,0.01250,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,749,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.01250,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,750,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.01250,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,751,"    validateExpression(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,5,0.01250,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,752,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01250,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,146,"        return processInfixExpression((InfixExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.01250,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,1752,"    putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));
",0,0,0,2,4,0,10,0,0,10,61,5,0.01149,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,1753,"    putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));
",0,0,0,2,4,0,10,0,0,10,63,5,0.01149,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,1754,"    sourcePosition = other.sourcePosition;
",6,0,0,0,0,0,0,0,0,7,38,4,0.01149,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,1755,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01149,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,1759,"    return useSourceInfoFrom(other);
",0,0,0,1,2,1,4,0,0,4,32,5,0.01149,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.01124,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.01124,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.01124,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,132,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01124,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,1538,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.01087,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,513,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.01064,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,1499,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.01000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,132,193,"          somethingChanged = true;
",2,0,0,0,0,0,0,0,0,4,24,10,0.00990,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,132,195,"          currentVersionOfNode = newVersionOfNode;
",4,0,0,0,0,0,0,0,0,5,40,10,0.00990,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,68,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.00980,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,69,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00980,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,70,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.00980,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,71,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.00980,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,72,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.00980,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,73,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00980,0,1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,132,534,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00971,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,132,116,"    JSType templateType = getTemplateTypeInternal(key);
",2,0,0,1,2,0,4,2,0,8,51,4,0.00971,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,132,117,"    return (templateType == null) ?
",2,1,0,1,2,1,0,0,0,3,31,6,0.00971,0,1
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,132,143,"      JSType thisTemplateType = getTemplateType(templateKeys.get(i));
",2,0,0,2,4,0,8,2,0,12,63,6,0.00971,0,0
defect4j,closure,com/google/javascript/rhino/jstype/TemplateTypeMap,132,144,"      JSType thatTemplateType = that.getTemplateType(
",2,0,0,0,1,0,4,2,0,8,47,6,0.00971,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1838,"    restoreLookAhead(token);
",0,0,0,1,2,0,4,0,0,4,24,5,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1839,"    return reportGenericTypeSyntaxWarning();
",0,0,0,1,2,1,2,0,0,2,40,5,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2303,"    return reportTypeSyntaxWarning(""msg.jsdoc.type.syntax"");
",0,0,0,1,2,1,2,0,0,3,56,5,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,947,"                          type = createJSTypeExpression(newNode(Token.QMARK));
",6,0,0,2,4,0,4,0,0,11,52,18,0.03846,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2341,"    unreadToken = token;
",4,0,0,0,0,0,0,0,0,5,20,4,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2342,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2298,"    parser.addTypeWarning(warning, stream.getLineno(), stream.getCharno());
",0,0,0,3,6,0,14,0,0,14,71,5,0.02381,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2299,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,958,"                          ExtractionInfo returnDescriptionInfo =
",2,0,0,0,0,0,0,2,0,4,38,18,0.01471,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1483,"              builder.append(' ');
",0,0,0,1,2,0,4,0,0,5,20,13,0.01235,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,170,"      JSDocInfo.StringPosition position = new JSDocInfo.StringPosition();
",10,0,0,1,2,0,0,0,0,10,67,6,0.01136,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,171,"      position.setItem(text);
",0,0,0,1,2,0,6,0,0,6,23,7,0.01136,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,172,"      position.setPositionInformation(startLineno, startCharno,
",0,0,0,0,1,0,8,0,0,8,57,7,0.01136,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1475,"            if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {
",8,3,0,1,3,0,0,0,0,12,65,9,0.00990,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,82,"      errorReporter.warning(
",0,0,0,0,1,0,4,0,0,4,22,6,0.00943,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,86,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00943,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,48,"public final class JsDocInfoParser {
",2,0,0,0,1,2,0,0,0,4,36,1,0.00645,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,136,"  static class TrimmedStringPosition extends StringPosition {
",2,0,0,0,1,1,0,2,0,5,59,2,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,138,"      Preconditions.checkArgument(
",0,0,0,0,1,0,4,0,0,4,28,6,0.00549,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,142,"      super.setItem(item);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,143,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00549,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,129,"  public static class StringPosition extends SourcePosition<String> {
",2,0,0,0,1,2,0,4,0,8,67,2,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,86,"      if (startCharno >= endCharno) {
",4,1,0,1,3,0,0,0,0,5,31,6,0.00549,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,690,"    if (documentation.markers == null) {
",4,1,0,1,3,0,0,0,0,5,36,4,0.00549,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,691,"      documentation.markers = Lists.newArrayList();
",4,0,0,1,2,0,4,0,0,9,45,6,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,694,"    Marker marker = new Marker();
",2,0,0,1,2,0,0,4,0,6,29,4,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,695,"    documentation.markers.add(marker);
",4,0,0,1,2,0,4,0,0,8,34,5,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,696,"    return marker;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00549,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,179,"  public static final class Marker {
",2,0,0,0,1,3,0,0,0,5,34,2,0.00549,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,180,"    private TrimmedStringPosition annotation = null;
",2,0,0,0,0,1,0,2,0,5,48,3,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,181,"    private TrimmedStringPosition name = null;
",2,0,0,0,0,1,0,2,0,5,42,3,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,182,"    private SourcePosition<Node> nameNode = null;
",2,0,0,0,0,1,0,4,0,7,45,3,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,183,"    private StringPosition description = null;
",2,0,0,0,0,1,0,2,0,5,42,3,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,184,"    private TypePosition type = null;
",2,0,0,0,0,1,0,2,0,5,33,3,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,194,"      annotation = p;
",4,0,0,0,0,0,0,0,0,5,15,5,0.00549,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,195,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00549,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,152,"      JSDocInfo.TrimmedStringPosition position =
",6,0,0,0,0,0,0,0,0,6,42,6,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,154,"      position.setItem(annotation);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,155,"      position.setPositionInformation(lineno, charno, lineno,
",0,0,0,0,1,0,10,0,0,10,55,7,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,157,"      marker.setAnnotation(position);
",0,0,0,1,2,0,6,0,0,6,31,7,0.00549,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,158,"      populated = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.00549,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1503,"              jsdocBuilder.markText(multilineText, startLineno, startCharno,
",0,0,0,0,1,0,10,0,0,10,62,12,0.00532,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,674,"    if (documentation == null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00515,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,675,"      documentation = new LazilyInitializedDocumentation();
",2,0,0,1,2,0,0,2,0,5,53,6,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,678,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00515,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,1577,"    if (!lazyInitDocumentation()) {
",0,0,0,2,5,0,2,0,0,3,31,4,0.00515,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,1580,"    documentation.sourceComment = sourceComment;
",6,0,0,0,0,0,0,0,0,7,44,4,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,1581,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00515,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,110,"  private static final class LazilyInitializedDocumentation {
",2,0,0,0,1,3,0,0,0,5,59,2,0.00515,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,111,"    String sourceComment = null;
",2,0,0,0,0,0,0,2,0,4,28,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,112,"    List<Marker> markers = null;
",2,0,0,0,0,0,0,4,0,6,28,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,114,"    Map<String, String> parameters = null;
",2,0,0,0,0,0,0,6,0,8,38,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,115,"    Map<JSTypeExpression, String> throwsDescriptions = null;
",2,0,0,0,0,0,0,6,0,8,56,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,116,"    String blockDescription = null;
",2,0,0,0,0,0,0,2,0,4,31,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,117,"    String fileOverview = null;
",2,0,0,0,0,0,0,2,0,4,27,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,118,"    String returnDescription = null;
",2,0,0,0,0,0,0,2,0,4,32,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,119,"    String version = null;
",2,0,0,0,0,0,0,2,0,4,22,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,121,"    List<String> authors = null;
",2,0,0,0,0,0,0,4,0,6,28,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,122,"    List<String> sees = null;
",2,0,0,0,0,0,0,4,0,6,25,3,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,80,"      currentInfo.setOriginalCommentString(sourceComment);
",0,0,0,1,2,0,6,0,0,6,52,7,0.00515,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,209,"      ExtractionInfo blockInfo = extractBlockComment(token);
",2,0,0,1,2,0,4,2,0,8,54,6,0.00515,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,210,"      token = blockInfo.token;
",6,0,0,0,0,0,0,0,0,7,24,6,0.00515,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,211,"      if (!blockInfo.string.isEmpty()) {
",4,0,0,2,5,0,2,0,0,7,34,6,0.00515,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,214,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00515,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1537,"    StringBuilder builder = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,44,4,0.00515,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1539,"    boolean ignoreStar = true;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00515,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1542,"      switch (token) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.00515,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1546,"          return new ExtractionInfo(builder.toString().trim(), token);
",2,0,0,3,6,1,6,2,0,10,60,8,0.00515,0,0
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,77,"    this.item = item;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00439,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,78,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00439,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,47,"public abstract class SourcePosition<T> {
",4,0,0,0,1,2,0,0,0,6,41,1,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,51,"  private T item = null;
",2,0,0,0,0,1,0,2,0,5,22,2,0.00433,0,0
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,56,"  private int startLineno = 0;
",2,0,0,0,0,1,0,0,0,3,28,2,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,61,"  private int startCharno = 0;
",2,0,0,0,0,1,0,0,0,3,28,2,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,66,"  private int endLineno = 0;
",2,0,0,0,0,1,0,0,0,3,26,2,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,71,"  private int endCharno = 0;
",2,0,0,0,0,1,0,0,0,3,26,2,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,85,"    if (startLineno == endLineno) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,101,"    this.startLineno = startLineno;
",4,0,0,0,0,0,0,0,0,5,31,4,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,102,"    this.startCharno = startCharno;
",4,0,0,0,0,0,0,0,0,5,31,4,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,103,"    this.endLineno = endLineno;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,104,"    this.endCharno = endCharno;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00433,0,1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,105,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00433,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1379,"    return extractMultilineTextualBlock(token, WhitespaceOption.SINGLE_LINE);
",4,0,0,1,2,1,4,0,0,8,73,5,0.00418,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1425,"      line = line.trim();
",2,0,0,1,2,0,4,0,0,7,19,6,0.00408,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1496,"              multilineText = multilineText.trim();
",2,0,0,1,2,0,4,0,0,7,37,11,0.00408,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1382,"  private enum WhitespaceOption {
",2,0,0,0,1,1,0,0,0,3,31,2,0.00395,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1387,"    PRESERVE,
",2,0,0,0,0,0,0,0,0,2,9,3,0.00395,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1390,"    TRIM,
",2,0,0,0,0,0,0,0,0,2,5,3,0.00395,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1393,"    SINGLE_LINE
",2,0,0,0,0,0,0,0,0,2,11,3,0.00395,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1413,"    if (token == JsDocToken.EOC || token == JsDocToken.EOL ||
",12,4,0,0,1,0,0,0,0,16,57,4,0.00395,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1418,"    stream.update();
",0,0,0,1,2,0,4,0,0,4,16,5,0.00395,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1419,"    int startLineno = stream.getLineno();
",2,0,0,1,2,0,4,0,0,6,37,5,0.00395,0,0
