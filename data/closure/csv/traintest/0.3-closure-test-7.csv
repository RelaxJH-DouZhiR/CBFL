dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,285,"        Context rhsContext = Context.OTHER;
",6,0,0,0,0,0,0,2,0,8,35,6,0.00855,1,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,214,"    if (node.isName()
",0,0,0,1,3,0,4,0,0,4,17,6,0.25000,1,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1661,"      if (fnType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00198,1,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,785,"    for (int index = 0; index < len; index++) {
",8,1,0,1,3,0,0,0,0,10,43,4,0.01639,1,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,172,"      if (name.globalSets == 1 && name.localSets == 0 &&
",8,4,0,0,1,0,0,0,0,12,50,6,0.00341,1,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2401,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00044,1,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1571,"            typeRegistry.resetImplicitPrototype(
",0,0,0,0,1,0,4,0,0,4,36,12,0.11429,0,1
defect4j,closure,com/google/javascript/rhino/jstype/StringType,118,81,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1675,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.10811,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1670,"        String className = qName.substring(0, qName.lastIndexOf("".prototype""));
",2,0,0,2,4,0,8,2,0,13,71,7,0.09302,0,0
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1671,"        Var slot = scope.getSlot(className);
",2,0,0,1,2,0,6,2,0,10,36,7,0.09302,0,0
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1672,"        JSType classType = slot == null ? null : slot.getType();
",4,1,0,1,2,0,4,2,0,11,56,7,0.09302,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1673,"        if (classType != null
",2,1,0,0,1,0,0,0,0,3,21,8,0.09302,0,1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,118,117,"    return getConstructor().isNativeObjectType()
",0,0,0,2,4,1,4,0,0,4,44,6,0.08889,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,714,"          return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.08511,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,787,"      return leastSuper ? that : this;
",4,0,0,0,0,1,0,0,0,4,32,7,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,933,"          constructor = objType.getOwnerFunction();
",2,0,0,1,2,0,4,0,0,7,41,10,0.07843,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,656,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,658,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,659,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,705,"                addExpr(c, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,29,15,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,346,"        expectString(t, indexNode, indexType, ""property access"");
",0,0,0,1,2,0,8,0,0,9,57,11,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,945,"            JSType rvalueType = rvalue.getJSType();
",2,0,0,1,2,0,4,2,0,8,39,12,0.07547,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,946,"            validator.expectObject(t, rvalue, rvalueType,
",0,0,0,0,1,0,10,0,0,10,45,13,0.07547,0,0
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,949,"            if (functionType.makesStructs() && !rvalueType.isStruct()) {
",0,1,0,3,7,0,8,0,0,10,60,12,0.07547,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,954,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07547,0,1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1582,"          qVar.getScope().undeclare(qVar);
",0,0,0,2,4,0,8,0,0,8,32,10,0.07547,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,798,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.07547,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,1152,"        getInstanceType().clearCachedValues();
",0,0,0,2,4,0,4,0,0,4,38,9,0.07407,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,874,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.07273,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,932,"        } else if (objType.isFunctionPrototypeType()) {
",0,0,0,2,6,0,4,0,0,4,47,9,0.07273,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,815,"    return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,564,"          return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,827,"      return type.isEnumType() || (type.autoboxesTo() != null);
",0,2,0,3,6,1,8,0,0,10,57,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,927,"      ObjectType objType = ObjectType.cast(type);
",2,0,0,1,2,0,6,2,0,10,43,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,928,"      if (objType != null) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,930,"        if (objType.isFunctionType()) {
",0,0,0,2,5,0,4,0,0,4,31,8,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,937,"        while (constructor != null) {
",2,1,0,1,3,0,0,0,0,3,29,7,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,938,"          for (ObjectType itype : constructor.getImplementedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,65,9,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,951,"          if (constructor.isInterface() || constructor.isConstructor()) {
",0,1,0,3,7,0,8,0,0,9,63,9,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,952,"            constructor = constructor.getSuperClassConstructor();
",2,0,0,1,2,0,4,0,0,7,53,11,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,958,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,345,"      } else if (objType.matchesObjectContext()) {
",0,0,0,2,6,0,4,0,0,4,44,9,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,892,"            foundType = objType;
",4,0,0,0,0,0,0,0,0,5,20,11,0.07018,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,119,"    Map<Node<E>, ImmutableSet.Builder<E>> groupsTmp = Maps.newHashMap();
",6,0,0,1,2,0,4,8,0,18,68,4,0.06897,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,120,"    for (Node<E> elem : elmap.values()) {
",2,0,0,2,5,0,4,4,0,10,37,4,0.06897,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,121,"      Node<E> root = findRoot(elem);
",2,0,0,1,2,0,4,4,0,10,30,6,0.06897,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,122,"      ImmutableSet.Builder<E> builder = groupsTmp.get(root);
",6,0,0,1,2,0,6,2,0,14,54,6,0.06897,0,0
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,123,"      if (builder == null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.06897,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,124,"        builder = ImmutableSet.builder();
",2,0,0,1,2,0,4,0,0,7,33,8,0.06897,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,125,"        groupsTmp.put(root, builder);
",0,0,0,1,2,0,8,0,0,8,29,9,0.06897,0,1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,127,"      builder.add(elem.element);
",4,0,0,1,2,0,4,0,0,8,26,7,0.06897,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,220,"      name = name.parent;
",6,0,0,0,0,0,0,0,0,7,19,6,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,523,"      validateCatch(catches.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,39,7,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,524,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,539,"    validateNodeType(Token.CATCH, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,540,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,541,"    validateName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,542,"    validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,543,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,655,"      AstNode catchVar = clauseNode.getVarName();
",2,0,0,1,2,0,4,2,0,8,43,5,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,656,"      Node node = newNode(Token.CATCH, transform(catchVar));
",6,0,0,2,4,0,6,2,0,14,54,5,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,657,"      if (clauseNode.getCatchCondition() != null) {
",0,1,0,2,5,0,4,0,0,5,45,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,663,"      node.addChildToBack(transformBlock(clauseNode.getBody()));
",0,0,0,3,6,0,10,0,0,10,58,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,664,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1155,"        if (lineSet == false) {
",2,1,0,1,3,0,0,0,0,4,23,7,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1156,"          block.setLineno(cc.getLineno());
",0,0,0,2,4,0,8,0,0,8,32,10,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1157,"          maybeSetLengthFrom(block, cc);
",0,0,0,1,2,0,6,0,0,6,30,10,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1158,"          lineSet = true;
",2,0,0,0,0,0,0,0,0,4,15,9,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1160,"        block.addChildToBack(transform(cc));
",0,0,0,2,4,0,8,0,0,8,36,8,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1161,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,191,"        return processCatchClause((CatchClause) node);
",2,0,0,2,4,1,2,2,0,6,46,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,149,"        Preconditions.checkState(n.getChildCount() == 2);
",0,1,0,2,4,0,8,0,0,9,49,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,150,"        Preconditions.checkState(n.getFirstChild().isName());
",0,0,0,3,6,0,10,0,0,10,53,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,154,"        final Node var = n.getFirstChild();
",2,0,0,1,2,1,4,2,0,9,35,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,155,"        final Node block = var.getNext();
",2,0,0,1,2,1,4,2,0,9,33,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,157,"        declareVar(var);
",0,0,0,1,2,0,4,0,0,4,16,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,158,"        scanVars(block);
",0,0,0,1,2,0,4,0,0,4,16,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,159,"        return;  // only one child to scan
",0,0,0,0,0,1,0,0,0,0,34,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,135,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,136,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,511,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,512,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,513,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,514,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,516,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,519,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,520,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,521,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,522,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,528,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,533,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,536,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1147,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1149,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1150,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1152,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1162,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1164,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,0.07143,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1165,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1172,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1177,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,159,"          reportRefToUndefinedName(name, ref);
",0,0,0,1,2,0,6,0,0,6,36,11,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,218,"    while (name.parent != null &&
",4,2,0,0,1,0,0,0,0,6,29,4,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,223,"    compiler.report(
",0,0,0,0,1,0,4,0,0,4,16,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,226,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,158,"        if (!isGlobalExpr) {
",2,0,0,1,3,0,0,0,0,3,20,8,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,205,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.06667,0,1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,198,"    Node parent = ref.node.getParent();
",6,0,0,1,2,0,2,2,0,10,35,4,0.05882,0,0
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,199,"    if (parent.isExprResult()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.05882,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1141,"      return newNode(Token.THROW,
",4,0,0,0,1,1,2,0,0,6,27,6,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,264,"        return processThrowStatement((ThrowStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.04762,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,132,"        validateThrow(n);
",0,0,0,1,2,0,4,0,0,4,17,6,0.04762,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,1430,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,1446,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,1459,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,2194,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,120,2195,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,2196,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,120,2197,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,312,"              aliasInit = candidate.refInfo.getInitializingReference();
",6,0,0,1,2,0,2,0,0,9,57,13,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,313,"              Node value = aliasInit.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,42,13,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,314,"              Preconditions.checkNotNull(value);
",0,0,0,1,2,0,6,0,0,6,34,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,315,"              inlineWellDefinedVariable(candidate.alias,
",4,0,0,0,1,0,2,0,0,6,42,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,318,"              staleVars.add(candidate.alias);
",4,0,0,1,2,0,4,0,0,8,31,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,308,"            AliasCandidate candidate = aliasCandidates.get(nameNode);
",2,0,0,1,2,0,6,2,0,10,57,11,0.05263,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,309,"            if (!staleVars.contains(candidate.alias) &&
",4,1,0,1,3,0,4,0,0,10,43,11,0.05263,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,651,"        Node parent = initialization.getParent();
",2,0,0,1,2,0,4,2,0,8,41,8,0.04348,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,652,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,9,0.04348,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,696,"          Preconditions.checkState(refInit == refSet.get(1));
",2,1,0,2,4,0,8,0,0,11,51,10,0.04348,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,697,"          startingReadRef = 2;
",2,0,0,0,0,0,0,0,0,3,20,9,0.04348,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,283,"        lookAhead = null;
",2,0,0,0,0,0,0,0,0,3,17,7,0.03448,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,284,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03448,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,711,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03333,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,701,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,0.03030,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,625,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02778,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,328,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,2185,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,659,"        return compiler.getCodingConvention().isInlinableFunction(n);
",0,0,0,2,4,1,8,0,0,8,61,8,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,535,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.02632,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,609,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,601,"        it = NodeIterators.LocalVarMotion.forVar(
",6,0,0,0,1,0,2,0,0,9,41,7,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,383,"      Reference decl = refSet.get(0);
",2,0,0,1,2,0,4,2,0,8,31,5,0.02000,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,384,"      for (int i = 1; i < refSet.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,41,5,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,385,"        inlineValue(v, refSet.get(i), value.cloneTree());
",0,0,0,3,6,0,14,0,0,14,49,8,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,387,"      removeDeclaration(decl);
",0,0,0,1,2,0,4,0,0,4,24,6,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,388,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1607,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,0.01961,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,183,"              aliasCandidates.put(value, new AliasCandidate(v, referenceInfo));
",4,0,0,2,4,0,6,2,0,12,65,14,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,131,"    AliasCandidate(Var alias, ReferenceCollection refInfo) {
",6,0,0,1,3,0,0,4,0,10,56,3,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,132,"      this.alias = alias;
",4,0,0,0,0,0,0,0,0,5,19,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,133,"      this.refInfo = refInfo;
",4,0,0,0,0,0,0,0,0,5,23,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,600,"      if (initialization.getParent().isVar()) {
",0,0,0,3,7,0,6,0,0,6,41,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,617,"      Node targetName = reference.getNode();
",2,0,0,1,2,0,4,2,0,8,38,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,618,"      while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,619,"        Node curNode = it.next();
",2,0,0,1,2,0,4,2,0,8,25,7,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,620,"        if (curNode == targetName) {
",4,1,0,1,3,0,0,0,0,5,28,7,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,623,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,335,"        staleVars.add(scope.getVar(root.getString()));
",0,0,0,3,6,0,12,0,0,12,46,8,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,120,1397,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.01613,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,165,"      Preconditions.checkArgument(var.isVar());
",0,0,0,2,4,0,8,0,0,8,41,6,0.01587,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,166,"      Preconditions.checkArgument(NodeUtil.isStatement(var));
",0,0,0,2,4,0,10,0,0,10,55,6,0.01587,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,171,"      return new LocalVarMotion(
",0,0,0,0,1,1,0,2,0,2,26,7,0.01587,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1223,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01389,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,193,"    private LocalVarMotion(Node nameNode, FunctionlessLocalScope iterator) {
",6,0,0,1,3,1,0,4,0,11,72,3,0.01389,0,0
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,2185,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,121,1397,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1223,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.20000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,316,"              aliasInit = candidate.refInfo.getInitializingReference();
",6,0,0,1,2,0,2,0,0,9,57,13,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,317,"              Node value = aliasInit.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,42,13,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,318,"              Preconditions.checkNotNull(value);
",0,0,0,1,2,0,6,0,0,6,34,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,319,"              inlineWellDefinedVariable(candidate.alias,
",4,0,0,0,1,0,2,0,0,6,42,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,322,"              staleVars.add(candidate.alias);
",4,0,0,1,2,0,4,0,0,8,31,14,0.05556,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,312,"            AliasCandidate candidate = aliasCandidates.get(nameNode);
",2,0,0,1,2,0,6,2,0,10,57,11,0.05263,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,313,"            if (!staleVars.contains(candidate.alias) &&
",4,1,0,1,3,0,4,0,0,10,43,11,0.05263,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,127,"  private static class AliasCandidate {
",2,0,0,0,1,2,0,0,0,4,37,2,0.05263,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,283,"        lookAhead = null;
",2,0,0,0,0,0,0,0,0,3,17,7,0.04545,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,284,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04545,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,655,"        Node parent = initialization.getParent();
",2,0,0,1,2,0,4,2,0,8,41,8,0.04348,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,656,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,9,0.04348,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,700,"          Preconditions.checkState(refInit == refSet.get(1));
",2,1,0,2,4,0,8,0,0,11,51,10,0.04348,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,701,"          startingReadRef = 2;
",2,0,0,0,0,0,0,0,0,3,20,9,0.04348,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,734,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.04000,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,0.03448,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.03226,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1607,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,705,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03125,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,328,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,629,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02778,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,663,"        return compiler.getCodingConvention().isInlinableFunction(n);
",0,0,0,2,4,1,8,0,0,8,61,8,0.02703,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,539,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.02632,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,204,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.02564,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,205,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02564,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,956,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,8,0.02439,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,960,"      if (first == null || first.getType() != Token.NAME) {
",6,3,0,2,5,0,4,0,0,13,53,7,0.02439,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,963,"        sb.append(first.getString());
",0,0,0,2,4,0,8,0,0,8,29,10,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,164,"      return nextConvention.isInlinableFunction(n);
",0,0,0,1,2,1,6,0,0,6,45,6,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,357,"      Preconditions.checkState(n.isFunction());
",0,0,0,2,4,0,8,0,0,8,41,6,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,358,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,632,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,0.02439,0,1
defect4j,closure,com/google/javascript/rhino/Node,121,133,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,0.02273,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,121,146,"        return processInfixExpression((InfixExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.02222,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,605,"        it = NodeIterators.LocalVarMotion.forVar(
",6,0,0,0,1,0,2,0,0,9,41,7,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,165,"      Preconditions.checkArgument(var.isVar());
",0,0,0,2,4,0,8,0,0,8,41,6,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,166,"      Preconditions.checkArgument(NodeUtil.isStatement(var));
",0,0,0,2,4,0,10,0,0,10,55,6,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,171,"      return new LocalVarMotion(
",0,0,0,0,1,1,0,2,0,2,26,7,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,387,"      Reference decl = refSet.get(0);
",2,0,0,1,2,0,4,2,0,8,31,5,0.02000,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,388,"      for (int i = 1; i < refSet.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,41,5,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,389,"        inlineValue(v, refSet.get(i), value.cloneTree());
",0,0,0,3,6,0,14,0,0,14,49,8,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,391,"      removeDeclaration(decl);
",0,0,0,1,2,0,4,0,0,4,24,6,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,392,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,0.01887,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,0.01887,0,0
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,0.01887,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,183,"              aliasCandidates.put(value, new AliasCandidate(v, referenceInfo));
",4,0,0,2,4,0,6,2,0,12,65,14,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,131,"    AliasCandidate(Var alias, ReferenceCollection refInfo) {
",6,0,0,1,3,0,0,4,0,10,56,3,0.01852,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,132,"      this.alias = alias;
",4,0,0,0,0,0,0,0,0,5,19,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,133,"      this.refInfo = refInfo;
",4,0,0,0,0,0,0,0,0,5,23,5,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,604,"      if (initialization.getParent().isVar()) {
",0,0,0,3,7,0,6,0,0,6,41,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,621,"      Node targetName = reference.getNode();
",2,0,0,1,2,0,4,2,0,8,38,5,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,622,"      while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.01818,0,1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,623,"        Node curNode = it.next();
",2,0,0,1,2,0,4,2,0,8,25,7,0.01818,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,201,"          irFactory.handleBlockComment(comment);
",0,0,0,1,2,0,6,0,0,6,38,12,0.28125,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,258,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.28125,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,50,"  public SimpleSourceFile(String name, boolean extern) {
",6,0,0,1,3,1,0,2,0,9,54,2,0.07895,0,0
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,51,"    this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,0.07895,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,52,"    this.extern = extern;
",4,0,0,0,0,0,0,0,0,5,21,4,0.07895,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,53,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07895,0,1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,57,"    return name;
",2,0,0,0,0,1,0,0,0,2,12,4,0.07895,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,122,54,"    return createConfig(isIdeMode, languageMode, acceptConstKeyword, null);
",0,0,0,1,2,1,8,0,0,9,71,4,0.05422,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,122,217,"    this(reporter, false);
",2,0,0,1,2,0,0,0,0,3,22,4,0.05389,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,122,218,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05389,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,510,"      node.setLength(source.getLength());
",0,0,0,2,4,0,8,0,0,8,35,7,0.03475,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,935,"        return TokenStream.isKeyword(identifier);
",0,0,0,1,2,1,6,0,0,6,41,8,0.00838,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,163,"        reservedKeywords = null; // use TokenStream.isKeyword instead
",2,0,0,0,0,0,0,0,0,3,61,5,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,164,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00826,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2191,"      case Token.IN: return ""in"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1397,"        return Token.IN;
",4,0,0,0,0,1,0,0,0,4,16,6,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2205,"      case Token.NEG: return ""-"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,267,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,7,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,272,"        if (n.getFirstChild().isNumber()) {
",0,0,0,3,7,0,6,0,0,6,35,7,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,275,"          cc.addOp(NodeUtil.opToStrNoFail(type), false);
",0,0,0,2,4,0,10,0,0,11,46,9,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,276,"          addExpr(first, NodeUtil.precedence(type), Context.OTHER);
",4,0,0,2,4,0,10,0,0,14,57,9,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,279,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,422,"            add(first, Context.IN_FOR_INIT_CLAUSE);
",4,0,0,1,2,0,4,0,0,8,39,10,0.05882,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,135,"        addExpr(first, p, context);
",0,0,0,1,2,0,8,0,0,8,27,9,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,136,"        cc.addOp(opstr, true);
",0,0,0,1,2,0,6,0,0,7,22,9,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,137,"        addExpr(last, p, rhsContext);
",0,0,0,1,2,0,8,0,0,8,29,9,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1201,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.02778,0,1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,222,"      append("" "");
",0,0,0,1,2,0,2,0,0,3,12,8,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1361,"        return Token.NEG;
",4,0,0,0,0,1,0,0,0,4,17,6,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1490,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02174,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2060,"    this.prettyPrint = prettyPrint;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2061,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,1649,"    this.languageOut = languageOut;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01471,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,1650,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01471,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2092,"    this.lineLengthThreshold = lineLengthThreshold;
",4,0,0,0,0,0,0,0,0,5,47,4,0.01449,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2093,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01449,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,244,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,245,"        unrollBinaryOperator(n, Token.COMMA, "","", context,
",4,0,0,0,1,0,6,0,0,11,50,6,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,247,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01111,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1410,"        return Token.COMMA;
",4,0,0,0,0,1,0,0,0,4,19,6,0.01064,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,1984,"    putBooleanProp(EMPTY_BLOCK, val);
",0,0,0,1,2,0,6,0,0,6,33,5,0.01031,0,1
defect4j,closure,com/google/javascript/rhino/Node,123,1985,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01031,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1229,"      case Token.IN:     return 9;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01031,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,234,"        irNode.setType(Token.BLOCK);
",4,0,0,1,2,0,4,0,0,8,28,9,0.01031,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,235,"        irNode.setWasEmptyNode(true);
",0,0,0,1,2,0,4,0,0,5,29,9,0.01031,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,706,"      Node node = newNode(Token.EMPTY);
",6,0,0,1,2,0,2,2,0,10,33,5,0.01010,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,707,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01010,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1483,"    switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00909,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,424,"            addExpr(first, 0, Context.IN_FOR_INIT_CLAUSE);
",4,0,0,1,2,0,4,0,0,8,46,10,0.00901,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,223,"        } else  if (node instanceof ForLoop) {
",2,0,0,1,4,0,0,2,0,4,38,7,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,224,"          return processForLoop((ForLoop) node);
",2,0,0,2,4,1,2,2,0,6,38,9,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,743,"      Node node = newNode(
",2,0,0,0,1,0,2,2,0,6,20,5,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,748,"      node.addChildToBack(transformBlock(loopNode.getBody()));
",0,0,0,3,6,0,10,0,0,10,56,6,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,749,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00862,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1214,"      case Token.HOOK:   return 2;  // ?: operator
",4,0,0,0,0,1,0,0,0,4,44,6,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,283,"        Preconditions.checkState(childCount == 3);
",2,1,0,1,2,0,4,0,0,7,42,7,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,284,"        int p = NodeUtil.precedence(type);
",2,0,0,1,2,0,6,0,0,8,34,7,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,286,"        addExpr(first, p + 1, context);
",2,1,0,1,2,0,6,0,0,9,31,7,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,287,"        cc.addOp(""?"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.00855,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,155,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,211,"    Preconditions.checkArgument(node.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,5,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,213,"      node = node.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,28,4,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,219,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.25000,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,113,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,122,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,133,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,134,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,869,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,870,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,871,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,874,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,875,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,876,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,877,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,880,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,881,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,932,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,968,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,969,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,970,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,971,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,976,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,977,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,978,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,979,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,980,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,981,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,982,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,984,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,986,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,989,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,990,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,995,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1007,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1012,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1013,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1014,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1021,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1022,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1026,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1027,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1029,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1030,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1031,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,124,1032,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1034,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1033,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,124,1036,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/InputId,124,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,55,"      reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,136,"          if (next.isQualifiedName()) {
",0,0,0,2,5,0,4,0,0,4,29,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,137,"            String nextName = next.getQualifiedName();
",2,0,0,1,2,0,4,2,0,8,42,9,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,138,"            if (value.isQualifiedName() &&
",0,1,0,1,3,0,4,0,0,5,30,9,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,958,"      return thisType.toMaybeFunctionType().supAndInfHelper(
",0,0,0,1,3,1,6,0,0,6,54,7,0.25000,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,202,"        if (outcome) {
",2,0,0,1,3,0,0,0,0,2,14,5,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,203,"          return caseEquality(condition, blindScope, SHEQ);
",0,0,0,1,2,1,8,0,0,8,49,8,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,205,"          return caseEquality(condition, blindScope, SHNE);
",0,0,0,1,2,1,8,0,0,8,49,8,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,678,"          if (!leftTypeRestricted.canTestForShallowEqualityWith(
",0,0,0,0,2,0,4,0,0,5,54,8,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,423,"        declareNameInScope(informed, right, restrictedRightType);
",0,0,0,1,2,0,8,0,0,8,57,9,0.04348,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,877,"    JSType inf = getGreatestSubtype(that);
",2,0,0,1,2,0,4,2,0,8,38,4,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,878,"    return !inf.isEmptyType() ||
",0,1,0,1,2,1,4,0,0,6,28,4,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,901,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.03704,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,873,"    if (isEmptyType() || that.isEmptyType()) {
",0,1,0,3,7,0,6,0,0,7,42,4,0.03226,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1164,"    JSType commonType = getGreatestSubtype(that);
",2,0,0,1,2,0,4,2,0,8,45,4,0.03030,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1165,"    return new TypePair(commonType, commonType);
",4,0,0,1,2,1,0,2,0,6,44,5,0.03030,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,83,"        return p.typeA.getTypesUnderShallowEquality(p.typeB);
",8,0,0,1,2,1,2,0,0,10,53,9,0.03030,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1179,"    if (that.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.02941,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1187,"    if (isNullType() && that.isNullType() ||
",0,2,0,2,5,0,6,0,0,8,40,4,0.02941,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1191,"      return new TypePair(this, that);
",2,0,0,1,2,1,0,2,0,4,32,7,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,98,"        return p.typeA.getTypesUnderShallowInequality(p.typeB);
",8,0,0,1,2,1,2,0,0,10,55,9,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,80,"        if (p.typeA == null || p.typeB == null) {
",8,3,0,1,3,0,0,0,0,11,41,8,0.02941,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,95,"        if (p.typeA == null || p.typeB == null) {
",8,3,0,1,3,0,0,0,0,11,41,8,0.02857,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,287,"      rightIsRefineable = true;
",2,0,0,0,0,0,0,0,0,4,25,6,0.02500,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,1360,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,420,"        declareNameInScope(informed, left, restrictedLeftType);
",0,0,0,1,2,0,8,0,0,8,55,9,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,418,"      FlowScope informed = blindScope.createChildFlowScope();
",2,0,0,1,2,0,4,2,0,8,55,6,0.01370,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,419,"      if (shouldRefineLeft) {
",2,0,0,1,3,0,0,0,0,2,23,6,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,422,"      if (shouldRefineRight) {
",2,0,0,1,3,0,0,0,0,2,24,6,0.01370,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,425,"      return informed;
",2,0,0,0,0,1,0,0,0,2,16,6,0.01370,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,790,"    FunctionType greatestFn =
",2,0,0,0,0,0,0,2,0,4,25,4,0.01299,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,792,"    FunctionType leastFn =
",2,0,0,0,0,0,0,2,0,4,22,4,0.01299,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,794,"    return leastSuper ? greatestFn : leastFn;
",6,0,0,0,0,1,0,0,0,6,41,5,0.01299,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,780,"    } else if (functionInstance.isEquivalentTo(this)) {
",0,0,0,2,6,0,4,0,0,4,51,6,0.01235,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,427,"    return blindScope;
",2,0,0,0,0,1,0,0,0,2,18,4,0.01176,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,776,"    JSType functionInstance = registry.getNativeType(
",2,0,0,0,1,0,4,2,0,8,49,4,0.01163,0,0
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,778,"    if (functionInstance.isEquivalentTo(that)) {
",0,0,0,2,5,0,6,0,0,6,44,5,0.01163,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,320,"    return Integer.MAX_VALUE;
",4,0,0,0,0,1,0,0,0,4,25,5,0.01136,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,753,"    if (isOrdinaryFunction() && that.isOrdinaryFunction() &&
",0,1,0,2,5,0,6,0,0,7,56,4,0.01124,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,149,"        } else if (right.isTypeOf() &&
",0,1,0,1,4,0,4,0,0,5,30,6,0.01087,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,277,"      leftIsRefineable = true;
",2,0,0,0,0,0,0,0,0,4,24,6,0.01020,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,151,"          FunctionType other =
",2,0,0,0,0,0,0,2,0,4,20,10,0.01020,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,153,"          FunctionType supremum =
",2,0,0,0,0,0,0,2,0,4,23,10,0.01020,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,155,"          alternates.set(functionTypePosition, supremum);
",0,0,0,1,2,0,8,0,0,8,47,11,0.01020,0,0
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,156,"          result = null;
",2,0,0,0,0,0,0,0,0,3,14,10,0.01020,0,1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,157,"          return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01020,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,743,"    Preconditions.checkNotNull(that);
",0,0,0,1,2,0,6,0,0,6,33,5,0.01000,0,1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,745,"    if (isEquivalentTo(that)) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.01000,0,1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,651,"        } else if (right.isTypeOf() && left.isString()) {
",0,1,0,3,8,0,8,0,0,9,49,7,0.00980,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,267,"    return caseEquality(condition.getFirstChild(), condition.getLastChild(),
",0,0,0,2,5,1,10,0,0,10,72,5,0.00943,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,140,"          left = condition.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00847,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,141,"          right = condition.getLastChild();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00847,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,298,"      return maybeRestrictTwoNames(
",0,0,0,0,1,1,2,0,0,2,29,7,0.00820,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,274,"    JSType leftType = getTypeIfRefinable(left, blindScope);
",2,0,0,1,2,0,6,2,0,10,55,4,0.00813,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,276,"    if (leftType != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,284,"    JSType rightType = getTypeIfRefinable(right, blindScope);
",2,0,0,1,2,0,6,2,0,10,57,4,0.00813,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,286,"    if (rightType != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00813,0,1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,294,"    TypePair merged = merging.apply(new TypePair(leftType, rightType));
",6,0,0,2,4,0,4,4,0,14,67,4,0.00813,0,0
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,297,"    if (merged != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00813,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1410,"    public TypePair(JSType typeA, JSType typeB) {
",6,0,0,1,3,1,0,4,0,11,45,3,0.00813,0,0
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1411,"      this.typeA = typeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00813,0,1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1412,"      this.typeB = typeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00813,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,126,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,126,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1111,"      return newNode(Token.THROW,
",4,0,0,0,1,1,2,0,0,6,27,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,264,"        return processThrowStatement((ThrowStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,132,"        validateThrow(n);
",0,0,0,1,2,0,4,0,0,4,17,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,133,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,489,"    validateNodeType(Token.THROW, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,490,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,491,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,492,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1143,"        block.setLineno(finallyBlock.getLineno());
",0,0,0,2,4,0,8,0,0,8,42,8,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1144,"        maybeSetLengthFrom(block, finallyBlock);
",0,0,0,1,2,0,6,0,0,6,40,8,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,128,"      Node tryBlock = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,6,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,129,"      tryMinimizeExits(tryBlock, exitType, labelName);
",0,0,0,1,2,0,8,0,0,8,48,7,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,130,"      Node allCatchNodes = NodeUtil.getCatchBlock(n);
",2,0,0,1,2,0,6,2,0,10,47,6,1.00000,0,0
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,131,"      if (NodeUtil.hasCatchHandler(allCatchNodes)) {
",0,0,0,2,5,0,6,0,0,6,46,7,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,141,"      if (NodeUtil.hasFinally(n)) {
",0,0,0,2,5,0,6,0,0,6,29,7,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,609,"        Preconditions.checkState(childCount <= 1);
",2,1,0,1,2,0,4,0,0,7,42,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,610,"        add(""break"");
",0,0,0,1,2,0,2,0,0,3,13,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,611,"        if (childCount == 1) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,618,"        cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,619,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.80000,0,0
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,138,"        validateBreak(n);
",0,0,0,1,2,0,4,0,0,4,17,6,0.80000,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,139,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.80000,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,127,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,841,"          if (lastJump == cfgNode) {
",4,1,0,1,3,0,0,0,0,5,26,10,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,842,"            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());
",4,0,0,2,4,0,8,0,0,12,58,13,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,854,"        lastJump = handler;
",4,0,0,0,0,0,0,0,0,5,19,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,855,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,164,"          add(""finally"");
",0,0,0,1,2,0,2,0,0,3,15,9,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,165,"          add(last, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,34,9,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,529,"      validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,530,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1136,"        node.addChildToBack(transformBlock(finallyBlock));
",0,0,0,2,4,0,8,0,0,8,50,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1143,"        block.setLineno(finallyBlock.getLineno());
",0,0,0,2,4,0,8,0,0,8,42,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1144,"        maybeSetLengthFrom(block, finallyBlock);
",0,0,0,1,2,0,6,0,0,6,40,8,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,491,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,766,"            for (Node finallyNode : cfa.finallyMap.get(parent)) {
",6,0,0,2,5,0,4,2,0,12,53,11,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,350,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,764,"        } else if (parent.getLastChild() == node){
",2,1,0,2,6,0,4,0,0,7,42,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,765,"          if (cfa != null) {
",2,1,0,1,3,0,0,0,0,3,18,9,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,770,"          return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,10,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,806,"        return computeFallThrough(n.getLastChild());
",0,0,0,2,4,1,6,0,0,6,44,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,837,"        Preconditions.checkState(handler.isTry());
",0,0,0,2,4,0,8,0,0,8,42,9,1,0,1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,838,"        Node catchBlock = NodeUtil.getCatchBlock(handler);
",2,0,0,1,2,0,6,2,0,10,50,8,1,0,0
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,840,"        if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.
",0,0,0,2,5,0,6,0,0,7,71,8,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,127,2315,"    return this.getType() == Token.LABEL_NAME;
",4,1,0,1,2,1,2,0,0,7,42,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,149,"        Preconditions.checkState(first.getNext().isBlock() &&
",0,1,0,2,5,0,10,0,0,11,53,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,151,"        Preconditions.checkState(childCount >= 2 && childCount <= 3);
",4,3,0,1,2,0,4,0,0,11,61,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,153,"        add(""try"");
",0,0,0,1,2,0,2,0,0,3,11,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,154,"        add(first, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,35,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,158,"        Node catchblock = first.getNext().getFirstChild();
",2,0,0,2,4,0,6,2,0,10,50,6,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,159,"        if (catchblock != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,163,"        if (childCount == 3) {
",2,1,0,1,3,0,0,0,0,3,22,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,206,"        Preconditions.checkState(!n.getString().isEmpty());
",0,0,0,3,6,0,10,0,0,11,51,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,207,"        addIdentifier(n.getString());
",0,0,0,2,4,0,6,0,0,6,29,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,208,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,735,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,736,"        if (!first.isLabelName()) {
",0,0,0,2,5,0,4,0,0,5,27,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,739,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,740,"        add("":"");
",0,0,0,1,2,0,2,0,0,3,9,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,741,"        addNonEmptyStatement(
",0,0,0,0,1,0,2,0,0,2,21,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,743,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,96,"        validateLabel(n);
",0,0,0,1,2,0,4,0,0,4,17,6,1,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,542,"        ret = transformNumberAsString((NumberLiteral)n);
",4,0,0,2,4,0,2,2,0,9,48,8,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,543,"        ret.putBooleanProp(Node.QUOTED_PROP, true);
",4,0,0,1,2,0,4,0,0,9,43,9,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,409,"    Node irNode = newStringNode(getStringValue(literalNode.getNumber()));
",2,0,0,3,6,0,8,2,0,12,69,4,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,410,"    JSDocInfo jsDocInfo = handleJsDoc(literalNode, irNode);
",2,0,0,1,2,0,6,2,0,10,55,4,0.04167,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,411,"    if (jsDocInfo != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,414,"    setSourceInfo(irNode, literalNode);
",0,0,0,1,2,0,6,0,0,6,35,5,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,415,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,419,"    long longValue = (long) value;
",4,0,0,1,2,0,0,0,0,4,30,5,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,422,"    if (longValue == value) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,423,"      return Long.toString(longValue);
",0,0,0,1,2,1,6,0,0,6,32,7,0.04167,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,791,"    return len > 0 && s.charAt(0) != '0';
",2,3,0,1,2,1,4,0,0,10,37,4,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,650,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,652,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,653,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02041,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,698,"                addExpr(c, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,29,15,0.02041,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,805,"    return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,5,0.01887,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,694,"              double d = getSimpleNumber(key);
",2,0,0,1,2,0,4,0,0,6,32,13,0.01754,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,695,"              if (!Double.isNaN(d)) {
",0,0,0,2,5,0,6,0,0,7,23,12,0.01754,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,1978,"    this.prettyPrint = prettyPrint;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,1979,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01695,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,786,"      char c = s.charAt(index);
",2,0,0,1,2,0,6,0,0,8,25,7,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,787,"      if (c < '0' || c > '9') {
",4,3,0,1,3,0,0,0,0,9,25,6,0.01667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,784,"    int len = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,795,"    if (isSimpleNumber(s)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.01639,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,2010,"    this.lineLengthThreshold = lineLengthThreshold;
",4,0,0,0,0,0,0,0,0,5,47,4,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,2011,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01493,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,541,"      } else if (n instanceof NumberLiteral) {
",2,0,0,1,4,0,0,2,0,4,40,7,0.01316,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,740,"    trustedStrings = yes;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00575,0,1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,741,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00575,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1609,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00386,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1605,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00369,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1606,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00369,0,0
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1608,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00369,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1611,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00369,0,1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1612,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00369,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,681,"            Preconditions.checkState(c.isStringKey());
",0,0,0,2,4,0,8,0,0,8,42,11,0.00309,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,682,"            String key = c.getString();
",2,0,0,1,2,0,4,2,0,8,27,10,0.00309,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,685,"            if (!c.isQuotedString() &&
",0,1,0,1,3,0,4,0,0,6,26,10,0.00309,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,701,"            add("":"");
",0,0,0,1,2,0,2,0,0,3,9,11,0.00309,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,702,"            addExpr(c.getFirstChild(), 1, Context.OTHER);
",4,0,0,2,4,0,6,0,0,10,45,11,0.00309,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,674,"          if (c != first) {
",4,1,0,1,3,0,0,0,0,5,17,8,0.00275,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,678,"          if (c.isGetterDef() || c.isSetterDef()) {
",0,1,0,3,7,0,8,0,0,9,41,8,0.00275,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1546,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,3165,"        return isExpressionResultUsed(parent);
",0,0,0,1,2,1,4,0,0,4,38,6,0.25000,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,132,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,0.20000,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1428,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1444,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1457,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,2163,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.16667,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,2164,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,2165,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,2166,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,530,"          add(""(0,"");
",0,0,0,1,3,0,2,0,0,3,11,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,531,"          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);
",8,0,0,2,4,0,8,0,0,16,64,8,0.16667,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,532,"          add("")"");
",0,0,0,1,3,0,2,0,0,3,9,8,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,61,"          n.removeChild(left);
",0,0,0,1,2,0,6,0,0,6,20,8,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,62,"          n.removeChild(right);
",0,0,0,1,2,0,6,0,0,6,21,8,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,63,"          parent.replaceChild(n, IR.getprop(left, right));
",0,0,0,2,4,0,14,0,0,14,48,8,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,64,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,8,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/Normalize,129,414,"          parent.replaceChild(n, n.removeFirstChild());
",0,0,0,2,4,0,10,0,0,10,45,7,0.10000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1332,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,57,"        Node left = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,5,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,58,"        Node right = left.getNext();
",2,0,0,1,2,0,4,2,0,8,28,5,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,59,"        if (right.isString() &&
",0,1,0,1,3,0,4,0,0,5,23,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1329,"    if (left.isArrayLit()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,122,"        return tryFoldGetElem(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1323,"    Preconditions.checkArgument(n.isGetElem());
",0,0,0,2,4,0,8,0,0,8,43,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1325,"    if (left.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,403,"        return n;
",2,0,0,0,0,1,0,0,0,2,9,8,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,82,"        return tryFoldCtorCall(subtree);
",0,0,0,1,2,1,4,0,0,4,32,6,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1258,"    Preconditions.checkArgument(n.isNew());
",0,0,0,2,4,0,8,0,0,8,39,5,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1261,"    if (inForcedStringContext(n)) {
",0,0,0,2,5,0,4,0,0,4,31,5,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1264,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1269,"    if (n.getParent().isGetElem() &&
",0,1,0,2,5,0,6,0,0,7,32,4,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1275,"    if (n.getParent().isAdd()) {
",0,0,0,3,7,0,6,0,0,6,28,5,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1278,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.06250,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,140,"          return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.05556,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,122,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.05000,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,134,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.05000,0,1
defect4j,closure,com/google/javascript/rhino/InputId,129,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,138,"        node = tryFoldStandardConstructors(node);
",2,0,0,1,2,0,4,0,0,7,41,5,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,139,"        if (!node.isCall()) {
",0,0,0,2,5,0,4,0,0,5,21,5,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1346,"    Preconditions.checkState(n.isNew());
",0,0,0,2,4,0,8,0,0,8,36,5,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1351,"    if (isASTNormalized()) {
",0,0,0,2,5,0,2,0,0,2,24,5,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1352,"      if (n.getFirstChild().isName()) {
",0,0,0,3,7,0,6,0,0,6,33,7,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1353,"        String className = n.getFirstChild().getString();
",2,0,0,2,4,0,6,2,0,10,49,8,0.05000,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1354,"        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
",0,0,0,2,5,0,6,0,0,6,55,9,0.05000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1362,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.05000,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,347,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.04762,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1007,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1012,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1013,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1014,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1021,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1022,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1026,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1027,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1029,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1030,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1031,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.03846,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,1032,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1034,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1033,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.03846,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,1036,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,100,"      return subtree;
",2,0,0,0,0,1,0,0,0,2,15,6,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,412,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.03846,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,402,"      if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {
",0,2,0,3,7,0,10,0,0,13,67,6,0.03704,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,1171,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.03571,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,407,"    Node arrayNode = callTarget.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,4,0.03448,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,408,"    Node functionName = arrayNode.getNext();
",2,0,0,1,2,0,4,2,0,8,40,4,0.03448,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,410,"    if (!arrayNode.isArrayLit() ||
",0,1,0,1,3,0,4,0,0,6,30,4,0.03448,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,113,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,133,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,871,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,876,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,877,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,970,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,971,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,978,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,979,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.03125,0,0
defect4j,closure,com/google/javascript/rhino/Node,129,980,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,981,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,982,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,984,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,986,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,989,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,129,990,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.03125,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,930,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,130,931,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,932,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,940,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,941,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,942,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,943,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,944,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,954,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,958,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,966,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,985,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,130,994,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,223,"          ReferenceCollectingCallback.Reference aliasRef =
",6,0,0,0,0,0,0,0,0,6,48,10,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,226,"          Node newNode = alias.node.cloneTree();
",6,0,0,1,2,0,2,2,0,10,38,10,0.11111,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,227,"          aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);
",0,0,0,3,6,0,12,0,0,12,63,11,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,228,"          newNodes.add(newNode);
",0,0,0,1,2,0,6,0,0,6,22,11,0.11111,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,459,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.10000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,460,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.10000,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,475,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,476,"      if (size > 0 && references.get(0).isInitializingDeclaration()) {
",2,2,0,3,7,0,6,0,0,10,64,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,477,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,180,"    NodeTraversal t = new NodeTraversal(compiler,
",4,0,0,0,1,0,0,4,0,8,45,4,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,182,"    t.traverseAtScope(scope);
",0,0,0,1,2,0,6,0,0,6,25,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,183,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,990,"            aliasingGets--;
",2,0,0,0,0,0,0,0,0,3,15,8,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,991,"            totalGets--;
",2,0,0,0,0,0,0,0,0,3,12,8,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,992,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,192,"    NodeFilter(Set<Node> newNodes) {
",4,0,0,1,3,0,0,4,0,8,32,3,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,193,"      this.newNodes = newNodes;
",4,0,0,0,0,0,0,0,0,5,25,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,194,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,198,"      if (!n.isQualifiedName()) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,199,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,203,"      for (current = n;
",4,0,0,0,1,0,0,0,0,5,17,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,204,"           current.isGetProp();
",0,0,0,1,2,0,4,0,0,4,20,6,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,211,"      return current.isName() && newNodes.contains(current);
",0,1,0,2,4,1,10,0,0,11,54,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,189,"  private static class NodeFilter implements Predicate<Node> {
",2,0,0,0,1,2,0,4,0,8,60,2,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,181,"              name.removeRef(ref);
",0,0,0,1,2,0,6,0,0,6,20,15,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,220,"        int size = aliasRefs.references.size();
",6,0,0,1,2,0,2,0,0,8,39,9,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,221,"        Set<Node> newNodes = Sets.newHashSetWithExpectedSize(size - 1);
",4,1,0,1,2,0,4,4,0,13,63,8,0.09091,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,222,"        for (int i = 1; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,8,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,232,"        aliasParent.replaceChild(alias.node, IR.nullNode());
",4,0,0,2,4,0,8,0,0,12,52,9,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,233,"        compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,9,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,237,"        namespace.scanNewNodes(alias.scope, newNodes);
",4,0,0,1,2,0,6,0,0,10,46,9,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,238,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,312,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.09091,0,1
defect4j,closure,com/google/javascript/rhino/IR,130,471,"    return new Node(Token.NULL);
",4,0,0,1,2,1,0,2,0,6,28,5,0.09091,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,965,"      if (refs != null && refs.remove(ref)) {
",2,2,0,2,5,0,6,0,0,10,39,5,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,966,"        if (ref == declaration) {
",4,1,0,1,3,0,0,0,0,5,25,7,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,978,"        switch (ref.type) {
",4,0,0,1,3,0,0,0,0,4,19,8,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,1004,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,140,"    return referenceMap.get(v);
",0,0,0,1,2,1,6,0,0,6,27,5,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,281,"    public void afterExitScope(NodeTraversal t, ReferenceMap referenceMap) {}
",6,0,0,2,4,1,0,4,0,11,73,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,207,"      Scope scope = alias.scope;
",6,0,0,0,0,0,0,2,0,8,26,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,208,"      Var aliasVar = scope.getVar(aliasParent.getString());
",2,0,0,2,4,0,8,2,0,12,53,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,209,"      ReferenceCollectingCallback collector =
",2,0,0,0,0,0,0,2,0,4,39,6,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,213,"      (new NodeTraversal(compiler, collector)).traverseAtScope(scope);
",4,0,0,3,6,0,4,2,0,10,64,7,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,215,"      ReferenceCollection aliasRefs = collector.getReferences(aliasVar);
",2,0,0,1,2,0,6,2,0,10,66,6,0.07692,0,0
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,216,"      if (aliasRefs.isWellDefined()
",0,0,0,1,3,0,4,0,0,4,29,9,0.07692,0,1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,709,"           currentBlock = currentBlock.getParent()) {
",2,0,0,1,4,0,4,0,0,7,42,5,0.07143,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,570,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.06667,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1417,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1433,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1446,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,2132,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,1,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,2133,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,2134,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,2135,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,121,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,133,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,1,0,1
defect4j,closure,com/google/javascript/rhino/InputId,131,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1156,"              appendHexJavaScriptRepresentation(sb, c);
",0,0,0,1,2,0,6,0,0,6,41,12,1,0,0
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1254,"      appendHexJavaScriptRepresentation(c, sb);
",0,0,0,1,2,0,6,0,0,6,41,7,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1258,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1259,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1271,"    if (Character.isSupplementaryCodePoint(codePoint)) {
",0,0,0,2,5,0,6,0,0,6,52,5,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1281,"    out.append(""\\u"")
",0,0,0,1,2,0,4,0,0,5,17,9,1,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1286,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,118,"        case QUOTED_PROP:        return ""quoted"";
",2,0,0,0,0,1,0,0,0,3,41,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,998,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1003,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1004,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1005,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1012,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1013,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1017,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1018,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1020,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1021,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1022,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,1023,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1025,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1024,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1027,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,343,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,1517,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,2434,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,195,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.44444,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,112,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,132,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,860,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,861,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,862,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,865,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,866,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,867,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,868,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.40000,0,0
defect4j,closure,com/google/javascript/rhino/Node,131,871,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,872,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,923,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,959,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,131,960,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.40000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,112,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,132,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,860,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,861,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,862,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,865,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,866,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,867,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,868,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,871,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,872,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,923,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,944,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,954,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,959,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,960,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,961,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,962,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,967,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,968,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,969,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,970,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,1.00000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,971,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,972,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,973,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,975,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,977,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,980,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,981,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,986,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,311,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/SourceFile,132,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,512,"          cc.addOp(o, false);
",0,0,0,1,2,0,6,0,0,7,19,9,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,513,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,9,1.00000,0,1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,515,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,930,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.50000,0,0
defect4j,closure,com/google/javascript/rhino/Node,132,931,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,932,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,940,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,941,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,942,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,943,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,958,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,966,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,985,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.50000,0,1
defect4j,closure,com/google/javascript/rhino/Node,132,994,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,2155,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1356,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.50000,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,776,"          Node lhs = thenOp.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,10,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,777,"          if (areNodesEqualForInlining(lhs, elseOp.getFirstChild()) &&
",0,1,0,2,5,0,8,0,0,9,60,10,0.33333,0,1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,784,"            n.removeChild(cond);
",0,0,0,1,2,0,6,0,0,6,20,13,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,785,"            Node assignName = thenOp.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,786,"            Node thenExpr = thenOp.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,12,0.33333,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1838,"    restoreLookAhead(token);
",0,0,0,1,2,0,4,0,0,4,24,5,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1839,"    return reportGenericTypeSyntaxWarning();
",0,0,0,1,2,1,2,0,0,2,40,5,0.16667,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2303,"    return reportTypeSyntaxWarning(""msg.jsdoc.type.syntax"");
",0,0,0,1,2,1,2,0,0,3,56,5,0.14286,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,947,"                          type = createJSTypeExpression(newNode(Token.QMARK));
",6,0,0,2,4,0,4,0,0,11,52,18,0.03846,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2341,"    unreadToken = token;
",4,0,0,0,0,0,0,0,0,5,20,4,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2342,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2298,"    parser.addTypeWarning(warning, stream.getLineno(), stream.getCharno());
",0,0,0,3,6,0,14,0,0,14,71,5,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2299,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02381,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,958,"                          ExtractionInfo returnDescriptionInfo =
",2,0,0,0,0,0,0,2,0,4,38,18,0.01471,0,0
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1483,"              builder.append(' ');
",0,0,0,1,2,0,4,0,0,5,20,13,0.01235,0,0
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,170,"      JSDocInfo.StringPosition position = new JSDocInfo.StringPosition();
",10,0,0,1,2,0,0,0,0,10,67,6,0.01136,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,171,"      position.setItem(text);
",0,0,0,1,2,0,6,0,0,6,23,7,0.01136,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,172,"      position.setPositionInformation(startLineno, startCharno,
",0,0,0,0,1,0,8,0,0,8,57,7,0.01136,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1475,"            if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {
",8,3,0,1,3,0,0,0,0,12,65,9,0.00990,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,82,"      errorReporter.warning(
",0,0,0,0,1,0,4,0,0,4,22,6,0.00943,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,86,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00943,0,1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,48,"public final class JsDocInfoParser {
",2,0,0,0,1,2,0,0,0,4,36,1,0.00645,0,1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,136,"  static class TrimmedStringPosition extends StringPosition {
",2,0,0,0,1,1,0,2,0,5,59,2,0.00549,0,1
