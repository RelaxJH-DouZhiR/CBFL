dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,closure,com/google/javascript/jscomp/FoldConstants,105,1500,"    if (sb.length() > 0) {
",0,1,0,2,5,0,4,0,0,5,22,4,1.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,109,1908,"          return parseTypeName(token);
",0,0,0,1,2,1,4,0,0,4,28,5,0.04211,1,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,111,54,"          return topType;
",2,0,0,0,0,1,0,0,0,2,15,8,1.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,113,329,"      if (provided != null) {
",2,1,0,1,3,0,0,0,0,3,23,6,0.04000,1,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,431,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00952,1,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,308,"        List<Reference> refs = referenceInfo.references;
",6,0,0,0,0,0,0,4,0,10,48,7,0.00629,1,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,252,"    if (comment.getValue().indexOf(""/* @"") != -1 || comment.getValue().indexOf(""\n * @"") != -1) {
",0,3,0,5,11,0,12,0,0,19,93,4,0.28125,1,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,927,"      ObjectType objType = ObjectType.cast(type);
",2,0,0,1,2,0,6,2,0,10,43,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,928,"      if (objType != null) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,930,"        if (objType.isFunctionType()) {
",0,0,0,2,5,0,4,0,0,4,31,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,937,"        while (constructor != null) {
",2,1,0,1,3,0,0,0,0,3,29,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,938,"          for (ObjectType itype : constructor.getImplementedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,65,9,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,951,"          if (constructor.isInterface() || constructor.isConstructor()) {
",0,1,0,3,7,0,8,0,0,9,63,9,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,952,"            constructor = constructor.getSuperClassConstructor();
",2,0,0,1,2,0,4,0,0,7,53,11,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,958,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,118,345,"      } else if (objType.matchesObjectContext()) {
",0,0,0,2,6,0,4,0,0,4,44,9,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,892,"            foundType = objType;
",4,0,0,0,0,0,0,0,0,5,20,11,0.07018,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,119,"    Map<Node<E>, ImmutableSet.Builder<E>> groupsTmp = Maps.newHashMap();
",6,0,0,1,2,0,4,8,0,18,68,4,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,120,"    for (Node<E> elem : elmap.values()) {
",2,0,0,2,5,0,4,4,0,10,37,4,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,121,"      Node<E> root = findRoot(elem);
",2,0,0,1,2,0,4,4,0,10,30,6,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,122,"      ImmutableSet.Builder<E> builder = groupsTmp.get(root);
",6,0,0,1,2,0,6,2,0,14,54,6,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,123,"      if (builder == null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,124,"        builder = ImmutableSet.builder();
",2,0,0,1,2,0,4,0,0,7,33,8,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,125,"        groupsTmp.put(root, builder);
",0,0,0,1,2,0,8,0,0,8,29,9,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,127,"      builder.add(elem.element);
",4,0,0,1,2,0,4,0,0,8,26,7,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,128,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,129,"    ImmutableList.Builder<Set<E>> result = ImmutableList.builder();
",6,0,0,1,2,0,4,4,0,14,63,4,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,130,"    for (ImmutableSet.Builder<E> group : groupsTmp.values()) {
",6,0,0,2,5,0,4,2,0,12,58,4,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,131,"      result.add(group.build());
",0,0,0,2,4,0,8,0,0,8,26,7,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,132,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,133,"    return result.build();
",0,0,0,1,2,1,4,0,0,4,22,5,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,456,"        if (propertiesToErrorFor.containsKey(name)) {
",0,0,0,2,5,0,6,0,0,6,45,8,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,880,"      ObjectType foundType = null;
",2,0,0,0,0,0,0,2,0,4,28,5,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,881,"      ObjectType objType = ObjectType.cast(type);
",2,0,0,1,2,0,6,2,0,10,43,5,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,882,"      if (objType != null && objType.getConstructor() != null
",2,4,0,1,3,0,4,0,0,10,55,5,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,890,"        while (objType != null && objType.getImplicitPrototype() != objType) {
",4,3,0,2,5,0,4,0,0,11,70,7,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,891,"          if (objType.hasOwnProperty(field)) {
",0,0,0,2,5,0,6,0,0,6,36,10,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,894,"          objType = objType.getImplicitPrototype();
",2,0,0,1,2,0,4,0,0,7,41,9,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,900,"      if (foundType == null) {
",2,1,0,1,3,0,0,0,0,3,24,5,0.06897,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,910,"      return foundType;
",2,0,0,0,0,1,0,0,0,2,17,5,0.06897,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,1151,"      if (hasInstanceType()) {
",0,0,0,2,5,0,2,0,0,2,24,7,0.06780,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,1155,"      if (prototypeSlot != null) {
",2,1,0,1,3,0,0,0,0,3,28,6,0.06780,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,1156,"        ((ObjectType) prototypeSlot.getType()).clearCachedValues();
",0,0,0,4,8,0,6,2,0,8,59,9,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,166,"      checkState(!skipRenaming, ""Attempt to record skipped property: %s"", name);
",2,0,0,1,2,0,4,0,0,8,74,6,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,167,"      if (typeSystem.isInvalidatingType(top)) {
",0,0,0,2,5,0,6,0,0,6,41,6,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,171,"        if (typeSystem.isTypeToSkip(top)) {
",0,0,0,2,5,0,6,0,0,6,35,8,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,175,"        if (relatedType == null) {
",2,1,0,1,3,0,0,0,0,3,26,7,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,176,"          getTypes().add(top);
",0,0,0,2,4,0,6,0,0,6,20,10,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,180,"        typeSystem.recordInterfaces(type, top, this);
",0,0,0,1,2,0,8,0,0,8,45,8,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,181,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,271,"          invalidate();
",0,0,0,1,2,0,2,0,0,2,13,10,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,272,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,274,"        renameNodes.add(node);
",0,0,0,1,2,0,6,0,0,6,22,8,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,275,"        rootTypes.put(node, type);
",0,0,0,1,2,0,8,0,0,8,26,8,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,566,"        prop.addType(type, topType, relatedType);
",0,0,0,1,2,0,10,0,0,10,41,8,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,567,"        return topType;
",2,0,0,0,0,1,0,0,0,2,15,7,0.06780,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,943,"          FunctionType functionType = objectJsType.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,63,10,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,944,"          if (functionType.isConstructor()) {
",0,0,0,2,5,0,4,0,0,4,35,11,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,75,"    union(e, e);
",0,0,0,1,2,0,6,0,0,6,12,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,76,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,716,"        setPrototypeBasedOn(objType, propertyNode);
",0,0,0,1,2,0,6,0,0,6,43,9,0.06557,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,118,717,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,308,"      this.invalidationMap = LinkedHashMultimap.create();
",2,0,0,1,2,0,4,0,0,7,51,6,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,701,"              double d = getSimpleNumber(key);
",2,0,0,1,2,0,4,0,0,6,32,13,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,702,"              if (!Double.isNaN(d)) {
",0,0,0,2,5,0,6,0,0,7,23,12,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,835,"      if (type.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,25,6,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,838,"        ObjectType objType = type.toObjectType();
",2,0,0,1,2,0,4,2,0,8,41,7,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,839,"        if (objType != null &&
",2,3,0,0,1,0,0,0,0,5,22,7,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,849,"          return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,855,"      if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,5,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,859,"      if (type.isEnumElementType()) {
",0,0,0,2,5,0,4,0,0,4,31,6,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,864,"      if (!(type instanceof ObjectType)) {
",2,0,0,2,5,0,0,2,0,5,36,5,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,873,"      if (""prototype"".equals(field)) {
",0,0,0,2,5,0,4,0,0,5,32,6,0.06557,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,609,"          ++propsSkipped;
",2,0,0,0,0,0,0,0,0,3,15,10,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,154,"      if (types == null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,155,"        types = new StandardUnionFind<T>();
",2,0,0,1,2,0,0,4,0,7,35,7,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,157,"      return types;
",2,0,0,0,0,1,0,0,0,2,13,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,253,"      boolean changed = !skipRenaming;
",4,0,0,0,0,0,0,0,0,5,32,6,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,254,"      skipRenaming = true;
",2,0,0,0,0,0,0,0,0,4,20,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,255,"      types = null;
",2,0,0,0,0,0,0,0,0,3,13,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,256,"      return changed;
",2,0,0,0,0,1,0,0,0,2,15,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,57,"  public StandardUnionFind() {
",2,0,0,1,3,1,0,0,0,3,28,2,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,54,"  private final Map<E, Node<E>> elmap = Maps.newLinkedHashMap();
",2,0,0,1,2,2,4,8,0,16,62,2,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,58,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,80,"    Node<E> nodeA = findRootOrCreateNode(a);
",2,0,0,1,2,0,4,4,0,10,40,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,81,"    Node<E> nodeB = findRootOrCreateNode(b);
",2,0,0,1,2,0,4,4,0,10,40,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,83,"    if (nodeA == nodeB) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,84,"      return nodeA.element;
",4,0,0,0,0,1,0,0,0,4,21,7,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,143,"    Node<E> node = elmap.get(e);
",2,0,0,1,2,0,6,4,0,12,28,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,144,"    if (node != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,145,"      return findRoot(node);
",0,0,0,1,2,1,4,0,0,4,22,7,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,147,"    node = new Node<E>(e);
",4,0,0,1,2,0,0,4,0,9,22,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,148,"    elmap.put(e, node);
",0,0,0,1,2,0,8,0,0,8,19,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,149,"    return node;
",2,0,0,0,0,1,0,0,0,2,12,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,160,"    if (node.parent != node) {
",6,1,0,1,3,0,0,0,0,7,26,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,163,"    return node.parent;
",4,0,0,0,0,1,0,0,0,4,19,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,223,"    Node(E element) {
",4,0,0,1,3,0,0,2,0,6,17,3,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,215,"    int rank = 0;
",2,0,0,0,0,0,0,0,0,2,13,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,221,"    int size = 1;
",2,0,0,0,0,0,0,0,0,2,13,4,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,224,"      this.parent = this;
",2,0,0,0,0,0,0,0,0,3,19,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,225,"      this.element = element;
",4,0,0,0,0,0,0,0,0,5,23,5,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/StandardUnionFind,118,226,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,788,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.06452,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,551,"      Iterable<T> alternatives = typeSystem.getTypeAlternatives(type);
",2,0,0,1,2,0,6,4,0,12,64,5,0.06349,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,552,"      if (alternatives != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.06349,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,562,"        T topType = typeSystem.getTypeWithProperty(prop.name, type);
",6,0,0,1,2,0,6,2,0,14,60,7,0.06349,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,563,"        if (typeSystem.isInvalidatingType(topType)) {
",0,0,0,2,5,0,6,0,0,6,45,8,0.06349,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,118,942,"        if (objectJsType != null && objectJsType.isFunctionType()) {
",2,2,0,2,5,0,4,0,0,8,60,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,795,"    for (int index = 0; index < len; index++) {
",8,1,0,1,3,0,0,0,0,10,43,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,796,"      char c = s.charAt(index);
",2,0,0,1,2,0,6,0,0,8,25,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,797,"      if (c < '0' || c > '9') {
",4,3,0,1,3,0,0,0,0,9,25,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1567,"          ObjectType qVarType = ObjectType.cast(qVar.getType());
",2,0,0,2,4,0,8,2,0,12,54,9,0.06154,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,118,1568,"          if (qVarType != null &&
",2,3,0,0,1,0,0,0,0,5,23,9,0.06154,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,270,"        if (typeSystem.isInvalidatingType(type)) {
",0,0,0,2,5,0,6,0,0,6,42,8,0.06154,0,-1
defect4j,closure,com/google/javascript/jscomp/DisambiguateProperties,118,277,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.06154,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,791,"    int len = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.06154,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,792,"    if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.06154,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,118,805,"    if (isSimpleNumber(s)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.06154,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,220,"      name = name.parent;
",6,0,0,0,0,0,0,0,0,7,19,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,523,"      validateCatch(catches.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,39,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,524,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,539,"    validateNodeType(Token.CATCH, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,540,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,541,"    validateName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,542,"    validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,543,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,655,"      AstNode catchVar = clauseNode.getVarName();
",2,0,0,1,2,0,4,2,0,8,43,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,656,"      Node node = newNode(Token.CATCH, transform(catchVar));
",6,0,0,2,4,0,6,2,0,14,54,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,657,"      if (clauseNode.getCatchCondition() != null) {
",0,1,0,2,5,0,4,0,0,5,45,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,663,"      node.addChildToBack(transformBlock(clauseNode.getBody()));
",0,0,0,3,6,0,10,0,0,10,58,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,664,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1155,"        if (lineSet == false) {
",2,1,0,1,3,0,0,0,0,4,23,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1156,"          block.setLineno(cc.getLineno());
",0,0,0,2,4,0,8,0,0,8,32,10,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1157,"          maybeSetLengthFrom(block, cc);
",0,0,0,1,2,0,6,0,0,6,30,10,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1158,"          lineSet = true;
",2,0,0,0,0,0,0,0,0,4,15,9,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1160,"        block.addChildToBack(transform(cc));
",0,0,0,2,4,0,8,0,0,8,36,8,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1161,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,191,"        return processCatchClause((CatchClause) node);
",2,0,0,2,4,1,2,2,0,6,46,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,149,"        Preconditions.checkState(n.getChildCount() == 2);
",0,1,0,2,4,0,8,0,0,9,49,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,150,"        Preconditions.checkState(n.getFirstChild().isName());
",0,0,0,3,6,0,10,0,0,10,53,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,154,"        final Node var = n.getFirstChild();
",2,0,0,1,2,1,4,2,0,9,35,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,155,"        final Node block = var.getNext();
",2,0,0,1,2,1,4,2,0,9,33,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,157,"        declareVar(var);
",0,0,0,1,2,0,4,0,0,4,16,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,158,"        scanVars(block);
",0,0,0,1,2,0,4,0,0,4,16,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,119,159,"        return;  // only one child to scan
",0,0,0,0,0,1,0,0,0,0,34,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,135,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,136,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,511,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,512,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,513,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,514,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,516,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,519,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,520,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,521,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,522,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,528,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,533,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,536,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1147,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1149,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1150,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1152,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1162,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1164,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1165,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1172,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1177,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,159,"          reportRefToUndefinedName(name, ref);
",0,0,0,1,2,0,6,0,0,6,36,11,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,218,"    while (name.parent != null &&
",4,2,0,0,1,0,0,0,0,6,29,4,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,223,"    compiler.report(
",0,0,0,0,1,0,4,0,0,4,16,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,226,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,158,"        if (!isGlobalExpr) {
",2,0,0,1,3,0,0,0,0,3,20,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,205,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,198,"    Node parent = ref.node.getParent();
",6,0,0,1,2,0,2,2,0,10,35,4,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,199,"    if (parent.isExprResult()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1141,"      return newNode(Token.THROW,
",4,0,0,0,1,1,2,0,0,6,27,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,264,"        return processThrowStatement((ThrowStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,132,"        validateThrow(n);
",0,0,0,1,2,0,4,0,0,4,17,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,133,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,489,"    validateNodeType(Token.THROW, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,490,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,491,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,492,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,119,203,"    return type.key + "". "" + description + "" at "" +
",6,1,0,0,0,1,0,0,0,9,47,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,1269,"      return source == null ? """" : source.getName();
",2,1,0,1,2,1,4,0,0,8,46,6,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,81,"      namespace = new GlobalNamespace(compiler, externs, root);
",8,0,0,1,2,0,0,2,0,11,57,6,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,796,"      valid = n.hasMoreThanOneChild();
",2,0,0,1,2,0,4,0,0,7,32,7,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,119,240,"      return nextConvention.getIndirectlyDeclaredProperties();
",0,0,0,1,2,1,4,0,0,4,56,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,1074,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,119,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,129,"      for (Name prop : name.props) {
",6,0,0,1,3,0,0,2,0,8,30,6,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,132,"        boolean propIsDefined = false;
",2,0,0,0,0,0,0,0,0,3,30,9,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,133,"        if (nameIsDefined) {
",2,0,0,1,3,0,0,0,0,2,20,8,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,140,"        validateName(prop, propIsDefined);
",0,0,0,1,2,0,6,0,0,6,34,9,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,141,"        checkDescendantNames(prop, propIsDefined);
",0,0,0,1,2,0,6,0,0,6,42,9,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,142,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,149,"    Ref declaration = name.getDeclaration();
",2,0,0,1,2,0,4,2,0,8,40,4,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,150,"    Name parent = name.parent;
",6,0,0,0,0,0,0,2,0,8,26,4,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,152,"    JSModuleGraph moduleGraph = compiler.getModuleGraph();
",2,0,0,1,2,0,4,2,0,8,54,4,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,153,"    for (Ref ref : name.getRefs()) {
",2,0,0,2,5,0,4,2,0,8,32,4,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,155,"      boolean isGlobalExpr = ref.getNode().getParent().isExprResult();
",2,0,0,3,6,0,8,0,0,10,64,7,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,157,"      if (!isDefined && !isTypedef(ref)) {
",2,1,0,2,5,0,4,0,0,9,36,6,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,193,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,194,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,264,"      v = externsScope.getVar(name);
",2,0,0,1,2,0,6,0,0,9,30,6,0.01515,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,795,"    } else if (i == 2) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.01515,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,119,813,"      valid = n.getChildCount() <= i;
",4,1,0,1,2,0,4,0,0,10,31,6,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,119,140,"    return new JSError(sourceName, n, n.getLineno(), n.getCharno(), type, level,
",8,0,0,2,5,1,8,2,0,18,76,5,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,232,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,233,"    if (!irNode.isBlock()) {
",0,0,0,2,5,0,4,0,0,5,24,4,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,119,245,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,119,1709,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.01351,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,178,"      } else if (methodName.equals(""mixin"")) {
",0,0,0,2,6,0,4,0,0,5,40,8,0.01087,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,166,"      methodName = callName.getLastChild().getString();
",2,0,0,2,4,0,6,0,0,9,49,6,0.01042,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,176,"      if (methodName.equals(""inherits"")) {
",0,0,0,2,5,0,4,0,0,5,36,7,0.01010,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,101,"      checkDescendantNames(name, name.globalSets + name.localSets > 0);
",8,2,0,1,2,0,4,0,0,14,65,7,0.00952,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,102,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00952,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,128,"    if (name.props != null) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00952,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,144,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00952,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,658,"              type = Ref.Type.ALIASING_GET;
",8,0,0,0,0,0,0,0,0,9,29,11,0.00943,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,660,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00943,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,110,"          Node fullName = ref.getNode().getParent().getParent();
",2,0,0,3,6,0,8,2,0,12,54,10,0.00909,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,111,"          if (fullName.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,27,11,0.00909,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,112,"            props.add(fullName.getLastChild().getString());
",0,0,0,3,6,0,10,0,0,10,47,13,0.00909,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,1251,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00885,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,108,"      for (Ref ref : slot.getRefs()) {
",2,0,0,2,5,0,4,2,0,8,32,6,0.00885,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,109,"        if (ref.type == Ref.Type.PROTOTYPE_GET) {
",10,1,0,1,3,0,0,0,0,11,41,8,0.00885,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,115,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00885,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,655,"            } else if (isClassDefiningCall(parent)) {
",0,0,0,2,6,0,4,0,0,4,41,10,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,695,"      SubclassRelationship classes =
",2,0,0,0,0,0,0,2,0,4,30,5,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,697,"      return classes != null;
",2,1,0,0,0,1,0,0,0,3,23,5,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,98,"        continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,119,430,"    return indirectlyDeclaredProperties;
",2,0,0,0,0,1,0,0,0,2,36,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,104,"    return externsRoot != null;
",2,1,0,0,0,1,0,0,0,3,27,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,62,"  CheckGlobalNames(AbstractCompiler compiler, CheckLevel level) {
",6,0,0,1,3,0,0,4,0,10,63,2,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,39,"  private GlobalNamespace namespace = null;
",2,0,0,0,0,1,0,2,0,5,41,2,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,40,"  private final Set<String> objectPrototypeProps = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,67,2,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,41,"  private final Set<String> functionPrototypeProps = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,69,2,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,63,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,64,"    this.convention = compiler.getCodingConvention();
",2,0,0,1,2,0,4,0,0,7,49,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,65,"    this.level = level;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,66,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,80,"    if (namespace == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,85,"    Preconditions.checkState(namespace.hasExternsRoot());
",0,0,0,2,4,0,8,0,0,8,53,5,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,86,"    findPrototypeProps(""Object"", objectPrototypeProps);
",0,0,0,1,2,0,4,0,0,5,51,5,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,87,"    findPrototypeProps(""Function"", functionPrototypeProps);
",0,0,0,1,2,0,4,0,0,5,55,5,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,88,"    objectPrototypeProps.addAll(
",0,0,0,0,1,0,4,0,0,4,28,5,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,91,"    for (Name name : namespace.getNameForest()) {
",2,0,0,2,5,0,4,2,0,8,45,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,97,"      if (name.inExterns) {
",4,0,0,1,3,0,0,0,0,4,21,7,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,103,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,106,"    Name slot = namespace.getSlot(type);
",2,0,0,1,2,0,6,2,0,10,36,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,107,"    if (slot != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,119,117,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,119,"    return getOwnSlot(name);
",0,0,0,1,2,1,4,0,0,4,24,5,0.00794,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,124,"    ensureGenerated();
",0,0,0,1,2,0,2,0,0,2,18,5,0.00794,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,125,"    return nameMap.get(name);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00794,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,220,"      inExterns = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.00671,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,221,"      NodeTraversal.traverse(compiler, externsRoot, new BuildGlobalNamespace());
",0,0,0,2,4,0,8,2,0,10,74,7,0.00671,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,119,298,"        externsScope = t.getScope();
",2,0,0,1,2,0,4,0,0,7,28,7,0.00671,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,48,"      } else if (level == CheckLevel.WARNING) {
",6,1,0,1,4,0,0,0,0,7,41,7,0.00658,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,119,49,"        warningCount++;
",2,0,0,0,0,0,0,0,0,3,15,9,0.00658,0,-1
defect4j,closure,com/google/javascript/rhino/Node,120,1430,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,120,1446,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,120,1459,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,120,2194,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,120,2195,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,120,2196,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,120,2197,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,312,"              aliasInit = candidate.refInfo.getInitializingReference();
",6,0,0,1,2,0,2,0,0,9,57,13,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,313,"              Node value = aliasInit.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,42,13,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,314,"              Preconditions.checkNotNull(value);
",0,0,0,1,2,0,6,0,0,6,34,14,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,315,"              inlineWellDefinedVariable(candidate.alias,
",4,0,0,0,1,0,2,0,0,6,42,14,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,318,"              staleVars.add(candidate.alias);
",4,0,0,1,2,0,4,0,0,8,31,14,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,308,"            AliasCandidate candidate = aliasCandidates.get(nameNode);
",2,0,0,1,2,0,6,2,0,10,57,11,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,309,"            if (!staleVars.contains(candidate.alias) &&
",4,1,0,1,3,0,4,0,0,10,43,11,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,651,"        Node parent = initialization.getParent();
",2,0,0,1,2,0,4,2,0,8,41,8,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,652,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,9,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,696,"          Preconditions.checkState(refInit == refSet.get(1));
",2,1,0,2,4,0,8,0,0,11,51,10,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,697,"          startingReadRef = 2;
",2,0,0,0,0,0,0,0,0,3,20,9,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,283,"        lookAhead = null;
",2,0,0,0,0,0,0,0,0,3,17,7,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,284,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,711,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,701,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,625,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,328,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,2185,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,659,"        return compiler.getCodingConvention().isInlinableFunction(n);
",0,0,0,2,4,1,8,0,0,8,61,8,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,535,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,609,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,601,"        it = NodeIterators.LocalVarMotion.forVar(
",6,0,0,0,1,0,2,0,0,9,41,7,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,383,"      Reference decl = refSet.get(0);
",2,0,0,1,2,0,4,2,0,8,31,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,384,"      for (int i = 1; i < refSet.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,41,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,385,"        inlineValue(v, refSet.get(i), value.cloneTree());
",0,0,0,3,6,0,14,0,0,14,49,8,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,387,"      removeDeclaration(decl);
",0,0,0,1,2,0,4,0,0,4,24,6,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,388,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1607,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,183,"              aliasCandidates.put(value, new AliasCandidate(v, referenceInfo));
",4,0,0,2,4,0,6,2,0,12,65,14,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,131,"    AliasCandidate(Var alias, ReferenceCollection refInfo) {
",6,0,0,1,3,0,0,4,0,10,56,3,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,132,"      this.alias = alias;
",4,0,0,0,0,0,0,0,0,5,19,5,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,133,"      this.refInfo = refInfo;
",4,0,0,0,0,0,0,0,0,5,23,5,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,600,"      if (initialization.getParent().isVar()) {
",0,0,0,3,7,0,6,0,0,6,41,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,617,"      Node targetName = reference.getNode();
",2,0,0,1,2,0,4,2,0,8,38,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,618,"      while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,619,"        Node curNode = it.next();
",2,0,0,1,2,0,4,2,0,8,25,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,620,"        if (curNode == targetName) {
",4,1,0,1,3,0,0,0,0,5,28,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,623,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,335,"        staleVars.add(scope.getVar(root.getString()));
",0,0,0,3,6,0,12,0,0,12,46,8,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,120,1397,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,165,"      Preconditions.checkArgument(var.isVar());
",0,0,0,2,4,0,8,0,0,8,41,6,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,166,"      Preconditions.checkArgument(NodeUtil.isStatement(var));
",0,0,0,2,4,0,10,0,0,10,55,6,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,171,"      return new LocalVarMotion(
",0,0,0,0,1,1,0,2,0,2,26,7,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1223,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,193,"    private LocalVarMotion(Node nameNode, FunctionlessLocalScope iterator) {
",6,0,0,1,3,1,0,4,0,11,72,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,194,"      Preconditions.checkArgument(nameNode.isName());
",0,0,0,2,4,0,8,0,0,8,47,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,195,"      Node valueNode = NodeUtil.getAssignedValue(nameNode);
",2,0,0,1,2,0,6,2,0,10,53,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,196,"      this.varName = nameNode.getString();
",2,0,0,1,2,0,4,0,0,7,36,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,197,"      this.valueHasSideEffects = valueNode != null &&
",4,2,0,0,0,0,0,0,0,7,47,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,199,"      this.iterator = iterator;
",4,0,0,0,0,0,0,0,0,5,25,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,200,"      advanceLookAhead(true);
",0,0,0,1,2,0,2,0,0,3,23,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,201,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,205,"      return lookAhead != null;
",2,1,0,0,0,1,0,0,0,3,25,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,210,"      Node next = lookAhead;
",4,0,0,0,0,0,0,2,0,6,22,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,211,"      advanceLookAhead(false);
",0,0,0,1,2,0,2,0,0,3,24,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,212,"      return next;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,221,"      if (!atStart) {
",2,0,0,1,3,0,0,0,0,3,15,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,222,"        if (lookAhead == null) {
",2,1,0,1,3,0,0,0,0,3,24,7,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,228,"        Node curNode = iterator.current();
",2,0,0,1,2,0,4,2,0,8,34,7,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,229,"        if (curNode.isName() &&
",0,1,0,1,3,0,4,0,0,5,23,7,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,236,"      if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,241,"      Node nextNode = iterator.next();
",2,0,0,1,2,0,4,2,0,8,32,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,242,"      Node nextParent = iterator.currentParent();
",2,0,0,1,2,0,4,2,0,8,43,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,243,"      int type = nextNode.getType();
",2,0,0,1,2,0,4,0,0,6,30,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,245,"      if (valueHasSideEffects) {
",2,0,0,1,3,0,0,0,0,2,26,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,281,"      if (NodeUtil.nodeTypeMayHaveSideEffects(nextNode) && type != Token.NAME
",6,2,0,1,3,0,6,0,0,14,71,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,287,"      lookAhead = nextNode;
",4,0,0,0,0,0,0,0,0,5,21,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,288,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,51,"    FunctionlessLocalScope(Node ... ancestors) {
",4,0,0,1,3,0,0,2,0,6,44,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,44,"    private final Stack<Node> ancestors = new Stack<Node>();
",2,0,0,1,2,2,0,8,0,12,56,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,52,"      Preconditions.checkArgument(ancestors.length > 0);
",4,1,0,1,2,0,4,0,0,9,50,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,54,"      for (Node n : ancestors) {
",4,0,0,1,3,0,0,2,0,6,26,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,55,"        if (n.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,21,8,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,59,"        this.ancestors.add(0, n);
",2,0,0,1,2,0,4,0,0,6,25,8,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,66,"      return !(ancestors.size() == 1 && ancestors.peek().getNext() == null);
",0,3,0,4,8,1,10,0,0,14,70,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,71,"      Node current = ancestors.pop();
",2,0,0,1,2,0,4,2,0,8,31,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,72,"      if (current.getNext() == null) {
",0,1,0,2,5,0,4,0,0,5,32,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,73,"        current = ancestors.peek();
",2,0,0,1,2,0,4,0,0,7,27,7,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,76,"        if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,80,"        current = current.getNext();
",2,0,0,1,2,0,4,0,0,7,28,7,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,81,"        ancestors.push(current);
",0,0,0,1,2,0,6,0,0,6,24,8,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,84,"        if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,88,"        while (current.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,31,8,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,89,"          current = current.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,34,9,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,90,"          ancestors.push(current);
",0,0,0,1,2,0,6,0,0,6,24,10,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,93,"          if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,10,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,99,"      return current;
",2,0,0,0,0,1,0,0,0,2,15,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,111,"      return ancestors.peek();
",0,0,0,1,2,1,4,0,0,4,24,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,120,118,"      return ancestors.size() >= 2 ?
",0,1,0,1,2,1,4,0,0,5,30,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,376,"        Reference maybeDecl = references.get(index - 1);
",4,1,0,1,2,0,4,2,0,11,48,7,0.01316,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,377,"        if (maybeDecl.isVarDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,35,8,0.01316,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,398,"      } else if (isInitializingAssignmentAt(1)) {
",0,0,0,2,6,0,2,0,0,2,43,7,0.01316,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,565,"      return getParent().isVar();
",0,0,0,2,4,1,4,0,0,4,27,6,0.01316,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,575,"      return canMoveAggressively(value) ||
",0,1,0,1,2,1,4,0,0,5,36,5,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,585,"      return NodeUtil.isLiteralValue(value, true)
",0,0,0,1,2,1,6,0,0,7,43,7,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,365,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01282,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,375,"      if (index < references.size() && index > 0) {
",4,3,0,2,5,0,4,0,0,11,45,5,0.01282,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,120,710,"        if (currentBlock.isHoisted) {
",4,0,0,1,3,0,0,0,0,4,29,8,0.01282,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,547,"      Node value = initialization.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,47,5,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,548,"      Preconditions.checkState(value != null);
",2,1,0,1,2,0,4,0,0,7,40,6,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,549,"      if (value.isGetProp()
",0,0,0,1,3,0,4,0,0,4,21,8,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,555,"      if (value.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,25,6,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,120,1606,"    } else if (parent.isAssign() && parent.getFirstChild() == n) {
",2,2,0,3,8,0,8,0,0,12,62,5,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,413,"      Node varNode = decl.getParent();
",2,0,0,1,2,0,4,2,0,8,32,5,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,414,"      Node grandparent = decl.getGrandparent();
",2,0,0,1,2,0,4,2,0,8,41,5,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,416,"      compiler.reportChangeToEnclosingScope(decl.getNode());
",0,0,0,2,4,0,8,0,0,8,54,6,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,417,"      varNode.removeChild(decl.getNode());
",0,0,0,2,4,0,8,0,0,8,36,6,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,419,"      if (!varNode.hasChildren()) {
",0,0,0,2,5,0,4,0,0,5,29,5,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,420,"        Preconditions.checkState(varNode.isVar());
",0,0,0,2,4,0,8,0,0,8,42,8,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,421,"        NodeUtil.removeChild(grandparent, varNode);
",0,0,0,1,2,0,8,0,0,8,43,8,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,423,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,439,"        ref.getParent().replaceChild(ref.getNode(), value);
",0,0,0,3,6,0,12,0,0,12,51,8,0.01042,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,330,"      for (Node c = root.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,65,5,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,334,"      if (root.isName()) {
",0,0,0,2,5,0,4,0,0,4,20,6,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,337,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,434,"      compiler.reportChangeToEnclosingScope(ref.getNode());
",0,0,0,2,4,0,8,0,0,8,53,6,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,435,"      if (ref.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,37,6,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,441,"      blacklistVarReferencesInTree(value, v.scope);
",4,0,0,1,2,0,4,0,0,8,45,6,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,442,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,306,"          Node nameNode = refs.get(i).getNode();
",2,0,0,2,4,0,8,2,0,12,38,9,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,120,307,"          if (aliasCandidates.containsKey(nameNode)) {
",0,0,0,2,5,0,6,0,0,6,44,10,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,2185,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,121,1397,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1223,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,316,"              aliasInit = candidate.refInfo.getInitializingReference();
",6,0,0,1,2,0,2,0,0,9,57,13,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,317,"              Node value = aliasInit.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,42,13,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,318,"              Preconditions.checkNotNull(value);
",0,0,0,1,2,0,6,0,0,6,34,14,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,319,"              inlineWellDefinedVariable(candidate.alias,
",4,0,0,0,1,0,2,0,0,6,42,14,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,322,"              staleVars.add(candidate.alias);
",4,0,0,1,2,0,4,0,0,8,31,14,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,312,"            AliasCandidate candidate = aliasCandidates.get(nameNode);
",2,0,0,1,2,0,6,2,0,10,57,11,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,313,"            if (!staleVars.contains(candidate.alias) &&
",4,1,0,1,3,0,4,0,0,10,43,11,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,127,"  private static class AliasCandidate {
",2,0,0,0,1,2,0,0,0,4,37,2,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,283,"        lookAhead = null;
",2,0,0,0,0,0,0,0,0,3,17,7,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,284,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,655,"        Node parent = initialization.getParent();
",2,0,0,1,2,0,4,2,0,8,41,8,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,656,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,9,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,700,"          Preconditions.checkState(refInit == refSet.get(1));
",2,1,0,2,4,0,8,0,0,11,51,10,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,701,"          startingReadRef = 2;
",2,0,0,0,0,0,0,0,0,3,20,9,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,734,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1607,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,705,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,328,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,629,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,663,"        return compiler.getCodingConvention().isInlinableFunction(n);
",0,0,0,2,4,1,8,0,0,8,61,8,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,539,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,204,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,205,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02564,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,956,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,8,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,960,"      if (first == null || first.getType() != Token.NAME) {
",6,3,0,2,5,0,4,0,0,13,53,7,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,963,"        sb.append(first.getString());
",0,0,0,2,4,0,8,0,0,8,29,10,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,164,"      return nextConvention.isInlinableFunction(n);
",0,0,0,1,2,1,6,0,0,6,45,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,357,"      Preconditions.checkState(n.isFunction());
",0,0,0,2,4,0,8,0,0,8,41,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,121,358,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,632,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,133,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,121,146,"        return processInfixExpression((InfixExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,605,"        it = NodeIterators.LocalVarMotion.forVar(
",6,0,0,0,1,0,2,0,0,9,41,7,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,165,"      Preconditions.checkArgument(var.isVar());
",0,0,0,2,4,0,8,0,0,8,41,6,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,166,"      Preconditions.checkArgument(NodeUtil.isStatement(var));
",0,0,0,2,4,0,10,0,0,10,55,6,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,171,"      return new LocalVarMotion(
",0,0,0,0,1,1,0,2,0,2,26,7,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,387,"      Reference decl = refSet.get(0);
",2,0,0,1,2,0,4,2,0,8,31,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,388,"      for (int i = 1; i < refSet.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,41,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,389,"        inlineValue(v, refSet.get(i), value.cloneTree());
",0,0,0,3,6,0,14,0,0,14,49,8,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,391,"      removeDeclaration(decl);
",0,0,0,1,2,0,4,0,0,4,24,6,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,392,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,183,"              aliasCandidates.put(value, new AliasCandidate(v, referenceInfo));
",4,0,0,2,4,0,6,2,0,12,65,14,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,131,"    AliasCandidate(Var alias, ReferenceCollection refInfo) {
",6,0,0,1,3,0,0,4,0,10,56,3,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,132,"      this.alias = alias;
",4,0,0,0,0,0,0,0,0,5,19,5,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,133,"      this.refInfo = refInfo;
",4,0,0,0,0,0,0,0,0,5,23,5,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,604,"      if (initialization.getParent().isVar()) {
",0,0,0,3,7,0,6,0,0,6,41,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,621,"      Node targetName = reference.getNode();
",2,0,0,1,2,0,4,2,0,8,38,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,622,"      while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,623,"        Node curNode = it.next();
",2,0,0,1,2,0,4,2,0,8,25,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,624,"        if (curNode == targetName) {
",4,1,0,1,3,0,0,0,0,5,28,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,627,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,51,"    FunctionlessLocalScope(Node ... ancestors) {
",4,0,0,1,3,0,0,2,0,6,44,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,44,"    private final Stack<Node> ancestors = new Stack<Node>();
",2,0,0,1,2,2,0,8,0,12,56,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,52,"      Preconditions.checkArgument(ancestors.length > 0);
",4,1,0,1,2,0,4,0,0,9,50,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,54,"      for (Node n : ancestors) {
",4,0,0,1,3,0,0,2,0,6,26,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,55,"        if (n.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,21,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,59,"        this.ancestors.add(0, n);
",2,0,0,1,2,0,4,0,0,6,25,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,66,"      return !(ancestors.size() == 1 && ancestors.peek().getNext() == null);
",0,3,0,4,8,1,10,0,0,14,70,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,71,"      Node current = ancestors.pop();
",2,0,0,1,2,0,4,2,0,8,31,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,72,"      if (current.getNext() == null) {
",0,1,0,2,5,0,4,0,0,5,32,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,73,"        current = ancestors.peek();
",2,0,0,1,2,0,4,0,0,7,27,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,76,"        if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,80,"        current = current.getNext();
",2,0,0,1,2,0,4,0,0,7,28,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,81,"        ancestors.push(current);
",0,0,0,1,2,0,6,0,0,6,24,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,84,"        if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,88,"        while (current.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,31,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,89,"          current = current.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,34,9,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,90,"          ancestors.push(current);
",0,0,0,1,2,0,6,0,0,6,24,10,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,93,"          if (current.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,10,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,99,"      return current;
",2,0,0,0,0,1,0,0,0,2,15,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,111,"      return ancestors.peek();
",0,0,0,1,2,1,4,0,0,4,24,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,118,"      return ancestors.size() >= 2 ?
",0,1,0,1,2,1,4,0,0,5,30,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,193,"    private LocalVarMotion(Node nameNode, FunctionlessLocalScope iterator) {
",6,0,0,1,3,1,0,4,0,11,72,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,194,"      Preconditions.checkArgument(nameNode.isName());
",0,0,0,2,4,0,8,0,0,8,47,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,195,"      Node valueNode = NodeUtil.getAssignedValue(nameNode);
",2,0,0,1,2,0,6,2,0,10,53,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,196,"      this.varName = nameNode.getString();
",2,0,0,1,2,0,4,0,0,7,36,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,197,"      this.valueHasSideEffects = valueNode != null &&
",4,2,0,0,0,0,0,0,0,7,47,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,199,"      this.iterator = iterator;
",4,0,0,0,0,0,0,0,0,5,25,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,200,"      advanceLookAhead(true);
",0,0,0,1,2,0,2,0,0,3,23,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,201,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,205,"      return lookAhead != null;
",2,1,0,0,0,1,0,0,0,3,25,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,210,"      Node next = lookAhead;
",4,0,0,0,0,0,0,2,0,6,22,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,211,"      advanceLookAhead(false);
",0,0,0,1,2,0,2,0,0,3,24,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,212,"      return next;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,221,"      if (!atStart) {
",2,0,0,1,3,0,0,0,0,3,15,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,222,"        if (lookAhead == null) {
",2,1,0,1,3,0,0,0,0,3,24,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,228,"        Node curNode = iterator.current();
",2,0,0,1,2,0,4,2,0,8,34,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,229,"        if (curNode.isName() &&
",0,1,0,1,3,0,4,0,0,5,23,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,236,"      if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,241,"      Node nextNode = iterator.next();
",2,0,0,1,2,0,4,2,0,8,32,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,242,"      Node nextParent = iterator.currentParent();
",2,0,0,1,2,0,4,2,0,8,43,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,243,"      int type = nextNode.getType();
",2,0,0,1,2,0,4,0,0,6,30,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,245,"      if (valueHasSideEffects) {
",2,0,0,1,3,0,0,0,0,2,26,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,281,"      if (NodeUtil.nodeTypeMayHaveSideEffects(nextNode) && type != Token.NAME
",6,2,0,1,3,0,6,0,0,14,71,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,287,"      lookAhead = nextNode;
",4,0,0,0,0,0,0,0,0,5,21,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,288,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeIterators,121,153,"  static class LocalVarMotion implements Iterator<Node> {
",2,0,0,0,1,1,0,4,0,7,55,2,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,750,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,751,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,752,"    validateExpression(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,121,753,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,339,"        staleVars.add(scope.getVar(root.getString()));
",0,0,0,3,6,0,12,0,0,12,46,8,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,733,"        if (currentBlock.isHoisted) {
",4,0,0,1,3,0,0,0,0,4,29,8,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1606,"    } else if (parent.isAssign() && parent.getFirstChild() == n) {
",2,2,0,3,8,0,8,0,0,12,62,5,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,376,"        Reference maybeDecl = references.get(index - 1);
",4,1,0,1,2,0,4,2,0,11,48,7,0.01429,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,377,"        if (maybeDecl.isVarDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,35,8,0.01429,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,398,"      } else if (isInitializingAssignmentAt(1)) {
",0,0,0,2,6,0,2,0,0,2,43,7,0.01429,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,588,"      return getParent().isVar();
",0,0,0,2,4,1,4,0,0,4,27,6,0.01429,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3332,"      map.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,21,7,0.01408,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,121,2029,"      reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,7,0.01408,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3367,"              Node clone = mtoc.get(n);
",2,0,0,1,2,0,6,2,0,10,25,12,0.01408,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3368,"              if (n.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,48,12,0.01408,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,3370,"              } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,13,0.01408,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,365,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,121,375,"      if (index < references.size() && index > 0) {
",4,3,0,2,5,0,4,0,0,11,45,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,121,1103,"        return NodeUtil.functionCallHasSideEffects(n, compiler);
",0,0,0,1,2,1,8,0,0,8,56,6,0.01351,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,579,"      return canMoveAggressively(value) ||
",0,1,0,1,2,1,4,0,0,5,36,5,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,121,589,"      return NodeUtil.isLiteralValue(value, true)
",0,0,0,1,2,1,6,0,0,7,43,7,0.01299,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,114,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.01282,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,123,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.01282,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,134,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.01282,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,135,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.01282,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,871,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.01282,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,872,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.01282,0,-1
defect4j,closure,com/google/javascript/rhino/Node,121,873,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.01282,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,201,"          irFactory.handleBlockComment(comment);
",0,0,0,1,2,0,6,0,0,6,38,12,0.28125,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,258,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.28125,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,50,"  public SimpleSourceFile(String name, boolean extern) {
",6,0,0,1,3,1,0,2,0,9,54,2,0.07895,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,51,"    this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,0.07895,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,52,"    this.extern = extern;
",4,0,0,0,0,0,0,0,0,5,21,4,0.07895,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,53,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07895,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSourceFile,122,57,"    return name;
",2,0,0,0,0,1,0,0,0,2,12,4,0.07895,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,122,54,"    return createConfig(isIdeMode, languageMode, acceptConstKeyword, null);
",0,0,0,1,2,1,8,0,0,9,71,4,0.05422,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,122,217,"    this(reporter, false);
",2,0,0,1,2,0,0,0,0,3,22,4,0.05389,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,122,218,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05389,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,510,"      node.setLength(source.getLength());
",0,0,0,2,4,0,8,0,0,8,35,7,0.03475,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,935,"        return TokenStream.isKeyword(identifier);
",0,0,0,1,2,1,6,0,0,6,41,8,0.00838,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,163,"        reservedKeywords = null; // use TokenStream.isKeyword instead
",2,0,0,0,0,0,0,0,0,3,61,5,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,122,164,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00826,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,187,"        return id;
",2,0,0,0,0,1,0,0,0,2,10,4,0.00636,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,58,"        boolean id = false;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00631,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,59,"        String s = name;
",4,0,0,0,0,0,0,2,0,6,16,4,0.00631,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,61,"            String X = null;
",2,0,0,0,0,0,0,2,0,4,16,6,0.00631,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,63,"            partial: switch (s.length()) {
",2,0,0,2,5,0,4,0,0,6,30,6,0.00631,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,122,185,"            if (X!=null && X!=s && !X.equals(s)) return false;
",6,4,0,2,4,1,6,0,0,18,50,6,0.00631,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,122,490,"    return getPropertyMap().getPropertiesCount();
",0,0,0,2,4,1,4,0,0,4,45,5,0.00414,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,152,"    PropertyMap primaryParent = getPrimaryParent();
",2,0,0,1,2,0,2,2,0,6,47,4,0.00414,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,153,"    if (primaryParent == null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00414,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,156,"    Set<String> props = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,38,4,0.00414,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,157,"    collectPropertyNames(props);
",0,0,0,1,2,0,4,0,0,4,28,5,0.00414,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,158,"    return props.size();
",0,0,0,1,2,1,4,0,0,4,20,5,0.00414,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,174,"    for (String prop : properties.keySet()) {
",2,0,0,2,5,0,4,2,0,8,41,4,0.00412,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,175,"      props.add(prop);
",0,0,0,1,2,0,6,0,0,6,16,7,0.00412,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,176,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00412,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,177,"    PropertyMap primaryParent = getPrimaryParent();
",2,0,0,1,2,0,2,2,0,6,47,4,0.00412,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,178,"    if (primaryParent != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00412,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,179,"      primaryParent.collectPropertyNames(props);
",0,0,0,1,2,0,6,0,0,6,42,7,0.00412,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,181,"    for (PropertyMap p : getSecondaryParents()) {
",2,0,0,2,5,0,2,2,0,6,45,4,0.00412,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,122,186,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00412,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2191,"      case Token.IN: return ""in"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1397,"        return Token.IN;
",4,0,0,0,0,1,0,0,0,4,16,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2205,"      case Token.NEG: return ""-"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,267,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,272,"        if (n.getFirstChild().isNumber()) {
",0,0,0,3,7,0,6,0,0,6,35,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,275,"          cc.addOp(NodeUtil.opToStrNoFail(type), false);
",0,0,0,2,4,0,10,0,0,11,46,9,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,276,"          addExpr(first, NodeUtil.precedence(type), Context.OTHER);
",4,0,0,2,4,0,10,0,0,14,57,9,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,279,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,422,"            add(first, Context.IN_FOR_INIT_CLAUSE);
",4,0,0,1,2,0,4,0,0,8,39,10,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,135,"        addExpr(first, p, context);
",0,0,0,1,2,0,8,0,0,8,27,9,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,136,"        cc.addOp(opstr, true);
",0,0,0,1,2,0,6,0,0,7,22,9,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,137,"        addExpr(last, p, rhsContext);
",0,0,0,1,2,0,8,0,0,8,29,9,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1201,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,222,"      append("" "");
",0,0,0,1,2,0,2,0,0,3,12,8,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1361,"        return Token.NEG;
",4,0,0,0,0,1,0,0,0,4,17,6,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1490,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2060,"    this.prettyPrint = prettyPrint;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2061,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,1649,"    this.languageOut = languageOut;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,1650,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2092,"    this.lineLengthThreshold = lineLengthThreshold;
",4,0,0,0,0,0,0,0,0,5,47,4,0.01449,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,2093,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01449,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,244,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,245,"        unrollBinaryOperator(n, Token.COMMA, "","", context,
",4,0,0,0,1,0,6,0,0,11,50,6,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,247,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1410,"        return Token.COMMA;
",4,0,0,0,0,1,0,0,0,4,19,6,0.01064,0,-1
defect4j,closure,com/google/javascript/rhino/Node,123,1984,"    putBooleanProp(EMPTY_BLOCK, val);
",0,0,0,1,2,0,6,0,0,6,33,5,0.01031,0,-1
defect4j,closure,com/google/javascript/rhino/Node,123,1985,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01031,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1229,"      case Token.IN:     return 9;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01031,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,234,"        irNode.setType(Token.BLOCK);
",4,0,0,1,2,0,4,0,0,8,28,9,0.01031,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,235,"        irNode.setWasEmptyNode(true);
",0,0,0,1,2,0,4,0,0,5,29,9,0.01031,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,706,"      Node node = newNode(Token.EMPTY);
",6,0,0,1,2,0,2,2,0,10,33,5,0.01010,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,707,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01010,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1483,"    switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00909,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,424,"            addExpr(first, 0, Context.IN_FOR_INIT_CLAUSE);
",4,0,0,1,2,0,4,0,0,8,46,10,0.00901,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,223,"        } else  if (node instanceof ForLoop) {
",2,0,0,1,4,0,0,2,0,4,38,7,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,224,"          return processForLoop((ForLoop) node);
",2,0,0,2,4,1,2,2,0,6,38,9,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,743,"      Node node = newNode(
",2,0,0,0,1,0,2,2,0,6,20,5,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,748,"      node.addChildToBack(transformBlock(loopNode.getBody()));
",0,0,0,3,6,0,10,0,0,10,56,6,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,749,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1214,"      case Token.HOOK:   return 2;  // ?: operator
",4,0,0,0,0,1,0,0,0,4,44,6,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,283,"        Preconditions.checkState(childCount == 3);
",2,1,0,1,2,0,4,0,0,7,42,7,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,284,"        int p = NodeUtil.precedence(type);
",2,0,0,1,2,0,6,0,0,8,34,7,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,286,"        addExpr(first, p + 1, context);
",2,1,0,1,2,0,6,0,0,9,31,7,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,287,"        cc.addOp(""?"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,288,"        addExpr(first.getNext(), 1, rhsContext);
",0,0,0,2,4,0,8,0,0,8,40,7,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,289,"        cc.addOp("":"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,290,"        addExpr(last, 1, rhsContext);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,291,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00855,0,-1
defect4j,closure,com/google/javascript/rhino/Node,123,2330,"    return this.getType() == Token.IN;
",4,1,0,1,2,1,2,0,0,7,34,4,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,420,"          add(""for("");
",0,0,0,1,3,0,2,0,0,3,12,8,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,421,"          if (first.isVar()) {
",0,0,0,2,5,0,4,0,0,4,20,8,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,426,"          add("";"");
",0,0,0,1,2,0,2,0,0,3,9,8,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,427,"          add(first.getNext());
",0,0,0,2,4,0,6,0,0,6,21,8,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,428,"          add("";"");
",0,0,0,1,2,0,2,0,0,3,9,8,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,429,"          add(first.getNext().getNext());
",0,0,0,3,6,0,8,0,0,8,31,8,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,430,"          add("")"");
",0,0,0,1,3,0,2,0,0,3,9,8,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,431,"          addNonEmptyStatement(
",0,0,0,0,1,0,2,0,0,2,21,8,0.00826,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2181,"      case Token.OR: return ""||"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.00725,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1215,"      case Token.OR:     return 3;
",4,0,0,0,0,1,0,0,0,4,28,6,0.00662,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1438,"        return Token.OR;
",4,0,0,0,0,1,0,0,0,4,16,6,0.00641,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,238,"        return processConditionalExpression((ConditionalExpression) node);
",2,0,0,2,4,1,2,2,0,6,66,6,0.00633,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,669,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.00633,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,858,"          cc.endStatement(true);
",0,0,0,1,2,0,4,0,0,5,22,11,0.00610,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,854,"        if (cc.shouldPreserveExtraBlocks()) {
",0,0,0,2,5,0,4,0,0,4,37,9,0.00606,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,860,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00606,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,123,221,"        if (node instanceof ForInLoop) {
",2,0,0,1,3,0,0,2,0,4,32,6,0.00585,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,419,"        if (childCount == 4) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.00571,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,770,"    trustedStrings = yes;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00565,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,123,771,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00565,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2234,"    String res = opToStr(operator);
",2,0,0,1,2,0,4,2,0,8,31,4,0.00556,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2235,"    if (res == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00556,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2239,"    return res;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00556,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,139,"      append("";"");
",0,0,0,1,2,0,2,0,0,3,12,7,0.00459,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,140,"      maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,7,0.00459,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,123,141,"      statementNeedsEnded = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.00459,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,928,"      add(""("");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00435,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,929,"      add(n, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,22,7,0.00435,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,930,"      add("")"");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00435,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,237,"        Node newBlock = newNode(Token.BLOCK, irNode);
",6,0,0,1,2,0,4,2,0,12,45,8,0.00420,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,238,"        newBlock.setLineno(irNode.getLineno());
",0,0,0,2,4,0,8,0,0,8,39,9,0.00420,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,239,"        newBlock.setCharno(irNode.getCharno());
",0,0,0,2,4,0,8,0,0,8,39,9,0.00420,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,240,"        maybeSetLengthFrom(newBlock, node);
",0,0,0,1,2,0,6,0,0,6,35,9,0.00420,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,241,"        irNode = newBlock;
",4,0,0,0,0,0,0,0,0,5,18,8,0.00420,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1608,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00383,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1604,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00366,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1605,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00366,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1607,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00366,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1610,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00366,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,123,1611,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00366,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,233,"      if (irNode.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,23,7,0.00344,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,123,1512,"    return new Node(type, child1, child2, child3).clonePropsFrom(templateNode);
",8,0,0,2,4,1,4,2,0,14,75,5,0.00333,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,2202,"      case Token.ADD: return ""+"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.00326,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,123,1234,"      case Token.ADD:    return 11;
",4,0,0,0,0,1,0,0,0,4,29,6,0.00317,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,877,"          nodeToProcess = firstAndOnlyChild;
",4,0,0,0,0,0,0,0,0,5,34,10,0.00303,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1254,"    return currentContext == Context.BEFORE_DANGLING_ELSE ?
",6,1,0,0,0,1,0,0,0,7,55,5,0.00298,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,904,"    if (n.isLabel()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.00297,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,921,"      return (n.isFunction() || n.isDo());
",0,1,0,3,6,1,8,0,0,9,36,7,0.00297,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,867,"        Node firstAndOnlyChild = getFirstNonEmptyChild(n);
",2,0,0,1,2,0,4,2,0,8,50,8,0.00294,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,868,"        boolean alwaysWrapInBlock = cc.shouldPreserveExtraBlocks();
",2,0,0,1,2,0,4,0,0,6,59,9,0.00294,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,869,"        if (alwaysWrapInBlock || isOneExactlyFunctionOrDo(firstAndOnlyChild)) {
",2,1,0,2,5,0,4,0,0,7,71,8,0.00294,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1225,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,0.00294,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1226,"      if (c.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,7,0.00294,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,123,1232,"        return c;
",2,0,0,0,0,1,0,0,0,2,9,9,0.00294,0,-1
defect4j,closure,com/google/javascript/rhino/Node,123,398,"  public Node(int nodeType, Node left, Node mid, Node right) {
",10,0,0,1,3,1,0,6,0,17,60,2,0.00289,0,-1
defect4j,closure,com/google/javascript/rhino/Node,123,399,"    Preconditions.checkArgument(left.parent == null);
",4,1,0,1,2,0,4,0,0,9,49,5,0.00289,0,-1
defect4j,closure,com/google/javascript/rhino/Node,123,400,"    Preconditions.checkArgument(left.next == null);
",4,1,0,1,2,0,4,0,0,9,47,5,0.00289,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,155,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,211,"    Preconditions.checkArgument(node.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,213,"      node = node.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,28,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,219,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,113,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,122,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,133,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,134,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,869,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,870,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,871,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,874,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,875,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,876,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,877,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,880,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,881,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,932,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,968,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,969,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,970,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,971,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,976,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,977,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,978,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,979,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,980,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,981,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,982,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,984,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,986,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,989,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,990,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,995,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1007,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1012,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1013,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1014,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1021,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1022,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1026,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1027,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1029,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1030,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1031,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1032,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1034,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1033,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1036,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,124,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,55,"      reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,136,"          if (next.isQualifiedName()) {
",0,0,0,2,5,0,4,0,0,4,29,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,137,"            String nextName = next.getQualifiedName();
",2,0,0,1,2,0,4,2,0,8,42,9,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,138,"            if (value.isQualifiedName() &&
",0,1,0,1,3,0,4,0,0,5,30,9,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,145,"              if (!isSafeReplacement(next, assign)) {
",0,0,0,2,5,0,6,0,0,7,39,11,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,149,"              exprParent.removeChild(expr);
",0,0,0,1,2,0,6,0,0,6,29,12,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,150,"              expr.removeChild(assign);
",0,0,0,1,2,0,6,0,0,6,25,12,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,151,"              parent.replaceChild(next, assign);
",0,0,0,1,2,0,8,0,0,8,34,12,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,152,"              return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,208,"    if (node.isName()) {
",0,0,0,2,5,0,4,0,0,4,20,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,124,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,315,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,347,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,124,58,"      collapseAssign(rightValue, expr, exprParent);
",0,0,0,1,2,0,8,0,0,8,45,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,124,2016,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,1492,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3323,"    Preconditions.checkState(main.isEquivalentTo(clone));
",0,0,0,2,4,0,10,0,0,10,53,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3324,"    Map<Node, Node> mtoc = new HashMap<Node, Node>();
",2,0,0,1,2,0,0,12,0,14,49,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3325,"    mtoc.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,22,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3326,"    mtocHelper(mtoc, main, clone);
",0,0,0,1,2,0,8,0,0,8,30,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3327,"    return mtoc;
",2,0,0,0,0,1,0,0,0,2,12,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3331,"    if (main.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3334,"    Node mchild = main.getFirstChild(), cchild = clone.getFirstChild();
",4,0,0,2,4,0,8,2,0,14,67,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3335,"    while (mchild != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3336,"      mtocHelper(map, mchild, cchild);
",0,0,0,1,2,0,8,0,0,8,32,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3337,"      mchild = mchild.getNext();
",2,0,0,1,2,0,4,0,0,7,26,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3338,"      cchild = cchild.getNext();
",2,0,0,1,2,0,4,0,0,7,26,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3340,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3354,"    final Map<Node, Node> mtoc = map;
",4,0,0,0,0,1,0,6,0,11,33,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3355,"    final boolean checkUnchanged = verifyUnchangedNodes;
",4,0,0,0,0,1,0,0,0,5,52,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3356,"    Node clone = mtoc.get(main);
",2,0,0,1,2,0,6,2,0,10,28,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3357,"    if (main.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,51,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3359,"    } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3362,"    visitPreOrder(main,
",0,0,0,0,1,0,4,0,0,4,19,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3377,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,124,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,69,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,70,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,71,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,72,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,73,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,124,74,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3363,"        new Visitor() {
",0,0,0,1,3,0,0,2,0,2,15,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3366,"            if (n.isFunction() && mtoc.containsKey(n)) {
",0,1,0,3,7,0,10,0,0,11,44,10,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,124,3374,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,136,"        addExpr(first, p, context);
",0,0,0,1,2,0,8,0,0,8,27,10,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,137,"        cc.addOp(opstr, true);
",0,0,0,1,2,0,6,0,0,7,22,10,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,124,138,"        addExpr(last, p, rhsContext);
",0,0,0,1,2,0,8,0,0,8,29,10,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,124,1557,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.11111,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,958,"      return thisType.toMaybeFunctionType().supAndInfHelper(
",0,0,0,1,3,1,6,0,0,6,54,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,202,"        if (outcome) {
",2,0,0,1,3,0,0,0,0,2,14,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,203,"          return caseEquality(condition, blindScope, SHEQ);
",0,0,0,1,2,1,8,0,0,8,49,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,205,"          return caseEquality(condition, blindScope, SHNE);
",0,0,0,1,2,1,8,0,0,8,49,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,678,"          if (!leftTypeRestricted.canTestForShallowEqualityWith(
",0,0,0,0,2,0,4,0,0,5,54,8,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,423,"        declareNameInScope(informed, right, restrictedRightType);
",0,0,0,1,2,0,8,0,0,8,57,9,0.04348,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,877,"    JSType inf = getGreatestSubtype(that);
",2,0,0,1,2,0,4,2,0,8,38,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,878,"    return !inf.isEmptyType() ||
",0,1,0,1,2,1,4,0,0,6,28,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,901,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,873,"    if (isEmptyType() || that.isEmptyType()) {
",0,1,0,3,7,0,6,0,0,7,42,4,0.03226,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1164,"    JSType commonType = getGreatestSubtype(that);
",2,0,0,1,2,0,4,2,0,8,45,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1165,"    return new TypePair(commonType, commonType);
",4,0,0,1,2,1,0,2,0,6,44,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,83,"        return p.typeA.getTypesUnderShallowEquality(p.typeB);
",8,0,0,1,2,1,2,0,0,10,53,9,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1179,"    if (that.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1187,"    if (isNullType() && that.isNullType() ||
",0,2,0,2,5,0,6,0,0,8,40,4,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1191,"      return new TypePair(this, that);
",2,0,0,1,2,1,0,2,0,4,32,7,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,98,"        return p.typeA.getTypesUnderShallowInequality(p.typeB);
",8,0,0,1,2,1,2,0,0,10,55,9,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,80,"        if (p.typeA == null || p.typeB == null) {
",8,3,0,1,3,0,0,0,0,11,41,8,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,95,"        if (p.typeA == null || p.typeB == null) {
",8,3,0,1,3,0,0,0,0,11,41,8,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,287,"      rightIsRefineable = true;
",2,0,0,0,0,0,0,0,0,4,25,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,125,1360,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,420,"        declareNameInScope(informed, left, restrictedLeftType);
",0,0,0,1,2,0,8,0,0,8,55,9,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,418,"      FlowScope informed = blindScope.createChildFlowScope();
",2,0,0,1,2,0,4,2,0,8,55,6,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,419,"      if (shouldRefineLeft) {
",2,0,0,1,3,0,0,0,0,2,23,6,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,422,"      if (shouldRefineRight) {
",2,0,0,1,3,0,0,0,0,2,24,6,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,425,"      return informed;
",2,0,0,0,0,1,0,0,0,2,16,6,0.01370,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,790,"    FunctionType greatestFn =
",2,0,0,0,0,0,0,2,0,4,25,4,0.01299,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,792,"    FunctionType leastFn =
",2,0,0,0,0,0,0,2,0,4,22,4,0.01299,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,794,"    return leastSuper ? greatestFn : leastFn;
",6,0,0,0,0,1,0,0,0,6,41,5,0.01299,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,780,"    } else if (functionInstance.isEquivalentTo(this)) {
",0,0,0,2,6,0,4,0,0,4,51,6,0.01235,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,427,"    return blindScope;
",2,0,0,0,0,1,0,0,0,2,18,4,0.01176,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,776,"    JSType functionInstance = registry.getNativeType(
",2,0,0,0,1,0,4,2,0,8,49,4,0.01163,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,778,"    if (functionInstance.isEquivalentTo(that)) {
",0,0,0,2,5,0,6,0,0,6,44,5,0.01163,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,320,"    return Integer.MAX_VALUE;
",4,0,0,0,0,1,0,0,0,4,25,5,0.01136,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,753,"    if (isOrdinaryFunction() && that.isOrdinaryFunction() &&
",0,1,0,2,5,0,6,0,0,7,56,4,0.01124,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,149,"        } else if (right.isTypeOf() &&
",0,1,0,1,4,0,4,0,0,5,30,6,0.01087,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,277,"      leftIsRefineable = true;
",2,0,0,0,0,0,0,0,0,4,24,6,0.01020,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,151,"          FunctionType other =
",2,0,0,0,0,0,0,2,0,4,20,10,0.01020,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,153,"          FunctionType supremum =
",2,0,0,0,0,0,0,2,0,4,23,10,0.01020,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,155,"          alternates.set(functionTypePosition, supremum);
",0,0,0,1,2,0,8,0,0,8,47,11,0.01020,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,156,"          result = null;
",2,0,0,0,0,0,0,0,0,3,14,10,0.01020,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,125,157,"          return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01020,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,743,"    Preconditions.checkNotNull(that);
",0,0,0,1,2,0,6,0,0,6,33,5,0.01000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,745,"    if (isEquivalentTo(that)) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,651,"        } else if (right.isTypeOf() && left.isString()) {
",0,1,0,3,8,0,8,0,0,9,49,7,0.00980,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,267,"    return caseEquality(condition.getFirstChild(), condition.getLastChild(),
",0,0,0,2,5,1,10,0,0,10,72,5,0.00943,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,140,"          left = condition.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00847,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,141,"          right = condition.getLastChild();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00847,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,298,"      return maybeRestrictTwoNames(
",0,0,0,0,1,1,2,0,0,2,29,7,0.00820,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,274,"    JSType leftType = getTypeIfRefinable(left, blindScope);
",2,0,0,1,2,0,6,2,0,10,55,4,0.00813,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,276,"    if (leftType != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00813,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,284,"    JSType rightType = getTypeIfRefinable(right, blindScope);
",2,0,0,1,2,0,6,2,0,10,57,4,0.00813,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,286,"    if (rightType != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00813,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,294,"    TypePair merged = merging.apply(new TypePair(leftType, rightType));
",6,0,0,2,4,0,4,4,0,14,67,4,0.00813,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,297,"    if (merged != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00813,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1410,"    public TypePair(JSType typeA, JSType typeB) {
",6,0,0,1,3,1,0,4,0,11,45,3,0.00813,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1411,"      this.typeA = typeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00813,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1412,"      this.typeB = typeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00813,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,1413,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00813,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,464,"            joinedType = slotA.getType().getLeastSupertype(fnSlotType);
",2,0,0,2,4,0,8,0,0,11,59,11,0.00746,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,644,"        left = n.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,645,"        right = n.getLastChild();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,647,"        if (left.isTypeOf()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,655,"        leftType = getJSType(left);
",2,0,0,1,2,0,4,0,0,7,27,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,656,"        rightType = getJSType(right);
",2,0,0,1,2,0,4,0,0,7,29,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,667,"        JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,2,0,8,68,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,668,"        JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,2,0,8,70,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,670,"        TernaryValue result = TernaryValue.UNKNOWN;
",6,0,0,0,0,0,0,2,0,8,43,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,671,"        if (n.getType() == Token.EQ || n.getType() == Token.NE) {
",8,3,0,3,7,0,8,0,0,19,57,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,685,"        if (result != TernaryValue.UNKNOWN) {
",6,1,0,1,3,0,0,0,0,7,37,6,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,689,"        ensureTyped(t, n, BOOLEAN_TYPE);
",0,0,0,1,2,0,8,0,0,8,32,7,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,690,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00741,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,136,"        if (operatorToken == Token.CASE) {
",6,1,0,1,3,0,0,0,0,7,34,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,144,"        Node typeOfNode = null;
",2,0,0,0,0,0,0,2,0,4,23,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,145,"        Node stringNode = null;
",2,0,0,0,0,0,0,2,0,4,23,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,146,"        if (left.isTypeOf() && right.isString()) {
",0,1,0,3,7,0,8,0,0,9,42,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,154,"        if (typeOfNode != null && stringNode != null) {
",4,3,0,1,3,0,0,0,0,7,47,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,413,"    boolean shouldRefineLeft =
",2,0,0,0,0,0,0,0,0,2,26,5,0.00709,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,415,"    boolean shouldRefineRight =
",2,0,0,0,0,0,0,0,0,2,27,5,0.00709,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,125,417,"    if (shouldRefineLeft || shouldRefineRight) {
",4,1,0,1,3,0,0,0,0,5,44,4,0.00709,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,899,"        return this == that;
",2,1,0,0,0,1,0,0,0,3,20,8,0.00667,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,457,"          StaticSlot<JSType> fnSlot
",2,0,0,0,0,0,0,4,0,6,25,9,0.00613,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,459,"          JSType fnSlotType = fnSlot == null ? null : fnSlot.getType();
",4,1,0,1,2,0,4,2,0,11,61,9,0.00613,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,460,"          if (fnSlotType == null) {
",2,1,0,1,3,0,0,0,0,3,25,9,0.00613,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,125,466,"        } else if (slotA == null || slotA.getType() == null) {
",2,3,0,2,6,0,4,0,0,9,54,8,0.00613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,898,"      if (that.isConstructor()) {
",0,0,0,2,5,0,4,0,0,4,27,7,0.00613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,577,"    return extendedInterfaces.size();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00559,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1769,"      for (ObjectType extInterface : functionType.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,70,7,0.00559,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,125,1779,"      if (functionType.getExtendedInterfacesCount() > 1) {
",0,1,0,2,5,0,4,0,0,5,52,7,0.00559,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,125,1368,"      return ImmutableList.of();
",0,0,0,1,2,1,4,0,0,4,26,7,0.00546,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,688,"        typeRegistry.declareType(fnName, fnType.getInstanceType());
",0,0,0,2,4,0,10,0,0,10,59,10,0.00535,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,125,1510,"    return FunctionType.forInterface(this, name, source,
",0,0,0,0,1,1,8,0,0,8,52,5,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,125,1367,"    if (info == null || info.extendedInterfaces == null) {
",6,3,0,1,3,0,0,0,0,9,54,4,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,164,"    super(registry, name,
",4,0,0,0,1,0,0,0,0,4,21,4,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,167,"    setPrettyPrint(true);
",0,0,0,1,2,0,2,0,0,3,21,5,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,169,"    Preconditions.checkArgument(source == null ||
",2,2,0,0,1,0,4,0,0,8,45,5,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,171,"    Preconditions.checkArgument(name != null);
",2,1,0,1,2,0,4,0,0,7,42,5,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,172,"    this.source = source;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,173,"    this.call = new ArrowType(registry, new Node(Token.PARAM_LIST), null);
",8,0,0,2,4,0,0,4,0,15,70,4,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,174,"    this.kind = Kind.INTERFACE;
",6,0,0,0,0,0,0,0,0,7,27,4,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,175,"    this.typeOfThis = new InstanceObjectType(registry, this);
",4,0,0,1,2,0,0,2,0,7,57,4,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,176,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,182,"    return new FunctionType(registry, name, source, typeParameters);
",8,0,0,1,2,1,0,2,0,10,64,5,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,466,"        for (ObjectType interfaceType : getExtendedInterfaces()) {
",2,0,0,2,5,0,2,2,0,6,58,8,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,582,"    if (isInterface()) {
",0,0,0,2,5,0,2,0,0,2,20,5,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,583,"      this.extendedInterfaces = ImmutableList.copyOf(extendedInterfaces);
",2,0,0,1,2,0,6,0,0,9,67,6,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,584,"      for (ObjectType extendedInterface : this.extendedInterfaces) {
",4,0,0,1,3,0,0,2,0,6,62,6,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,125,591,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00529,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,404,"        extendedInterfaces = Lists.newArrayList();
",2,0,0,1,2,0,4,0,0,7,42,8,0.00529,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,405,"        for (JSTypeExpression t : info.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,57,8,0.00529,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,685,"      fnType = typeRegistry.createInterfaceType(
",2,0,0,0,1,0,4,0,0,7,42,7,0.00529,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,687,"      if (getScopeDeclaredIn().isGlobal() && !fnName.isEmpty()) {
",0,1,0,4,9,0,8,0,0,10,59,7,0.00529,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,690,"      maybeSetBaseType(fnType);
",0,0,0,1,2,0,4,0,0,4,25,8,0.00529,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,125,708,"      fnType.setExtendedInterfaces(extendedInterfaces);
",0,0,0,1,2,0,6,0,0,6,49,7,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,125,55,"    this(registry, constructor, false);
",4,0,0,1,2,0,0,0,0,5,35,4,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,125,56,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00529,0,-1
defect4j,closure,com/google/javascript/rhino/Node,125,2399,"    return this.getType() == Token.TYPEOF;
",4,1,0,1,2,1,2,0,0,7,38,4,0.00505,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,125,407,"    setFlag(value, MASK_INTERFACE);
",0,0,0,1,2,0,6,0,0,6,31,5,0.00481,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,125,408,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00481,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,125,371,"          if (!jsdocBuilder.recordInterface()) {
",0,0,0,2,5,0,4,0,0,5,38,7,0.00481,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,125,380,"          return eatTokensUntilEOL();
",0,0,0,1,2,1,2,0,0,2,27,8,0.00481,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,125,887,"    if (hasAnySingletonTypeTags() ||
",0,1,0,1,3,0,2,0,0,3,32,4,0.00481,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,125,892,"    currentInfo.setInterface(true);
",0,0,0,1,2,0,4,0,0,5,31,5,0.00481,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,125,893,"    populated = true;
",2,0,0,0,0,0,0,0,0,4,17,4,0.00481,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,125,894,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00481,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,363,"      createEdge(node, Branch.ON_FALSE,
",4,0,0,0,1,0,4,0,0,8,33,7,0.00463,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,722,"        return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,6,0.00463,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,289,"                conditionFlowScope =
",2,0,0,0,0,0,0,0,0,3,20,13,0.00422,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,288,"              if (conditionFlowScope == null) {
",2,1,0,1,3,0,0,0,0,3,33,11,0.00388,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,125,292,"              newScope =
",2,0,0,0,0,0,0,0,0,3,10,11,0.00388,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,250,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00373,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,125,246,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00361,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,298,"        handleIf(n);
",0,0,0,1,2,0,4,0,0,4,12,6,0.00361,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,299,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00361,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,358,"    Node thenBlock = node.getFirstChild().getNext();
",2,0,0,2,4,0,6,2,0,10,48,4,0.00361,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,359,"    Node elseBlock = thenBlock.getNext();
",2,0,0,1,2,0,4,2,0,8,37,4,0.00361,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,125,360,"    createEdge(node, Branch.ON_TRUE, computeFallThrough(thenBlock));
",4,0,0,2,4,0,8,0,0,12,64,5,0.00361,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1111,"      return newNode(Token.THROW,
",4,0,0,0,1,1,2,0,0,6,27,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,264,"        return processThrowStatement((ThrowStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,132,"        validateThrow(n);
",0,0,0,1,2,0,4,0,0,4,17,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,133,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,489,"    validateNodeType(Token.THROW, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,490,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,491,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,492,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1143,"        block.setLineno(finallyBlock.getLineno());
",0,0,0,2,4,0,8,0,0,8,42,8,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1144,"        maybeSetLengthFrom(block, finallyBlock);
",0,0,0,1,2,0,6,0,0,6,40,8,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,128,"      Node tryBlock = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,129,"      tryMinimizeExits(tryBlock, exitType, labelName);
",0,0,0,1,2,0,8,0,0,8,48,7,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,130,"      Node allCatchNodes = NodeUtil.getCatchBlock(n);
",2,0,0,1,2,0,6,2,0,10,47,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,131,"      if (NodeUtil.hasCatchHandler(allCatchNodes)) {
",0,0,0,2,5,0,6,0,0,6,46,7,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,141,"      if (NodeUtil.hasFinally(n)) {
",0,0,0,2,5,0,6,0,0,6,29,7,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,609,"        Preconditions.checkState(childCount <= 1);
",2,1,0,1,2,0,4,0,0,7,42,6,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,610,"        add(""break"");
",0,0,0,1,2,0,2,0,0,3,13,6,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,611,"        if (childCount == 1) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,618,"        cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,6,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,619,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,126,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,138,"        validateBreak(n);
",0,0,0,1,2,0,4,0,0,4,17,6,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,139,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,495,"    validateNodeType(Token.BREAK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,496,"    validateMaximumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,497,"    if (n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,500,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.80000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,632,"      Node node = newNode(Token.BREAK);
",6,0,0,1,2,0,2,2,0,10,33,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,633,"      if (statementNode.getBreakLabel() != null) {
",0,1,0,2,5,0,4,0,0,5,44,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,639,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,184,"        return processBreakStatement((BreakStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,149,"        Preconditions.checkState(first.getNext().isBlock() &&
",0,1,0,2,5,0,10,0,0,11,53,7,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,151,"        Preconditions.checkState(childCount >= 2 && childCount <= 3);
",4,3,0,1,2,0,4,0,0,11,61,7,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,153,"        add(""try"");
",0,0,0,1,2,0,2,0,0,3,11,7,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,154,"        add(first, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,35,7,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,158,"        Node catchblock = first.getNext().getFirstChild();
",2,0,0,2,4,0,6,2,0,10,50,6,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,159,"        if (catchblock != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,163,"        if (childCount == 3) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,135,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,136,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,511,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,512,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,513,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,514,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,516,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,519,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,520,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,521,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,522,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,528,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,533,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,536,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2789,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2790,"    return n.getChildCount() == 3;
",0,1,0,1,2,1,4,0,0,5,30,4,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2798,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2799,"    return n.getFirstChild().getNext();
",0,0,0,2,4,1,6,0,0,6,35,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2807,"    Preconditions.checkArgument(n.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,2808,"    return n.hasChildren() && n.getFirstChild().isCatch();
",0,1,0,3,6,1,10,0,0,11,54,4,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3303,"      map.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,21,7,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1117,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1119,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1120,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1122,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1132,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1134,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1135,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1142,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,1147,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,126,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3334,"              Node clone = mtoc.get(n);
",2,0,0,1,2,0,6,2,0,10,25,12,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3335,"              if (n.getChangeTime() > clone.getChangeTime()) {
",0,1,0,3,7,0,8,0,0,9,48,12,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3337,"              } else if (checkUnchanged) {
",2,0,0,1,4,0,0,0,0,2,28,13,0.57143,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,110,"      NodeUtil.removeChild(n.getParent(), n);
",0,0,0,2,4,0,10,0,0,10,39,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,111,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,112,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,126,285,"          return n.hasChildren()
",0,0,0,1,2,1,4,0,0,4,22,12,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,634,"        Node labelName = transform(statementNode.getBreakLabel());
",2,0,0,2,4,0,6,2,0,10,58,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,636,"        labelName.setType(Token.LABEL_NAME);
",4,0,0,1,2,0,4,0,0,8,36,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,126,637,"        node.addChildToBack(labelName);
",0,0,0,1,2,0,6,0,0,6,31,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,612,"          if (!first.isLabelName()) {
",0,0,0,2,5,0,4,0,0,5,27,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,615,"          add("" "");
",0,0,0,1,2,0,2,0,0,3,9,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,616,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,126,498,"      validateLabelName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,37,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,126,1238,"    return currentContext == Context.BEFORE_DANGLING_ELSE ?
",6,1,0,0,0,1,0,0,0,7,55,5,0.28571,0,-1
defect4j,closure,com/google/javascript/rhino/Node,126,1557,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3294,"    Preconditions.checkState(main.isEquivalentTo(clone));
",0,0,0,2,4,0,10,0,0,10,53,5,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3295,"    Map<Node, Node> mtoc = new HashMap<Node, Node>();
",2,0,0,1,2,0,0,12,0,14,49,4,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3296,"    mtoc.put(main, clone);
",0,0,0,1,2,0,8,0,0,8,22,5,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3297,"    mtocHelper(mtoc, main, clone);
",0,0,0,1,2,0,8,0,0,8,30,5,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3298,"    return mtoc;
",2,0,0,0,0,1,0,0,0,2,12,4,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3302,"    if (main.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,126,3305,"    Node mchild = main.getFirstChild(), cchild = clone.getFirstChild();
",4,0,0,2,4,0,8,2,0,14,67,4,0.22222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,841,"          if (lastJump == cfgNode) {
",4,1,0,1,3,0,0,0,0,5,26,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,842,"            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());
",4,0,0,2,4,0,8,0,0,12,58,13,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,854,"        lastJump = handler;
",4,0,0,0,0,0,0,0,0,5,19,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,855,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,164,"          add(""finally"");
",0,0,0,1,2,0,2,0,0,3,15,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,165,"          add(last, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,34,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,529,"      validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,530,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1136,"        node.addChildToBack(transformBlock(finallyBlock));
",0,0,0,2,4,0,8,0,0,8,50,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1143,"        block.setLineno(finallyBlock.getLineno());
",0,0,0,2,4,0,8,0,0,8,42,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1144,"        maybeSetLengthFrom(block, finallyBlock);
",0,0,0,1,2,0,6,0,0,6,40,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,491,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,766,"            for (Node finallyNode : cfa.finallyMap.get(parent)) {
",6,0,0,2,5,0,4,2,0,12,53,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,350,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,764,"        } else if (parent.getLastChild() == node){
",2,1,0,2,6,0,4,0,0,7,42,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,765,"          if (cfa != null) {
",2,1,0,1,3,0,0,0,0,3,18,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,770,"          return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,806,"        return computeFallThrough(n.getLastChild());
",0,0,0,2,4,1,6,0,0,6,44,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,837,"        Preconditions.checkState(handler.isTry());
",0,0,0,2,4,0,8,0,0,8,42,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,838,"        Node catchBlock = NodeUtil.getCatchBlock(handler);
",2,0,0,1,2,0,6,2,0,10,50,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,840,"        if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.
",0,0,0,2,5,0,6,0,0,7,71,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,127,2315,"    return this.getType() == Token.LABEL_NAME;
",4,1,0,1,2,1,2,0,0,7,42,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,149,"        Preconditions.checkState(first.getNext().isBlock() &&
",0,1,0,2,5,0,10,0,0,11,53,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,151,"        Preconditions.checkState(childCount >= 2 && childCount <= 3);
",4,3,0,1,2,0,4,0,0,11,61,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,153,"        add(""try"");
",0,0,0,1,2,0,2,0,0,3,11,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,154,"        add(first, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,35,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,158,"        Node catchblock = first.getNext().getFirstChild();
",2,0,0,2,4,0,6,2,0,10,50,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,159,"        if (catchblock != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,163,"        if (childCount == 3) {
",2,1,0,1,3,0,0,0,0,3,22,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,206,"        Preconditions.checkState(!n.getString().isEmpty());
",0,0,0,3,6,0,10,0,0,11,51,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,207,"        addIdentifier(n.getString());
",0,0,0,2,4,0,6,0,0,6,29,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,208,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,735,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,736,"        if (!first.isLabelName()) {
",0,0,0,2,5,0,4,0,0,5,27,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,739,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,740,"        add("":"");
",0,0,0,1,2,0,2,0,0,3,9,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,741,"        addNonEmptyStatement(
",0,0,0,0,1,0,2,0,0,2,21,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,127,743,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,96,"        validateLabel(n);
",0,0,0,1,2,0,4,0,0,4,17,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,97,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,314,"    validateNodeType(Token.LABEL, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,315,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,316,"    validateLabelName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,37,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,317,"    validateStatement(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,36,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,318,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,321,"    validateNodeType(Token.LABEL_NAME, n);
",4,0,0,1,2,0,4,0,0,8,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,322,"    validateNonEmptyString(n);
",0,0,0,1,2,0,4,0,0,4,26,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,323,"    validateChildCount(n, 0);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,324,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,869,"      return newStringNode(Token.LABEL_NAME, labelNode.getName());
",4,0,0,2,4,1,6,0,0,10,60,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,874,"      Node node = newNode(Token.LABEL);
",6,0,0,1,2,0,2,2,0,10,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,875,"      Node prev = null;
",2,0,0,0,0,0,0,2,0,4,17,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,876,"      Node cur = node;
",4,0,0,0,0,0,0,2,0,6,16,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,877,"      for (Label label : statementNode.getLabels()) {
",2,0,0,2,5,0,4,2,0,8,47,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,878,"        if (prev != null) {
",2,1,0,1,3,0,0,0,0,3,19,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,881,"        cur.addChildToBack(transform(label));
",0,0,0,2,4,0,8,0,0,8,37,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,883,"        cur.setLineno(label.getLineno());
",0,0,0,2,4,0,8,0,0,8,33,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,884,"        maybeSetLengthFrom(cur, label);
",0,0,0,1,2,0,6,0,0,6,31,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,886,"        int clauseAbsolutePosition =
",2,0,0,0,0,0,0,0,0,2,28,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,888,"        cur.setCharno(clauseAbsolutePosition);
",0,0,0,1,2,0,6,0,0,6,38,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,890,"        prev = cur;
",4,0,0,0,0,0,0,0,0,5,11,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,891,"        cur = newNode(Token.LABEL);
",6,0,0,1,2,0,2,0,0,9,27,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,892,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,893,"      prev.addChildToBack(transform(statementNode.getStatement()));
",0,0,0,3,6,0,10,0,0,10,61,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,894,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,206,"        } else  if (node instanceof LabeledStatement) {
",2,0,0,1,4,0,0,2,0,4,47,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,207,"          return processLabeledStatement((LabeledStatement) node);
",2,0,0,2,4,1,2,2,0,6,56,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,242,"        return processLabel((Label) node);
",2,0,0,2,4,1,2,2,0,6,34,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,135,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,136,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,511,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,512,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,513,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,514,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,516,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,519,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,520,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,521,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,522,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,528,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,533,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,127,536,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,757,"        } else if (NodeUtil.getCatchBlock(parent) == node){
",2,1,0,2,6,0,6,0,0,9,51,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2798,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2799,"    return n.getFirstChild().getNext();
",0,0,0,2,4,1,6,0,0,6,35,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2807,"    Preconditions.checkArgument(n.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,127,2808,"    return n.hasChildren() && n.getFirstChild().isCatch();
",0,1,0,3,6,1,10,0,0,11,54,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,127,171,"              removeNode(n);
",0,0,0,1,2,0,4,0,0,4,14,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1117,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1119,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1120,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1122,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1132,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1134,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1135,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1142,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,127,1147,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,127,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,230,"        exceptionHandler.push(n);
",0,0,0,1,2,0,6,0,0,6,25,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,231,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,285,"          if (n == parent.getFirstChild().getNext()) {
",2,1,0,3,7,0,6,0,0,9,44,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,286,"            Preconditions.checkState(exceptionHandler.peek() == parent);
",2,1,0,2,4,0,8,0,0,11,60,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,287,"            exceptionHandler.pop();
",0,0,0,1,2,0,4,0,0,4,23,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,332,"        handleTry(n);
",0,0,0,1,2,0,4,0,0,4,13,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,333,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,544,"    createEdge(node, Branch.UNCOND, node.getFirstChild());
",4,0,0,2,4,0,8,0,0,12,54,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,545,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,750,"        if (parent.getFirstChild() == node) {
",2,1,0,2,5,0,4,0,0,7,37,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,898,"    while (target.isLabel()) {
",0,0,0,2,5,0,4,0,0,4,26,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,127,899,"      if (target.getFirstChild().getString().equals(label)) {
",0,0,0,4,9,0,10,0,0,10,55,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,542,"        ret = transformNumberAsString((NumberLiteral)n);
",4,0,0,2,4,0,2,2,0,9,48,8,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,543,"        ret.putBooleanProp(Node.QUOTED_PROP, true);
",4,0,0,1,2,0,4,0,0,9,43,9,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,409,"    Node irNode = newStringNode(getStringValue(literalNode.getNumber()));
",2,0,0,3,6,0,8,2,0,12,69,4,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,410,"    JSDocInfo jsDocInfo = handleJsDoc(literalNode, irNode);
",2,0,0,1,2,0,6,2,0,10,55,4,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,411,"    if (jsDocInfo != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,414,"    setSourceInfo(irNode, literalNode);
",0,0,0,1,2,0,6,0,0,6,35,5,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,415,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,419,"    long longValue = (long) value;
",4,0,0,1,2,0,0,0,0,4,30,5,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,422,"    if (longValue == value) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,423,"      return Long.toString(longValue);
",0,0,0,1,2,1,6,0,0,6,32,7,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,791,"    return len > 0 && s.charAt(0) != '0';
",2,3,0,1,2,1,4,0,0,10,37,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,650,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,652,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,653,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,698,"                addExpr(c, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,29,15,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,805,"    return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,5,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,694,"              double d = getSimpleNumber(key);
",2,0,0,1,2,0,4,0,0,6,32,13,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,695,"              if (!Double.isNaN(d)) {
",0,0,0,2,5,0,6,0,0,7,23,12,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,1978,"    this.prettyPrint = prettyPrint;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,1979,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,786,"      char c = s.charAt(index);
",2,0,0,1,2,0,6,0,0,8,25,7,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,787,"      if (c < '0' || c > '9') {
",4,3,0,1,3,0,0,0,0,9,25,6,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,784,"    int len = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,795,"    if (isSimpleNumber(s)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,2010,"    this.lineLengthThreshold = lineLengthThreshold;
",4,0,0,0,0,0,0,0,0,5,47,4,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,2011,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,541,"      } else if (n instanceof NumberLiteral) {
",2,0,0,1,4,0,0,2,0,4,40,7,0.01316,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,740,"    trustedStrings = yes;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00575,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,741,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00575,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1609,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00386,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1605,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00369,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1606,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00369,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1608,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00369,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1611,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00369,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,1612,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00369,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,681,"            Preconditions.checkState(c.isStringKey());
",0,0,0,2,4,0,8,0,0,8,42,11,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,682,"            String key = c.getString();
",2,0,0,1,2,0,4,2,0,8,27,10,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,685,"            if (!c.isQuotedString() &&
",0,1,0,1,3,0,4,0,0,6,26,10,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,701,"            add("":"");
",0,0,0,1,2,0,2,0,0,3,9,11,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,702,"            addExpr(c.getFirstChild(), 1, Context.OTHER);
",4,0,0,2,4,0,6,0,0,10,45,11,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,674,"          if (c != first) {
",4,1,0,1,3,0,0,0,0,5,17,8,0.00275,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,678,"          if (c.isGetterDef() || c.isSetterDef()) {
",0,1,0,3,7,0,8,0,0,9,41,8,0.00275,0,-1
defect4j,closure,com/google/javascript/rhino/Node,128,2367,"    return this.getType() == Token.SETTER_DEF;
",4,1,0,1,2,1,2,0,0,7,42,4,0.00234,0,-1
defect4j,closure,com/google/javascript/rhino/Node,128,2279,"    return this.getType() == Token.GETTER_DEF;
",4,1,0,1,2,1,2,0,0,7,42,4,0.00225,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,969,"        } else if (el.isSetter()) {
",0,0,0,2,6,0,4,0,0,4,27,9,0.00187,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,949,"        if (config.languageMode == LanguageMode.ECMASCRIPT3) {
",8,1,0,1,3,0,0,0,0,9,54,7,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,959,"        Node key = transformAsString(el.getLeft());
",2,0,0,2,4,0,6,2,0,10,43,7,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,960,"        key.setType(Token.STRING_KEY);
",4,0,0,1,2,0,4,0,0,8,30,8,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,962,"        Node value = transform(el.getRight());
",2,0,0,2,4,0,6,2,0,10,38,7,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,963,"        if (el.isGetter()) {
",0,0,0,2,5,0,4,0,0,4,20,8,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,976,"        key.addChildToFront(value);
",0,0,0,1,2,0,6,0,0,6,27,8,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,977,"        node.addChildToBack(key);
",0,0,0,1,2,0,6,0,0,6,25,8,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,128,978,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,149,"        Node value = key.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,33,7,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,150,"        normalizeObjectLiteralKeyAnnotations(objlit, key, value);
",0,0,0,1,2,0,8,0,0,8,57,8,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,213,"      Preconditions.checkState(objlit.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,47,6,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,214,"      if (key.getJSDocInfo() != null &&
",0,2,0,1,3,0,4,0,0,6,33,5,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,128,218,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00181,0,-1
defect4j,closure,com/google/javascript/rhino/Node,128,242,"      return getBooleanProp(QUOTED_PROP);
",0,0,0,1,2,1,4,0,0,4,35,6,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,995,"      switch (s.charAt(i)) {
",0,0,0,2,5,0,6,0,0,6,22,7,0.00168,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1052,"      char c = s.charAt(i);
",2,0,0,1,2,0,6,0,0,8,21,7,0.00161,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1053,"      switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,6,0.00161,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1139,"          if (outputCharsetEncoder != null) {
",2,1,0,1,3,0,0,0,0,3,35,7,0.00161,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1150,"            if (c > 0x1f && c < 0x7f) {
",4,3,0,1,3,0,0,0,0,7,27,9,0.00161,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1151,"              sb.append(c);
",0,0,0,1,2,0,6,0,0,6,13,12,0.00161,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,981,"      String cached = ESCAPED_JS_STRINGS.get(s);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00160,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,982,"      if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00160,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,983,"        cached = jsString(n.getString(), useSlashV);
",2,0,0,2,4,0,8,0,0,11,44,8,0.00160,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,984,"        ESCAPED_JS_STRINGS.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,34,9,0.00160,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,986,"      add(cached);
",0,0,0,1,2,0,4,0,0,4,12,7,0.00160,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1011,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.00160,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1012,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.00160,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1013,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.00160,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,976,"    String s = n.getString();
",2,0,0,1,2,0,4,2,0,8,25,4,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,977,"    boolean useSlashV = n.getBooleanProp(Node.SLASH_V);
",6,0,0,1,2,0,4,0,0,10,51,5,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,978,"    if (useSlashV) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,988,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,991,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,994,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1003,"    if (preferSingleQuotes ?
",2,0,0,0,1,0,0,0,0,2,24,5,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1016,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1049,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.00153,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1050,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00153,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1051,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00153,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1161,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00153,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,128,1162,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00153,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,323,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.00143,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,349,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,7,0.00141,0,-1
defect4j,closure,com/google/javascript/rhino/Node,128,528,"    this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00140,0,-1
defect4j,closure,com/google/javascript/rhino/Node,128,529,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00140,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,319,"    } else if (!options.checkTypes) {
",4,0,0,1,4,0,0,0,0,5,33,6,0.00136,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,128,317,"    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
",4,0,0,2,6,0,4,0,0,8,60,6,0.00135,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,138,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00134,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,128,1134,"    return warningsGuard.disables(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,127,"    for (DiagnosticType type : group.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,46,5,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,128,"      DiagnosticGroup singleton = DiagnosticGroup.forType(type);
",2,0,0,1,2,0,6,2,0,10,58,7,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,128,130,"      for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,7,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,60,"  private DiagnosticGroup(DiagnosticType type) {
",4,0,0,1,3,1,0,2,0,7,46,2,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,128,61,"    this.name = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00133,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1546,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,3165,"        return isExpressionResultUsed(parent);
",0,0,0,1,2,1,4,0,0,4,38,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,132,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1428,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1444,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1457,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,2163,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,2164,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,2165,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,2166,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,530,"          add(""(0,"");
",0,0,0,1,3,0,2,0,0,3,11,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,531,"          addExpr(first, NodeUtil.precedence(Token.COMMA), Context.OTHER);
",8,0,0,2,4,0,8,0,0,16,64,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,129,532,"          add("")"");
",0,0,0,1,3,0,2,0,0,3,9,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,61,"          n.removeChild(left);
",0,0,0,1,2,0,6,0,0,6,20,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,62,"          n.removeChild(right);
",0,0,0,1,2,0,6,0,0,6,21,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,63,"          parent.replaceChild(n, IR.getprop(left, right));
",0,0,0,2,4,0,14,0,0,14,48,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,64,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,129,414,"          parent.replaceChild(n, n.removeFirstChild());
",0,0,0,2,4,0,10,0,0,10,45,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1332,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,57,"        Node left = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,58,"        Node right = left.getNext();
",2,0,0,1,2,0,4,2,0,8,28,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,129,59,"        if (right.isString() &&
",0,1,0,1,3,0,4,0,0,5,23,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1329,"    if (left.isArrayLit()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,122,"        return tryFoldGetElem(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1323,"    Preconditions.checkArgument(n.isGetElem());
",0,0,0,2,4,0,8,0,0,8,43,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1325,"    if (left.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,403,"        return n;
",2,0,0,0,0,1,0,0,0,2,9,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,82,"        return tryFoldCtorCall(subtree);
",0,0,0,1,2,1,4,0,0,4,32,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1258,"    Preconditions.checkArgument(n.isNew());
",0,0,0,2,4,0,8,0,0,8,39,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1261,"    if (inForcedStringContext(n)) {
",0,0,0,2,5,0,4,0,0,4,31,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1264,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1269,"    if (n.getParent().isGetElem() &&
",0,1,0,2,5,0,6,0,0,7,32,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1275,"    if (n.getParent().isAdd()) {
",0,0,0,3,7,0,6,0,0,6,28,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1278,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,140,"          return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,122,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,134,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,129,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,138,"        node = tryFoldStandardConstructors(node);
",2,0,0,1,2,0,4,0,0,7,41,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,139,"        if (!node.isCall()) {
",0,0,0,2,5,0,4,0,0,5,21,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1346,"    Preconditions.checkState(n.isNew());
",0,0,0,2,4,0,8,0,0,8,36,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1351,"    if (isASTNormalized()) {
",0,0,0,2,5,0,2,0,0,2,24,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1352,"      if (n.getFirstChild().isName()) {
",0,0,0,3,7,0,6,0,0,6,33,7,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1353,"        String className = n.getFirstChild().getString();
",2,0,0,2,4,0,6,2,0,10,49,8,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1354,"        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
",0,0,0,2,5,0,6,0,0,6,55,9,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,129,1362,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,347,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.04762,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1007,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1012,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1013,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1014,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1021,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1022,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1026,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1027,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1029,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1030,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1031,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1032,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1034,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1033,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1036,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,100,"      return subtree;
",2,0,0,0,0,1,0,0,0,2,15,6,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,412,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,402,"      if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {
",0,2,0,3,7,0,10,0,0,13,67,6,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,129,1171,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,407,"    Node arrayNode = callTarget.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,4,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,408,"    Node functionName = arrayNode.getNext();
",2,0,0,1,2,0,4,2,0,8,40,4,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,410,"    if (!arrayNode.isArrayLit() ||
",0,1,0,1,3,0,4,0,0,6,30,4,0.03448,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,113,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,133,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,871,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,876,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,877,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,970,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,971,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,978,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,979,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,980,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,981,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,982,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,984,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,986,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,989,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,990,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,315,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,129,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,869,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,870,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,874,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,875,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,880,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,881,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,932,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,968,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,969,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,976,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,977,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,995,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,68,"        subtree = tryFoldKnownStringMethods(subtree);
",2,0,0,1,2,0,4,0,0,7,45,8,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,82,"    Preconditions.checkArgument(subtree.isCall());
",0,0,0,2,4,0,8,0,0,8,46,5,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,86,"    Node callTarget = subtree.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,87,"    if (callTarget == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,91,"    if (!NodeUtil.isGet(callTarget)) {
",0,0,0,2,5,0,6,0,0,7,34,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,95,"    Node stringNode = callTarget.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,45,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,96,"    Node functionName = stringNode.getNext();
",2,0,0,1,2,0,4,2,0,8,41,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,98,"    if ((!stringNode.isString()) ||
",0,1,0,2,5,0,4,0,0,6,31,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,400,"    Node right = callTarget.getNext();
",2,0,0,1,2,0,4,2,0,8,34,4,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,401,"    if (right != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.02778,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,951,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.02632,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,952,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.02632,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,963,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,2187,"    return this.getType() == Token.ADD;
",4,1,0,1,2,1,2,0,0,7,35,4,0.02174,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,953,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,397,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,939,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,940,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,941,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,949,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,950,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,967,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,975,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,994,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,129,1003,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureOptimizePrimitives,129,48,"        String fnName = n.getFirstChild().getQualifiedName();
",2,0,0,2,4,0,6,2,0,10,53,7,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureOptimizePrimitives,129,49,"        if (""goog$object$create"".equals(fnName) ||
",0,1,0,1,3,0,4,0,0,6,42,7,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1372,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/deps/JsFileLineParser,129,163,"                  revisedLine =
",2,0,0,0,0,0,0,0,0,3,13,19,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/deps/JsFileLineParser,129,170,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,129,94,"                } break partial;
",2,0,0,0,1,0,0,0,0,2,16,8,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1345,"    if (right.isString() &&
",0,1,0,1,3,0,4,0,0,5,23,4,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/deps/JsFileLineParser,129,155,"                int endOfMultilineComment = revisedLine.indexOf(""*/"",
",2,0,0,0,1,0,4,0,0,7,53,18,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/deps/JsFileLineParser,129,157,"                if (endOfMultilineComment == -1) {
",2,1,0,1,3,0,0,0,0,4,34,17,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,119,"        return tryFoldGetProp(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1339,"    Preconditions.checkArgument(n.isGetProp());
",0,0,0,2,4,0,8,0,0,8,43,5,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,129,1341,"    if (left.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,161,"          createSynthesizedExternVar(varName);
",0,0,0,1,2,0,4,0,0,4,36,11,0.01515,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,162,"          scope.getGlobalScope().declare(varName, n,
",0,0,0,1,3,0,10,0,0,10,42,11,0.01515,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,166,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01515,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,149,"      if (NodeUtil.isFunctionExpression(parent)) {
",0,0,0,2,5,0,6,0,0,6,44,7,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,154,"        if (!strictExternCheck || !t.getInput().isExtern()) {
",2,1,0,3,7,0,6,0,0,11,53,8,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,155,"          t.report(n, UNDEFINED_VAR_ERROR, varName);
",0,0,0,1,2,0,10,0,0,10,42,11,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,158,"        if (sanityCheck) {
",2,0,0,1,3,0,0,0,0,2,18,8,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,62,"      Node callTarget = subtree.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,6,0.01408,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,63,"      if (callTarget == null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.01408,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,67,"      if (NodeUtil.isGet(callTarget)) {
",0,0,0,2,5,0,6,0,0,6,33,7,0.01408,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,49,"      return tryFoldKnownMethods(subtree);
",0,0,0,1,2,1,4,0,0,4,36,7,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,59,"    subtree = tryFoldArrayJoin(subtree);
",2,0,0,1,2,0,4,0,0,7,36,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,61,"    if (subtree.isCall()) {
",0,0,0,2,5,0,4,0,0,4,23,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,74,"    return subtree;
",2,0,0,0,0,1,0,0,0,2,15,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,394,"    Node callTarget = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,129,396,"    if (callTarget == null || !callTarget.isGetProp()) {
",2,2,0,2,5,0,4,0,0,9,52,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,129,441,"    Scope result = this;
",2,0,0,0,0,0,0,2,0,4,20,4,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,129,442,"    while (result.getParent() != null) {
",0,1,0,2,5,0,4,0,0,5,36,4,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,129,445,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,210,"    Node nameNode = IR.name(varName);
",2,0,0,1,2,0,6,2,0,10,33,4,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,218,"    if (compiler.getCodingConvention().isConstant(varName)) {
",0,0,0,3,7,0,8,0,0,8,57,5,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,222,"    getSynthesizedExternsRoot().addChildToBack(
",0,0,0,1,3,0,4,0,0,4,43,5,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,224,"    varsToDeclareInExterns.remove(varName);
",0,0,0,1,2,0,6,0,0,6,39,5,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,225,"    compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,5,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,226,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,268,"    return compiler.getSynthesizedExternsInput();
",0,0,0,1,2,1,4,0,0,4,45,5,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,273,"    if (synthesizedExternsRoot == null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,274,"      CompilerInput synthesizedExterns = getSynthesizedExternsInput();
",2,0,0,1,2,0,2,2,0,6,64,6,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,275,"      synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler);
",2,0,0,1,2,0,6,0,0,9,65,6,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,129,277,"    return synthesizedExternsRoot;
",2,0,0,0,0,1,0,0,0,2,30,4,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1628,"        } else if (options.inlineLocalVariables) {
",4,0,0,1,4,0,0,0,0,4,42,12,0.01176,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,1629,"          mode = InlineVariables.Mode.LOCALS_ONLY;
",8,0,0,0,0,0,0,0,0,9,40,13,0.01176,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,129,94,"        return new IdentifyLocals();
",0,0,0,1,2,1,0,2,0,2,28,7,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,129,120,"  private class IdentifyLocals implements Predicate<Var> {
",2,0,0,0,1,1,0,4,0,7,56,2,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,129,123,"      return var.scope.isLocal();
",4,0,0,1,2,1,2,0,0,6,27,6,0.01149,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,2444,"    if (synthesizedExternsInput == null) {
",2,1,0,1,3,0,0,0,0,3,38,4,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,2445,"      synthesizedExternsInput = newExternInput(SYNTHETIC_EXTERNS);
",2,0,0,1,2,0,4,0,0,7,60,6,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,2447,"    return synthesizedExternsInput;
",2,0,0,0,0,1,0,0,0,2,31,4,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1087,"    SourceAst ast = new SyntheticAst(name);
",4,0,0,1,2,0,0,4,0,8,39,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1088,"    if (inputsById.containsKey(ast.getInputId())) {
",0,0,0,3,7,0,8,0,0,8,47,5,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1091,"    CompilerInput input = new CompilerInput(ast, true);
",4,0,0,1,2,0,0,4,0,9,51,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1092,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1093,"    externsRoot.addChildToFront(ast.getAstRoot(this));
",0,0,0,2,4,0,8,0,0,8,50,5,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1094,"    externs.add(0, input);
",0,0,0,1,2,0,6,0,0,6,22,5,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,129,1095,"    return input;
",2,0,0,0,0,1,0,0,0,2,13,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,37,"  SyntheticAst(String sourceName) {
",4,0,0,1,3,0,0,2,0,6,33,2,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,38,"    this.inputId = new InputId(sourceName);
",4,0,0,1,2,0,0,2,0,7,39,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,39,"    this.sourceFile = new SourceFile(sourceName);
",4,0,0,1,2,0,0,2,0,7,45,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,40,"    clearAst();
",0,0,0,1,2,0,2,0,0,2,11,5,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,41,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,45,"    return root;
",2,0,0,0,0,1,0,0,0,2,12,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,50,"    root = IR.script();
",2,0,0,1,2,0,4,0,0,7,19,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,51,"    root.setInputId(inputId);
",0,0,0,1,2,0,6,0,0,6,25,5,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,52,"    root.setStaticSourceFile(sourceFile);
",0,0,0,1,2,0,6,0,0,6,37,5,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,53,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,57,"    return inputId;
",2,0,0,0,0,1,0,0,0,2,15,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,129,62,"    return sourceFile;
",2,0,0,0,0,1,0,0,0,2,18,4,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,129,2060,"      return parseTypeExpression(next());
",0,0,0,2,4,1,4,0,0,4,35,7,0.01099,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,129,39,"        addDefaultWarnings(options);
",0,0,0,1,2,0,4,0,0,4,28,6,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,129,40,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,129,2054,"    token = next();
",2,0,0,1,2,0,2,0,0,5,15,4,0.01064,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,129,2055,"    skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,5,0.01064,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,129,2056,"    if (match(JsDocToken.STRING) && ""void"".equals(stream.getString())) {
",4,1,0,4,9,0,8,0,0,14,68,4,0.01064,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,129,711,"        passes.add(removeUnusedVars);
",0,0,0,1,2,0,6,0,0,6,29,9,0.01053,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,930,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,931,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,932,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,940,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,941,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,942,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,943,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,944,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,954,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,958,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,966,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,985,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,130,994,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,223,"          ReferenceCollectingCallback.Reference aliasRef =
",6,0,0,0,0,0,0,0,0,6,48,10,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,226,"          Node newNode = alias.node.cloneTree();
",6,0,0,1,2,0,2,2,0,10,38,10,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,227,"          aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);
",0,0,0,3,6,0,12,0,0,12,63,11,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,228,"          newNodes.add(newNode);
",0,0,0,1,2,0,6,0,0,6,22,11,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,459,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,460,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,475,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,476,"      if (size > 0 && references.get(0).isInitializingDeclaration()) {
",2,2,0,3,7,0,6,0,0,10,64,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,477,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,180,"    NodeTraversal t = new NodeTraversal(compiler,
",4,0,0,0,1,0,0,4,0,8,45,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,182,"    t.traverseAtScope(scope);
",0,0,0,1,2,0,6,0,0,6,25,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,183,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,990,"            aliasingGets--;
",2,0,0,0,0,0,0,0,0,3,15,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,991,"            totalGets--;
",2,0,0,0,0,0,0,0,0,3,12,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,992,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,192,"    NodeFilter(Set<Node> newNodes) {
",4,0,0,1,3,0,0,4,0,8,32,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,193,"      this.newNodes = newNodes;
",4,0,0,0,0,0,0,0,0,5,25,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,194,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,198,"      if (!n.isQualifiedName()) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,199,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,203,"      for (current = n;
",4,0,0,0,1,0,0,0,0,5,17,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,204,"           current.isGetProp();
",0,0,0,1,2,0,4,0,0,4,20,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,211,"      return current.isName() && newNodes.contains(current);
",0,1,0,2,4,1,10,0,0,11,54,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,189,"  private static class NodeFilter implements Predicate<Node> {
",2,0,0,0,1,2,0,4,0,8,60,2,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,181,"              name.removeRef(ref);
",0,0,0,1,2,0,6,0,0,6,20,15,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,220,"        int size = aliasRefs.references.size();
",6,0,0,1,2,0,2,0,0,8,39,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,221,"        Set<Node> newNodes = Sets.newHashSetWithExpectedSize(size - 1);
",4,1,0,1,2,0,4,4,0,13,63,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,222,"        for (int i = 1; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,232,"        aliasParent.replaceChild(alias.node, IR.nullNode());
",4,0,0,2,4,0,8,0,0,12,52,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,233,"        compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,237,"        namespace.scanNewNodes(alias.scope, newNodes);
",4,0,0,1,2,0,6,0,0,10,46,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,238,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,312,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.09091,0,-1
defect4j,closure,com/google/javascript/rhino/IR,130,471,"    return new Node(Token.NULL);
",4,0,0,1,2,1,0,2,0,6,28,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,965,"      if (refs != null && refs.remove(ref)) {
",2,2,0,2,5,0,6,0,0,10,39,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,966,"        if (ref == declaration) {
",4,1,0,1,3,0,0,0,0,5,25,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,978,"        switch (ref.type) {
",4,0,0,1,3,0,0,0,0,4,19,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,1004,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,140,"    return referenceMap.get(v);
",0,0,0,1,2,1,6,0,0,6,27,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,281,"    public void afterExitScope(NodeTraversal t, ReferenceMap referenceMap) {}
",6,0,0,2,4,1,0,4,0,11,73,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,207,"      Scope scope = alias.scope;
",6,0,0,0,0,0,0,2,0,8,26,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,208,"      Var aliasVar = scope.getVar(aliasParent.getString());
",2,0,0,2,4,0,8,2,0,12,53,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,209,"      ReferenceCollectingCallback collector =
",2,0,0,0,0,0,0,2,0,4,39,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,213,"      (new NodeTraversal(compiler, collector)).traverseAtScope(scope);
",4,0,0,3,6,0,4,2,0,10,64,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,215,"      ReferenceCollection aliasRefs = collector.getReferences(aliasVar);
",2,0,0,1,2,0,6,2,0,10,66,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,216,"      if (aliasRefs.isWellDefined()
",0,0,0,1,3,0,4,0,0,4,29,9,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,709,"           currentBlock = currentBlock.getParent()) {
",2,0,0,1,4,0,4,0,0,7,42,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,570,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,571,"        cc.addConstant(""null"");
",0,0,0,1,2,0,4,0,0,5,23,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,572,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,180,"            if (inlineAliasIfPossible(ref, namespace)) {
",0,0,0,2,5,0,6,0,0,6,44,13,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,204,"    Node aliasParent = alias.node.getParent();
",6,0,0,1,2,0,2,2,0,10,42,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,205,"    if (aliasParent.isName()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,710,"        if (currentBlock.isHoisted) {
",4,0,0,1,3,0,0,0,0,4,29,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,933,"        cc.listSeparator();
",0,0,0,1,2,0,4,0,0,4,19,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,934,"        addExpr(n, isArrayOrFunctionArgument ? 1 : 0, Context.OTHER);
",6,0,0,1,2,0,4,0,0,10,61,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,130,294,"      if (!(other instanceof Var)) {
",2,0,0,2,5,0,0,2,0,5,30,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,130,298,"      Var otherVar = (Var) other;
",4,0,0,1,2,0,0,4,0,8,27,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,130,299,"      return otherVar.nameNode == nameNode;
",6,1,0,0,0,1,0,0,0,7,37,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,122,"      namespace = new GlobalNamespace(compiler, externs, root);
",8,0,0,1,2,0,0,2,0,11,57,6,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,684,"      return parent;
",2,0,0,0,0,1,0,0,0,2,14,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,264,"      v = externsScope.getVar(name);
",2,0,0,1,2,0,6,0,0,9,30,6,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,431,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,124,"    add("","");
",0,0,0,1,2,0,2,0,0,3,9,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,125,"    maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,130,126,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,220,"      inExterns = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,221,"      NodeTraversal.traverse(compiler, externsRoot, new BuildGlobalNamespace());
",0,0,0,2,4,0,8,2,0,10,74,7,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,130,318,"        externsScope = t.getScope();
",2,0,0,1,2,0,4,0,0,7,28,7,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,707,"      for (currentBlock = thatBlock;
",4,0,0,0,1,0,0,0,0,5,30,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,708,"           currentBlock != null && currentBlock != this;
",4,3,0,0,0,0,0,0,0,7,45,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,715,"      if (currentBlock == this) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,716,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,326,"        if (!initBlock.provablyExecutesBefore(
",0,0,0,0,2,0,4,0,0,5,38,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,607,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,608,"      if (parent.isVar()) {
",0,0,0,2,5,0,4,0,0,4,21,6,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,611,"      return NodeUtil.isForIn(parent) && parent.getFirstChild() == n;
",2,2,0,2,4,1,10,0,0,14,63,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,640,"  static final class BasicBlock {
",2,0,0,0,1,2,0,0,0,4,31,2,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,428,"      for (BasicBlock block = ref.getBasicBlock();
",2,0,0,1,3,0,4,2,0,8,44,6,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,429,"           block != null; block = block.getParent()) {
",4,1,0,1,4,0,4,0,0,10,43,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,430,"        if (block.isFunction) {
",4,0,0,1,3,0,0,0,0,4,23,8,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,437,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,457,"      return assignment;
",2,0,0,0,0,1,0,0,0,2,18,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,332,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,422,"      Reference ref = getOneAndOnlyAssignment();
",2,0,0,1,2,0,2,2,0,6,42,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,423,"      if (ref == null) {
",2,1,0,1,3,0,0,0,0,3,18,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,445,"      Reference assignment = null;
",2,0,0,0,0,0,0,2,0,4,28,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,446,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,447,"      for (int i = 0; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,448,"        Reference ref = references.get(i);
",2,0,0,1,2,0,6,2,0,10,34,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,449,"        if (ref.isLvalue() || ref.isInitializingDeclaration()) {
",0,1,0,3,7,0,8,0,0,9,56,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,450,"          if (assignment == null) {
",2,1,0,1,3,0,0,0,0,3,25,9,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,451,"            assignment = ref;
",4,0,0,0,0,0,0,0,0,5,17,11,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,621,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,622,"      int parentType = parent.getType();
",2,0,0,1,2,0,4,0,0,6,34,6,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,623,"      return (parentType == Token.VAR && nameNode.getFirstChild() != null)
",6,3,0,2,4,1,4,0,0,13,68,10,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,323,"      Preconditions.checkState(references.get(0).isDeclaration());
",0,0,0,3,6,0,10,0,0,10,60,6,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,324,"      BasicBlock initBlock = init.getBasicBlock();
",2,0,0,1,2,0,4,2,0,8,44,5,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,325,"      for (int i = 1; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,397,"        return references.get(0);
",0,0,0,1,2,1,4,0,0,4,25,8,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,483,"      validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,7,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,810,"    Ref ref = n.getDeclaration();
",2,0,0,1,2,0,4,2,0,8,29,4,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,811,"    String fnName = ref.node.getString();
",6,0,0,1,2,0,2,2,0,10,37,4,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,812,"    addStubsForUndeclaredProperties(
",0,0,0,0,1,0,2,0,0,2,32,5,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,814,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,311,"      int size = references.size();
",2,0,0,1,2,0,4,0,0,6,29,6,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,312,"      if (size == 0) {
",2,1,0,1,3,0,0,0,0,3,16,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,318,"      Reference init = getInitializingReference();
",2,0,0,1,2,0,2,2,0,6,44,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,319,"      if (init == null) {
",2,1,0,1,3,0,0,0,0,3,19,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,363,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,396,"      if (isInitializingDeclarationAt(0)) {
",0,0,0,2,5,0,2,0,0,2,37,6,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,578,"      return isDeclaration() &&
",0,1,0,1,2,1,2,0,0,3,25,6,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,358,"      Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,5,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,130,359,"      if (maybeInit.isInitializingDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,44,6,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,191,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,128,"        validateReturn(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,129,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,480,"    validateNodeType(Token.RETURN, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,481,"    validateMaximumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,482,"    if (n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,485,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,189,"        add(""return"");
",0,0,0,1,2,1,2,0,0,3,14,6,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,190,"        if (childCount == 1) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,195,"        cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,6,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,130,196,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,645,"        updateFunctionDeclarationAtFunctionNode(n, canCollapseChildNames);
",0,0,0,1,2,0,6,0,0,6,66,6,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseProperties,130,806,"    if (!canCollapseChildNames) {
",2,0,0,1,3,0,0,0,0,3,29,4,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,130,1034,"        node.addChildToBack(transform(statementNode.getReturnValue()));
",0,0,0,3,6,0,10,0,0,10,63,8,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,161,"        validateChildless(n);
",0,0,0,1,2,0,4,0,0,4,21,6,0.01449,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,130,162,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01449,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1417,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1433,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1446,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,2132,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,2133,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,2134,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,2135,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,121,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,133,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,131,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1156,"              appendHexJavaScriptRepresentation(sb, c);
",0,0,0,1,2,0,6,0,0,6,41,12,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1254,"      appendHexJavaScriptRepresentation(c, sb);
",0,0,0,1,2,0,6,0,0,6,41,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1258,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1259,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1271,"    if (Character.isSupplementaryCodePoint(codePoint)) {
",0,0,0,2,5,0,6,0,0,6,52,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1281,"    out.append(""\\u"")
",0,0,0,1,2,0,4,0,0,5,17,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,1286,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,118,"        case QUOTED_PROP:        return ""quoted"";
",2,0,0,0,0,1,0,0,0,3,41,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,998,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1003,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1004,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1005,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1012,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1013,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1017,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1018,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1020,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1021,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1022,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1023,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1025,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1024,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1027,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,343,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,1517,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,2434,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,195,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.44444,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,112,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,132,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,860,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,861,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,862,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,865,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,866,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,867,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,868,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,871,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,872,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,923,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,959,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,960,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,961,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,962,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,967,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,968,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,969,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,970,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,971,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,972,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,973,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,975,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,977,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,980,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,981,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,986,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,311,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.40000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,131,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,942,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,943,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,160,"                case 'e': X=""default"";id=true; break partial;
",6,0,0,0,0,0,0,0,0,11,45,8,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,201,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,954,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,956,"      sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,64,"            case 2: c=s.charAt(1);
",2,0,0,1,2,0,4,0,0,7,22,8,0.23529,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,65,"                if (c=='f') {
",2,1,0,1,3,0,0,0,0,4,13,8,0.23529,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,67,"                } else if (c=='n') {
",2,1,0,1,4,0,0,0,0,4,20,9,0.23529,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,69,"                } else if (c=='o') {
",2,1,0,1,4,0,0,0,0,4,20,10,0.23529,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,944,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,131,158,"            case 7: switch (s.charAt(1)) {
",0,0,0,2,5,0,4,0,0,4,30,9,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,930,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.19048,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,931,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.19048,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,932,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.19048,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,940,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.19048,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,941,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.19048,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,958,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.19048,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,966,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.19048,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,985,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.19048,0,-1
defect4j,closure,com/google/javascript/rhino/Node,131,994,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.19048,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,61,"          n.removeChild(left);
",0,0,0,1,2,0,6,0,0,6,20,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,62,"          n.removeChild(right);
",0,0,0,1,2,0,6,0,0,6,21,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,63,"          parent.replaceChild(n, IR.getprop(left, right));
",0,0,0,2,4,0,14,0,0,14,48,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,64,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,57,"        Node left = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,58,"        Node right = left.getNext();
",2,0,0,1,2,0,4,2,0,8,28,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,59,"        if (right.isString() &&
",0,1,0,1,3,0,4,0,0,5,23,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,51,"          n.putBooleanProp(Node.QUOTED_PROP, false);
",4,0,0,1,2,0,4,0,0,9,42,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,52,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,50,"        if (NodeUtil.isValidPropertyName(n.getString())) {
",0,0,0,3,7,0,8,0,0,8,50,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,670,"          add(""("");
",0,0,0,1,3,0,2,0,0,3,9,9,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,707,"          add("")"");
",0,0,0,1,3,0,2,0,0,3,9,9,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,791,"    return len > 0 && s.charAt(0) != '0';
",2,3,0,1,2,1,4,0,0,10,37,4,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,2444,"    return TokenStream.isJSIdentifier(name) &&
",0,1,0,1,2,1,6,0,0,7,42,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,131,2478,"    return isValidSimpleName(name);
",0,0,0,1,2,1,4,0,0,4,31,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,35,"  ConvertToDottedProperties(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,54,2,0.03509,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,36,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.03509,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,37,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03509,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,41,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.03509,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03509,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,46,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.03509,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,131,68,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03509,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,650,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,652,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,653,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,698,"                addExpr(c, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,29,15,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,788,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,805,"    return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,694,"              double d = getSimpleNumber(key);
",2,0,0,1,2,0,4,0,0,6,32,13,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,131,695,"              if (!Double.isNaN(d)) {
",0,0,0,2,5,0,6,0,0,7,23,12,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,131,734,"        n.getString();
",0,0,0,1,2,0,4,0,0,4,14,9,0.02000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,112,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,132,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,860,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,861,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,862,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,865,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,866,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,867,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,868,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,871,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,872,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,923,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,944,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,954,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,959,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,960,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,961,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,962,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,967,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,968,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,969,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,970,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,971,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,972,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,973,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,975,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,977,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,980,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,981,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,986,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,311,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,132,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,512,"          cc.addOp(o, false);
",0,0,0,1,2,0,6,0,0,7,19,9,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,513,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,9,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,515,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,930,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,931,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,932,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,940,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,941,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,942,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,943,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,958,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,966,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,985,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,132,994,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,2155,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1356,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,776,"          Node lhs = thenOp.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,10,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,777,"          if (areNodesEqualForInlining(lhs, elseOp.getFirstChild()) &&
",0,1,0,2,5,0,8,0,0,9,60,10,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,784,"            n.removeChild(cond);
",0,0,0,1,2,0,6,0,0,6,20,13,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,785,"            Node assignName = thenOp.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,12,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,786,"            Node thenExpr = thenOp.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,12,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,787,"            Node elseExpr = elseOp.getLastChild();
",2,0,0,1,2,0,4,2,0,8,38,12,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,788,"            elseOp.removeChild(elseExpr);
",0,0,0,1,2,0,6,0,0,6,29,13,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,790,"            Node hookNode = IR.hook(cond, thenExpr, elseExpr).srcref(n);
",2,0,0,2,4,0,14,2,0,18,60,12,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,791,"            Node assign = new Node(thenOp.getType(), assignName, hookNode)
",6,0,0,2,4,0,4,4,0,14,62,12,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,793,"            Node expr = NodeUtil.newExpr(assign);
",2,0,0,1,2,0,6,2,0,10,37,12,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,794,"            parent.replaceChild(n, expr);
",0,0,0,1,2,0,8,0,0,8,29,13,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,795,"            reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,13,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,797,"            return expr;
",2,0,0,0,0,1,0,0,0,2,12,12,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,132,111,"    return NodeUtil.mayEffectMutableState(n, compiler);
",0,0,0,1,2,1,8,0,0,8,51,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,775,"        if (NodeUtil.isAssignmentOp(thenOp)) {
",0,0,0,2,5,0,6,0,0,6,38,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,1193,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,771,"      Node thenOp = getBlockExpression(thenBranch).getFirstChild();
",2,0,0,2,4,0,6,2,0,10,61,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,772,"      Node elseOp = getBlockExpression(elseBranch).getFirstChild();
",2,0,0,2,4,0,6,2,0,10,61,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,773,"      if (thenOp.getType() == elseOp.getType()) {
",0,1,0,3,7,0,8,0,0,9,43,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,503,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,504,"        String o = type == Token.INC ? ""++"" : ""--"";
",8,1,0,0,0,0,0,2,0,13,43,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,505,"        int postProp = n.getIntProp(Node.INCRDECR_PROP);
",6,0,0,1,2,0,4,0,0,10,48,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,508,"        if (postProp != 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1166,"          if (!validAssignmentTarget(operand)) {
",0,0,0,2,5,0,4,0,0,5,38,10,0.11111,0,-1
defect4j,closure,com/google/javascript/rhino/IR,132,341,"    Preconditions.checkState(mayBeExpression(cond));
",0,0,0,2,4,0,8,0,0,8,48,5,0.10000,0,-1
defect4j,closure,com/google/javascript/rhino/IR,132,342,"    Preconditions.checkState(mayBeExpression(trueval));
",0,0,0,2,4,0,8,0,0,8,51,5,0.10000,0,-1
defect4j,closure,com/google/javascript/rhino/IR,132,343,"    Preconditions.checkState(mayBeExpression(falseval));
",0,0,0,2,4,0,8,0,0,8,52,5,0.10000,0,-1
defect4j,closure,com/google/javascript/rhino/IR,132,344,"    return new Node(Token.HOOK, cond, trueval, falseval);
",10,0,0,1,2,1,0,2,0,12,53,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,769,"    return checkForStateChangeHelper(n, true, compiler);
",0,0,0,1,2,1,6,0,0,7,52,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,240,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,241,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,1184,"      case Token.HOOK:   return 2;  // ?: operator
",4,0,0,0,0,1,0,0,0,4,44,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,278,"        Preconditions.checkState(childCount == 3);
",2,1,0,1,2,0,4,0,0,7,42,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,279,"        int p = NodeUtil.precedence(type);
",2,0,0,1,2,0,6,0,0,8,34,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,280,"        addExpr(first, p + 1, context);
",2,1,0,1,2,0,6,0,0,9,31,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,281,"        cc.addOp(""?"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,282,"        addExpr(first.getNext(), 1, Context.OTHER);
",4,0,0,2,4,0,6,0,0,10,43,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,283,"        cc.addOp("":"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,284,"        addExpr(last, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,32,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,285,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,483,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,486,"        addExpr(first, NodeUtil.precedence(type), context);
",0,0,0,2,4,0,12,0,0,12,51,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,487,"        add(""["");
",0,0,0,1,3,0,2,0,0,3,9,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,488,"        add(first.getNext());
",0,0,0,2,4,0,6,0,0,6,21,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,489,"        add(""]"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,132,490,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,223,"        validateTrinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,21,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,224,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,755,"    validateChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,25,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,756,"    Node first = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,757,"    validateExpression(first);
",0,0,0,1,2,0,4,0,0,4,26,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,758,"    validateExpression(first.getNext());
",0,0,0,2,4,0,6,0,0,6,36,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,759,"    validateExpression(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,132,760,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,655,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,238,"        return processConditionalExpression((ConditionalExpression) node);
",2,0,0,2,4,1,2,2,0,6,66,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,684,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,132,234,"        return processElementGet((ElementGet) node);
",2,0,0,2,4,1,2,2,0,6,44,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,913,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,989,"        Node first = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,8,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,990,"        if (first.isReturn()) {
",0,0,0,2,5,0,4,0,0,4,23,9,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,132,1479,"    return new Node(type, child1, child2, child3).clonePropsFrom(templateNode);
",8,0,0,2,4,1,4,2,0,14,75,5,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,963,"    Preconditions.checkState(isFoldableExpressBlock(n));
",0,0,0,2,4,0,8,0,0,8,52,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,964,"    return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,132,755,"    return IR.exprResult(child).srcref(child);
",0,0,0,2,4,1,10,0,0,10,42,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,749,"    if (isReturnExpressBlock(thenBranch) && isReturnExpressBlock(elseBranch)) {
",0,1,0,3,7,0,8,0,0,9,75,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,767,"    boolean thenBranchIsExpressionBlock = isFoldableExpressBlock(thenBranch);
",2,0,0,1,2,0,4,0,0,6,73,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,768,"    boolean elseBranchIsExpressionBlock = isFoldableExpressBlock(elseBranch);
",2,0,0,1,2,0,4,0,0,6,73,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,770,"    if (thenBranchIsExpressionBlock && elseBranchIsExpressionBlock) {
",4,1,0,1,3,0,0,0,0,5,65,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,987,"    if (n.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,988,"      if (n.hasOneChild()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,996,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,736,"    tryRemoveRepeatedStatements(n);
",0,0,0,1,2,0,4,0,0,4,31,5,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,740,"    if (cond.isNot() && !consumesDanglingElse(elseBranch)) {
",0,1,0,3,7,0,8,0,0,10,56,4,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,893,"    Preconditions.checkState(n.isIf());
",0,0,0,2,4,0,8,0,0,8,35,5,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,132,895,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1838,"    restoreLookAhead(token);
",0,0,0,1,2,0,4,0,0,4,24,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1839,"    return reportGenericTypeSyntaxWarning();
",0,0,0,1,2,1,2,0,0,2,40,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2303,"    return reportTypeSyntaxWarning(""msg.jsdoc.type.syntax"");
",0,0,0,1,2,1,2,0,0,3,56,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,947,"                          type = createJSTypeExpression(newNode(Token.QMARK));
",6,0,0,2,4,0,4,0,0,11,52,18,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2341,"    unreadToken = token;
",4,0,0,0,0,0,0,0,0,5,20,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2342,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2298,"    parser.addTypeWarning(warning, stream.getLineno(), stream.getCharno());
",0,0,0,3,6,0,14,0,0,14,71,5,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,2299,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,958,"                          ExtractionInfo returnDescriptionInfo =
",2,0,0,0,0,0,0,2,0,4,38,18,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1483,"              builder.append(' ');
",0,0,0,1,2,0,4,0,0,5,20,13,0.01235,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,170,"      JSDocInfo.StringPosition position = new JSDocInfo.StringPosition();
",10,0,0,1,2,0,0,0,0,10,67,6,0.01136,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,171,"      position.setItem(text);
",0,0,0,1,2,0,6,0,0,6,23,7,0.01136,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,172,"      position.setPositionInformation(startLineno, startCharno,
",0,0,0,0,1,0,8,0,0,8,57,7,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,1475,"            if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {
",8,3,0,1,3,0,0,0,0,12,65,9,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,82,"      errorReporter.warning(
",0,0,0,0,1,0,4,0,0,4,22,6,0.00943,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,86,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00943,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,133,48,"public final class JsDocInfoParser {
",2,0,0,0,1,2,0,0,0,4,36,1,0.00645,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,136,"  static class TrimmedStringPosition extends StringPosition {
",2,0,0,0,1,1,0,2,0,5,59,2,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,138,"      Preconditions.checkArgument(
",0,0,0,0,1,0,4,0,0,4,28,6,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,142,"      super.setItem(item);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,143,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,129,"  public static class StringPosition extends SourcePosition<String> {
",2,0,0,0,1,2,0,4,0,8,67,2,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/SourcePosition,133,86,"      if (startCharno >= endCharno) {
",4,1,0,1,3,0,0,0,0,5,31,6,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,690,"    if (documentation.markers == null) {
",4,1,0,1,3,0,0,0,0,5,36,4,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,691,"      documentation.markers = Lists.newArrayList();
",4,0,0,1,2,0,4,0,0,9,45,6,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,694,"    Marker marker = new Marker();
",2,0,0,1,2,0,0,4,0,6,29,4,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,695,"    documentation.markers.add(marker);
",4,0,0,1,2,0,4,0,0,8,34,5,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,696,"    return marker;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,179,"  public static final class Marker {
",2,0,0,0,1,3,0,0,0,5,34,2,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,180,"    private TrimmedStringPosition annotation = null;
",2,0,0,0,0,1,0,2,0,5,48,3,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,181,"    private TrimmedStringPosition name = null;
",2,0,0,0,0,1,0,2,0,5,42,3,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,182,"    private SourcePosition<Node> nameNode = null;
",2,0,0,0,0,1,0,4,0,7,45,3,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,183,"    private StringPosition description = null;
",2,0,0,0,0,1,0,2,0,5,42,3,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,184,"    private TypePosition type = null;
",2,0,0,0,0,1,0,2,0,5,33,3,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,194,"      annotation = p;
",4,0,0,0,0,0,0,0,0,5,15,5,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,133,195,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,152,"      JSDocInfo.TrimmedStringPosition position =
",6,0,0,0,0,0,0,0,0,6,42,6,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,154,"      position.setItem(annotation);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,155,"      position.setPositionInformation(lineno, charno, lineno,
",0,0,0,0,1,0,10,0,0,10,55,7,0.00549,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,133,157,"      marker.setAnnotation(position);
",0,0,0,1,2,0,6,0,0,6,31,7,0.00549,0,-1
