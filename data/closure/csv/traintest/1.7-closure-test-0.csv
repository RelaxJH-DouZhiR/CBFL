dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1575,"    for (String name : currentPropertyNames) {
",4,0,0,1,3,0,0,2,0,6,42,4,0.00000,1,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,202,"    if (detectImplicitPrototypeCycle()) {
",0,0,0,2,5,0,2,0,0,2,37,5,0.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1417,"      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
",0,0,0,1,2,1,6,0,0,6,51,7,0.03448,1,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1315,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00179,1,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,160,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00568,1,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,13,128,"        c = next;
",4,0,0,0,0,0,0,0,0,5,9,8,0.00223,1,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,767,"              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);
",4,0,0,1,2,0,8,0,0,12,53,14,0.81818,1,-1
defect4j,closure,com/google/javascript/rhino/Node,1,924,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,925,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,926,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,934,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,935,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,936,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,937,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,938,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,948,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,952,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,960,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,979,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,988,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,397,"          argList.removeChild(lastArg);
",0,0,0,1,2,0,6,0,0,6,29,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,398,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,402,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,395,"        Var var = fnScope.getVar(lastArg.getString());
",2,0,0,2,4,0,8,2,0,12,46,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,396,"        if (!referenced.contains(var)) {
",0,0,0,2,5,0,6,0,0,7,32,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,131,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,746,"            assignedToUnknownValue = true;
",2,0,0,0,0,0,0,0,0,4,30,12,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,1493,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,206,"          traverseFunction(n, scope);
",0,0,0,1,2,0,6,0,0,6,27,8,0.95522,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,776,"    for (Assign assign : assignsByVar.get(var)) {
",2,0,0,2,5,0,6,2,0,10,45,4,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,780,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,805,"      Var var = it.next();
",2,0,0,1,2,0,4,2,0,8,20,6,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,809,"      for (Node exprCallNode : classDefiningCalls.get(var)) {
",2,0,0,2,5,0,6,2,0,10,55,6,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,817,"      removeAllAssigns(var);
",0,0,0,1,2,0,4,0,0,4,22,7,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,819,"      compiler.addToDebugLog(""Unreferenced var: "" + var.name);
",4,1,0,1,2,0,4,0,0,10,56,7,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,820,"      Node nameNode = var.nameNode;
",6,0,0,0,0,0,0,2,0,8,29,6,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,821,"      Node toRemove = nameNode.getParent();
",2,0,0,1,2,0,4,2,0,8,37,6,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,822,"      Node parent = toRemove.getParent();
",2,0,0,1,2,0,4,2,0,8,35,6,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,824,"      Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,831,"      if (toRemove.isParamList() &&
",0,1,0,1,3,0,4,0,0,5,29,6,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,866,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.84211,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,394,"      while ((lastArg = argList.getLastChild()) != null) {
",2,1,0,3,7,0,4,0,0,8,52,6,0.78049,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,403,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.78049,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,358,"        maybeUnreferenced.add(var);
",0,0,0,1,2,0,6,0,0,6,27,9,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,730,"        Var var = maybeUnreferenced.get(current);
",2,0,0,1,2,0,6,2,0,10,41,8,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,731,"        if (referenced.contains(var)) {
",0,0,0,2,5,0,6,0,0,6,31,9,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,735,"          boolean assignedToUnknownValue = false;
",2,0,0,0,0,0,0,0,0,3,39,11,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,736,"          boolean hasPropertyAssign = false;
",2,0,0,0,0,0,0,0,0,3,34,11,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,738,"          if (var.getParentNode().isVar() &&
",0,1,0,2,5,0,6,0,0,7,34,10,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,749,"          boolean maybeEscaped = false;
",2,0,0,0,0,0,0,0,0,3,29,11,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,750,"          for (Assign assign : assignsByVar.get(var)) {
",2,0,0,2,5,0,6,2,0,10,45,10,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,762,"          if ((assignedToUnknownValue || maybeEscaped) && hasPropertyAssign) {
",6,2,0,2,5,0,0,0,0,8,68,10,0.77108,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,388,"    Node argList = getFunctionArgList(function);
",2,0,0,1,2,0,4,2,0,8,44,4,0.71111,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,389,"    boolean modifyCallers = modifyCallSites
",4,0,0,0,0,0,0,0,0,4,39,5,0.71111,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,391,"    if (!modifyCallers) {
",2,0,0,1,3,0,0,0,0,3,21,4,0.71111,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,406,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.71111,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,413,"    return function.getFirstChild().getNext();
",0,0,0,2,4,1,6,0,0,6,42,5,0.71111,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,1,2142,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,179,"      removeUnreferencedFunctionArgs(fnScope);
",0,0,0,1,2,0,4,0,0,4,40,7,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,180,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,335,"    Preconditions.checkState(n.getChildCount() == 3);
",0,1,0,2,4,0,8,0,0,9,49,5,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,336,"    Preconditions.checkState(n.isFunction());
",0,0,0,2,4,0,8,0,0,8,41,5,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,338,"    final Node body = n.getLastChild();
",2,0,0,1,2,1,4,2,0,9,35,4,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,339,"    Preconditions.checkState(body.getNext() == null &&
",0,2,0,1,3,0,8,0,0,10,50,5,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,342,"    Scope fnScope =
",2,0,0,0,0,0,0,2,0,4,15,4,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,344,"    traverseNode(body, n, fnScope);
",0,0,0,1,2,0,8,0,0,8,31,5,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,346,"    collectMaybeUnreferencedVars(fnScope);
",0,0,0,1,2,0,4,0,0,4,38,5,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,347,"    allFunctionScopes.add(fnScope);
",0,0,0,1,2,0,6,0,0,6,31,5,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,348,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,380,"    Node function = fnScope.getRootNode();
",2,0,0,1,2,0,4,2,0,8,38,4,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,382,"    Preconditions.checkState(function.isFunction());
",0,0,0,2,4,0,8,0,0,8,48,5,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,383,"    if (NodeUtil.isGetOrSetKey(function.getParent())) {
",0,0,0,3,7,0,8,0,0,8,51,5,0.70330,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,1,2137,"    switch (node.getType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.69565,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,310,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.69014,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,199,"        if (NodeUtil.isFunctionDeclaration(n)) {
",0,0,0,2,5,0,6,0,0,6,40,6,0.67368,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,203,"        if (var != null && isRemovableVar(var)) {
",2,2,0,2,5,0,4,0,0,9,41,5,0.67368,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,208,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.67368,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,949,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.66667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,950,"      sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,9,0.66667,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,200,"          var = scope.getVar(n.getFirstChild().getString());
",2,0,0,3,6,0,10,0,0,13,50,7,0.53731,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,314,"    if (referenced.contains(var)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.53333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,319,"    if (codingConvention.isExported(var.getName())) {
",0,0,0,3,7,0,8,0,0,8,49,5,0.53333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,323,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.53333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,356,"      Var var = it.next();
",2,0,0,1,2,0,4,2,0,8,20,6,0.53333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,357,"      if (isRemovableVar(var)) {
",0,0,0,2,5,0,4,0,0,4,26,7,0.53333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,360,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.53333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,355,"    for (Iterator<Var> it = scope.getVars(); it.hasNext(); ) {
",2,0,0,3,7,0,8,4,0,14,58,4,0.45390,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,361,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.45390,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,1,192,"      return scope.isGlobal();
",0,0,0,1,2,1,4,0,0,4,24,6,0.43243,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,1,183,"      if (s.getParent().isGlobal()) {
",0,0,0,3,7,0,6,0,0,6,31,6,0.42105,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,1,184,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.42105,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,693,"        first = first.next;
",6,0,0,0,0,0,0,0,0,7,19,5,0.41026,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,1,97,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.39024,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,545,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.37427,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedUndirectedGraph,1,46,"    return new SimpleSubGraph<N, E>(this);
",0,0,0,1,2,1,0,6,0,6,38,7,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedUndirectedGraph,1,62,"    return new LinkedUndirectedGraph<N, E>(true, true);
",0,0,0,1,2,1,0,6,0,8,51,5,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedUndirectedGraph,1,252,"    return Collections.<GraphNode<N, E>> unmodifiableCollection(nodes.values());
",0,0,0,2,4,1,8,6,0,14,76,5,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,1,310,"    SimpleSubGraph(Graph<N, E> graph) {
",4,0,0,1,3,0,0,6,0,10,35,3,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,1,308,"    private List<GraphNode<N, E>> nodes = Lists.newArrayList();
",2,0,0,1,2,1,4,8,0,15,59,3,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,1,311,"      this.graph = graph;
",4,0,0,0,0,0,0,0,0,5,19,5,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,1,312,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,100,"    if (LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE <
",4,1,0,0,1,0,0,0,0,5,52,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,105,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,115,"    ControlFlowGraph<Node> cfg = t.getControlFlowGraph();
",2,0,0,1,2,0,4,4,0,10,53,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,116,"    LiveVariablesAnalysis liveness =
",2,0,0,0,0,0,0,2,0,4,32,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,122,"    if (scope.getRootNode().getFirstChild().getNext().getChildCount() == 2) {
",0,1,0,5,11,0,10,0,0,11,73,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,125,"    liveness.analyze();
",0,0,0,1,2,0,4,0,0,4,19,5,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,127,"    UndiGraph<Var, Void> interferenceGraph =
",2,0,0,0,0,0,0,6,0,8,40,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,131,"    GraphColoring<Var, Void> coloring =
",2,0,0,0,0,0,0,6,0,8,35,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,135,"    coloring.color();
",0,0,0,1,2,0,4,0,0,4,17,5,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,136,"    colorings.push(coloring);
",0,0,0,1,2,0,6,0,0,6,25,5,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,137,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,144,"    colorings.pop();
",0,0,0,1,2,0,4,0,0,4,16,5,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,145,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,214,"    UndiGraph<Var, Void> interferenceGraph =
",2,0,0,0,0,0,0,6,0,8,40,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,216,"    Scope scope = t.getScope();
",2,0,0,1,2,0,4,2,0,8,27,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,219,"    for (Iterator<Var> i = scope.getVars(); i.hasNext();) {
",2,0,0,3,7,0,8,4,0,14,55,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,236,"    for (Iterator<Var> i1 = scope.getVars(); i1.hasNext();) {
",2,0,0,3,7,0,8,4,0,14,57,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,1,304,"    return interferenceGraph;
",2,0,0,0,0,1,0,0,0,2,25,4,0.37209,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,309,"    if (!removeGlobals && var.isGlobal()) {
",2,1,0,2,5,0,4,0,0,8,39,4,0.36782,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedUndirectedGraph,1,69,"      boolean useNodeAnnotations, boolean useEdgeAnnotations) {
",4,0,0,0,2,0,0,0,0,4,57,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedUndirectedGraph,1,41,"  protected final Map<N, LinkedUndirectedGraphNode<N, E>> nodes =
",2,0,0,0,0,2,0,10,0,14,63,2,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedUndirectedGraph,1,70,"    this.useNodeAnnotations = useNodeAnnotations;
",4,0,0,0,0,0,0,0,0,5,45,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedUndirectedGraph,1,71,"    this.useEdgeAnnotations = useEdgeAnnotations;
",4,0,0,0,0,0,0,0,0,5,45,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedUndirectedGraph,1,72,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/UndiGraph,1,29,"public abstract class UndiGraph<N, E> extends Graph<N, E> {
",6,0,0,0,1,2,0,6,0,14,59,1,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/UndiGraph,1,59,"  public static interface UndiGraphEdge<N, E> extends GraphEdge<N, E> {
",6,0,0,0,1,2,0,6,0,14,69,2,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,130,"    return escaped;
",2,0,0,0,0,1,0,0,0,2,15,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,81,"    private LiveVariableLattice(int numVars) {
",4,0,0,1,3,1,0,0,0,5,42,3,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,82,"      this.liveSet = new BitSet(numVars);
",4,0,0,1,2,0,0,2,0,7,35,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,83,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,85,"    private LiveVariableLattice(LiveVariableLattice other) {
",4,0,0,1,3,1,0,2,0,7,56,3,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,86,"      Preconditions.checkNotNull(other);
",0,0,0,1,2,0,6,0,0,6,34,6,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,87,"      this.liveSet = (BitSet) other.liveSet.clone();
",6,0,0,2,4,0,2,2,0,11,46,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,88,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,75,"  static class LiveVariableLattice implements LatticeElement {
",2,0,0,0,1,1,0,2,0,5,60,2,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,92,"      Preconditions.checkNotNull(other);
",0,0,0,1,2,0,6,0,0,6,34,6,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,93,"      return (other instanceof LiveVariableLattice) &&
",2,1,0,1,2,1,0,2,0,5,48,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,123,"    super(cfg, new LiveVariableJoinOp());
",2,0,0,2,4,0,0,2,0,4,37,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,124,"    this.jsScope = jsScope;
",4,0,0,0,0,0,0,0,0,5,23,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,125,"    this.escaped = Sets.newHashSet();
",2,0,0,1,2,0,4,0,0,7,33,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,126,"    computeEscaped(jsScope, escaped, compiler);
",0,0,0,1,2,0,8,0,0,8,43,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,127,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,139,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,144,"    return new LiveVariableLattice(jsScope.getVarCount());
",0,0,0,2,4,1,4,2,0,6,54,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,149,"    return new LiveVariableLattice(jsScope.getVarCount());
",0,0,0,2,4,1,4,2,0,6,54,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,154,"    final BitSet gen = new BitSet(input.liveSet.size());
",6,0,0,2,4,1,2,4,0,13,52,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,155,"    final BitSet kill = new BitSet(input.liveSet.size());
",6,0,0,2,4,1,2,4,0,13,53,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,158,"    boolean conditional = false;
",2,0,0,0,0,0,0,0,0,3,28,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,159,"    List<DiGraphEdge<Node, Branch>> edgeList = getCfg().getOutEdges(node);
",2,0,0,2,4,0,6,8,0,16,70,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,160,"    for (DiGraphEdge<Node, Branch> edge : edgeList) {
",4,0,0,1,3,0,0,6,0,10,49,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,161,"      if (Branch.ON_EX.equals(edge.getValue())) {
",4,0,0,3,7,0,6,0,0,10,43,7,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,164,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,165,"    computeGenKill(node, gen, kill, conditional);
",0,0,0,1,2,0,10,0,0,10,45,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,166,"    LiveVariableLattice result = new LiveVariableLattice(input);
",4,0,0,1,2,0,0,4,0,8,60,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,168,"    result.liveSet.andNot(kill);
",4,0,0,1,2,0,4,0,0,8,28,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,169,"    result.liveSet.or(gen);
",4,0,0,1,2,0,4,0,0,8,23,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,170,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,187,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,191,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,48,"class LiveVariablesAnalysis extends
",2,0,0,0,0,0,0,0,0,2,35,1,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,1,58,"  private static class LiveVariableJoinOp
",2,0,0,0,0,2,0,0,0,4,39,2,0.35556,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,306,"        if (n.getClass() != Node.class) {
",0,1,0,2,5,0,4,2,0,7,33,5,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,309,"        Preconditions.checkState(childCount == 3);
",2,1,0,1,2,0,4,0,0,7,42,6,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,310,"        boolean funcNeedsParens = (context == Context.START_OF_EXPR);
",8,1,0,1,2,0,0,0,0,9,61,6,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,311,"        if (funcNeedsParens) {
",2,0,0,1,3,0,0,0,0,2,22,5,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,315,"        add(""function"");
",0,0,0,1,2,0,2,0,0,3,16,6,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,316,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,318,"        add(first.getNext());
",0,0,0,2,4,0,6,0,0,6,21,6,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,319,"        add(last, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,34,6,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,320,"        cc.endFunction(context == Context.STATEMENT);
",6,1,0,1,2,0,4,0,0,11,45,6,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,322,"        if (funcNeedsParens) {
",2,0,0,1,3,0,0,0,0,2,22,5,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,168,"    sawFunction = true;
",2,0,0,0,0,0,0,0,0,4,19,4,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,169,"    if (statementContext) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,172,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.34973,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,1,80,"    if (LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE <
",4,1,0,0,1,0,0,0,0,5,52,4,0.34783,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,1,88,"    Node fnBlock = t.getScopeRoot().getLastChild();
",2,0,0,2,4,0,6,2,0,10,47,4,0.34783,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,1,89,"    if (NodeUtil.containsFunction(fnBlock)) {
",0,0,0,2,5,0,6,0,0,6,41,5,0.34783,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,1,95,"    if (!NodeUtil.has(fnBlock, matchRemovableAssigns,
",0,0,0,0,2,0,8,0,0,9,49,4,0.34783,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,1,53,"      return (NodeUtil.isAssignmentOp(n) &&
",0,1,0,1,3,1,6,0,0,7,37,11,0.34783,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,234,"        add(""("");
",0,0,0,1,3,0,2,0,0,3,9,6,0.34595,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,235,"        addList(first);
",0,0,0,1,2,0,4,0,0,4,15,6,0.34595,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,236,"        add("")"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.34595,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,237,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.34595,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,379,"          cc.beginBlock();
",0,0,0,1,2,0,4,0,0,4,16,9,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,407,"          cc.endBlock(cc.breakAfterBlockFor(n, context == Context.STATEMENT));
",6,1,0,2,4,0,10,0,0,17,68,9,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,77,"    append(""{"");
",0,0,0,1,3,0,2,0,0,3,12,5,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,78,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,81,"    append(""}"");
",0,0,0,1,3,0,2,0,0,3,12,5,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,82,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,101,"    if (statementNeedsEnded) {
",2,0,0,1,3,0,0,0,0,2,26,4,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,105,"    appendBlockStart();
",0,0,0,1,2,0,2,0,0,2,19,5,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,107,"    endLine();
",0,0,0,1,2,0,2,0,0,2,10,5,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,108,"    statementNeedsEnded = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,109,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,116,"    appendBlockEnd();
",0,0,0,1,2,0,2,0,0,2,17,5,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,117,"    if (shouldEndLine) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,120,"    statementNeedsEnded = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,121,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,308,"    return statementContext;
",2,0,0,0,0,1,0,0,0,2,24,4,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,1,312,"          FlowState<L> inNodeState = inNode.getAnnotation();
",2,0,0,1,2,0,4,4,0,10,50,10,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,1,313,"          state.setOut(inNodeState.getIn());
",0,0,0,2,4,0,8,0,0,8,34,11,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,1,1541,"    return containsType(n, Token.FUNCTION);
",4,0,0,1,2,1,4,0,0,8,39,5,0.34043,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,2143,"    debugLog.append(str);
",0,0,0,1,2,0,6,0,0,6,21,5,0.33862,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,2144,"    debugLog.append('\n');
",0,0,0,1,2,0,4,0,0,5,22,5,0.33862,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,2145,"    logger.fine(str);
",0,0,0,1,2,0,6,0,0,6,17,5,0.33862,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,2146,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,1,2230,"    return containsType(node, type, Predicates.<Node>alwaysTrue());
",0,0,0,2,4,1,10,2,0,12,63,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,141,"    Preconditions.checkState(compiler.getLifeCycleStage().isNormalized());
",0,0,0,3,6,0,10,0,0,10,70,5,0.33161,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,142,"    SimpleDefinitionFinder defFinder = null;
",2,0,0,0,0,0,0,2,0,4,40,4,0.33161,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,144,"    if (modifyCallSites) {
",2,0,0,1,3,0,0,0,0,2,22,4,0.33161,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,149,"    process(externs, root, defFinder);
",0,0,0,1,2,0,8,0,0,8,34,5,0.33161,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,150,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33161,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,136,"      Collections.sort(worklist, new Comparator<GraphNode<N, E>>() {
",0,0,0,1,4,0,6,8,0,14,62,6,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,126,"      super(graph);
",2,0,0,1,2,0,0,0,0,2,13,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,127,"      this.tieBreaker = tieBreaker;
",4,0,0,0,0,0,0,0,0,5,29,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,128,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,132,"      graph.clearNodeAnnotations();
",0,0,0,1,2,0,4,0,0,4,29,6,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,133,"      List<GraphNode<N, E>> worklist = Lists.newArrayList(graph.getNodes());
",2,0,0,2,4,0,8,8,0,18,70,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,136,"      Collections.sort(worklist, new Comparator<GraphNode<N, E>>() {
",0,0,0,1,4,0,6,8,0,14,62,6,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,148,"      int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,6,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,150,"        Color color = new Color(count);
",4,0,0,1,2,0,0,4,0,8,31,7,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,151,"        SubGraph<N, E> subgraph = graph.newSubGraph();
",2,0,0,1,2,0,4,6,0,12,46,7,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,152,"        for (Iterator<GraphNode<N, E>> i = worklist.iterator(); i.hasNext();) {
",2,0,0,3,7,0,8,8,0,18,71,7,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,160,"        count++;
",2,0,0,0,0,0,0,0,0,3,8,7,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,161,"      } while (!worklist.isEmpty());
",0,0,0,2,5,0,4,0,0,5,30,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,163,"      N[] map = (N[]) new Object[count];
",2,0,1,4,8,0,0,6,0,10,34,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,164,"      colorToNodeMap = map;
",4,0,0,0,0,0,0,0,0,5,21,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,165,"      return count;
",2,0,0,0,0,1,0,0,0,2,13,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,54,"  public GraphColoring(AdjacencyGraph<N, E> graph) {
",4,0,0,1,3,1,0,6,0,11,50,2,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,55,"    this.graph = graph;
",4,0,0,0,0,0,0,0,0,5,19,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,56,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,91,"    Color(int value) {
",4,0,0,1,3,0,0,0,0,4,18,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,89,"    int value = 0;
",2,0,0,0,0,0,0,0,0,2,14,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,92,"      this.value = value;
",4,0,0,0,0,0,0,0,0,5,19,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/GraphColoring,1,93,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,127,"      boolean modifyCallSites) {
",2,0,0,0,2,0,0,0,0,2,26,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,83,"  private final Set<Var> referenced = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,54,2,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,88,"  private final List<Var> maybeUnreferenced = Lists.newArrayList();
",2,0,0,1,2,2,4,4,0,12,65,2,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,93,"  private final List<Scope> allFunctionScopes = Lists.newArrayList();
",2,0,0,1,2,2,4,4,0,12,67,2,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,98,"  private final Multimap<Var, Assign> assignsByVar =
",2,0,0,0,0,2,0,6,0,10,50,2,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,104,"  private final Map<Node, Assign> assignsByNode = Maps.newHashMap();
",2,0,0,1,2,2,4,6,0,14,66,2,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,109,"  private final Multimap<Var, Node> classDefiningCalls =
",2,0,0,0,0,2,0,6,0,10,54,2,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,116,"  private final Multimap<Var, Continuation> continuations =
",2,0,0,0,0,2,0,6,0,10,57,2,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,128,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,129,"    this.codingConvention = compiler.getCodingConvention();
",2,0,0,1,2,0,4,0,0,7,55,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,130,"    this.removeGlobals = removeGlobals;
",4,0,0,0,0,0,0,0,0,5,35,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,131,"    this.preserveFunctionExpressionNames = preserveFunctionExpressionNames;
",4,0,0,0,0,0,0,0,0,5,71,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,132,"    this.modifyCallSites = modifyCallSites;
",4,0,0,0,0,0,0,0,0,5,39,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,133,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,155,"    if (modifyCallSites) {
",2,0,0,1,3,0,0,0,0,2,22,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,159,"    traverseAndRemoveUnusedReferences(root);
",0,0,0,1,2,0,4,0,0,4,40,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,160,"    if (callSiteOptimizer != null) {
",2,1,0,1,3,0,0,0,0,3,32,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,163,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,169,"    Scope scope = new SyntacticScopeCreator(compiler).createScope(root, null);
",4,0,0,2,4,0,4,4,0,13,74,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,170,"    traverseNode(root, null, scope);
",0,0,0,1,2,0,6,0,0,7,32,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,172,"    if (removeGlobals) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,176,"    interpretAssigns();
",0,0,0,1,2,0,2,0,0,2,19,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,177,"    removeUnreferencedVars();
",0,0,0,1,2,0,2,0,0,2,25,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,178,"    for (Scope fnScope : allFunctionScopes) {
",4,0,0,1,3,0,0,2,0,6,41,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,181,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,193,"    int type = n.getType();
",2,0,0,1,2,0,4,0,0,6,23,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,194,"    Var var = null;
",2,0,0,0,0,0,0,2,0,4,15,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,195,"    switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,302,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,303,"      traverseNode(c, n, scope);
",0,0,0,1,2,0,8,0,0,8,26,7,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,305,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,722,"    boolean changes = false;
",2,0,0,0,0,0,0,0,0,3,24,5,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,724,"      changes = false;
",2,0,0,0,0,0,0,0,0,4,16,6,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,729,"      for (int current = 0; current < maybeUnreferenced.size(); current++) {
",6,1,0,2,5,0,4,0,0,12,70,6,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,769,"    } while (changes);
",2,0,0,1,3,0,0,0,0,2,18,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,770,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,802,"    CodingConvention convention = codingConvention;
",4,0,0,0,0,0,0,2,0,6,47,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,804,"    for (Iterator<Var> it = maybeUnreferenced.iterator(); it.hasNext(); ) {
",2,0,0,3,7,0,8,4,0,14,71,4,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,867,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32653,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,242,"    int numExtraArgs = highestIndex - numNamedParameter + 1;
",6,2,0,0,0,0,0,0,0,8,56,5,0.31373,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,245,"    String[] argNames = new String[numExtraArgs];
",2,0,1,2,4,0,0,4,0,8,45,4,0.31373,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,249,"    for (int i = 0; i < numExtraArgs; i++) {
",8,1,0,1,3,0,0,0,0,10,40,4,0.31373,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,257,"    for (Node ref : currentArgumentsAccess) {
",4,0,0,1,3,0,0,2,0,6,41,4,0.31373,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,288,"    return changed;
",2,0,0,0,0,1,0,0,0,2,15,4,0.31373,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,1,433,"    return rootNode;
",2,0,0,0,0,1,0,0,0,2,16,4,0.30918,0,-1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,1,74,"      root = root.getLastChild();
",2,0,0,1,2,0,4,0,0,7,27,6,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,106,"    if (currentArgumentsAccess != null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,109,"    currentArgumentsAccess = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,47,4,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,110,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,125,"    if (tryReplaceArguments(traversal.getScope())) {
",0,0,0,3,7,0,6,0,0,6,48,5,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,134,"    if (!argumentsAccessStack.isEmpty()) {
",0,0,0,2,5,0,4,0,0,5,38,4,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,137,"      currentArgumentsAccess = null;
",2,0,0,0,0,0,0,0,0,3,30,6,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,139,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,165,"    if (node.isName() && ARGUMENTS.equals(node.getString())) {
",0,1,0,4,9,0,12,0,0,13,58,4,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,168,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,179,"    Node parametersList = scope.getRootNode().getFirstChild().getNext();
",2,0,0,3,6,0,8,2,0,12,68,4,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,180,"    Preconditions.checkState(parametersList.isParamList());
",0,0,0,2,4,0,8,0,0,8,55,5,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,184,"    boolean changed = false;
",2,0,0,0,0,0,0,0,0,3,24,5,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,188,"    int numNamedParameter = parametersList.getChildCount();
",2,0,0,1,2,0,4,0,0,6,55,5,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,193,"    int highestIndex = numNamedParameter - 1;
",4,1,0,0,0,0,0,0,0,5,41,5,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,1,197,"    for (Node ref : currentArgumentsAccess) {
",4,0,0,1,3,0,0,2,0,6,41,4,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,2031,"          mode = Config.LanguageMode.ECMASCRIPT5;
",8,0,0,0,0,0,0,0,0,9,39,7,0.30625,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,2032,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.30625,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,1,159,"        reservedKeywords = ES5_RESERVED_KEYWORDS;
",4,0,0,0,0,0,0,0,0,5,41,5,0.30625,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,1,160,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.30625,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,691,"    Node prev = getChildBefore(child);
",2,0,0,1,2,0,4,2,0,8,34,4,0.29767,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,692,"    if (prev == null)
",2,1,0,1,2,0,0,0,0,3,17,4,0.29767,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,696,"    if (child == last) last = prev;
",8,1,0,1,2,0,0,0,0,10,31,4,0.29767,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,697,"    child.next = null;
",4,0,0,0,0,0,0,0,0,5,18,4,0.29767,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,698,"    child.parent = null;
",4,0,0,0,0,0,0,0,0,5,20,4,0.29767,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,699,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.29767,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,1,95,"      return isExported(name, false) || isExported(name, true);
",0,1,0,2,4,1,8,0,0,11,57,5,0.29767,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,1,178,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.29630,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,1,170,"      return nameNode == null ? null : nameNode.getParent();
",2,1,0,1,2,1,4,0,0,7,54,6,0.29630,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,397,"            cc.maybeLineBreak();
",0,0,0,1,2,0,4,0,0,4,20,11,0.29268,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,1,170,"      endLine();
",0,0,0,1,2,0,2,0,0,2,10,7,0.29268,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,273,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.29070,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,1,89,"      return nextConvention.isExported(name, local);
",0,0,0,1,2,1,8,0,0,8,46,6,0.28959,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,1,283,"      return local && name.startsWith(""$super"");
",2,1,0,1,2,1,4,0,0,8,42,5,0.28959,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,919,"    addList(firstInList, true, Context.OTHER);
",4,0,0,1,2,0,4,0,0,9,42,5,0.28444,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,920,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.28444,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,1,169,"        findNamedFunctions(t, n, parent);
",0,0,0,1,2,0,8,0,0,8,33,8,0.28070,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,1,171,"        findFunctionExpressions(t, n);
",0,0,0,1,2,0,6,0,0,6,30,8,0.28070,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,1,176,"      if (!NodeUtil.isStatement(n)) {
",0,0,0,2,5,0,6,0,0,7,31,5,0.28070,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,1,213,"      switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.28070,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,1,235,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.28070,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,80,"        tryMinimizeExits(
",0,0,0,0,1,0,2,0,0,2,17,6,0.28070,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,1532,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,929,"      boolean isFirst = n == firstInList;
",6,1,0,0,0,0,0,0,0,7,35,7,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,930,"      if (isFirst) {
",2,0,0,1,3,0,0,0,0,2,14,6,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,1,931,"        addExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);
",2,0,0,1,2,0,6,0,0,8,58,9,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,117,"    if (matchingExitNode(n, exitType, labelName)) {
",0,0,0,2,5,0,8,0,0,8,47,5,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,124,"    if (n.isIf()) {
",0,0,0,2,5,0,4,0,0,4,15,5,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,135,"    if (n.isTry()) {
",0,0,0,2,5,0,4,0,0,4,16,5,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,152,"    if (n.isLabel()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,160,"    if (!n.isBlock() || n.getLastChild() == null) {
",0,2,0,3,7,0,8,0,0,11,47,4,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,161,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,285,"    if (n.getType() == type) {
",2,1,0,2,5,0,4,0,0,7,26,4,0.27586,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,1,298,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.27586,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,2190,"    return this.getType() == Token.CATCH;
",4,1,0,1,2,1,2,0,0,7,37,4,0.27528,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,262,"        var = scope.getVar(n.getString());
",2,0,0,2,4,0,8,0,0,11,34,5,0.27528,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,1,263,"        if (parent.isVar()) {
",0,0,0,2,5,0,4,0,0,4,21,6,0.27528,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,1,136,"      return name;
",2,0,0,0,0,1,0,0,0,2,12,5,0.27468,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,544,"    if (child == first) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.27350,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeChangeHandler,1,48,"      hasChanged = false;
",2,0,0,0,0,0,0,0,0,4,19,5,0.27350,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeChangeHandler,1,49,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.27350,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,1813,"      this.jsType = jsType;
",4,0,0,0,0,0,0,0,0,5,21,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,1814,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,1868,"    putBooleanProp(VAR_ARGS_NAME, varArgs);
",0,0,0,1,2,0,6,0,0,6,39,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,1869,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,1886,"    putBooleanProp(OPT_ARG_NAME, optionalArg);
",0,0,0,1,2,0,6,0,0,6,42,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/Node,1,1887,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,111,"    this(registry, null, null);
",2,0,0,1,2,0,0,0,0,2,27,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,112,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,115,"      ImmutableList<JSType> templatizedTypes) {
",2,0,0,0,2,0,0,4,0,6,41,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,71,"  private boolean resolved = false;
",2,0,0,0,0,1,0,0,0,4,33,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,72,"  private JSType resolveResult = null;
",2,0,0,0,0,1,0,2,0,5,36,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,76,"  private boolean inTemplatedCheckVisit = false;
",2,0,0,0,0,1,0,0,0,4,46,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,116,"    this.registry = registry;
",4,0,0,0,0,0,0,0,0,5,25,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,119,"    int keysLength = templateKeys == null ? 0 : templateKeys.size();
",4,1,0,1,2,0,4,0,0,9,64,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,120,"    int typesLength = templatizedTypes == null ? 0 : templatizedTypes.size();
",4,1,0,1,2,0,4,0,0,9,73,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,121,"    if (typesLength > keysLength) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,124,"    } else if (typesLength < keysLength) {
",4,1,0,1,4,0,0,0,0,5,38,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,138,"      templateKeys = ImmutableList.of();
",2,0,0,1,2,0,4,0,0,7,34,8,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,139,"      templatizedTypes = ImmutableList.of();
",2,0,0,1,2,0,4,0,0,7,38,8,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,142,"    this.templateKeys = templateKeys;
",4,0,0,0,0,0,0,0,0,5,33,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,143,"    this.templatizedTypes = templatizedTypes;
",4,0,0,0,0,0,0,0,0,5,41,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,144,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,150,"    return registry.getNativeType(typeId);
",0,0,0,1,2,1,6,0,0,6,38,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,189,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,193,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,197,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,201,"    return isNoType() || isNoObjectType() || isNoResolvedType() ||
",0,1,0,3,6,1,6,0,0,7,62,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,278,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,282,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,290,"    return toMaybeUnionType() != null;
",0,1,0,1,2,1,2,0,0,4,34,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,349,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,359,"    return toMaybeFunctionType() != null;
",0,1,0,1,2,1,2,0,0,4,37,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,375,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,412,"    return toMaybeRecordType() != null;
",0,1,0,1,2,1,2,0,0,4,35,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,420,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,424,"    return toMaybeParameterizedType() != null;
",0,1,0,1,2,1,2,0,0,4,42,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,432,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,462,"    if (!this.inTemplatedCheckVisit) {
",2,0,0,1,3,0,0,0,0,3,34,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,463,"      this.inTemplatedCheckVisit = true;
",2,0,0,0,0,0,0,0,0,4,34,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,464,"      boolean result = hasAnyTemplateTypesInternal();
",2,0,0,1,2,0,2,0,0,4,47,7,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,465,"      this.inTemplatedCheckVisit = false;
",2,0,0,0,0,0,0,0,0,4,35,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,466,"      return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,474,"    if (isTemplatized()) {
",0,0,0,2,5,0,2,0,0,2,22,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,481,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,488,"    return !templateKeys.isEmpty();
",0,0,0,1,2,1,4,0,0,5,31,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,495,"    return templateKeys;
",2,0,0,0,0,1,0,0,0,2,20,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,499,"    return templatizedTypes;
",2,0,0,0,0,1,0,0,0,2,24,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,571,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,626,"    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);
",4,0,0,1,2,1,4,0,0,8,64,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,655,"    if (this == that) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,659,"    boolean thisUnknown = isUnknownType();
",2,0,0,1,2,0,2,0,0,4,38,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,660,"    boolean thatUnknown = that.isUnknownType();
",2,0,0,1,2,0,4,0,0,6,43,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,661,"    if (thisUnknown || thatUnknown) {
",4,1,0,1,3,0,0,0,0,5,33,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,679,"    if (isUnionType() && that.isUnionType()) {
",0,1,0,3,7,0,6,0,0,7,42,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,684,"    if (isFunctionType() && that.isFunctionType()) {
",0,1,0,3,7,0,6,0,0,7,48,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,689,"    if (isRecordType() && that.isRecordType()) {
",0,1,0,3,7,0,6,0,0,7,44,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,694,"    ParameterizedType thisParamType = toMaybeParameterizedType();
",2,0,0,1,2,0,2,2,0,6,61,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,695,"    ParameterizedType thatParamType = that.toMaybeParameterizedType();
",2,0,0,1,2,0,4,2,0,8,66,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,696,"    if (thisParamType != null || thatParamType != null) {
",4,3,0,1,3,0,0,0,0,7,53,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,719,"    if (isNominalType() && that.isNominalType()) {
",0,1,0,3,7,0,6,0,0,7,46,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,725,"    if (this instanceof ProxyObjectType) {
",0,0,0,1,3,0,0,2,0,2,38,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,731,"    if (that instanceof ProxyObjectType) {
",2,0,0,1,3,0,0,2,0,4,38,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,741,"    return this == that;
",2,1,0,0,0,1,0,0,0,3,20,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,757,"    return System.identityHashCode(this);
",0,0,0,1,2,1,4,0,0,4,37,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,876,"    return this instanceof ObjectType ? (ObjectType) this : null;
",0,0,0,1,2,1,0,4,0,4,61,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1333,"    return isSubtypeHelper(this, that);
",0,0,0,1,2,1,4,0,0,4,35,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1342,"    if (thatType.isUnknownType()) {
",0,0,0,2,5,0,4,0,0,4,31,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1346,"    if (thatType.isAllType()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1350,"    if (thisType.isEquivalentTo(thatType)) {
",0,0,0,2,5,0,6,0,0,6,40,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1354,"    if (thatType.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,29,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1365,"    if (thisType.isParameterizedType()) {
",0,0,0,2,5,0,4,0,0,4,37,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1371,"    if (thatType instanceof ProxyObjectType) {
",2,0,0,1,3,0,0,2,0,4,42,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1375,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,1,1490,"    return toStringHelper(false);
",0,0,0,1,2,1,2,0,0,3,29,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,88,"    super(registry);
",2,0,0,1,2,0,0,0,0,2,16,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,84,"  private JSDocInfo docInfo = null;
",2,0,0,0,0,1,0,2,0,5,33,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,85,"  private boolean unknown = true;
",2,0,0,0,0,1,0,0,0,4,31,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,89,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,93,"    super(registry, templateKeys, templatizedTypes);
",6,0,0,1,2,0,0,0,0,6,48,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,94,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,562,"    if (unknown) {
",2,0,0,1,3,0,0,0,0,2,14,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,563,"      ObjectType implicitProto = getImplicitPrototype();
",2,0,0,1,2,0,2,2,0,6,50,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,564,"      if (implicitProto == null ||
",2,2,0,0,1,0,0,0,0,4,28,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,566,"        unknown = false;
",2,0,0,0,0,0,0,0,0,4,16,8,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,567,"        for (ObjectType interfaceType : getCtorExtendedInterfaces()) {
",2,0,0,2,5,0,2,2,0,6,62,8,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,577,"    return unknown;
",2,0,0,0,0,1,0,0,0,2,15,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,591,"    return !unknown;
",2,0,0,0,0,1,0,0,0,3,16,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,1,616,"    return getOwnerFunction() != null;
",0,1,0,1,2,1,2,0,0,4,34,4,0.26778,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,1186,"    if (typeRegistry == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.26778,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,1187,"      typeRegistry = new JSTypeRegistry(oldErrorReporter, options.looseTypes);
",8,0,0,1,2,0,0,2,0,11,72,6,0.26778,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,1,1189,"    return typeRegistry;
",2,0,0,0,0,1,0,0,0,2,20,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,138,"    super(registry, name,
",4,0,0,0,1,0,0,0,0,4,21,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,119,"  private List<ObjectType> implementedInterfaces = ImmutableList.of();
",2,0,0,1,2,1,4,4,0,11,68,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,125,"  private List<ObjectType> extendedInterfaces = ImmutableList.of();
",2,0,0,1,2,1,4,4,0,11,65,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,141,"    setPrettyPrint(true);
",0,0,0,1,2,0,2,0,0,3,21,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,143,"    Preconditions.checkArgument(source == null ||
",2,2,0,0,1,0,4,0,0,8,45,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,145,"    Preconditions.checkNotNull(arrowType);
",0,0,0,1,2,0,6,0,0,6,38,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,146,"    this.source = source;
",4,0,0,0,0,0,0,0,0,5,21,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,147,"    if (isConstructor) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,148,"      this.kind = Kind.CONSTRUCTOR;
",6,0,0,0,0,0,0,0,0,7,29,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,149,"      this.propAccess = PropAccess.ANY;
",6,0,0,0,0,0,0,0,0,7,33,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,150,"      this.typeOfThis = typeOfThis != null ?
",4,1,0,0,0,0,0,0,0,6,38,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,153,"      this.kind = Kind.ORDINARY;
",6,0,0,0,0,0,0,0,0,7,26,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,154,"      this.typeOfThis = typeOfThis != null ?
",4,1,0,0,0,0,0,0,0,6,38,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,158,"    this.call = arrowType;
",4,0,0,0,0,0,0,0,0,5,22,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,159,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,191,"    return kind == Kind.CONSTRUCTOR;
",6,1,0,0,0,1,0,0,0,7,32,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,196,"    return kind == Kind.INTERFACE;
",6,1,0,0,0,1,0,0,0,7,30,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,254,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,330,"    return call;
",2,0,0,0,0,1,0,0,0,2,12,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,365,"    if (prototypeSlot == null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,366,"      String refName = getReferenceName();
",2,0,0,1,2,0,2,2,0,6,36,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,367,"      if (refName == null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,375,"        setPrototype(
",0,0,0,0,1,0,2,0,0,2,13,9,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,384,"    return (ObjectType) prototypeSlot.getType();
",0,0,0,2,4,1,4,2,0,6,44,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,393,"    setPrototypeBasedOn(baseType, null);
",0,0,0,1,2,0,4,0,0,5,36,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,394,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,414,"    if (baseType.hasReferenceName() ||
",0,1,0,1,3,0,4,0,0,5,34,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,417,"      baseType = new PrototypeObjectType(
",2,0,0,0,1,0,0,2,0,5,35,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,420,"    setPrototype(baseType, propertyNode);
",0,0,0,1,2,0,6,0,0,6,37,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,421,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,429,"    if (prototype == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,433,"    if (isConstructor() && prototype == getInstanceType()) {
",2,2,0,3,7,0,4,0,0,8,56,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,436,"    return setPrototypeNoCheck(prototype, propertyNode);
",0,0,0,1,2,1,6,0,0,6,52,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,441,"    ObjectType oldPrototype = prototypeSlot == null
",4,1,0,0,0,0,0,2,0,7,47,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,443,"    boolean replacedPrototype = oldPrototype != null;
",4,1,0,0,0,0,0,0,0,5,49,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,445,"    this.prototypeSlot = new Property(""prototype"", prototype, true,
",4,0,0,0,1,0,0,2,0,9,63,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,447,"    prototype.setOwnerFunction(this);
",0,0,0,1,2,0,4,0,0,4,33,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,449,"    if (oldPrototype != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,455,"    if (isConstructor() || isInterface()) {
",0,1,0,3,7,0,4,0,0,5,39,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,456,"      FunctionType superClass = getSuperClassConstructor();
",2,0,0,1,2,0,2,2,0,6,53,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,457,"      if (superClass != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,458,"        superClass.addSubType(this);
",0,0,0,1,2,0,4,0,0,4,28,9,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,461,"      if (isInterface()) {
",0,0,0,2,5,0,2,0,0,2,20,7,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,470,"    if (replacedPrototype) {
",2,0,0,1,3,0,0,0,0,2,24,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,474,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,567,"    return extendedInterfaces;
",2,0,0,0,0,1,0,0,0,2,26,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,832,"    Preconditions.checkArgument(isConstructor() || isInterface());
",0,1,0,3,6,0,8,0,0,9,62,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,833,"    ObjectType maybeSuperInstanceType = getPrototype().getImplicitPrototype();
",2,0,0,2,4,0,4,2,0,8,74,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,834,"    if (maybeSuperInstanceType == null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,835,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,837,"    return maybeSuperInstanceType.getConstructor();
",0,0,0,1,2,1,4,0,0,4,47,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1062,"    Preconditions.checkState(hasInstanceType());
",0,0,0,2,4,0,6,0,0,6,44,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1063,"    return typeOfThis.toObjectType();
",0,0,0,1,2,1,4,0,0,4,33,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1071,"    typeOfThis = instanceType;
",4,0,0,0,0,0,0,0,0,5,26,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1072,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1078,"    return isConstructor() || isInterface();
",0,1,0,2,4,1,4,0,0,5,40,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1117,"    if (subTypes == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1118,"      subTypes = Lists.newArrayList();
",2,0,0,1,2,0,4,0,0,7,32,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1120,"    subTypes.add(subType);
",0,0,0,1,2,0,6,0,0,6,22,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1121,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,1155,"    return prototypeSlot != null || super.hasCachedValues();
",4,2,0,1,2,1,0,0,0,6,56,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,1,66,"public class FunctionType extends PrototypeObjectType {
",2,0,0,0,1,1,0,2,0,5,55,1,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,105,"    this(registry, className, implicitPrototype, false, null, null);
",6,0,0,1,2,0,0,0,0,7,64,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,106,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,116,"    super(registry, templateKeys, templatizedTypes);
",6,0,0,1,2,0,0,0,0,6,48,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,84,"  private FunctionType ownerFunction = null;
",2,0,0,0,0,1,0,2,0,5,42,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,88,"  private boolean prettyPrint = false;
",2,0,0,0,0,1,0,0,0,4,36,2,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,117,"    this.properties = new PropertyMap();
",2,0,0,1,2,0,0,2,0,5,36,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,118,"    this.properties.setParentSource(this);
",2,0,0,1,2,0,2,0,0,4,38,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,120,"    this.className = className;
",4,0,0,0,0,0,0,0,0,5,27,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,121,"    this.nativeType = nativeType;
",4,0,0,0,0,0,0,0,0,5,29,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,122,"    if (nativeType || implicitPrototype != null) {
",4,2,0,1,3,0,0,0,0,6,46,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,123,"      setImplicitPrototype(implicitPrototype);
",0,0,0,1,2,0,4,0,0,4,40,7,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,125,"      setImplicitPrototype(
",0,0,0,0,1,0,2,0,0,2,21,7,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,128,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,273,"    this.prettyPrint = prettyPrint;
",4,0,0,0,0,0,0,0,0,5,31,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,274,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,287,"    return implicitPrototypeFallback;
",2,0,0,0,0,1,0,0,0,2,33,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,297,"    checkState(!hasCachedValues());
",0,0,0,2,4,0,4,0,0,5,31,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,298,"    this.implicitPrototypeFallback = implicitPrototype;
",4,0,0,0,0,0,0,0,0,5,51,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,299,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,303,"    if (className != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,304,"      return className;
",2,0,0,0,0,1,0,0,0,2,17,6,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,314,"    return className != null || ownerFunction != null;
",4,3,0,0,0,1,0,0,0,7,50,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,319,"    if (JSType.isSubtypeHelper(this, that)) {
",0,0,0,2,5,0,6,0,0,6,41,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,324,"    if (that.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,331,"    if (that.isRecordType()) {
",0,0,0,2,5,0,4,0,0,4,26,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,338,"    ObjectType thatObj = that.toObjectType();
",2,0,0,1,2,0,4,2,0,8,41,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,339,"    FunctionType thatCtor = thatObj == null ? null : thatObj.getConstructor();
",4,1,0,1,2,0,4,2,0,11,74,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,341,"    if (getConstructor() != null && getConstructor().isInterface()) {
",0,2,0,4,9,0,6,0,0,10,65,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,347,"    } else if (thatCtor != null && thatCtor.isInterface()) {
",2,2,0,2,6,0,4,0,0,8,56,5,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,357,"    if (isUnknownType() || implicitPrototypeChainIsUnknown()) {
",0,1,0,3,7,0,4,0,0,5,59,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,363,"    return thatObj != null && isImplicitPrototype(thatObj);
",2,2,0,1,2,1,4,0,0,9,55,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,367,"    ObjectType p = getImplicitPrototype();
",2,0,0,1,2,0,2,2,0,6,38,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,1,368,"    while (p != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.26778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,575,"            unknown = true;
",2,0,0,0,0,0,0,0,0,4,15,12,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,576,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1570,"    ObjectType implicitProto = interfaceType.getImplicitPrototype();
",2,0,0,1,2,0,4,2,0,8,64,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1574,"      currentPropertyNames = implicitProto.getOwnPropertyNames();
",2,0,0,1,2,0,4,0,0,7,59,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1658,"        HashMap<String, ObjectType> properties
",2,0,0,0,0,0,0,6,0,8,38,9,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1660,"        HashMap<String, ObjectType> currentProperties
",2,0,0,0,0,0,0,6,0,8,45,9,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1662,"        for (ObjectType interfaceType : functionType.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,71,9,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1663,"          currentProperties.clear();
",0,0,0,1,2,0,4,0,0,4,26,12,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1664,"          checkInterfaceConflictProperties(t, n, functionPrivateName,
",0,0,0,0,1,0,8,0,0,8,59,12,0.06250,0,-1
defect4j,closure,com/google/javascript/rhino/JSTypeExpression,2,107,"    return other instanceof JSTypeExpression &&
",2,1,0,0,0,1,0,2,0,5,43,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1647,"        if (extInterface.getConstructor() != null
",0,1,0,1,3,0,4,0,0,5,41,10,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1653,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02500,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,274,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,1306,"    lazyInitInfo();
",0,0,0,1,2,0,2,0,0,2,15,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,1307,"    if (info.extendedInterfaces == null) {
",4,1,0,1,3,0,0,0,0,5,38,4,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,1308,"      info.extendedInterfaces = Lists.newArrayListWithCapacity(2);
",4,0,0,1,2,0,4,0,0,9,60,6,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,1310,"    if (info.extendedInterfaces.contains(type)) {
",4,0,0,2,5,0,4,0,0,8,45,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,1313,"    info.extendedInterfaces.add(type);
",4,0,0,1,2,0,4,0,0,8,34,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,1314,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,1327,"    return Collections.unmodifiableList(info.extendedInterfaces);
",4,0,0,1,2,1,4,0,0,8,61,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,574,"          if (interfaceType.isUnknownType()) {
",0,0,0,2,5,0,4,0,0,4,36,11,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,463,"          if (interfaceType.getConstructor() != null) {
",0,1,0,2,5,0,4,0,0,5,45,10,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,466,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,345,"        t.warning(""Bad type annotation. Unknown type "" + reference,
",2,1,0,0,1,0,4,0,0,8,59,9,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,377,"    if (this.isResolved()) {
",0,0,0,2,5,0,2,0,0,2,24,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,380,"      this.validator = validator;
",4,0,0,0,0,0,0,0,0,5,27,6,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,381,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,2,987,"    if (currentInfo.addExtendedInterface(interfaceType)) {
",0,0,0,2,5,0,6,0,0,6,54,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,2,988,"      populated = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,2,989,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,360,"          JSType maybeInterfaceType = t.evaluate(scope, typeRegistry);
",2,0,0,1,2,0,8,2,0,12,60,10,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,361,"          if (maybeInterfaceType != null &&
",2,2,0,0,1,0,0,0,0,4,33,10,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,363,"            extendedInterfaces.add((ObjectType) maybeInterfaceType);
",2,0,0,2,4,0,4,2,0,8,56,13,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,365,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,997,"        if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {
",4,0,0,2,5,0,4,0,0,9,59,8,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,2,156,"      super.warningAtLine(message, sourceName, line, lineOffset);
",10,0,0,1,2,0,0,0,0,10,59,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,2,157,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01961,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,866,"    return forwardDeclaredTypes.contains(name);
",0,0,0,1,2,1,6,0,0,6,43,5,0.01887,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,300,"    return referencedObjType == null ? null :
",2,1,0,0,0,1,0,0,0,3,41,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,161,"        return lineno1 - lineno2;
",4,1,0,0,0,1,0,0,0,5,25,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,2,131,"        return JSError.make(
",0,0,0,0,1,1,4,0,0,4,20,9,0.01667,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,246,"    } else if (value instanceof EnumType) {
",2,0,0,1,4,0,0,2,0,4,39,7,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,256,"      handleUnresolvedType(t, value == null || value.isUnknownType());
",2,2,0,2,4,0,8,0,0,13,64,8,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,340,"    if (registry.isLastGeneration()) {
",0,0,0,2,5,0,4,0,0,4,34,5,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,341,"      boolean isForwardDeclared =
",2,0,0,0,0,0,0,0,0,2,27,7,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,344,"      if (!isForwardDeclared && registry.isLastGeneration()) {
",2,1,0,2,5,0,4,0,0,8,56,6,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,357,"      setResolvedTypeInternal(getReferencedType());
",0,0,0,2,4,0,4,0,0,4,45,7,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,358,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,361,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,201,"    resolveViaProperties(t, enclosing);
",0,0,0,1,2,0,6,0,0,6,35,5,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,202,"    if (detectInheritanceCycle()) {
",0,0,0,2,5,0,2,0,0,2,31,5,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,206,"    super.resolveInternal(t, enclosing);
",6,0,0,1,2,0,0,0,0,6,36,5,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,207,"    if (isResolved()) {
",0,0,0,2,5,0,2,0,0,2,19,5,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,208,"      finishPropertyContinuations();
",0,0,0,1,2,0,2,0,0,2,30,7,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,210,"    return registry.isLastGeneration() ?
",0,0,0,1,2,1,4,0,0,4,36,6,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,225,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,235,"    JSType value = lookupViaProperties(t, enclosing);
",2,0,0,1,2,0,6,2,0,10,49,4,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,237,"    if (value != null && value.isFunctionType() &&
",2,3,0,1,3,0,4,0,0,9,46,4,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,258,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,268,"    String[] componentNames = reference.split(""\\."", -1);
",2,0,0,2,4,0,4,2,0,10,53,4,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,269,"    if (componentNames[0].length() == 0) {
",0,1,1,3,7,0,2,0,0,5,38,4,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,272,"    StaticSlot<JSType> slot = enclosing.getSlot(componentNames[0]);
",2,0,1,2,4,0,4,4,0,12,63,4,0.01515,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,273,"    if (slot == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.01515,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,2,114,"    compiler.report(
",0,0,0,0,1,0,4,0,0,4,16,5,0.01449,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,2,116,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01449,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,2,1446,"    return resolved;
",2,0,0,0,0,1,0,0,0,2,16,4,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,2,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,2,129,"    for (Entry<Pattern, DiagnosticType> entry : typeMap.entrySet()) {
",2,0,0,2,5,0,4,6,0,12,65,4,0.01064,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,2,130,"      if (entry.getKey().matcher(message).matches()) {
",0,0,0,4,9,0,10,0,0,10,48,7,0.01064,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,2,54,"public class Scope
",2,0,0,0,0,1,0,0,0,3,18,1,0.00877,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,177,"    return reference.hashCode();
",0,0,0,1,2,1,4,0,0,4,28,5,0.00741,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,572,"    return extendedInterfaces.size();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1646,"      for (ObjectType extInterface : functionType.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,70,7,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,1656,"      if (functionType.getExtendedInterfacesCount() > 1) {
",0,1,0,2,5,0,4,0,0,5,52,7,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,618,"        typeRegistry.declareType(fnName, fnType.getInstanceType());
",0,0,0,2,4,0,10,0,0,10,59,10,0.00568,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,1324,"    if (info == null || info.extendedInterfaces == null) {
",6,3,0,1,3,0,0,0,0,9,54,4,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,1436,"    return FunctionType.forInterface(this, name, source);
",0,0,0,1,2,1,8,0,0,8,53,5,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,163,"    super(registry, name,
",4,0,0,0,1,0,0,0,0,4,21,4,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,165,"    setPrettyPrint(true);
",0,0,0,1,2,0,2,0,0,3,21,5,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,167,"    Preconditions.checkArgument(source == null ||
",2,2,0,0,1,0,4,0,0,8,45,5,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,169,"    Preconditions.checkArgument(name != null);
",2,1,0,1,2,0,4,0,0,7,42,5,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,170,"    this.source = source;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,171,"    this.call = new ArrowType(registry, new Node(Token.PARAM_LIST), null);
",8,0,0,2,4,0,0,4,0,15,70,4,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,172,"    this.kind = Kind.INTERFACE;
",6,0,0,0,0,0,0,0,0,7,27,4,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,173,"    this.typeOfThis = new InstanceObjectType(registry, this);
",4,0,0,1,2,0,0,2,0,7,57,4,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,174,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,179,"    return new FunctionType(registry, name, source);
",6,0,0,1,2,1,0,2,0,8,48,5,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,462,"        for (ObjectType interfaceType : getExtendedInterfaces()) {
",2,0,0,2,5,0,2,2,0,6,58,8,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,577,"    if (isInterface()) {
",0,0,0,2,5,0,2,0,0,2,20,5,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,578,"      this.extendedInterfaces = ImmutableList.copyOf(extendedInterfaces);
",2,0,0,1,2,0,6,0,0,9,67,6,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,582,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,2,57,"    this(registry, constructor, false, null);
",4,0,0,1,2,0,0,0,0,5,41,4,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,2,58,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00562,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,358,"        extendedInterfaces = Lists.newArrayList();
",2,0,0,1,2,0,4,0,0,7,42,8,0.00562,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,359,"        for (JSTypeExpression t : info.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,57,8,0.00562,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,615,"      fnType = typeRegistry.createInterfaceType(
",2,0,0,0,1,0,4,0,0,7,42,7,0.00562,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,617,"      if (getScopeDeclaredIn().isGlobal() && !fnName.isEmpty()) {
",0,1,0,4,9,0,8,0,0,10,59,7,0.00562,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,620,"      maybeSetBaseType(fnType);
",0,0,0,1,2,0,4,0,0,4,25,8,0.00562,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,638,"      fnType.setExtendedInterfaces(extendedInterfaces);
",0,0,0,1,2,0,6,0,0,6,49,7,0.00562,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,190,"    p = this;
",2,0,0,0,0,0,0,0,0,3,9,4,0.00543,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,192,"      p.visited = false;
",4,0,0,0,0,0,0,0,0,6,18,6,0.00543,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,193,"      p = p.getImplicitPrototype();
",2,0,0,1,2,0,4,0,0,7,29,6,0.00543,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,194,"    } while (p != null);
",2,1,0,1,3,0,0,0,0,3,20,4,0.00543,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,195,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00543,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,240,"    return referencedObjType == null ? Collections.<ObjectType>emptyList() :
",2,1,0,1,2,1,4,2,0,9,72,5,0.00543,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,796,"    return lastGeneration;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,920,"      NamedType namedType =
",2,0,0,0,0,0,0,2,0,4,21,6,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,922,"      unresolvedNamedTypes.put(scope, namedType);
",0,0,0,1,2,0,8,0,0,8,43,7,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,923,"      type = namedType;
",4,0,0,0,0,0,0,0,0,5,17,6,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,943,"      type.resolve(reporter, scope);
",0,0,0,1,2,0,8,0,0,8,30,7,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,944,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,178,"    this.visited = true;
",2,0,0,0,0,0,0,0,0,4,20,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,179,"    ObjectType p = getImplicitPrototype();
",2,0,0,1,2,0,2,2,0,6,38,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,180,"    while (p != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,209,"    return detectImplicitPrototypeCycle()
",0,0,0,1,2,1,2,0,0,2,37,7,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,77,"    return referencedObjType;
",2,0,0,0,0,1,0,0,0,2,25,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,256,"    return referencedObjType == null ? null :
",2,1,0,0,0,1,0,0,0,3,41,5,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,105,"    super(registry, registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE));
",6,0,0,2,4,0,4,0,0,10,73,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,98,"  private List<PropertyContinuation> propertyContinuations = null;
",2,0,0,0,0,1,0,4,0,7,64,2,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,107,"    Preconditions.checkNotNull(reference);
",0,0,0,1,2,0,6,0,0,6,38,5,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,108,"    this.reference = reference;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,109,"    this.sourceName = sourceName;
",4,0,0,0,0,0,0,0,0,5,29,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,110,"    this.lineno = lineno;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,111,"    this.charno = charno;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,112,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,134,"    ObjectType referencedObjType = getReferencedObjTypeInternal();
",2,0,0,1,2,0,2,2,0,6,62,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,135,"    if (referencedObjType != null && !referencedObjType.isUnknownType()) {
",2,2,0,2,5,0,4,0,0,9,70,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,142,"    propertyContinuations = null;
",2,0,0,0,0,0,0,0,0,3,29,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,143,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,147,"    return getReferencedTypeInternal();
",0,0,0,1,2,1,2,0,0,2,35,5,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,189,"    boolean resolved = resolveViaRegistry(t, enclosing);
",2,0,0,1,2,0,6,0,0,8,52,5,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,190,"    if (detectInheritanceCycle()) {
",0,0,0,2,5,0,2,0,0,2,31,5,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,194,"    if (resolved) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,220,"    JSType type = registry.getType(reference);
",2,0,0,1,2,0,6,2,0,10,42,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,2,221,"    if (type != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00538,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,395,"    setFlag(value, MASK_INTERFACE);
",0,0,0,1,2,0,6,0,0,6,31,5,0.00508,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,2,396,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00508,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,2,861,"    if (hasAnySingletonTypeTags() ||
",0,1,0,1,3,0,2,0,0,3,32,4,0.00508,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,2,866,"    currentInfo.setInterface(true);
",0,0,0,1,2,0,4,0,0,5,31,5,0.00508,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,2,867,"    populated = true;
",2,0,0,0,0,0,0,0,0,4,17,4,0.00508,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,2,868,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00508,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,307,"                  if (!jsdocBuilder.recordInterface()) {
",0,0,0,2,5,0,4,0,0,5,38,13,0.00508,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,316,"                  token = eatTokensUntilEOL();
",2,0,0,1,2,0,2,0,0,5,28,13,0.00508,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,317,"                  continue retry;
",2,0,0,0,0,0,0,0,0,2,15,13,0.00508,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,2,178,"            if (alternate.isEquivalentTo(current)) {
",0,0,0,2,5,0,6,0,0,6,40,13,0.00483,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,2,732,"      return checkEquivalenceHelper(
",0,0,0,0,1,1,2,0,0,2,30,7,0.00481,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,638,"    return ImmutableSet.of();
",0,0,0,1,2,1,4,0,0,4,25,5,0.00469,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,359,"    return referencedType.toMaybeParameterizedType();
",0,0,0,1,2,1,4,0,0,4,49,5,0.00459,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,364,"    return referencedType.toMaybeTemplateType();
",0,0,0,1,2,1,4,0,0,4,44,5,0.00417,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,183,"    return referencedType.isAllType();
",0,0,0,1,2,1,4,0,0,4,34,5,0.00400,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,209,"    return referencedType.toMaybeUnionType();
",0,0,0,1,2,1,4,0,0,4,41,5,0.00397,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,123,"    return referencedType.isNoType();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00386,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,214,"    return referencedType.toMaybeFunctionType();
",0,0,0,1,2,1,4,0,0,4,44,5,0.00386,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,646,"    return ImmutableSet.of();
",0,0,0,1,2,1,4,0,0,4,25,5,0.00380,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,138,"    return referencedType.isUnknownType();
",0,0,0,1,2,1,4,0,0,4,38,5,0.00380,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,146,"  private class ExtendedTypeValidator implements Predicate<JSType> {
",2,0,0,0,1,1,0,4,0,7,66,2,0.00344,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,2,961,"    return currentInfo.isInterface();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00339,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,451,"                      extendedTypes.add(new ExtendedTypeInfo(
",0,0,0,0,2,0,4,2,0,6,39,18,0.00339,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,996,"      if (jsdocBuilder.isInterfaceRecorded()) {
",0,0,0,2,5,0,4,0,0,4,41,7,0.00339,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1007,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00339,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1303,"    public ExtendedTypeInfo(JSTypeExpression type, int lineno, int charno) {
",8,0,0,1,3,1,0,2,0,11,72,3,0.00339,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1304,"      this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,5,0.00339,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1305,"      this.lineno = lineno;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00339,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1306,"      this.charno = charno;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00339,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1307,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00339,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,73,"    return referencedType;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00328,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,327,"    setReferencedType(referencedType.resolve(t, scope));
",0,0,0,2,4,0,10,0,0,10,52,5,0.00322,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,328,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00322,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,62,"    super(registry);
",2,0,0,1,2,0,0,0,0,2,16,4,0.00318,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,63,"    setReferencedType(referencedType);
",0,0,0,1,2,0,4,0,0,4,34,5,0.00318,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00318,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,81,"    this.referencedType = referencedType;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00318,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,82,"    if (referencedType instanceof ObjectType) {
",2,0,0,1,3,0,0,2,0,4,43,5,0.00318,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,83,"      this.referencedObjType = (ObjectType) referencedType;
",4,0,0,1,2,0,0,2,0,7,53,6,0.00318,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,2,87,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00318,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,435,"                    token = next();
",2,0,0,1,2,0,2,0,0,5,15,15,0.00292,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,436,"                    matchingRc = true;
",2,0,0,0,0,0,0,0,0,4,18,15,0.00292,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,463,"                      if (token != JsDocToken.RC) {
",6,1,0,1,3,0,0,0,0,7,29,17,0.00292,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,428,"                  skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,14,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,429,"                  token = next();
",2,0,0,1,2,0,2,0,0,5,15,13,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,430,"                  lineno = stream.getLineno();
",2,0,0,1,2,0,4,0,0,7,28,13,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,431,"                  charno = stream.getCharno();
",2,0,0,1,2,0,4,0,0,7,28,13,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,432,"                  boolean matchingRc = false;
",2,0,0,0,0,0,0,0,0,3,27,14,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,434,"                  if (token == JsDocToken.LC) {
",6,1,0,1,3,0,0,0,0,7,29,13,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,439,"                  if (token == JsDocToken.STRING) {
",6,1,0,1,3,0,0,0,0,7,33,13,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,440,"                    Node typeNode = parseAndRecordTypeNameNode(
",2,0,0,0,1,0,2,2,0,6,43,15,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,443,"                    lineno = stream.getLineno();
",2,0,0,1,2,0,4,0,0,7,28,15,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,444,"                    charno = stream.getCharno();
",2,0,0,1,2,0,4,0,0,7,28,15,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,446,"                    typeNode = wrapNode(Token.BANG, typeNode);
",6,0,0,1,2,0,4,0,0,11,42,15,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,447,"                    type = createJSTypeExpression(typeNode);
",2,0,0,1,2,0,4,0,0,7,40,15,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,449,"                    if (annotation == Annotation.EXTENDS) {
",6,1,0,1,3,0,0,0,0,7,39,15,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,461,"                    token = next();
",2,0,0,1,2,0,2,0,0,5,15,15,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,462,"                    if (matchingRc) {
",2,0,0,1,3,0,0,0,0,2,17,15,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,472,"                  } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,475,"                  token = eatTokensUntilEOL(token);
",2,0,0,1,2,0,4,0,0,7,33,13,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,476,"                  continue retry;
",2,0,0,0,0,0,0,0,0,2,15,13,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1139,"    return parseAndRecordTypeNode(token, lineno, startCharno, matchingLC, true);
",0,0,0,1,2,1,10,0,0,11,76,5,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1191,"      typeNode = parseTypeNameAnnotation(token);
",2,0,0,1,2,0,4,0,0,7,42,6,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1649,"    if (token == JsDocToken.LC) {
",6,1,0,1,3,0,0,0,0,7,29,4,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,2,1663,"      return parseTypeName(token);
",0,0,0,1,2,1,4,0,0,4,28,7,0.00261,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,2,129,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00252,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,87,"    return new JSError(sourceName, null, lineno, charno, type, null, arguments);
",10,0,0,1,2,1,0,2,0,13,76,4,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,1593,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00129,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,1589,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00127,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,1590,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00127,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,1592,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00127,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,1595,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00127,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,1596,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00127,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,49,"      } else if (level == CheckLevel.WARNING) {
",6,1,0,1,4,0,0,0,0,7,41,7,0.00075,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,50,"        warningCount++;
",2,0,0,0,0,0,0,0,0,3,15,9,0.00075,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,338,"    this(compiler, reverseInterpreter, typeRegistry, null, null,
",6,0,0,0,1,0,0,0,0,6,60,4,0.00065,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,2,340,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00065,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,148,"        int sourceCompare = source1.compareTo(source2);
",2,0,0,1,2,0,6,0,0,8,47,8,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,149,"        if (sourceCompare != 0) {
",2,1,0,1,3,0,0,0,0,3,25,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,152,"      } else if (source1 == null && source2 != null) {
",4,3,0,1,4,0,0,0,0,7,48,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,214,"    return charno;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,186,"    ErrorWithLevel(JSError error, CheckLevel level) {
",6,0,0,1,3,0,0,4,0,10,49,3,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,187,"      this.error = error;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,188,"      this.level = level;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,189,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,46,"    if (messages.add(new ErrorWithLevel(error, level))) {
",4,0,0,3,7,0,4,2,0,10,53,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,47,"      if (level == CheckLevel.ERROR) {
",6,1,0,1,3,0,0,0,0,7,32,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,53,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,131,"      if (p2 == null) {
",2,1,0,1,3,0,0,0,0,3,17,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,140,"      if (p1.level != p2.level) {
",8,1,0,1,3,0,0,0,0,9,27,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,145,"      String source1 = p1.error.sourceName;
",8,0,0,0,0,0,0,2,0,10,37,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,146,"      String source2 = p2.error.sourceName;
",8,0,0,0,0,0,0,2,0,10,37,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,147,"      if (source1 != null && source2 != null) {
",4,3,0,1,3,0,0,0,0,7,41,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,158,"      int lineno1 = p1.error.lineNumber;
",8,0,0,0,0,0,0,0,0,8,34,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,159,"      int lineno2 = p2.error.lineNumber;
",8,0,0,0,0,0,0,0,0,8,34,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,160,"      if (lineno1 != lineno2) {
",4,1,0,1,3,0,0,0,0,5,25,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,162,"      } else if (lineno1 < 0 && 0 <= lineno2) {
",4,3,0,1,4,0,0,0,0,7,41,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,164,"      } else if (0 <= lineno1 && lineno2 < 0) {
",4,3,0,1,4,0,0,0,0,7,41,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,168,"      int charno1 = p1.error.getCharno();
",6,0,0,1,2,0,2,0,0,8,35,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,169,"      int charno2 = p2.error.getCharno();
",6,0,0,1,2,0,2,0,0,8,35,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,170,"      if (charno1 != charno2) {
",4,1,0,1,3,0,0,0,0,5,25,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,172,"      } else if (charno1 < 0 && 0 <= charno2) {
",4,3,0,1,4,0,0,0,0,7,41,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,174,"      } else if (0 <= charno1 && charno2 < 0) {
",4,3,0,1,4,0,0,0,0,7,41,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,2,178,"      return p1.error.description.compareTo(p2.error.description);
",12,0,0,1,2,1,2,0,0,14,60,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,2076,"      if (getOptions().errorHandler != null) {
",2,1,0,2,5,0,2,0,0,6,40,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,2079,"      errorManager.report(level, error);
",0,0,0,1,2,0,8,0,0,8,34,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,2067,"    CheckLevel level = error.getDefaultLevel();
",2,0,0,1,2,0,4,2,0,8,43,4,0.00059,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,2068,"    if (warningsGuard != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00059,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,2069,"      CheckLevel newLevel = warningsGuard.level(error);
",2,0,0,1,2,0,6,2,0,10,49,6,0.00059,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,2070,"      if (newLevel != null) {
",2,1,0,1,3,0,0,0,0,3,23,6,0.00059,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,2075,"    if (level.isOn()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00059,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,2,2081,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00059,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,242,"    return defaultLevel;
",2,0,0,0,0,1,0,0,0,2,20,4,0.00059,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,597,"        returnType = typeRegistry.getNativeType(VOID_TYPE);
",2,0,0,1,2,0,6,0,0,9,51,8,0.00056,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,2,598,"        returnTypeInferred = true;
",2,0,0,0,0,0,0,0,0,4,26,8,0.00056,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,2,121,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,179,"    return type;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00053,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,2,103,"    return matches(error.getType());
",0,0,0,2,4,1,6,0,0,6,32,5,0.00053,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,2,40,"    return group.matches(error) ? level : null;
",2,0,0,1,2,1,6,0,0,8,43,5,0.00053,0,-1
defect4j,closure,com/google/javascript/rhino/Node,2,1532,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,2,92,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,2,120,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,2,53,"    Node node = error.node;
",6,0,0,0,0,0,0,2,0,8,23,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,2,54,"    if (node != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,2,112,"    for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,2,113,"      CheckLevel newLevel = guard.level(error);
",2,0,0,1,2,0,6,2,0,10,41,6,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,2,114,"      if (newLevel != null) {
",2,1,0,1,3,0,0,0,0,3,23,6,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,154,"      DiagnosticType type, CheckLevel level, String... arguments) {
",6,0,0,0,2,0,0,6,0,12,61,3,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,155,"    this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,156,"    this.node = node;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,157,"    this.description = type.format.format(arguments);
",6,0,0,1,2,0,4,0,0,11,49,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,158,"    this.lineNumber = lineno;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,159,"    this.charno = charno;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,160,"    this.sourceName = sourceName;
",4,0,0,0,0,0,0,0,0,5,29,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,161,"    this.defaultLevel = level == null ? type.level : level;
",10,1,0,0,0,0,0,0,0,12,55,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,162,"    this.level = level == null ? type.level : level;
",10,1,0,0,0,0,0,0,0,12,48,4,0.00052,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,2,163,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00052,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,2,505,"    return getPropertyMap().getPropertiesCount();
",0,0,0,2,4,1,4,0,0,4,45,5,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,152,"    PropertyMap primaryParent = getPrimaryParent();
",2,0,0,1,2,0,2,2,0,6,47,4,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,153,"    if (primaryParent == null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,156,"    Set<String> props = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,38,4,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,157,"    collectPropertyNames(props);
",0,0,0,1,2,0,4,0,0,4,28,5,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,158,"    return props.size();
",0,0,0,1,2,1,4,0,0,4,20,5,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,174,"    for (String prop : properties.keySet()) {
",2,0,0,2,5,0,4,2,0,8,41,4,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,175,"      props.add(prop);
",0,0,0,1,2,0,6,0,0,6,16,7,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,176,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,177,"    PropertyMap primaryParent = getPrimaryParent();
",2,0,0,1,2,0,2,2,0,6,47,4,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,178,"    if (primaryParent != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,179,"      primaryParent.collectPropertyNames(props);
",0,0,0,1,2,0,6,0,0,6,42,7,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,181,"    for (PropertyMap p : getSecondaryParents()) {
",2,0,0,2,5,0,2,2,0,6,45,4,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,2,186,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00050,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,2,134,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00049,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,1528,"        return createFromTypeNodesInternal(
",0,0,0,0,1,1,2,0,0,2,35,7,0.00046,0,-1
defect4j,closure,com/google/javascript/rhino/Node,2,1507,"      if (type == Token.STRING_KEY) {
",6,1,0,1,3,0,0,0,0,7,31,7,0.00046,0,-1
defect4j,closure,com/google/javascript/rhino/Node,2,1515,"      int slashV1 = this.getIntProp(SLASH_V);
",2,0,0,1,2,0,4,0,0,6,39,8,0.00046,0,-1
defect4j,closure,com/google/javascript/rhino/Node,2,1516,"      int slashV2 = node.getIntProp(SLASH_V);
",2,0,0,1,2,0,6,0,0,8,39,8,0.00046,0,-1
defect4j,closure,com/google/javascript/rhino/Node,2,1517,"      if (slashV1 != slashV2) {
",4,1,0,1,3,0,0,0,0,5,25,7,0.00046,0,-1
defect4j,closure,com/google/javascript/rhino/Node,2,1520,"    } else if (type == Token.CALL) {
",6,1,0,1,4,0,0,0,0,7,32,6,0.00046,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,2,525,"            nonExternFunctions.add(n);
",0,0,0,1,2,0,6,0,0,6,26,9,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,2,238,"      JSType type = functionNode.getJSType();
",2,0,0,1,2,0,4,2,0,8,39,6,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,2,239,"      if (type != null && type.isFunctionType()) {
",2,2,0,2,5,0,4,0,0,8,44,6,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,2,240,"        FunctionType fnType = type.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,49,8,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,2,241,"        JSType fnThisType = fnType.getTypeOfThis();
",2,0,0,1,2,0,4,2,0,8,43,8,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,2,242,"        if (!fnThisType.isUnknownType()) {
",0,0,0,2,5,0,4,0,0,5,34,8,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,2,247,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00045,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,2,208,"    UnionTypeBuilder restricted = new UnionTypeBuilder(registry);
",4,0,0,1,2,0,0,4,0,8,61,4,0.00045,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,2,209,"    for (JSType t : alternates) {
",4,0,0,1,3,0,0,2,0,6,29,4,0.00045,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,2,210,"      restricted.addAlternate(t.restrictByNotNullOrUndefined());
",0,0,0,2,4,0,8,0,0,8,58,7,0.00045,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,2,211,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00045,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,2,212,"    return restricted.build();
",0,0,0,1,2,1,4,0,0,4,26,5,0.00045,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NullType,2,84,"    return registry.getNativeType(JSTypeNative.NO_TYPE);
",4,0,0,1,2,1,4,0,0,8,52,5,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,229,"    return tolerateUndefinedValues;
",2,0,0,0,0,1,0,0,0,2,31,4,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,989,"      return shouldTolerateUndefinedValues()
",0,0,0,1,2,1,2,0,0,2,38,8,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,2,451,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,1581,"          Node typeList = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,7,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,1582,"          if (typeList != null &&
",2,2,0,0,1,0,0,0,0,4,23,7,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,1598,"          return createDefaultObjectUnion(namedType);
",0,0,0,1,2,1,4,0,0,4,43,8,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,2,443,"    return toMaybeTemplateType() != null;
",0,1,0,1,2,1,2,0,0,4,37,4,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,2,984,"    if (type.isTemplateType()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,2,1086,"    return typeOfThis.isEmptyType() ?
",0,0,0,1,2,1,4,0,0,4,33,6,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,2,124,"      return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00044,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,924,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,925,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,926,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,934,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,935,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,936,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,937,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,938,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,948,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,952,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,960,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,979,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,988,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,3,263,"          case BLOCK:           return ""BLOCK"";
",2,0,0,0,0,1,0,0,0,3,37,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,3,266,"          case SCRIPT:          return ""SCRIPT"";
",2,0,0,0,0,1,0,0,0,3,38,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,163,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,329,"        handleThrow(n);
",0,0,0,1,2,0,4,0,0,4,15,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,330,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,540,"    connectToPossibleExceptionHandler(node, node);
",0,0,0,1,2,0,6,0,0,6,46,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,541,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1065,"      return newNode(Token.THROW,
",4,0,0,0,1,1,2,0,0,6,27,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,3,264,"        return processThrowStatement((ThrowStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,131,"        validateThrow(n);
",0,0,0,1,2,0,4,0,0,4,17,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,132,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,488,"    validateNodeType(Token.THROW, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,489,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,490,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,491,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,3,575,"        escaped.add(var);
",0,0,0,1,2,0,6,0,0,6,17,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,837,"        Preconditions.checkState(handler.isTry());
",0,0,0,2,4,0,8,0,0,8,42,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,838,"        Node catchBlock = NodeUtil.getCatchBlock(handler);
",2,0,0,1,2,0,6,2,0,10,50,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,840,"        if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.
",0,0,0,2,5,0,6,0,0,7,71,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,847,"          if (lastJump == cfgNode) {
",4,1,0,1,3,0,0,0,0,5,26,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,848,"            createEdge(cfgNode, Branch.ON_EX, catchBlock);
",4,0,0,1,2,0,6,0,0,10,46,13,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,849,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowGraph,3,201,"        return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,3,145,"          Renamer renamer = nameStack.peek().forChildScope();
",2,0,0,2,4,0,6,2,0,10,51,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,3,147,"          String name = n.getFirstChild().getString();
",2,0,0,2,4,0,6,2,0,10,44,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,3,148,"          renamer.addDeclaredName(name);
",0,0,0,1,2,0,6,0,0,6,30,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,3,150,"          nameStack.push(renamer);
",0,0,0,1,2,0,6,0,0,6,24,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,3,189,"        nameStack.pop();
",0,0,0,1,2,0,4,0,0,4,16,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,397,"          pathCheck = new CheckPathsBetweenNodes<Node, ControlFlowGraph.Branch>(
",6,0,0,0,1,0,0,4,0,10,70,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,405,"        if (pathCheck.somePathsSatisfyPredicate()) {
",0,0,0,2,5,0,4,0,0,4,44,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,757,"        } else if (NodeUtil.getCatchBlock(parent) == node){
",2,1,0,2,6,0,6,0,0,9,51,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,758,"          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.
",0,0,0,2,5,0,6,0,0,6,61,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,761,"            return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,149,"        Preconditions.checkState(first.getNext().isBlock() &&
",0,1,0,2,5,0,10,0,0,11,53,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,151,"        Preconditions.checkState(childCount >= 2 && childCount <= 3);
",4,3,0,1,2,0,4,0,0,11,61,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,153,"        add(""try"");
",0,0,0,1,2,0,2,0,0,3,11,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,154,"        add(first, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,35,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,158,"        Node catchblock = first.getNext().getFirstChild();
",2,0,0,2,4,0,6,2,0,10,50,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,159,"        if (catchblock != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,160,"          add(catchblock);
",0,0,0,1,2,0,4,0,0,4,16,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,163,"        if (childCount == 3) {
",2,1,0,1,3,0,0,0,0,3,22,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,171,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,172,"        add(""catch("");
",0,0,0,1,3,0,2,0,0,3,14,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,173,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,174,"        add("")"");
",0,0,0,1,3,0,2,0,0,3,9,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,175,"        add(last, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,34,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,176,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,134,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,135,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,510,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,511,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,512,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,513,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,515,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,518,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,519,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,520,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,521,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,522,"      validateCatch(catches.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,39,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,523,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,527,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,532,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,535,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,538,"    validateNodeType(Token.CATCH, n);
",4,0,0,1,2,0,4,0,0,8,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,539,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,540,"    validateName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,32,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,541,"    validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,542,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,112,"          if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
",0,1,0,3,7,0,10,0,0,12,60,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,230,"        exceptionHandler.push(n);
",0,0,0,1,2,0,6,0,0,6,25,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,231,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,285,"          if (n == parent.getFirstChild().getNext()) {
",2,1,0,3,7,0,6,0,0,9,44,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,286,"            Preconditions.checkState(exceptionHandler.peek() == parent);
",2,1,0,2,4,0,8,0,0,11,60,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,287,"            exceptionHandler.pop();
",0,0,0,1,2,0,4,0,0,4,23,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,332,"        handleTry(n);
",0,0,0,1,2,0,4,0,0,4,13,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,333,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,335,"        handleCatch(n);
",0,0,0,1,2,0,4,0,0,4,15,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,336,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,515,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,544,"    createEdge(node, Branch.UNCOND, node.getFirstChild());
",4,0,0,2,4,0,8,0,0,12,54,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,545,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,548,"    createEdge(node, Branch.UNCOND, node.getLastChild());
",4,0,0,2,4,0,8,0,0,12,53,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,549,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,750,"        if (parent.getFirstChild() == node) {
",2,1,0,2,5,0,4,0,0,7,37,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,2762,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,2763,"    return n.getChildCount() == 3;
",0,1,0,1,2,1,4,0,0,5,30,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,2771,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,2772,"    return n.getFirstChild().getNext();
",0,0,0,2,4,1,6,0,0,6,35,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,2780,"    Preconditions.checkArgument(n.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,2781,"    return n.hasChildren() && n.getFirstChild().isCatch();
",0,1,0,3,6,1,10,0,0,11,54,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,598,"      AstNode catchVar = clauseNode.getVarName();
",2,0,0,1,2,0,4,2,0,8,43,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,599,"      Node node = newNode(Token.CATCH, transform(catchVar));
",6,0,0,2,4,0,6,2,0,14,54,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,600,"      if (clauseNode.getCatchCondition() != null) {
",0,1,0,2,5,0,4,0,0,5,45,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,606,"      node.addChildToBack(transformBlock(clauseNode.getBody()));
",0,0,0,3,6,0,10,0,0,10,58,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,607,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1071,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1073,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1074,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1076,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1079,"        if (lineSet == false) {
",2,1,0,1,3,0,0,0,0,4,23,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1080,"          block.setLineno(cc.getLineno());
",0,0,0,2,4,0,8,0,0,8,32,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1081,"          maybeSetLengthFrom(block, cc);
",0,0,0,1,2,0,6,0,0,6,30,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1082,"          lineSet = true;
",2,0,0,0,0,0,0,0,0,4,15,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1084,"        block.addChildToBack(transform(cc));
",0,0,0,2,4,0,8,0,0,8,36,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1085,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1086,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1088,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1089,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1096,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,1101,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,3,191,"        return processCatchClause((CatchClause) node);
",2,0,0,2,4,1,2,2,0,6,46,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,3,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,3,150,"        Preconditions.checkState(n.getChildCount() == 2);
",0,1,0,2,4,0,8,0,0,9,49,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,3,151,"        Preconditions.checkState(n.getFirstChild().isName());
",0,0,0,3,6,0,10,0,0,10,53,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,3,155,"        final Node var = n.getFirstChild();
",2,0,0,1,2,1,4,2,0,9,35,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,3,156,"        final Node block = var.getNext();
",2,0,0,1,2,1,4,2,0,9,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,3,158,"        declareVar(var);
",0,0,0,1,2,0,4,0,0,4,16,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,3,159,"        scanVars(block, n);
",0,0,0,1,2,0,6,0,0,6,19,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,3,160,"        return;  // only one child to scan
",0,0,0,0,0,1,0,0,0,0,34,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,313,"    List<GraphEdge<N, E>> result = Lists.newArrayList();
",2,0,0,1,2,0,4,8,0,14,52,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,314,"    for (DiGraphNode<N, E> node : nodes.values()) {
",2,0,0,2,5,0,4,6,0,12,47,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,315,"      for (DiGraphEdge<N, E> edge : node.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,51,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,316,"        result.add(edge);
",0,0,0,1,2,0,6,0,0,6,17,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,317,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,318,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,319,"    return Collections.unmodifiableList(result);
",0,0,0,1,2,1,6,0,0,6,44,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,246,"    if (nodeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,247,"      nodeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,249,"    pushAnnotations(nodeAnnotationStack, getNodes());
",0,0,0,2,4,0,6,0,0,6,49,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,250,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,257,"    Preconditions.checkNotNull(nodeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,259,"    popAnnotations(nodeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,260,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,267,"    if (edgeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,268,"      edgeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,270,"    pushAnnotations(edgeAnnotationStack, getEdges());
",0,0,0,2,4,0,6,0,0,6,49,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,271,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,278,"    Preconditions.checkNotNull(edgeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,280,"    popAnnotations(edgeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,281,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,338,"    stack.push(new GraphAnnotationState(haveAnnotations.size()));
",0,0,0,3,6,0,8,2,0,10,61,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,339,"    for (Annotatable h : haveAnnotations) {
",4,0,0,1,3,0,0,2,0,6,39,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,340,"      stack.peek().add(new AnnotationState(h, h.getAnnotation()));
",2,0,0,4,8,0,10,2,0,14,60,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,341,"      h.setAnnotation(null);
",0,0,0,1,2,0,4,0,0,4,22,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,342,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,343,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,349,"    for (AnnotationState as : stack.pop()) {
",2,0,0,2,5,0,4,2,0,8,40,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,350,"      as.first.setAnnotation(as.second);
",8,0,0,1,2,0,2,0,0,10,34,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,351,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,352,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,573,"      return (A) annotation;
",2,0,0,1,2,1,0,2,0,4,22,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,578,"      annotation = data;
",4,0,0,0,0,0,0,0,0,5,18,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,3,579,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,66,"    public AnnotationState(Annotatable annotatable, Annotation annotation) {
",6,0,0,1,3,1,0,4,0,11,72,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,67,"      this.first = annotatable;
",4,0,0,0,0,0,0,0,0,5,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,68,"      this.second = annotation;
",4,0,0,0,0,0,0,0,0,5,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,69,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,62,"  private static final class AnnotationState {
",2,0,0,0,1,3,0,0,0,5,44,2,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,80,"      super(size);
",2,0,0,1,2,0,0,0,0,2,12,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,3,81,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,268,"          return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,7,0.90000,0,-1
defect4j,closure,com/google/javascript/jscomp/MarkNoSideEffectCalls,3,126,"        if (parent.isExprResult() &&
",0,1,0,1,3,0,4,0,0,5,28,7,0.90000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,166,"          inlinedNewDependencies.add(t.getScope().getVar(c.varName));
",4,0,0,3,6,0,10,0,0,14,59,11,0.75000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,420,"        Node rhs = def.getLastChild();
",2,0,0,1,2,0,4,2,0,8,30,7,0.64286,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,421,"        rhs.detachFromParent();
",0,0,0,1,2,0,4,0,0,4,23,8,0.64286,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,423,"        Preconditions.checkState(defParent.isExprResult());
",0,0,0,2,4,0,8,0,0,8,51,8,0.64286,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,424,"        while (defParent.getParent().isLabel()) {
",0,0,0,3,7,0,6,0,0,6,41,8,0.64286,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,427,"        defParent.detachFromParent();
",0,0,0,1,2,0,4,0,0,4,29,8,0.64286,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,428,"        useParent.replaceChild(use, rhs);
",0,0,0,1,2,0,8,0,0,8,33,8,0.64286,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,429,"      } else if (defParent.isVar()) {
",0,0,0,2,6,0,4,0,0,4,31,7,0.64286,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,103,"        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
",0,1,0,3,7,0,10,0,0,11,61,8,0.60000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,107,"        if (n.isDelProp()) {
",0,0,0,2,5,0,4,0,0,4,20,9,0.60000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,111,"        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,8,0.60000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,116,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.60000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,92,"        if (n == null) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.56250,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,99,"        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
",0,1,0,3,7,0,10,0,0,11,59,8,0.56250,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,290,"        if (inlinedNewDependencies.contains(dependency)) {
",0,0,0,2,5,0,6,0,0,6,50,8,0.52941,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,293,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.52941,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,949,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,950,"      sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Token,3,214,"          case NUMBER:          return ""NUMBER"";
",2,0,0,0,0,1,0,0,0,3,38,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,795,"      valid = n.hasMoreThanOneChild();
",2,0,0,1,2,0,4,0,0,7,32,7,0.45000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,438,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.40909,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,460,"                def = n;
",4,0,0,0,0,0,0,0,0,5,8,14,0.37500,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,435,"      if (s.scope != jsScope) {
",6,1,0,1,3,0,0,0,0,7,25,6,0.36000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,458,"              Node lhs = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,29,12,0.36000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,459,"              if (lhs.isName() && lhs.getString().equals(varName)) {
",0,1,0,4,9,0,12,0,0,13,54,12,0.36000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,462,"              return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.36000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,1532,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,179,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,180,"        add(""throw"");
",0,0,0,1,2,0,2,0,0,3,13,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,181,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,185,"        cc.endStatement(true);
",0,0,0,1,2,0,4,0,0,5,22,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,186,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Token,3,197,"          case ADD:             return ""ADD"";
",2,0,0,0,0,1,0,0,0,3,35,4,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,376,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,391,"      if (NodeUtil.isStatementBlock(getDefCfgNode().getParent()) &&
",0,1,0,3,7,0,8,0,0,9,61,5,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,410,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,417,"      Node defParent = def.getParent();
",2,0,0,1,2,0,4,2,0,8,33,5,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,418,"      Node useParent = use.getParent();
",2,0,0,1,2,0,4,2,0,8,33,5,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,419,"      if (def.isAssign()) {
",0,0,0,2,5,0,4,0,0,4,21,6,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,436,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,437,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,156,"        c.inlineVariable();
",0,0,0,1,2,0,4,0,0,4,19,9,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,165,"        if (!c.defMetadata.depends.isEmpty()) {
",6,0,0,2,5,0,2,0,0,9,39,8,0.32143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,383,"                return !input.isFunction();
",0,0,0,1,2,1,4,0,0,5,27,11,0.32143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,1493,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.30000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,794,"    } else if (i == 2) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.30000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,364,"          new Predicate<Node>() {
",0,0,0,1,3,0,0,4,0,4,23,9,0.28125,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,367,"                switch (input.getType()) {
",0,0,0,2,5,0,4,0,0,4,26,12,0.28125,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,363,"      if (NodeUtil.has(def.getLastChild(),
",0,0,0,1,4,0,8,0,0,8,36,6,0.28125,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,379,"          new Predicate<Node>() {
",0,0,0,1,3,0,0,4,0,4,23,9,0.28125,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,812,"      valid = n.getChildCount() <= i;
",4,1,0,1,2,0,4,0,0,10,31,6,0.27273,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,3,140,"      append("";"");
",0,0,0,1,2,0,2,0,0,3,12,7,0.26471,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,3,141,"      maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,7,0.26471,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,3,142,"      statementNeedsEnded = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.26471,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,658,"      connectToPossibleExceptionHandler(node, node.getFirstChild());
",0,0,0,2,4,0,8,0,0,8,62,7,0.26471,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,345,"      Collection<Node> uses = reachingUses.getUses(varName, getDefCfgNode());
",2,0,0,2,4,0,8,4,0,14,71,5,0.25714,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,347,"      if (uses.size() != 1) {
",0,1,0,2,5,0,4,0,0,5,23,5,0.25714,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,297,"    GraphNode<Node, Branch> n = getCfg().getNode(defNode);
",2,0,0,2,4,0,6,6,0,14,54,4,0.25714,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,298,"    Preconditions.checkNotNull(n);
",0,0,0,1,2,0,6,0,0,6,30,5,0.25714,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,299,"    FlowState<ReachingUses> state = n.getAnnotation();
",2,0,0,1,2,0,4,4,0,10,50,4,0.25714,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,300,"    return state.getOut().mayUseMap.get(jsScope.getVar(name));
",2,0,0,3,6,1,12,0,0,14,58,5,0.25714,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1650,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.25714,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,344,"        handleReturn(n);
",0,0,0,1,2,0,4,0,0,4,16,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,345,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,640,"    Node lastJump = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,641,"    for (Iterator<Node> iter = exceptionHandler.iterator(); iter.hasNext();) {
",2,0,0,3,7,0,8,4,0,14,74,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,657,"    if (node.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,661,"    if (lastJump == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,662,"      createEdge(node, Branch.UNCOND, null);
",4,0,0,1,2,0,4,0,0,9,38,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,666,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,225,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,226,"    if (!irNode.isBlock()) {
",0,0,0,2,5,0,4,0,0,5,24,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,238,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,524,"      for (Node cur = p.getParent().getFirstChild(); cur != p;
",6,1,0,2,5,0,6,2,0,15,56,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,340,"      if (NodeUtil.isWithinLoop(use)) {
",0,0,0,2,5,0,6,0,0,6,33,6,0.24324,0,-1
defect4j,closure,com/google/javascript/jscomp/SimpleDefinitionFinder,3,83,"      String propName = useSite.getLastChild().getString();
",2,0,0,2,4,0,6,2,0,10,53,6,0.24324,0,-1
defect4j,closure,com/google/javascript/jscomp/SimpleDefinitionFinder,3,84,"      if (propName.equals(""apply"") || propName.equals(""call"")) {
",0,1,0,3,7,0,8,0,0,11,58,6,0.24324,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,402,"            def.depends.add(dep);
",4,0,0,1,2,0,4,0,0,8,21,15,0.24324,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,335,"      if (numUseWithinUseCfgNode != 1) {
",2,1,0,1,3,0,0,0,0,3,34,5,0.23684,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,3,998,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.23684,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,3,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.23684,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,3,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.23684,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,283,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.23077,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1672,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.23077,0,-1
defect4j,closure,com/google/javascript/rhino/Token,3,211,"          case CALL:            return ""CALL"";
",2,0,0,0,0,1,0,0,0,3,36,4,0.23077,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,312,"      if (checkRightOf(def, getDefCfgNode(), SIDE_EFFECT_PREDICATE)) {
",0,0,0,3,7,0,8,0,0,8,64,6,0.22500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,319,"      if (checkLeftOf(use, useCfgNode, SIDE_EFFECT_PREDICATE)) {
",0,0,0,2,5,0,8,0,0,8,58,6,0.22500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,326,"      if (NodeUtil.mayHaveSideEffects(def.getLastChild(), compiler)) {
",0,0,0,3,7,0,10,0,0,10,64,6,0.22500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,503,"    for (Node p = n; p != expressionRoot; p = p.getParent()) {
",10,1,0,2,5,0,4,2,0,18,58,4,0.22500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,504,"      for (Node cur = p.getNext(); cur != null; cur = cur.getNext()) {
",6,1,0,3,7,0,8,2,0,18,64,6,0.22500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,510,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.22500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,523,"    for (Node p = n.getParent(); p != expressionRoot; p = p.getParent()) {
",8,1,0,3,7,0,8,2,0,20,70,4,0.22500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,531,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.22500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,228,"        validateString(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.21951,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,229,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.21951,0,-1
defect4j,closure,com/google/javascript/rhino/Token,3,209,"          case GETPROP:         return ""GETPROP"";
",2,0,0,0,0,1,0,0,0,3,39,4,0.21951,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1653,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1011,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1012,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1013,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,638,"    validateNodeType(Token.STRING, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,639,"    validateChildCount(n, 0);
",0,0,0,1,2,0,4,0,0,4,25,5,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,642,"      n.getString();
",0,0,0,1,2,0,4,0,0,4,14,7,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,645,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,646,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.21429,0,-1
defect4j,closure,com/google/javascript/rhino/Node,3,2214,"    return this.getType() == Token.DELPROP;
",4,1,0,1,2,1,2,0,0,7,39,4,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,656,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,658,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,659,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,976,"    String s = n.getString();
",2,0,0,1,2,0,4,2,0,8,25,4,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,977,"    boolean useSlashV = n.getBooleanProp(Node.SLASH_V);
",6,0,0,1,2,0,4,0,0,10,51,5,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,978,"    if (useSlashV) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,981,"      String cached = ESCAPED_JS_STRINGS.get(s);
",2,0,0,1,2,0,6,2,0,10,42,6,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,982,"      if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,983,"        cached = jsString(n.getString(), useSlashV);
",2,0,0,2,4,0,8,0,0,11,44,8,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,984,"        ESCAPED_JS_STRINGS.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,34,9,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,986,"      add(cached);
",0,0,0,1,2,0,4,0,0,4,12,7,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,988,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,991,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,994,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1003,"    if (preferSingleQuotes ?
",2,0,0,0,1,0,0,0,0,2,24,5,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1016,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.20930,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,289,"      for (Var dependency : defMetadata.depends) {
",6,0,0,1,3,0,0,2,0,8,44,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,295,"      getDefinition(getDefCfgNode(), null);
",0,0,0,2,4,0,4,0,0,6,37,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,296,"      getNumUseInUseCfgNode(useCfgNode, null);
",0,0,0,1,2,0,4,0,0,5,40,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,299,"      if (def == null) {
",2,1,0,1,3,0,0,0,0,3,18,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,305,"      if (def.isAssign() && !NodeUtil.isExprAssign(def.getParent())) {
",0,1,0,4,9,0,12,0,0,14,64,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,445,"      AbstractCfgNodeTraversalCallback gatherCb =
",2,0,0,0,0,0,0,2,0,4,43,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,466,"      NodeTraversal.traverse(compiler, n, gatherCb);
",0,0,0,1,2,0,10,0,0,10,46,6,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,467,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,475,"      AbstractCfgNodeTraversalCallback gatherCb =
",2,0,0,0,0,0,0,2,0,4,43,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,489,"      NodeTraversal.traverse(compiler, n, gatherCb);
",0,0,0,1,2,0,10,0,0,10,46,6,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,490,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1612,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1618,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1644,"    for (Node parent : n.getAncestors()) {
",2,0,0,2,5,0,4,2,0,8,38,4,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1645,"      if (NodeUtil.isLoopStructure(parent)) {
",0,0,0,2,5,0,6,0,0,6,39,7,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1649,"      if (parent.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,26,7,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,3,1652,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1049,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1050,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1051,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1161,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,1162,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,476,"          new AbstractCfgNodeTraversalCallback() {
",0,0,0,1,3,0,0,2,0,2,40,8,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,480,"          if (n.isName() && n.getString().equals(varName) &&
",0,1,0,3,7,0,12,0,0,13,50,11,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,484,"            numUseWithinUseCfgNode++;
",2,0,0,0,0,0,0,0,0,3,25,13,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,486,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,446,"        new AbstractCfgNodeTraversalCallback() {
",0,0,0,1,3,0,0,2,0,2,40,8,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,450,"          switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,12,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,452,"              if (n.getString().equals(varName) && n.hasChildren()) {
",0,1,0,4,9,0,12,0,0,13,55,12,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,455,"              return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,3,464,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20455,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,398,"          Var dep = jsScope.getVar(n.getString());
",2,0,0,2,4,0,8,2,0,12,40,12,0.19565,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,399,"          if (dep == null) {
",2,1,0,1,3,0,0,0,0,3,18,12,0.19565,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,832,"      Node lastJump = cfgNode;
",4,0,0,0,0,0,0,2,0,6,24,6,0.19149,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,833,"      for (Node handler : exceptionHandler) {
",4,0,0,1,3,0,0,2,0,6,39,6,0.19149,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,3,834,"        if (handler.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,9,0.19149,0,-1
defect4j,closure,com/google/javascript/jscomp/SimpleDefinitionFinder,3,144,"      return ""this."" + node.getLastChild().getString();
",0,1,0,2,4,1,6,0,0,8,49,7,0.18367,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,232,"          Node name = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,7,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,233,"          if (!conditional) {
",2,0,0,1,3,0,0,0,0,3,19,7,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,234,"            removeFromUseIfLocal(name.getString(), output);
",0,0,0,2,4,0,8,0,0,8,47,10,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,238,"          if (!n.isAssign()) {
",0,0,0,2,5,0,4,0,0,5,20,7,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,242,"          computeMayUse(name.getNext(), cfgNode, output, conditional);
",0,0,0,2,4,0,12,0,0,12,60,8,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,3,243,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,282,"            Node name = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,9,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,283,"            computeMustDef(name.getNext(), cfgNode, output, conditional);
",0,0,0,2,4,0,12,0,0,12,61,10,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,284,"            addToDefIfLocal(name.getString(), conditional ? null : cfgNode,
",4,0,0,1,3,0,6,0,0,11,63,9,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,3,286,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/SimpleDefinitionFinder,3,176,"            Definition unknownDef =
",2,0,0,0,0,0,0,2,0,4,23,11,0.16071,0,-1
defect4j,closure,com/google/javascript/jscomp/SimpleDefinitionFinder,3,178,"            def = unknownDef;
",4,0,0,0,0,0,0,0,0,5,17,11,0.16071,0,-1
defect4j,closure,com/google/javascript/jscomp/DefinitionsRemover,3,182,"      super(lValue, inExterns);
",4,0,0,1,2,0,0,0,0,4,25,5,0.16071,0,-1
defect4j,closure,com/google/javascript/jscomp/DefinitionsRemover,3,183,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16071,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,483,"      validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,7,0.16071,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,3,191,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.15517,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,128,"        validateReturn(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.15254,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,129,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.15254,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,480,"    validateNodeType(Token.RETURN, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.15254,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,3,481,"    validateMaximumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.15254,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,497,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1613,"              badImplementedType = true;
",2,0,0,0,0,0,0,0,0,4,26,14,1,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1619,"            report(t, n, BAD_IMPLEMENTED_TYPE, functionPrivateName);
",0,0,0,1,2,0,10,0,0,10,56,13,1,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,1196,"      implementedInterfaces = resolvedInterfaces.build();
",2,0,0,1,2,0,4,0,0,7,51,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,305,"      validator.apply(type);
",0,0,0,1,2,0,6,0,0,6,22,7,0.40909,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,4,400,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.40000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,4,225,"      return nextConvention.isPropertyTestFunction(call);
",0,0,0,1,2,1,6,0,0,6,51,6,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,4,318,"    Preconditions.checkArgument(call.isCall());
",0,0,0,2,4,0,8,0,0,8,43,5,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,4,319,"    return propertyTestFunctions.contains(
",0,0,0,0,1,1,4,0,0,4,38,6,0.28571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,369,"    if (this.isResolved()) {
",0,0,0,2,5,0,2,0,0,2,24,5,0.23077,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,372,"      this.validator = validator;
",4,0,0,0,0,0,0,0,0,5,27,6,0.23077,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,373,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.23077,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2843,"        fnInfo = parent.getParent().getJSDocInfo();
",2,0,0,2,4,0,6,0,0,9,43,9,0.11688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,496,"      if (!constructor.isInterface()) {
",0,0,0,2,5,0,4,0,0,5,33,6,0.10000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/CanCastToVisitor,4,104,"      return true;  // TODO(johnlenz): are there any misuses we can catch?
",0,0,0,1,2,1,0,0,0,1,68,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,187,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,9,0.09783,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,488,"      addRelatedInterfaces(type, interfaces);
",0,0,0,1,2,0,6,0,0,6,39,7,0.09677,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,489,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09677,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,494,"    FunctionType constructor = instance.getConstructor();
",2,0,0,1,2,0,4,2,0,8,53,4,0.09677,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,495,"    if (constructor != null) {
",2,1,0,1,3,0,0,0,0,3,26,4,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1606,"          boolean badImplementedType = false;
",2,0,0,0,0,0,0,0,0,3,35,11,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1607,"          ObjectType baseInterfaceObj = ObjectType.cast(baseInterface);
",2,0,0,1,2,0,6,2,0,10,61,10,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1608,"          if (baseInterfaceObj != null) {
",2,1,0,1,3,0,0,0,0,3,31,10,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1609,"            FunctionType interfaceConstructor =
",2,0,0,0,0,0,0,2,0,4,35,12,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1611,"            if (interfaceConstructor != null &&
",2,2,0,0,1,0,0,0,0,4,35,12,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1615,"          } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1618,"          if (badImplementedType) {
",2,0,0,1,3,0,0,0,0,2,25,10,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1621,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,179,"      } else if (objectType.isUnknownType()) {
",0,0,0,2,6,0,4,0,0,4,40,8,0.09677,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,176,"      } else if (objectType.isEmptyType()) {
",0,0,0,2,6,0,4,0,0,4,38,7,0.09574,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,344,"              implementedInterfaces.add((ObjectType) maybeInterType);
",2,0,0,2,4,0,4,2,0,8,55,15,0.09375,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,172,"      ObjectType objectType = ObjectType.cast(type);
",2,0,0,1,2,0,6,2,0,10,46,5,0.09375,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,173,"      if (objectType == null) {
",2,1,0,1,3,0,0,0,0,3,25,5,0.09375,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,152,"    return reference;
",2,0,0,0,0,1,0,0,0,2,17,4,0.09375,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,1191,"      ObjectType resolvedIface = (ObjectType) iface.resolve(t, scope);
",2,0,0,2,4,0,8,4,0,14,64,6,0.09278,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,1192,"      resolvedInterfaces.add(resolvedIface);
",0,0,0,1,2,0,6,0,0,6,38,7,0.09278,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,1193,"      changed |= (resolvedIface != iface);
",6,1,0,1,2,0,0,0,0,8,36,6,0.09278,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,1194,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09278,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,339,"          implementedInterfaces = Lists.newArrayList();
",2,0,0,1,2,0,4,0,0,7,45,10,0.09184,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,340,"          for (JSTypeExpression t : info.getImplementedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,60,10,0.09184,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,341,"            JSType maybeInterType = t.evaluate(scope, typeRegistry);
",2,0,0,1,2,0,8,2,0,12,56,12,0.09184,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,342,"            if (maybeInterType != null &&
",2,2,0,0,1,0,0,0,0,4,29,12,0.09184,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,346,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09184,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,634,"      fnType.setImplementedInterfaces(implementedInterfaces);
",0,0,0,1,2,0,6,0,0,6,55,7,0.09184,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,169,"  private class ImplementedTypeValidator implements Predicate<JSType> {
",2,0,0,0,1,1,0,4,0,7,69,2,0.09184,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1283,"    if (info == null || info.implementedInterfaces == null) {
",6,3,0,1,3,0,0,0,0,9,57,4,0.08824,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1286,"    return Collections.unmodifiableList(info.implementedInterfaces);
",4,0,0,1,2,1,4,0,0,8,64,5,0.08824,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1297,"    return info.implementedInterfaces.size();
",4,0,0,1,2,1,2,0,0,6,41,5,0.08824,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,338,"        if (isConstructor) {
",2,0,0,1,3,0,0,0,0,2,20,8,0.08824,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,4,2068,"          Scope ownerScope = var.getScope();
",2,0,0,1,2,0,4,2,0,8,34,10,0.08571,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,4,2069,"          if (scope != ownerScope && ownerScope.isLocal()) {
",4,2,0,2,5,0,4,0,0,10,50,10,0.08571,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,4,2064,"        String name = NodeUtil.getRootOfQualifiedName(n).getString();
",2,0,0,2,4,0,8,2,0,12,61,8,0.08491,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,4,2065,"        Scope scope = t.getScope();
",2,0,0,1,2,0,4,2,0,8,27,8,0.08491,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,4,2066,"        Var var = scope.getVar(name);
",2,0,0,1,2,0,6,2,0,10,29,8,0.08491,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,4,2067,"        if (var != null) {
",2,1,0,1,3,0,0,0,0,3,18,8,0.08491,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2841,"      } else if (parent.isName()) {
",0,0,0,2,6,0,4,0,0,4,29,8,0.08182,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,4,161,"        return lineno1 - lineno2;
",4,1,0,0,0,1,0,0,0,5,25,7,0.07692,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,195,"      super.resolveInternal(t, enclosing);
",6,0,0,1,2,0,0,0,0,6,36,7,0.07377,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,196,"      finishPropertyContinuations();
",0,0,0,1,2,0,2,0,0,2,30,7,0.07377,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,197,"      return registry.isLastGeneration() ?
",0,0,0,1,2,1,4,0,0,4,36,8,0.07377,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,222,"      setReferencedAndResolvedType(type, t, enclosing);
",0,0,0,1,2,0,8,0,0,8,49,7,0.07377,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,223,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.07377,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1265,"    lazyInitInfo();
",0,0,0,1,2,0,2,0,0,2,15,5,0.07087,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1266,"    if (info.implementedInterfaces == null) {
",4,1,0,1,3,0,0,0,0,5,41,4,0.07087,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1267,"      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);
",4,0,0,1,2,0,4,0,0,9,63,6,0.07087,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1269,"    if (info.implementedInterfaces.contains(interfaceName)) {
",4,0,0,2,5,0,4,0,0,8,57,5,0.07087,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1272,"    info.implementedInterfaces.add(interfaceName);
",4,0,0,1,2,0,4,0,0,8,46,5,0.07087,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,4,1273,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.07087,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,454,"                      Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,18,0.07087,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,456,"                      if (!jsdocBuilder.recordImplementedInterface(type)) {
",0,0,0,2,5,0,6,0,0,7,53,17,0.07087,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,4,975,"    if (currentInfo.addImplementedInterface(interfaceName)) {
",0,0,0,2,5,0,6,0,0,6,57,5,0.07087,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,4,976,"      populated = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.07087,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,4,977,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.07087,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1443,"        return parent.getFirstChild() != getProp &&
",2,2,0,1,2,1,4,0,0,8,43,5,0.05970,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,177,"    return reference.hashCode();
",0,0,0,1,2,1,4,0,0,4,28,5,0.05696,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,4,203,"    return type.key + "". "" + description + "" at "" +
",6,1,0,0,0,1,0,0,0,9,47,4,0.05195,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,242,"          String name = n.getFirstChild().getString();
",2,0,0,2,4,0,6,2,0,10,44,7,0.05172,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,243,"          ProvidedName pn = providedNames.get(name);
",2,0,0,1,2,0,6,2,0,10,42,7,0.05172,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,244,"          if (pn != null) {
",2,1,0,1,3,0,0,0,0,3,17,7,0.05172,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,247,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05172,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,429,"      t.report(n, diagnosticType, arguments);
",0,0,0,1,2,0,10,0,0,10,39,7,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,4,943,"      type.resolve(reporter, scope);
",0,0,0,1,2,0,8,0,0,8,30,7,0.04891,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,4,944,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04891,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,428,"    if (noTypeCheckSection == 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.04592,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,431,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,4,920,"      NamedType namedType =
",2,0,0,0,0,0,0,2,0,4,21,6,0.04455,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,4,922,"      unresolvedNamedTypes.put(scope, namedType);
",0,0,0,1,2,0,8,0,0,8,43,7,0.04455,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,4,923,"      type = namedType;
",4,0,0,0,0,0,0,0,0,5,17,6,0.04455,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,182,"      if (p.visited) {
",4,0,0,1,3,0,0,0,0,4,16,7,0.04225,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,185,"        p.visited = true;
",4,0,0,0,0,0,0,0,0,6,17,8,0.04225,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,187,"      p = p.getImplicitPrototype();
",2,0,0,1,2,0,4,0,0,7,29,6,0.04225,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,4,124,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.04036,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,4,117,"        functionScope.declare(symbol, node, bottomType, null);
",0,0,0,1,2,0,10,0,0,10,54,9,0.04000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,4,178,"            if (alternate.isEquivalentTo(current)) {
",0,0,0,2,5,0,6,0,0,6,40,13,0.03863,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,4,1446,"    return resolved;
",2,0,0,0,0,1,0,0,0,2,16,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,529,"        registry.registerTypeImplementingInterface(this, type);
",0,0,0,1,2,0,6,0,0,6,55,9,0.03750,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,530,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03750,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,4,815,"    interfaceToImplementors.put(interfaceInstance.getReferenceName(), type);
",0,0,0,2,4,0,10,0,0,10,72,5,0.03750,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,4,816,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03750,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,360,"        name = n.getString();
",2,0,0,1,2,0,4,0,0,7,21,8,0.03734,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,528,"      for (ObjectType type : implementedInterfaces) {
",4,0,0,1,3,0,0,2,0,6,47,6,0.03719,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,531,"      this.implementedInterfaces = ImmutableList.copyOf(implementedInterfaces);
",2,0,0,1,2,0,6,0,0,9,73,6,0.03719,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,535,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03719,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,969,"          return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03719,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,4,526,"    if (isConstructor()) {
",0,0,0,2,5,0,2,0,0,2,22,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,1707,"      ensureTyped(t, n);
",0,0,0,1,2,0,6,0,0,6,18,7,0.03604,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,4,73,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.03604,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,4,2120,"    return errorManager.getWarningCount();
",0,0,0,1,2,1,4,0,0,4,38,5,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,336,"      JSType originalType = getPropertyType(propertyName);
",2,0,0,1,2,0,4,2,0,8,52,6,0.03435,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,337,"      type = originalType == null ? type :
",6,1,0,0,0,0,0,0,0,8,36,6,0.03435,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,4,732,"      return checkEquivalenceHelper(
",0,0,0,0,1,1,2,0,0,2,30,7,0.03409,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,240,"        if (t.inGlobalScope() &&
",0,1,0,1,3,0,4,0,0,5,24,5,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,136,"      if (propertyContinuations != null) {
",2,1,0,1,3,0,0,0,0,3,36,6,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,304,"    if (validator != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,307,"    setReferencedType(type);
",0,0,0,1,2,0,4,0,0,4,24,5,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,308,"    checkEnumElementCycle(t);
",0,0,0,1,2,0,4,0,0,4,25,5,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,309,"    setResolvedTypeInternal(getReferencedType());
",0,0,0,2,4,0,4,0,0,4,45,5,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,310,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,321,"    JSType referencedType = getReferencedType();
",2,0,0,1,2,0,2,2,0,6,44,4,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,322,"    if (referencedType instanceof EnumElementType &&
",2,1,0,0,1,0,0,2,0,5,48,4,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,326,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,364,"    return referencedType.toMaybeTemplateType();
",0,0,0,1,2,1,4,0,0,4,44,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,4,82,"    Preconditions.checkArgument(lastLink.nextLink == null);
",4,1,0,1,2,0,4,0,0,9,55,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,4,83,"    this.nextLink = lastLink;
",4,0,0,0,0,0,0,0,0,5,25,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,4,84,"    lastLink.firstLink = this.firstLink;
",6,0,0,0,0,0,0,0,0,7,36,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,4,85,"    return lastLink;
",2,0,0,0,0,1,0,0,0,2,16,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,4,92,"    return firstLink;
",2,0,0,0,0,1,0,0,0,2,17,4,0.03226,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,359,"    return referencedType.toMaybeParameterizedType();
",0,0,0,1,2,1,4,0,0,4,49,5,0.03169,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,4,100,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.03169,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,4,112,"      return ImmutableList.of();
",0,0,0,1,2,1,4,0,0,4,26,7,0.03169,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,262,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.03103,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2837,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,6,0.03082,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2838,"      if (parent.isAssign()) {
",0,0,0,2,5,0,4,0,0,4,24,7,0.03082,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,109,"    return PropertyMap.immutableEmptyMap();
",0,0,0,1,2,1,4,0,0,4,39,5,0.03061,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PropertyMap,4,88,"    return EMPTY_MAP;
",2,0,0,0,0,1,0,0,0,2,17,4,0.03041,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,367,"        if (parent.getBooleanProp(Node.IS_NAMESPACE)) {
",4,0,0,2,5,0,4,0,0,8,47,9,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,370,"          ProvidedName pn = providedNames.get(name);
",2,0,0,1,2,0,6,2,0,10,42,10,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,371,"          if (pn != null) {
",2,1,0,1,3,0,0,0,0,3,17,10,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,4,650,"    JSError error = JSError.make(getBestSourceFileName(n),
",2,0,0,1,3,0,8,2,0,12,54,4,0.03020,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,4,652,"    compiler.report(error);
",0,0,0,1,2,0,6,0,0,6,23,5,0.03020,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,4,653,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03020,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,618,"            objectType.defineInferredProperty(propName, rightType, getprop);
",0,0,0,1,2,0,10,0,0,10,64,13,0.03000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,332,"      if (isPropertyTypeDeclared(propertyName)) {
",0,0,0,2,5,0,4,0,0,4,43,7,0.02951,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,4,116,"      if (functionScope.getVar(symbol) == null && !functionScope.isBottom()) {
",0,2,0,3,7,0,10,0,0,13,72,6,0.02951,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,4,120,"      inferSlotType(symbol, inferredType);
",0,0,0,1,2,0,6,0,0,6,36,7,0.02951,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,144,"      .put(""isNull"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,56,14,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,130,"    super(convention, typeRegistry);
",4,0,0,1,2,0,0,0,0,4,32,4,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,50,"  private final Visitor<JSType> restrictToArrayVisitor =
",2,0,0,0,0,2,0,4,0,8,54,2,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,69,"  private final Visitor<JSType> restrictToNotArrayVisitor =
",2,0,0,0,0,2,0,4,0,8,57,2,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,81,"  private final Visitor<JSType> restrictToObjectVisitor =
",2,0,0,0,0,2,0,4,0,8,55,2,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,102,"  private final Visitor<JSType> restrictToNotObjectVisitor =
",2,0,0,0,0,2,0,4,0,8,58,2,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,131,"    this.restricters =
",2,0,0,0,0,0,0,0,0,3,18,4,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,216,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,185,"      .put(""isFunction"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,60,9,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,70,"      new RestrictByFalseTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,42,5,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,103,"      new RestrictByFalseTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,42,5,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,173,"      .put(""isBoolean"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,59,11,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,82,"      new RestrictByTrueTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,41,5,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,167,"      .put(""isString"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,12,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,203,"      .put(""isObject"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,7,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,191,"      .put(""isArray"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,57,8,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,179,"      .put(""isNumber"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,10,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,155,"      .put(""isDefAndNotNull"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,65,13,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,133,"      .put(""isDef"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,55,15,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,4,51,"      new RestrictByTrueTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,41,5,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,4,443,"  abstract class RestrictByTrueTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,48,2,0.02769,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,4,491,"  abstract class RestrictByFalseTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,49,2,0.02761,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,191,"    p = this;
",2,0,0,0,0,0,0,0,0,3,9,4,0.02727,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,193,"      p.visited = false;
",4,0,0,0,0,0,0,0,0,6,18,6,0.02727,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,194,"      p = p.getImplicitPrototype();
",2,0,0,1,2,0,4,0,0,7,29,6,0.02727,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,195,"    } while (p != null);
",2,1,0,1,3,0,0,0,0,3,20,4,0.02727,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,196,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.02727,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,251,"        if (n.getFirstChild().isName() &&
",0,1,0,2,5,0,6,0,0,7,33,5,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,179,"    this.visited = true;
",2,0,0,0,0,0,0,0,0,4,20,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,180,"    ObjectType p = getImplicitPrototype();
",2,0,0,1,2,0,2,2,0,6,38,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,4,181,"    while (p != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,4,796,"    return lastGeneration;
",2,0,0,0,0,1,0,0,0,2,22,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,77,"    return referencedObjType;
",2,0,0,0,0,1,0,0,0,2,25,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,256,"    return referencedObjType == null ? null :
",2,1,0,0,0,1,0,0,0,3,41,5,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,134,"    ObjectType referencedObjType = getReferencedObjTypeInternal();
",2,0,0,1,2,0,2,2,0,6,62,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,135,"    if (referencedObjType != null && !referencedObjType.isUnknownType()) {
",2,2,0,2,5,0,4,0,0,9,70,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,142,"    propertyContinuations = null;
",2,0,0,0,0,0,0,0,0,3,29,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,143,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,147,"    return getReferencedTypeInternal();
",0,0,0,1,2,1,2,0,0,2,35,5,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,189,"    boolean resolved = resolveViaRegistry(t, enclosing);
",2,0,0,1,2,0,6,0,0,8,52,5,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,190,"    if (detectImplicitPrototypeCycle()) {
",0,0,0,2,5,0,2,0,0,2,37,5,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,194,"    if (resolved) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,220,"    JSType type = registry.getType(reference);
",2,0,0,1,2,0,6,2,0,10,42,4,0.02711,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,221,"    if (type != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.02711,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,615,"          if (""prototype"".equals(propName)) {
",0,0,0,2,5,0,4,0,0,5,35,11,0.02616,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,123,"    return referencedType.isNoType();
",0,0,0,1,2,1,4,0,0,4,33,5,0.02594,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,183,"    return referencedType.isAllType();
",0,0,0,1,2,1,4,0,0,4,34,5,0.02579,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,4,295,"        return registry.getNativeType(UNKNOWN_TYPE);
",0,0,0,1,2,1,6,0,0,6,44,10,0.02571,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,4,488,"          expr.setJSType(castType);
",0,0,0,1,2,0,6,0,0,6,25,8,0.02564,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,214,"    return referencedType.toMaybeFunctionType();
",0,0,0,1,2,1,4,0,0,4,44,5,0.02542,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,4,1068,"      return thisType.isEquivalentTo(thatType) ? thisType :
",2,0,0,1,2,1,6,0,0,8,53,9,0.02532,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,209,"    return referencedType.toMaybeUnionType();
",0,0,0,1,2,1,4,0,0,4,41,5,0.02528,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,4,1593,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.02521,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,234,"        handleTypedefDefinition(t, n, parent);
",0,0,0,1,2,0,8,0,0,8,38,6,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,235,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,340,"    JSDocInfo info = n.getFirstChild().getJSDocInfo();
",2,0,0,2,4,0,6,2,0,10,50,4,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,341,"    if (t.inGlobalScope() && info != null && info.hasTypedefType()) {
",2,3,0,3,7,0,8,0,0,13,65,4,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,350,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,463,"                      if (token != JsDocToken.RC) {
",6,1,0,1,3,0,0,0,0,7,29,17,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,435,"                    token = next();
",2,0,0,1,2,0,2,0,0,5,15,15,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,436,"                    matchingRc = true;
",2,0,0,0,0,0,0,0,0,4,18,15,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,4,363,"  abstract class RestrictByTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,44,2,0.02479,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,4,292,"      if (areAllUnknownsChecked) {
",2,0,0,1,3,0,0,0,0,2,28,7,0.02452,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,4,1589,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.02446,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,4,1590,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.02446,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,4,1592,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.02446,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,4,1595,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.02446,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,4,1596,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.02446,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,105,"    super(registry, registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE));
",6,0,0,2,4,0,4,0,0,10,73,4,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,98,"  private List<PropertyContinuation> propertyContinuations = null;
",2,0,0,0,0,1,0,4,0,7,64,2,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,107,"    Preconditions.checkNotNull(reference);
",0,0,0,1,2,0,6,0,0,6,38,5,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,108,"    this.reference = reference;
",4,0,0,0,0,0,0,0,0,5,27,4,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,109,"    this.sourceName = sourceName;
",4,0,0,0,0,0,0,0,0,5,29,4,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,110,"    this.lineno = lineno;
",4,0,0,0,0,0,0,0,0,5,21,4,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,111,"    this.charno = charno;
",4,0,0,0,0,0,0,0,0,5,21,4,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,4,112,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2342,"      Preconditions.checkState(current.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,7,0.02426,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2338,"         current = current.getFirstChild()) {
",2,0,0,1,4,0,4,0,0,7,36,4,0.02426,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ProxyObjectType,4,138,"    return referencedType.isUnknownType();
",0,0,0,1,2,1,4,0,0,4,38,5,0.02419,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,361,"      } else if (n.isAssign() &&
",0,1,0,1,4,0,4,0,0,5,26,7,0.02362,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,358,"      String name = null;
",2,0,0,0,0,0,0,2,0,4,19,6,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,359,"      if (n.isName() && parent.isVar()) {
",0,1,0,3,7,0,8,0,0,9,35,6,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,366,"      if (name != null) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,230,"        handleCandidateProvideDefinition(t, n, parent);
",0,0,0,1,2,0,8,0,0,8,47,6,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,231,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,357,"    if (t.inGlobalScope()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,377,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,440,"                    Node typeNode = parseAndRecordTypeNameNode(
",2,0,0,0,1,0,2,2,0,6,43,15,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,443,"                    lineno = stream.getLineno();
",2,0,0,1,2,0,4,0,0,7,28,15,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,444,"                    charno = stream.getCharno();
",2,0,0,1,2,0,4,0,0,7,28,15,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,446,"                    typeNode = wrapNode(Token.BANG, typeNode);
",6,0,0,1,2,0,4,0,0,11,42,15,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,447,"                    type = createJSTypeExpression(typeNode);
",2,0,0,1,2,0,4,0,0,7,40,15,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,449,"                    if (annotation == Annotation.EXTENDS) {
",6,1,0,1,3,0,0,0,0,7,39,15,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,461,"                    token = next();
",2,0,0,1,2,0,2,0,0,5,15,15,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,462,"                    if (matchingRc) {
",2,0,0,1,3,0,0,0,0,2,17,15,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,472,"                  } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,1139,"    return parseAndRecordTypeNode(token, lineno, startCharno, matchingLC, true);
",0,0,0,1,2,1,10,0,0,11,76,5,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,1191,"      typeNode = parseTypeNameAnnotation(token);
",2,0,0,1,2,0,4,0,0,7,42,6,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,1649,"    if (token == JsDocToken.LC) {
",6,1,0,1,3,0,0,0,0,7,29,4,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,1663,"      return parseTypeName(token);
",0,0,0,1,2,1,4,0,0,4,28,7,0.02217,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,146,"              newType = parameterTypeNode.getJSType();
",2,0,0,1,2,0,4,0,0,7,40,15,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,428,"                  skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,14,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,429,"                  token = next();
",2,0,0,1,2,0,2,0,0,5,15,13,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,430,"                  lineno = stream.getLineno();
",2,0,0,1,2,0,4,0,0,7,28,13,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,431,"                  charno = stream.getCharno();
",2,0,0,1,2,0,4,0,0,7,28,13,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,432,"                  boolean matchingRc = false;
",2,0,0,0,0,0,0,0,0,3,27,14,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,434,"                  if (token == JsDocToken.LC) {
",6,1,0,1,3,0,0,0,0,7,29,13,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,439,"                  if (token == JsDocToken.STRING) {
",6,1,0,1,3,0,0,0,0,7,33,13,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,475,"                  token = eatTokensUntilEOL(token);
",2,0,0,1,2,0,4,0,0,7,33,13,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,4,476,"                  continue retry;
",2,0,0,0,0,0,0,0,0,2,15,13,0.02206,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,150,"              var.setType(newType);
",0,0,0,1,2,0,6,0,0,6,21,15,0.02200,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,151,"              astParameter.setJSType(newType);
",0,0,0,1,2,0,6,0,0,6,32,15,0.02200,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,468,"        parameterType = typeRegistry.getNativeType(UNKNOWN_TYPE);
",2,0,0,1,2,0,6,0,0,9,57,9,0.02200,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,145,"            } else if (parameterTypeNode != null) {
",2,1,0,1,4,0,0,0,0,3,39,13,0.02195,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,141,"            JSType newType = null;
",2,0,0,0,0,0,0,2,0,4,22,12,0.02190,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,143,"            if (iifeArgumentNode != null) {
",2,1,0,1,3,0,0,0,0,3,31,12,0.02190,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,149,"            if (newType != null) {
",2,1,0,1,3,0,0,0,0,3,22,12,0.02190,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,149,"      for (UnrecognizedRequire r : unrecognizedRequires) {
",4,0,0,1,3,0,0,2,0,6,52,6,0.02174,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,4,350,"        if (thisInterface.isSubtype(that)) {
",0,0,0,2,5,0,6,0,0,6,36,10,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,125,"      CheckLevel requiresLevel) {
",2,0,0,0,2,0,0,2,0,4,27,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,114,"  private final Map<String, ProvidedName> providedNames =
",2,0,0,0,0,2,0,6,0,10,55,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,117,"  private final List<UnrecognizedRequire> unrecognizedRequires =
",2,0,0,0,0,2,0,4,0,8,62,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,119,"  private final Set<String> exportedVariables = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,64,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,126,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,127,"    this.preprocessorSymbolTable = preprocessorSymbolTable;
",4,0,0,0,0,0,0,0,0,5,55,4,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,128,"    this.moduleGraph = compiler.getModuleGraph();
",2,0,0,1,2,0,4,0,0,7,45,4,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,129,"    this.requiresLevel = requiresLevel;
",4,0,0,0,0,0,0,0,0,5,35,4,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,132,"    providedNames.put(GOOG,
",0,0,0,0,1,0,6,0,0,6,23,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,134,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,45,"  static final DiagnosticType NULL_ARGUMENT_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,71,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,49,"  static final DiagnosticType EXPECTED_OBJECTLIT_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,76,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,53,"  static final DiagnosticType EXPECTED_STRING_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,73,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,57,"  static final DiagnosticType INVALID_ARGUMENT_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,74,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,61,"  static final DiagnosticType INVALID_STYLE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,71,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,65,"  static final DiagnosticType TOO_MANY_ARGUMENTS_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,76,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,69,"  static final DiagnosticType DUPLICATE_NAMESPACE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,77,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,73,"  static final DiagnosticType FUNCTION_NAMESPACE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,76,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,77,"  static final DiagnosticType MISSING_PROVIDE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,73,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,81,"  static final DiagnosticType LATE_PROVIDE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,70,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,85,"  static final DiagnosticType INVALID_PROVIDE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,73,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,89,"  static final DiagnosticType XMODULE_REQUIRE_ERROR = DiagnosticType.warning(
",2,0,0,0,1,2,4,2,0,10,75,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,94,"  static final DiagnosticType NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR =
",2,0,0,0,0,2,0,2,0,6,77,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,99,"  static final DiagnosticType INVALID_CSS_RENAMING_MAP = DiagnosticType.warning(
",2,0,0,0,1,2,4,2,0,10,78,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,103,"  static final DiagnosticType BASE_CLASS_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,68,2,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,142,"    new NodeTraversal(compiler, this).traverse(root);
",2,0,0,2,4,0,4,2,0,8,49,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,144,"    for (ProvidedName pn : providedNames.values()) {
",2,0,0,2,5,0,4,2,0,8,48,4,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,145,"      pn.replace();
",0,0,0,1,2,0,4,0,0,4,13,7,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,146,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,148,"    if (requiresLevel.isOn()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,163,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,174,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,259,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,789,"        boolean explicit) {
",2,0,0,0,2,0,0,0,0,2,19,4,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,776,"    private Node explicitNode = null;
",2,0,0,0,0,1,0,2,0,5,33,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,777,"    private JSModule explicitModule = null;
",2,0,0,0,0,1,0,2,0,5,39,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,780,"    private Node candidateDefinition = null;
",2,0,0,0,0,1,0,2,0,5,40,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,783,"    private JSModule minimumModule = null;
",2,0,0,0,0,1,0,2,0,5,38,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,786,"    private Node replacementNode = null;
",2,0,0,0,0,1,0,2,0,5,36,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,790,"      Preconditions.checkArgument(
",0,0,0,0,1,0,4,0,0,4,28,6,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,793,"      this.namespace = namespace;
",4,0,0,0,0,0,0,0,0,5,27,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,794,"      this.firstNode = node;
",4,0,0,0,0,0,0,0,0,5,22,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,795,"      this.firstModule = module;
",4,0,0,0,0,0,0,0,0,5,26,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,797,"      addProvide(node, module, explicit);
",0,0,0,1,2,0,8,0,0,8,35,6,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,798,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,804,"      if (explicit) {
",2,0,0,1,3,0,0,0,0,2,15,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,810,"      updateMinimumModule(module);
",0,0,0,1,2,0,4,0,0,4,28,6,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,811,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,835,"      if (minimumModule == null) {
",2,1,0,1,3,0,0,0,0,3,28,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,836,"        minimumModule = newModule;
",4,0,0,0,0,0,0,0,0,5,26,7,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,846,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,856,"      if (firstNode == null) {
",2,1,0,1,3,0,0,0,0,3,24,5,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,858,"        replacementNode = candidateDefinition;
",4,0,0,0,0,0,0,0,0,5,38,7,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,4,859,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02169,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,4,132,"      areAllUnknownsChecked = areAllUnknownsChecked &&
",4,1,0,0,0,0,0,0,0,6,48,6,0.02133,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,4,462,"      } else if (oldParameterType != null &&
",2,2,0,0,2,0,0,0,0,4,38,7,0.02113,0,-1
defect4j,closure,com/google/javascript/rhino/Node,4,2354,"    return this.getType() == Token.TRUE;
",4,1,0,1,2,1,2,0,0,7,36,4,0.02036,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2337,"    for (Node current = qName; true;
",4,0,0,0,1,0,0,2,0,7,32,4,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2339,"      if (current.isName() || current.isThis()) {
",0,1,0,3,7,0,8,0,0,9,43,6,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,4,2340,"        return current;
",2,0,0,0,0,1,0,0,0,2,15,8,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,4,614,"        if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {
",0,1,0,3,7,0,10,0,0,12,71,8,0.01974,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,924,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,925,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,926,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,934,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,935,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,936,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,937,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,938,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,948,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,952,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,960,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,979,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,988,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,644,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,645,"        add(""delete "");
",0,0,0,1,2,0,2,0,0,3,15,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,646,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,647,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,1276,"        return Token.DELPROP;
",4,0,0,0,0,1,0,0,0,4,21,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,319,"        initvals.put(key.getString(), key.removeFirstChild());
",0,0,0,3,6,0,12,0,0,12,54,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,318,"           key = key.getNext()) {
",2,0,0,1,4,0,4,0,0,7,22,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,426,"          blacklistVarReferencesInTree(val, v.scope);
",4,0,0,1,2,0,4,0,0,8,43,10,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,279,"              String varname = child.getString();
",2,0,0,1,2,0,4,2,0,8,35,13,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,280,"              if (varmap.containsKey(varname)) {
",0,0,0,2,5,0,6,0,0,6,34,14,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,284,"              String var = VAR_PREFIX + varname + ""_"" +
",6,1,0,0,0,0,0,2,0,10,41,13,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,286,"              varmap.put(varname, var);
",0,0,0,1,2,0,8,0,0,8,25,14,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,278,"                 child = child.getNext()) {
",2,0,0,1,4,0,4,0,0,7,26,11,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,298,"            continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,116,"      NodeUtil.visitPreOrder(root, new NodeUtil.Visitor() {
",4,0,0,1,4,0,6,0,0,10,53,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,119,"          if (node.isName()) {
",0,0,0,2,5,0,4,0,0,4,20,12,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,122,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,116,"      NodeUtil.visitPreOrder(root, new NodeUtil.Visitor() {
",4,0,0,1,4,0,6,0,0,10,53,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,124,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,292,"          Node getprop = ref.getParent();
",2,0,0,1,2,0,4,2,0,8,31,10,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,293,"          Preconditions.checkState(getprop.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,11,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,296,"          String varname = getprop.getLastChild().getString();
",2,0,0,2,4,0,6,2,0,10,52,10,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,297,"          if (varmap.containsKey(varname)) {
",0,0,0,2,5,0,6,0,0,6,34,11,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,315,"      Node object = init.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,38,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,316,"      Preconditions.checkState(object.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,47,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,317,"      for (Node key = object.getFirstChild(); key != null;
",4,1,0,1,3,0,4,2,0,11,52,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,321,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,411,"        vnode = init.getParent();
",2,0,0,1,2,0,4,0,0,7,25,7,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,412,"        fillInitialValues(init, initvals);
",0,0,0,1,2,0,6,0,0,6,34,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,432,"        vnode.getParent().removeChild(vnode);
",0,0,0,2,4,0,8,0,0,8,37,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,449,"          Node getprop = ref.getParent();
",2,0,0,1,2,0,4,2,0,8,31,10,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,450,"          Preconditions.checkState(getprop.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,11,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,453,"          String var = getprop.getChildAtIndex(1).getString();
",2,0,0,2,4,0,6,2,0,10,52,10,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,457,"          Preconditions.checkState(varmap.containsKey(var));
",0,0,0,2,4,0,10,0,0,10,50,11,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,460,"          Node replacement = IR.name(varmap.get(var));
",2,0,0,2,4,0,10,2,0,14,44,10,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,461,"          replacement.copyInformationFrom(getprop);
",0,0,0,1,2,0,6,0,0,6,41,11,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,462,"          ref.getGrandparent().replaceChild(ref.getParent(), replacement);
",0,0,0,3,6,0,12,0,0,12,64,11,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,420,"        Node val = initvals.get(entry.getKey());
",2,0,0,2,4,0,8,2,0,12,40,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,421,"        Node varnode = NodeUtil.newVarNode(entry.getValue(), val);
",2,0,0,2,4,0,10,2,0,14,58,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,422,"        if (val == null) {
",2,1,0,1,3,0,0,0,0,3,18,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,428,"        vnode.getParent().addChildBefore(varnode, vnode);
",0,0,0,2,4,0,10,0,0,10,49,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,429,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,439,"        if (ref.isLvalue()) {
",0,0,0,2,5,0,4,0,0,4,21,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,443,"        } else if (ref.getParent().isVar()) {
",0,0,0,3,8,0,6,0,0,6,37,9,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,464,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2553,"      Preconditions.checkState(value.getNext() == null);
",0,1,0,2,4,0,8,0,0,9,50,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2554,"      nodeName.addChildToBack(value);
",0,0,0,1,2,0,6,0,0,6,31,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2555,"      nodeName.srcref(value);
",0,0,0,1,2,0,6,0,0,6,23,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,97,"          staleVars.add(v);
",0,0,0,1,2,0,6,0,0,6,17,10,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,99,"          Reference declaration = referenceInfo.references.get(0);
",6,0,0,1,2,0,2,2,0,10,56,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,100,"          Reference init = referenceInfo.getInitializingReference();
",2,0,0,1,2,0,4,2,0,8,58,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,104,"          splitObject(v, declaration, init, referenceInfo);
",0,0,0,1,2,0,10,0,0,10,49,10,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,252,"      return ret;
",2,0,0,0,0,1,0,0,0,2,11,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,270,"      Map<String, String> varmap = Maps.newLinkedHashMap();
",2,0,0,1,2,0,4,6,0,12,53,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,272,"      for (Reference ref : referenceInfo.references) {
",6,0,0,1,3,0,0,2,0,8,48,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,273,"        if (ref.isLvalue() || ref.isInitializingDeclaration()) {
",0,1,0,3,7,0,8,0,0,9,56,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,274,"          Node val = ref.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,34,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,275,"          if (val != null) {
",2,1,0,1,3,0,0,0,0,3,18,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,276,"            Preconditions.checkState(val.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,44,12,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,277,"            for (Node child = val.getFirstChild(); child != null;
",4,1,0,1,3,0,4,2,0,11,53,11,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,289,"        } else if (ref.getParent().isVar()) {
",0,0,0,3,8,0,6,0,0,6,37,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,304,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,306,"      return varmap;
",2,0,0,0,0,1,0,0,0,2,14,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,401,"      Map<String, String> varmap = computeVarList(v, referenceInfo);
",2,0,0,1,2,0,6,6,0,14,62,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,403,"      Map<String, Node> initvals = Maps.newHashMap();
",2,0,0,1,2,0,4,6,0,12,47,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,408,"      boolean defined = referenceInfo.isWellDefined() &&
",2,1,0,1,2,0,4,0,0,7,50,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,410,"      if (defined) {
",2,0,0,1,3,0,0,0,0,2,14,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,419,"      for (Map.Entry<String, String> entry : varmap.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,59,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,431,"      if (defined) {
",2,0,0,1,3,0,0,0,0,2,14,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,435,"      for (Reference ref : referenceInfo.references) {
",6,0,0,1,3,0,0,2,0,8,48,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,437,"        if (defined && ref == init) continue;
",6,2,0,1,2,0,0,0,0,8,37,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,466,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,467,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,5,94,"                } break partial;
",2,0,0,0,1,0,0,0,0,2,16,8,0.05882,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1532,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,174,"        validateUnaryOp(n);
",0,0,0,1,2,0,4,0,0,4,19,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,175,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,743,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,744,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,745,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,1100,"        if (type == Token.DELPROP &&
",6,2,0,0,1,0,0,0,0,8,28,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,1122,"        Node node = newNode(type, operand);
",2,0,0,1,2,0,6,2,0,10,35,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,1123,"        if (exprNode.isPostfix()) {
",0,0,0,2,5,0,4,0,0,4,27,8,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,1126,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,185,"          String propName = parent.getLastChild().getString();
",2,0,0,2,4,0,6,2,0,10,52,9,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,186,"          if (!validProperties.contains(propName)) {
",0,0,0,2,5,0,6,0,0,7,42,9,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,5,171,"        return processUnaryExpression((UnaryExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,1094,"      int type = transformTokenType(exprNode.getType());
",2,0,0,2,4,0,6,0,0,8,50,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,1095,"      Node operand = transform(exprNode.getOperand());
",2,0,0,2,4,0,6,2,0,10,48,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,1096,"      if (type == Token.NEG && operand.isNumber()) {
",6,2,0,2,5,0,4,0,0,12,46,5,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1493,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,167,"          Preconditions.checkState(parent.getFirstChild() == name);
",2,1,0,2,4,0,8,0,0,11,57,10,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,169,"          if (gramps.isCall()
",0,0,0,1,3,0,4,0,0,4,19,11,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2722,"    visitor.visit(node);
",0,0,0,1,2,0,6,0,0,6,20,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2724,"    if (traverseChildrenPred.apply(node)) {
",0,0,0,2,5,0,6,0,0,6,39,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2725,"      for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,65,6,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2729,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,209,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,222,"          if (child.isGetterDef() ||
",0,1,0,1,3,0,4,0,0,5,26,9,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,228,"          validProperties.add(child.getString());
",0,0,0,2,4,0,8,0,0,8,39,10,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,230,"          Node childVal = child.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,38,9,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,234,"          for (Reference t : refs) {
",4,0,0,1,3,0,0,2,0,6,26,9,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,235,"            Node refNode = t.getParent();
",2,0,0,1,2,0,4,2,0,8,29,11,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,236,"            while (!NodeUtil.isStatementBlock(refNode)) {
",0,0,0,2,5,0,6,0,0,7,45,11,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,237,"              if (refNode == childVal) {
",4,1,0,1,3,0,0,0,0,5,26,13,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,241,"              refNode = refNode.getParent();
",2,0,0,1,2,0,4,0,0,7,30,13,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,243,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,221,"             child = child.getNext()) {
",2,0,0,1,4,0,4,0,0,7,26,7,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,5,73,"            case 3: switch (s.charAt(0)) {
",0,0,0,2,5,0,4,0,0,4,30,9,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2551,"    Node nodeName = IR.name(name);
",2,0,0,1,2,0,6,2,0,10,30,4,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2552,"    if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2557,"    Node var = IR.var(nodeName).srcref(nodeName);
",2,0,0,2,4,0,10,2,0,14,45,4,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2559,"    return var;
",2,0,0,0,0,1,0,0,0,2,11,4,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,5,1002,"    return uniqueNameId++;
",2,0,0,0,0,1,0,0,0,3,22,4,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,5,1019,"        return String.valueOf(self.nextUniqueNameId());
",0,0,0,2,4,1,8,0,0,8,47,10,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,220,"        for (Node child = val.getFirstChild(); child != null;
",4,1,0,1,3,0,4,2,0,11,53,7,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,250,"        ret = true;
",2,0,0,0,0,0,0,0,0,4,11,7,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,251,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,339,"          Preconditions.checkState(value.booleanValue() == isConst,
",2,1,0,1,3,0,8,0,0,11,57,10,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,278,"    VerifyConstants(AbstractCompiler compiler, boolean checkUserDeclarations) {
",6,0,0,1,3,0,0,2,0,8,75,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,293,"    private Map<String, Boolean> constantMap = Maps.newHashMap();
",2,0,0,1,2,1,4,6,0,13,61,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,279,"      this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,280,"      this.checkUserDeclarations = checkUserDeclarations;
",4,0,0,0,0,0,0,0,0,5,51,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,281,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,285,"      Node externsAndJs = root.getParent();
",2,0,0,1,2,0,4,2,0,8,37,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,286,"      Preconditions.checkState(externsAndJs != null);
",2,1,0,1,2,0,4,0,0,7,47,6,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,287,"      Preconditions.checkState(externsAndJs.hasChild(externs));
",0,0,0,2,4,0,10,0,0,10,57,6,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,289,"      NodeTraversal.traverseRoots(
",0,0,0,0,1,0,4,0,0,4,28,6,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,291,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,297,"      if (n.isName()) {
",0,0,0,2,5,0,4,0,0,4,17,6,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,298,"        String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,7,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,299,"        if (n.getString().isEmpty()) {
",0,0,0,3,7,0,6,0,0,6,30,8,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,303,"        boolean isConst = n.getBooleanProp(Node.IS_CONSTANT_NAME);
",6,0,0,1,2,0,4,0,0,10,58,8,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,304,"        if (checkUserDeclarations) {
",2,0,0,1,3,0,0,0,0,2,28,7,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,305,"          boolean expectedConst = false;
",2,0,0,0,0,0,0,0,0,3,30,10,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,306,"          CodingConvention convention = compiler.getCodingConvention();
",2,0,0,1,2,0,4,2,0,8,61,9,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,307,"          if (NodeUtil.isConstantName(n)
",0,0,0,1,3,0,6,0,0,6,30,11,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,311,"            expectedConst = false;
",2,0,0,0,0,0,0,0,0,4,22,11,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,313,"            JSDocInfo info = null;
",2,0,0,0,0,0,0,2,0,4,22,11,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,314,"            Var var = t.getScope().getVar(n.getString());
",2,0,0,3,6,0,10,2,0,14,45,11,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,315,"            if (var != null) {
",2,1,0,1,3,0,0,0,0,3,18,11,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,316,"              info = var.getJSDocInfo();
",2,0,0,1,2,0,4,0,0,7,26,13,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,319,"            if (info != null && info.isConstant()) {
",2,2,0,2,5,0,4,0,0,8,40,11,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,322,"              expectedConst = false;
",2,0,0,0,0,0,0,0,0,4,22,13,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,326,"          if (expectedConst) {
",2,0,0,1,3,0,0,0,0,2,20,9,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,330,"            Preconditions.checkState(expectedConst == isConst,
",4,1,0,0,1,0,4,0,0,9,50,12,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,335,"        Boolean value = constantMap.get(name);
",2,0,0,1,2,0,6,2,0,10,38,7,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,336,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,7,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,337,"          constantMap.put(name, isConst);
",0,0,0,1,2,0,8,0,0,8,31,10,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,5,343,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,68,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,69,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,70,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,71,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,72,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,73,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,5,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,5,486,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,663,"            Preconditions.checkState(c.isStringKey());
",0,0,0,2,4,0,8,0,0,8,42,11,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,664,"            String key = c.getString();
",2,0,0,1,2,0,4,2,0,8,27,10,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,667,"            if (!c.isQuotedString() &&
",0,1,0,1,3,0,4,0,0,6,26,10,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,673,"              add(key);
",0,0,0,1,2,0,4,0,0,4,9,13,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,683,"            add("":"");
",0,0,0,1,2,0,2,0,0,3,9,11,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,684,"            addExpr(c.getFirstChild(), 1, Context.OTHER);
",4,0,0,2,4,0,6,0,0,10,45,11,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1531,"        if (!n.isEquivalentTo(n2, compareJsType, true)) {
",0,0,0,2,5,0,8,0,0,10,49,8,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1530,"           n = n.next, n2 = n2.next) {
",12,0,0,0,2,0,0,0,0,14,27,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,5,718,"      return toObjectType().getReferenceName().equals(
",0,0,0,2,5,1,6,0,0,6,48,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,5,482,"    for (ObjectType current = this;
",2,0,0,0,1,0,0,2,0,4,31,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,5,483,"         current != null;
",2,1,0,0,0,0,0,0,0,3,16,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,5,485,"      if (current.isEquivalentTo(prototype)) {
",0,0,0,2,5,0,6,0,0,6,40,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,5,484,"         current = current.getImplicitPrototype()) {
",2,0,0,1,4,0,4,0,0,7,43,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,5,489,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,656,"          if (c != first) {
",4,1,0,1,3,0,0,0,0,5,17,8,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,660,"          if (c.isGetterDef() || c.isSetterDef()) {
",0,1,0,3,7,0,8,0,0,9,41,8,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,208,"        if (!val.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,5,25,7,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,5,185,"              return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,201,"        Node val = ref.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,34,7,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,202,"        if (val == null) {
",2,1,0,1,3,0,0,0,0,3,18,7,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2056,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2812,"      return convention.isConstantKey(name);
",0,0,0,1,2,1,6,0,0,6,38,8,0.02703,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,5,197,"        if (!Character.isJavaIdentifierPart(s.charAt(i))) {
",0,0,0,3,7,0,10,0,0,11,51,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,682,"        validateObjectLitStringKey(n);
",0,0,0,1,2,0,4,0,0,4,30,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,683,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,723,"    validateNodeType(Token.STRING_KEY, n);
",4,0,0,1,2,0,4,0,0,8,38,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,724,"    validateChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,25,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,725,"    validateObjectLiteralKeyName(n);
",0,0,0,1,2,0,4,0,0,4,32,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,726,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,727,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,2242,"    return this.getType() == Token.GETTER_DEF;
",4,1,0,1,2,1,2,0,0,7,42,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,2330,"    return this.getType() == Token.SETTER_DEF;
",4,1,0,1,2,1,2,0,0,7,42,4,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,669,"      validateObjectLitKey(c);
",0,0,0,1,2,0,4,0,0,4,24,7,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,674,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,730,"    if (n.isQuotedString()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,738,"      validateNonEmptyString(n);
",0,0,0,1,2,0,4,0,0,4,26,7,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,740,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,912,"        } else if (el.isSetter()) {
",0,0,0,2,6,0,4,0,0,4,27,9,0.02222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1528,"      for (n = first, n2 = node.first;
",10,0,0,0,1,0,0,0,0,12,32,6,0.02174,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1529,"           n != null;
",2,1,0,0,0,0,0,0,0,3,10,6,0.02174,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1695,"        result.last.next = n2clone;
",8,0,0,0,0,0,0,0,0,9,27,8,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,892,"        if (config.languageMode == LanguageMode.ECMASCRIPT3) {
",8,1,0,1,3,0,0,0,0,9,54,7,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,902,"        Node key = transformAsString(el.getLeft());
",2,0,0,2,4,0,6,2,0,10,43,7,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,903,"        key.setType(Token.STRING_KEY);
",4,0,0,1,2,0,4,0,0,8,30,8,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,905,"        Node value = transform(el.getRight());
",2,0,0,2,4,0,6,2,0,10,38,7,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,906,"        if (el.isGetter()) {
",0,0,0,2,5,0,4,0,0,4,20,8,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,919,"        key.addChildToFront(value);
",0,0,0,1,2,0,6,0,0,6,27,8,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,920,"        node.addChildToBack(key);
",0,0,0,1,2,0,6,0,0,6,25,8,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,921,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,5,149,"        Node value = key.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,33,7,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,5,150,"        normalizeObjectLiteralKeyAnnotations(objlit, key, value);
",0,0,0,1,2,0,8,0,0,8,57,8,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,5,207,"      Preconditions.checkState(objlit.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,47,6,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,5,208,"      if (key.getJSDocInfo() != null &&
",0,2,0,1,3,0,4,0,0,6,33,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,5,212,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02174,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,238,"      return getBooleanProp(QUOTED_PROP);
",0,0,0,1,2,1,4,0,0,4,35,6,0.02128,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1692,"      Node n2clone = n2.cloneTree();
",2,0,0,1,2,0,4,2,0,8,30,6,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1693,"      n2clone.parent = result;
",6,0,0,0,0,0,0,0,0,7,24,6,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1694,"      if (result.last != null) {
",4,1,0,1,3,0,0,0,0,5,26,6,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1697,"      if (result.first == null) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1698,"        result.first = n2clone;
",6,0,0,0,0,0,0,0,0,7,23,8,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1700,"      result.last = n2clone;
",6,0,0,0,0,0,0,0,0,7,22,6,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,524,"    this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,4,0.02000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,525,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,640,"      newChild.parent = this;
",4,0,0,0,0,0,0,0,0,5,23,6,0.02000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,641,"      newChild.next = first;
",6,0,0,0,0,0,0,0,0,7,22,6,0.02000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,642,"      first = newChild;
",4,0,0,0,0,0,0,0,0,5,17,6,0.02000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,643,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1472,"    return isEquivalentTo(node, false, true);
",0,0,0,1,2,1,4,0,0,6,41,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,1557,"      return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,7,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,5,289,"      options.checkTypes = true;
",4,0,0,0,0,0,0,0,0,6,26,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,482,"      validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,7,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,173,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,128,"        validateReturn(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,129,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,479,"    validateNodeType(Token.RETURN, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,480,"    validateMaximumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,481,"    if (n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,5,484,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,5,2611,"      return !n.isFunction();
",0,0,0,1,2,1,4,0,0,5,23,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,171,"        add(""return"");
",0,0,0,1,2,1,2,0,0,3,14,6,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,172,"        if (childCount == 1) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,177,"        cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,6,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,5,178,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,48,"class InlineObjectLiterals implements CompilerPass {
",2,0,0,0,1,0,0,2,0,4,52,1,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,92,"        ReferenceCollection referenceInfo = referenceMap.getReferences(v);
",2,0,0,1,2,0,6,2,0,10,66,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,94,"        if (isInlinableObject(referenceInfo.references)) {
",4,0,0,2,5,0,2,0,0,6,50,8,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,106,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,156,"      boolean ret = false;
",2,0,0,0,0,0,0,0,0,3,20,6,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,157,"      Set<String> validProperties = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,48,5,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,158,"      for (Reference ref : refs) {
",4,0,0,1,3,0,0,2,0,6,28,5,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,159,"        Node name = ref.getNode();
",2,0,0,1,2,0,4,2,0,8,26,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,160,"        Node parent = ref.getParent();
",2,0,0,1,2,0,4,2,0,8,30,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,161,"        Node gramps = ref.getGrandparent();
",2,0,0,1,2,0,4,2,0,8,35,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,166,"        if (parent.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,25,8,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,197,"        if (!isVarOrAssignExprLhs(name)) {
",0,0,0,2,5,0,4,0,0,5,34,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,256,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,5,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,5,257,"      return parent.isVar() ||
",0,1,0,1,2,1,4,0,0,5,24,5,0.01786,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1618,"    Node child = first;
",4,0,0,0,0,0,0,2,0,6,19,4,0.01724,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1619,"    if (child != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.01724,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1620,"      removeChild(child);
",0,0,0,1,2,0,4,0,0,4,19,7,0.01724,0,-1
defect4j,closure,com/google/javascript/rhino/Node,5,1622,"    return child;
",2,0,0,0,0,1,0,0,0,2,13,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,397,"        return references.get(0);
",0,0,0,1,2,1,4,0,0,4,25,8,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,5,979,"        node.addChildToBack(transform(statementNode.getReturnValue()));
",0,0,0,3,6,0,10,0,0,10,63,8,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,326,"        if (!initBlock.provablyExecutesBefore(
",0,0,0,0,2,0,4,0,0,5,38,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,363,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,707,"      for (currentBlock = thatBlock;
",4,0,0,0,1,0,0,0,0,5,30,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,708,"           currentBlock != null && currentBlock != this;
",4,3,0,0,0,0,0,0,0,7,45,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,715,"      if (currentBlock == this) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,716,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,323,"      Preconditions.checkState(references.get(0).isDeclaration());
",0,0,0,3,6,0,10,0,0,10,60,6,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,324,"      BasicBlock initBlock = init.getBasicBlock();
",2,0,0,1,2,0,4,2,0,8,44,5,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,325,"      for (int i = 1; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,332,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,5,607,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,5,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,367,"        registerMismatch(rightType, leftType, null);
",0,0,0,1,2,0,6,0,0,7,44,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,839,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,406,"        registerMismatch(rightType, leftType, null);
",0,0,0,1,2,0,6,0,0,7,44,8,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,145,"    return forAnnotations ? ""Object"" : getReferenceName();
",2,0,0,1,2,1,2,0,0,5,54,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,534,"        info = parent.getJSDocInfo();
",2,0,0,1,2,0,4,0,0,7,29,8,0.13333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1856,"            hasParams = false;
",2,0,0,0,0,0,0,0,0,4,18,12,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,6,282,"      if (input == null)
",2,1,0,1,2,0,0,0,0,3,18,5,0.10526,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,6,285,"        return input.getName();
",0,0,0,1,2,1,4,0,0,4,23,7,0.10526,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,577,"          report(JSError.make(sourceName, n, DUP_VAR_DECLARATION,
",0,0,0,0,2,0,12,0,0,12,55,11,0.10526,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,532,"      JSDocInfo info = n.getJSDocInfo();
",2,0,0,1,2,0,4,2,0,8,34,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,533,"      if (info == null) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,536,"      allowDupe =
",2,0,0,0,0,0,0,0,0,3,11,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,677,"      FunctionType fnTypeA = found.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,51,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,678,"      FunctionType fnTypeB = required.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,54,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,679,"      Iterator<Node> paramItA = fnTypeA.getParameters().iterator();
",2,0,0,2,4,0,6,4,0,12,61,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,680,"      Iterator<Node> paramItB = fnTypeB.getParameters().iterator();
",2,0,0,2,4,0,6,4,0,12,61,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,681,"      while (paramItA.hasNext() && paramItB.hasNext()) {
",0,1,0,3,7,0,8,0,0,9,50,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,686,"      registerIfMismatch(
",0,0,0,0,1,0,2,0,0,2,19,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,693,"    if (found != null && required != null &&
",4,4,0,0,1,0,0,0,0,8,40,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,697,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,386,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.07407,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,366,"      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
",0,3,0,7,15,0,16,0,0,19,115,6,0.07273,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,574,"        if (!(allowDupe ||
",2,2,0,0,2,0,0,0,0,5,18,8,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,160,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,388,"                    type = createJSTypeExpression(
",2,0,0,0,1,0,2,0,0,5,30,15,0.05333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,6,436,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.05263,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,928,"        b.append(""new:"");
",0,0,0,1,2,0,4,0,0,5,17,9,0.04000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,169,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1066,"      allowedValueType =
",2,0,0,0,0,0,0,0,0,3,18,6,0.03509,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,87,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.03478,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,168,"    if (JSType.isSubtypeHelper(this, that)) {
",0,0,0,2,5,0,6,0,0,6,41,5,0.03448,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,201,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.03390,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,6,583,"    return ImmutableSet.of();
",0,0,0,1,2,1,4,0,0,4,25,5,0.03361,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,116,"    elements.add(name);
",0,0,0,1,2,0,6,0,0,6,19,5,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,117,"    return defineDeclaredProperty(name, elementsType, definingNode);
",0,0,0,1,2,1,8,0,0,8,64,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,6,2117,"    return errorManager.getWarningCount();
",0,0,0,1,2,1,4,0,0,4,38,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1036,"              enumType.defineElement(keyName, key);
",0,0,0,1,2,0,8,0,0,8,37,15,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,6,114,"    return ENUM_KEY_PATTERN.matcher(key).matches();
",0,0,0,2,4,1,8,0,0,8,47,5,0.03306,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1869,"    EnumType valueEnumType = valueType.toMaybeEnumType();
",2,0,0,1,2,0,4,2,0,8,53,4,0.03279,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1870,"    JSType valueEnumPrimitiveType =
",2,0,0,0,0,0,0,2,0,4,31,4,0.03279,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1872,"    validator.expectCanAssignTo(t, value, valueEnumPrimitiveType,
",0,0,0,0,1,0,10,0,0,10,61,5,0.03279,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1875,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03279,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1027,"            String keyName = NodeUtil.getStringValue(key);
",2,0,0,1,2,0,6,2,0,10,46,11,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1028,"            if (keyName == null) {
",2,1,0,1,3,0,0,0,0,3,22,11,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1032,"            } else if (!codingConvention.isValidEnumKey(keyName)) {
",0,0,0,2,6,0,6,0,0,7,55,12,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1038,"            key = key.getNext();
",2,0,0,1,2,0,4,0,0,7,20,11,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1039,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03226,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,251,"    return primitiveType;
",2,0,0,0,0,1,0,0,0,2,21,4,0.03175,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1864,"    JSType valueType = getJSType(value);
",2,0,0,1,2,0,4,2,0,8,36,4,0.03175,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1865,"    if (!valueType.isEnumType()) {
",0,0,0,2,5,0,4,0,0,5,30,4,0.03175,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1293,"            return rValue.getJSType();
",0,0,0,1,2,1,4,0,0,4,26,14,0.03101,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,138,"    return that.isEquivalentTo(getNativeType(JSTypeNative.OBJECT_TYPE)) ||
",4,1,0,2,4,1,6,0,0,11,70,4,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,646,"        type = createEnumTypeFromNodes(objectLit, lValueName, info, lValue);
",2,0,0,1,2,0,10,0,0,13,68,7,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,647,"        createdEnumType = true;
",2,0,0,0,0,0,0,0,0,4,23,7,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1025,"          Node key = rValue.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,9,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1026,"          while (key != null) {
",2,1,0,1,3,0,0,0,0,3,21,9,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1150,"          Node initialValue = newVar.getInitialValue();
",2,0,0,1,2,0,4,2,0,8,45,9,0.02963,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1151,"          boolean isValidValue = initialValue != null &&
",4,2,0,0,0,0,0,0,0,6,46,10,0.02963,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1154,"          if (!isValidValue) {
",2,0,0,1,3,0,0,0,0,3,20,9,0.02963,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1292,"          if (rValue != null && rValue.isObjectLit()) {
",2,2,0,2,5,0,4,0,0,8,45,11,0.02963,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,92,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,6,741,"      return scope;
",2,0,0,0,0,1,0,0,0,2,13,6,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,395,"            registry.identifyNonNullableName(nameNode.getQualifiedName());
",0,0,0,2,4,0,8,0,0,8,62,12,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1044,"        typeRegistry.declareType(name, enumType.getElementsType());
",0,0,0,2,4,0,10,0,0,10,59,8,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,6,1118,"    return getType(TYPEFIELD_ENUM);
",0,0,0,1,2,1,4,0,0,4,31,5,0.02899,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,281,"    primitiveType = primitiveType.resolve(t, scope);
",2,0,0,1,2,0,8,0,0,11,48,4,0.02899,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,282,"    primitiveObjectType = ObjectType.cast(primitiveType);
",2,0,0,1,2,0,6,0,0,9,53,4,0.02899,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,283,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02899,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,97,"    return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);
",4,0,0,1,2,1,4,0,0,8,62,5,0.02899,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,180,"    elementsType = (EnumElementType) elementsType.resolve(t, scope);
",2,0,0,2,4,0,8,2,0,13,64,4,0.02899,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,181,"    return super.resolveInternal(t, scope);
",6,0,0,1,2,1,0,0,0,6,39,5,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1006,"      Preconditions.checkNotNull(info);
",0,0,0,1,2,0,6,0,0,6,33,6,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1007,"      Preconditions.checkState(info.hasEnumParameterType());
",0,0,0,2,4,0,8,0,0,8,54,6,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1009,"      EnumType enumType = null;
",2,0,0,0,0,0,0,2,0,4,25,5,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1010,"      if (rValue != null && rValue.isQualifiedName()) {
",2,2,0,2,5,0,4,0,0,8,49,5,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1018,"      if (enumType == null) {
",2,1,0,1,3,0,0,0,0,3,23,5,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1019,"        JSType elementsType =
",2,0,0,0,0,0,0,2,0,4,21,7,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1021,"        enumType = typeRegistry.createEnumType(name, rValue, elementsType);
",2,0,0,1,2,0,10,0,0,13,67,7,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1023,"        if (rValue != null && rValue.isObjectLit()) {
",2,2,0,2,5,0,4,0,0,8,45,7,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1043,"      if (name != null && scope.isGlobal()) {
",2,2,0,2,5,0,4,0,0,8,39,5,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1047,"      return enumType;
",2,0,0,0,0,1,0,0,0,2,16,5,0.02899,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1093,"        validator.expectCanAssignToPropertyOf(
",0,0,0,0,1,0,4,0,0,4,38,9,0.02857,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1040,"    return new EnumType(this, name, source, elementsType);
",6,0,0,1,2,1,0,2,0,8,54,5,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,71,"    super(registry);
",2,0,0,1,2,0,0,0,0,2,16,4,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,72,"    this.primitiveType = elementType;
",4,0,0,0,0,0,0,0,0,5,33,4,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,73,"    this.primitiveObjectType = elementType.toObjectType();
",2,0,0,1,2,0,4,0,0,7,54,4,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,74,"    this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumElementType,6,75,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,78,"    super(registry, ""enum{"" + name + ""}"", null);
",4,1,0,2,4,0,0,0,0,8,44,3,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,68,"  private final Set<String> elements = new HashSet<String>();
",2,0,0,1,2,2,0,8,0,12,59,2,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,79,"    this.source = source;
",4,0,0,0,0,0,0,0,0,5,21,4,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,80,"    this.elementsType = new EnumElementType(registry, elementsType, name);
",8,0,0,1,2,0,0,2,0,11,70,4,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,81,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,124,"    return elementsType;
",2,0,0,0,0,1,0,0,0,2,20,4,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/EnumType,6,56,"public class EnumType extends PrototypeObjectType {
",2,0,0,0,1,1,0,2,0,5,51,1,0.02817,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,6,1037,"    setType(type, TYPEFIELD_ENUM);
",0,0,0,1,2,0,6,0,0,6,30,5,0.02516,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,6,1038,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02516,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,6,534,"    if (type != null && !hasAnyTypeRelatedTags()) {
",2,2,0,2,5,0,2,0,0,8,47,4,0.02516,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,6,535,"      currentInfo.setEnumParameterType(type);
",0,0,0,1,2,0,6,0,0,6,39,7,0.02516,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,6,536,"      populated = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.02516,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,6,537,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,382,"                  token = next();
",2,0,0,1,2,0,2,0,0,5,15,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,383,"                  lineno = stream.getLineno();
",2,0,0,1,2,0,4,0,0,7,28,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,384,"                  charno = stream.getCharno();
",2,0,0,1,2,0,4,0,0,7,28,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,386,"                  type = null;
",2,0,0,0,0,0,0,0,0,3,12,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,387,"                  if (token != JsDocToken.EOL && token != JsDocToken.EOC) {
",12,3,0,1,3,0,0,0,0,15,57,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,392,"                  if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,395,"                  if (!jsdocBuilder.recordEnumParameterType(type)) {
",0,0,0,2,5,0,6,0,0,7,50,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,399,"                  token = eatTokensUntilEOL(token);
",2,0,0,1,2,0,4,0,0,7,33,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,400,"                  continue retry;
",2,0,0,0,0,0,0,0,0,2,15,13,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,6,735,"      String rootVarName = fnName.substring(0, dotIndex);
",2,0,0,1,2,0,6,2,0,10,51,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,6,736,"      Var rootVar = scope.getVar(rootVarName);
",2,0,0,1,2,0,6,2,0,10,40,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,6,737,"      if (rootVar != null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,927,"      if (isConstructor()) {
",0,0,0,2,5,0,2,0,0,2,22,7,0.02353,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,932,"      b.append(typeOfThis.toStringHelper(forAnnotations));
",0,0,0,2,4,0,10,0,0,10,52,7,0.02353,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,2829,"        fnInfo = parent.getJSDocInfo();
",2,0,0,1,2,0,4,0,0,7,31,8,0.02162,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,6,72,"            info = NodeUtil.getFunctionJSDocInfo(rhs);
",2,0,0,1,2,0,6,0,0,9,42,14,0.02139,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1074,"      ensureTyped(t, key, rightType);
",0,0,0,1,2,0,8,0,0,8,31,7,0.01942,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1481,"    Preconditions.checkNotNull(name);
",0,0,0,1,2,0,6,0,0,6,33,5,0.01932,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1482,"    nonNullableTypeNames.add(name);
",0,0,0,1,2,0,6,0,0,6,31,5,0.01932,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1483,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01932,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1089,"      String property = NodeUtil.getObjectLitKeyName(key);
",2,0,0,1,2,0,6,2,0,10,52,6,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1090,"      if (type.hasProperty(property) &&
",0,1,0,1,3,0,6,0,0,7,33,6,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1097,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1051,"    Node rvalue = key.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1052,"    JSType rightType = NodeUtil.getObjectLitKeyTypeFromValueType(
",2,0,0,0,1,0,4,2,0,8,61,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1054,"    if (rightType == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1058,"    Node owner = objlit;
",4,0,0,0,0,0,0,2,0,6,20,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1062,"    JSType keyType = getJSType(key);
",2,0,0,1,2,0,4,2,0,8,32,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1064,"    JSType allowedValueType = keyType;
",4,0,0,0,0,0,0,2,0,6,34,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1065,"    if (allowedValueType.isEnumElementType()) {
",0,0,0,2,5,0,4,0,0,4,43,5,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1070,"    boolean valid = validator.expectCanAssignToPropertyOf(t, key,
",2,0,0,0,1,0,8,0,0,10,61,5,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1073,"    if (valid) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1085,"    JSType objlitType = getJSType(objlit);
",2,0,0,1,2,0,4,2,0,8,38,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1086,"    ObjectType type = ObjectType.cast(
",2,0,0,0,1,0,4,2,0,8,34,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1088,"    if (type != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.01860,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,363,"        name = n.getFirstChild().getQualifiedName();
",2,0,0,2,4,0,6,0,0,9,44,9,0.01852,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1568,"        return getNativeType(UNKNOWN_TYPE);
",0,0,0,1,2,1,4,0,0,4,35,6,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1982,"      return newNode(Token.EMPTY);
",4,0,0,1,2,1,2,0,0,6,28,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,674,"    mismatches.add(new TypeMismatch(found, required, error));
",6,0,0,2,4,0,4,2,0,12,57,5,0.01657,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,675,"    if (found.isFunctionType() &&
",0,1,0,1,3,0,4,0,0,5,29,4,0.01657,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,689,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01657,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,815,"    TypeMismatch(JSType a, JSType b, JSError src) {
",8,0,0,1,3,0,0,6,0,14,47,3,0.01657,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,816,"      this.typeA = a;
",4,0,0,0,0,0,0,0,0,5,15,5,0.01657,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,817,"      this.typeB = b;
",4,0,0,0,0,0,0,0,0,5,15,5,0.01657,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,818,"      this.src = src;
",4,0,0,0,0,0,0,0,0,5,15,5,0.01657,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,819,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01657,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,603,"      name = name.substring(0, name.lastIndexOf('.'));
",2,0,0,2,4,0,8,0,0,12,48,6,0.01626,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,604,"      namespaces.add(name);
",0,0,0,1,2,0,6,0,0,6,21,7,0.01626,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,513,"        typeable = false;
",2,0,0,0,0,0,0,0,0,4,17,5,0.01600,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,514,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01600,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,920,"    setPrettyPrint(false);
",0,0,0,1,2,0,2,0,0,3,22,5,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,922,"    StringBuilder b = new StringBuilder(32);
",2,0,0,1,2,0,0,4,0,6,40,4,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,923,"    b.append(""function ("");
",0,0,0,1,3,0,4,0,0,5,23,5,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,924,"    int paramNum = call.parameters.getChildCount();
",6,0,0,1,2,0,2,0,0,8,47,5,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,925,"    boolean hasKnownTypeOfThis = !(typeOfThis instanceof UnknownType);
",4,0,0,1,2,0,0,2,0,7,66,5,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,926,"    if (hasKnownTypeOfThis) {
",2,0,0,1,3,0,0,0,0,2,25,4,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,934,"    if (paramNum > 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,948,"    b.append(""): "");
",0,0,0,1,3,0,4,0,0,5,16,5,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,949,"    b.append(call.returnType.toStringHelper(forAnnotations));
",4,0,0,2,4,0,8,0,0,12,57,5,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,951,"    setPrettyPrint(true);
",0,0,0,1,2,0,2,0,0,3,21,5,0.01569,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,952,"    return b.toString();
",0,0,0,1,2,1,4,0,0,4,20,5,0.01569,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,814,"            visitObjLitKey(t, key, n);
",0,0,0,1,2,0,8,0,0,8,26,10,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,815,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,6,1041,"    if (objlit.isFromExterns()) {
",0,0,0,2,5,0,4,0,0,4,29,5,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,240,"        if (t.inGlobalScope() &&
",0,1,0,1,3,0,4,0,0,5,24,5,0.01509,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1676,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,6,82,"    Preconditions.checkArgument(lastLink.nextLink == null);
",4,1,0,1,2,0,4,0,0,9,55,5,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,6,83,"    this.nextLink = lastLink;
",4,0,0,0,0,0,0,0,0,5,25,4,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,6,84,"    lastLink.firstLink = this.firstLink;
",6,0,0,0,0,0,0,0,0,7,36,4,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,6,85,"    return lastLink;
",2,0,0,0,0,1,0,0,0,2,16,4,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,6,92,"    return firstLink;
",2,0,0,0,0,1,0,0,0,2,17,4,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,687,"          boolean inferred = keyType == null;
",4,1,0,0,0,0,0,0,0,5,35,10,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,688,"          defineSlot(keyNode, objLit, qualifiedName, keyType, inferred);
",0,0,0,1,2,0,12,0,0,12,62,10,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,689,"        } else if (keyType != null) {
",2,1,0,1,4,0,0,0,0,3,29,8,0.01471,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,6,915,"    if (!isPrettyPrint() ||
",0,1,0,1,3,0,2,0,0,4,23,4,0.01449,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,6,405,"    return prettyPrint;
",2,0,0,0,0,1,0,0,0,2,19,4,0.01449,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,3110,"          return ownerName + ""."" + getObjectLitKeyName(lValue);
",2,1,0,1,2,1,4,0,0,8,53,10,0.01413,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,3108,"        String ownerName = getBestLValueName(owner);
",2,0,0,1,2,0,4,2,0,8,44,8,0.01404,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,3109,"        if (ownerName != null) {
",2,1,0,1,3,0,0,0,0,3,24,8,0.01404,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,2082,"      switch (key.getType()) {
",0,0,0,2,5,0,4,0,0,4,24,7,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,2081,"    if (valueType != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.01384,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,2105,"    return valueType;
",2,0,0,0,0,1,0,0,0,2,17,4,0.01384,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,143,"      .put(""isDefAndNotNull"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,65,13,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,120,"    super(convention, typeRegistry);
",4,0,0,1,2,0,0,0,0,4,32,4,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,47,"  private final Visitor<JSType> restrictToArrayVisitor =
",2,0,0,0,0,2,0,4,0,8,54,2,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,66,"  private final Visitor<JSType> restrictToNotArrayVisitor =
",2,0,0,0,0,2,0,4,0,8,57,2,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,78,"  private final Visitor<JSType> restrictToObjectVisitor =
",2,0,0,0,0,2,0,4,0,8,55,2,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,99,"  private final Visitor<JSType> restrictToNotObjectVisitor =
",2,0,0,0,0,2,0,4,0,8,58,2,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,121,"    this.restricters =
",2,0,0,0,0,0,0,0,0,3,18,4,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,203,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,190,"      .put(""isObject"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,7,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,154,"      .put(""isString"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,12,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,172,"      .put(""isFunction"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,60,9,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,160,"      .put(""isBoolean"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,59,11,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,133,"      .put(""isNull"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,56,14,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,79,"      new RestrictByTrueTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,41,5,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,123,"      .put(""isDef"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,55,15,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,67,"      new RestrictByFalseTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,42,5,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,166,"      .put(""isNumber"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,10,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,100,"      new RestrictByFalseTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,42,5,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,178,"      .put(""isArray"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,57,8,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,6,48,"      new RestrictByTrueTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,41,5,0.01375,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,2826,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,6,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,2827,"      if (parent.isAssign()) {
",0,0,0,2,5,0,4,0,0,4,24,7,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,367,"        if (parent.getBooleanProp(Node.IS_NAMESPACE)) {
",4,0,0,2,5,0,4,0,0,8,47,9,0.01365,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,370,"          ProvidedName pn = providedNames.get(name);
",2,0,0,1,2,0,6,2,0,10,42,10,0.01365,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,371,"          if (pn != null) {
",2,1,0,1,3,0,0,0,0,3,17,10,0.01365,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1609,"          Node contextNode = current.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,43,7,0.01351,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1610,"          thisType =
",2,0,0,0,0,0,0,0,0,3,10,7,0.01351,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1615,"          if (thisType == null) {
",2,1,0,1,3,0,0,0,0,3,23,7,0.01351,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1625,"          isConstructor = current.getType() == Token.NEW;
",6,1,0,1,2,0,4,0,0,12,47,7,0.01351,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,6,1626,"          current = current.getNext();
",2,0,0,1,2,0,4,0,0,7,28,7,0.01351,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,6,585,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01351,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,6,724,"      scope = traverse(name.getFirstChild(), scope);
",2,0,0,2,4,0,8,0,0,11,46,6,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,674,"        Node value = keyNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,37,7,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,675,"        String memberName = NodeUtil.getObjectLitKeyName(keyNode);
",2,0,0,1,2,0,6,2,0,10,58,7,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,676,"        JSDocInfo info = keyNode.getJSDocInfo();
",2,0,0,1,2,0,4,2,0,8,40,7,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,677,"        JSType valueType =
",2,0,0,0,0,0,0,2,0,4,18,7,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,679,"        JSType keyType =  objLitType.isEnumType() ?
",2,0,0,1,2,0,4,2,0,8,43,7,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,685,"        String qualifiedName = NodeUtil.getBestLValueName(keyNode);
",2,0,0,1,2,0,6,2,0,10,59,7,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,686,"        if (qualifiedName != null) {
",2,1,0,1,3,0,0,0,0,3,28,7,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,693,"        if (keyType != null && objLitType != null && declareOnOwner) {
",6,4,0,1,3,0,0,0,0,10,62,7,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,673,"           keyNode = keyNode.getNext()) {
",2,0,0,1,4,0,4,0,0,7,30,5,0.01338,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,6,203,"    return type.key + "". "" + description + "" at "" +
",6,1,0,0,0,1,0,0,0,9,47,4,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1836,"          if (match(JsDocToken.COLON)) {
",4,0,0,2,5,0,2,0,0,6,30,11,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1837,"            next();
",0,0,0,1,2,0,2,0,0,2,7,13,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1838,"            skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,13,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1839,"            Node contextType = wrapNode(
",2,0,0,0,1,0,2,2,0,6,28,12,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1842,"            if (contextType == null) {
",2,1,0,1,3,0,0,0,0,3,26,12,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1846,"            functionType.addChildToFront(contextType);
",0,0,0,1,2,0,6,0,0,6,42,13,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1847,"          } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1851,"          if (match(JsDocToken.COMMA)) {
",4,0,0,2,5,0,2,0,0,6,30,11,0.01333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,6,443,"  abstract class RestrictByTrueTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,48,2,0.01320,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,6,491,"  abstract class RestrictByFalseTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,49,2,0.01316,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,668,"    found = found.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,0,0,7,45,4,0.01314,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,669,"    required = required.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,0,0,7,51,4,0.01314,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,6,670,"    if (found.canAssignTo(required) || required.canAssignTo(found)) {
",0,1,0,3,7,0,12,0,0,13,65,4,0.01314,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,2067,"    switch (key.getType()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.01290,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,2071,"        return key.getString();
",0,0,0,1,2,1,4,0,0,4,23,6,0.01290,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,3106,"      Node owner = getBestLValue(lValue.getParent());
",2,0,0,2,4,0,6,2,0,10,47,6,0.01290,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,3107,"      if (owner != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.01290,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,6,649,"          return objectType.defineDeclaredProperty(
",0,0,0,0,1,1,4,0,0,4,41,11,0.01242,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,251,"        if (n.getFirstChild().isName() &&
",0,1,0,2,5,0,6,0,0,7,33,5,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,6,363,"  abstract class RestrictByTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,44,2,0.01173,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,234,"        handleTypedefDefinition(t, n, parent);
",0,0,0,1,2,0,8,0,0,8,38,6,0.01130,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,235,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01130,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,340,"    JSDocInfo info = n.getFirstChild().getJSDocInfo();
",2,0,0,2,4,0,6,2,0,10,50,4,0.01130,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,341,"    if (t.inGlobalScope() && info != null && info.hasTypedefType()) {
",2,3,0,3,7,0,8,0,0,13,65,4,0.01130,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,350,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01130,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,361,"      } else if (n.isAssign() &&
",0,1,0,1,4,0,4,0,0,5,26,7,0.01064,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,6,70,"          Node rhs = current.getLastChild();
",2,0,0,1,2,0,4,2,0,8,34,12,0.01042,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,6,71,"          if (rhs.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,23,13,0.01042,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,358,"      String name = null;
",2,0,0,0,0,0,0,2,0,4,19,6,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,359,"      if (n.isName() && parent.isVar()) {
",0,1,0,3,7,0,8,0,0,9,35,6,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,366,"      if (name != null) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,230,"        handleCandidateProvideDefinition(t, n, parent);
",0,0,0,1,2,0,8,0,0,8,47,6,0.00998,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,231,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00998,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,357,"    if (t.inGlobalScope()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.00998,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,377,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00998,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,149,"      for (UnrecognizedRequire r : unrecognizedRequires) {
",4,0,0,1,3,0,0,2,0,6,52,6,0.00980,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,125,"      CheckLevel requiresLevel) {
",2,0,0,0,2,0,0,2,0,4,27,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,114,"  private final Map<String, ProvidedName> providedNames =
",2,0,0,0,0,2,0,6,0,10,55,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,117,"  private final List<UnrecognizedRequire> unrecognizedRequires =
",2,0,0,0,0,2,0,4,0,8,62,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,119,"  private final Set<String> exportedVariables = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,64,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,126,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,127,"    this.preprocessorSymbolTable = preprocessorSymbolTable;
",4,0,0,0,0,0,0,0,0,5,55,4,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,128,"    this.moduleGraph = compiler.getModuleGraph();
",2,0,0,1,2,0,4,0,0,7,45,4,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,129,"    this.requiresLevel = requiresLevel;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,132,"    providedNames.put(GOOG,
",0,0,0,0,1,0,6,0,0,6,23,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,134,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,45,"  static final DiagnosticType NULL_ARGUMENT_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,71,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,49,"  static final DiagnosticType EXPECTED_OBJECTLIT_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,76,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,53,"  static final DiagnosticType EXPECTED_STRING_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,73,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,57,"  static final DiagnosticType INVALID_ARGUMENT_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,74,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,61,"  static final DiagnosticType INVALID_STYLE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,71,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,65,"  static final DiagnosticType TOO_MANY_ARGUMENTS_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,76,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,69,"  static final DiagnosticType DUPLICATE_NAMESPACE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,77,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,73,"  static final DiagnosticType FUNCTION_NAMESPACE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,76,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,77,"  static final DiagnosticType MISSING_PROVIDE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,73,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,81,"  static final DiagnosticType LATE_PROVIDE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,70,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,85,"  static final DiagnosticType INVALID_PROVIDE_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,73,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,89,"  static final DiagnosticType XMODULE_REQUIRE_ERROR = DiagnosticType.warning(
",2,0,0,0,1,2,4,2,0,10,75,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,94,"  static final DiagnosticType NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR =
",2,0,0,0,0,2,0,2,0,6,77,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,99,"  static final DiagnosticType INVALID_CSS_RENAMING_MAP = DiagnosticType.warning(
",2,0,0,0,1,2,4,2,0,10,78,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,103,"  static final DiagnosticType BASE_CLASS_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,68,2,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,142,"    new NodeTraversal(compiler, this).traverse(root);
",2,0,0,2,4,0,4,2,0,8,49,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,144,"    for (ProvidedName pn : providedNames.values()) {
",2,0,0,2,5,0,4,2,0,8,48,4,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,145,"      pn.replace();
",0,0,0,1,2,0,4,0,0,4,13,7,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,146,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,148,"    if (requiresLevel.isOn()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,163,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,174,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,259,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,789,"        boolean explicit) {
",2,0,0,0,2,0,0,0,0,2,19,4,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,776,"    private Node explicitNode = null;
",2,0,0,0,0,1,0,2,0,5,33,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,777,"    private JSModule explicitModule = null;
",2,0,0,0,0,1,0,2,0,5,39,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,780,"    private Node candidateDefinition = null;
",2,0,0,0,0,1,0,2,0,5,40,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,783,"    private JSModule minimumModule = null;
",2,0,0,0,0,1,0,2,0,5,38,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,786,"    private Node replacementNode = null;
",2,0,0,0,0,1,0,2,0,5,36,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,790,"      Preconditions.checkArgument(
",0,0,0,0,1,0,4,0,0,4,28,6,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,793,"      this.namespace = namespace;
",4,0,0,0,0,0,0,0,0,5,27,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,794,"      this.firstNode = node;
",4,0,0,0,0,0,0,0,0,5,22,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,795,"      this.firstModule = module;
",4,0,0,0,0,0,0,0,0,5,26,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,797,"      addProvide(node, module, explicit);
",0,0,0,1,2,0,8,0,0,8,35,6,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,798,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,804,"      if (explicit) {
",2,0,0,1,3,0,0,0,0,2,15,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,810,"      updateMinimumModule(module);
",0,0,0,1,2,0,4,0,0,4,28,6,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,811,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,835,"      if (minimumModule == null) {
",2,1,0,1,3,0,0,0,0,3,28,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,836,"        minimumModule = newModule;
",4,0,0,0,0,0,0,0,0,5,26,7,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,846,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,856,"      if (firstNode == null) {
",2,1,0,1,3,0,0,0,0,3,24,5,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,858,"        replacementNode = candidateDefinition;
",4,0,0,0,0,0,0,0,0,5,38,7,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,6,859,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00978,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,6,3077,"        return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,6,0.00875,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1722,"      CollectProperties(JSType thisType) {
",4,0,0,1,3,0,0,2,0,6,36,4,0.00857,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1723,"        this.thisType = thisType;
",4,0,0,0,0,0,0,0,0,5,25,6,0.00857,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1724,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00857,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1728,"        if (n.isExprResult()) {
",0,0,0,2,5,0,4,0,0,4,23,7,0.00857,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,1740,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00857,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,6,242,"          NodeTraversal.traverse(compiler, functionNode.getLastChild(),
",0,0,0,1,3,0,10,0,0,10,61,11,0.00857,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1832,"        String tokenStr = stream.getString();
",2,0,0,1,2,0,4,2,0,8,37,8,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,6,1833,"        boolean isThis = ""this"".equals(tokenStr);
",2,0,0,1,2,0,4,0,0,7,41,9,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,612,"        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
",2,0,0,1,2,0,4,2,0,8,54,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,613,"        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
",4,1,0,1,2,1,6,0,0,11,71,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,591,"      return matchesExpectation(""boolean"") ? getNativeType(BOOLEAN_TYPE) : null;
",0,0,0,2,4,1,6,0,0,9,74,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/BooleanType,7,118,"    return visitor.caseBooleanType();
",0,0,0,1,2,1,4,0,0,4,33,5,0.40000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,611,"      if (value.equals(""function"")) {
",0,0,0,2,5,0,4,0,0,5,31,6,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,336,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.18182,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,395,"            restricted = restrictedAlternate.getLeastSupertype(restricted);
",2,0,0,1,2,0,6,0,0,9,63,11,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,7,931,"      return ""Function"";
",0,0,0,0,0,1,0,0,0,1,18,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,606,"      return matchesExpectation(""number"") ? getNativeType(NUMBER_TYPE) : null;
",0,0,0,2,4,1,6,0,0,9,72,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,622,"      return matchesExpectation(""string"") ? getNativeType(STRING_TYPE) : null;
",0,0,0,2,4,1,6,0,0,9,72,6,0.15385,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,7,465,"    return visitor.caseObjectType(this);
",0,0,0,1,2,1,4,0,0,4,36,5,0.11111,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/StringType,7,112,"    return visitor.caseStringType();
",0,0,0,1,2,1,4,0,0,4,32,5,0.10811,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,175,"          return getRestrictedByTypeOfResult(p.type, ""function"", p.outcome);
",8,0,0,1,2,1,2,0,0,11,66,15,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,568,"      return result.equals(value) == resultEqualsValue;
",2,1,0,1,2,1,6,0,0,9,49,5,0.08696,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,542,"  private class RestrictByOneTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,46,2,0.08511,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,388,"      JSType restricted = null;
",2,0,0,0,0,0,0,2,0,4,25,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,389,"      for (JSType alternate : type.getAlternates()) {
",2,0,0,2,5,0,4,2,0,8,47,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,390,"        JSType restrictedAlternate = alternate.visit(this);
",2,0,0,1,2,0,4,2,0,8,51,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,391,"        if (restrictedAlternate != null) {
",2,1,0,1,3,0,0,0,0,3,34,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,392,"          if (restricted == null) {
",2,1,0,1,3,0,0,0,0,3,25,9,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,393,"            restricted = restrictedAlternate;
",4,0,0,0,0,0,0,0,0,5,33,11,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,398,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,399,"      return restricted;
",2,0,0,0,0,1,0,0,0,2,18,5,0.08333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NumberType,7,112,"    return visitor.caseNumberType();
",0,0,0,1,2,1,4,0,0,4,32,5,0.07547,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,682,"    return type.visit(
",0,0,0,0,1,1,4,0,0,4,18,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,557,"    RestrictByOneTypeOfResultVisitor(String value, boolean resultEqualsValue) {
",6,0,0,1,3,0,0,2,0,8,75,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,558,"      this.value = value;
",4,0,0,0,0,0,0,0,0,5,19,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,559,"      this.resultEqualsValue = resultEqualsValue;
",4,0,0,0,0,0,0,0,0,5,43,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,560,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,674,"    if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.06557,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,541,"    return visitor.caseUnionType(this);
",0,0,0,1,2,1,4,0,0,4,35,5,0.04255,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,299,"    return getLeastSupertype(this, that);
",0,0,0,1,2,1,4,0,0,4,37,5,0.04040,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,296,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03306,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,687,"    return typeRegistry.getNativeType(typeId);
",0,0,0,1,2,1,6,0,0,6,42,5,0.03175,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,532,"      return this.toMaybeUnionType().checkUnionEquivalenceHelper(
",0,0,0,1,3,1,4,0,0,4,59,7,0.02963,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,335,"    if (!tolerateUnknowns && alternates.size() != that.alternates.size()) {
",6,2,0,3,7,0,6,0,0,15,71,4,0.02963,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,870,"      return that.toMaybeUnionType().getLeastSupertype(this);
",0,0,0,2,4,1,6,0,0,6,55,7,0.02410,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,162,"              resultEqualsValue = !resultEqualsValue;
",4,0,0,0,0,0,0,0,0,6,39,11,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,159,"            boolean resultEqualsValue = operatorToken == Token.EQ ||
",8,3,0,0,0,0,0,0,0,11,56,10,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,161,"            if (!outcome) {
",2,0,0,1,3,0,0,0,0,3,15,9,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,164,"            return caseTypeOf(operandNode, operandType, stringNode.getString(),
",0,0,0,1,3,1,10,0,0,10,67,10,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,439,"    return maybeRestrictName(
",0,0,0,0,1,1,2,0,0,2,25,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,148,"          typeOfNode = left;
",4,0,0,0,0,0,0,0,0,5,18,7,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,149,"          stringNode = right;
",4,0,0,0,0,0,0,0,0,5,19,7,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,156,"          Node operandNode = typeOfNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,46,7,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,157,"          JSType operandType = getTypeIfRefinable(operandNode, blindScope);
",2,0,0,1,2,0,6,2,0,10,65,7,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,158,"          if (operandType != null) {
",2,1,0,1,3,0,0,0,0,3,26,7,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,212,"        JSType paramType =  getTypeIfRefinable(param, blindScope);
",2,0,0,1,2,0,6,2,0,10,58,8,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,213,"        Node left = callee.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,35,8,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,214,"        Node right = callee.getLastChild();
",2,0,0,1,2,0,4,2,0,8,35,8,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,215,"        if (left.isName() && ""goog"".equals(left.getString()) &&
",0,1,0,3,7,0,10,0,0,12,55,8,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,217,"          Function<TypeRestriction, JSType> restricter =
",2,0,0,0,0,0,0,6,0,8,46,10,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,219,"          if (restricter != null) {
",2,1,0,1,3,0,0,0,0,3,25,10,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,220,"            return restrictParameter(param, paramType, blindScope, restricter,
",0,0,0,0,1,1,10,0,0,10,66,13,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,234,"    type = restriction.apply(new TypeRestriction(type, outcome));
",6,0,0,2,4,0,4,2,0,13,61,4,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,237,"    if (type != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,238,"      FlowScope informed = blindScope.createChildFlowScope();
",2,0,0,1,2,0,4,2,0,8,55,6,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,239,"      declareNameInScope(informed, parameter, type);
",0,0,0,1,2,0,8,0,0,8,46,7,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,240,"      return informed;
",2,0,0,0,0,1,0,0,0,2,16,6,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,250,"    private TypeRestriction(JSType type, boolean outcome) {
",6,0,0,1,3,1,0,2,0,9,55,3,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,251,"      this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,5,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,252,"      this.outcome = outcome;
",4,0,0,0,0,0,0,0,0,5,23,5,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,253,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,246,"  private static class TypeRestriction {
",2,0,0,0,1,2,0,0,0,4,38,2,0.01923,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,292,"      for (JSType alternate : alternates) {
",4,0,0,1,3,0,0,2,0,6,37,6,0.01878,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,293,"        if (!alternate.isUnknownType() && that.isSubtype(alternate)) {
",0,1,0,3,7,0,10,0,0,12,62,8,0.01878,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,209,"      Node callee = condition.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,40,6,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,210,"      Node param = condition.getLastChild();
",2,0,0,1,2,0,4,2,0,8,38,6,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,211,"      if (callee.isGetProp() && param.isQualifiedName()) {
",0,1,0,3,7,0,8,0,0,9,52,6,0.01852,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,7,403,"    return prettyPrint;
",2,0,0,0,0,1,0,0,0,2,19,4,0.01747,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,7,929,"    if (!isPrettyPrint() ||
",0,1,0,1,3,0,2,0,0,4,23,4,0.01747,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,291,"    if (!that.isUnknownType() && !that.isUnionType()) {
",0,1,0,3,7,0,8,0,0,11,51,4,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,427,"    StringBuilder result = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,43,4,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,428,"    boolean firstAlternate = true;
",2,0,0,0,0,0,0,0,0,3,30,5,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,430,"    result.append(""("");
",0,0,0,1,3,0,4,0,0,5,19,5,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,431,"    SortedSet<JSType> sorted = new TreeSet<JSType>(ALPHA);
",4,0,0,1,2,0,0,8,0,12,54,4,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,432,"    sorted.addAll(alternates);
",0,0,0,1,2,0,6,0,0,6,26,5,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,433,"    for (JSType t : sorted) {
",4,0,0,1,3,0,0,2,0,6,25,4,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,434,"      if (!firstAlternate) {
",2,0,0,1,3,0,0,0,0,3,22,6,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,435,"        result.append(""|"");
",0,0,0,1,2,0,4,0,0,5,19,9,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,437,"      result.append(t.toStringHelper(forAnnotations));
",0,0,0,2,4,0,10,0,0,10,48,7,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,438,"      firstAlternate = false;
",2,0,0,0,0,0,0,0,0,4,23,6,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,439,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,440,"    result.append("")"");
",0,0,0,1,3,0,4,0,0,5,19,5,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,441,"    return result.toString();
",0,0,0,1,2,1,4,0,0,4,25,5,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,95,"      return t1.toString().compareTo(t2.toString());
",0,0,0,3,6,1,10,0,0,10,46,9,0.01688,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,161,"        scope.inferSlotType(node.getString(), type);
",0,0,0,2,4,0,10,0,0,10,44,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,162,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,363,"  abstract class RestrictByTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,44,2,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,159,"    switch (node.getType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,181,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,124,"          JSType nameVarType = nameVar.getType();
",2,0,0,1,2,0,4,2,0,8,39,7,0.01026,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,125,"          if (nameVarType == null) {
",2,1,0,1,3,0,0,0,0,3,26,7,0.01026,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,128,"          return nameVarType;
",2,0,0,0,0,1,0,0,0,2,19,7,0.01026,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,122,"        StaticSlot<JSType> nameVar = scope.getSlot(node.getString());
",2,0,0,2,4,0,8,4,0,14,61,5,0.01005,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,123,"        if (nameVar != null) {
",2,1,0,1,3,0,0,0,0,3,22,5,0.01005,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,968,"      UnionType unionType = type.toMaybeUnionType();
",2,0,0,1,2,0,4,2,0,8,46,7,0.00881,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,969,"      boolean needsFiltering = false;
",2,0,0,0,0,0,0,0,0,3,31,8,0.00881,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,970,"      for (JSType alt : unionType.getAlternates()) {
",2,0,0,2,5,0,4,2,0,8,46,7,0.00881,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,971,"        if (alt.isNoResolvedType()) {
",0,0,0,2,5,0,4,0,0,4,29,10,0.00881,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,975,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00881,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,977,"      if (needsFiltering) {
",2,0,0,1,3,0,0,0,0,2,21,7,0.00881,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,141,"          left = condition.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00847,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,142,"          right = condition.getLastChild();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00847,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,208,"    if (condition.isCall() && condition.getChildCount() == 2) {
",0,2,0,3,7,0,8,0,0,10,59,4,0.00813,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,120,"    switch (node.getType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.00806,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,137,"        if (operatorToken == Token.CASE) {
",6,1,0,1,3,0,0,0,0,7,34,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,145,"        Node typeOfNode = null;
",2,0,0,0,0,0,0,2,0,4,23,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,146,"        Node stringNode = null;
",2,0,0,0,0,0,0,2,0,4,23,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,147,"        if (left.isTypeOf() && right.isString()) {
",0,1,0,3,7,0,8,0,0,9,42,5,0.00714,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,155,"        if (typeOfNode != null && stringNode != null) {
",4,3,0,1,3,0,0,0,0,7,47,5,0.00714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,7,2358,"    return this.getType() == Token.TYPEOF;
",4,1,0,1,2,1,2,0,0,7,38,4,0.00505,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,963,"    if (type.isNoResolvedType()) {
",0,0,0,2,5,0,4,0,0,4,30,5,0.00499,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,967,"    } else if (type.isUnionType()) {
",0,0,0,2,6,0,4,0,0,4,32,6,0.00499,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,987,"    return type;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00499,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,872,"    return getLeastSupertype(this, that);
",0,0,0,1,2,1,4,0,0,4,37,5,0.00460,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,880,"    boolean areEquivalent = thisType.isEquivalentTo(thatType);
",2,0,0,1,2,0,6,0,0,8,58,5,0.00441,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,881,"    return areEquivalent ? thisType :
",4,0,0,0,0,1,0,0,0,4,33,5,0.00441,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,7,868,"    if (that.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.00430,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,148,"          return slot;
",2,0,0,0,0,1,0,0,0,2,12,10,0.00418,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,147,"        if (slot.getName().equals(name)) {
",0,0,0,3,7,0,8,0,0,8,34,9,0.00414,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,395,"      FlowScope informed = blindScope.createChildFlowScope();
",2,0,0,1,2,0,4,2,0,8,55,6,0.00413,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,396,"      declareNameInScope(informed, node, restrictedType);
",0,0,0,1,2,0,8,0,0,8,51,7,0.00413,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,397,"      return informed;
",2,0,0,0,0,1,0,0,0,2,16,6,0.00413,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,145,"      for (LinkedFlowSlot slot = lastSlot;
",4,0,0,0,1,0,0,2,0,6,36,7,0.00404,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,146,"           slot != null; slot = slot.parent) {
",8,1,0,0,2,0,0,0,0,10,35,6,0.00404,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,7,51,"public class SimpleSlot implements StaticSlot<JSType>, Serializable {
",2,0,0,0,1,1,0,6,0,9,69,1,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,133,"      .put(""isNull"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,56,14,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,120,"    super(convention, typeRegistry);
",4,0,0,1,2,0,0,0,0,4,32,4,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,47,"  private final Visitor<JSType> restrictToArrayVisitor =
",2,0,0,0,0,2,0,4,0,8,54,2,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,66,"  private final Visitor<JSType> restrictToNotArrayVisitor =
",2,0,0,0,0,2,0,4,0,8,57,2,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,78,"  private final Visitor<JSType> restrictToObjectVisitor =
",2,0,0,0,0,2,0,4,0,8,55,2,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,99,"  private final Visitor<JSType> restrictToNotObjectVisitor =
",2,0,0,0,0,2,0,4,0,8,58,2,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,121,"    this.restricters =
",2,0,0,0,0,0,0,0,0,3,18,4,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,203,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,100,"      new RestrictByFalseTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,42,5,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,166,"      .put(""isNumber"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,10,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,143,"      .put(""isDefAndNotNull"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,65,13,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,154,"      .put(""isString"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,12,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,79,"      new RestrictByTrueTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,41,5,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,67,"      new RestrictByFalseTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,42,5,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,178,"      .put(""isArray"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,57,8,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,48,"      new RestrictByTrueTypeOfResultVisitor() {
",0,0,0,1,3,0,0,2,0,2,41,5,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,160,"      .put(""isBoolean"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,59,11,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,172,"      .put(""isFunction"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,60,9,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,190,"      .put(""isObject"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,58,7,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,7,123,"      .put(""isDef"", new Function<TypeRestriction, JSType>() {
",0,0,0,1,4,0,2,6,0,9,55,15,0.00347,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,7,66,"    return name;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00347,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,7,71,"    return type;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00347,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,443,"  abstract class RestrictByTrueTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,48,2,0.00333,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,491,"  abstract class RestrictByFalseTypeOfResultVisitor
",2,0,0,0,0,1,0,0,0,3,49,2,0.00332,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,394,"    if (restrictedType != null && restrictedType != originalType) {
",6,3,0,1,3,0,0,0,0,9,63,4,0.00314,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,105,"    Preconditions.checkState(!frozen);
",2,0,0,1,2,0,4,0,0,7,34,5,0.00281,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,106,"    lastSlot = new LinkedFlowSlot(symbol, type, lastSlot);
",8,0,0,1,2,0,0,2,0,11,54,4,0.00281,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,107,"    depth++;
",2,0,0,0,0,0,0,0,0,3,8,4,0.00281,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,108,"    cache.dirtySymbols.add(symbol);
",4,0,0,1,2,0,4,0,0,8,31,5,0.00281,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,109,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00281,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,371,"      super(name, type, true);
",4,0,0,1,2,0,0,0,0,5,24,5,0.00281,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,372,"      this.parent = parent;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00281,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,373,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00281,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,7,58,"  public SimpleSlot(String name, JSType type, boolean inferred) {
",8,0,0,1,3,1,0,4,0,13,63,2,0.00276,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,7,59,"    this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00276,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,7,60,"    this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00276,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,7,61,"    this.inferred = inferred;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00276,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,7,62,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00276,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,7,153,"    ObjectType implicitPrototype = getImplicitPrototype();
",2,0,0,1,2,0,2,2,0,6,54,4,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,7,154,"    if (implicitPrototype == null) {
",2,1,0,1,3,0,0,0,0,3,32,4,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,7,155,"      return this.properties.size();
",2,0,0,1,2,1,2,0,0,4,30,7,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,7,157,"    int localCount = 0;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,7,158,"    for (String property : properties.keySet()) {
",2,0,0,2,5,0,4,2,0,8,45,4,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,7,163,"    return implicitPrototype.getPropertiesCount() + localCount;
",2,1,0,1,2,1,4,0,0,7,59,4,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,7,138,"        UnionType union = alternate.toMaybeUnionType();
",2,0,0,1,2,0,4,2,0,8,47,8,0.00201,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,7,139,"        for (JSType unionAlt : union.getAlternates()) {
",2,0,0,2,5,0,4,2,0,8,47,8,0.00201,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,7,140,"          addAlternate(unionAlt);
",0,0,0,1,2,0,4,0,0,4,23,11,0.00201,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,7,141,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00201,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,7,142,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00201,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,128,"    int operatorToken = condition.getType();
",2,0,0,1,2,0,4,0,0,6,40,5,0.00189,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,7,129,"    switch (operatorToken) {
",2,0,0,1,3,0,0,0,0,2,24,4,0.00189,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,93,"    return alternates;
",2,0,0,0,0,1,0,0,0,2,18,4,0.00179,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,7,1049,"    return getNativeType(JSTypeNative.FUNCTION_PROTOTYPE).isSubtype(that);
",4,0,0,2,4,1,6,0,0,10,70,5,0.00179,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,7,1014,"    if (that.isFunctionType()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00178,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,7,1010,"    if (JSType.isSubtypeHelper(this, that)) {
",0,0,0,2,5,0,6,0,0,6,41,5,0.00174,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,7,514,"        unknown = implicitProto.isUnknownType();
",2,0,0,1,2,0,4,0,0,7,40,8,0.00171,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,261,"    for (JSType t : alternates) {
",4,0,0,1,3,0,0,2,0,6,29,4,0.00163,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,262,"      if (t.isUnknownType()) {
",0,0,0,2,5,0,4,0,0,4,24,7,0.00163,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,265,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00163,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,266,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00163,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,7,372,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00158,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,144,"    if (cache.dirtySymbols.contains(name)) {
",4,0,0,2,5,0,4,0,0,8,40,5,0.00150,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,275,"    new Visitor<JSType>() {
",0,0,0,1,3,0,0,4,0,4,23,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,64,"      JSTypeRegistry typeRegistry) {
",2,0,0,0,2,0,0,2,0,4,30,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,186,"  private final Visitor<JSType> restrictUndefinedVisitor =
",2,0,0,0,0,2,0,4,0,8,56,2,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,274,"  private final Visitor<JSType> restrictNullVisitor =
",2,0,0,0,0,2,0,4,0,8,51,2,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,65,"    Preconditions.checkNotNull(convention);
",0,0,0,1,2,0,6,0,0,6,39,5,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,66,"    this.convention = convention;
",4,0,0,0,0,0,0,0,0,5,29,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,67,"    this.typeRegistry = typeRegistry;
",4,0,0,0,0,0,0,0,0,5,33,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,68,"    firstLink = this;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,69,"    nextLink = null;
",2,0,0,0,0,0,0,0,0,3,16,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,70,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,7,187,"    new Visitor<JSType>() {
",0,0,0,1,3,0,0,4,0,4,23,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,65,"      LinkedFlowScope directParent) {
",2,0,0,0,2,0,0,2,0,4,31,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,58,"  private boolean frozen = false;
",2,0,0,0,0,1,0,0,0,4,31,2,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,66,"    this.cache = cache;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,67,"    if (directParent == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,68,"      this.lastSlot = null;
",2,0,0,0,0,0,0,0,0,3,21,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,69,"      this.depth = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,70,"      this.parent = cache.linkedEquivalent;
",6,0,0,0,0,0,0,0,0,7,37,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,72,"      this.lastSlot = directParent.lastSlot;
",6,0,0,0,0,0,0,0,0,7,38,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,73,"      this.depth = directParent.depth + 1;
",6,1,0,0,0,0,0,0,0,8,36,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,74,"      this.parent = directParent;
",4,0,0,0,0,0,0,0,0,5,27,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,76,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,79,"    this(cache, null);
",2,0,0,1,2,0,0,0,0,2,18,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,83,"    this(directParent.cache, directParent);
",6,0,0,1,2,0,0,0,0,6,39,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,84,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,100,"    return new LinkedFlowScope(new FlatFlowScopeCache(scope));
",2,0,0,2,4,1,0,4,0,6,58,5,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,162,"    frozen = true;
",2,0,0,0,0,0,0,0,0,4,14,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,164,"    if (depth > MAX_DEPTH) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,171,"    return new LinkedFlowScope(this);
",0,0,0,1,2,1,0,2,0,2,33,6,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,402,"    FlatFlowScopeCache(Scope functionScope) {
",4,0,0,1,3,0,0,2,0,6,41,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,389,"    private Map<String, StaticSlot<JSType>> symbols = Maps.newHashMap();
",2,0,0,1,2,1,4,8,0,15,68,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,399,"    final Set<String> dirtySymbols = Sets.newHashSet();
",2,0,0,1,2,1,4,4,0,11,51,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,403,"      this.functionScope = functionScope;
",4,0,0,0,0,0,0,0,0,5,35,5,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,404,"      symbols = ImmutableMap.of();
",2,0,0,1,2,0,4,0,0,7,28,5,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,405,"      linkedEquivalent = null;
",2,0,0,0,0,0,0,0,0,3,24,5,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,406,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,7,380,"  private static class FlatFlowScopeCache {
",2,0,0,0,1,2,0,0,0,4,41,2,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,7,1591,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00135,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,7,1587,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,7,1588,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,7,1590,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,7,1593,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,7,1594,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00133,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,7,332,"      composedGuards.addGuard(new DiagnosticGroupWarningsGuard(
",0,0,0,0,2,0,4,2,0,6,57,7,0.00131,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,7,95,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00131,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,7,106,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00131,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,7,158,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00127,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,7,45,"    return !level.isOn() && group.isSubGroup(otherGroup);
",0,1,0,2,4,1,10,0,0,12,53,4,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,7,58,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,7,153,"      } else if (guard.disables(group)) {
",0,0,0,2,6,0,6,0,0,6,35,8,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,7,156,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,480,"    return declare(name, nameNode, type, input, true);
",0,0,0,1,2,1,10,0,0,11,50,5,0.00080,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,121,"                Scope scope, int index, CompilerInput input) {
",6,0,0,0,2,0,0,4,0,10,46,4,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,110,"    private boolean markedEscaped = false;
",2,0,0,0,0,1,0,0,0,4,38,3,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,113,"    private boolean markedAssignedExactlyOnce = false;
",2,0,0,0,0,1,0,0,0,4,50,3,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,122,"      this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,5,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,123,"      this.nameNode = nameNode;
",4,0,0,0,0,0,0,0,0,5,25,5,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,124,"      this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,5,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,125,"      this.scope = scope;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,126,"      this.index = index;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,127,"      this.input = input;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,128,"      this.typeInferred = inferred;
",4,0,0,0,0,0,0,0,0,5,29,5,0.00077,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,7,129,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00077,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,924,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,925,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,926,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,934,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,935,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,936,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,937,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,938,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,948,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,952,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,960,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,979,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,988,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,228,"          Node assign = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,32,10,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,229,"          Node lhs = assign.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,10,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,230,"          Preconditions.checkState(lhs.isName());
",0,0,0,2,4,0,8,0,0,8,39,11,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,231,"          Node rhs = assign.getLastChild();
",2,0,0,1,2,0,4,2,0,8,33,10,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,232,"          lhs.addChildToBack(rhs.detachFromParent());
",0,0,0,2,4,0,8,0,0,8,43,11,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,233,"          var.addChildToBack(lhs.detachFromParent());
",0,0,0,2,4,0,8,0,0,8,43,11,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,234,"          redeclaration = true;
",2,0,0,0,0,0,0,0,0,4,21,10,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,240,"        JSDocInfo info = new JSDocInfo();
",2,0,0,1,2,0,0,4,0,6,33,8,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,241,"        info.addSuppression(""duplicate"");
",0,0,0,1,2,0,4,0,0,5,33,9,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,242,"        var.setJSDocInfo(info);
",0,0,0,1,2,0,6,0,0,6,23,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1532,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,40,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,38,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,41,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,30,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,52,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,54,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,61,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,62,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,64,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,69,"    if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,70,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,71,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,72,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,8,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,68,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,69,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,70,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,71,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,72,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,73,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,8,489,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,8,163,"        return getReferenceName().equals(thatObj.getReferenceName());
",0,0,0,3,6,1,8,0,0,8,61,10,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1493,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1531,"        if (!n.isEquivalentTo(n2, compareJsType, true)) {
",0,0,0,2,5,0,8,0,0,10,49,8,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1530,"           n = n.next, n2 = n2.next) {
",12,0,0,0,2,0,0,0,0,14,27,6,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,8,185,"              return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.11111,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,8,432,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,185,"          blacklistedVars.add(t.getScope().getVar(child.getString()));
",0,0,0,4,8,0,14,0,0,14,60,10,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,8,195,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,8,198,"      if (scope.isGlobal()) {
",0,0,0,2,5,0,4,0,0,4,23,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,8,225,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,8,240,"      redeclarationHandler.onRedeclaration(
",0,0,0,0,1,0,4,0,0,4,37,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,8,33,"class SyntacticScopeCreator implements ScopeCreator {
",2,0,0,0,1,0,0,2,0,4,53,1,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,201,"      Var var = s.getVar(lhs.getString());
",2,0,0,2,4,0,8,2,0,12,36,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,202,"      return var != null
",2,1,0,0,0,1,0,0,0,3,18,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,165,"          blacklistStubVars(t, n);
",0,0,0,1,2,0,6,0,0,6,24,10,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,166,"          hasVar = true;
",2,0,0,0,0,0,0,0,0,4,14,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,164,"        if (n.isVar()) {
",0,0,0,2,5,0,4,0,0,4,16,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,169,"        nodesToCollapse.add(n);
",0,0,0,1,2,0,6,0,0,6,23,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,170,"        hasNodesToCollapse = true;
",2,0,0,0,0,0,0,0,0,4,26,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,172,"        n = n.getNext();
",2,0,0,1,2,0,4,0,0,7,16,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,176,"        nodesToCollapse.add(varNode);
",0,0,0,1,2,0,6,0,0,6,29,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,177,"        collapses.add(new Collapse(varNode, n, parent));
",6,0,0,2,4,0,4,2,0,12,48,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,116,"      applyCollapses();
",0,0,0,1,2,0,2,0,0,2,17,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,117,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,210,"    for (Collapse collapse : collapses) {
",4,0,0,1,3,0,0,2,0,6,37,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,212,"      Node var = new Node(Token.VAR);
",6,0,0,1,2,0,0,4,0,10,31,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,213,"      var.copyInformationFrom(collapse.startNode);
",4,0,0,1,2,0,4,0,0,8,44,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,214,"      collapse.parent.addChildBefore(var, collapse.startNode);
",8,0,0,1,2,0,4,0,0,12,56,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,216,"      boolean redeclaration = false;
",2,0,0,0,0,0,0,0,0,3,30,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,217,"      for (Node n = collapse.startNode; n != collapse.endNode;) {
",12,1,0,1,3,0,0,2,0,15,59,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,218,"        Node next = n.getNext();
",2,0,0,1,2,0,4,2,0,8,24,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,220,"        Preconditions.checkState(var.getNext() == n);
",2,1,0,2,4,0,8,0,0,11,45,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,221,"        collapse.parent.removeChildAfter(var);
",4,0,0,1,2,0,4,0,0,8,38,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,223,"        if (n.isVar()) {
",0,0,0,2,5,0,4,0,0,4,16,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,224,"          while(n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,24,11,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,225,"            var.addChildToBack(n.removeFirstChild());
",0,0,0,2,4,0,8,0,0,8,41,13,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,236,"        n = next;
",4,0,0,0,0,0,0,0,0,5,9,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,237,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,239,"      if (redeclaration) {
",2,0,0,1,3,0,0,0,0,2,20,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,244,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,245,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,84,"    Collapse(Node startNode, Node endNode, Node parent) {
",8,0,0,1,3,0,0,6,0,14,53,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,85,"      this.startNode = startNode;
",4,0,0,0,0,0,0,0,0,5,27,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,86,"      this.endNode = endNode;
",4,0,0,0,0,0,0,0,0,5,23,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,87,"      this.parent = parent;
",4,0,0,0,0,0,0,0,0,5,21,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,88,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1695,"        result.last.next = n2clone;
",8,0,0,0,0,0,0,0,0,9,27,8,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1528,"      for (n = first, n2 = node.first;
",10,0,0,0,1,0,0,0,0,12,32,6,0.04762,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1529,"           n != null;
",2,1,0,0,0,0,0,0,0,3,10,6,0.04762,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1654,"    Preconditions.checkArgument(prev.parent == this,
",4,1,0,0,1,0,4,0,0,9,48,5,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1656,"    Preconditions.checkArgument(prev.next != null,
",4,1,0,0,1,0,4,0,0,9,46,5,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1659,"    Node child = prev.next;
",6,0,0,0,0,0,0,2,0,8,23,4,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1660,"    prev.next = child.next;
",8,0,0,0,0,0,0,0,0,9,23,4,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1661,"    if (child == last) last = prev;
",8,1,0,1,2,0,0,0,0,10,31,4,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1662,"    child.next = null;
",4,0,0,0,0,0,0,0,0,5,18,4,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1663,"    child.parent = null;
",4,0,0,0,0,0,0,0,0,5,20,4,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1664,"    return child;
",2,0,0,0,0,1,0,0,0,2,13,4,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1692,"      Node n2clone = n2.cloneTree();
",2,0,0,1,2,0,4,2,0,8,30,6,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1693,"      n2clone.parent = result;
",6,0,0,0,0,0,0,0,0,7,24,6,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1694,"      if (result.last != null) {
",4,1,0,1,3,0,0,0,0,5,26,6,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1697,"      if (result.first == null) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1698,"        result.first = n2clone;
",6,0,0,0,0,0,0,0,0,7,23,8,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1700,"      result.last = n2clone;
",6,0,0,0,0,0,0,0,0,7,22,6,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,8,290,"      options.checkTypes = true;
",4,0,0,0,0,0,0,0,0,6,26,6,0.04167,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1472,"    return isEquivalentTo(node, false, true);
",0,0,0,1,2,1,4,0,0,6,41,5,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,909,"        cc.listSeparator();
",0,0,0,1,2,0,4,0,0,4,19,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,910,"        addExpr(n, isArrayOrFunctionArgument ? 1 : 0, Context.OTHER);
",6,0,0,1,2,0,4,0,0,10,61,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,194,"      Node assign = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,32,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,195,"      Node lhs = assign.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,197,"      if (!lhs.isName()) {
",0,0,0,2,5,0,4,0,0,5,20,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,124,"    add("","");
",0,0,0,1,2,0,2,0,0,3,9,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,125,"    maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,126,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,640,"      newChild.parent = this;
",4,0,0,0,0,0,0,0,0,5,23,6,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,641,"      newChild.next = first;
",6,0,0,0,0,0,0,0,0,7,22,6,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,642,"      first = newChild;
",4,0,0,0,0,0,0,0,0,5,17,6,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,643,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,8,273,"    boolean result = defineProperty(propertyName, type, false,
",2,0,0,0,1,0,6,0,0,9,58,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,8,280,"    registry.registerPropertyOnType(propertyName, this);
",0,0,0,1,2,0,6,0,0,6,52,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,8,282,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,8,995,"    return createUnionType(type, getNativeType(JSTypeNative.NULL_TYPE));
",4,0,0,2,4,1,6,0,0,10,68,5,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1690,"    Node result = cloneNode();
",2,0,0,1,2,0,2,2,0,6,26,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1691,"    for (Node n2 = getFirstChild(); n2 != null; n2 = n2.getNext()) {
",6,1,0,3,7,0,6,2,0,17,64,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1702,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,174,"    return properties.get(propertyName) != null;
",0,1,0,1,2,1,6,0,0,7,44,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,236,"    if (hasOwnDeclaredProperty(name)) {
",0,0,0,2,5,0,4,0,0,4,35,5,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,239,"    Property newProp = new Property(
",2,0,0,0,1,0,0,4,0,6,32,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,241,"    Property oldProp = properties.get(name);
",2,0,0,1,2,0,6,2,0,10,40,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,242,"    if (oldProp != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,247,"    properties.put(name, newProp);
",0,0,0,1,2,0,8,0,0,8,30,5,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,248,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,408,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,431,"    } else if (ownerFunction != null) {
",2,1,0,1,4,0,0,0,0,3,35,5,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,8,432,"      return ownerFunction.getReferenceName() + "".prototype"";
",0,1,0,1,2,1,4,0,0,6,55,7,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,8,441,"    return hasOwnProperty(name) && isPropertyTypeDeclared(name);
",0,1,0,2,4,1,8,0,0,9,60,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,8,88,"    ObjectType proto = getImplicitPrototype();
",2,0,0,1,2,0,2,2,0,6,42,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,8,89,"    if (proto != null && proto.hasOwnDeclaredProperty(name)) {
",2,2,0,2,5,0,6,0,0,10,58,4,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,8,92,"    return super.defineProperty(name, type, inferred, propertyNode);
",10,0,0,1,2,1,0,0,0,10,64,5,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1618,"    Node child = first;
",4,0,0,0,0,0,0,2,0,6,19,4,0.02273,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1619,"    if (child != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.02273,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1620,"      removeChild(child);
",0,0,0,1,2,0,4,0,0,4,19,7,0.02273,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1622,"    return child;
",2,0,0,0,0,1,0,0,0,2,13,4,0.02273,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1673,"      result = (Node) super.clone();
",4,0,0,2,4,0,0,2,0,7,30,6,0.02222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1676,"      result.next = null;
",4,0,0,0,0,0,0,0,0,5,19,6,0.02222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1677,"      result.first = null;
",4,0,0,0,0,0,0,0,0,5,20,6,0.02222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1678,"      result.last = null;
",4,0,0,0,0,0,0,0,0,5,19,6,0.02222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1679,"      result.parent = null;
",4,0,0,0,0,0,0,0,0,5,21,6,0.02222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1682,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1683,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.02222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,633,"    Preconditions.checkArgument(node != null && node.parent == this,
",6,3,0,0,1,0,4,0,0,13,64,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,635,"    Preconditions.checkArgument(newChild.next == null,
",4,1,0,0,1,0,4,0,0,9,50,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,637,"    Preconditions.checkArgument(newChild.parent == null,
",4,1,0,0,1,0,4,0,0,9,52,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,639,"    if (first == node) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,139,"        blacklistStubVars(t, n);
",0,0,0,1,2,0,6,0,0,6,24,8,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,182,"      for (Node child = varNode.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,42,6,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,183,"           child != null; child = child.getNext()) {
",4,1,0,1,4,0,4,0,0,10,41,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,184,"        if (child.getFirstChild() == null) {
",0,1,0,2,5,0,4,0,0,5,36,7,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,188,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,8,152,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,8,53,"          return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,146,"      if (nodesToCollapse.contains(n)) return;
",0,0,0,2,4,1,6,0,0,6,40,6,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,150,"      if (parent.isIf()) return;
",0,0,0,2,4,1,4,0,0,4,26,6,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,152,"      Node varNode = n;
",4,0,0,0,0,0,0,2,0,6,17,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,154,"      boolean hasVar = n.isVar();
",2,0,0,1,2,0,4,0,0,6,27,6,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,157,"      n = n.getNext();
",2,0,0,1,2,0,4,0,0,7,16,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,159,"      boolean hasNodesToCollapse = false;
",2,0,0,0,0,0,0,0,0,3,35,6,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,161,"      while (n != null &&
",2,2,0,0,1,0,0,0,0,4,19,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,175,"      if (hasNodesToCollapse && hasVar) {
",4,1,0,1,3,0,0,0,0,5,35,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,179,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,64,"class CollapseVariableDeclarations implements CompilerPass {
",2,0,0,0,1,0,0,2,0,4,60,1,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,8,190,"      return scope;
",2,0,0,0,0,1,0,0,0,2,13,5,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,8,51,"      for (DiagnosticType type : otherGroup.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,51,6,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,8,52,"        if (group.matches(type)) {
",0,0,0,2,5,0,6,0,0,6,26,9,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,8,55,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,8,561,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.01538,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1606,"    Preconditions.checkState(parent != null);
",2,1,0,1,2,0,4,0,0,7,41,5,0.01471,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1607,"    parent.removeChild(this);
",0,0,0,1,2,0,4,0,0,4,25,5,0.01471,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1608,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,8,2159,"      case Token.ASSIGN: return ""="";
",4,0,0,0,0,1,0,0,0,5,30,4,0.01316,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,8,1182,"      case Token.ASSIGN: return 1;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,8,156,"        reservedKeywords = ES5_RESERVED_KEYWORDS;
",4,0,0,0,0,0,0,0,0,5,41,5,0.01205,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,8,157,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01205,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,8,2031,"          mode = Config.LanguageMode.ECMASCRIPT5;
",8,0,0,0,0,0,0,0,0,9,39,7,0.01205,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,8,2032,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01205,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,695,"        prev.next = child.next;
",8,0,0,0,0,0,0,0,0,9,23,5,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,98,"      Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,102,"      int p = NodeUtil.precedence(type);
",2,0,0,1,2,0,6,0,0,8,34,7,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,106,"      Context rhsContext = getContextForNoInOperator(context);
",2,0,0,1,2,0,4,2,0,8,56,6,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,111,"      if (last.getType() == type &&
",2,2,0,1,3,0,4,0,0,8,29,6,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,116,"      } else if (NodeUtil.isAssignmentOp(n) && NodeUtil.isAssignmentOp(last)) {
",0,1,0,3,8,0,12,0,0,13,73,7,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,122,"        unrollBinaryOperator(n, type, opstr, context, rhsContext, p, p + 1);
",2,1,0,1,2,0,14,0,0,17,68,10,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,124,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,744,"    Node firstNonOperator = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,4,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,745,"    while (firstNonOperator.getType() == op) {
",2,1,0,2,5,0,4,0,0,7,42,4,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,749,"    addExpr(firstNonOperator, leftPrecedence, context);
",0,0,0,1,2,0,8,0,0,8,51,5,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,751,"    Node current = firstNonOperator;
",4,0,0,0,0,0,0,2,0,6,32,4,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,753,"      current = current.getParent();
",2,0,0,1,2,0,4,0,0,7,30,6,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,754,"      cc.addOp(opStr, true);
",0,0,0,1,2,0,6,0,0,7,22,7,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,755,"      addExpr(current.getFirstChild().getNext(), rightPrecedence, rhsContext);
",0,0,0,3,6,0,12,0,0,12,72,7,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,756,"    } while (current != n);
",4,1,0,1,3,0,0,0,0,5,23,4,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,757,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01163,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,279,"      validateStatement(c);
",0,0,0,1,2,0,4,0,0,4,21,7,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,170,"      endLine();
",0,0,0,1,2,0,2,0,0,2,10,7,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,243,"    char prev = getLastChar();
",2,0,0,1,2,0,2,0,0,4,26,5,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,244,"    boolean negativeZero = isNegativeZero(x);
",2,0,0,1,2,0,4,0,0,6,41,5,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,245,"    if ((x < 0 || negativeZero) && prev == '-') {
",6,4,0,2,5,0,0,0,0,11,45,4,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,249,"    if (negativeZero) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,251,"    } else if ((long) x == x) {
",4,1,0,2,6,0,0,0,0,5,27,5,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,252,"      long value = (long) x;
",4,0,0,1,2,0,0,0,0,4,22,8,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,253,"      long mantissa = value;
",4,0,0,0,0,0,0,0,0,4,22,8,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,254,"      int exp = 0;
",2,0,0,0,0,0,0,0,0,2,12,8,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,255,"      if (Math.abs(x) >= 100) {
",0,1,0,2,5,0,6,0,0,7,25,7,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,261,"      if (exp > 2) {
",2,1,0,1,3,0,0,0,0,3,14,7,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,264,"        long valueAbs = Math.abs(value);
",2,0,0,1,2,0,6,0,0,8,32,10,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,265,"        if (Long.toHexString(valueAbs).length() + 2 <
",0,2,0,2,5,0,8,0,0,10,45,9,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,270,"          addConstant(Long.toString(value));
",0,0,0,2,4,0,8,0,0,8,34,12,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,273,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,276,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,283,"    return x == 0.0 && Math.copySign(1, x) == -1.0;
",2,3,0,1,2,1,6,0,0,12,47,4,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,227,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,228,"        cc.addNumber(n.getDouble());
",0,0,0,2,4,0,8,0,0,8,28,6,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,229,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,8,379,"            cc.maybeLineBreak();
",0,0,0,1,2,0,4,0,0,4,20,11,0.01053,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,231,"        validateNumber(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,232,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,648,"    validateNodeType(Token.NUMBER, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,649,"    validateChildCount(n, 0);
",0,0,0,1,2,0,4,0,0,4,25,5,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,652,"      n.getDouble();
",0,0,0,1,2,0,4,0,0,4,14,7,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,655,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,8,656,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1718,"      putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));
",0,0,0,2,4,0,10,0,0,10,63,7,0.00990,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1719,"      sourcePosition = other.sourcePosition;
",6,0,0,0,0,0,0,0,0,7,38,6,0.00990,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,158,"      return this.number;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00962,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,128,"  private class GatherCollapses extends AbstractPostOrderCallback {
",2,0,0,0,1,1,0,2,0,5,65,2,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,134,"    private final Set<Var> blacklistedVars = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,59,3,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,138,"      if (n.isVar()) {
",0,0,0,2,5,0,4,0,0,4,16,6,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,143,"      if (!n.isVar() && !canBeRedeclared(n, t.getScope())) return;
",0,1,0,4,8,1,12,0,0,15,60,5,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,191,"      if (!NodeUtil.isExprAssign(n)) {
",0,0,0,2,5,0,6,0,0,7,32,5,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,192,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,103,"  CollapseVariableDeclarations(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,57,2,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,94,"  private final List<Collapse> collapses = Lists.newArrayList();
",2,0,0,1,2,2,4,4,0,12,62,2,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,101,"  private final Set<Node> nodesToCollapse = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,60,2,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,104,"    Preconditions.checkState(!compiler.getLifeCycleStage().isNormalized());
",0,0,0,3,6,0,10,0,0,11,71,5,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,105,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,106,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,110,"    collapses.clear();
",0,0,0,1,2,0,4,0,0,4,18,5,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,111,"    nodesToCollapse.clear();
",0,0,0,1,2,0,4,0,0,4,24,5,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,113,"    NodeTraversal.traverse(compiler, root, new GatherCollapses());
",0,0,0,2,4,0,8,2,0,10,62,5,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,115,"    if (!collapses.isEmpty()) {
",0,0,0,2,5,0,4,0,0,5,27,4,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,8,119,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,279,"    add(newcode);
",0,0,0,1,2,0,4,0,0,4,13,5,0.00917,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,280,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00917,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,8,1410,"    this.languageIn = languageIn;
",4,0,0,0,0,0,0,0,0,5,29,4,0.00909,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,8,1411,"    this.languageOut = languageIn;
",4,0,0,0,0,0,0,0,0,5,30,4,0.00909,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,8,1412,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00909,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,8,395,"        node.addChildToBack(transform((AstNode)child));
",2,0,0,3,6,0,6,2,0,10,47,8,0.00901,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,8,396,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00901,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,8,1481,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.00893,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,693,"        first = first.next;
",6,0,0,0,0,0,0,0,0,7,19,5,0.00885,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,547,"    Node n = first;
",4,0,0,0,0,0,0,2,0,6,15,4,0.00870,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,548,"    while (n.next != child) {
",6,1,0,1,3,0,0,0,0,7,25,4,0.00870,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,554,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,8,1362,"    return IR.number(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,53,5,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,8,808,"      return newNumberNode(literalNode.getNumber());
",0,0,0,2,4,1,6,0,0,6,46,6,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,8,250,"        return processNumberLiteral((NumberLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00870,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,193,"      append("" "");
",0,0,0,1,2,0,2,0,0,3,12,7,0.00855,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,155,"      append("";"");
",0,0,0,1,2,0,2,0,0,3,12,7,0.00847,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,156,"      maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,7,0.00847,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,157,"      endLine();
",0,0,0,1,2,0,2,0,0,2,10,7,0.00847,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,8,158,"      statementNeedsEnded = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.00847,0,-1
defect4j,closure,com/google/javascript/rhino/IR,8,451,"    return Node.newNumber(d);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00840,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,496,"    return new NumberNode(number);
",2,0,0,1,2,1,0,2,0,4,30,5,0.00833,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,147,"      super(Token.NUMBER);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00833,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,148,"      this.number = number;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00833,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,149,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00833,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1714,"      putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));
",0,0,0,2,4,0,10,0,0,10,61,7,0.00826,0,-1
defect4j,closure,com/google/javascript/rhino/Node,8,1713,"    if (getProp(ORIGINALNAME_PROP) == null) {
",0,1,0,2,5,0,4,0,0,6,41,4,0.00820,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,54,"    this(compiler, filenamePrefix, true);
",4,0,0,1,2,0,0,0,0,5,37,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,58,"      boolean reportDependencies) {
",2,0,0,0,2,0,0,0,0,2,29,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,59,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,60,"    this.filenamePrefix = filenamePrefix.endsWith(MODULE_SLASH) ?
",2,0,0,1,2,0,6,0,0,9,61,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,62,"    this.reportDependencies = reportDependencies;
",4,0,0,0,0,0,0,0,0,5,45,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,63,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,72,"    return toModuleName(normalizeSourceName(filename));
",0,0,0,2,4,1,6,0,0,6,51,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,89,"    return MODULE_NAME_PREFIX +
",2,1,0,0,0,1,0,0,0,3,27,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,120,"    if (filename.indexOf(filenamePrefix) == 0) {
",0,1,0,2,5,0,6,0,0,7,44,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,9,124,"    return filename;
",2,0,0,0,0,1,0,0,0,2,16,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,81,"  public SourceFile(String fileName) {
",4,0,0,1,3,1,0,2,0,7,36,2,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,60,"  private boolean isExternFile = false;
",2,0,0,0,0,1,0,0,0,4,37,2,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,67,"  private String originalPath = null;
",2,0,0,0,0,1,0,2,0,5,35,2,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,70,"  private int[] lineOffsets = null;
",2,0,0,1,2,1,0,0,0,3,33,2,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,72,"  private String code = null;
",2,0,0,0,0,1,0,2,0,5,27,2,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,82,"    if (fileName == null || fileName.isEmpty()) {
",2,2,0,2,5,0,4,0,0,8,45,4,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,85,"    this.fileName = fileName;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,86,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,148,"    code = sourceCode;
",4,0,0,0,0,0,0,0,0,5,18,4,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,149,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,156,"    this.originalPath = originalPath;
",4,0,0,0,0,0,0,0,0,5,33,4,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,157,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,323,"    return builder().buildFromCode(fileName, code);
",0,0,0,2,4,1,8,0,0,8,47,5,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,355,"    return new Builder();
",0,0,0,1,2,1,0,2,0,2,21,6,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,43,"public class SourceFile implements StaticSourceFile, Serializable {
",2,0,0,0,1,1,0,4,0,7,67,1,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,368,"    public Builder() {}
",2,0,0,2,4,1,0,0,0,3,19,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,365,"    private Charset charset = Charsets.UTF_8;
",6,0,0,0,0,1,0,2,0,9,41,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,366,"    private String originalPath = null;
",2,0,0,0,0,1,0,2,0,5,35,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,391,"      return new Preloaded(fileName, originalPath, code);
",6,0,0,1,2,1,0,2,0,8,51,6,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,422,"      super(fileName);
",2,0,0,1,2,0,0,0,0,2,16,5,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,423,"      super.setOriginalPath(originalPath);
",4,0,0,1,2,0,0,0,0,4,36,6,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,424,"      super.setCode(code);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,9,425,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,654,"    Callable<T> bootCompilerThread = new Callable<T>() {
",2,0,0,1,3,0,0,8,0,10,52,4,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,658,"          compilerThread = Thread.currentThread();
",2,0,0,1,2,0,4,0,0,7,40,12,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,659,"          if (dumpTraceReport) {
",2,0,0,1,3,0,0,0,0,2,22,12,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,660,"            Tracer.initCurrentThreadTrace();
",0,0,0,1,2,0,4,0,0,4,32,15,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,662,"          return callable.call();
",0,0,0,1,2,1,4,0,0,4,23,13,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,666,"          compilerThread = null;
",2,0,0,0,0,0,0,0,0,3,22,12,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,667,"          if (dumpTraceReport) {
",2,0,0,1,3,0,0,0,0,2,22,12,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,668,"            Tracer.logAndClearCurrentThreadTrace();
",0,0,0,1,2,0,4,0,0,4,39,15,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,663,"        } catch (Throwable e) {
",2,0,0,1,4,0,0,2,0,4,23,12,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,664,"          exception[0] = e;
",2,0,1,1,2,0,0,0,0,5,17,13,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,671,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,230,"    this((PrintStream) null);
",0,0,0,2,4,0,0,2,0,2,25,6,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,231,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,237,"  public Compiler(PrintStream stream) {
",4,0,0,1,3,1,0,2,0,7,37,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,98,"  CompilerOptions options = null;
",2,0,0,0,0,0,0,2,0,4,31,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,100,"  private PassConfig passes = null;
",2,0,0,0,0,1,0,2,0,5,33,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,123,"  private final Map<String, Node> injectedLibraries = Maps.newLinkedHashMap();
",2,0,0,1,2,2,4,6,0,14,76,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,136,"  private String externExports = null;
",2,0,0,0,0,1,0,2,0,5,36,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,142,"  private int uniqueNameId = 0;
",2,0,0,0,0,1,0,0,0,3,29,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,148,"  private boolean hasRegExpGlobalReferences = true;
",2,0,0,0,0,1,0,0,0,4,49,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,154,"  private final StringBuilder debugLog = new StringBuilder();
",2,0,0,1,2,2,0,4,0,8,59,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,157,"  CodingConvention defaultCodingConvention = new ClosureCodingConvention();
",2,0,0,1,2,0,0,4,0,6,73,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,160,"  private Config parserConfig = null;
",2,0,0,0,0,1,0,2,0,5,35,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,168,"  private final com.google.javascript.rhino.ErrorReporter oldErrorReporter =
",12,0,0,0,0,2,0,0,0,14,74,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,172,"  private final ErrorReporter defaultErrorReporter =
",2,0,0,0,0,2,0,2,0,6,50,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,205,"  private Thread compilerThread = null;
",2,0,0,0,0,1,0,2,0,5,37,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,208,"  private boolean useThreads = true;
",2,0,0,0,0,1,0,0,0,4,34,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,221,"  private GlobalVarReferenceMap globalRefMap = null;
",2,0,0,0,0,1,0,2,0,5,50,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,223,"  private volatile double progress = 0.0;
",2,0,0,0,0,2,0,0,0,4,39,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,853,"  private final PassFactory sanityCheck =
",2,0,0,0,0,2,0,2,0,6,39,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,915,"  private Tracer currentTracer = null;
",2,0,0,0,0,1,0,2,0,5,36,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,916,"  private String currentPassName = null;
",2,0,0,0,0,1,0,2,0,5,38,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,1546,"  private int syntheticCodeId = 0;
",2,0,0,0,0,1,0,0,0,3,32,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,1959,"  protected final CodeChangeHandler.RecentChange recentChange =
",6,0,0,0,0,2,0,0,0,8,61,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,1961,"  private final List<CodeChangeHandler> codeChangeHandlers =
",2,0,0,0,0,2,0,4,0,8,58,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,1967,"  private CompilerInput synthesizedExternsInput = null;
",2,0,0,0,0,1,0,2,0,5,53,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,238,"    addChangeHandler(recentChange);
",0,0,0,1,2,0,4,0,0,4,31,5,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,239,"    outStream = stream;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,240,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,246,"    this();
",0,0,0,1,2,0,0,0,0,0,7,3,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,247,"    setErrorManager(errorManager);
",0,0,0,1,2,0,4,0,0,4,30,5,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,248,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,86,"  static final DiagnosticType MODULE_DEPENDENCY_ERROR =
",2,0,0,0,0,2,0,2,0,6,53,2,0.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,9,91,"  static final DiagnosticType MISSING_ENTRY_ERROR = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,71,2,0.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,127,"        case PARENTHESIZED_PROP: return ""parenthesized"";
",2,0,0,0,0,1,0,0,0,3,48,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1271,"        return allResultsMatch(n.getFirstChild().getNext(), p)
",0,0,0,3,6,1,10,0,0,10,54,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,251,"        tryConvertToNumber(n.getChildAtIndex(1));
",0,0,0,2,4,0,6,0,0,6,41,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,252,"        tryConvertToNumber(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,253,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,800,"      Preconditions.checkState(left.getChildCount() == 2);
",0,1,0,2,4,0,8,0,0,9,52,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,802,"      Node ll = left.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,803,"      Node lr = ll.getNext();
",2,0,0,1,2,0,4,2,0,8,23,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,805,"      Node valueToCombine = ll;
",4,0,0,0,0,0,0,2,0,6,25,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,806,"      Node replacement = performArithmeticOp(opType, valueToCombine, right);
",2,0,0,1,2,0,8,2,0,12,70,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,807,"      if (replacement == null) {
",2,1,0,1,3,0,0,0,0,3,26,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,808,"        valueToCombine = lr;
",4,0,0,0,0,0,0,0,0,5,20,8,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,809,"        replacement = performArithmeticOp(opType, valueToCombine, right);
",2,0,0,1,2,0,8,0,0,11,65,8,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,811,"      if (replacement != null) {
",2,1,0,1,3,0,0,0,0,3,26,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,813,"        left.removeChild(valueToCombine);
",0,0,0,1,2,0,6,0,0,6,33,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,815,"        n.replaceChild(left, left.removeFirstChild());
",0,0,0,2,4,0,10,0,0,10,46,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,818,"        replacement.copyInformationFromForTree(right);
",0,0,0,1,2,0,6,0,0,6,46,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,819,"        n.replaceChild(right, replacement);
",0,0,0,1,2,0,8,0,0,8,35,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,820,"        reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,845,"      return tryFoldLeftChildOp(node, left, right);
",0,0,0,1,2,1,8,0,0,8,45,7,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1433,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1449,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1462,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,320,"        return getStringNumberValue(n.getString());
",0,0,0,2,4,1,6,0,0,6,43,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,337,"    String s = trimJsWhiteSpace(rawJsString);
",2,0,0,1,2,0,4,2,0,8,41,4,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,339,"    if (s.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,22,4,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,343,"    if (s.length() > 2
",0,1,0,1,3,0,4,0,0,5,18,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,354,"    if (s.length() > 3
",0,1,0,1,3,0,4,0,0,5,18,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,364,"    if (s.equals(""infinity"")
",0,0,0,1,3,0,4,0,0,5,24,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,371,"      return Double.parseDouble(s);
",0,0,0,1,2,1,6,0,0,6,29,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,378,"    int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,379,"    int end = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,381,"        && isStrWhiteSpaceChar(s.charAt(end - 1)) == TernaryValue.TRUE) {
",6,2,0,2,6,0,6,0,0,14,65,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,385,"        && isStrWhiteSpaceChar(s.charAt(start)) == TernaryValue.TRUE) {
",4,1,0,2,6,0,8,0,0,13,63,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,388,"    return s.substring(start, end);
",0,0,0,1,2,1,8,0,0,8,31,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,395,"    switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,409,"        return (Character.getType(c) == Character.SPACE_SEPARATOR)
",4,1,0,2,4,1,6,0,0,11,58,7,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,2150,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,2151,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,2152,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,2153,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,332,"    if (rawJsString.contains(""\u000b"")) {
",0,0,0,2,5,0,4,0,0,5,37,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,273,"    n.getParent().replaceChild(n, replacement);
",0,0,0,2,4,0,10,0,0,10,43,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,274,"    reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,275,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,10,274,"      addConstant(String.valueOf(x).replace("".0E"", ""E""));
",0,0,0,3,6,0,10,0,0,12,51,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,738,"        result = lval + rval;
",6,1,0,0,0,0,0,0,0,8,21,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,739,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,3225,"      result.srcrefTree(srcref);
",0,0,0,1,2,0,6,0,0,6,26,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,263,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,266,"    double value = result;
",4,0,0,0,0,0,0,0,0,4,22,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,268,"    Node replacement = NodeUtil.numberNode(value, n);
",2,0,0,1,2,0,8,2,0,12,49,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,269,"    if (replacement.isEquivalentTo(n)) {
",0,0,0,2,5,0,6,0,0,6,36,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,926,"      if (n.getType() != Token.GT && n.getType() != Token.LT) {
",8,3,0,3,7,0,8,0,0,19,57,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,328,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,717,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1419,"      return mayBeStringHelper(n);
",0,0,0,1,2,1,4,0,0,4,28,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,198,"          tryConvertOperandsToNumber(n);
",0,0,0,1,2,0,4,0,0,4,30,8,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,788,"    int opType = n.getType();
",2,0,0,1,2,0,4,0,0,6,25,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,789,"    Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,793,"    Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,798,"    Double rightValObj = NodeUtil.getNumberValue(right);
",2,0,0,1,2,0,6,2,0,10,52,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,799,"    if (rightValObj != null && left.getType() == opType) {
",4,3,0,2,5,0,4,0,0,11,54,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,824,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,841,"      Node result = tryFoldArithmeticOp(node, left, right);
",2,0,0,1,2,0,8,2,0,12,53,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,842,"      if (result != node) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,695,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.06667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,971,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.05263,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,972,"      sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,9,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,261,"    Double result = NodeUtil.getNumberValue(n);
",2,0,0,1,2,0,6,2,0,10,43,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,262,"    if (result == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.05263,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,131,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,145,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,10,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1337,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,764,"    if ((String.valueOf(result).length() <=
",0,1,0,2,6,0,8,0,0,9,39,9,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,773,"      return NodeUtil.numberNode(result, null);
",0,0,0,1,2,1,6,0,0,6,41,7,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,931,"    int op = n.getType();
",2,0,0,1,2,0,4,0,0,6,21,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,934,"    boolean undefinedRight = NodeUtil.isUndefined(right) && rightLiteral;
",4,1,0,1,2,0,6,0,0,11,69,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,935,"    boolean nullRight = right.isNull();
",2,0,0,1,2,0,4,0,0,6,35,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,936,"    int lhType = getNormalizedNodeType(left);
",2,0,0,1,2,0,4,0,0,6,41,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,937,"    int rhType = getNormalizedNodeType(right);
",2,0,0,1,2,0,4,0,0,6,42,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,938,"    switch (lhType) {
",2,0,0,1,3,0,0,0,0,2,17,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,1168,"    int type = n.getType();
",2,0,0,1,2,0,4,0,0,6,23,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,1169,"    if (type == Token.NOT) {
",6,1,0,1,3,0,0,0,0,7,24,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,1178,"    return type;
",2,0,0,0,0,1,0,0,0,2,12,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,724,"    double lval = lValObj;
",4,0,0,0,0,0,0,0,0,4,22,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,725,"    double rval = rValObj;
",4,0,0,0,0,0,0,0,0,4,22,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,727,"    switch (opType) {
",2,0,0,1,3,0,0,0,0,2,17,4,0.04762,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,355,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1348,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,3222,"      result = IR.number(value);
",2,0,0,1,2,0,6,0,0,9,26,8,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,174,"        return tryFoldComparison(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,47,6,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,921,"    boolean leftLiteral = NodeUtil.isLiteralValue(left, true);
",2,0,0,1,2,0,6,0,0,9,58,5,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,922,"    boolean rightLiteral = NodeUtil.isLiteralValue(right, true);
",2,0,0,1,2,0,6,0,0,9,60,5,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,924,"    if (!leftLiteral || !rightLiteral) {
",4,1,0,1,3,0,0,0,0,7,36,4,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,3219,"    } else if (value == Double.NEGATIVE_INFINITY) {
",6,1,0,1,4,0,0,0,0,7,47,6,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,3215,"    if (Double.isNaN(value)) {
",0,0,0,2,5,0,6,0,0,6,26,5,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,3217,"    } else if (value == Double.POSITIVE_INFINITY) {
",6,1,0,1,4,0,0,0,0,7,47,5,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,3224,"    if (srcref != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,3227,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.04000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1014,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1019,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1020,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1021,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1028,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1029,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1033,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1034,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1036,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1037,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1038,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1039,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1041,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1040,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1043,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,688,"    Node result = performArithmeticOp(n.getType(), left, right);
",2,0,0,2,4,0,10,2,0,14,60,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,689,"    if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,704,"    if (opType == Token.ADD
",6,1,0,0,1,0,0,0,0,7,23,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,715,"    Double lValObj = NodeUtil.getNumberValue(left);
",2,0,0,1,2,0,6,2,0,10,47,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,716,"    if (lValObj == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,719,"    Double rValObj = NodeUtil.getNumberValue(right);
",2,0,0,1,2,0,6,2,0,10,48,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,720,"    if (rValObj == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1796,"    return useSourceInfoFromForTree(other);
",0,0,0,1,2,1,4,0,0,4,39,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1392,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,149,"        return tryFoldAdd(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,40,6,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,195,"        Node left = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,196,"        Node right = n.getLastChild();
",2,0,0,1,2,0,4,2,0,8,30,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,197,"        if (!NodeUtil.mayBeString(left) && !NodeUtil.mayBeString(right)) {
",0,1,0,3,7,0,12,0,0,15,66,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,828,"    Preconditions.checkArgument(node.isAdd());
",0,0,0,2,4,0,8,0,0,8,42,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,830,"    if (NodeUtil.mayBeString(node, true)) {
",0,0,0,2,5,0,6,0,0,7,39,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1366,"    return allResultsMatch(n, BOOLEAN_RESULT_PREDICATE);
",0,0,0,1,2,1,6,0,0,6,52,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1370,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1355,"      return isBooleanResultHelper(n);
",0,0,0,1,2,1,4,0,0,4,32,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1319,"        return !mayBeString(n.getFirstChild())
",0,0,0,2,4,1,6,0,0,7,38,6,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1412,"    return mayBeString(n, true);
",0,0,0,1,2,1,4,0,0,5,28,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1416,"    if (recurse) {
",2,0,0,1,3,0,0,0,0,2,14,4,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1424,"    return !isNumericResult(n) && !isBooleanResult(n)
",0,1,0,2,4,1,8,0,0,11,49,4,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1401,"      return mayBeStringHelper(n);
",0,0,0,1,2,1,4,0,0,4,28,6,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,244,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03448,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1786,"    useSourceInfoFrom(other);
",0,0,0,1,2,0,4,0,0,4,25,5,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1787,"    for (Node child = getFirstChild();
",2,0,0,1,3,0,2,2,0,6,34,5,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1788,"         child != null; child = child.getNext()) {
",4,1,0,1,4,0,4,0,0,10,41,4,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1792,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1302,"      return isNumericResultHelper(n);
",0,0,0,1,2,1,4,0,0,4,32,6,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,282,"        return n.getDouble();
",0,0,0,1,2,1,4,0,0,4,21,6,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1313,"    return allResultsMatch(n, NUMBERIC_RESULT_PREDICATE);
",0,0,0,1,2,1,6,0,0,6,53,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1317,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.03226,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,119,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,144,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,884,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,889,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,890,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,977,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,978,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,985,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,986,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,987,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,988,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,989,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,991,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,993,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,996,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,997,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1262,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1274,"        return p.apply(n);
",0,0,0,1,2,1,6,0,0,6,18,6,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,10,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,323,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,882,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,883,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,887,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,888,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,893,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,894,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,939,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,975,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,976,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,983,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,984,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1002,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,2150,"      case Token.GT: return "">"";
",4,0,0,0,0,1,0,0,0,5,26,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,234,"    for (Node c = n.getFirstChild(); c != null; c = next) {
",8,1,0,2,5,0,4,2,0,16,55,4,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,235,"      next = c.getNext();
",2,0,0,1,2,0,4,0,0,7,19,6,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,236,"      tryConvertToNumber(c);
",0,0,0,1,2,0,4,0,0,4,22,7,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,238,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,241,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,273,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.02778,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,958,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.02632,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,959,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.02632,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,2174,"    return this.getType() == Token.ADD;
",4,1,0,1,2,1,2,0,0,7,35,4,0.02564,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,970,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,10,1174,"        return Token.GT;
",4,0,0,0,0,1,0,0,0,4,16,6,0.02128,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,960,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,946,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,947,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,948,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,956,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,957,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,974,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,982,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1001,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1010,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1250,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,2318,"    return this.getType() == Token.NULL;
",4,1,0,1,2,1,2,0,0,7,36,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,1406,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,1379,"    if (right.isString() &&
",0,1,0,1,3,0,4,0,0,5,23,4,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,115,"        return tryFoldGetProp(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,1373,"    Preconditions.checkArgument(n.isGetProp());
",0,0,0,2,4,0,8,0,0,8,43,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,1375,"    if (left.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1444,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01587,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,189,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01316,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1198,"      case Token.IN:     return 9;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01124,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1435,"    switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00952,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1183,"      case Token.HOOK:   return 2;  // ?: operator
",4,0,0,0,0,1,0,0,0,4,44,6,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,260,"        Preconditions.checkState(childCount == 3);
",2,1,0,1,2,0,4,0,0,7,42,7,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,261,"        int p = NodeUtil.precedence(type);
",2,0,0,1,2,0,6,0,0,8,34,7,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,262,"        addExpr(first, p + 1, context);
",2,1,0,1,2,0,6,0,0,9,31,7,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,263,"        cc.addOp(""?"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,264,"        addExpr(first.getNext(), 1, Context.OTHER);
",4,0,0,2,4,0,6,0,0,10,43,7,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,265,"        cc.addOp("":"", true);
",0,0,0,1,2,0,4,0,0,6,20,7,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,266,"        addExpr(last, 1, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,32,7,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,267,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00935,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,746,"      firstNonOperator = firstNonOperator.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,52,6,0.00813,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,10,222,"        validateTrinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,21,6,0.00781,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,10,223,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00781,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,10,754,"    validateChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,25,5,0.00781,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,10,755,"    Node first = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00781,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,10,756,"    validateExpression(first);
",0,0,0,1,2,0,4,0,0,4,26,5,0.00781,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,10,757,"    validateExpression(first.getNext());
",0,0,0,2,4,0,6,0,0,6,36,5,0.00781,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,10,758,"    validateExpression(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,5,0.00781,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,10,759,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00781,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,177,"        return subtree;
",2,0,0,0,0,1,0,0,0,2,15,5,0.00694,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1244,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00592,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,113,"    switch(subtree.getType()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.00503,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,886,"      add(""("");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00467,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,887,"      add(n, Context.OTHER);
",4,0,0,1,2,0,4,0,0,8,22,7,0.00467,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,10,888,"      add("")"");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00467,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,76,"    switch(subtree.getType()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,94,"        tryReduceOperandsForOp(subtree);
",0,0,0,1,2,0,4,0,0,4,32,6,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,95,"        return tryFoldBinaryOperator(subtree);
",0,0,0,1,2,1,4,0,0,4,38,6,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,100,"    Node left = subtree.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,102,"    if (left == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,103,"      return subtree;
",2,0,0,0,0,1,0,0,0,2,15,6,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,106,"    Node right = left.getNext();
",2,0,0,1,2,0,4,2,0,8,28,4,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,108,"    if (right == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,109,"      return subtree;
",2,0,0,0,0,1,0,0,0,2,15,6,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,193,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,230,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00450,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,70,"  PeepholeFoldConstants(boolean late) {
",4,0,0,1,3,0,0,0,0,4,37,2,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,71,"    this.late = late;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,72,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,32,"  static final DiagnosticType INVALID_GETELEM_INDEX_ERROR =
",2,0,0,0,0,2,0,2,0,6,57,2,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,37,"  static final DiagnosticType INDEX_OUT_OF_BOUNDS_ERROR =
",2,0,0,0,0,2,0,2,0,6,55,2,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,42,"  static final DiagnosticType NEGATING_A_NON_NUMBER_ERROR =
",2,0,0,0,0,2,0,2,0,6,57,2,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,47,"  static final DiagnosticType BITWISE_OPERAND_OUT_OF_RANGE =
",2,0,0,0,0,2,0,2,0,6,58,2,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,52,"  static final DiagnosticType SHIFT_AMOUNT_OUT_OF_BOUNDS = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,78,2,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,56,"  static final DiagnosticType FRACTIONAL_BITWISE_OPERAND = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,78,2,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,10,60,"  private static final double MAX_FOLD_NUMBER = Math.pow(2, 53);
",2,0,0,1,2,3,4,0,0,9,62,2,0.00446,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,10,529,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.00398,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,10,238,"        return processConditionalExpression((ConditionalExpression) node);
",2,0,0,2,4,1,2,2,0,6,66,6,0.00398,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,2155,"      case Token.ADD: return ""+"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.00352,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,1203,"      case Token.ADD:    return 11;
",4,0,0,0,0,1,0,0,0,4,29,6,0.00342,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,148,"        state.changed = false;
",4,0,0,0,0,0,0,0,0,6,22,8,0.00337,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,149,"        state.traverseChildScopes = false;
",4,0,0,0,0,0,0,0,0,6,34,8,0.00337,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,150,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00337,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,85,"      traversalState.peek().changed = true;
",2,0,0,1,2,0,4,0,0,8,37,5,0.00336,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,86,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00336,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,10,62,"    Preconditions.checkNotNull(compiler);
",0,0,0,1,2,0,6,0,0,6,37,5,0.00336,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,10,63,"    compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,5,0.00336,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,10,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00336,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,32,"class PeepholeOptimizationsPass
",2,0,0,0,0,0,0,0,0,2,31,1,0.00336,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1642,"      removeChild(child);
",0,0,0,1,2,0,4,0,0,4,19,7,0.00260,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1640,"    Node child = first;
",4,0,0,0,0,0,0,2,0,6,19,4,0.00259,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1641,"    if (child != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00259,0,-1
defect4j,closure,com/google/javascript/rhino/Node,10,1644,"    return child;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00259,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,10,56,"public enum TernaryValue {
",2,0,0,0,1,1,0,0,0,3,26,1,0.00257,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,10,60,"  FALSE {
",2,0,0,0,1,0,0,0,0,2,7,2,0.00257,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,10,95,"  TRUE {
",2,0,0,0,1,0,0,0,0,2,6,2,0.00257,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,10,131,"  UNKNOWN {
",2,0,0,0,1,0,0,0,0,2,9,2,0.00257,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,10,95,"  TRUE {
",2,0,0,0,1,0,0,0,0,2,6,2,0.00257,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,10,60,"  FALSE {
",2,0,0,0,1,0,0,0,0,2,7,2,0.00257,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,10,131,"  UNKNOWN {
",2,0,0,0,1,0,0,0,0,2,9,2,0.00257,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,625,"        return isImmutableValue(n);
",0,0,0,1,2,1,4,0,0,4,27,6,0.00251,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,10,591,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00238,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,10,1351,"    return new Node(type, child1, child2, child3).clonePropsFrom(templateNode);
",8,0,0,2,4,1,4,2,0,14,75,5,0.00233,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,10,92,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,10,93,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,10,99,"    this.compiler = null;
",2,0,0,0,0,0,0,0,0,3,21,4,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,10,100,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,69,"      currentDepth++;
",2,0,0,0,0,0,0,0,0,3,15,5,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,70,"      if (states.size() <= currentDepth) {
",2,1,0,2,5,0,4,0,0,7,36,5,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,71,"        states.add(new ScopeState());
",0,0,0,2,4,0,4,2,0,6,29,8,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,75,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,10,78,"      currentDepth--;
",2,0,0,0,0,0,0,0,0,3,15,5,0.00221,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,11,138,"    return getNativeType(JSTypeNative.NO_TYPE);
",4,0,0,1,2,1,2,0,0,6,43,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,11,151,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,11,171,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,11,161,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,11,580,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.10000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,11,144,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.08333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,11,575,"    ObjectType autoboxObjType = ObjectType.cast(autoboxesTo());
",2,0,0,2,4,0,6,2,0,10,59,4,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,11,576,"    if (autoboxObjType != null) {
",2,1,0,1,3,0,0,0,0,3,29,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,550,"            registry.registerPropertyOnType(propName, objectType);
",0,0,0,1,2,0,8,0,0,8,54,13,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1738,"          return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00909,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1493,"        valueType = rhsValue.getJSType();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00881,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,1252,"      return getNativeType(UNKNOWN_TYPE);
",0,0,0,1,2,1,4,0,0,4,35,7,0.00816,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,545,"          if (getprop.getFirstChild().isThis() &&
",0,1,0,2,5,0,6,0,0,7,39,10,0.00735,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,535,"        if (objectType.hasProperty(propName) ||
",0,1,0,1,3,0,6,0,0,7,39,8,0.00701,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1718,"              maybeCollectMember(t, child.getFirstChild(), child,
",0,0,0,1,3,0,10,0,0,10,51,10,0.00645,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1720,"              break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00645,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1730,"        JSDocInfo info = nodeWithJsDocInfo.getJSDocInfo();
",2,0,0,1,2,0,4,2,0,8,50,6,0.00621,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1735,"        if (info == null ||
",2,3,0,0,1,0,0,0,0,5,19,6,0.00621,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,1245,"      ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
",2,0,0,2,4,0,10,2,0,14,70,6,0.00583,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,1246,"      if (regType != null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.00583,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,490,"        ensureTyped(t, n, NULL_TYPE);
",0,0,0,1,2,0,8,0,0,8,29,6,0.00571,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,491,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,11,120,"    return this == that;
",2,1,0,0,0,1,0,0,0,3,20,4,0.00535,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,11,274,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00518,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,1203,"        scope = narrowScope(scope, n, narrowed);
",2,0,0,1,2,0,8,0,0,11,40,8,0.00485,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,560,"          n.setJSType(getNativeType(NULL_TYPE));
",0,0,0,2,4,0,8,0,0,8,38,7,0.00478,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,561,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00478,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,862,"      redeclareSimpleVar(scope, node, narrowed);
",0,0,0,1,2,0,8,0,0,8,42,7,0.00472,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,117,"        functionScope.declare(symbol, node, bottomType, null);
",0,0,0,1,2,0,10,0,0,10,54,9,0.00463,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,857,"    scope = scope.createChildFlowScope();
",2,0,0,1,2,0,4,0,0,7,37,4,0.00461,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,858,"    if (node.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,23,5,0.00461,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,864,"    return scope;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00461,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,852,"    if (node.isThis()) {
",0,0,0,2,5,0,4,0,0,4,20,5,0.00459,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,347,"      return super.getSlot(name);
",4,0,0,1,2,1,0,0,0,4,27,7,0.00437,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1715,"          Node child = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,8,0.00437,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1716,"          switch (child.getType()) {
",0,0,0,2,5,0,4,0,0,4,26,9,0.00437,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,921,"          return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00427,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,486,"        ensureTyped(t, n, t.getScope().getTypeOfThis());
",0,0,0,3,6,0,12,0,0,12,48,6,0.00382,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,487,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00382,0,-1
defect4j,closure,com/google/javascript/rhino/Node,11,1616,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.00380,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,11,151,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00369,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,126,"    return cache.functionScope.getTypeOfThis();
",4,0,0,1,2,1,2,0,0,6,43,5,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,304,"        n.setJSType(scope.getTypeOfThis());
",0,0,0,2,4,0,8,0,0,8,35,6,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,305,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00357,0,-1
defect4j,closure,com/google/javascript/rhino/Node,11,1581,"      return ""this"";
",0,0,0,0,0,1,0,0,0,1,14,8,0.00356,0,-1
defect4j,closure,com/google/javascript/rhino/Node,11,1596,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.00350,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,116,"      if (functionScope.getVar(symbol) == null && !functionScope.isBottom()) {
",0,2,0,3,7,0,10,0,0,13,72,6,0.00346,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,120,"      inferSlotType(symbol, inferredType);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00346,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,11,310,"      JSType originalType = getPropertyType(propertyName);
",2,0,0,1,2,0,4,2,0,8,52,6,0.00330,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,11,311,"      type = originalType == null ? type :
",6,1,0,0,0,0,0,0,0,8,36,6,0.00330,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,11,156,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1442,"          info = varInfo;
",4,0,0,0,0,0,0,0,0,5,15,10,0.00295,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1320,"      return getDeclaredTypeInAnnotation(sourceName, lValue, info);
",0,0,0,1,2,1,8,0,0,8,61,6,0.00294,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1436,"        JSType valueType = getJSType(value);
",2,0,0,1,2,0,4,2,0,8,36,8,0.00293,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1437,"        JSType nameType = var.getType();
",2,0,0,1,2,0,4,2,0,8,32,8,0.00293,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1438,"        nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;
",6,1,0,2,4,0,4,0,0,13,71,8,0.00293,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1440,"        JSDocInfo info = name.getJSDocInfo();
",2,0,0,1,2,0,4,2,0,8,37,8,0.00293,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1441,"        if (info == null) {
",2,1,0,1,3,0,0,0,0,3,19,8,0.00293,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1445,"        checkEnumAlias(t, info, value);
",0,0,0,1,2,0,8,0,0,8,31,9,0.00293,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1446,"        if (var.isTypeInferred()) {
",0,0,0,2,5,0,4,0,0,4,27,9,0.00293,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,11,735,"      return newNode(transformTokenType(literalNode.getType()));
",0,0,0,3,6,1,8,0,0,8,58,6,0.00290,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,11,219,"        return processKeywordLiteral((KeywordLiteral) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.00290,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,11,306,"      if (isPropertyTypeDeclared(propertyName)) {
",0,0,0,2,5,0,4,0,0,4,43,7,0.00289,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,320,"    this(compiler, reverseInterpreter, typeRegistry, null, null,
",6,0,0,0,1,0,0,0,0,6,60,4,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,322,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,105,"    Preconditions.checkState(!frozen);
",2,0,0,1,2,0,4,0,0,7,34,5,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,106,"    lastSlot = new LinkedFlowSlot(symbol, type, lastSlot);
",8,0,0,1,2,0,0,2,0,11,54,4,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,107,"    depth++;
",2,0,0,0,0,0,0,0,0,3,8,4,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,108,"    cache.dirtySymbols.add(symbol);
",4,0,0,1,2,0,4,0,0,8,31,5,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,109,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,371,"      super(name, type, true);
",4,0,0,1,2,0,0,0,0,5,24,5,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,372,"      this.parent = parent;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,11,373,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00286,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1275,"      } else if (info != null) {
",2,1,0,1,4,0,0,0,0,3,26,7,0.00285,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,11,58,"  public SimpleSlot(String name, JSType type, boolean inferred) {
",8,0,0,1,3,1,0,4,0,13,63,2,0.00281,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,11,59,"    this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00281,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,11,60,"    this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00281,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,11,61,"    this.inferred = inferred;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00281,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/SimpleSlot,11,62,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00281,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,11,1220,"        return Token.NULL;
",4,0,0,0,0,1,0,0,0,4,18,6,0.00277,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1796,"            checkForTypedef(t, n.getFirstChild(), n.getJSDocInfo());
",0,0,0,3,6,0,12,0,0,12,56,9,0.00264,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,356,"          for (Node child = node.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,39,7,0.00263,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,357,"               child != null; child = child.getNext()) {
",4,1,0,1,4,0,4,0,0,10,41,6,0.00263,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,358,"            identifyNameNode(
",0,0,0,0,1,0,2,0,0,2,17,9,0.00263,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,362,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00263,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1795,"          if (n.hasOneChild()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.00263,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,533,"        visitVar(t, n);
",0,0,0,1,2,0,6,0,0,6,15,6,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,534,"        typeable = false;
",2,0,0,0,0,0,0,0,0,4,17,5,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,535,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1429,"    JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() : null;
",2,0,0,2,4,0,8,2,0,12,62,4,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1430,"    for (Node name : n.children()) {
",2,0,0,2,5,0,4,2,0,8,32,4,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1431,"      Node value = name.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,6,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1433,"      Var var = t.getScope().getVar(name.getString());
",2,0,0,3,6,0,10,2,0,14,48,6,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1435,"      if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1453,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1454,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1530,"        if (parent.isExprResult()) {
",0,0,0,2,5,0,4,0,0,4,28,8,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1537,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00262,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,11,416,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00262,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,602,"      scope = traverse(value, scope);
",2,0,0,1,2,0,6,0,0,9,31,6,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,603,"      updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
",0,0,0,1,3,0,10,0,0,11,69,6,0.00261,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,605,"      return scope;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00261,0,-1
defect4j,closure,com/google/javascript/rhino/Node,11,2366,"    return this.getType() == Token.THIS;
",4,1,0,1,2,1,2,0,0,7,36,4,0.00253,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,479,"        parameterType = typeRegistry.getNativeType(UNKNOWN_TYPE);
",2,0,0,1,2,0,6,0,0,9,57,9,0.00251,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,467,"        String varName = left.getString();
",2,0,0,1,2,0,4,2,0,8,34,5,0.00246,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,468,"        Var var = syntacticScope.getVar(varName);
",2,0,0,1,2,0,6,2,0,10,41,5,0.00246,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,480,"        boolean isVarDeclaration = left.hasChildren();
",2,0,0,1,2,0,4,0,0,6,46,6,0.00246,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,481,"        if (!isVarDeclaration || var == null || var.isTypeInferred()) {
",4,3,0,2,5,0,4,0,0,12,63,5,0.00246,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,484,"        left.setJSType(isVarDeclaration || leftType == null ?
",4,2,0,0,1,0,4,0,0,10,53,6,0.00246,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,487,"        if (var != null && var.isTypeInferred()) {
",2,2,0,2,5,0,4,0,0,8,42,5,0.00246,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,473,"      } else if (oldParameterType != null &&
",2,2,0,0,2,0,0,0,0,4,38,7,0.00240,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,747,"        Node name = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,7,0.00235,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,748,"        defineName(name, n, parent,
",0,0,0,0,1,0,8,0,0,8,27,8,0.00235,0,-1
defect4j,closure,com/google/javascript/rhino/Node,11,2374,"    return this.getType() == Token.TRUE;
",4,1,0,1,2,1,2,0,0,7,36,4,0.00235,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,535,"          defineVar(n, parent);
",0,0,0,1,2,0,6,0,0,6,21,7,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,536,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,736,"      assertDefinitionNode(n, Token.VAR);
",4,0,0,1,2,0,4,0,0,8,35,6,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,737,"      JSDocInfo info = n.getJSDocInfo();
",2,0,0,1,2,0,4,2,0,8,34,5,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,738,"      if (n.hasMoreThanOneChild()) {
",0,0,0,2,5,0,4,0,0,4,30,6,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,751,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,788,"      Node value = name.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,5,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,791,"      JSType type = getDeclaredType(sourceName, info, name, value);
",2,0,0,1,2,0,10,2,0,14,61,5,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,792,"      if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,5,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,797,"      defineSlot(name, var, type);
",0,0,0,1,2,0,8,0,0,8,28,6,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,798,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,386,"        scope = traverseChildren(n, scope);
",2,0,0,1,2,0,6,0,0,9,35,5,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,387,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,541,"            objectType.defineInferredProperty(
",0,0,0,0,1,0,4,0,0,4,34,13,0.00229,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,138,"        boolean isTopFunction =
",2,0,0,0,0,0,0,0,0,2,23,9,0.00221,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,143,"        if (!isTopFunction) {
",2,0,0,1,3,0,0,0,0,3,21,8,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,276,"        if (oldParams.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,26,9,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,277,"          Node oldParam = oldParams.next();
",2,0,0,1,2,0,4,2,0,8,33,10,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,278,"          Node newParam = paramBuilder.newParameterFromNode(oldParam);
",2,0,0,1,2,0,6,2,0,10,60,10,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,280,"          oldParamsListHitOptArgs = oldParamsListHitOptArgs ||
",4,1,0,0,0,0,0,0,0,6,52,10,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,286,"          if (currentParam.getNext() != null && newParam.isVarArgs()) {
",0,2,0,3,7,0,8,0,0,10,61,10,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,290,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00221,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,488,"        oldParameterType = oldParameterType.getNext();
",2,0,0,1,2,0,4,0,0,7,46,8,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,150,"        thisParam = thisParam.getNext();
",2,0,0,1,2,0,4,0,0,7,32,8,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionParamBuilder,11,115,"    Node newParam = newParameter(n.getJSType());
",2,0,0,2,4,0,6,2,0,10,44,4,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionParamBuilder,11,116,"    newParam.setVarArgs(n.isVarArgs());
",0,0,0,2,4,0,8,0,0,8,35,5,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionParamBuilder,11,117,"    newParam.setOptionalArg(n.isOptionalArg());
",0,0,0,2,4,0,8,0,0,8,43,5,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionParamBuilder,11,118,"    return newParam;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00220,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,11,786,"                    token = eatTokensUntilEOL(token);
",2,0,0,1,2,0,4,0,0,7,33,15,0.00220,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,11,788,"                  continue retry;
",2,0,0,0,0,0,0,0,0,2,15,13,0.00220,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1642,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,12,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,126,"      boolean thisIsVarArgs = thisParam.isVarArgs();
",2,0,0,1,2,0,4,0,0,6,46,7,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,127,"      boolean thatIsVarArgs = thatParam.isVarArgs();
",2,0,0,1,2,0,4,0,0,6,46,7,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,128,"      boolean thisIsOptional = thisIsVarArgs || thisParam.isOptionalArg();
",4,1,0,1,2,0,4,0,0,9,68,7,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,129,"      boolean thatIsOptional = thatIsVarArgs || thatParam.isOptionalArg();
",4,1,0,1,2,0,4,0,0,9,68,7,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,132,"      if (!thisIsOptional && thatIsOptional) {
",4,1,0,1,3,0,0,0,0,6,40,6,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,149,"      if (!thisIsVarArgs) {
",2,0,0,1,3,0,0,0,0,3,21,6,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,152,"      if (!thatIsVarArgs) {
",2,0,0,1,3,0,0,0,0,3,21,6,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,157,"      if (thisIsVarArgs && thatIsVarArgs) {
",4,1,0,1,3,0,0,0,0,5,37,6,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,161,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00220,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,117,"      JSType thisParamType = thisParam.getJSType();
",2,0,0,1,2,0,4,2,0,8,45,6,0.00219,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,118,"      JSType thatParamType = thatParam.getJSType();
",2,0,0,1,2,0,4,2,0,8,45,6,0.00219,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,119,"      if (thisParamType != null) {
",2,1,0,1,3,0,0,0,0,3,28,6,0.00219,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,120,"        if (thatParamType == null ||
",2,2,0,0,1,0,0,0,0,4,28,8,0.00219,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1638,"          AstFunctionContents contents =
",2,0,0,0,0,0,0,2,0,4,30,10,0.00219,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1640,"          if (contents == null ||
",2,2,0,0,1,0,0,0,0,4,23,10,0.00219,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1628,"          for (Node current = n.getParent();
",2,0,0,1,3,0,4,2,0,8,34,11,0.00219,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1629,"               !(current.isScript() || current.isFunction());
",0,1,0,3,6,0,8,0,0,10,46,10,0.00219,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1631,"            if (NodeUtil.isControlStructure(current)) {
",0,0,0,2,5,0,6,0,0,6,43,13,0.00219,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1630,"               current = current.getParent()) {
",2,0,0,1,4,0,4,0,0,7,32,10,0.00219,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,11,115,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,269,"      FunctionParamBuilder paramBuilder =
",2,0,0,0,0,0,0,2,0,4,35,6,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,271,"      Iterator<Node> oldParams = oldType.getParameters().iterator();
",2,0,0,2,4,0,6,4,0,12,62,6,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,272,"      boolean warnedAboutArgList = false;
",2,0,0,0,0,0,0,0,0,3,35,7,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,273,"      boolean oldParamsListHitOptArgs = false;
",2,0,0,0,0,0,0,0,0,3,40,7,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,274,"      for (Node currentParam = paramsParent.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,54,7,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,275,"           currentParam != null; currentParam = currentParam.getNext()) {
",4,1,0,1,4,0,4,0,0,10,62,6,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,303,"      while (oldParams.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,29,7,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,307,"      parametersNode = paramBuilder.build();
",2,0,0,1,2,0,4,0,0,7,38,6,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,961,"        return propType.toMaybeFunctionType();
",0,0,0,1,2,1,4,0,0,4,38,8,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,258,"    returnType = oldType.getReturnType();
",2,0,0,1,2,0,4,0,0,7,37,4,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,259,"    returnTypeInferred = oldType.isReturnTypeInferred();
",2,0,0,1,2,0,4,0,0,7,52,4,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,260,"    if (paramsParent == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,309,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00218,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,451,"      oldParameterType = parametersNode.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,50,6,0.00218,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,332,"    return call.returnTypeInferred;
",4,0,0,0,0,1,0,0,0,4,31,5,0.00217,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,164,"    if (thisParam != null
",2,1,0,0,1,0,0,0,0,3,21,7,0.00217,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,170,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00217,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,114,"    Node thisParam = parameters.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,4,0.00217,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,115,"    Node thatParam = that.parameters.getFirstChild();
",6,0,0,1,2,0,2,2,0,10,49,4,0.00217,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,116,"    while (thisParam != null && thatParam != null) {
",4,3,0,1,3,0,0,0,0,7,48,4,0.00217,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,920,"        if (var.isTypeInferred()) {
",0,0,0,2,5,0,4,0,0,4,27,9,0.00216,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1623,"        } else if (!scope.isDeclared(qName, false) &&
",0,1,0,1,4,0,6,0,0,9,45,8,0.00216,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,81,"    if (!(other instanceof ArrowType)) {
",2,0,0,2,5,0,0,2,0,5,36,4,0.00216,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,85,"    ArrowType that = (ArrowType) other;
",4,0,0,1,2,0,0,4,0,8,35,4,0.00216,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,91,"    if (!this.returnType.isSubtype(that.returnType)) {
",6,0,0,2,5,0,2,0,0,9,50,4,0.00216,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1014,"      FunctionType other = that.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,48,6,0.00216,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1015,"      if (other.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,26,7,0.00216,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1019,"      if (this.isInterface()) {
",0,0,0,2,5,0,2,0,0,2,25,7,0.00216,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1030,"      boolean treatThisTypesAsCovariant =
",2,0,0,0,0,0,0,0,0,2,35,7,0.00216,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1045,"      return treatThisTypesAsCovariant && this.call.isSubtype(other.call);
",8,1,0,1,2,1,2,0,0,11,68,6,0.00216,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,529,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00215,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,11,192,"              } else if (currentIndex < functionTypePosition) {
",4,1,0,1,4,0,0,0,0,5,49,16,0.00215,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,11,188,"              it.remove();
",0,0,0,1,2,0,4,0,0,4,12,16,0.00214,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,11,190,"              if (currentIndex == functionTypePosition) {
",4,1,0,1,3,0,0,0,0,5,43,15,0.00214,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,11,773,"                  if (jsdocBuilder.shouldParseDocumentation()) {
",0,0,0,2,5,0,4,0,0,4,46,14,0.00214,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,571,"      if (!builder.addVarArgs(paramType) && !warnedAboutArgList) {
",2,1,0,2,5,0,6,0,0,11,60,7,0.00213,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocTokenStream,11,129,"          return JsDocToken.COLON;
",4,0,0,0,0,1,0,0,0,4,24,8,0.00212,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NumberType,11,117,"    return getNativeType(JSTypeNative.NUMBER_OBJECT_TYPE);
",4,0,0,1,2,1,2,0,0,6,54,5,0.00211,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,11,525,"            return registry.getNativeFunctionType(
",0,0,0,0,1,1,4,0,0,4,38,11,0.00211,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,537,"          if (""prototype"".equals(propName)) {
",0,0,0,2,5,0,4,0,0,5,35,11,0.00211,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,11,153,"    ObjectType implicitPrototype = getImplicitPrototype();
",2,0,0,1,2,0,2,2,0,6,54,4,0.00210,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,11,154,"    if (implicitPrototype == null) {
",2,1,0,1,3,0,0,0,0,3,32,4,0.00210,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,11,155,"      return this.properties.size();
",2,0,0,1,2,1,2,0,0,4,30,7,0.00210,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,11,157,"    int localCount = 0;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00210,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,11,158,"    for (String property : properties.keySet()) {
",2,0,0,2,5,0,4,2,0,8,45,4,0.00210,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,11,163,"    return implicitPrototype.getPropertiesCount() + localCount;
",2,1,0,1,2,1,4,0,0,7,59,4,0.00210,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1178,"            scopeToDeclareIn.undeclare(prototypeVar);
",0,0,0,1,2,0,6,0,0,6,41,12,0.00210,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,514,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00210,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,917,"    return this.call.isEquivalentTo(otherType.call);
",6,0,0,1,2,1,2,0,0,8,48,5,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1101,"    if (prototypeSlot != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1107,"      if (source == null || prototypeSlot.getNode() == null) {
",2,3,0,2,5,0,4,0,0,9,56,6,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1108,"        prototypeSlot = new Property(prototypeSlot.getName(),
",2,0,0,1,3,0,4,2,0,9,53,8,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1112,"    this.source = source;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1113,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,11,627,"      return name;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00209,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,687,"      boolean isInstanceObject = existingType.isInstanceType();
",2,0,0,1,2,0,4,0,0,6,57,7,0.00209,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,688,"      if (isInstanceObject || fnName.equals(""Function"")) {
",2,1,0,2,5,0,4,0,0,8,52,6,0.00209,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,689,"        FunctionType existingFn =
",2,0,0,0,0,0,0,2,0,4,25,8,0.00209,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,694,"        if (existingFn.getSource() == null) {
",0,1,0,2,5,0,4,0,0,5,37,8,0.00209,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,695,"          existingFn.setSource(contents.getSourceNode());
",0,0,0,2,4,0,8,0,0,8,47,11,0.00209,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,698,"        if (!existingFn.hasEqualCallType(fnType)) {
",0,0,0,2,5,0,6,0,0,7,43,8,0.00209,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,703,"        return existingFn;
",2,0,0,0,0,1,0,0,0,2,18,8,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,11,66,"    if (this == obj) return true;
",2,1,0,1,2,1,0,0,0,4,29,4,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,11,67,"    if (obj == null) return false;
",2,1,0,1,2,1,0,0,0,4,30,4,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,11,68,"    if (getClass() != obj.getClass()) return false;
",0,1,0,3,6,1,6,0,0,8,47,4,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,11,69,"    return id.equals(((InputId) obj).id);
",4,0,0,3,6,1,4,2,0,10,37,5,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,11,632,"      return propertyNode;
",2,0,0,0,0,1,0,0,0,2,20,5,0.00209,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,193,"    return isEquivalentTo(registry.getNativeType(U2U_CONSTRUCTOR_TYPE));
",0,0,0,2,4,1,8,0,0,8,68,5,0.00208,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,11,403,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00208,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,11,970,"      return createUnionType(type, getNativeType(JSTypeNative.VOID_TYPE));
",4,0,0,2,4,1,6,0,0,10,68,7,0.00208,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,560,"        Scope s = var.getScope();
",2,0,0,1,2,0,4,2,0,8,25,8,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,561,"        s.undeclare(var);
",0,0,0,1,2,0,6,0,0,6,17,9,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,562,"        newVar = s.declare(variableName, n, varType, input, false);
",2,0,0,1,2,0,12,0,0,16,59,8,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,564,"        n.setJSType(varType);
",0,0,0,1,2,0,6,0,0,6,21,9,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,565,"        if (parent.isVar()) {
",0,0,0,2,5,0,4,0,0,4,21,9,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,570,"          Preconditions.checkState(parent.isFunction());
",0,0,0,2,4,0,8,0,0,8,46,11,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,571,"          parent.setJSType(varType);
",0,0,0,1,2,0,6,0,0,6,26,11,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,573,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,11,403,"          updateScopeForTypeChange(scope, n, n.getJSType(), castType);
",0,0,0,2,4,0,12,0,0,12,60,11,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1893,"        JSType infoType = info.getType().evaluate(t.getScope(), typeRegistry);
",2,0,0,3,6,0,12,2,0,16,70,8,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1894,"        validator.expectCanCast(t, n, infoType, type);
",0,0,0,1,2,0,12,0,0,12,46,9,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1895,"        type = infoType;
",4,0,0,0,0,0,0,0,0,5,16,8,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,508,"    castType = castType.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,0,0,7,51,4,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,509,"    type = type.restrictByNotNullOrUndefined();
",2,0,0,1,2,0,4,0,0,7,43,4,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,511,"    if (!type.canAssignTo(castType) && !castType.canAssignTo(type)) {
",0,1,0,3,7,0,12,0,0,15,65,4,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,515,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,302,"        JSType type = paramNode.getJSType();
",2,0,0,1,2,0,4,2,0,8,36,8,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,303,"        if (type != null && type.hasAnyTemplate()) {
",2,2,0,2,5,0,4,0,0,8,44,8,0.00207,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,11,1513,"        return createOptionalType(
",0,0,0,0,1,1,2,0,0,2,26,6,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,559,"      if (var.input == null) {
",4,1,0,1,3,0,0,0,0,5,24,6,0.00206,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1269,"    return !getTemplateTypeNames().isEmpty()
",0,0,0,2,4,1,4,0,0,5,40,6,0.00206,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,294,"    return returnType.hasAnyTemplate()
",0,0,0,1,2,1,4,0,0,4,34,6,0.00206,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,299,"    if (parameters != null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00206,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,300,"      for (Node paramNode = parameters.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,49,7,0.00206,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,301,"           paramNode != null; paramNode = paramNode.getNext()) {
",4,1,0,1,4,0,4,0,0,10,53,6,0.00206,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,308,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00206,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,11,1523,"        return getNativeType(ALL_TYPE);
",0,0,0,1,2,1,4,0,0,4,31,6,0.00205,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,11,516,"    Preconditions.checkState(var.scope == this);
",4,1,0,1,2,0,4,0,0,9,44,5,0.00205,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,11,517,"    Preconditions.checkState(vars.get(var.name) == var);
",6,1,0,2,4,0,8,0,0,15,52,5,0.00205,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,11,518,"    vars.remove(var.name);
",4,0,0,1,2,0,4,0,0,8,22,5,0.00205,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,11,519,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00205,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,11,95,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00204,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,11,161,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,533,"    Var newVar = var;
",4,0,0,0,0,0,0,2,0,6,17,4,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,534,"    boolean allowDupe = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,535,"    if (n.isGetProp() ||
",0,1,0,1,3,0,4,0,0,5,20,4,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,545,"    JSType varType = var.getType();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,550,"    if (varType != null &&
",2,4,0,0,1,0,0,0,0,6,22,4,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,11,590,"    return newVar;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1128,"        Var oldVar = scopeToDeclareIn.getVar(variableName);
",2,0,0,1,2,0,6,2,0,10,51,7,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1129,"        newVar = validator.expectUndeclaredVariable(
",2,0,0,0,1,0,4,0,0,7,44,7,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1131,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00204,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,11,138,"        UnionType union = alternate.toMaybeUnionType();
",2,0,0,1,2,0,4,2,0,8,47,8,0.00203,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,11,139,"        for (JSType unionAlt : union.getAlternates()) {
",2,0,0,2,5,0,4,2,0,8,47,8,0.00203,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,11,140,"          addAlternate(unionAlt);
",0,0,0,1,2,0,4,0,0,4,23,11,0.00203,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,11,141,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00203,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,11,142,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,11,242,"          arg.putBooleanProp(Node.IS_VAR_ARGS_PARAM, true);
",4,0,0,1,2,0,4,0,0,9,49,10,0.00203,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,11,1025,"    return info.parameters.size();
",4,0,0,1,2,1,2,0,0,6,30,5,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,816,"      return scope.isGlobal() || !type.isReturnTypeInferred();
",0,1,0,2,4,1,8,0,0,10,56,5,0.00202,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,566,"      if (!builder.addOptionalParams(paramType) && !warnedAboutArgList) {
",2,1,0,2,5,0,6,0,0,11,67,6,0.00202,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,11,518,"    return getFlag(MASK_OVERRIDE);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00201,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,11,1094,"    return source;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00200,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,11,1612,"        next();
",0,0,0,1,2,0,2,0,0,2,7,10,0.00198,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,11,1613,"        skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,10,0.00198,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,11,1614,"        typeNode = wrapNode(Token.EQUALS, typeNode);
",6,0,0,1,2,0,4,0,0,11,44,9,0.00198,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocTokenStream,11,132,"          return JsDocToken.EQUALS;
",4,0,0,0,0,1,0,0,0,4,25,8,0.00198,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,11,112,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00198,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,11,582,"    return getFlag(MASK_IMPLICITCAST);
",0,0,0,1,2,1,4,0,0,4,34,5,0.00197,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1892,"      if (info.hasType()) {
",0,0,0,2,5,0,4,0,0,4,21,7,0.00197,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,1898,"      if (info.isImplicitCast() && !inExterns) {
",2,1,0,2,5,0,4,0,0,8,42,6,0.00197,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,825,"      if (reportUnknownTypes.isOn()) {
",0,0,0,2,5,0,4,0,0,4,32,8,0.00197,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,11,829,"      unknownCount++;
",2,0,0,0,0,0,0,0,0,3,15,7,0.00197,0,-1
defect4j,closure,com/google/javascript/rhino/Node,11,1919,"    return getBooleanProp(OPT_ARG_NAME);
",0,0,0,1,2,1,4,0,0,4,36,5,0.00196,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,317,"      returnType = info.getReturnType().evaluate(scope, typeRegistry);
",2,0,0,2,4,0,10,0,0,13,64,6,0.00196,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,11,318,"      returnTypeInferred = false;
",2,0,0,0,0,0,0,0,0,4,27,6,0.00196,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,194,"      thisParam = thisParam.getNext();
",2,0,0,1,2,0,4,0,0,7,32,6,0.00196,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,195,"      otherParam = otherParam.getNext();
",2,0,0,1,2,0,4,0,0,7,34,6,0.00196,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,196,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00196,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,181,"      JSType thisParamType = thisParam.getJSType();
",2,0,0,1,2,0,4,2,0,8,45,6,0.00195,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,182,"      JSType otherParamType = otherParam.getJSType();
",2,0,0,1,2,0,4,2,0,8,47,6,0.00195,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,183,"      if (thisParamType != null) {
",2,1,0,1,3,0,0,0,0,3,28,6,0.00195,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,185,"        if (otherParamType != null &&
",2,2,0,0,1,0,0,0,0,4,29,8,0.00195,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,704,"          jsType = info.getType().evaluate(scope, typeRegistry);
",2,0,0,2,4,0,10,0,0,13,54,9,0.00195,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,11,1270,"        return getDeclaredTypeInAnnotation(sourceName, lValue, info);
",0,0,0,1,2,1,8,0,0,8,61,8,0.00195,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,227,"        JSType paramType = param.getJSType();
",2,0,0,1,2,0,4,2,0,8,37,8,0.00195,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,11,228,"        if (paramType != null) {
",2,1,0,1,3,0,0,0,0,3,24,8,0.00195,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,946,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,947,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,948,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,956,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,957,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,958,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,959,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,960,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,970,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,974,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,982,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,1001,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,1010,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Token,12,196,"          case ADD:             return ""ADD"";
",2,0,0,0,0,1,0,0,0,3,35,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Token,12,263,"          case BLOCK:           return ""BLOCK"";
",2,0,0,0,0,1,0,0,0,3,37,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Token,12,266,"          case SCRIPT:          return ""SCRIPT"";
",2,0,0,0,0,1,0,0,0,3,38,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,12,145,"          Renamer renamer = nameStack.peek().forChildScope();
",2,0,0,2,4,0,6,2,0,10,51,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,12,147,"          String name = n.getFirstChild().getString();
",2,0,0,2,4,0,6,2,0,10,44,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,12,148,"          renamer.addDeclaredName(name);
",0,0,0,1,2,0,6,0,0,6,30,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,12,150,"          nameStack.push(renamer);
",0,0,0,1,2,0,6,0,0,6,24,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,12,189,"        nameStack.pop();
",0,0,0,1,2,0,4,0,0,4,16,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,131,"        Preconditions.checkState(first.getNext().isBlock() &&
",0,1,0,2,5,0,10,0,0,11,53,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,133,"        Preconditions.checkState(childCount >= 2 && childCount <= 3);
",4,3,0,1,2,0,4,0,0,11,61,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,135,"        add(""try"");
",0,0,0,1,2,0,2,0,0,3,11,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,136,"        add(first, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,35,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,140,"        Node catchblock = first.getNext().getFirstChild();
",2,0,0,2,4,0,6,2,0,10,50,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,141,"        if (catchblock != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,142,"          add(catchblock);
",0,0,0,1,2,0,4,0,0,4,16,9,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,145,"        if (childCount == 3) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,153,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,154,"        add(""catch("");
",0,0,0,1,3,0,2,0,0,3,14,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,155,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,156,"        add("")"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,157,"        add(last, Context.PRESERVE_BLOCK);
",4,0,0,1,2,0,4,0,0,8,34,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,158,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,837,"        Preconditions.checkState(handler.isTry());
",0,0,0,2,4,0,8,0,0,8,42,9,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,838,"        Node catchBlock = NodeUtil.getCatchBlock(handler);
",2,0,0,1,2,0,6,2,0,10,50,8,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,840,"        if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.
",0,0,0,2,5,0,6,0,0,7,71,8,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,847,"          if (lastJump == cfgNode) {
",4,1,0,1,3,0,0,0,0,5,26,10,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,848,"            createEdge(cfgNode, Branch.ON_EX, catchBlock);
",4,0,0,1,2,0,6,0,0,10,46,13,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,849,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,113,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,12,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,134,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,135,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,509,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,510,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,511,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,512,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,514,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,517,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,518,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,519,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,520,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,521,"      validateCatch(catches.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,39,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,522,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,526,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,531,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,534,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,537,"    validateNodeType(Token.CATCH, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,538,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,539,"    validateName(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,540,"    validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,541,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowGraph,12,201,"        return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,757,"        } else if (NodeUtil.getCatchBlock(parent) == node){
",2,1,0,2,6,0,6,0,0,9,51,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,758,"          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.
",0,0,0,2,5,0,6,0,0,6,61,9,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,761,"            return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,11,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,100,"          return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,575,"        escaped.add(var);
",0,0,0,1,2,0,6,0,0,6,17,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,2750,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,2751,"    return n.getChildCount() == 3;
",0,1,0,1,2,1,4,0,0,5,30,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,2759,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,2760,"    return n.getFirstChild().getNext();
",0,0,0,2,4,1,6,0,0,6,35,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,2768,"    Preconditions.checkArgument(n.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,2769,"    return n.hasChildren() && n.getFirstChild().isCatch();
",0,1,0,3,6,1,10,0,0,11,54,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,230,"        exceptionHandler.push(n);
",0,0,0,1,2,0,6,0,0,6,25,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,231,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,285,"          if (n == parent.getFirstChild().getNext()) {
",2,1,0,3,7,0,6,0,0,9,44,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,286,"            Preconditions.checkState(exceptionHandler.peek() == parent);
",2,1,0,2,4,0,8,0,0,11,60,10,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,287,"            exceptionHandler.pop();
",0,0,0,1,2,0,4,0,0,4,23,10,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,332,"        handleTry(n);
",0,0,0,1,2,0,4,0,0,4,13,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,333,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,335,"        handleCatch(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,336,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,515,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,544,"    createEdge(node, Branch.UNCOND, node.getFirstChild());
",4,0,0,2,4,0,8,0,0,12,54,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,545,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,548,"    createEdge(node, Branch.UNCOND, node.getLastChild());
",4,0,0,2,4,0,8,0,0,12,53,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,549,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,750,"        if (parent.getFirstChild() == node) {
",2,1,0,2,5,0,4,0,0,7,37,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,751,"          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.
",0,0,0,2,5,0,6,0,0,6,61,8,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,754,"            return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,10,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,12,191,"        return processCatchClause((CatchClause) node);
",2,0,0,2,4,1,2,2,0,6,46,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,12,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,515,"      AstNode catchVar = clauseNode.getVarName();
",2,0,0,1,2,0,4,2,0,8,43,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,516,"      Node node = newNode(Token.CATCH, transform(catchVar));
",6,0,0,2,4,0,6,2,0,14,54,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,517,"      if (clauseNode.getCatchCondition() != null) {
",0,1,0,2,5,0,4,0,0,5,45,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,523,"      node.addChildToBack(transformBlock(clauseNode.getBody()));
",0,0,0,3,6,0,10,0,0,10,58,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,524,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,987,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,989,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,990,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,992,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,995,"        if (lineSet == false) {
",2,1,0,1,3,0,0,0,0,4,23,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,996,"          block.setLineno(cc.getLineno());
",0,0,0,2,4,0,8,0,0,8,32,10,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,997,"          maybeSetLengthFrom(block, cc);
",0,0,0,1,2,0,6,0,0,6,30,10,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,998,"          lineSet = true;
",2,0,0,0,0,0,0,0,0,4,15,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,1000,"        block.addChildToBack(transform(cc));
",0,0,0,2,4,0,8,0,0,8,36,8,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,1001,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,1002,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,1004,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,1005,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,1012,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,1017,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,12,150,"        Preconditions.checkState(n.getChildCount() == 2);
",0,1,0,2,4,0,8,0,0,9,49,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,12,151,"        Preconditions.checkState(n.getFirstChild().isName());
",0,0,0,3,6,0,10,0,0,10,53,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,12,155,"        final Node var = n.getFirstChild();
",2,0,0,1,2,1,4,2,0,9,35,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,12,156,"        final Node block = var.getNext();
",2,0,0,1,2,1,4,2,0,9,33,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,12,158,"        declareVar(var);
",0,0,0,1,2,0,4,0,0,4,16,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,12,159,"        scanVars(block, n);
",0,0,0,1,2,0,6,0,0,6,19,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,12,160,"        return;  // only one child to scan
",0,0,0,0,0,1,0,0,0,0,34,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,12,746,"      firstNonOperator = firstNonOperator.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,52,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,392,"          pathCheck = new CheckPathsBetweenNodes<Node, ControlFlowGraph.Branch>(
",6,0,0,0,1,0,0,4,0,10,70,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,400,"        if (pathCheck.somePathsSatisfyPredicate()) {
",0,0,0,2,5,0,4,0,0,4,44,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,112,"          if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
",0,1,0,3,7,0,10,0,0,12,60,10,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,343,"        def.reachingDef.put(other, null);
",4,0,0,1,2,0,4,0,0,8,33,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,313,"    List<GraphEdge<N, E>> result = Lists.newArrayList();
",2,0,0,1,2,0,4,8,0,14,52,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,314,"    for (DiGraphNode<N, E> node : nodes.values()) {
",2,0,0,2,5,0,4,6,0,12,47,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,315,"      for (DiGraphEdge<N, E> edge : node.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,51,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,316,"        result.add(edge);
",0,0,0,1,2,0,6,0,0,6,17,9,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,317,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,318,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,319,"    return Collections.unmodifiableList(result);
",0,0,0,1,2,1,6,0,0,6,44,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,246,"    if (nodeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,247,"      nodeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,249,"    pushAnnotations(nodeAnnotationStack, getNodes());
",0,0,0,2,4,0,6,0,0,6,49,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,250,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,257,"    Preconditions.checkNotNull(nodeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,259,"    popAnnotations(nodeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,260,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,267,"    if (edgeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,268,"      edgeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,270,"    pushAnnotations(edgeAnnotationStack, getEdges());
",0,0,0,2,4,0,6,0,0,6,49,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,271,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,278,"    Preconditions.checkNotNull(edgeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,280,"    popAnnotations(edgeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,281,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,338,"    stack.push(new GraphAnnotationState(haveAnnotations.size()));
",0,0,0,3,6,0,8,2,0,10,61,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,339,"    for (Annotatable h : haveAnnotations) {
",4,0,0,1,3,0,0,2,0,6,39,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,340,"      stack.peek().add(new AnnotationState(h, h.getAnnotation()));
",2,0,0,4,8,0,10,2,0,14,60,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,341,"      h.setAnnotation(null);
",0,0,0,1,2,0,4,0,0,4,22,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,342,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,343,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,349,"    for (AnnotationState as : stack.pop()) {
",2,0,0,2,5,0,4,2,0,8,40,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,350,"      as.first.setAnnotation(as.second);
",8,0,0,1,2,0,2,0,0,10,34,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,351,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,352,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,573,"      return (A) annotation;
",2,0,0,1,2,1,0,2,0,4,22,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,578,"      annotation = data;
",4,0,0,0,0,0,0,0,0,5,18,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,12,579,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,66,"    public AnnotationState(Annotatable annotatable, Annotation annotation) {
",6,0,0,1,3,1,0,4,0,11,72,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,67,"      this.first = annotatable;
",4,0,0,0,0,0,0,0,0,5,25,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,68,"      this.second = annotation;
",4,0,0,0,0,0,0,0,0,5,25,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,69,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,62,"  private static final class AnnotationState {
",2,0,0,0,1,3,0,0,0,5,44,2,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,80,"      super(size);
",2,0,0,1,2,0,0,0,0,2,12,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,12,81,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,520,"          cur = cur.getNext()) {
",2,0,0,1,4,0,4,0,0,7,22,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,431,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,521,"        if (predicate.apply(cur)) {
",0,0,0,2,5,0,6,0,0,6,27,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,400,"            def.unknownDependencies = true;
",4,0,0,0,0,0,0,0,0,6,31,14,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,166,"          inlinedNewDependencies.add(t.getScope().getVar(c.varName));
",4,0,0,3,6,0,10,0,0,14,59,11,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,415,"        Node rhs = def.getLastChild();
",2,0,0,1,2,0,4,2,0,8,30,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,416,"        rhs.detachFromParent();
",0,0,0,1,2,0,4,0,0,4,23,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,418,"        Preconditions.checkState(defParent.isExprResult());
",0,0,0,2,4,0,8,0,0,8,51,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,419,"        while (defParent.getParent().isLabel()) {
",0,0,0,3,7,0,6,0,0,6,41,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,422,"        defParent.detachFromParent();
",0,0,0,1,2,0,4,0,0,4,29,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,423,"        useParent.replaceChild(use, rhs);
",0,0,0,1,2,0,8,0,0,8,33,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,424,"      } else if (defParent.isVar()) {
",0,0,0,2,6,0,4,0,0,4,31,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,103,"        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
",0,1,0,3,7,0,10,0,0,11,61,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,107,"        if (n.isDelProp()) {
",0,0,0,2,5,0,4,0,0,4,20,9,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,111,"        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,116,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,172,"            resultMap.put(var, aDef);
",0,0,0,1,2,0,8,0,0,8,25,12,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,92,"        if (n == null) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,99,"        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
",0,1,0,3,7,0,10,0,0,11,59,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,290,"        if (inlinedNewDependencies.contains(dependency)) {
",0,0,0,2,5,0,6,0,0,6,50,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,293,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,794,"      valid = n.hasMoreThanOneChild();
",2,0,0,1,2,0,4,0,0,7,32,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,268,"          return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,169,"          Definition bDef = b.reachingDef.get(var);
",6,0,0,1,2,0,4,2,0,12,41,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,171,"          if (aDef.equals(bDef)) {
",0,0,0,2,5,0,6,0,0,6,24,10,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,176,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,184,"        Var var = entry.getKey();
",2,0,0,1,2,0,4,2,0,8,25,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,185,"        if (!a.reachingDef.containsKey(var)) {
",4,0,0,2,5,0,4,0,0,9,38,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,188,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,425,"        Node rhs = def.getLastChild();
",2,0,0,1,2,0,4,2,0,8,30,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,426,"        def.removeChild(rhs);
",0,0,0,1,2,0,6,0,0,6,21,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,427,"        useParent.replaceChild(use, rhs);
",0,0,0,1,2,0,8,0,0,8,33,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,428,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,79,"      if (!(other instanceof Definition)) {
",2,0,0,2,5,0,0,2,0,5,37,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,82,"      Definition otherDef = (Definition) other;
",4,0,0,1,2,0,0,4,0,8,41,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,85,"      return otherDef.node == node;
",6,1,0,0,0,1,0,0,0,7,29,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,297,"          List<L> values = new ArrayList<L>(inNodes.size());
",2,0,0,2,4,0,4,8,0,14,50,11,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,298,"          for (DiGraphNode<N, Branch> currentNode : inNodes) {
",4,0,0,1,3,0,0,6,0,10,52,11,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,299,"            FlowState<L> currentNodeState = currentNode.getAnnotation();
",2,0,0,1,2,0,4,4,0,10,60,13,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,300,"            values.add(currentNodeState.getOut());
",0,0,0,2,4,0,8,0,0,8,38,14,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,301,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,302,"          state.setIn(joinOp.apply(values));
",0,0,0,2,4,0,10,0,0,10,34,12,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,984,"    return functionCallHasSideEffects(callNode, null);
",0,0,0,1,2,1,4,0,0,5,50,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,150,"      MustDef result = new MustDef();
",2,0,0,1,2,0,0,4,0,6,31,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,151,"      Map<Var, Definition> resultMap = result.reachingDef;
",6,0,0,0,0,0,0,6,0,12,52,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,154,"      for (Map.Entry<Var, Definition> varEntry : a.reachingDef.entrySet()) {
",10,0,0,2,5,0,2,4,0,16,70,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,155,"        Var var = varEntry.getKey();
",2,0,0,1,2,0,4,2,0,8,28,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,156,"        Definition aDef = varEntry.getValue();
",2,0,0,1,2,0,4,2,0,8,38,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,158,"        if (aDef == null) {
",2,1,0,1,3,0,0,0,0,3,19,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,166,"        Node aNode = aDef.node;
",6,0,0,0,0,0,0,2,0,8,23,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,168,"        if (b.reachingDef.containsKey(var)) {
",4,0,0,2,5,0,4,0,0,8,37,8,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,179,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,183,"      for (Map.Entry<Var, Definition> entry : b.reachingDef.entrySet()) {
",10,0,0,2,5,0,2,4,0,16,67,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,189,"      return result;
",2,0,0,0,0,1,0,0,0,2,14,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,438,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,123,"      ReachingUses result = new ReachingUses();
",2,0,0,1,2,0,0,4,0,6,41,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,124,"      for (ReachingUses uses : from) {
",4,0,0,1,3,0,0,2,0,6,32,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,125,"        result.mayUseMap.putAll(uses.mayUseMap);
",8,0,0,1,2,0,2,0,0,10,40,8,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,126,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,127,"      return result;
",2,0,0,0,0,1,0,0,0,2,14,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,316,"        List<L> values = new ArrayList<L>(inNodes.size());
",2,0,0,2,4,0,4,8,0,14,50,9,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,317,"        for (DiGraphNode<N, Branch> currentNode : inNodes) {
",4,0,0,1,3,0,0,6,0,10,52,9,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,318,"          FlowState<L> currentNodeState = currentNode.getAnnotation();
",2,0,0,1,2,0,4,4,0,10,60,11,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,319,"          values.add(currentNodeState.getIn());
",0,0,0,2,4,0,8,0,0,8,37,12,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,320,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,12,321,"        state.setOut(joinOp.apply(values));
",0,0,0,2,4,0,10,0,0,10,35,10,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1203,"      case Token.ADD:    return 11;
",4,0,0,0,0,1,0,0,0,4,29,6,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,2155,"      case Token.ADD: return ""+"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,455,"                def = n;
",4,0,0,0,0,0,0,0,0,5,8,14,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,435,"      if (s.scope != jsScope) {
",6,1,0,1,3,0,0,0,0,7,25,6,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,453,"              Node lhs = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,29,12,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,454,"              if (lhs.isName() && lhs.getString().equals(varName)) {
",0,1,0,4,9,0,12,0,0,13,54,12,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,457,"              return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,448,"                def = n;
",4,0,0,0,0,0,0,0,0,5,8,14,0.04000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,2234,"    return this.getType() == Token.DELPROP;
",4,1,0,1,2,1,2,0,0,7,39,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,793,"    } else if (i == 2) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,1554,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,371,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,386,"      if (NodeUtil.isStatementBlock(getDefCfgNode().getParent()) &&
",0,1,0,3,7,0,8,0,0,9,61,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,405,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,412,"      Node defParent = def.getParent();
",2,0,0,1,2,0,4,2,0,8,33,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,413,"      Node useParent = use.getParent();
",2,0,0,1,2,0,4,2,0,8,33,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,414,"      if (def.isAssign()) {
",0,0,0,2,5,0,4,0,0,4,21,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,431,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,432,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,378,"                return !input.isFunction();
",0,0,0,1,2,1,4,0,0,5,27,11,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,1184,"        return Token.ADD;
",4,0,0,0,0,1,0,0,0,4,17,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,156,"        c.inlineVariable();
",0,0,0,1,2,0,4,0,0,4,19,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,165,"        if (!c.defMetadata.depends.isEmpty()) {
",6,0,0,2,5,0,2,0,0,9,39,8,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,811,"      valid = n.getChildCount() <= i;
",4,1,0,1,2,0,4,0,0,10,31,6,0.03448,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,1515,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,658,"      connectToPossibleExceptionHandler(node, node.getFirstChild());
",0,0,0,2,4,0,8,0,0,8,62,7,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,359,"          new Predicate<Node>() {
",0,0,0,1,3,0,0,4,0,4,23,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,362,"                switch (input.getType()) {
",0,0,0,2,5,0,4,0,0,4,26,12,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,358,"      if (NodeUtil.has(def.getLastChild(),
",0,0,0,1,4,0,8,0,0,8,36,6,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,374,"          new Predicate<Node>() {
",0,0,0,1,3,0,0,4,0,4,23,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1616,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,344,"        handleReturn(n);
",0,0,0,1,2,0,4,0,0,4,16,6,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,345,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,640,"    Node lastJump = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,641,"    for (Iterator<Node> iter = exceptionHandler.iterator(); iter.hasNext();) {
",2,0,0,3,7,0,8,4,0,14,74,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,657,"    if (node.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,661,"    if (lastJump == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,662,"      createEdge(node, Branch.UNCOND, null);
",4,0,0,1,2,0,4,0,0,9,38,6,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,666,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,345,"      Collection<Node> uses = reachingUses.getUses(varName, getDefCfgNode());
",2,0,0,2,4,0,8,4,0,14,71,5,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,347,"      if (uses.size() != 1) {
",0,1,0,2,5,0,4,0,0,5,23,5,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,402,"            def.depends.add(dep);
",4,0,0,1,2,0,4,0,0,8,21,15,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,519,"      for (Node cur = p.getParent().getFirstChild(); cur != p;
",6,1,0,2,5,0,6,2,0,15,56,6,0.02857,0,-1
defect4j,closure,com/google/javascript/rhino/Token,12,210,"          case CALL:            return ""CALL"";
",2,0,0,0,0,1,0,0,0,3,36,4,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,340,"      if (NodeUtil.isWithinLoop(use)) {
",0,0,0,2,5,0,6,0,0,6,33,6,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,222,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,223,"    if (!irNode.isBlock()) {
",0,0,0,2,5,0,4,0,0,5,24,4,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,235,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,335,"      if (numUseWithinUseCfgNode != 1) {
",2,1,0,1,3,0,0,0,0,3,34,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,12,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,12,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,12,914,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,312,"      if (checkRightOf(def, getDefCfgNode(), SIDE_EFFECT_PREDICATE)) {
",0,0,0,3,7,0,8,0,0,8,64,6,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,319,"      if (checkLeftOf(use, useCfgNode, SIDE_EFFECT_PREDICATE)) {
",0,0,0,2,5,0,8,0,0,8,58,6,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,326,"      if (NodeUtil.mayHaveSideEffects(def.getLastChild())) {
",0,0,0,3,7,0,8,0,0,8,54,6,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,498,"    for (Node p = n; p != expressionRoot; p = p.getParent()) {
",10,1,0,2,5,0,4,2,0,18,58,4,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,499,"      for (Node cur = p.getNext(); cur != null; cur = cur.getNext()) {
",6,1,0,3,7,0,8,2,0,18,64,6,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,505,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,518,"    for (Node p = n.getParent(); p != expressionRoot; p = p.getParent()) {
",8,1,0,3,7,0,8,2,0,20,70,4,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,526,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1619,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1578,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1584,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1610,"    for (Node parent : n.getAncestors()) {
",2,0,0,2,5,0,4,2,0,8,38,4,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1611,"      if (NodeUtil.isLoopStructure(parent)) {
",0,0,0,2,5,0,6,0,0,6,39,7,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1615,"      if (parent.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,26,7,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1618,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,289,"      for (Var dependency : defMetadata.depends) {
",6,0,0,1,3,0,0,2,0,8,44,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,295,"      getDefinition(getDefCfgNode(), null);
",0,0,0,2,4,0,4,0,0,6,37,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,296,"      getNumUseInUseCfgNode(useCfgNode, null);
",0,0,0,1,2,0,4,0,0,5,40,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,299,"      if (def == null) {
",2,1,0,1,3,0,0,0,0,3,18,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,305,"      if (def.isAssign() && !NodeUtil.isExprAssign(def.getParent())) {
",0,1,0,4,9,0,12,0,0,14,64,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,440,"      AbstractCfgNodeTraversalCallback gatherCb =
",2,0,0,0,0,0,0,2,0,4,43,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,461,"      NodeTraversal.traverse(compiler, n, gatherCb);
",0,0,0,1,2,0,10,0,0,10,46,6,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,462,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,470,"      AbstractCfgNodeTraversalCallback gatherCb =
",2,0,0,0,0,0,0,2,0,4,43,5,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,484,"      NodeTraversal.traverse(compiler, n, gatherCb);
",0,0,0,1,2,0,10,0,0,10,46,6,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,485,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,471,"          new AbstractCfgNodeTraversalCallback() {
",0,0,0,1,3,0,0,2,0,2,40,8,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,475,"          if (n.isName() && n.getString().equals(varName) &&
",0,1,0,3,7,0,12,0,0,13,50,11,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,479,"            numUseWithinUseCfgNode++;
",2,0,0,0,0,0,0,0,0,3,25,13,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,481,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,441,"        new AbstractCfgNodeTraversalCallback() {
",0,0,0,1,3,0,0,2,0,2,40,8,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,445,"          switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,12,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,447,"              if (n.getString().equals(varName) && n.hasChildren()) {
",0,1,0,4,9,0,12,0,0,13,55,12,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,450,"              return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,12,459,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,398,"          Var dep = jsScope.getVar(n.getString());
",2,0,0,2,4,0,8,2,0,12,40,12,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,399,"          if (dep == null) {
",2,1,0,1,3,0,0,0,0,3,18,12,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,291,"    GraphNode<Node, Branch> n = getCfg().getNode(defNode);
",2,0,0,2,4,0,6,6,0,14,54,4,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,292,"    Preconditions.checkNotNull(n);
",0,0,0,1,2,0,6,0,0,6,30,5,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,293,"    FlowState<ReachingUses> state = n.getAnnotation();
",2,0,0,1,2,0,4,4,0,10,50,4,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,294,"    return state.getOut().mayUseMap.get(jsScope.getVar(name));
",2,0,0,3,6,1,12,0,0,14,58,5,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,1638,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,282,"            Node name = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,9,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,283,"            computeMustDef(name.getNext(), cfgNode, output, conditional);
",0,0,0,2,4,0,12,0,0,12,61,10,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,284,"            addToDefIfLocal(name.getString(), conditional ? null : cfgNode,
",4,0,0,1,3,0,6,0,0,11,63,9,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,12,286,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,202,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,203,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,12,2677,"      if (has(c, pred, traverseChildrenPred)) {
",0,0,0,2,5,0,8,0,0,8,41,7,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,832,"      Node lastJump = cfgNode;
",4,0,0,0,0,0,0,2,0,6,24,6,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,833,"      for (Node handler : exceptionHandler) {
",4,0,0,1,3,0,0,2,0,6,39,6,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,12,834,"        if (handler.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,27,9,0.02000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,561,"      n = n.next;
",6,0,0,0,0,0,0,0,0,7,11,6,0.01961,0,-1
defect4j,closure,com/google/javascript/rhino/Node,12,562,"      if (n == null) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/SimpleDefinitionFinder,12,176,"            Definition unknownDef =
",2,0,0,0,0,0,0,2,0,4,23,11,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/SimpleDefinitionFinder,12,178,"            def = unknownDef;
",4,0,0,0,0,0,0,0,0,5,17,11,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/DefinitionsRemover,12,182,"      super(lValue, inExterns);
",4,0,0,1,2,0,0,0,0,4,25,5,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/DefinitionsRemover,12,183,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,12,482,"      validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,7,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,228,"            removeFromUseIfLocal(name.getString(), output);
",0,0,0,2,4,0,8,0,0,8,47,10,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,226,"          Node name = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,12,227,"          if (!conditional) {
",2,0,0,1,3,0,0,0,0,3,19,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,13,316,"        List<L> values = new ArrayList<L>(inNodes.size());
",2,0,0,2,4,0,4,8,0,14,50,9,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,13,317,"        for (DiGraphNode<N, Branch> currentNode : inNodes) {
",4,0,0,1,3,0,0,6,0,10,52,9,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,13,318,"          FlowState<L> currentNodeState = currentNode.getAnnotation();
",2,0,0,1,2,0,4,4,0,10,60,11,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,13,319,"          values.add(currentNodeState.getIn());
",0,0,0,2,4,0,8,0,0,8,37,12,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,13,320,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,13,321,"        state.setOut(joinOp.apply(values));
",0,0,0,2,4,0,10,0,0,10,35,10,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowGraph,13,180,"        return NodeUtil.getConditionExpression(parent) != n;
",2,1,0,1,2,1,6,0,0,9,52,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,188,"      for (Iterator<Var> vars = s.getVars(); vars.hasNext();) {
",2,0,0,3,7,0,8,4,0,14,57,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,226,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,13,107,"      argumentsAccessStack.push(currentArgumentsAccess);
",0,0,0,1,2,0,6,0,0,6,50,7,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,13,135,"      currentArgumentsAccess = argumentsAccessStack.pop();
",2,0,0,1,2,0,4,0,0,7,52,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckUnreachableCode,13,99,"      Node predecessor = input.sourceNode;
",6,0,0,0,0,0,0,2,0,8,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckUnreachableCode,13,100,"      Node condition = NodeUtil.getConditionExpression(predecessor);
",2,0,0,1,2,0,6,2,0,10,62,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckUnreachableCode,13,104,"      if (condition != null) {
",2,1,0,1,3,0,0,0,0,3,24,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckUnreachableCode,13,110,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,196,"        computeGenKill(NodeUtil.getConditionExpression(n), gen, kill,
",0,0,0,1,3,0,12,0,0,12,61,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,198,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,496,"          return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,62,"      LiveVariableLattice result = new LiveVariableLattice(in.get(0));
",2,0,0,2,4,0,4,4,0,10,64,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,63,"      for (int i = 1; i < in.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,37,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,64,"        result.liveSet.or(in.get(i).liveSet);
",6,0,0,2,4,0,8,0,0,14,37,8,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,66,"      return result;
",2,0,0,0,0,1,0,0,0,2,14,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckAccidentalSemicolon,13,63,"    for (; child != null; child = child.getNext()) {
",4,1,0,2,5,0,4,0,0,10,48,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckAccidentalSemicolon,13,64,"      if ((child.isBlock()) && (!child.hasChildren())) {
",0,1,0,5,11,0,8,0,0,10,50,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckAccidentalSemicolon,13,73,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,13,158,"            case 7: switch (s.charAt(1)) {
",0,0,0,2,5,0,4,0,0,4,30,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,956,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,298,"        handleIf(n);
",0,0,0,1,2,0,4,0,0,4,12,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,299,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,358,"    Node thenBlock = node.getFirstChild().getNext();
",2,0,0,2,4,0,6,2,0,10,48,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,359,"    Node elseBlock = thenBlock.getNext();
",2,0,0,1,2,0,4,2,0,8,37,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,360,"    createEdge(node, Branch.ON_TRUE, computeFallThrough(thenBlock));
",4,0,0,2,4,0,8,0,0,12,64,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,362,"    if (elseBlock == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,363,"      createEdge(node, Branch.ON_FALSE,
",4,0,0,0,1,0,4,0,0,8,33,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,368,"    connectToPossibleExceptionHandler(
",0,0,0,0,1,0,2,0,0,2,34,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,370,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,183,"              aliasCandidates.put(value, new AliasCandidate(v, referenceInfo));
",4,0,0,2,4,0,6,2,0,12,65,14,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,131,"    AliasCandidate(Var alias, ReferenceCollection refInfo) {
",6,0,0,1,3,0,0,4,0,10,56,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,132,"      this.alias = alias;
",4,0,0,0,0,0,0,0,0,5,19,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,133,"      this.refInfo = refInfo;
",4,0,0,0,0,0,0,0,0,5,23,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,259,"        computeMustDef(n.getFirstChild(), cfgNode, output, conditional);
",0,0,0,2,4,0,12,0,0,12,64,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,260,"        computeMustDef(n.getLastChild(), cfgNode, output, true);
",0,0,0,2,4,0,10,0,0,11,56,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,261,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,237,"        computeGenKill(n.getFirstChild(), gen, kill, conditional);
",0,0,0,2,4,0,12,0,0,12,58,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,239,"        computeGenKill(n.getLastChild(), gen, kill, true);
",0,0,0,2,4,0,10,0,0,11,50,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,240,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,13,201,"          continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,191,"        computeMayUse(n.getLastChild(), cfgNode, output, true);
",0,0,0,2,4,0,10,0,0,11,55,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,192,"        computeMayUse(n.getFirstChild(), cfgNode, output, conditional);
",0,0,0,2,4,0,12,0,0,12,63,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,193,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,968,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,969,"      sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,9,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,657,"        Node parent = initialization.getParent();
",2,0,0,1,2,0,4,2,0,8,41,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,658,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,9,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,702,"          Preconditions.checkState(refInit == refSet.get(1));
",2,1,0,2,4,0,8,0,0,11,51,10,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,703,"          startingReadRef = 2;
",2,0,0,0,0,0,0,0,0,3,20,9,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,117,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,142,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,879,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,880,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,881,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,884,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,885,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,886,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,887,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,890,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,891,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,936,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,972,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,973,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,974,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,975,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,980,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,981,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,982,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,983,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,984,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,985,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,986,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,988,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,990,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,993,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,994,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,999,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,13,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,13,260,"          return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,541,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,13,332,"        referencedNames.addAll(current);
",0,0,0,1,2,0,6,0,0,6,32,8,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,13,206,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,320,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,976,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,13,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,1536,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,380,"          argList.removeChild(lastArg);
",0,0,0,1,2,0,6,0,0,6,29,11,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,381,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,11,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,385,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,72,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,707,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,282,"            Node name = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,283,"            computeMustDef(name.getNext(), cfgNode, output, conditional);
",0,0,0,2,4,0,12,0,0,12,61,10,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,284,"            addToDefIfLocal(name.getString(), conditional ? null : cfgNode,
",4,0,0,1,3,0,6,0,0,11,63,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,286,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,711,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,328,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,13,205,"        if (!val.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,5,25,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,215,"          Node name = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,216,"          if (!conditional) {
",2,0,0,1,3,0,0,0,0,3,19,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,217,"            removeFromUseIfLocal(name.getString(), output);
",0,0,0,2,4,0,8,0,0,8,47,10,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,221,"          if (!n.isAssign()) {
",0,0,0,2,5,0,4,0,0,5,20,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,225,"          computeMayUse(name.getNext(), cfgNode, output, conditional);
",0,0,0,2,4,0,12,0,0,12,60,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,226,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,172,"        Node ifTree = c;
",4,0,0,0,0,0,0,2,0,6,16,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,176,"        trueBlock = ifTree.getFirstChild().getNext();
",2,0,0,2,4,0,6,0,0,9,45,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,177,"        falseBlock = trueBlock.getNext();
",2,0,0,1,2,0,4,0,0,7,33,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,178,"        tryMinimizeIfBlockExits(trueBlock, falseBlock,
",0,0,0,0,1,0,6,0,0,6,46,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,183,"        trueBlock = ifTree.getFirstChild().getNext();
",2,0,0,2,4,0,6,0,0,9,45,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,184,"        falseBlock = trueBlock.getNext();
",2,0,0,1,2,0,4,0,0,7,33,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,185,"        if (falseBlock != null) {
",2,1,0,1,3,0,0,0,0,3,25,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,222,"    Node exitNodeParent = null;
",2,0,0,0,0,0,0,2,0,4,27,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,223,"    Node exitNode = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,226,"    if (srcBlock.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,227,"      if (!srcBlock.hasChildren()) {
",0,0,0,2,5,0,4,0,0,5,30,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,230,"      exitNodeParent = srcBlock;
",4,0,0,0,0,0,0,0,0,5,26,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,231,"      exitNode = exitNodeParent.getLastChild();
",2,0,0,1,2,0,4,0,0,7,41,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,239,"    if (!matchingExitNode(exitNode, exitType, labelName)) {
",0,0,0,2,5,0,8,0,0,9,55,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,240,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,231,"          return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,109,"        fuseExpresssonIntoFirstChild(commaTree, last);
",0,0,0,1,2,0,6,0,0,6,46,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,110,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,145,"    Node val = stmt.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,35,4,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,146,"    Node comma = fuseExpressionIntoExpression(exp, val);
",2,0,0,1,2,0,6,2,0,10,52,4,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,147,"    stmt.addChildToFront(comma);
",0,0,0,1,2,0,6,0,0,6,28,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,148,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,259,"          Node lhs = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,29,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,260,"          if (!conditional) {
",2,0,0,1,3,0,0,0,0,3,19,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,261,"            addToSetIfLocal(lhs, kill);
",0,0,0,1,2,0,6,0,0,6,27,10,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,263,"          if (!n.isAssign()) {
",0,0,0,2,5,0,4,0,0,5,20,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,267,"          computeGenKill(lhs.getNext(), gen, kill, conditional);
",0,0,0,2,4,0,12,0,0,12,54,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,268,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,609,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,13,198,"        Node val = ref.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,34,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,13,199,"        if (val == null) {
",2,1,0,1,3,0,0,0,0,3,18,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,13,657,"            cc.listSeparator();
",0,0,0,1,2,0,4,0,0,4,19,11,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,40,"      fuseIntoOneStatement(n);
",0,0,0,1,2,0,4,0,0,4,24,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,41,"      reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,86,"    Node cur = block.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,89,"    Node commaTree = cur.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,40,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,92,"    while (block.hasMoreThanOneChild()) {
",0,0,0,2,5,0,4,0,0,4,37,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,97,"    Preconditions.checkState(block.hasOneChild());
",0,0,0,2,4,0,8,0,0,8,46,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,98,"    Node last = block.getLastChild();
",2,0,0,1,2,0,4,2,0,8,33,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,103,"    switch(last.getType()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,123,"    Node comma = new Node(Token.COMMA, exp1);
",8,0,0,1,2,0,0,4,0,12,41,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,124,"    comma.copyInformationFrom(exp2);
",0,0,0,1,2,0,6,0,0,6,32,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,129,"    if (exp2.isComma()) {
",0,0,0,2,5,0,4,0,0,4,21,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,139,"      comma.addChildToBack(exp2);
",0,0,0,1,2,0,6,0,0,6,27,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,140,"      return comma;
",2,0,0,0,0,1,0,0,0,2,13,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,185,"          blacklistedVars.add(t.getScope().getVar(child.getString()));
",0,0,0,4,8,0,14,0,0,14,60,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,270,"        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,271,"          if (c.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,277,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,337,"    for (Var other : def.reachingDef.keySet()) {
",6,0,0,2,5,0,2,2,0,10,44,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,338,"      Definition otherDef = def.reachingDef.get(other);
",6,0,0,1,2,0,4,2,0,12,49,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,339,"      if (otherDef == null) {
",2,1,0,1,3,0,0,0,0,3,23,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,342,"      if (otherDef.depends.contains(var)) {
",4,0,0,2,5,0,4,0,0,8,37,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,345,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,347,"    if (!escaped.contains(var)) {
",0,0,0,2,5,0,6,0,0,7,29,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,358,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,202,"        Node varName = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,33,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,203,"        Preconditions.checkState(n.hasChildren(), ""AST should be normalized"");
",0,0,0,2,4,0,8,0,0,9,70,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,205,"        if (varName.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,211,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,264,"    if (!escaped.contains(var)) {
",0,0,0,2,5,0,6,0,0,7,29,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,267,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,248,"        if (!interferenceGraph.hasNode(v1) ||
",0,1,0,1,3,0,6,0,0,8,37,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,274,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,13,458,"      result = result.getParent();
",2,0,0,1,2,0,4,0,0,7,28,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,13,224,"              return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,225,"              continuations.put(var, new Continuation(n, scope));
",4,0,0,2,4,0,6,2,0,12,51,12,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,226,"              return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,329,"    Var var = jsScope.getVar(name);
",2,0,0,1,2,0,6,2,0,10,31,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,333,"    if (var == null || var.scope != jsScope) {
",8,3,0,1,3,0,0,0,0,11,42,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,260,"    Var var = jsScope.getVar(name);
",2,0,0,1,2,0,6,2,0,10,31,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,261,"    if (var == null || var.scope != jsScope) {
",8,3,0,1,3,0,0,0,0,11,42,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,147,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,13,50,"        if (NodeUtil.isValidPropertyName(n.getString())) {
",0,0,0,3,7,0,8,0,0,8,50,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,13,51,"          n.putBooleanProp(Node.QUOTED_PROP, false);
",4,0,0,1,2,0,4,0,0,9,42,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,13,52,"          compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,175,"            parent = next;
",4,0,0,0,0,0,0,0,0,5,14,9,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,176,"            next = leftSide.getNext();
",2,0,0,1,2,0,4,0,0,7,26,9,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,177,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,162,"      blockStack.pop();
",0,0,0,1,2,0,4,0,0,4,17,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,199,"      blockStack.push(new BasicBlock(blockStack.peek(), n));
",2,0,0,3,6,0,8,2,0,12,54,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,1170,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,2811,"      return convention.isConstantKey(name);
",0,0,0,1,2,1,6,0,0,6,38,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowGraph,13,174,"        return n != parent.getFirstChild().getNext();
",2,1,0,2,4,1,6,0,0,9,45,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,13,67,"    switch(last.getType()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,201,"      Var var = s.getVar(lhs.getString());
",2,0,0,2,4,0,8,2,0,12,36,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,202,"      return var != null &&
",2,3,0,0,0,1,0,0,0,5,21,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,225,"        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,226,"          if (c.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,233,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,221,"        Node left = trySimplifyUnusedResult(n.getFirstChild());
",2,0,0,2,4,0,6,2,0,10,55,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,222,"        Node right = trySimplifyUnusedResult(n.getLastChild());
",2,0,0,2,4,0,6,2,0,10,55,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,223,"        if (left == null && right == null) {
",4,3,0,1,3,0,0,0,0,7,36,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,225,"        } else if (left == null) {
",2,1,0,1,4,0,0,0,0,3,26,6,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,227,"        } else if (right == null){
",2,1,0,1,4,0,0,0,0,3,26,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,231,"          result = n;
",4,0,0,0,0,0,0,0,0,5,11,9,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,233,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,453,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,170,"          Node leftSide = next.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,37,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,171,"          if (leftSide.isName() ||
",0,1,0,1,3,0,4,0,0,5,24,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,183,"          if (NodeUtil.isImmutableValue(next)
",0,0,0,1,3,0,6,0,0,6,35,9,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,194,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,152,"        return trySplitComma(node);
",0,0,0,1,2,1,4,0,0,4,27,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,273,"    if (late) {
",2,0,0,1,3,0,0,0,0,2,11,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1099,"    Predicate<Node> isPropertyAssignmentInExpressionPredicate =
",2,0,0,0,0,0,0,4,0,6,59,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1108,"    return NodeUtil.has(n, isPropertyAssignmentInExpressionPredicate,
",0,0,0,0,1,1,8,0,0,8,65,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,328,"          name = null;
",2,0,0,0,0,0,0,0,0,3,12,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,329,"          if (parent != null && parent.isObjectLit()) {
",2,2,0,2,5,0,4,0,0,8,45,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,330,"            name = getNameForObjLitKey(n);
",2,0,0,1,2,0,4,0,0,7,30,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,332,"          if (name == null) return;
",2,1,0,1,2,1,0,0,0,4,25,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,454,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,455,"      Preconditions.checkState(parent.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,47,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,457,"      Node gramps = parent.getParent();
",2,0,0,1,2,0,4,2,0,8,33,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,458,"      if (gramps == null) {
",2,1,0,1,3,0,0,0,0,3,21,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,462,"      Node greatGramps = gramps.getParent();
",2,0,0,1,2,0,4,2,0,8,38,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,464,"      switch (gramps.getType()) {
",0,0,0,2,5,0,4,0,0,4,27,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,304,"        return a2.count - a1.count;
",8,1,0,0,0,1,0,0,0,9,27,10,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1100,"        new Predicate<Node>() {
",0,0,0,1,3,0,0,4,0,4,23,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1103,"        return (input.isGetProp() &&
",0,1,0,1,3,1,4,0,0,5,28,11,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,46,"        return tryFoldComma(subtree);
",0,0,0,1,2,1,4,0,0,4,29,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,441,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,442,"    Node left = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,443,"    Node right = left.getNext();
",2,0,0,1,2,0,4,2,0,8,28,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,445,"    left = trySimplifyUnusedResult(left);
",2,0,0,1,2,0,4,0,0,7,37,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,13,446,"    if (left == null || !mayHaveSideEffects(left)) {
",2,2,0,2,5,0,4,0,0,10,48,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,689,"        n.removeChild(cond);
",0,0,0,1,2,0,6,0,0,6,20,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,690,"        Node and = IR.and(cond, expr.removeFirstChild()).srcref(n);
",2,0,0,3,6,0,14,2,0,18,59,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,691,"        Node newExpr = NodeUtil.newExpr(and);
",2,0,0,1,2,0,6,2,0,10,37,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,692,"        parent.replaceChild(n, newExpr);
",0,0,0,1,2,0,8,0,0,8,32,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,693,"        reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,695,"        return newExpr;
",2,0,0,0,0,1,0,0,0,2,15,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,2056,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,13,185,"          Preconditions.checkState(n.hasOneChild());
",0,0,0,2,4,0,8,0,0,8,42,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,13,186,"          Node nameNode = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,13,187,"          if (nameNode.isName() && nameNode.hasChildren()
",0,1,0,2,5,0,8,0,0,9,47,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,13,823,"          } else if (el.isSetter()) {
",0,0,0,2,6,0,4,0,0,4,27,11,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,709,"           currentBlock = currentBlock.getParent()) {
",2,0,0,1,4,0,4,0,0,7,42,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,679,"        if (isLowerPrecedenceInExpression(cond, AND_PRECEDENCE) &&
",0,1,0,1,3,0,6,0,0,7,58,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,13,820,"          if (el.isGetter()) {
",0,0,0,2,5,0,4,0,0,4,20,10,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,54,"class ShadowVariables implements CompilerPass {
",2,0,0,0,1,0,0,2,0,4,47,1,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,710,"        if (currentBlock.isHoisted) {
",4,0,0,1,3,0,0,0,0,4,29,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,156,"      if (var.getScope() != t.getScope()) {
",0,1,0,3,7,0,8,0,0,9,37,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,163,"      if (var.getScope() == t.getScope()) {
",0,1,0,3,7,0,8,0,0,9,37,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,164,"        scopeUpRefMap.put(t.getScopeRoot(), var.name);
",4,0,0,2,4,0,8,0,0,12,46,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,168,"      varToNameUsage.put(var, n);
",0,0,0,1,2,0,8,0,0,8,27,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,870,"        for (Node child = node.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,39,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,871,"             child != null; child = child.getNext()) {
",4,1,0,1,4,0,4,0,0,10,41,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,872,"          traverseNode(child, node, scope);
",0,0,0,1,2,0,8,0,0,8,33,10,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,165,"          blacklistStubVars(t, n);
",0,0,0,1,2,0,6,0,0,6,24,10,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,166,"          hasVar = true;
",2,0,0,0,0,0,0,0,0,4,14,9,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,281,"          if (n.getFirstChild().isName()) {
",0,0,0,3,7,0,6,0,0,6,33,8,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,281,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,247,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,158,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,122,"          parent = next;
",4,0,0,0,0,0,0,0,0,5,14,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,123,"          next = next.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,28,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,124,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,2678,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,164,"        if (n.isVar()) {
",0,0,0,2,5,0,4,0,0,4,16,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,169,"        nodesToCollapse.add(n);
",0,0,0,1,2,0,6,0,0,6,23,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,170,"        hasNodesToCollapse = true;
",2,0,0,0,0,0,0,0,0,4,26,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,172,"        n = n.getNext();
",2,0,0,1,2,0,4,0,0,7,16,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,176,"        nodesToCollapse.add(varNode);
",0,0,0,1,2,0,6,0,0,6,29,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,177,"        collapses.add(new Collapse(varNode, n, parent));
",6,0,0,2,4,0,4,2,0,12,48,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,116,"      applyCollapses();
",0,0,0,1,2,0,2,0,0,2,17,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,117,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,208,"    for (Collapse collapse : collapses) {
",4,0,0,1,3,0,0,2,0,6,37,4,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,210,"      Node var = new Node(Token.VAR);
",6,0,0,1,2,0,0,4,0,10,31,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,211,"      var.copyInformationFrom(collapse.startNode);
",4,0,0,1,2,0,4,0,0,8,44,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,212,"      collapse.parent.addChildBefore(var, collapse.startNode);
",8,0,0,1,2,0,4,0,0,12,56,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,214,"      boolean redeclaration = false;
",2,0,0,0,0,0,0,0,0,3,30,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,215,"      for (Node n = collapse.startNode; n != collapse.endNode;) {
",12,1,0,1,3,0,0,2,0,15,59,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,216,"        Node next = n.getNext();
",2,0,0,1,2,0,4,2,0,8,24,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,218,"        Preconditions.checkState(var.getNext() == n);
",2,1,0,2,4,0,8,0,0,11,45,9,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,219,"        collapse.parent.removeChildAfter(var);
",4,0,0,1,2,0,4,0,0,8,38,9,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,221,"        if (n.isVar()) {
",0,0,0,2,5,0,4,0,0,4,16,9,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,222,"          while(n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,24,11,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,223,"            var.addChildToBack(n.removeFirstChild());
",0,0,0,2,4,0,8,0,0,8,41,13,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,234,"        n = next;
",4,0,0,0,0,0,0,0,0,5,9,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,235,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,237,"      if (redeclaration) {
",2,0,0,1,3,0,0,0,0,2,20,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,242,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,243,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,13,156,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,150,"      if (var.getScope().isGlobal()) {
",0,0,0,3,7,0,6,0,0,6,32,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,84,"    Collapse(Node startNode, Node endNode, Node parent) {
",8,0,0,1,3,0,0,6,0,14,53,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,85,"      this.startNode = startNode;
",4,0,0,0,0,0,0,0,0,5,27,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,86,"      this.endNode = endNode;
",4,0,0,0,0,0,0,0,0,5,23,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,87,"      this.parent = parent;
",4,0,0,0,0,0,0,0,0,5,21,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,13,88,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,114,"      switch (next.getType()) {
",0,0,0,2,5,0,4,0,0,4,25,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,406,"      return a.newName;
",4,0,0,0,0,1,0,0,0,4,17,7,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,665,"        return compiler.getCodingConvention().isInlinableFunction(n);
",0,0,0,2,4,1,8,0,0,8,61,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/UnreachableCodeElimination,13,155,"        if (n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,13,194,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/rhino/IR,13,352,"    return binaryOp(Token.AND, expr1, expr2);
",4,0,0,1,2,1,6,0,0,10,41,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,969,"    if (n.isBlock()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,970,"      if (n.hasOneChild()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,729,"            assignedToUnknownValue = true;
",2,0,0,0,0,0,0,0,0,4,30,12,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,773,"        c.apply();
",0,0,0,1,2,0,4,0,0,4,10,9,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,774,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,668,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,867,"      if (NodeUtil.isFunctionDeclaration(node)) {
",0,0,0,2,5,0,6,0,0,6,43,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,875,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,86,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,69,"class RemoveUnusedVars
",2,0,0,0,0,0,0,0,0,2,22,1,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,532,"      if (declaration != initialization &&
",4,2,0,0,1,0,0,0,0,6,36,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,539,"      if (declaration.getBasicBlock() != initialization.getBasicBlock()
",0,1,0,2,5,0,8,0,0,9,65,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,365,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,375,"      if (index < references.size() && index > 0) {
",4,3,0,2,5,0,4,0,0,11,45,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,376,"        Reference maybeDecl = references.get(index-1);
",4,1,0,1,2,0,4,2,0,11,46,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,377,"        if (maybeDecl.isVarDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,35,8,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,398,"      } else if (isInitializingAssignmentAt(1)) {
",0,0,0,2,6,0,2,0,0,2,43,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,13,565,"      return getParent().isVar();
",0,0,0,2,4,1,4,0,0,4,27,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,220,"      Var v = i.next();
",2,0,0,1,2,0,4,2,0,8,17,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,221,"      if (!escaped.contains(v)) {
",0,0,0,2,5,0,6,0,0,7,27,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,233,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,237,"      Var v1 = i1.next();
",2,0,0,1,2,0,4,2,0,8,19,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,240,"      for (Iterator<Var> i2 = scope.getVars(); i2.hasNext();) {
",2,0,0,3,7,0,8,4,0,14,57,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,241,"        Var v2 = i2.next();
",2,0,0,1,2,0,4,2,0,8,19,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,244,"        if (v1.index >= v2.index) {
",8,1,0,1,3,0,0,0,0,9,27,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,245,"          continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,13,303,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,13,357,"      Preconditions.checkState(n.isFunction());
",0,0,0,2,4,0,8,0,0,8,41,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,13,358,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,13,164,"      return nextConvention.isInlinableFunction(n);
",0,0,0,1,2,1,6,0,0,6,45,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,369,"      String newName = getNewLocalName(n);
",2,0,0,1,2,0,4,2,0,8,36,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,370,"      if (newName != null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,371,"        n.setString(newName);
",0,0,0,1,2,0,6,0,0,6,21,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,372,"        changed = true;
",2,0,0,0,0,0,0,0,0,4,15,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,374,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,375,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,400,"    String oldTempName = n.getString();
",2,0,0,1,2,0,4,2,0,8,35,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,401,"    Assignment a = assignments.get(oldTempName);
",2,0,0,1,2,0,6,2,0,10,44,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,402,"    if (!a.newName.equals(oldTempName)) {
",4,0,0,2,5,0,4,0,0,9,37,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,403,"      if (pseudoNameMap != null) {
",2,1,0,1,3,0,0,0,0,3,28,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,466,"        newName = localNameGenerator.generateNextName();
",2,0,0,1,2,0,4,0,0,7,48,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,467,"        finalizeNameAssignment(a, newName);
",0,0,0,1,2,0,6,0,0,6,35,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,546,"    int num = v.index;
",6,0,0,0,0,0,0,0,0,6,18,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,547,"    Scope s = v.scope.getParent();
",6,0,0,1,2,0,2,2,0,10,30,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,548,"    if (s == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,552,"    boolean isBleedingIntoScope = s.getParent() != null &&
",2,2,0,1,2,0,4,0,0,8,54,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,555,"    while (s.getParent() != null) {
",0,1,0,2,5,0,4,0,0,5,31,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,566,"    return num;
",2,0,0,0,0,1,0,0,0,2,11,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,217,"            assignsByVar.put(var, maybeAssign);
",0,0,0,1,2,0,8,0,0,8,35,10,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,218,"            assignsByNode.put(maybeAssign.nameNode, maybeAssign);
",4,0,0,1,2,0,6,0,0,10,53,10,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,220,"            if (isRemovableVar(var) &&
",0,1,0,1,3,0,4,0,0,5,26,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,777,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,144,"      Var var = t.getScope().getVar(n.getString());
",2,0,0,3,6,0,10,2,0,14,45,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,13,145,"      if (var == null) {
",2,1,0,1,3,0,0,0,0,3,18,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,273,"        String tempName = LOCAL_VAR_PREFIX + getLocalVarIndex(var);
",4,1,0,1,2,0,4,2,0,11,59,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,274,"        incCount(tempName);
",0,0,0,1,2,0,4,0,0,4,19,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,275,"        localNameNodes.add(n);
",0,0,0,1,2,0,6,0,0,6,22,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,276,"        n.setString(tempName);
",0,0,0,1,2,0,6,0,0,6,22,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,277,"      } else if (var != null) { // Not an extern
",2,1,0,1,4,0,0,0,0,3,42,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,57,"      return !input.isFunction();
",0,0,0,1,2,1,4,0,0,5,27,8,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,651,"        Node expr = getBlockExpression(thenBranch);
",2,0,0,1,2,0,4,2,0,8,43,8,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,652,"        if (!late && isPropertyAssignmentInExpression(expr)) {
",2,1,0,2,5,0,4,0,0,8,54,8,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,659,"        if (cond.isNot()) {
",0,0,0,2,5,0,4,0,0,4,19,9,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,1534,"      return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,378,"        Var var = fnScope.getVar(lastArg.getString());
",2,0,0,2,4,0,8,2,0,12,46,8,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,379,"        if (!referenced.contains(var)) {
",0,0,0,2,5,0,6,0,0,7,32,8,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,13,119,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,13,160,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,283,"    Var var = jsScope.getVar(name);
",2,0,0,1,2,0,6,2,0,10,31,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,284,"    if (!escaped.contains(var)) {
",0,0,0,2,5,0,6,0,0,7,29,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,13,287,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1071,"    Predicate<Node> isLowerPrecedencePredicate = new Predicate<Node>() {
",2,0,0,1,3,0,0,8,0,10,68,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1078,"    return NodeUtil.has(n, isLowerPrecedencePredicate,
",0,0,0,0,1,1,8,0,0,8,50,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,1683,"        return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,2669,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,861,"    Continuation(Node node, Scope scope) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,862,"      this.node = node;
",4,0,0,0,0,0,0,0,0,5,17,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,863,"      this.scope = scope;
",4,0,0,0,0,0,0,0,0,5,19,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,864,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1071,"    Predicate<Node> isLowerPrecedencePredicate = new Predicate<Node>() {
",2,0,0,1,3,0,0,8,0,10,68,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1074,"        return NodeUtil.precedence(input.getType()) < precedence;
",2,1,0,2,4,1,8,0,0,11,57,10,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,13,1517,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,349,"        maybeUnreferenced.add(var);
",0,0,0,1,2,0,6,0,0,6,27,9,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,713,"        Var var = maybeUnreferenced.get(current);
",2,0,0,1,2,0,6,2,0,10,41,8,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,714,"        if (referenced.contains(var)) {
",0,0,0,2,5,0,6,0,0,6,31,9,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,718,"          boolean assignedToUnknownValue = false;
",2,0,0,0,0,0,0,0,0,3,39,11,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,719,"          boolean hasPropertyAssign = false;
",2,0,0,0,0,0,0,0,0,3,34,11,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,721,"          if (var.getParentNode().isVar() &&
",0,1,0,2,5,0,6,0,0,7,34,10,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,732,"          boolean maybeEscaped = false;
",2,0,0,0,0,0,0,0,0,3,29,11,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,733,"          for (Assign assign : assignsByVar.get(var)) {
",2,0,0,2,5,0,6,2,0,10,45,10,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,745,"          if ((assignedToUnknownValue || maybeEscaped) && hasPropertyAssign) {
",6,2,0,2,5,0,0,0,0,8,68,10,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,759,"    for (Assign assign : assignsByVar.get(var)) {
",2,0,0,2,5,0,6,2,0,10,45,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,763,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,788,"      Var var = it.next();
",2,0,0,1,2,0,4,2,0,8,20,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,792,"      for (Node exprCallNode : inheritsCalls.get(var)) {
",2,0,0,2,5,0,6,2,0,10,50,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,800,"      removeAllAssigns(var);
",0,0,0,1,2,0,4,0,0,4,22,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,802,"      compiler.addToDebugLog(""Unreferenced var: "" + var.name);
",4,1,0,1,2,0,4,0,0,10,56,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,803,"      Node nameNode = var.nameNode;
",6,0,0,0,0,0,0,2,0,8,29,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,804,"      Node toRemove = nameNode.getParent();
",2,0,0,1,2,0,4,2,0,8,37,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,805,"      Node parent = toRemove.getParent();
",2,0,0,1,2,0,4,2,0,8,35,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,807,"      Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,814,"      if (toRemove.isParamList() &&
",0,1,0,1,3,0,4,0,0,5,29,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,13,849,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,721,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,13,198,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,13,1535,"    } else if (parent.isAssign() && parent.getFirstChild() == n) {
",2,2,0,3,8,0,8,0,0,12,62,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,320,"          return a1.orderOfOccurrence - a2.orderOfOccurrence;
",8,1,0,0,0,1,0,0,0,9,51,8,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,378,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,7,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,455,"      if (a.newName != null) {
",4,1,0,1,3,0,0,0,0,5,24,6,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,459,"      if (externNames.contains(a.oldName)) {
",4,0,0,2,5,0,4,0,0,8,38,7,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,464,"      if (a.oldName.startsWith(LOCAL_VAR_PREFIX)) {
",4,0,0,2,5,0,4,0,0,8,45,7,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,475,"      reservedNames.add(newName);
",0,0,0,1,2,0,6,0,0,6,27,7,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,476,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,517,"    a.setNewName(newName);
",0,0,0,1,2,0,6,0,0,6,22,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,520,"    renameMap.put(a.oldName, newName);
",4,0,0,1,2,0,6,0,0,10,34,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,523,"    assignmentLog.append(a.oldName).append("" => "").append(newName).append('\n');
",4,0,0,4,8,0,12,0,0,18,76,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,524,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,95,"    Assignment(String name) {
",4,0,0,1,3,0,0,2,0,6,25,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,96,"      this.oldName = name;
",4,0,0,0,0,0,0,0,0,5,20,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,97,"      this.newName = null;
",2,0,0,0,0,0,0,0,0,3,20,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,98,"      this.count = 0;
",2,0,0,0,0,0,0,0,0,3,15,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,101,"      this.orderOfOccurrence = assignmentCount++;
",4,0,0,0,0,0,0,0,0,6,43,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,102,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,108,"      Preconditions.checkState(this.newName == null);
",2,1,0,1,2,0,4,0,0,7,47,6,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,109,"      this.newName = newName;
",4,0,0,0,0,0,0,0,0,5,23,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,110,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,13,216,"            if (parent == null) {
",2,1,0,1,3,0,0,0,0,3,21,13,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,13,221,"            if ((NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n)
",2,2,0,3,7,0,10,0,0,14,68,19,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,13,227,"            String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,13,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,13,228,"            if (compiler.getCodingConvention().isExported(name)) {
",0,0,0,3,7,0,8,0,0,8,54,14,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,13,232,"            Definition def = reachingDef.getDef(name, cfgNode);
",2,0,0,1,2,0,8,2,0,12,51,13,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,13,235,"            if (def != null &&
",2,2,0,0,1,0,0,0,0,4,18,13,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,13,675,"      return !reference.isDeclaration() && !reference.isLvalue();
",0,1,0,2,4,1,8,0,0,11,59,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,418,"    Preconditions.checkArgument(getCfg().hasNode(useNode));
",0,0,0,3,6,0,10,0,0,10,55,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,419,"    GraphNode<Node, Branch> n = getCfg().getNode(useNode);
",2,0,0,2,4,0,6,6,0,14,54,4,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,420,"    FlowState<MustDef> state = n.getAnnotation();
",2,0,0,1,2,0,4,4,0,10,45,4,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,13,421,"    return state.getIn().reachingDef.get(jsScope.getVar(name));
",2,0,0,3,6,1,12,0,0,14,59,5,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,359,"                  isSet = true;
",2,0,0,0,0,0,0,0,0,4,13,11,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/GlobalNamespace,13,360,"                  type = getValueType(n.getNext());
",2,0,0,2,4,0,6,0,0,9,33,11,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,303,"      if (a1.count != a2.count) {
",8,1,0,1,3,0,0,0,0,9,27,8,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,13,308,"      return ORDER_OF_OCCURRENCE_COMPARATOR.compare(a1, a2);
",0,0,0,1,2,1,8,0,0,8,54,9,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,161,"        addToUseIfLocal(n.getString(), cfgNode, output);
",0,0,0,2,4,0,10,0,0,10,48,6,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,162,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/MaybeReachingVariableUse,13,245,"    Var var = jsScope.getVar(name);
",2,0,0,1,2,0,6,2,0,10,31,4,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,768,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.81818,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,579,"          finallyMap.put(lastJump, computeFallThrough(cur.getLastChild()));
",0,0,0,3,6,0,12,0,0,12,65,11,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,14,250,"        return getNativeType(UNKNOWN_TYPE);
",0,0,0,1,2,1,4,0,0,4,35,9,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,491,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.39130,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,766,"            for (Node finallyNode : cfa.finallyMap.get(parent)) {
",6,0,0,2,5,0,4,2,0,12,53,11,0.36000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,844,"            finallyMap.put(lastJump, handler.getLastChild());
",0,0,0,2,4,0,10,0,0,10,49,13,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,764,"        } else if (parent.getLastChild() == node){
",2,1,0,2,6,0,4,0,0,7,42,7,0.30000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,765,"          if (cfa != null) {
",2,1,0,1,3,0,0,0,0,3,18,9,0.30000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,770,"          return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,10,0.30000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1013,"        block.setLineno(finallyBlock.getLineno());
",0,0,0,2,4,0,8,0,0,8,42,8,0.30000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1014,"        maybeSetLengthFrom(block, finallyBlock);
",0,0,0,1,2,0,6,0,0,6,40,8,0.30000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,752,"            return computeFallThrough(parent.getLastChild());
",0,0,0,2,4,1,6,0,0,6,49,10,0.29032,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1006,"        node.addChildToBack(transformBlock(finallyBlock));
",0,0,0,2,4,0,8,0,0,8,50,8,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,841,"          if (lastJump == cfgNode) {
",4,1,0,1,3,0,0,0,0,5,26,10,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,842,"            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());
",4,0,0,2,4,0,8,0,0,12,58,13,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,854,"        lastJump = handler;
",4,0,0,0,0,0,0,0,0,5,19,8,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,855,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,230,"        exceptionHandler.push(n);
",0,0,0,1,2,0,6,0,0,6,25,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,231,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,285,"          if (n == parent.getFirstChild().getNext()) {
",2,1,0,3,7,0,6,0,0,9,44,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,286,"            Preconditions.checkState(exceptionHandler.peek() == parent);
",2,1,0,2,4,0,8,0,0,11,60,10,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,287,"            exceptionHandler.pop();
",0,0,0,1,2,0,4,0,0,4,23,10,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,332,"        handleTry(n);
",0,0,0,1,2,0,4,0,0,4,13,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,333,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,544,"    createEdge(node, Branch.UNCOND, node.getFirstChild());
",4,0,0,2,4,0,8,0,0,12,54,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,545,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,751,"          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.
",0,0,0,2,5,0,6,0,0,6,61,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,757,"        } else if (NodeUtil.getCatchBlock(parent) == node){
",2,1,0,2,6,0,6,0,0,9,51,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,63,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,2759,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,0.18367,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,2760,"    return n.getFirstChild().getNext();
",0,0,0,2,4,1,6,0,0,6,35,5,0.18367,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,2768,"    Preconditions.checkArgument(n.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,0.18367,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,2769,"    return n.hasChildren() && n.getFirstChild().isCatch();
",0,1,0,3,6,1,10,0,0,11,54,4,0.18367,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,750,"        if (parent.getFirstChild() == node) {
",2,1,0,2,5,0,4,0,0,7,37,5,0.18367,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,2750,"    Preconditions.checkArgument(n.isTry());
",0,0,0,2,4,0,8,0,0,8,39,5,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,2751,"    return n.getChildCount() == 3;
",0,1,0,1,2,1,4,0,0,5,30,4,0.18000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,266,"        return processTryStatement((TryStatement) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,987,"      Node node = newNode(Token.TRY,
",6,0,0,0,1,0,2,2,0,10,30,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,989,"      Node block = newNode(Token.BLOCK);
",6,0,0,1,2,0,2,2,0,10,34,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,990,"      boolean lineSet = false;
",2,0,0,0,0,0,0,0,0,3,24,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,992,"      for (CatchClause cc : statementNode.getCatchClauses()) {
",2,0,0,2,5,0,4,2,0,8,56,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1002,"      node.addChildToBack(block);
",0,0,0,1,2,0,6,0,0,6,27,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1004,"      AstNode finallyBlock = statementNode.getFinallyBlock();
",2,0,0,1,2,0,4,2,0,8,55,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1005,"      if (finallyBlock != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1012,"      if ((lineSet == false) && (finallyBlock != null)) {
",4,3,0,3,7,0,0,0,0,8,51,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1017,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,14,90,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,148,"      } else if (v.getAnnotation() == GRAY) {
",2,1,0,2,6,0,4,0,0,7,39,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,575,"        if (lastJump == node) {
",4,1,0,1,3,0,0,0,0,5,23,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,576,"          createEdge(lastJump, Branch.UNCOND, computeFallThrough(
",4,0,0,0,2,0,6,0,0,10,55,11,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,581,"        lastJump = cur;
",4,0,0,0,0,0,0,0,0,5,15,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,597,"      finallyMap.put(lastJump, computeFollowNode(cur, this));
",0,0,0,2,4,0,10,0,0,10,55,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,143,"        continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,647,"        if (lastJump == null) {
",2,1,0,1,3,0,0,0,0,3,23,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,648,"          createEdge(node, Branch.UNCOND, curHandler.getLastChild());
",4,0,0,2,4,0,8,0,0,12,59,11,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,653,"        lastJump = curHandler;
",4,0,0,0,0,0,0,0,0,5,22,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,664,"      finallyMap.put(lastJump, null);
",0,0,0,1,2,0,6,0,0,6,31,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,65,"        Node condition = NodeUtil.getConditionExpression(
",2,0,0,0,1,0,4,2,0,8,49,11,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,71,"        if (condition != null) {
",2,1,0,1,3,0,0,0,0,3,24,11,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,72,"          TernaryValue val = NodeUtil.getImpureBooleanValue(condition);
",2,0,0,1,2,0,6,2,0,10,61,13,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,73,"          if (val != TernaryValue.UNKNOWN) {
",6,1,0,1,3,0,0,0,0,7,34,13,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,837,"        Preconditions.checkState(handler.isTry());
",0,0,0,2,4,0,8,0,0,8,42,9,0.11765,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,838,"        Node catchBlock = NodeUtil.getCatchBlock(handler);
",2,0,0,1,2,0,6,2,0,10,50,8,0.11765,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,840,"        if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.
",0,0,0,2,5,0,6,0,0,7,71,8,0.11765,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,110,"      compiler.report(
",0,0,0,0,1,0,4,0,0,4,16,7,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,167,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,170,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,189,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,191,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,192,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,515,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.10843,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,50,"      return input != null && input.isReturn();
",2,2,0,1,2,1,4,0,0,8,41,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,102,"    CheckPathsBetweenNodes<Node, ControlFlowGraph.Branch> test =
",6,0,0,0,0,0,0,4,0,10,60,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,109,"    if (!test.allPathsSatisfyPredicate()) {
",0,0,0,2,5,0,4,0,0,5,39,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,114,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,125,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,102,"    this(graph, a, b, nodePredicate, edgePredicate, true);
",10,0,0,1,2,0,0,0,0,11,54,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,103,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,111,"    setUp();
",0,0,0,1,2,0,2,0,0,2,8,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,112,"    boolean result = checkAllPathsWithoutBackEdges(start, end);
",2,0,0,1,2,0,6,0,0,8,59,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,113,"    tearDown();
",0,0,0,1,2,0,2,0,0,2,11,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,114,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,165,"    if (nodePredicate.apply(a.getValue()) &&
",0,1,0,2,5,0,8,0,0,9,40,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,169,"    if (a == b) {
",4,1,0,1,3,0,0,0,0,5,13,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,172,"    for (DiGraphEdge<N, E> e : a.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,45,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,175,"      if (e.getAnnotation() == VISITED_EDGE) {
",2,1,0,2,5,0,4,0,0,7,40,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,178,"      e.setAnnotation(VISITED_EDGE);
",0,0,0,1,2,0,6,0,0,6,30,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,180,"      if (ignoreEdge(e)) {
",0,0,0,2,5,0,4,0,0,4,20,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,183,"      if (e.getAnnotation() == BACK_EDGE) {
",2,1,0,2,5,0,4,0,0,7,37,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,187,"      DiGraphNode<N, E> next = e.getDestination();
",2,0,0,1,2,0,4,6,0,12,44,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,188,"      if (!checkAllPathsWithoutBackEdges(next, b)) {
",0,0,0,2,5,0,6,0,0,7,46,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,555,"      label = node.getFirstChild().getString();
",2,0,0,2,4,0,6,0,0,9,41,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,646,"      if (NodeUtil.hasFinally(curHandler)) {
",0,0,0,2,5,0,6,0,0,6,38,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,655,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,61,"      Branch branch = input.getValue();
",2,0,0,1,2,0,4,2,0,8,33,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,62,"      if (branch == Branch.ON_EX) {
",6,1,0,1,3,0,0,0,0,7,29,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,64,"      } else if (branch.isConditional()) {
",0,0,0,2,6,0,4,0,0,4,36,10,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,78,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,168,"      for (DiGraphNode<Node, Branch> candidate : cfg.getDirectedGraphNodes()) {
",2,0,0,2,5,0,4,6,0,12,73,6,0.09756,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,169,"        Node value = candidate.getValue();
",2,0,0,1,2,0,4,2,0,8,34,8,0.09756,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,170,"        if (value != null && value.isFunction()) {
",2,2,0,2,5,0,4,0,0,8,42,8,0.09756,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,175,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09756,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,98,"    if (fastAllPathsReturnCheck(t.getControlFlowGraph())) {
",0,0,0,3,7,0,6,0,0,6,55,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,123,"    for (DiGraphEdge<Node, Branch> s : cfg.getImplicitReturn().getInEdges()) {
",2,0,0,3,7,0,6,6,0,14,74,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,124,"      if (!s.getSource().getValue().isReturn()) {
",0,0,0,4,9,0,8,0,0,9,43,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,168,"      return returnType;
",2,0,0,0,0,1,0,0,0,2,18,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,904,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,1501,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.08696,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,1502,"    addToDebugLog(""Parsing: "" + file.getName());
",0,1,0,2,4,0,6,0,0,8,44,5,0.08696,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,1503,"    return new JsAst(file).getAstRoot(this);
",2,0,0,2,4,1,2,2,0,6,40,5,0.08696,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,1533,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.08696,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,1534,"    return parse(SourceFile.fromCode(fileName, js));
",0,0,0,2,4,1,10,0,0,10,48,5,0.08696,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,898,"    while (target.isLabel()) {
",0,0,0,2,5,0,4,0,0,4,26,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,899,"      if (target.getFirstChild().getString().equals(label)) {
",0,0,0,4,9,0,10,0,0,10,55,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,900,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,505,"        Node labelName = transform(statementNode.getBreakLabel());
",2,0,0,2,4,0,6,2,0,10,58,7,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,507,"        labelName.setType(Token.LABEL_NAME);
",4,0,0,1,2,0,4,0,0,8,36,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,508,"        node.addChildToBack(labelName);
",0,0,0,1,2,0,6,0,0,6,31,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,210,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,313,"    List<GraphEdge<N, E>> result = Lists.newArrayList();
",2,0,0,1,2,0,4,8,0,14,52,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,314,"    for (DiGraphNode<N, E> node : nodes.values()) {
",2,0,0,2,5,0,4,6,0,12,47,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,315,"      for (DiGraphEdge<N, E> edge : node.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,51,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,316,"        result.add(edge);
",0,0,0,1,2,0,6,0,0,6,17,9,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,317,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,318,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,319,"    return Collections.unmodifiableList(result);
",0,0,0,1,2,1,6,0,0,6,44,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,246,"    if (nodeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,247,"      nodeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,249,"    pushAnnotations(nodeAnnotationStack, getNodes());
",0,0,0,2,4,0,6,0,0,6,49,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,250,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,257,"    Preconditions.checkNotNull(nodeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,259,"    popAnnotations(nodeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,260,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,267,"    if (edgeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,268,"      edgeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,270,"    pushAnnotations(edgeAnnotationStack, getEdges());
",0,0,0,2,4,0,6,0,0,6,49,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,271,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,278,"    Preconditions.checkNotNull(edgeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,280,"    popAnnotations(edgeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,281,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,338,"    stack.push(new GraphAnnotationState(haveAnnotations.size()));
",0,0,0,3,6,0,8,2,0,10,61,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,339,"    for (Annotatable h : haveAnnotations) {
",4,0,0,1,3,0,0,2,0,6,39,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,340,"      stack.peek().add(new AnnotationState(h, h.getAnnotation()));
",2,0,0,4,8,0,10,2,0,14,60,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,341,"      h.setAnnotation(null);
",0,0,0,1,2,0,4,0,0,4,22,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,342,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,343,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,349,"    for (AnnotationState as : stack.pop()) {
",2,0,0,2,5,0,4,2,0,8,40,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,350,"      as.first.setAnnotation(as.second);
",8,0,0,1,2,0,2,0,0,10,34,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,351,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,352,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,87,"      Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {
",4,0,0,0,2,0,0,8,0,12,64,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,88,"    this.graph = graph;
",4,0,0,0,0,0,0,0,0,5,19,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,89,"    this.start = a;
",4,0,0,0,0,0,0,0,0,5,15,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,90,"    this.end = b;
",4,0,0,0,0,0,0,0,0,5,13,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,91,"    this.nodePredicate = nodePredicate;
",4,0,0,0,0,0,0,0,0,5,35,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,92,"    this.edgePredicate = edgePredicate;
",4,0,0,0,0,0,0,0,0,5,35,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,93,"    this.inclusive = inclusive;
",4,0,0,0,0,0,0,0,0,5,27,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,94,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,55,"  private static final Annotation BACK_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,64,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,56,"  private static final Annotation VISITED_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,67,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,59,"  private static final Annotation WHITE = null;
",2,0,0,0,0,3,0,2,0,7,45,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,61,"  private static final Annotation GRAY = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,59,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,63,"  private static final Annotation BLACK = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,60,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,129,"    graph.pushNodeAnnotations();
",0,0,0,1,2,0,4,0,0,4,28,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,130,"    graph.pushEdgeAnnotations();
",0,0,0,1,2,0,4,0,0,4,28,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,131,"    discoverBackEdges(this.start);
",2,0,0,1,2,0,2,0,0,4,30,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,132,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,135,"    graph.popNodeAnnotations();
",0,0,0,1,2,0,4,0,0,4,27,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,136,"    graph.popEdgeAnnotations();
",0,0,0,1,2,0,4,0,0,4,27,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,137,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,140,"    u.setAnnotation(GRAY);
",0,0,0,1,2,0,6,0,0,6,22,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,141,"    for (DiGraphEdge<N, E> e : u.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,45,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,142,"      if (ignoreEdge(e)) {
",0,0,0,2,5,0,4,0,0,4,20,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,145,"      DiGraphNode<N, E> v = e.getDestination();
",2,0,0,1,2,0,4,6,0,12,41,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,146,"      if (v.getAnnotation() == WHITE) {
",2,1,0,2,5,0,4,0,0,7,33,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,147,"        discoverBackEdges(v);
",0,0,0,1,2,0,4,0,0,4,21,9,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,151,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,152,"    u.setAnnotation(BLACK);
",0,0,0,1,2,0,6,0,0,6,23,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,153,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,156,"    return !edgePredicate.apply(e);
",0,0,0,1,2,1,6,0,0,7,31,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,573,"      return (A) annotation;
",2,0,0,1,2,1,0,2,0,4,22,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,578,"      annotation = data;
",4,0,0,0,0,0,0,0,0,5,18,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,579,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,56,"  private static final Annotation VISITED_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,67,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,55,"  private static final Annotation BACK_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,64,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,61,"  private static final Annotation GRAY = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,59,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,14,63,"  private static final Annotation BLACK = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,60,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,66,"    public AnnotationState(Annotatable annotatable, Annotation annotation) {
",6,0,0,1,3,1,0,4,0,11,72,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,67,"      this.first = annotatable;
",4,0,0,0,0,0,0,0,0,5,25,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,68,"      this.second = annotation;
",4,0,0,0,0,0,0,0,0,5,25,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,69,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,62,"  private static final class AnnotationState {
",2,0,0,0,1,3,0,0,0,5,44,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,80,"      super(size);
",2,0,0,1,2,0,0,0,0,2,12,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,14,81,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,1520,"    return new CompilerOptions();
",0,0,0,1,2,1,0,2,0,2,29,6,0.05479,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,1527,"      initOptions(newCompilerOptions());
",0,0,0,2,4,0,4,0,0,4,34,7,0.05479,0,-1
defect4j,closure,com/google/javascript/rhino/Node,14,1966,"    putBooleanProp(EMPTY_BLOCK, val);
",0,0,0,1,2,0,6,0,0,6,33,5,0.04762,0,-1
defect4j,closure,com/google/javascript/rhino/Node,14,1967,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,225,"        irNode.setType(Token.BLOCK);
",4,0,0,1,2,0,4,0,0,8,28,9,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,226,"        irNode.setWasEmptyNode(true);
",0,0,0,1,2,0,4,0,0,5,29,9,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,14,230,"        return getNativeType(NUMBER_TYPE);
",0,0,0,1,2,1,4,0,0,4,34,9,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,527,"      validateBlock(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,32,7,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,528,"      seenCatchOrFinally = true;
",2,0,0,0,0,0,0,0,0,4,26,6,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,14,235,"        if (outcome) {
",2,0,0,1,3,0,0,0,0,2,14,5,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,14,236,"          return caseEquality(condition, blindScope, INEQ);
",0,0,0,1,2,1,8,0,0,8,49,8,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,14,110,"        return new TypePair(
",0,0,0,0,1,1,0,2,0,2,20,10,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/JoinOp,14,45,"        int mid = computeMidPoint(size);
",2,0,0,1,2,0,4,0,0,6,32,9,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/JoinOp,14,46,"        return apply(
",0,0,0,0,1,1,2,0,0,2,13,9,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/JoinOp,14,67,"      int midpoint = size >>> 1;
",4,1,0,0,0,0,0,0,0,5,26,6,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/JoinOp,14,68,"      if (size > 4) {
",2,1,0,1,3,0,0,0,0,3,15,5,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/JoinOp,14,73,"      return midpoint;
",2,0,0,0,0,1,0,0,0,2,16,5,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,14,646,"          validator.expectNumber(
",0,0,0,0,1,0,4,0,0,4,23,8,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,134,"        validateTry(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,135,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,509,"    validateNodeType(Token.TRY, n);
",4,0,0,1,2,0,4,0,0,8,31,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,510,"    validateMinimumChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,32,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,511,"    validateMaximumChildCount(n, 3);
",0,0,0,1,2,0,4,0,0,4,32,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,512,"    validateBlock(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,33,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,514,"    boolean seenCatchOrFinally = false;
",2,0,0,0,0,0,0,0,0,3,35,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,517,"    Node catches = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,36,4,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,518,"    validateNodeType(Token.BLOCK, catches);
",4,0,0,1,2,0,4,0,0,8,39,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,519,"    validateMaximumChildCount(catches, 1);
",0,0,0,1,2,0,4,0,0,4,38,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,520,"    if (catches.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,526,"    if (n.getChildCount() == 3) {
",0,1,0,2,5,0,4,0,0,5,29,4,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,531,"    if (!seenCatchOrFinally) {
",2,0,0,1,3,0,0,0,0,3,26,4,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,14,534,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter,14,630,"    return type == null ? null : type.visit(restrictUndefinedVisitor);
",2,1,0,1,2,1,6,0,0,9,66,5,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,260,"          return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,7,0.03114,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,161,"    JSType returnType = scopeType.getReturnType();
",2,0,0,1,2,0,4,2,0,8,46,4,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,163,"    if (returnType == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,167,"    if (!isVoidOrUnknown(returnType)) {
",0,0,0,2,5,0,4,0,0,5,35,4,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,189,"    final JSType voidType =
",2,0,0,0,0,1,0,2,0,5,23,4,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,191,"    return voidType.isSubtype(returnType);
",0,0,0,1,2,1,6,0,0,6,38,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,329,"        handleThrow(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,330,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,540,"    connectToPossibleExceptionHandler(node, node);
",0,0,0,1,2,0,6,0,0,6,46,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,541,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1174,"        return Token.GT;
",4,0,0,0,0,1,0,0,0,4,16,6,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,1683,"        return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,6,0.03010,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,14,120,"    return visitor.caseUnknownType();
",0,0,0,1,2,1,4,0,0,4,33,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,264,"        return processThrowStatement((ThrowStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,981,"      return newNode(Token.THROW,
",4,0,0,0,1,1,2,0,0,6,27,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,2103,"    debugLog.append(str);
",0,0,0,1,2,0,6,0,0,6,21,5,0.02410,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,2104,"    debugLog.append('\n');
",0,0,0,1,2,0,4,0,0,5,22,5,0.02410,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,2105,"    logger.fine(str);
",0,0,0,1,2,0,6,0,0,6,17,5,0.02410,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,14,2106,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02410,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,224,"      if (irNode.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,23,7,0.02410,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,1680,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.02387,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,175,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.02278,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,176,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.02278,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,914,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.02278,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NumberType,14,112,"    return visitor.caseNumberType();
",0,0,0,1,2,1,4,0,0,4,32,5,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,594,"    if (lastJump == node) {
",4,1,0,1,3,0,0,0,0,5,23,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,599,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,942,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,567,"      super(sourceNode, edgeValue, destNode);
",6,0,0,1,2,0,0,0,0,6,39,5,0.02163,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,14,568,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02163,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,338,"        handleBreak(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,339,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,552,"    String label = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,554,"    if (node.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,558,"    Node previous = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,560,"    Node parent = node.getParent();
",2,0,0,1,2,0,4,2,0,8,31,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,570,"    for (cur = node, lastJump = node;
",8,0,0,0,1,0,0,0,0,10,33,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,571,"        !isBreakTarget(cur, label);
",0,0,0,1,2,0,6,0,0,7,27,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,573,"      if (cur.isTry() && NodeUtil.hasFinally(cur)
",0,1,0,2,5,0,10,0,0,11,43,6,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,583,"      if (parent == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,592,"      previous = cur;
",4,0,0,0,0,0,0,0,0,5,15,6,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,572,"        cur = parent, parent = parent.getParent()) {
",6,0,0,1,4,0,4,0,0,12,44,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,14,643,"        leftType = getJSType(n.getFirstChild());
",2,0,0,2,4,0,6,0,0,9,40,5,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,14,644,"        rightType = getJSType(n.getLastChild());
",2,0,0,2,4,0,6,0,0,9,40,5,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,14,645,"        if (rightType.isNumber()) {
",0,0,0,2,5,0,4,0,0,4,27,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,14,667,"        ensureTyped(t, n, BOOLEAN_TYPE);
",0,0,0,1,2,0,8,0,0,8,32,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,14,668,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,301,"        handleWhile(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,302,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,374,"    createEdge(node, Branch.ON_TRUE,
",4,0,0,0,1,0,4,0,0,8,32,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,378,"    createEdge(node, Branch.ON_FALSE,
",4,0,0,0,1,0,4,0,0,8,33,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,380,"    connectToPossibleExceptionHandler(
",0,0,0,0,1,0,2,0,0,2,34,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,382,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,363,"      createEdge(node, Branch.ON_FALSE,
",4,0,0,0,1,0,4,0,0,8,33,7,0.01990,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,14,203,"    return this.isSubtype(
",0,0,0,0,1,1,2,0,0,2,22,5,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,222,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.01867,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,223,"    if (!irNode.isBlock()) {
",0,0,0,2,5,0,4,0,0,5,24,4,0.01867,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,235,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01867,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,895,"    if (label == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,14,671,"    return JSError.make(getSourceName(), n, level, type, arguments);
",0,0,0,2,4,1,14,0,0,14,64,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,157,"    if (isEmptyFunction(scope)) {
",0,0,0,2,5,0,4,0,0,4,29,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,180,"    return function.getChildCount() == 3 &&
",0,2,0,1,2,1,4,0,0,6,39,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,747,"        return parent;
",2,0,0,0,0,1,0,0,0,2,14,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,14,193,"    return type.key + "". "" + description + "" at "" +
",6,1,0,0,0,1,0,0,0,9,47,4,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,184,"        return processBreakStatement((BreakStatement) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,503,"      Node node = newNode(Token.BREAK);
",6,0,0,1,2,0,2,2,0,10,33,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,504,"      if (statementNode.getBreakLabel() != null) {
",0,1,0,2,5,0,4,0,0,5,44,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,510,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,114,"        return getPureBooleanValue(n);
",0,0,0,1,2,1,4,0,0,4,30,6,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,14,77,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,298,"        handleIf(n);
",0,0,0,1,2,0,4,0,0,4,12,6,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,299,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,358,"    Node thenBlock = node.getFirstChild().getNext();
",2,0,0,2,4,0,6,2,0,10,48,4,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,359,"    Node elseBlock = thenBlock.getNext();
",2,0,0,1,2,0,4,2,0,8,37,4,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,360,"    createEdge(node, Branch.ON_TRUE, computeFallThrough(thenBlock));
",4,0,0,2,4,0,8,0,0,12,64,5,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,362,"    if (elseBlock == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,368,"    connectToPossibleExceptionHandler(
",0,0,0,0,1,0,2,0,0,2,34,5,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,370,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01521,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,350,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,14,806,"        return computeFallThrough(n.getLastChild());
",0,0,0,2,4,1,6,0,0,6,44,6,0.01493,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,45,"  private static final Predicate<Node> IS_RETURN = new Predicate<Node>() {
",2,0,0,1,3,3,0,8,0,13,72,2,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,86,"  CheckMissingReturn(AbstractCompiler compiler, CheckLevel level) {
",6,0,0,1,3,0,0,4,0,10,65,2,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,87,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,88,"    this.level = level;
",4,0,0,0,0,0,0,0,0,5,19,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,89,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,37,"  static final DiagnosticType MISSING_RETURN_STATEMENT =
",2,0,0,0,0,2,0,2,0,6,54,2,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,45,"  private static final Predicate<Node> IS_RETURN = new Predicate<Node>() {
",2,0,0,1,3,3,0,8,0,13,72,2,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,56,"      GOES_THROUGH_TRUE_CONDITION_PREDICATE =
",2,0,0,0,0,0,0,0,0,2,39,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,93,"    JSType returnType = explicitReturnExpected(t.getScopeRoot());
",2,0,0,2,4,0,6,2,0,10,61,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,94,"    if (returnType == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,95,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,133,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,138,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,143,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,151,"    FunctionType scopeType = JSType.toMaybeFunctionType(scope.getJSType());
",2,0,0,2,4,0,8,2,0,12,71,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,153,"    if (scopeType == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,154,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,280,"        return processWhileLoop((WhileLoop) node);
",2,0,0,2,4,1,2,2,0,6,42,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,1094,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,14,57,"        new Predicate<DiGraphEdge<Node, ControlFlowGraph.Branch>>() {
",4,0,0,1,3,0,0,6,0,10,61,5,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,14,206,"    if (!type.matchesNumberContext()) {
",0,0,0,2,5,0,4,0,0,5,35,4,0.01351,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,14,209,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01351,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,14,130,"    return new JSError(sourceName, n, n.getLineno(), n.getCharno(), type, level,
",8,0,0,2,5,1,8,2,0,18,76,5,0.01351,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,14,357,"        slots.put(symbolEntry.getKey(), symbolEntry.getValue());
",0,0,0,3,6,0,12,0,0,12,56,9,0.01282,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,14,290,"      rightIsRefineable = false;
",2,0,0,0,0,0,0,0,0,4,26,6,0.01282,0,-1
defect4j,closure,com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter,14,291,"      rightType = right.getJSType();
",2,0,0,1,2,0,4,0,0,7,30,6,0.01282,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,206,"        } else  if (node instanceof LabeledStatement) {
",2,0,0,1,4,0,0,2,0,4,47,7,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,207,"          return processLabeledStatement((LabeledStatement) node);
",2,0,0,2,4,1,2,2,0,6,56,9,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,14,242,"        return processLabel((Label) node);
",2,0,0,2,4,1,2,2,0,6,34,6,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,740,"      return newStringNode(Token.LABEL_NAME, labelNode.getName());
",4,0,0,2,4,1,6,0,0,10,60,6,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,745,"      Node node = newNode(Token.LABEL);
",6,0,0,1,2,0,2,2,0,10,33,5,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,746,"      Node prev = null;
",2,0,0,0,0,0,0,2,0,4,17,5,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,747,"      Node cur = node;
",4,0,0,0,0,0,0,2,0,6,16,5,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,748,"      for (Label label : statementNode.getLabels()) {
",2,0,0,2,5,0,4,2,0,8,47,5,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,14,749,"        if (prev != null) {
",2,1,0,1,3,0,0,0,0,3,19,7,0.01266,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,956,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,15,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,15,644,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,15,645,"        add(""delete "");
",0,0,0,1,2,0,2,0,0,3,15,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,15,646,"        add(first);
",0,0,0,1,2,0,4,0,0,4,11,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,15,647,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,15,1197,"        return Token.DELPROP;
",4,0,0,0,0,1,0,0,0,4,21,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,15,95,"          return true;
",0,0,0,0,0,1,0,0,0,1,12,10,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Token,15,263,"          case BLOCK:           return ""BLOCK"";
",2,0,0,0,0,1,0,0,0,3,37,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Token,15,266,"          case SCRIPT:          return ""SCRIPT"";
",2,0,0,0,0,1,0,0,0,3,38,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,122,"    setUp();
",0,0,0,1,2,0,2,0,0,2,8,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,123,"    boolean result = checkSomePathsWithoutBackEdges(start, end);
",2,0,0,1,2,0,6,0,0,8,60,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,124,"    tearDown();
",0,0,0,1,2,0,2,0,0,2,11,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,125,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,201,"    if (nodePredicate.apply(a.getValue()) &&
",0,1,0,2,5,0,8,0,0,9,40,4,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,205,"    if (a == b) {
",4,1,0,1,3,0,0,0,0,5,13,4,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,206,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,208,"    for (DiGraphEdge<N, E> e : a.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,45,4,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,211,"      if (e.getAnnotation() == VISITED_EDGE) {
",2,1,0,2,5,0,4,0,0,7,40,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,214,"      e.setAnnotation(VISITED_EDGE);
",0,0,0,1,2,0,6,0,0,6,30,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,216,"      if (ignoreEdge(e)) {
",0,0,0,2,5,0,4,0,0,4,20,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,219,"      if (e.getAnnotation() == BACK_EDGE) {
",2,1,0,2,5,0,4,0,0,7,37,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,223,"      DiGraphNode<N, E> next = e.getDestination();
",2,0,0,1,2,0,4,6,0,12,44,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,224,"      if (checkSomePathsWithoutBackEdges(next, b)) {
",0,0,0,2,5,0,6,0,0,6,46,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,227,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,228,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,15,362,"          pathCheck = new CheckPathsBetweenNodes<Node, ControlFlowGraph.Branch>(
",6,0,0,0,1,0,0,4,0,10,70,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,15,370,"        if (pathCheck.somePathsSatisfyPredicate()) {
",0,0,0,2,5,0,4,0,0,4,44,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,15,104,"          if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
",0,1,0,3,7,0,10,0,0,12,60,10,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,15,1198,"      case Token.IN:     return 9;
",4,0,0,0,0,1,0,0,0,4,28,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,313,"    List<GraphEdge<N, E>> result = Lists.newArrayList();
",2,0,0,1,2,0,4,8,0,14,52,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,314,"    for (DiGraphNode<N, E> node : nodes.values()) {
",2,0,0,2,5,0,4,6,0,12,47,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,315,"      for (DiGraphEdge<N, E> edge : node.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,51,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,316,"        result.add(edge);
",0,0,0,1,2,0,6,0,0,6,17,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,317,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,318,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,319,"    return Collections.unmodifiableList(result);
",0,0,0,1,2,1,6,0,0,6,44,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,246,"    if (nodeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,247,"      nodeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,249,"    pushAnnotations(nodeAnnotationStack, getNodes());
",0,0,0,2,4,0,6,0,0,6,49,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,250,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,257,"    Preconditions.checkNotNull(nodeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,259,"    popAnnotations(nodeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,260,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,267,"    if (edgeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,268,"      edgeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,270,"    pushAnnotations(edgeAnnotationStack, getEdges());
",0,0,0,2,4,0,6,0,0,6,49,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,271,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,278,"    Preconditions.checkNotNull(edgeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,280,"    popAnnotations(edgeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,281,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,338,"    stack.push(new GraphAnnotationState(haveAnnotations.size()));
",0,0,0,3,6,0,8,2,0,10,61,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,339,"    for (Annotatable h : haveAnnotations) {
",4,0,0,1,3,0,0,2,0,6,39,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,340,"      stack.peek().add(new AnnotationState(h, h.getAnnotation()));
",2,0,0,4,8,0,10,2,0,14,60,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,341,"      h.setAnnotation(null);
",0,0,0,1,2,0,4,0,0,4,22,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,342,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,343,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,349,"    for (AnnotationState as : stack.pop()) {
",2,0,0,2,5,0,4,2,0,8,40,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,350,"      as.first.setAnnotation(as.second);
",8,0,0,1,2,0,2,0,0,10,34,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,351,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,352,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,87,"      Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {
",4,0,0,0,2,0,0,8,0,12,64,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,88,"    this.graph = graph;
",4,0,0,0,0,0,0,0,0,5,19,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,89,"    this.start = a;
",4,0,0,0,0,0,0,0,0,5,15,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,90,"    this.end = b;
",4,0,0,0,0,0,0,0,0,5,13,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,91,"    this.nodePredicate = nodePredicate;
",4,0,0,0,0,0,0,0,0,5,35,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,92,"    this.edgePredicate = edgePredicate;
",4,0,0,0,0,0,0,0,0,5,35,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,93,"    this.inclusive = inclusive;
",4,0,0,0,0,0,0,0,0,5,27,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,94,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,55,"  private static final Annotation BACK_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,64,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,56,"  private static final Annotation VISITED_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,67,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,59,"  private static final Annotation WHITE = null;
",2,0,0,0,0,3,0,2,0,7,45,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,61,"  private static final Annotation GRAY = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,59,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,63,"  private static final Annotation BLACK = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,60,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,129,"    graph.pushNodeAnnotations();
",0,0,0,1,2,0,4,0,0,4,28,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,130,"    graph.pushEdgeAnnotations();
",0,0,0,1,2,0,4,0,0,4,28,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,131,"    discoverBackEdges(this.start);
",2,0,0,1,2,0,2,0,0,4,30,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,132,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,135,"    graph.popNodeAnnotations();
",0,0,0,1,2,0,4,0,0,4,27,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,136,"    graph.popEdgeAnnotations();
",0,0,0,1,2,0,4,0,0,4,27,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,137,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,140,"    u.setAnnotation(GRAY);
",0,0,0,1,2,0,6,0,0,6,22,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,141,"    for (DiGraphEdge<N, E> e : u.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,45,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,142,"      if (ignoreEdge(e)) {
",0,0,0,2,5,0,4,0,0,4,20,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,145,"      DiGraphNode<N, E> v = e.getDestination();
",2,0,0,1,2,0,4,6,0,12,41,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,146,"      if (v.getAnnotation() == WHITE) {
",2,1,0,2,5,0,4,0,0,7,33,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,147,"        discoverBackEdges(v);
",0,0,0,1,2,0,4,0,0,4,21,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,151,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,152,"    u.setAnnotation(BLACK);
",0,0,0,1,2,0,6,0,0,6,23,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,153,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,156,"    return !edgePredicate.apply(e);
",0,0,0,1,2,1,6,0,0,7,31,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,61,"  private static final Annotation GRAY = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,59,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,573,"      return (A) annotation;
",2,0,0,1,2,1,0,2,0,4,22,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,578,"      annotation = data;
",4,0,0,0,0,0,0,0,0,5,18,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,579,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,56,"  private static final Annotation VISITED_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,67,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,55,"  private static final Annotation BACK_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,64,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,63,"  private static final Annotation BLACK = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,60,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,80,"      super(size);
",2,0,0,1,2,0,0,0,0,2,12,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,81,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,66,"    public AnnotationState(Annotatable annotatable, Annotation annotation) {
",6,0,0,1,3,1,0,4,0,11,72,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,67,"      this.first = annotatable;
",4,0,0,0,0,0,0,0,0,5,25,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,68,"      this.second = annotation;
",4,0,0,0,0,0,0,0,0,5,25,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,69,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
