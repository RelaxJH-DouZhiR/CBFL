dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,197,"          if (target != null) {
",2,1,0,1,3,0,0,0,0,3,21,10,0.09091,1,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,208,"          computeGenKill(rhs, gen, kill, conditional);
",0,0,0,1,2,0,10,0,0,10,44,8,0.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,59,255,"    if (options.checkGlobalThisLevel.isOn()) {
",4,0,0,2,5,0,2,0,0,6,42,5,0.00017,1,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1473,"    builder.setTagAsStrict(
",0,0,0,0,1,0,4,0,0,4,23,5,0.00031,1,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,1015,"        case '\0': sb.append(""\\0""); break;
",0,0,0,1,2,0,4,0,0,6,35,6,0.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,68,1761,"      return reportTypeSyntaxWarning(""msg.jsdoc.missing.lp"");
",0,0,0,1,2,1,2,0,0,3,55,7,1.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/CheckAccessControls,71,416,"      boolean isOverride = t.inGlobalScope() &&
",2,2,0,1,2,0,4,0,0,8,41,7,0.05797,1,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,350,"    out.append("":"");
",0,0,0,1,2,0,4,0,0,5,16,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,351,"    out.append(value);
",0,0,0,1,2,0,6,0,0,6,18,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,352,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,357,"    out.append("",\n"");
",0,0,0,1,2,0,4,0,0,5,18,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,358,"    out.append(""\"""");
",0,0,0,1,2,0,4,0,0,5,17,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,359,"    out.append(name);
",0,0,0,1,2,0,6,0,0,6,17,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,360,"    out.append(""\"""");
",0,0,0,1,2,0,4,0,0,5,17,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,361,"    out.append("":"");
",0,0,0,1,2,0,4,0,0,5,16,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,362,"    out.append(value);
",0,0,0,1,2,0,6,0,0,6,18,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,363,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,367,"    appendField(out, name, """");
",0,0,0,1,2,0,6,0,0,7,27,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,368,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,373,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,328,"        out.append("","");
",0,0,0,1,2,0,4,0,0,5,16,9,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64VLQ,47,65,"      return ((-value) << 1) + 1;
",2,2,0,2,4,1,0,0,0,5,27,6,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,676,"      originalNameIndex = index;
",4,0,0,0,0,0,0,0,0,5,26,6,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,499,"          Mapping previous = stack.pop();
",2,0,0,1,2,0,4,2,0,8,31,9,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,500,"          maybeVisit(v, previous);
",0,0,0,1,2,0,6,0,0,6,24,10,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapGeneratorV3,47,501,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64,47,25,"final class Base64 {
",2,0,0,0,1,1,0,0,0,3,20,1,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64,47,42,"  private static final int[] BASE64_DECODE_MAP = new int[256];
",2,0,0,2,4,3,0,0,0,5,60,2,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64,47,44,"      Arrays.fill(BASE64_DECODE_MAP, -1);
",0,0,0,1,2,0,6,0,0,7,35,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64,47,45,"      for (int i = 0; i < BASE64_MAP.length(); i++)
",6,1,0,2,4,0,4,0,0,12,45,4,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64,47,46,"        BASE64_DECODE_MAP[BASE64_MAP.charAt(i)] = i;
",2,0,1,2,4,0,6,0,0,11,44,5,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64,47,47,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64,47,54,"    assert (value <= 63 && value >= 0) : ""value out of range:"" + value;
",6,4,0,1,2,0,0,0,0,11,67,4,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/Base64,47,55,"    return BASE64_MAP.charAt(value);
",0,0,0,1,2,1,6,0,0,6,32,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceInformationAnnotator,47,76,"        setOriginalName(n, n.getString());
",0,0,0,2,4,0,8,0,0,8,34,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceInformationAnnotator,47,77,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceInformationAnnotator,47,92,"    if (!name.isEmpty() && n.getProp(Node.ORIGINALNAME_PROP) == null) {
",4,2,0,3,7,0,8,0,0,15,67,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceInformationAnnotator,47,93,"      n.putProp(Node.ORIGINALNAME_PROP, name);
",4,0,0,1,2,0,6,0,0,10,40,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceInformationAnnotator,47,95,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,56,"  public SourceMapConsumerV3() {
",2,0,0,1,3,1,0,0,0,3,30,2,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,51,"  private ArrayList<ArrayList<Entry>> lines = null;
",2,0,0,0,0,1,0,6,0,9,49,2,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,58,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,102,"      int version = sourceMapRoot.getInt(""version"");
",2,0,0,1,2,0,4,0,0,7,46,7,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,103,"      if (version != 3) {
",2,1,0,1,3,0,0,0,0,3,19,6,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,107,"      String file = sourceMapRoot.getString(""file"");
",2,0,0,1,2,0,4,2,0,9,46,6,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,108,"      if (file.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,21,7,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,112,"      if (sourceMapRoot.has(""sections"")) {
",0,0,0,2,5,0,4,0,0,5,36,7,1,0,-1
defect4j,closure,com/google/debugging/sourcemap/SourceMapConsumerV3,47,118,"      lineCount = sourceMapRoot.getInt(""lineCount"");
",2,0,0,1,2,0,4,0,0,8,46,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,899,"            builder.inferThisType(info, ownerNode.getJSType());
",0,0,0,2,4,0,10,0,0,10,51,13,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,900,"            searchedForThisType = true;
",2,0,0,0,0,0,0,0,0,4,27,12,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1214,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,2340,"    for (Node current = qName; true;
",4,0,0,0,1,0,0,2,0,7,32,4,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,2342,"      if (current.isName() || current.isThis()) {
",0,1,0,3,7,0,8,0,0,9,43,6,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,2343,"        return current;
",2,0,0,0,0,1,0,0,0,2,15,8,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,2345,"      Preconditions.checkState(current.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,7,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,2341,"         current = current.getFirstChild()) {
",2,0,0,1,4,0,4,0,0,7,36,4,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1199,"      Scope scope = getQnameRootScope(n);
",2,0,0,1,2,0,4,2,0,8,35,5,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1200,"      return scope != null && scope.isGlobal();
",2,2,0,1,2,1,4,0,0,8,41,5,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1207,"      Node root = NodeUtil.getRootOfQualifiedName(n);
",2,0,0,1,2,0,6,2,0,10,47,5,0.01538,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1208,"      if (root.isName()) {
",0,0,0,2,5,0,4,0,0,4,20,6,0.01538,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,48,139,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.01042,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,48,95,"    Node thisParam = parameters.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,4,0.00971,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,48,96,"    Node thatParam = that.parameters.getFirstChild();
",6,0,0,1,2,0,2,2,0,10,49,4,0.00971,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,48,97,"    while (thisParam != null && thatParam != null) {
",4,3,0,1,3,0,0,0,0,7,48,4,0.00971,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1652,"          return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00971,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,270,"    return call.returnTypeInferred;
",4,0,0,0,0,1,0,0,0,4,31,5,0.00862,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,48,81,"    if (!(other instanceof ArrowType)) {
",2,0,0,2,5,0,0,2,0,5,36,4,0.00855,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,48,85,"    ArrowType that = (ArrowType) other;
",4,0,0,1,2,0,0,4,0,8,35,4,0.00855,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,48,88,"    if (!this.returnType.isSubtype(that.returnType)) {
",6,0,0,2,5,0,2,0,0,9,50,4,0.00855,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,883,"      if (this.isInterface()) {
",0,0,0,2,5,0,2,0,0,2,25,7,0.00847,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,894,"      boolean treatThisTypesAsCovariant =
",2,0,0,0,0,0,0,0,0,2,35,7,0.00847,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,909,"      return treatThisTypesAsCovariant && this.call.isSubtype(other.call);
",8,1,0,1,2,1,2,0,0,11,68,6,0.00847,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,878,"      FunctionType other = that.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,48,6,0.00840,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,879,"      if (other.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,26,7,0.00840,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1632,"              maybeCollectMember(t, child.getFirstChild(), child,
",0,0,0,1,3,0,10,0,0,10,51,10,0.00690,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1634,"              break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00690,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1644,"        JSDocInfo info = nodeWithJsDocInfo.getJSDocInfo();
",2,0,0,1,2,0,4,2,0,8,50,6,0.00662,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1649,"        if (info == null ||
",2,3,0,0,1,0,0,0,0,5,19,6,0.00662,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1629,"          Node child = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,8,0.00455,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1630,"          switch (child.getType()) {
",0,0,0,2,5,0,4,0,0,4,26,9,0.00455,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1575,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00439,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,48,985,"    return info.parameters.size();
",4,0,0,1,2,1,2,0,0,6,30,5,0.00410,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,493,"        ensureTyped(t, n, t.getScope().getTypeOfThis());
",0,0,0,3,6,0,12,0,0,12,48,6,0.00391,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,494,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00391,0,-1
defect4j,closure,com/google/javascript/rhino/Node,48,1630,"      return ""this"";
",0,0,0,0,0,1,0,0,0,1,14,8,0.00389,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,305,"        n.setJSType(scope.getTypeOfThis());
",0,0,0,2,4,0,8,0,0,8,35,6,0.00379,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,306,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00379,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,48,125,"    return cache.functionScope.getTypeOfThis();
",4,0,0,1,2,1,2,0,0,6,43,5,0.00379,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,48,115,"      if (functionScope.getVar(symbol) == null && !functionScope.isBottom()) {
",0,2,0,3,7,0,10,0,0,13,72,6,0.00351,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,48,119,"      inferSlotType(symbol, inferredType);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00351,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,48,486,"    return getFlag(MASK_OVERRIDE);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00251,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,136,"        return prop;
",2,0,0,0,0,1,0,0,0,2,12,8,0.00234,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1441,"        valueType = rhsValue.getJSType();
",2,0,0,1,2,0,4,0,0,7,33,7,0.00233,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,48,246,"        return nameNode.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,32,10,0.00233,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,48,245,"      } else if (pType == Token.VAR) {
",6,1,0,1,4,0,0,0,0,7,32,7,0.00230,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,789,"      return scope.isGlobal() || !type.isReturnTypeInferred();
",0,1,0,2,4,1,8,0,0,10,56,5,0.00220,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,48,153,"      } else if (methodName.equals(""mixin"")) {
",0,0,0,2,6,0,4,0,0,5,40,8,0.00220,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,785,"      if (lValue != null &&
",2,2,0,0,1,0,0,0,0,4,21,5,0.00213,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,48,913,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.00207,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,905,"          validator.expectCanAssignToPropertyOf(
",0,0,0,0,1,0,4,0,0,4,38,11,0.00205,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,48,141,"      methodName = callName.getLastChild().getString();
",2,0,0,2,4,0,6,0,0,9,49,6,0.00201,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,48,151,"      if (methodName.equals(""inherits"")) {
",0,0,0,2,5,0,4,0,0,5,36,7,0.00194,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,273,"      return p.getJSDocInfo();
",0,0,0,1,2,1,4,0,0,4,24,7,0.00193,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,275,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00192,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,271,"    Property p = properties.get(propertyName);
",2,0,0,1,2,0,6,2,0,10,42,4,0.00191,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,272,"    if (p != null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00191,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,895,"            builder.inferThisType(
",0,0,0,0,1,0,4,0,0,4,22,12,0.00190,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,897,"            searchedForThisType = true;
",2,0,0,0,0,0,0,0,0,4,27,11,0.00190,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,48,376,"        thisType = objType;
",4,0,0,0,0,0,0,0,0,5,19,8,0.00189,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1044,"          ctorType.getAllImplementedInterfaces()) {
",0,0,0,1,4,0,4,0,0,4,41,7,0.00189,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,48,374,"      ObjectType objType = ObjectType.cast(type);
",2,0,0,1,2,0,6,2,0,10,43,6,0.00189,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,48,375,"      if (objType != null && (info == null || !info.hasType())) {
",4,4,0,3,7,0,4,0,0,13,59,6,0.00189,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,48,371,"    inferThisType(info);
",0,0,0,1,2,0,4,0,0,4,20,5,0.00188,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,48,373,"    if (thisType == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00188,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,48,380,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00188,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1069,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00184,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1136,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00180,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1028,"    FunctionType superClass = ctorType.getSuperClassConstructor();
",2,0,0,1,2,0,4,2,0,8,62,4,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1029,"    boolean superClassHasProperty = superClass != null &&
",4,2,0,0,0,0,0,0,0,6,53,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1032,"    boolean superInterfacesHasProperty = false;
",2,0,0,0,0,0,0,0,0,3,43,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1033,"    if (ctorType.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,29,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1039,"    boolean declaredOverride = info != null && info.isOverride();
",4,2,0,1,2,0,4,0,0,10,61,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1041,"    boolean foundInterfaceProperty = false;
",2,0,0,0,0,0,0,0,0,3,39,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1042,"    if (ctorType.isConstructor()) {
",0,0,0,2,5,0,4,0,0,4,31,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1066,"    if (!declaredOverride && !superClassHasProperty
",4,1,0,0,1,0,0,0,0,7,47,4,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1142,"      ctor = maybeSuperInstanceType.getConstructor();
",2,0,0,1,2,0,4,0,0,7,47,6,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1143,"      if (ctor == null) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1146,"      Preconditions.checkState(ctor.isConstructor() || ctor.isInterface());
",0,1,0,3,6,0,12,0,0,13,69,7,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1147,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,888,"              checkDeclaredPropertyInheritance(
",0,0,0,0,1,0,2,0,0,2,33,15,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1024,"    if (hasUnknownOrEmptySupertype(ctorType)) {
",0,0,0,2,5,0,4,0,0,4,43,5,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1127,"    Preconditions.checkArgument(ctor.isConstructor() || ctor.isInterface());
",0,1,0,3,6,0,12,0,0,13,72,5,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1128,"    Preconditions.checkArgument(!ctor.isUnknownType());
",0,0,0,2,4,0,8,0,0,9,51,5,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1133,"      ObjectType maybeSuperInstanceType =
",2,0,0,0,0,0,0,2,0,4,35,6,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1135,"      if (maybeSuperInstanceType == null) {
",2,1,0,1,3,0,0,0,0,3,37,6,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1138,"      if (maybeSuperInstanceType.isUnknownType() ||
",0,1,0,1,3,0,4,0,0,5,45,6,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,931,"                 ownerType.getCtorImplementedInterfaces()) {
",0,0,0,1,4,0,4,0,0,4,43,8,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,939,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00177,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,527,"    return isFunctionPrototypeType()
",0,0,0,1,2,1,2,0,0,2,32,6,0.00176,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,48,651,"      return this.docInfo;
",2,0,0,0,0,1,0,0,0,2,20,6,0.00176,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,886,"            FunctionType functionType = jsType.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,57,12,0.00176,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,887,"            if (functionType.isConstructor() || functionType.isInterface()) {
",0,1,0,3,7,0,8,0,0,9,65,12,0.00176,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,884,"          JSType jsType = getJSType(object2);
",2,0,0,1,2,0,4,2,0,8,35,10,0.00175,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,885,"          if (jsType.isFunctionType()) {
",0,0,0,2,5,0,4,0,0,4,30,11,0.00175,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,894,"          return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00175,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,878,"            overriddenPropType =
",2,0,0,0,0,0,0,0,0,3,20,11,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,924,"      JSType propType = ownerType.getPropertyType(propName);
",2,0,0,1,2,0,6,2,0,10,54,5,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,925,"      if (propType != null && propType.isFunctionType()) {
",2,2,0,2,5,0,4,0,0,8,52,5,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/InferJSDocInfo,48,221,"      objType.setJSDocInfo(docInfo);
",0,0,0,1,2,0,6,0,0,6,30,8,0.00174,0,-1
defect4j,closure,com/google/javascript/rhino/Node,48,1629,"    } else if (type == Token.THIS) {
",6,1,0,1,4,0,0,0,0,7,32,6,0.00172,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,215,"      return getNativeType(JSTypeNative.UNKNOWN_TYPE);
",4,0,0,1,2,1,2,0,0,6,48,7,0.00172,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,785,"    if (that.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.00171,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,788,"    return this.typeOfThis.isEquivalentTo(that.typeOfThis) &&
",6,1,0,1,2,1,2,0,0,9,57,4,0.00171,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1010,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00170,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1004,"    for (; type != null; type = type.getImplicitPrototype()) {
",4,1,0,2,5,0,4,0,0,10,58,4,0.00169,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1005,"      JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
",2,0,0,1,2,0,6,2,0,10,55,6,0.00169,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1006,"      if (docInfo != null && docInfo.isImplicitCast()) {
",2,2,0,2,5,0,4,0,0,8,50,6,0.00169,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,48,1388,"    return this.associatedNode;
",2,0,0,0,0,1,0,0,0,2,27,5,0.00166,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1564,"        isExtern = functionJSDocInfo.getAssociatedNode().isFromExterns();
",2,0,0,2,4,0,6,0,0,9,65,8,0.00166,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,48,1137,"        return Token.THIS;
",4,0,0,0,0,1,0,0,0,4,18,6,0.00166,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,446,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00162,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,48,243,"      } else if (pType == Token.ASSIGN) {
",6,1,0,1,4,0,0,0,0,7,35,6,0.00162,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,880,"        Node object2 = object.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,38,8,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,881,"        String property2 = NodeUtil.getStringValue(object.getLastChild());
",2,0,0,2,4,0,8,2,0,12,66,8,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,883,"        if (""prototype"".equals(property2)) {
",0,0,0,2,5,0,4,0,0,5,36,9,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/MemoizedScopeCreator,48,85,"      Preconditions.checkState(parent == scope.getParent());
",2,1,0,2,4,0,8,0,0,11,54,7,0.00159,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,902,"        if (type.hasProperty(property) &&
",0,1,0,1,3,0,6,0,0,7,33,8,0.00157,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,909,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00157,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,899,"      ObjectType type = ObjectType.cast(
",2,0,0,0,1,0,4,2,0,8,34,6,0.00156,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,901,"      if (type != null) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.00156,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,204,"    StaticSlot<JSType> slot = getSlot(property);
",2,0,0,1,2,0,4,4,0,10,44,4,0.00149,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,205,"    if (slot == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00149,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,48,208,"    return slot.isTypeInferred();
",0,0,0,1,2,1,4,0,0,4,29,5,0.00149,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,846,"        JSType jsType = getJSType(object.getFirstChild());
",2,0,0,2,4,0,6,2,0,10,50,8,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,847,"        if (jsType.isInterface() &&
",0,1,0,1,3,0,4,0,0,5,27,8,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,48,694,"    return info.getParameterCount() > 0 ||
",0,5,0,1,2,1,4,0,0,9,38,4,0.00143,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,779,"    if (this.isInterface()) {
",0,0,0,2,5,0,2,0,0,2,25,5,0.00143,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1523,"        inferred = !(rhsValue != null &&
",4,3,0,0,1,0,0,0,0,9,32,7,0.00140,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,48,359,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00139,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,844,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00135,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,48,346,"    if (!leftType.isNoType() && !rightType.canAssignTo(leftType)) {
",0,1,0,3,7,0,10,0,0,13,63,4,0.00134,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,181,"        return n.getString();
",0,0,0,1,2,1,4,0,0,4,21,6,0.00131,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,179,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00130,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,869,"              ownerType = ObjectType.cast(ownerVar.getType());
",2,0,0,2,4,0,8,0,0,11,48,13,0.00130,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,855,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00127,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1558,"      FunctionType functionType = childType.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,60,6,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1560,"      boolean isExtern = false;
",2,0,0,0,0,0,0,0,0,3,25,7,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1561,"      JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();
",2,0,0,1,2,0,4,2,0,8,58,6,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1562,"      if( functionJSDocInfo != null  &&
",2,2,0,0,1,0,0,0,0,4,33,6,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1570,"      if (functionType.isConstructor() &&
",0,1,0,1,3,0,4,0,0,5,35,6,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1580,"      if (functionType.isOrdinaryFunction() &&
",0,1,0,1,3,0,4,0,0,5,40,6,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1588,"      visitParameterList(t, n, functionType);
",0,0,0,1,2,0,8,0,0,8,39,7,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1589,"      ensureTyped(t, n, functionType.getReturnType());
",0,0,0,2,4,0,10,0,0,10,48,7,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1590,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00126,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,3079,"      return lValue.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,30,8,0.00126,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,204,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00125,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,1026,"    return templateTypeName;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,747,"        FunctionType fnType = functionType.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,57,8,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,748,"        n.setJSType(fnType.getReturnType());
",0,0,0,2,4,0,8,0,0,8,36,9,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,749,"        updateTypeOfParameters(n, fnType);
",0,0,0,1,2,0,6,0,0,6,34,9,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,750,"        updateTypeOfThisOnClosure(n, fnType);
",0,0,0,1,2,0,6,0,0,6,37,9,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,751,"      } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {
",0,0,0,3,8,0,8,0,0,8,70,8,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,820,"    int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,821,"    int childCount = n.getChildCount();
",2,0,0,1,2,0,4,0,0,6,35,5,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,822,"    for (Node iParameter : fnType.getParameters()) {
",2,0,0,2,5,0,4,2,0,8,48,4,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,854,"    if (fnType.getTemplateTypeName() == null) {
",0,1,0,2,5,0,4,0,0,5,43,4,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,48,219,"      return nextConvention.getObjectLiteralCast(t, callNode);
",0,0,0,1,2,1,8,0,0,8,56,6,0.00125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,872,"              propName = name.substring(ownerName.length() + 1);
",2,1,0,2,4,0,8,0,0,12,50,13,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,783,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,867,"            ownerVar = scope.getVar(ownerName);
",2,0,0,1,2,0,6,0,0,9,35,11,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,868,"            if (ownerVar != null) {
",2,1,0,1,3,0,0,0,0,3,23,11,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,871,"            if (name != null) {
",2,1,0,1,3,0,0,0,0,3,19,11,0.00122,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,3064,"      return parent.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,30,9,0.00118,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,48,566,"    return getFlag(MASK_JAVADISPATCH);
",0,0,0,1,2,1,4,0,0,4,34,5,0.00117,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1405,"          validator.expectCanAssignTo(
",0,0,0,0,1,0,4,0,0,4,28,11,0.00116,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1557,"    if (childType.isFunctionType()) {
",0,0,0,2,5,0,4,0,0,4,33,5,0.00116,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1597,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00116,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,552,"        visitCall(t, n);
",0,0,0,1,2,0,6,0,0,6,16,6,0.00115,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,553,"        typeable = !NodeUtil.isExpressionNode(parent);
",2,0,0,1,2,0,6,0,0,10,46,5,0.00115,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,554,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00115,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1546,"    Node child = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00115,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1547,"    JSType childType = getJSType(child).restrictByNotNullOrUndefined();
",2,0,0,2,4,0,6,2,0,10,67,4,0.00115,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,1549,"    if (!childType.canBeCalled()) {
",0,0,0,2,5,0,4,0,0,5,31,4,0.00115,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,767,"      return scope;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00113,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,2852,"        fnInfo = parent.getParent().getJSDocInfo();
",2,0,0,2,4,0,6,0,0,9,43,9,0.00113,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,48,305,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00112,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,48,194,"    return kind == Kind.ORDINARY;
",6,1,0,0,0,1,0,0,0,7,29,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,48,161,"      return nextConvention.getDelegateRelationship(callNode);
",0,0,0,1,2,1,6,0,0,6,56,6,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,48,183,"      nextConvention.checkForCallingConventionDefiningCalls(
",0,0,0,0,1,0,4,0,0,4,54,6,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,48,185,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,282,"        scope = traverseCall(n, scope);
",2,0,0,1,2,0,6,0,0,9,31,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,283,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,741,"    scope = traverseChildren(n, scope);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,743,"    Node left = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,30,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,744,"    JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
",2,0,0,2,4,0,6,2,0,10,69,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,745,"    if (functionType != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,746,"      if (functionType.isFunctionType()) {
",0,0,0,2,5,0,4,0,0,4,36,7,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,756,"    scope = tightenTypesAfterAssertions(scope, n);
",2,0,0,1,2,0,6,0,0,9,46,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,757,"    return scope;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,762,"    Node left = callNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,37,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,763,"    Node firstParam = left.getNext();
",2,0,0,1,2,0,4,2,0,8,33,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,764,"    AssertionFunctionSpec assertionFunctionSpec =
",2,0,0,0,0,0,0,2,0,4,45,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,48,766,"    if (assertionFunctionSpec == null || firstParam == null) {
",4,3,0,1,3,0,0,0,0,7,58,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,493,"          checkForClassDefiningCalls(t, n, parent);
",0,0,0,1,2,0,8,0,0,8,41,7,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,494,"          checkForCallingConventionDefiningCalls(n, delegateCallingConventions);
",0,0,0,1,2,0,6,0,0,6,70,7,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,495,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1287,"      codingConvention.checkForCallingConventionDefiningCalls(n,
",0,0,0,0,1,0,6,0,0,6,58,6,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1289,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1298,"      SubclassRelationship relationship =
",2,0,0,0,0,0,0,2,0,4,35,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1300,"      if (relationship != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1328,"      String singletonGetterClassName =
",2,0,0,0,0,0,0,2,0,4,33,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1330,"      if (singletonGetterClassName != null) {
",2,1,0,1,3,0,0,0,0,3,39,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1345,"      DelegateRelationship delegateRelationship =
",2,0,0,0,0,0,0,2,0,4,43,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1347,"      if (delegateRelationship != null) {
",2,1,0,1,3,0,0,0,0,3,35,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1351,"      ObjectLiteralCast objectLiteralCast =
",2,0,0,0,0,0,0,2,0,4,37,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1353,"      if (objectLiteralCast != null) {
",2,1,0,1,3,0,0,0,0,3,32,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,48,1363,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,48,301,"    Preconditions.checkArgument(callNode.isCall());
",0,0,0,2,4,0,8,0,0,8,47,5,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,48,302,"    Node callName = callNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,41,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,48,303,"    if (!""goog.reflect.object"".equals(callName.getQualifiedName()) ||
",0,1,0,2,5,0,6,0,0,9,65,4,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,48,336,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,48,356,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,3041,"        return getBestJSDocInfo(parent);
",0,0,0,1,2,1,4,0,0,4,32,9,0.00111,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,48,3062,"      return parent;
",2,0,0,0,0,1,0,0,0,2,14,7,0.00110,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,48,879,"      if (object.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,25,7,0.00107,0,-1
defect4j,closure,com/google/javascript/jscomp/CodingConventions,48,149,"      return nextConvention.getSingletonGetterClassName(callNode);
",0,0,0,1,2,1,6,0,0,6,60,6,0.00106,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,184,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,245,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,964,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,969,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,970,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1079,"          sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1080,"          sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1087,"          int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1088,"          PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,10,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1089,"          sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1090,"          sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1091,"          sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1093,"          switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,10,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1129,"              value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1132,"          sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1133,"          sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,11,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,415,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,397,"          case VAR:             return ""VAR"";
",2,0,0,0,0,1,0,0,0,3,35,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,403,"          case BLOCK:           return ""BLOCK"";
",2,0,0,0,0,1,0,0,0,3,37,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,49,305,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,962,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,963,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,967,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,968,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,973,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,974,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1019,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1077,"        int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1078,"        if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1085,"        int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1086,"        for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1138,"        if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1042,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1043,"        sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,447,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,408,"          case EXPR_RESULT:     return ""EXPR_RESULT"";
",2,0,0,0,0,1,0,0,0,3,43,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,49,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,232,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,246,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1044,"      } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1054,"      } else if (this instanceof ScriptOrFnNode) {
",0,0,0,1,4,0,0,2,0,2,44,10,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,410,"          case SCRIPT:          return ""SCRIPT"";
",2,0,0,0,0,1,0,0,0,3,38,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1026,"    if (Token.shouldPrintTrees()) {
",0,0,0,2,5,0,4,0,0,4,31,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1027,"        StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1028,"        toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1029,"        return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1040,"      sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1041,"      if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1076,"      if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1084,"      if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1137,"      if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1147,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,60,"      return printTrees;
",2,0,0,0,0,1,0,0,0,2,18,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1073,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,12,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1074,"        sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,12,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,318,"          case NUMBER:          return ""NUMBER"";
",2,0,0,0,0,1,0,0,0,3,38,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,480,"      switch (n.getParent().getType()) {
",0,0,0,3,7,0,6,0,0,6,34,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,529,"      Preconditions.checkState(!name.equals(ARGUMENTS));
",0,0,0,2,4,0,10,0,0,11,50,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,530,"      if (!declarations.containsKey(name)) {
",0,0,0,2,5,0,6,0,0,7,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,531,"        declarations.put(name, getUniqueName(name));
",0,0,0,2,4,0,10,0,0,10,44,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,533,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,536,"      if (name.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,21,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,540,"      if (name.indexOf(ContextualRenamer.UNIQUE_ID_SEPARATOR) != -1) {
",4,1,0,2,5,0,4,0,0,10,64,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,547,"      return name + ContextualRenamer.UNIQUE_ID_SEPARATOR
",6,1,0,0,0,1,0,0,0,7,51,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,563,"      return removeConstness;
",2,0,0,0,0,1,0,0,0,2,23,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,277,"            Node newValue = entry.getValue().cloneTree();
",2,0,0,2,4,0,6,2,0,10,45,12,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,278,"            Node newNode = NodeUtil.newVarNode(name, newValue)
",2,0,0,1,2,0,8,2,0,12,50,12,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,280,"            newVars.add(0, newNode);
",0,0,0,1,2,0,6,0,0,6,24,13,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,282,"            newArgMap.remove(name);
",0,0,0,1,2,0,6,0,0,6,23,13,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,246,"      Map<String, Node> newArgMap = Maps.newHashMap(argMap);
",2,0,0,1,2,0,6,6,0,14,54,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,250,"      List<Node> newVars = Lists.newLinkedList();
",2,0,0,1,2,0,4,4,0,10,43,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,253,"      for (Entry<String, Node> entry : argMap.entrySet()) {
",2,0,0,2,5,0,4,6,0,12,53,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,254,"        String name = entry.getKey();
",2,0,0,1,2,0,4,2,0,8,29,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,255,"        if (namesToAlias.contains(name)) {
",0,0,0,2,5,0,6,0,0,6,34,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,256,"          if (name.equals(THIS_MARKER)) {
",0,0,0,2,5,0,6,0,0,6,31,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,285,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,288,"      Node result = FunctionArgumentInjector.inject(
",2,0,0,0,1,0,4,2,0,8,46,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,290,"      Preconditions.checkState(result == fnTemplateRoot);
",4,1,0,1,2,0,4,0,0,9,51,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,294,"      for (Node n : newVars) {
",4,0,0,1,3,0,0,2,0,6,24,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,295,"        fnTemplateRoot.addChildToFront(n);
",0,0,0,1,2,0,6,0,0,6,34,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,296,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,298,"      return result;
",2,0,0,0,0,1,0,0,0,2,14,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1136,"      if (canBeSideEffected(c, knownConstants)) {
",0,0,0,2,5,0,6,0,0,6,43,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,288,"      } else if (NodeUtil.canBeSideEffected(cArg)
",0,0,0,1,4,0,6,0,0,6,43,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,291,"      } else if (references > 1) {
",2,1,0,1,4,0,0,0,0,3,28,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,141,"      next = c.getNext(); // We may rewrite ""c""
",2,0,0,1,2,0,4,0,0,7,41,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,142,"      rewriteFunctionDeclarations(c);
",0,0,0,1,2,0,4,0,0,4,31,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2847,"        visitPostOrder(c, vistor, traverseChildrenPred);
",0,0,0,1,2,0,8,0,0,8,48,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,488,"      gatherLocalNames(c, names);
",0,0,0,1,2,0,6,0,0,6,27,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,47,"      AbstractCompiler compiler, Supplier<String> safeNameIdSupplier) {
",4,0,0,0,2,0,0,6,0,10,65,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,48,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,49,"    this.safeNameIdSupplier = safeNameIdSupplier;
",4,0,0,0,0,0,0,0,0,5,45,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,50,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,65,"    Node newFnNode = fnNode.cloneTree();
",2,0,0,1,2,0,4,2,0,8,36,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,69,"    makeLocalNamesUnique(newFnNode, isCallInLoop);
",0,0,0,1,2,0,6,0,0,6,46,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,74,"    rewriteFunctionDeclarations(newFnNode.getLastChild());
",0,0,0,2,4,0,6,0,0,6,54,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,78,"    Set<String> namesToAlias =
",2,0,0,0,0,0,0,4,0,6,26,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,80,"    LinkedHashMap<String, Node> args =
",2,0,0,0,0,0,0,6,0,8,34,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,83,"    boolean hasArgs = !args.isEmpty();
",2,0,0,1,2,0,4,0,0,7,34,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,84,"    if (hasArgs) {
",2,0,0,1,3,0,0,0,0,2,14,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,85,"      FunctionArgumentInjector.maybeAddTempsForCallArguments(
",0,0,0,0,1,0,4,0,0,4,55,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,89,"    Node newBlock = NodeUtil.getFunctionBody(newFnNode);
",2,0,0,1,2,0,6,2,0,10,52,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,91,"    newBlock.detachFromParent();
",0,0,0,1,2,0,4,0,0,4,28,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,93,"    if (hasArgs) {
",2,0,0,1,3,0,0,0,0,2,14,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,94,"      Node inlineResult = aliasAndInlineArguments(newBlock,
",2,0,0,0,1,0,4,2,0,8,53,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,96,"      Preconditions.checkState(newBlock == inlineResult);
",4,1,0,1,2,0,4,0,0,9,51,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,104,"    if (isCallInLoop) {
",2,0,0,1,3,0,0,0,0,2,19,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,108,"    String labelName = getLabelNameForFunction(fnName);
",2,0,0,1,2,0,4,2,0,8,51,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,109,"    Node injectableBlock = replaceReturns(
",2,0,0,0,1,0,2,2,0,6,38,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,111,"    Preconditions.checkState(injectableBlock != null);
",2,1,0,1,2,0,4,0,0,7,50,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,113,"    return injectableBlock;
",2,0,0,0,0,1,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,121,"    if (n.getType() == Token.FUNCTION) {
",4,1,0,2,5,0,4,0,0,9,36,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,140,"    for (Node c = n.getFirstChild(), next; c != null; c = next) {
",10,1,0,2,5,0,4,2,0,18,61,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,144,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,179,"    Supplier<String> idSupplier = compiler.getUniqueNameIdSupplier();
",2,0,0,1,2,0,4,4,0,10,65,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,181,"    NodeTraversal.traverse(
",0,0,0,0,1,0,4,0,0,4,23,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,188,"    new RenameLabels(compiler, new LabelNameSupplier(idSupplier), false)
",4,0,0,2,4,0,0,4,0,9,68,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,190,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,209,"    String name = (fnName == null || fnName.isEmpty()) ? ""anon"" : fnName;
",6,2,0,2,4,0,4,2,0,15,69,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,210,"    return ""JSCompiler_inline_label_"" + name + ""_"" + safeNameIdSupplier.get();
",2,1,0,1,2,1,4,0,0,9,74,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,234,"    if (namesToAlias == null || namesToAlias.isEmpty()) {
",2,2,0,2,5,0,4,0,0,8,53,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,326,"    Preconditions.checkNotNull(block);
",0,0,0,1,2,0,6,0,0,6,34,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,327,"    Preconditions.checkNotNull(labelName);
",0,0,0,1,2,0,6,0,0,6,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,329,"    Node root = block;
",4,0,0,0,0,0,0,2,0,6,18,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,331,"    boolean hasReturnAtExit = false;
",2,0,0,0,0,0,0,0,0,3,32,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,332,"    int returnCount = NodeUtil.getNodeTypeReferenceCount(
",2,0,0,0,1,0,4,0,0,6,53,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,334,"    if (returnCount > 0) {
",2,1,0,1,3,0,0,0,0,3,22,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,367,"    if (resultMustBeSet && !hasReturnAtExit && resultName != null) {
",6,2,0,1,3,0,0,0,0,9,64,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,371,"    return root;
",2,0,0,0,0,1,0,0,0,2,12,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2845,"    if (traverseChildrenPred.apply(node)) {
",0,0,0,2,5,0,6,0,0,6,39,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2846,"      for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,65,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2851,"    vistor.visit(node);
",0,0,0,1,2,0,6,0,0,6,19,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2852,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,195,"    LabelNameSupplier(Supplier<String> idSupplier) {
",4,0,0,1,3,0,0,4,0,8,48,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,196,"      this.idSupplier = idSupplier;
",4,0,0,0,0,0,0,0,0,5,29,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,197,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,369,"    ReferencedAfterSideEffect(Set<String> parameters, Set<String> locals) {
",6,0,0,1,3,0,0,8,0,14,71,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,365,"    private boolean sideEffectSeen = false;
",2,0,0,0,0,1,0,0,0,4,39,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,366,"    private Set<String> parametersReferenced = Sets.newHashSet();
",2,0,0,1,2,1,4,4,0,11,61,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,367,"    private int loopsEntered = 0;
",2,0,0,0,0,1,0,0,0,3,29,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,370,"      this.parameters = parameters;
",4,0,0,0,0,0,0,0,0,5,29,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,371,"      this.locals = locals;
",4,0,0,0,0,0,0,0,0,5,21,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,372,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,375,"      return parametersReferenced;
",2,0,0,0,0,1,0,0,0,2,28,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,381,"      if (NodeUtil.isLoopStructure(node)) {
",0,0,0,2,5,0,6,0,0,6,37,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,387,"      return !(sideEffectSeen
",2,0,0,0,1,1,0,0,0,3,23,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,392,"      return loopsEntered != 0;
",2,1,0,0,0,1,0,0,0,3,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,398,"      if (NodeUtil.isLoopStructure(n)) {
",0,0,0,2,5,0,6,0,0,6,34,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,408,"      if (!sideEffectSeen) {
",2,0,0,1,3,0,0,0,0,3,22,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,410,"        if (hasNonLocalSideEffect(n)) {
",0,0,0,2,5,0,4,0,0,4,31,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,417,"      if (inLoop() || sideEffectSeen) {
",2,1,0,2,5,0,2,0,0,5,33,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,428,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,434,"      boolean sideEffect = false;
",2,0,0,0,0,0,0,0,0,3,27,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,435,"      int type = n.getType();
",2,0,0,1,2,0,4,0,0,6,23,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,438,"      if (NodeUtil.isAssignmentOp(n)
",0,0,0,1,3,0,6,0,0,6,30,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,448,"      } else if (type == Token.NEW) {
",6,1,0,1,4,0,0,0,0,7,31,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,450,"      } else if (type == Token.DELPROP) {
",6,1,0,1,4,0,0,0,0,7,35,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,454,"      return sideEffect;
",2,0,0,0,0,1,0,0,0,2,18,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,361,"  private static class ReferencedAfterSideEffect
",2,0,0,0,0,2,0,0,0,4,46,2,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,248,"    if (argMap.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,23,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,253,"    Preconditions.checkArgument(fnNode.getType() == Token.FUNCTION);
",4,1,0,2,4,0,8,0,0,13,64,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,254,"    Node block = fnNode.getLastChild();
",2,0,0,1,2,0,4,2,0,8,35,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,256,"    Set<String> parameters = argMap.keySet();
",2,0,0,1,2,0,4,4,0,10,41,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,260,"    Set<String> namesAfterSideEffects = findParametersReferencedAfterSideEffect(
",2,0,0,0,1,0,2,4,0,8,76,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,264,"    for (Map.Entry<String, Node> entry : argMap.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,57,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,265,"      String argName = entry.getKey();
",2,0,0,1,2,0,4,2,0,8,32,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,266,"      if (namesNeedingTemps.contains(argName)) {
",0,0,0,2,5,0,6,0,0,6,42,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,269,"      Node cArg = entry.getValue();
",2,0,0,1,2,0,4,2,0,8,29,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,270,"      boolean safe = true;
",2,0,0,0,0,0,0,0,0,3,20,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,271,"      int references = NodeUtil.getNameReferenceCount(block, argName);
",2,0,0,1,2,0,8,0,0,10,64,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,273,"      if (NodeUtil.mayEffectMutableState(cArg) && references > 0) {
",2,2,0,2,5,0,6,0,0,10,61,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,284,"      } else if (NodeUtil.mayHaveSideEffects(cArg)) {
",0,0,0,2,6,0,6,0,0,6,47,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,310,"      if (!safe) {
",2,0,0,1,3,0,0,0,0,3,12,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,313,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,314,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,329,"    Set<String> locals = Sets.newHashSet(parameters);
",2,0,0,1,2,0,6,4,0,12,49,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,330,"    gatherLocalNames(root, locals);
",0,0,0,1,2,0,6,0,0,6,31,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,332,"    ReferencedAfterSideEffect collector = new ReferencedAfterSideEffect(
",2,0,0,0,1,0,0,4,0,6,68,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,334,"    NodeUtil.visitPostOrder(
",0,0,0,0,1,0,4,0,0,4,24,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,338,"    return collector.getResults();
",0,0,0,1,2,1,4,0,0,4,30,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,473,"    if (n.getType() == Token.FUNCTION) {
",4,1,0,2,5,0,4,0,0,9,36,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,479,"    } else if (n.getType() == Token.NAME) {
",4,1,0,2,6,0,4,0,0,9,39,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,487,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,490,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,76,"    } else if (replaceThis && node.getType() == Token.THIS) {
",6,2,0,2,6,0,4,0,0,12,57,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1621,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1627,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,244,"      return inlineFunction(callNode, fnNode, fnName);
",0,0,0,1,2,1,8,0,0,8,48,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,400,"    Node parent = callNode.getParent();
",2,0,0,1,2,0,4,2,0,8,35,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,401,"    Node grandParent = parent.getParent();
",2,0,0,1,2,0,4,2,0,8,38,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,405,"    CallSiteType callSiteType = classifyCallSite(callNode);
",2,0,0,1,2,0,4,2,0,8,55,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,406,"    Preconditions.checkArgument(callSiteType != CallSiteType.UNSUPPORTED);
",6,1,0,1,2,0,4,0,0,11,70,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,408,"    boolean isCallInLoop = NodeUtil.isWithinLoop(callNode);
",2,0,0,1,2,0,6,0,0,8,55,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,413,"    String resultName = null;
",2,0,0,0,0,0,0,2,0,4,25,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,414,"    boolean needsDefaultReturnResult = true;
",2,0,0,0,0,0,0,0,0,3,40,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,415,"    switch (callSiteType) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,445,"    FunctionToBlockMutator mutator = new FunctionToBlockMutator(
",2,0,0,0,1,0,0,4,0,6,60,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,448,"    Node newBlock = mutator.mutate(
",2,0,0,0,1,0,4,2,0,8,31,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,455,"    Node greatGrandParent = grandParent.getParent();
",2,0,0,1,2,0,4,2,0,8,48,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,456,"    switch (callSiteType) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,506,"    return newBlock;
",2,0,0,0,0,1,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,415,"    switch (callSiteType) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2766,"    return getCount(
",0,0,0,0,1,1,2,0,0,2,16,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,64,"      Node replacementTemplate = replacements.get(node.getString());
",2,0,0,2,4,0,8,2,0,12,62,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,65,"      if (replacementTemplate != null) {
",2,1,0,1,3,0,0,0,0,3,34,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2743,"    return getCount(node, new MatchNodeType(type), traverseChildrenPred);
",2,0,0,2,4,1,6,2,0,10,69,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,558,"      return new InlineRenamer(uniqueIdSupplier, idPrefix, removeConstness);
",6,0,0,1,2,1,0,2,0,8,70,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,518,"        boolean removeConstness) {
",2,0,0,0,2,0,0,0,0,2,26,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,510,"    private final Map<String, String> declarations = Maps.newHashMap();
",2,0,0,1,2,2,4,6,0,14,67,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,519,"      this.uniqueIdSupplier = uniqueIdSupplier;
",4,0,0,0,0,0,0,0,0,5,41,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,522,"      Preconditions.checkArgument(!idPrefix.isEmpty());
",0,0,0,2,4,0,8,0,0,9,49,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,523,"      this.idPrefix = idPrefix;
",4,0,0,0,0,0,0,0,0,5,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,524,"      this.removeConstness = removeConstness;
",4,0,0,0,0,0,0,0,0,5,39,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,525,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,49,553,"      return declarations.get(oldName);
",0,0,0,1,2,1,6,0,0,6,33,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1100,"    Set<String> emptySet = Collections.emptySet();
",2,0,0,1,2,0,4,4,0,10,46,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1101,"    return canBeSideEffected(n, emptySet);
",0,0,0,1,2,1,6,0,0,6,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2807,"        total += getCount(c, pred, traverseChildrenPred);
",2,0,0,1,2,0,8,0,0,11,49,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1653,"    for (Node parent : n.getAncestors()) {
",2,0,0,2,5,0,4,2,0,8,38,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1654,"      if (NodeUtil.isLoopStructure(parent)) {
",0,0,0,2,5,0,6,0,0,6,39,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1658,"      if (NodeUtil.isFunction(parent)) {
",0,0,0,2,5,0,6,0,0,6,34,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1661,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,365,"          case ASSIGN:          return ""ASSIGN"";
",2,0,0,0,0,1,0,0,0,3,38,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1662,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2799,"    int total = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2801,"    if (pred.apply(n)) {
",0,0,0,2,5,0,6,0,0,6,20,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2805,"    if (traverseChildrenPred.apply(n)) {
",0,0,0,2,5,0,6,0,0,6,36,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2806,"      for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,2811,"    return total;
",2,0,0,0,0,1,0,0,0,2,13,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1135,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1141,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,130,"      if (cArg != null) {
",2,1,0,1,3,0,0,0,0,3,19,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,137,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,759,"    return mayEffectMutableState(n, null);
",0,0,0,1,2,1,4,0,0,5,38,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1045,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,10,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1049,"        if (first == null || first.getType() != Token.NAME) {
",6,3,0,2,5,0,4,0,0,13,53,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,49,1052,"          sb.append(first.getString());
",0,0,0,2,4,0,8,0,0,8,29,12,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,362,"          case LP:              return ""LP"";
",2,0,0,0,0,1,0,0,0,3,34,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,49,384,"          case FUNCTION:        return ""FUNCTION"";
",2,0,0,0,0,1,0,0,0,3,40,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,763,"    return checkForStateChangeHelper(n, true, compiler);
",0,0,0,1,2,1,6,0,0,7,52,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionInjector,49,745,"        referencesUsingBlockInlining++;
",2,0,0,0,0,0,0,0,0,3,31,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,131,"        argMap.put(fnArg.getString(), cArg);
",0,0,0,2,4,0,10,0,0,10,36,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionArgumentInjector,49,132,"        cArg = cArg.getNext();
",2,0,0,1,2,0,4,0,0,7,22,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionToBlockMutator,49,445,"      retVal = node.getFirstChild().cloneTree();
",2,0,0,2,4,0,6,0,0,9,42,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,49,1111,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,435,"        Node emptyStringNode = Node.newString("""");
",2,0,0,1,2,0,4,2,0,9,42,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,436,"        n.getParent().replaceChild(n, emptyStringNode);
",0,0,0,2,4,0,10,0,0,10,47,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,437,"        reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,438,"        return emptyStringNode;
",2,0,0,0,0,1,0,0,0,2,23,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,391,"    String joinString = (right == null) ? "","" : NodeUtil.getStringValue(right);
",4,1,0,2,4,0,6,2,0,14,75,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,392,"    List<Node> arrayFoldedChildren = Lists.newLinkedList();
",2,0,0,1,2,0,4,4,0,10,55,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,393,"    StringBuilder sb = null;
",2,0,0,0,0,0,0,2,0,4,24,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,394,"    int foldedSize = 0;
",2,0,0,0,0,0,0,0,0,2,19,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,395,"    Node prev = null;
",2,0,0,0,0,0,0,2,0,4,17,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,396,"    Node elem = arrayNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,38,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,398,"    while (elem != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,422,"    if (sb != null) {
",2,1,0,1,3,0,0,0,0,3,17,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,430,"    foldedSize += arrayFoldedChildren.size() - 1;
",2,1,0,1,2,0,4,0,0,8,45,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,432,"    int originalSize = InlineCostEstimator.getCost(n);
",2,0,0,1,2,0,6,0,0,8,50,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,433,"    switch (arrayFoldedChildren.size()) {
",0,0,0,2,5,0,4,0,0,4,37,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1073,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,12,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1074,"        sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,12,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,248,"        validateArrayLit(n);
",0,0,0,1,2,0,4,0,0,4,20,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,249,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,660,"    validateNodeType(Token.ARRAYLIT, n);
",4,0,0,1,2,0,4,0,0,8,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,661,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,665,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,208,"        add(""["");
",0,0,0,1,3,0,2,0,0,3,9,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,209,"        addArrayList(first);
",0,0,0,1,2,0,4,0,0,4,20,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,210,"        add(""]"");
",0,0,0,1,3,0,2,0,0,3,9,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,211,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,920,"    boolean lastWasEmpty = false;
",2,0,0,0,0,0,0,0,0,3,29,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,921,"    for (Node n = firstInList; n != null; n = n.getNext()) {
",8,1,0,2,5,0,4,2,0,16,56,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,929,"    if (lastWasEmpty) {
",2,0,0,1,3,0,0,0,0,2,19,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,932,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,408,"          Preconditions.checkNotNull(prev);
",0,0,0,1,2,0,6,0,0,6,33,11,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,410,"          foldedSize += sb.length() + 2;
",2,1,0,1,2,0,4,0,0,8,30,10,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,411,"          arrayFoldedChildren.add(
",0,0,0,0,1,0,4,0,0,4,24,11,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,413,"          sb = null;
",2,0,0,0,0,0,0,0,0,3,10,10,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,467,"        arrayNode.detachChildren();
",0,0,0,1,2,0,4,0,0,4,27,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,468,"        for (Node node : arrayFoldedChildren) {
",4,0,0,1,3,0,0,2,0,6,39,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,469,"          arrayNode.addChildToBack(node);
",0,0,0,1,2,0,6,0,0,6,31,8,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,470,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,471,"        reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,475,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,50,413,"      if (literalNode.isDestructuring()) {
",0,0,0,2,5,0,4,0,0,4,36,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,50,417,"      Node node = newNode(Token.ARRAYLIT);
",6,0,0,1,2,0,2,2,0,10,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,50,418,"      for (AstNode child : literalNode.getElements()) {
",2,0,0,2,5,0,4,2,0,8,49,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,50,422,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,50,146,"        return processArrayLiteral((ArrayLiteral) node);
",2,0,0,2,4,1,2,2,0,6,48,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,458,"        if (arrayFoldedChildren.size() == arrayNode.getChildCount()) {
",0,1,0,3,7,0,8,0,0,9,62,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,459,"          return n;
",2,0,0,0,0,1,0,0,0,2,9,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,461,"        int kJoinOverhead = ""[].join()"".length();
",2,0,0,3,6,0,2,0,0,5,41,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,462,"        foldedSize += kJoinOverhead;
",4,0,0,0,0,0,0,0,0,5,28,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,463,"        foldedSize += (right != null) ? InlineCostEstimator.getCost(right) : 0;
",4,1,0,2,4,0,6,0,0,12,71,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,464,"        if (foldedSize > originalSize) {
",4,1,0,1,3,0,0,0,0,5,32,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,50,88,"    maybeCutLine();
",0,0,0,1,2,0,2,0,0,2,15,5,0.40000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,50,89,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.40000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,50,92,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.40000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,50,474,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.36364,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,50,354,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.36364,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1837,"        if (!n.isEquivalentTo(n2, compareJsType, true)) {
",0,0,0,2,5,0,8,0,0,10,49,8,0.36364,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1838,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.36364,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1836,"           n = n.next, n2 = n2.next) {
",12,0,0,0,2,0,0,0,0,14,27,6,0.36364,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,50,163,"        return getReferenceName().equals(thatObj.getReferenceName());
",0,0,0,3,6,1,8,0,0,8,61,10,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,50,39,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,50,46,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,68,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,69,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,70,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,71,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,72,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,73,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,63,"    this(consumer, null);
",2,0,0,1,2,0,0,0,0,2,21,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,39,"    return getCost(root, Integer.MAX_VALUE);
",4,0,0,1,2,1,4,0,0,8,40,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,46,"    CompiledSizeEstimator estimator = new CompiledSizeEstimator(costThreshhold);
",4,0,0,1,2,0,0,4,0,8,76,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,47,"    estimator.add(root);
",0,0,0,1,2,0,6,0,0,6,20,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,48,"    return estimator.getCost();
",0,0,0,1,2,1,4,0,0,4,27,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,50,44,"    this(new ClosureCodingConvention());
",0,0,0,2,4,0,0,2,0,2,36,6,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,50,45,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,50,49,"    super(convention);
",2,0,0,1,2,0,0,0,0,2,18,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,50,50,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,50,39,"  private static final Pattern ENUM_KEY_PATTERN =
",2,0,0,0,0,3,0,2,0,7,47,2,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,61,"    CompiledSizeEstimator(int costThreshhold) {
",4,0,0,1,3,0,0,0,0,4,43,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,57,"    private int cost = 0;
",2,0,0,0,0,1,0,0,0,3,21,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,58,"    private char last = '\0';
",2,0,0,0,0,1,0,0,0,4,25,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,59,"    private boolean continueProcessing = true;
",2,0,0,0,0,1,0,0,0,4,42,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,62,"      this.maxCost = costThreshhold;
",4,0,0,0,0,0,0,0,0,5,30,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,63,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,66,"      CodeGenerator cg = new CodeGenerator(this);
",2,0,0,1,2,0,0,4,0,6,43,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,67,"      cg.add(root);
",0,0,0,1,2,0,6,0,0,6,13,6,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,68,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,71,"      return cost;
",2,0,0,0,0,1,0,0,0,2,12,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,76,"      return continueProcessing;
",2,0,0,0,0,1,0,0,0,2,26,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,81,"      return last;
",2,0,0,0,0,1,0,0,0,2,12,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,86,"      last = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,12,36,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,87,"      cost += str.length();
",2,0,0,1,2,0,4,0,0,7,21,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,88,"      if (maxCost <= cost) {
",4,1,0,1,3,0,0,0,0,5,22,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,91,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,95,"      add(ESTIMATED_IDENTIFIER);
",0,0,0,1,2,0,4,0,0,4,26,6,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,50,96,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,41,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,39,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,42,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,43,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,31,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,53,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,55,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,56,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,62,"    if (n.getType() == Token.SCRIPT) {
",4,1,0,2,5,0,4,0,0,9,34,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,63,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,65,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,70,"    if (n.getType() == Token.SCRIPT) {
",4,1,0,2,5,0,4,0,0,9,34,4,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,71,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,72,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,73,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.36364,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,50,81,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.36364,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,810,"        Node prev = getChildBefore(child);
",2,0,0,1,2,0,4,2,0,8,34,6,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,811,"        prev.next = newChild;
",6,0,0,0,0,0,0,0,0,7,21,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,50,297,"    init(Lists.<JSSourceFile>newArrayList(externs),
",0,0,0,1,3,0,8,2,0,10,47,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,50,299,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,403,"          sb.append(joinString);
",0,0,0,1,2,0,6,0,0,6,22,11,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,407,"        if (sb != null) {
",2,1,0,1,3,0,0,0,0,3,17,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,415,"        foldedSize += InlineCostEstimator.getCost(elem);
",2,0,0,1,2,0,6,0,0,9,48,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,416,"        arrayFoldedChildren.add(elem);
",0,0,0,1,2,0,6,0,0,6,30,9,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1785,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.30769,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,50,183,"              return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.30769,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1834,"      for (n = first, n2 = node.first;
",10,0,0,0,1,0,0,0,0,12,32,6,0.28571,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1835,"           n != null;
",2,1,0,0,0,0,0,0,0,3,10,6,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,50,183,"    this((PrintStream) null);
",0,0,0,2,4,0,0,2,0,2,25,6,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,50,184,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,50,231,"        setErrorManager(
",0,0,0,0,1,0,2,0,0,2,16,9,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,50,37,"  public LoggerErrorManager(MessageFormatter formatter, Logger logger) {
",6,0,0,1,3,1,0,4,0,11,70,2,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,50,38,"    this.formatter = formatter;
",4,0,0,0,0,0,0,0,0,5,27,4,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,50,39,"    this.logger = logger;
",4,0,0,0,0,0,0,0,0,5,21,4,0.28571,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,50,40,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.28571,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2080,"      Node n2clone = n2.cloneTree();
",2,0,0,1,2,0,4,2,0,8,30,6,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2081,"      n2clone.parent = result;
",6,0,0,0,0,0,0,0,0,7,24,6,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2082,"      if (result.last != null) {
",4,1,0,1,3,0,0,0,0,5,26,6,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2083,"        result.last.next = n2clone;
",8,0,0,0,0,0,0,0,0,9,27,8,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2085,"      if (result.first == null) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2086,"        result.first = n2clone;
",6,0,0,0,0,0,0,0,0,7,23,8,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2088,"      result.last = n2clone;
",6,0,0,0,0,0,0,0,0,7,22,6,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,1764,"    return isEquivalentTo(node, false, true);
",0,0,0,1,2,1,4,0,0,6,41,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2031,"    for (Node child = first; child != null;) {
",6,1,0,1,3,0,0,2,0,9,42,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2032,"      Node nextChild = child.getNext();
",2,0,0,1,2,0,4,2,0,8,33,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2033,"      child.parent = null;
",4,0,0,0,0,0,0,0,0,5,20,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2034,"      child.next = null;
",4,0,0,0,0,0,0,0,0,5,18,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2035,"      child = nextChild;
",4,0,0,0,0,0,0,0,0,5,18,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2036,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2037,"    first = null;
",2,0,0,0,0,0,0,0,0,3,13,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2038,"    last = null;
",2,0,0,0,0,0,0,0,0,3,12,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2039,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,923,"        cc.listSeparator();
",0,0,0,1,2,0,4,0,0,4,19,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,50,239,"    return (NodeUtil.isNullOrUndefined(n) || n.getType() == Token.EMPTY)
",4,2,0,3,6,1,10,0,0,16,68,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,50,1368,"    return isNull(n) || isUndefined(n);
",0,1,0,2,4,1,8,0,0,9,35,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,399,"      if (NodeUtil.isImmutableValue(elem) || elem.getType() == Token.EMPTY) {
",4,2,0,3,7,0,10,0,0,16,71,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,400,"        if (sb == null) {
",2,1,0,1,3,0,0,0,0,3,17,8,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,401,"          sb = new StringBuilder();
",2,0,0,1,2,0,0,2,0,5,25,10,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,405,"        sb.append(NodeUtil.getArrayElementStringValue(elem));
",0,0,0,2,4,0,10,0,0,10,53,9,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,418,"      prev = elem;
",4,0,0,0,0,0,0,0,0,5,12,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,419,"      elem = elem.getNext();
",2,0,0,1,2,0,4,0,0,7,22,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,423,"      Preconditions.checkNotNull(prev);
",0,0,0,1,2,0,6,0,0,6,33,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,425,"      foldedSize += sb.length() + 2;
",2,1,0,1,2,0,4,0,0,8,30,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,426,"      arrayFoldedChildren.add(
",0,0,0,0,1,0,4,0,0,4,24,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,440,"        Node foldedStringNode = arrayFoldedChildren.remove(0);
",2,0,0,1,2,0,4,2,0,8,54,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,441,"        if (foldedSize > originalSize) {
",4,1,0,1,3,0,0,0,0,5,32,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,444,"        arrayNode.detachChildren();
",0,0,0,1,2,0,4,0,0,4,27,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,445,"        if (foldedStringNode.getType() != Token.STRING) {
",4,1,0,2,5,0,4,0,0,9,49,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,453,"        n.getParent().replaceChild(n, foldedStringNode);
",0,0,0,2,4,0,10,0,0,10,48,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,454,"        reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,455,"        return foldedStringNode;
",2,0,0,0,0,1,0,0,0,2,24,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,50,181,"        return n.getString();
",0,0,0,1,2,1,4,0,0,4,21,6,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,376,"      if (!NodeUtil.isImmutableValue(right)) {
",0,0,0,2,5,0,6,0,0,7,40,6,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,381,"    Node arrayNode = callTarget.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,4,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,382,"    Node functionName = arrayNode.getNext();
",2,0,0,1,2,0,4,2,0,8,40,4,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,50,384,"    if ((arrayNode.getType() != Token.ARRAYLIT) ||
",4,2,0,2,5,0,4,0,0,10,46,4,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,50,73,"          somethingChanged = true;
",2,0,0,0,0,0,0,0,0,4,24,10,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,50,75,"          currentVersionOfNode = newVersionOfNode;
",4,0,0,0,0,0,0,0,0,5,40,10,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,976,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,977,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,978,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,50,179,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.22222,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2078,"    Node result = cloneNode();
",2,0,0,1,2,0,2,2,0,6,26,4,0.21053,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2079,"    for (Node n2 = getFirstChild(); n2 != null; n2 = n2.getNext()) {
",6,1,0,3,7,0,6,2,0,17,64,4,0.21053,0,-1
defect4j,closure,com/google/javascript/rhino/Node,50,2090,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,50,124,"    add("","");
",0,0,0,1,2,0,2,0,0,3,9,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,50,125,"    maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,50,126,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,228,"        validateString(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,229,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,638,"    validateNodeType(Token.STRING, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,639,"    validateChildCount(n, 0);
",0,0,0,1,2,0,4,0,0,4,25,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,642,"      n.getString();
",0,0,0,1,2,0,4,0,0,4,14,7,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,645,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,50,646,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,632,"        if (childCount !=
",2,1,0,0,1,0,0,0,0,3,17,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,638,"        addJsString(n.getString());
",0,0,0,2,4,0,6,0,0,6,27,6,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,639,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,948,"    String cached = ESCAPED_JS_STRINGS.get(s);
",2,0,0,1,2,0,6,2,0,10,42,4,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,949,"    if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,950,"      cached = jsString(s);
",2,0,0,1,2,0,4,0,0,7,21,6,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,951,"      ESCAPED_JS_STRINGS.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,34,7,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,953,"    add(cached);
",0,0,0,1,2,0,4,0,0,4,12,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,954,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,957,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,960,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,961,"      switch (s.charAt(i)) {
",0,0,0,2,5,0,6,0,0,6,22,7,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,969,"    if (singleq < doubleq) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,981,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.21053,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,50,1010,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.21053,0,-1
defect4j,closure,com/google/javascript/rhino/Node,51,275,"      this.number = d;
",4,0,0,0,0,0,0,0,0,5,16,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/Node,51,276,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,945,"        operand.setDouble(-operand.getDouble());
",0,0,0,2,4,0,8,0,0,9,40,8,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,946,"        return operand;
",2,0,0,0,0,1,0,0,0,2,15,7,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,1121,"        return Token.NEG;
",4,0,0,0,0,1,0,0,0,4,17,6,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,1331,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00364,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,1327,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00348,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,1328,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00348,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,1330,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00348,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,1333,"    inputsById.put(input.getInputId(), input);
",0,0,0,2,4,0,10,0,0,10,42,5,0.00348,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,1334,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00348,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,942,"      int type = transformTokenType(exprNode.getType());
",2,0,0,2,4,0,6,0,0,8,50,6,0.00288,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,943,"      Node operand = transform(exprNode.getOperand());
",2,0,0,2,4,0,6,2,0,10,48,5,0.00288,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,944,"      if (type == Token.NEG && operand.getType() == Token.NUMBER) {
",10,3,0,2,5,0,4,0,0,17,61,5,0.00288,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,51,169,"        return processUnaryExpression((UnaryExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.00288,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,285,"      composedGuards.addGuard(new DiagnosticGroupWarningsGuard(
",0,0,0,0,2,0,4,2,0,6,57,7,0.00183,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,51,95,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00183,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,51,106,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00183,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,250,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.00183,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,246,"    } else if (!options.checkTypes) {
",4,0,0,1,4,0,0,0,0,5,33,6,0.00177,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,51,244,"    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
",4,0,0,2,6,0,4,0,0,8,60,6,0.00176,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,51,129,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,51,149,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,51,1016,"    return warningsGuard.disables(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,51,118,"    for (DiagnosticType type : group.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,46,5,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,51,119,"      DiagnosticGroup singleton = DiagnosticGroup.forType(type);
",2,0,0,1,2,0,6,2,0,10,58,7,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,51,121,"      for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,7,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,61,"  private DiagnosticGroup(DiagnosticType type) {
",4,0,0,1,3,1,0,2,0,7,46,2,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,62,"    this.name = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,63,"    this.types = ImmutableSet.of(type);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,72,"    if (!singletons.containsKey(type)) {
",0,0,0,2,5,0,6,0,0,7,36,4,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,73,"      singletons.put(type, new DiagnosticGroup(type));
",2,0,0,2,4,0,6,2,0,10,48,7,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,75,"    return singletons.get(type);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00174,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,118,"    for (DiagnosticType type : group.types) {
",6,0,0,1,3,0,0,2,0,8,41,4,0.00164,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,119,"      if (!matches(type)) {
",0,0,0,2,5,0,4,0,0,5,21,6,0.00164,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,51,120,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00164,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,51,45,"    return !level.isOn() && group.isSubGroup(otherGroup);
",0,1,0,2,4,1,10,0,0,12,53,4,0.00140,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,51,58,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00140,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,51,144,"      } else if (guard.disables(group)) {
",0,0,0,2,6,0,6,0,0,6,35,8,0.00140,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,51,147,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00140,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,225,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,226,"        cc.addNumber(n.getDouble());
",0,0,0,2,4,0,8,0,0,8,28,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,227,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,242,"      long value = (long) x;
",4,0,0,1,2,0,0,0,0,4,22,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,243,"      long mantissa = value;
",4,0,0,0,0,0,0,0,0,4,22,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,244,"      int exp = 0;
",2,0,0,0,0,0,0,0,0,2,12,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,245,"      if (Math.abs(x) >= 100) {
",0,1,0,2,5,0,6,0,0,7,25,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,251,"      if (exp > 2) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,254,"        add(Long.toString(value));
",0,0,0,2,4,0,8,0,0,8,26,9,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,256,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,236,"    char prev = getLastChar();
",2,0,0,1,2,0,2,0,0,4,26,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,237,"    if (x < 0 && prev == '-') {
",4,3,0,1,3,0,0,0,0,8,27,4,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,259,"
",0,0,0,0,0,0,0,0,0,0,0,3,0.00063,0,-1
defect4j,closure,com/google/javascript/rhino/Node,51,270,"      return this.number;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00056,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,202,"            addExpr(first, 0, getContextForNoInOperator(context));
",0,0,0,2,4,0,8,0,0,8,54,10,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,205,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,194,"          Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,8,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,195,"          addIdentifier(n.getString());
",0,0,0,2,4,0,6,0,0,6,29,8,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,196,"          cc.addOp(""="", true);
",0,0,0,1,2,0,4,0,0,6,20,8,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,197,"          if (first.getType() == Token.COMMA) {
",4,1,0,2,5,0,4,0,0,9,37,7,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,1294,"    return Node.newNumber(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,58,5,0.00054,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,756,"      return newNumberNode(literalNode.getNumber());
",0,0,0,2,4,1,6,0,0,6,46,6,0.00054,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,51,247,"        return processNumberLiteral((NumberLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00054,0,-1
defect4j,closure,com/google/javascript/rhino/Node,51,600,"    return new NumberNode(number);
",2,0,0,1,2,1,0,2,0,4,30,5,0.00051,0,-1
defect4j,closure,com/google/javascript/rhino/Node,51,259,"      super(Token.NUMBER);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00051,0,-1
defect4j,closure,com/google/javascript/rhino/Node,51,260,"      this.number = number;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00051,0,-1
defect4j,closure,com/google/javascript/rhino/Node,51,261,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00051,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,384,"            cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,11,0.00048,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,179,"        if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.00047,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,180,"          add(""var "");
",0,0,0,1,2,0,2,0,0,3,12,8,0.00047,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,181,"          addList(first, false, getContextForNoInOperator(context));
",0,0,0,2,4,0,8,0,0,9,58,8,0.00047,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,1006,"        node.addChildToBack(transform(initializerNode.getInitializer()));
",0,0,0,3,6,0,10,0,0,10,65,8,0.00042,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,1007,"        node.setLineno(node.getLineno());
",0,0,0,2,4,0,8,0,0,8,33,8,0.00042,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,1008,"        maybeSetLengthFrom(node, initializerNode);
",0,0,0,1,2,0,6,0,0,6,42,8,0.00042,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,229,"      maybeCutLine();
",0,0,0,1,2,0,2,0,0,2,15,7,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,200,"    append(op);
",0,0,0,1,2,0,4,0,0,4,11,5,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,201,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,901,"      boolean isFirst = n == firstInList;
",6,1,0,0,0,0,0,0,0,7,35,7,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,902,"      if (isFirst) {
",2,0,0,1,3,0,0,0,0,2,14,6,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,903,"        addLeftExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);
",2,0,0,1,2,0,6,0,0,8,62,9,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,217,"    } else if (prev == '-' && first == '>') {
",4,3,0,1,4,0,0,0,0,9,41,6,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,204,"    maybeEndStatement();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,206,"    char first = op.charAt(0);
",2,0,0,1,2,0,4,0,0,6,26,5,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,207,"    char prev = getLastChar();
",2,0,0,1,2,0,2,0,0,4,26,5,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,209,"    if ((first == '+' || first == '-') && prev == first) {
",8,5,0,2,5,0,0,0,0,15,54,4,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,213,"    } else if (Character.isLetter(first) &&
",0,1,0,1,4,0,6,0,0,7,39,5,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,223,"    appendOp(op, binOp);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,228,"    if (binOp) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,231,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00038,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,1156,"    return (context == Context.IN_FOR_INIT_CLAUSE
",6,1,0,0,1,1,0,0,0,7,45,6,0.00038,0,-1
defect4j,closure,com/google/javascript/rhino/Node,51,1362,"      return lineCharNo & COLUMN_MASK;
",4,1,0,0,0,1,0,0,0,5,32,6,0.00035,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,990,"      if (!config.acceptConstKeyword && declarationNode.getType() ==
",4,2,0,1,3,0,4,0,0,11,62,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,995,"      Node node = newNode(Token.VAR);
",6,0,0,1,2,0,2,2,0,10,31,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,996,"      for (VariableInitializer child : declarationNode.getVariables()) {
",2,0,0,2,5,0,4,2,0,8,66,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,997,"        node.addChildToBack(transform(child));
",0,0,0,2,4,0,8,0,0,8,38,8,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,998,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,999,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,1004,"      Node node = transform(initializerNode.getTarget());
",2,0,0,2,4,0,6,2,0,10,51,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,1005,"      if (initializerNode.getInitializer() != null) {
",0,1,0,2,5,0,4,0,0,5,47,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,51,1010,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,51,266,"        if (node instanceof VariableDeclaration) {
",2,0,0,1,3,0,0,2,0,4,42,6,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,51,267,"          return processVariableDeclaration((VariableDeclaration) node);
",2,0,0,2,4,1,2,2,0,6,62,8,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,51,268,"        } else  if (node instanceof VariableInitializer) {
",2,0,0,1,4,0,0,2,0,4,50,7,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,51,269,"          return processVariableInitializer((VariableInitializer) node);
",2,0,0,2,4,1,2,2,0,6,62,9,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,461,"      if (lineLength > lineLengthThreshold) {
",4,1,0,1,3,0,0,0,0,5,39,5,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,475,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,900,"    for (Node n = firstInList; n != null; n = n.getNext()) {
",8,1,0,2,5,0,4,2,0,16,56,4,0.00032,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,909,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00032,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,871,"    addExpr(n, minPrecedence, context);
",0,0,0,1,2,0,8,0,0,8,35,5,0.00032,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,872,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00032,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,879,"    if ((NodeUtil.precedence(n.getType()) < minPrecedence) ||
",2,2,0,3,7,0,8,0,0,12,57,4,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,886,"      add(n, context);
",0,0,0,1,2,0,6,0,0,6,16,7,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,888,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,51,1227,"        return 15;
",0,0,0,0,0,1,0,0,0,0,10,3,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,51,1162,"    switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,191,"        if (first == null || first.getType() == Token.EMPTY) {
",6,3,0,2,5,0,4,0,0,13,54,5,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,135,"    endStatement(false);
",0,0,0,1,2,0,2,0,0,3,20,5,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,136,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,143,"    } else if (statementStarted) {
",2,0,0,1,4,0,0,0,0,2,30,5,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,144,"      statementNeedsEnded = true;
",2,0,0,0,0,0,0,0,0,4,27,7,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,62,"    add(identifier);
",0,0,0,1,2,0,4,0,0,4,16,5,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,63,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,78,"    cc.addIdentifier(identifierEscape(identifier));
",0,0,0,2,4,0,8,0,0,8,47,5,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,79,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,1079,"    if (NodeUtil.isLatin(s)) {
",0,0,0,2,5,0,6,0,0,6,26,5,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,1080,"      return s;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,51,2517,"      char c = s.charAt(index);
",2,0,0,1,2,0,6,0,0,8,25,7,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,51,2518,"      if (c > LARGEST_BASIC_LATIN) {
",4,1,0,1,3,0,0,0,0,5,30,6,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,51,2522,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00031,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,51,2514,"    char LARGEST_BASIC_LATIN = 0x7f;
",2,0,0,0,0,0,0,0,0,2,32,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,51,2515,"    int len = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,51,2516,"    for (int index = 0; index < len; index++) {
",8,1,0,1,3,0,0,0,0,10,43,4,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,74,"    cc.add(str);
",0,0,0,1,2,0,6,0,0,6,12,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,75,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,479,"      preferredBreakPosition = code.length();
",2,0,0,1,2,0,4,0,0,7,39,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,480,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,416,"      code.append(str);
",0,0,0,1,2,0,6,0,0,6,17,6,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,417,"      lineLength += str.length();
",2,0,0,1,2,0,4,0,0,7,27,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,418,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,139,"    if (needSemiColon) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,146,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,394,"            cc.notePreferredLineBreak();
",0,0,0,1,2,0,4,0,0,4,28,11,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,184,"      return (code.length() > 0) ? code.charAt(code.length() - 1) : '\0';
",0,2,0,4,8,1,12,0,0,15,67,6,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,154,"    if (statementNeedsEnded) {
",2,0,0,1,3,0,0,0,0,2,26,4,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,160,"    statementStarted = true;
",2,0,0,0,0,0,0,0,0,4,24,4,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,161,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,182,"    maybeEndStatement();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,184,"    if (newcode.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,28,4,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,188,"    char c = newcode.charAt(0);
",2,0,0,1,2,0,4,0,0,6,27,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,189,"    if ((isWordChar(c) || c == '\\') &&
",2,3,0,2,5,0,4,0,0,10,35,4,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,196,"    append(newcode);
",0,0,0,1,2,0,4,0,0,4,16,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,197,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,51,266,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,51,78,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,539,"      this.lineLengthThreshold = threshold;
",4,0,0,0,0,0,0,0,0,5,37,5,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,540,"      return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,407,"      super(lineLengthThreshold, createSrcMap, sourceMapDetailLevel);
",6,0,0,1,2,0,0,0,0,6,63,5,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,393,"    private int lineStartPosition = 0;
",2,0,0,0,0,1,0,0,0,3,34,3,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,394,"    private int preferredBreakPosition = 0;
",2,0,0,0,0,1,0,0,0,3,39,3,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,408,"      this.lineBreak = lineBreak;
",4,0,0,0,0,0,0,0,0,5,27,5,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,409,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,379,"  static class CompactCodePrinter
",2,0,0,0,0,1,0,0,0,3,31,2,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,380,"          add(c, Context.STATEMENT);
",4,0,0,1,2,0,4,0,0,8,26,9,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,383,"          if (c.getType() == Token.VAR) {
",4,1,0,2,5,0,4,0,0,9,31,8,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,387,"          if (c.getType() == Token.FUNCTION) {
",4,1,0,2,5,0,4,0,0,9,36,8,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,51,393,"          if (preferLineBreaks) {
",2,0,0,1,3,0,0,0,0,2,23,8,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,51,510,"      this.prettyPrint = prettyPrint;
",4,0,0,0,0,0,0,0,0,5,31,5,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,676,"                cc.addNumber(d);
",0,0,0,1,2,0,6,0,0,6,16,15,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,401,"        ret = transformNumberAsString((NumberLiteral)n);
",4,0,0,2,4,0,2,2,0,9,48,8,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,402,"        ret.putBooleanProp(Node.QUOTED_PROP, true);
",4,0,0,1,2,0,4,0,0,9,43,9,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,290,"    Node irNode = newStringNode(getStringValue(literalNode.getNumber()));
",2,0,0,3,6,0,8,2,0,12,69,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,291,"    JSDocInfo jsDocInfo = handleJsDoc(literalNode, irNode);
",2,0,0,1,2,0,6,2,0,10,55,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,292,"    if (jsDocInfo != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,295,"    setSourceInfo(irNode, literalNode);
",0,0,0,1,2,0,6,0,0,6,35,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,296,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,300,"    long longValue = (long) value;
",4,0,0,1,2,0,0,0,0,4,30,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,303,"    if (longValue == value) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,304,"      return Long.toString(longValue);
",0,0,0,1,2,1,6,0,0,6,32,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,752,"        if (l < NodeUtil.MAX_POSITIVE_INTEGER_NUMBER) {
",6,1,0,1,3,0,0,0,0,7,47,8,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,753,"          return l;
",2,0,0,0,0,1,0,0,0,2,9,10,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,751,"        long l = Long.parseLong(s);
",2,0,0,1,2,0,6,0,0,8,27,9,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,674,"              double d = getSimpleNumber(key);
",2,0,0,1,2,0,4,0,0,6,32,13,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,675,"              if (!Double.isNaN(d)) {
",0,0,0,2,5,0,6,0,0,7,23,12,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,740,"      char c = s.charAt(index);
",2,0,0,1,2,0,6,0,0,8,25,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,741,"      if (c < '0' || c > '9') {
",4,3,0,1,3,0,0,0,0,9,25,6,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,738,"    int len = s.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,739,"    for (int index = 0; index < len; index++) {
",8,1,0,1,3,0,0,0,0,10,43,4,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,749,"    if (isSimpleNumber(s)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,404,"        ret = transform(n);
",2,0,0,1,2,0,4,0,0,7,19,8,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,405,"        ret.putBooleanProp(Node.QUOTED_PROP, true);
",4,0,0,1,2,0,4,0,0,9,43,9,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,400,"      } else if (n instanceof NumberLiteral) {
",2,0,0,1,4,0,0,2,0,4,40,7,0.01471,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,1331,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00365,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,661,"            Preconditions.checkState(c.getType() == Token.STRING);
",4,1,0,2,4,0,8,0,0,13,54,11,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,662,"            String key = c.getString();
",2,0,0,1,2,0,4,2,0,8,27,10,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,665,"            if (!c.isQuotedString() &&
",0,1,0,1,3,0,4,0,0,6,26,10,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,681,"            add("":"");
",0,0,0,1,2,0,2,0,0,3,9,11,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,682,"            addExpr(c.getFirstChild(), 1);
",0,0,0,2,4,0,6,0,0,6,30,11,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,1327,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00350,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,1328,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00350,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,1330,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00350,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,1333,"    inputsById.put(input.getInputId(), input);
",0,0,0,2,4,0,10,0,0,10,42,5,0.00350,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,1334,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00350,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,654,"          if (c != first) {
",4,1,0,1,3,0,0,0,0,5,17,8,0.00314,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,658,"          if (c.getType() == Token.GET || c.getType() == Token.SET) {
",8,3,0,3,7,0,8,0,0,19,59,8,0.00314,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,785,"        } else if (el.isSetter()) {
",0,0,0,2,6,0,4,0,0,4,27,9,0.00219,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,342,"      return getBooleanProp(QUOTED_PROP);
",0,0,0,1,2,1,4,0,0,4,35,6,0.00216,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,166,"        Node value = key.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,33,7,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,167,"        normalizeObjectLiteralKeyAnnotations(objlit, key, value);
",0,0,0,1,2,0,8,0,0,8,57,8,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,224,"      Preconditions.checkState(objlit.getType() == Token.OBJECTLIT);
",4,1,0,2,4,0,8,0,0,13,62,6,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,225,"      if (key.getJSDocInfo() != null &&
",0,2,0,1,3,0,4,0,0,6,33,5,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,229,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,767,"        if (config.languageMode == LanguageMode.ECMASCRIPT3) {
",8,1,0,1,3,0,0,0,0,9,54,7,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,777,"        Node key = transformAsString(el.getLeft());
",2,0,0,2,4,0,6,2,0,10,43,7,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,778,"        Node value = transform(el.getRight());
",2,0,0,2,4,0,6,2,0,10,38,7,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,779,"        if (el.isGetter()) {
",0,0,0,2,5,0,4,0,0,4,20,8,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,792,"        key.addChildToFront(value);
",0,0,0,1,2,0,6,0,0,6,27,8,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,793,"        node.addChildToBack(key);
",0,0,0,1,2,0,6,0,0,6,25,8,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,794,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00212,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,285,"      composedGuards.addGuard(new DiagnosticGroupWarningsGuard(
",0,0,0,0,2,0,4,2,0,6,57,7,0.00189,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,52,95,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00188,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,52,106,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00188,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,250,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.00188,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,246,"    } else if (!options.checkTypes) {
",4,0,0,1,4,0,0,0,0,5,33,6,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,52,244,"    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
",4,0,0,2,6,0,4,0,0,8,60,6,0.00181,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,52,129,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,52,149,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,61,"  private DiagnosticGroup(DiagnosticType type) {
",4,0,0,1,3,1,0,2,0,7,46,2,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,62,"    this.name = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,63,"    this.types = ImmutableSet.of(type);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,72,"    if (!singletons.containsKey(type)) {
",0,0,0,2,5,0,6,0,0,7,36,4,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,73,"      singletons.put(type, new DiagnosticGroup(type));
",2,0,0,2,4,0,6,2,0,10,48,7,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,75,"    return singletons.get(type);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,52,118,"    for (DiagnosticType type : group.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,46,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,52,119,"      DiagnosticGroup singleton = DiagnosticGroup.forType(type);
",2,0,0,1,2,0,6,2,0,10,58,7,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,52,121,"      for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,7,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,52,1013,"    return warningsGuard.disables(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00179,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,118,"    for (DiagnosticType type : group.types) {
",6,0,0,1,3,0,0,2,0,8,41,4,0.00168,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,119,"      if (!matches(type)) {
",0,0,0,2,5,0,4,0,0,5,21,6,0.00168,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,52,120,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00168,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,52,45,"    return !level.isOn() && group.isSubGroup(otherGroup);
",0,1,0,2,4,1,10,0,0,12,53,4,0.00143,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,52,58,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00143,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,52,144,"      } else if (guard.disables(group)) {
",0,0,0,2,6,0,6,0,0,6,35,8,0.00143,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,52,147,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00143,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,648,"        boolean needsParens = (context == Context.START_OF_EXPR);
",8,1,0,1,2,0,0,0,0,9,57,7,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,649,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,652,"        add(""{"");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,653,"        for (Node c = first; c != null; c = c.getNext()) {
",8,1,0,2,5,0,4,2,0,16,50,6,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,685,"        add(""}"");
",0,0,0,1,3,0,2,0,0,3,9,7,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,686,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,862,"      Node n = newStringNode(literalNode.getValue());
",2,0,0,2,4,0,6,2,0,10,47,5,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,863,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,5,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,52,257,"        return processStringLiteral((StringLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00138,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,1286,"    return Node.newString(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,58,5,0.00132,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,608,"    return new StringNode(Token.STRING, str);
",6,0,0,1,2,1,0,2,0,8,41,5,0.00130,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,699,"      last = child;
",4,0,0,0,0,0,0,0,0,5,13,6,0.00130,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,693,"    Preconditions.checkArgument(child.parent == null);
",4,1,0,1,2,0,4,0,0,9,50,5,0.00107,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,694,"    Preconditions.checkArgument(child.next == null);
",4,1,0,1,2,0,4,0,0,9,48,5,0.00107,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,695,"    child.parent = this;
",4,0,0,0,0,0,0,0,0,5,20,4,0.00107,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,696,"    child.next = first;
",6,0,0,0,0,0,0,0,0,7,19,4,0.00107,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,697,"    first = child;
",4,0,0,0,0,0,0,0,0,5,14,4,0.00107,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,698,"    if (last == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00107,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,701,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00107,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,143,"        normalizeObjectLiteralAnnotations(n);
",0,0,0,1,2,0,4,0,0,4,37,8,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,163,"      Preconditions.checkState(objlit.getType() == Token.OBJECTLIT);
",4,1,0,2,4,0,8,0,0,13,62,6,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,164,"      for (Node key = objlit.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,39,6,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,165,"           key != null; key = key.getNext()) {
",4,1,0,1,4,0,4,0,0,10,35,5,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,52,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,761,"      if (literalNode.isDestructuring()) {
",0,0,0,2,5,0,4,0,0,4,36,6,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,765,"      Node node = newNode(Token.OBJECTLIT);
",6,0,0,1,2,0,2,2,0,10,37,5,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,766,"      for (ObjectProperty el : literalNode.getElements()) {
",2,0,0,2,5,0,4,2,0,8,53,5,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,795,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,52,249,"        return processObjectLiteral((ObjectLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,875,"    addExpr(n, minPrecedence, Context.OTHER);
",4,0,0,1,2,0,6,0,0,10,41,5,0.00078,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,876,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00078,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,226,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,227,"        cc.addNumber(n.getDouble());
",0,0,0,2,4,0,8,0,0,8,28,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,228,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,242,"      long value = (long) x;
",4,0,0,1,2,0,0,0,0,4,22,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,243,"      long mantissa = value;
",4,0,0,0,0,0,0,0,0,4,22,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,244,"      int exp = 0;
",2,0,0,0,0,0,0,0,0,2,12,7,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,245,"      if (Math.abs(x) >= 100) {
",0,1,0,2,5,0,6,0,0,7,25,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,251,"      if (exp > 2) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,254,"        add(Long.toString(value));
",0,0,0,2,4,0,8,0,0,8,26,9,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,256,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,236,"    char prev = getLastChar();
",2,0,0,1,2,0,2,0,0,4,26,5,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,237,"    if (x < 0 && prev == '-') {
",4,3,0,1,3,0,0,0,0,8,27,4,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,241,"    if ((long) x == x) {
",4,1,0,2,5,0,0,0,0,5,20,4,0.00063,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,259,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00063,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,270,"      return this.number;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00056,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,203,"            addExpr(first, 0, getContextForNoInOperator(context));
",0,0,0,2,4,0,8,0,0,8,54,10,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,206,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,195,"          Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,8,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,196,"          addIdentifier(n.getString());
",0,0,0,2,4,0,6,0,0,6,29,8,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,197,"          cc.addOp(""="", true);
",0,0,0,1,2,0,4,0,0,6,20,8,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,198,"          if (first.getType() == Token.COMMA) {
",4,1,0,2,5,0,4,0,0,9,37,7,0.00055,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,756,"      return newNumberNode(literalNode.getNumber());
",0,0,0,2,4,1,6,0,0,6,46,6,0.00054,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,52,247,"        return processNumberLiteral((NumberLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00054,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,1294,"    return Node.newNumber(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,58,5,0.00054,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,600,"    return new NumberNode(number);
",2,0,0,1,2,1,0,2,0,4,30,5,0.00051,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,259,"      super(Token.NUMBER);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00051,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,260,"      this.number = number;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00051,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,261,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00051,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,385,"            cc.endStatement();
",0,0,0,1,2,0,4,0,0,4,18,11,0.00048,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,180,"        if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.00047,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,181,"          add(""var "");
",0,0,0,1,2,0,2,0,0,3,12,8,0.00047,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,182,"          addList(first, false, getContextForNoInOperator(context));
",0,0,0,2,4,0,8,0,0,9,58,8,0.00047,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,398,"      if (n instanceof Name) {
",2,0,0,1,3,0,0,2,0,4,24,6,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,407,"      Preconditions.checkState(ret.getType() == Token.STRING);
",4,1,0,2,4,0,8,0,0,13,56,6,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,408,"      return ret;
",2,0,0,0,0,1,0,0,0,2,11,5,0.00045,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,1006,"        node.addChildToBack(transform(initializerNode.getInitializer()));
",0,0,0,3,6,0,10,0,0,10,65,8,0.00042,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,1007,"        node.setLineno(node.getLineno());
",0,0,0,2,4,0,8,0,0,8,33,8,0.00042,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,1008,"        maybeSetLengthFrom(node, initializerNode);
",0,0,0,1,2,0,6,0,0,6,42,8,0.00042,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,229,"      maybeCutLine();
",0,0,0,1,2,0,2,0,0,2,15,7,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,200,"    append(op);
",0,0,0,1,2,0,4,0,0,4,11,5,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,201,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,901,"      boolean isFirst = n == firstInList;
",6,1,0,0,0,0,0,0,0,7,35,7,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,902,"      if (isFirst) {
",2,0,0,1,3,0,0,0,0,2,14,6,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,903,"        addLeftExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);
",2,0,0,1,2,0,6,0,0,8,62,9,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,217,"    } else if (prev == '-' && first == '>') {
",4,3,0,1,4,0,0,0,0,9,41,6,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,204,"    maybeEndStatement();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,206,"    char first = op.charAt(0);
",2,0,0,1,2,0,4,0,0,6,26,5,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,207,"    char prev = getLastChar();
",2,0,0,1,2,0,2,0,0,4,26,5,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,209,"    if ((first == '+' || first == '-') && prev == first) {
",8,5,0,2,5,0,0,0,0,15,54,4,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,213,"    } else if (Character.isLetter(first) &&
",0,1,0,1,4,0,6,0,0,7,39,5,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,223,"    appendOp(op, binOp);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,228,"    if (binOp) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,52,231,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00039,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,52,1156,"    return (context == Context.IN_FOR_INIT_CLAUSE
",6,1,0,0,1,1,0,0,0,7,45,6,0.00038,0,-1
defect4j,closure,com/google/javascript/rhino/Node,52,1362,"      return lineCharNo & COLUMN_MASK;
",4,1,0,0,0,1,0,0,0,5,32,6,0.00036,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,990,"      if (!config.acceptConstKeyword && declarationNode.getType() ==
",4,2,0,1,3,0,4,0,0,11,62,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,995,"      Node node = newNode(Token.VAR);
",6,0,0,1,2,0,2,2,0,10,31,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,996,"      for (VariableInitializer child : declarationNode.getVariables()) {
",2,0,0,2,5,0,4,2,0,8,66,5,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,997,"        node.addChildToBack(transform(child));
",0,0,0,2,4,0,8,0,0,8,38,8,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,52,998,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,386,"        vnode = v.getScope().getRootNode().getLastChild().getFirstChild();
",2,0,0,4,8,0,10,0,0,13,66,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,416,"          ref.getGrandparent().removeChild(ref.getParent());
",0,0,0,3,6,0,10,0,0,10,50,11,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,602,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,306,"      List<Node> nodes = Lists.newArrayList();
",2,0,0,1,2,0,4,4,0,10,40,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,307,"      Node val = ref.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,34,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,308,"      blacklistVarReferencesInTree(val, v.scope);
",4,0,0,1,2,0,4,0,0,8,43,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,309,"      Preconditions.checkState(val.getType() == Token.OBJECTLIT);
",4,1,0,2,4,0,8,0,0,13,59,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,310,"      Set<String> all = Sets.newLinkedHashSet(varmap.keySet());
",2,0,0,2,4,0,8,4,0,14,57,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,311,"      for (Node key = val.getFirstChild(); key != null;
",4,1,0,1,3,0,4,2,0,11,49,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,323,"      for (String var : all) {
",4,0,0,1,3,0,0,2,0,6,24,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,333,"        nodes.add(new Node(Token.TRUE));
",4,0,0,2,4,0,4,2,0,10,32,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,338,"        nodes = Lists.reverse(nodes);
",2,0,0,1,2,0,6,0,0,9,29,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,339,"        replacement = new Node(Token.COMMA);
",6,0,0,1,2,0,0,2,0,9,36,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,340,"        Node cur = replacement;
",4,0,0,0,0,0,0,2,0,6,23,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,342,"        for (i = 0; i < nodes.size() - 2; i++) {
",6,2,0,2,5,0,4,0,0,14,40,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,348,"        cur.addChildToFront(nodes.get(i));
",0,0,0,2,4,0,10,0,0,10,34,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,349,"        cur.addChildToFront(nodes.get(i + 1));
",2,1,0,2,4,0,8,0,0,11,38,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,412,"          replaceAssignmentExpression(v, ref, varmap);
",0,0,0,1,2,0,8,0,0,8,44,10,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,365,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,375,"      if (index < references.size() && index > 0) {
",4,3,0,2,5,0,4,0,0,11,45,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,376,"        Reference maybeDecl = references.get(index-1);
",4,1,0,1,2,0,4,2,0,11,46,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,377,"        if (maybeDecl.isVarDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,35,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,398,"      } else if (isInitializingAssignmentAt(1)) {
",0,0,0,2,6,0,2,0,0,2,43,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,558,"      return getParent().getType() == Token.VAR;
",4,1,0,2,4,1,4,0,0,9,42,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,608,"      Node parent = getParent();
",2,0,0,1,2,0,2,2,0,6,26,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,609,"      return parent.getType() == Token.ASSIGN
",4,1,0,1,2,1,4,0,0,9,39,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,290,"      Node object = init.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,38,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,291,"      Preconditions.checkState(object.getType() == Token.OBJECTLIT);
",4,1,0,2,4,0,8,0,0,13,62,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,292,"      for (Node key = object.getFirstChild(); key != null;
",4,1,0,1,3,0,4,2,0,11,52,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,296,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,381,"        vnode = init.getParent();
",2,0,0,1,2,0,4,0,0,7,25,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,382,"        fillInitialValues(init, initvals);
",0,0,0,1,2,0,6,0,0,6,34,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,402,"        vnode.getParent().removeChild(vnode);
",0,0,0,2,4,0,8,0,0,8,37,8,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,53,2804,"    vistor.visit(node);
",0,0,0,1,2,0,6,0,0,6,19,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,53,2806,"    if (traverseChildrenPred.apply(node)) {
",0,0,0,2,5,0,6,0,0,6,39,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,53,2807,"      for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,65,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,53,2811,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,115,"      NodeUtil.visitPreOrder(root, new NodeUtil.Visitor() {
",4,0,0,1,4,0,6,0,0,10,53,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,118,"          if (node.getType() == Token.NAME) {
",4,1,0,2,5,0,4,0,0,9,35,11,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,121,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,115,"      NodeUtil.visitPreOrder(root, new NodeUtil.Visitor() {
",4,0,0,1,4,0,6,0,0,10,53,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,123,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,1838,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,409,"        if (ref.isLvalue()) {
",0,0,0,2,5,0,4,0,0,4,21,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,413,"        } else if (ref.getParent().getType() == Token.VAR) {
",4,1,0,3,8,0,6,0,0,11,52,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,434,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,96,"            staleVars.add(v);
",0,0,0,1,2,0,6,0,0,6,17,10,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,98,"            Reference declaration = referenceInfo.references.get(0);
",6,0,0,1,2,0,2,2,0,10,56,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,99,"            Reference init = referenceInfo.getInitializingReference();
",2,0,0,1,2,0,4,2,0,8,58,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,103,"            splitObject(v, declaration, init, referenceInfo);
",0,0,0,1,2,0,10,0,0,10,49,10,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,182,"          continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,227,"      return ret;
",2,0,0,0,0,1,0,0,0,2,11,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,245,"      Map<String, String> varmap = Maps.newLinkedHashMap();
",2,0,0,1,2,0,4,6,0,12,53,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,247,"      for (Reference ref : referenceInfo.references) {
",6,0,0,1,3,0,0,2,0,8,48,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,248,"        if (ref.isLvalue() || ref.isInitializingDeclaration()) {
",0,1,0,3,7,0,8,0,0,9,56,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,249,"          Node val = ref.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,34,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,250,"          if (val != null) {
",2,1,0,1,3,0,0,0,0,3,18,9,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,251,"            Preconditions.checkState(val.getType() == Token.OBJECTLIT);
",4,1,0,2,4,0,8,0,0,13,59,12,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,252,"            for (Node child = val.getFirstChild(); child != null;
",4,1,0,1,3,0,4,2,0,11,53,11,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,264,"        } else if (ref.getParent().getType() == Token.VAR) {
",4,1,0,3,8,0,6,0,0,11,52,8,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,279,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,281,"      return varmap;
",2,0,0,0,0,1,0,0,0,2,14,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,371,"      Map<String, String> varmap = computeVarList(v, referenceInfo);
",2,0,0,1,2,0,6,6,0,14,62,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,373,"      Map<String, Node> initvals = Maps.newHashMap();
",2,0,0,1,2,0,4,6,0,12,47,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,378,"      boolean defined = referenceInfo.isWellDefined() &&
",2,1,0,1,2,0,4,0,0,7,50,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,380,"      if (defined) {
",2,0,0,1,3,0,0,0,0,2,14,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,389,"      for (Map.Entry<String, String> entry : varmap.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,59,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,401,"      if (defined) {
",2,0,0,1,3,0,0,0,0,2,14,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,405,"      for (Reference ref : referenceInfo.references) {
",6,0,0,1,3,0,0,2,0,8,48,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,407,"        if (defined && ref == init) continue;
",6,2,0,1,2,0,0,0,0,8,37,7,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,436,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,437,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,1785,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,53,1565,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,53,2693,"      return !isFunction(n);
",0,0,0,1,2,1,4,0,0,5,22,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,198,"        for (Node child = val.getFirstChild(); child != null;
",4,1,0,1,3,0,4,2,0,11,53,7,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,225,"        ret = true;
",2,0,0,0,0,0,0,0,0,4,11,7,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,226,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,53,196,"      return scope;
",2,0,0,0,0,1,0,0,0,2,13,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,131,"    return super.isExported(name, local) ||
",6,1,0,1,2,1,0,0,0,7,39,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,53,1564,"    } else if (isAssign(parent) && parent.getFirstChild() == n) {
",2,2,0,3,8,0,8,0,0,12,61,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,186,"        if (val.getType() != Token.OBJECTLIT) {
",4,1,0,2,5,0,4,0,0,9,39,7,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,68,"    int pos = name.lastIndexOf('$');
",2,0,0,1,2,0,4,0,0,7,32,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,69,"    if (pos >= 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,76,"    return isConstantKey(name);
",0,0,0,1,2,1,4,0,0,4,27,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,1837,"        if (!n.isEquivalentTo(n2, compareJsType, true)) {
",0,0,0,2,5,0,8,0,0,10,49,8,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,1836,"           n = n.next, n2 = n2.next) {
",12,0,0,0,2,0,0,0,0,14,27,6,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,53,66,"    if (this == obj) return true;
",2,1,0,1,2,1,0,0,0,4,29,4,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,53,67,"    if (obj == null) return false;
",2,1,0,1,2,1,0,0,0,4,30,4,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,53,68,"    if (getClass() != obj.getClass()) return false;
",0,1,0,3,6,1,6,0,0,8,47,4,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,53,69,"    return id.equals(((InputId) obj).id);
",4,0,0,3,6,1,4,2,0,10,37,5,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,53,339,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,53,474,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,53,163,"        return getReferenceName().equals(thatObj.getReferenceName());
",0,0,0,3,6,1,8,0,0,8,61,10,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,206,"    String js = """";
",2,0,0,0,0,0,0,2,0,5,15,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,211,"      js = getCode();
",2,0,0,1,2,0,2,0,0,5,15,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,214,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,216,"    int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,217,"    int startLine = 1;
",2,0,0,0,0,0,0,0,0,2,18,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,221,"    if (lineNumber >= lastLine) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,222,"      pos = lastOffset;
",4,0,0,0,0,0,0,0,0,5,17,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,223,"      startLine = lastLine;
",4,0,0,0,0,0,0,0,0,5,21,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,226,"    for (int n = startLine; n < lineNumber; n++) {
",10,1,0,1,3,0,0,0,0,12,46,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,235,"    lastOffset = pos;
",4,0,0,0,0,0,0,0,0,5,17,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,236,"    lastLine = lineNumber;
",4,0,0,0,0,0,0,0,0,5,22,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,238,"    if (js.indexOf('\n', pos) == -1) {
",0,1,0,2,5,0,6,0,0,9,34,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,242,"      if (pos >= js.length()) {
",2,1,0,2,5,0,4,0,0,7,25,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,53,245,"        return js.substring(pos, js.length());
",0,0,0,2,4,1,10,0,0,10,38,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,1891,"    if (sourceName != null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,1892,"      CompilerInput input = inputsById.get(new InputId(sourceName));
",4,0,0,2,4,0,4,4,0,12,62,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,1893,"      if (input != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,1894,"        return input.getSourceFile();
",0,0,0,1,2,1,4,0,0,4,29,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,1905,"    SourceFile input = getSourceFileByName(sourceName);
",2,0,0,1,2,0,4,2,0,8,51,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,1906,"    if (input != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,1907,"      return input.getLine(lineNumber);
",0,0,0,1,2,1,6,0,0,6,33,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,214,"    VerifyConstants(AbstractCompiler compiler, boolean checkUserDeclarations) {
",6,0,0,1,3,0,0,2,0,8,75,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,229,"    private Map<String, Boolean> constantMap = Maps.newHashMap();
",2,0,0,1,2,1,4,6,0,13,61,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,215,"      this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,216,"      this.checkUserDeclarations = checkUserDeclarations;
",4,0,0,0,0,0,0,0,0,5,51,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,221,"      Node externsAndJs = root.getParent();
",2,0,0,1,2,0,4,2,0,8,37,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,222,"      Preconditions.checkState(externsAndJs != null);
",2,1,0,1,2,0,4,0,0,7,47,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,223,"      Preconditions.checkState(externsAndJs.hasChild(externs));
",0,0,0,2,4,0,10,0,0,10,57,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,225,"      NodeTraversal.traverseRoots(
",0,0,0,0,1,0,4,0,0,4,28,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,227,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,233,"      if (n.getType() == Token.NAME) {
",4,1,0,2,5,0,4,0,0,9,32,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,234,"        String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,235,"        if (n.getString().isEmpty()) {
",0,0,0,3,7,0,6,0,0,6,30,8,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,239,"        boolean isConst = n.getBooleanProp(Node.IS_CONSTANT_NAME);
",6,0,0,1,2,0,4,0,0,10,58,8,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,240,"        if (checkUserDeclarations) {
",2,0,0,1,3,0,0,0,0,2,28,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,241,"          boolean expectedConst = false;
",2,0,0,0,0,0,0,0,0,3,30,10,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,242,"          CodingConvention convention = compiler.getCodingConvention();
",2,0,0,1,2,0,4,2,0,8,61,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,243,"          if (NodeUtil.isConstantName(n)
",0,0,0,1,3,0,6,0,0,6,30,11,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,247,"            expectedConst = false;
",2,0,0,0,0,0,0,0,0,4,22,11,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,249,"            JSDocInfo info = null;
",2,0,0,0,0,0,0,2,0,4,22,11,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,250,"            Var var = t.getScope().getVar(n.getString());
",2,0,0,3,6,0,10,2,0,14,45,11,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,251,"            if (var != null) {
",2,1,0,1,3,0,0,0,0,3,18,11,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,252,"              info = var.getJSDocInfo();
",2,0,0,1,2,0,4,0,0,7,26,13,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,255,"            if (info != null && info.isConstant()) {
",2,2,0,2,5,0,4,0,0,8,40,11,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,258,"              expectedConst = false;
",2,0,0,0,0,0,0,0,0,4,22,13,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,262,"          if (expectedConst) {
",2,0,0,1,3,0,0,0,0,2,20,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,266,"            Preconditions.checkState(expectedConst == isConst,
",4,1,0,0,1,0,4,0,0,9,50,12,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,271,"        Boolean value = constantMap.get(name);
",2,0,0,1,2,0,6,2,0,10,38,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,272,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,273,"          constantMap.put(name, isConst);
",0,0,0,1,2,0,8,0,0,8,31,10,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Normalize,53,280,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,53,68,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,53,69,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,53,70,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,53,71,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,53,72,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,53,73,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,53,65,"        NodeTraversal.traverse(
",0,0,0,0,1,0,4,0,0,4,23,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,41,"  LineNumberCheck(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,44,2,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,39,"  private boolean requiresLineNumbers = false;
",2,0,0,0,0,1,0,0,0,4,44,2,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,42,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,43,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,31,"  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,69,2,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,53,"    requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,55,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,56,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,62,"    if (n.getType() == Token.SCRIPT) {
",4,1,0,2,5,0,4,0,0,9,34,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,63,"      requiresLineNumbers = true;
",2,0,0,0,0,0,0,0,0,4,27,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,65,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,70,"    if (n.getType() == Token.SCRIPT) {
",4,1,0,2,5,0,4,0,0,9,34,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,71,"      requiresLineNumbers = false;
",2,0,0,0,0,0,0,0,0,4,28,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,72,"    } else if (requiresLineNumbers) {
",2,0,0,1,4,0,0,0,0,2,33,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,73,"      if (n.getLineno() == -1) {
",0,1,0,2,5,0,4,0,0,6,26,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/LineNumberCheck,53,81,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,179,"        Node val = ref.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,34,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,53,180,"        if (val == null) {
",2,1,0,1,3,0,0,0,0,3,18,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,31,"public class GoogleCodingConvention extends ClosureCodingConvention {
",2,0,0,0,1,1,0,2,0,5,69,1,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,39,"  private static final Pattern ENUM_KEY_PATTERN =
",2,0,0,0,0,3,0,2,0,7,47,2,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,62,"    if (name.length() <= 1) {
",0,1,0,2,5,0,4,0,0,5,25,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,63,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,81,"    if (name.isEmpty() || !Character.isUpperCase(name.charAt(0))) {
",0,1,0,4,9,0,12,0,0,14,63,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,53,82,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,298,"    init(Lists.<JSSourceFile>newArrayList(externs),
",0,0,0,1,3,0,8,2,0,10,47,5,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,300,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03448,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,53,146,"              return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,363,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,397,"        return references.get(0);
",0,0,0,1,2,1,4,0,0,4,25,8,0.03333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,1834,"      for (n = first, n2 = node.first;
",10,0,0,0,1,0,0,0,0,12,32,6,0.03226,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,1835,"           n != null;
",2,1,0,0,0,0,0,0,0,3,10,6,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,326,"        if (!initBlock.provablyExecutesBefore(
",0,0,0,0,2,0,4,0,0,5,38,7,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,53,1563,"      return n.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,25,7,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,184,"    this((PrintStream) null);
",0,0,0,2,4,0,0,2,0,2,25,6,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,185,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,232,"        setErrorManager(
",0,0,0,0,1,0,2,0,0,2,16,9,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,53,1902,"    if (lineNumber < 1) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,700,"      for (currentBlock = thatBlock;
",4,0,0,0,1,0,0,0,0,5,30,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,701,"           currentBlock != null && currentBlock != this;
",4,3,0,0,0,0,0,0,0,7,45,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,708,"      if (currentBlock == this) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,709,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,53,37,"  public LoggerErrorManager(MessageFormatter formatter, Logger logger) {
",6,0,0,1,3,1,0,4,0,11,70,2,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,53,38,"    this.formatter = formatter;
",4,0,0,0,0,0,0,0,0,5,27,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,53,39,"    this.logger = logger;
",4,0,0,0,0,0,0,0,0,5,21,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,53,40,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03226,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,2080,"      Node n2clone = n2.cloneTree();
",2,0,0,1,2,0,4,2,0,8,30,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,2081,"      n2clone.parent = result;
",6,0,0,0,0,0,0,0,0,7,24,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,2082,"      if (result.last != null) {
",4,1,0,1,3,0,0,0,0,5,26,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,2083,"        result.last.next = n2clone;
",8,0,0,0,0,0,0,0,0,9,27,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,2085,"      if (result.first == null) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,2086,"        result.first = n2clone;
",6,0,0,0,0,0,0,0,0,7,23,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,53,2088,"      result.last = n2clone;
",6,0,0,0,0,0,0,0,0,7,22,6,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,53,323,"      Preconditions.checkState(references.get(0).isDeclaration());
",0,0,0,3,6,0,10,0,0,10,60,6,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1419,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.28571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,556,"          return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.26667,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,54,695,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,768,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.22222,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1421,"          if (qVar.getScope() == scope) {
",2,1,0,2,5,0,4,0,0,7,31,9,0.21951,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1422,"            scope.undeclare(qVar);
",0,0,0,1,2,0,6,0,0,6,22,12,0.21951,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,54,505,"    Preconditions.checkState(var.scope == this);
",4,1,0,1,2,0,4,0,0,9,44,5,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,54,506,"    Preconditions.checkState(vars.get(var.name) == var);
",6,1,0,2,4,0,8,0,0,15,52,5,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,54,507,"    vars.remove(var.name);
",4,0,0,1,2,0,4,0,0,8,22,5,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,54,508,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.21429,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,572,"            objectType.defineDeclaredProperty(
",0,0,0,0,1,0,4,0,0,4,34,13,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,558,"        this.setPrototypeBasedOn(objType);
",0,0,0,1,2,0,4,0,0,4,34,9,0.19149,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,559,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.19149,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,500,"        Node params = getParametersNode();
",2,0,0,1,2,0,2,2,0,6,34,8,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,501,"        if (params == null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,510,"          params = params.cloneTree();
",2,0,0,1,2,0,4,0,0,7,28,10,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,511,"          Node thisTypeNode = Node.newString(Token.NAME, ""thisType"");
",6,0,0,1,2,0,4,2,0,13,59,10,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,512,"          thisTypeNode.setJSType(
",0,0,0,0,1,0,4,0,0,4,23,11,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,514,"          params.addChildToFront(thisTypeNode);
",0,0,0,1,2,0,6,0,0,6,37,11,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,515,"          thisTypeNode.setOptionalArg(true);
",0,0,0,1,2,0,4,0,0,5,34,11,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,517,"          defineDeclaredProperty(name,
",0,0,0,0,1,0,4,0,0,4,28,11,0.17391,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,524,"      } else if (""apply"".equals(name)) {
",0,0,0,2,6,0,4,0,0,5,34,8,0.17391,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1413,"          if (!qVar.isTypeInferred()) {
",0,0,0,2,5,0,4,0,0,5,29,9,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1406,"        Var qVar = scope.getVar(qName);
",2,0,0,1,2,0,6,2,0,10,31,7,0.15517,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1407,"        if (qVar != null) {
",2,1,0,1,3,0,0,0,0,3,19,7,0.15517,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,54,706,"      return thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
",4,0,0,1,2,1,4,0,0,8,59,7,0.15385,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,553,"      ObjectType objType = type.toObjectType();
",2,0,0,1,2,0,4,2,0,8,41,6,0.14754,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,554,"      if (objType != null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.14754,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,555,"        if (objType.isEquivalentTo(prototype)) {
",0,0,0,2,5,0,6,0,0,6,40,9,0.14754,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,54,300,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,3160,"      return getBestLValue(lValue.getParent());
",0,0,0,2,4,1,6,0,0,6,41,7,0.10256,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,882,"            JSType rvalueType = rvalue.getJSType();
",2,0,0,1,2,0,4,2,0,8,39,12,0.09524,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,883,"            validator.expectObject(t, rvalue, rvalueType,
",0,0,0,0,1,0,10,0,0,10,45,13,0.09524,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,880,"          FunctionType functionType = objectJsType.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,63,10,0.08511,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,881,"          if (functionType.isConstructor()) {
",0,0,0,2,5,0,4,0,0,4,35,11,0.08511,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,1302,"            report(t, n, INEXISTENT_PROPERTY, propName,
",0,0,0,0,1,0,10,0,0,10,43,14,0.08511,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,54,697,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.08511,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,879,"        if (objectJsType != null && objectJsType.isFunctionType()) {
",2,2,0,2,5,0,4,0,0,8,60,8,0.08000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,889,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.08000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,169,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.07407,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,165,"    if (!type.matchesObjectContext()) {
",0,0,0,2,5,0,4,0,0,5,35,4,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,1323,"        return parent.getFirstChild() != getProp &&
",2,2,0,1,2,1,4,0,0,8,43,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,3131,"        info = parent.getJSDocInfo();
",2,0,0,1,2,0,4,0,0,7,29,10,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,706,"      Node value = name.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,6,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,707,"      String memberName = NodeUtil.getObjectLitKeyName(name);
",2,0,0,1,2,0,6,2,0,10,55,6,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,708,"      if (memberName != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,709,"        JSType rawValueType =  name.getFirstChild().getJSType();
",2,0,0,2,4,0,6,2,0,10,56,8,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,710,"        JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
",2,0,0,0,1,0,4,2,0,8,61,8,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,712,"        if (valueType == null) {
",2,1,0,1,3,0,0,0,0,3,24,8,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,715,"        objectType.defineInferredProperty(memberName, valueType, name);
",0,0,0,1,2,0,10,0,0,10,63,9,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,716,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,705,"         name = name.getNext()) {
",2,0,0,1,4,0,4,0,0,7,24,4,0.06522,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,616,"        Node value = keyNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,37,7,0.06338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,617,"        String memberName = NodeUtil.getObjectLitKeyName(keyNode);
",2,0,0,1,2,0,6,2,0,10,58,7,0.06338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,618,"        JSDocInfo info = keyNode.getJSDocInfo();
",2,0,0,1,2,0,4,2,0,8,40,7,0.06338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,619,"        JSType valueType = getDeclaredType(
",2,0,0,0,1,0,2,2,0,6,35,7,0.06338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,621,"        JSType keyType = NodeUtil.getObjectLitKeyTypeFromValueType(
",2,0,0,0,1,0,4,2,0,8,59,7,0.06338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,623,"        if (keyType != null) {
",2,1,0,1,3,0,0,0,0,3,22,7,0.06338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,615,"           keyNode = keyNode.getNext()) {
",2,0,0,1,4,0,4,0,0,7,30,5,0.06338,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,721,"      return type.toString();
",0,0,0,1,2,1,4,0,0,4,23,7,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NoObjectType,54,90,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,498,"      if (""call"".equals(name)) {
",0,0,0,2,5,0,4,0,0,5,26,7,0.05488,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,54,139,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.05422,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,54,95,"    Node thisParam = parameters.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,4,0.05172,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,54,96,"    Node thatParam = that.parameters.getFirstChild();
",6,0,0,1,2,0,2,2,0,10,49,4,0.05172,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,54,97,"    while (thisParam != null && thatParam != null) {
",4,3,0,1,3,0,0,0,0,7,48,4,0.05172,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,3149,"      return parent;
",2,0,0,0,0,1,0,0,0,2,14,9,0.05128,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,497,"    if (!hasOwnProperty(name)) {
",0,0,0,2,5,0,4,0,0,5,28,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,546,"    return super.getPropertyType(name);
",4,0,0,1,2,1,0,0,0,4,35,5,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,54,81,"    if (!(other instanceof ArrowType)) {
",2,0,0,2,5,0,0,2,0,5,36,4,0.04688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,54,85,"    ArrowType that = (ArrowType) other;
",4,0,0,1,2,0,0,4,0,8,35,4,0.04688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ArrowType,54,88,"    if (!this.returnType.isSubtype(that.returnType)) {
",6,0,0,2,5,0,2,0,0,9,50,4,0.04688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,552,"    if (""prototype"".equals(name)) {
",0,0,0,2,5,0,4,0,0,5,31,5,0.04663,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,888,"      boolean treatThisTypesAsCovariant =
",2,0,0,0,0,0,0,0,0,2,35,7,0.04615,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,903,"      return treatThisTypesAsCovariant && this.call.isSubtype(other.call);
",8,1,0,1,2,1,2,0,0,11,68,6,0.04615,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,695,"            objectType = objectType.getImplicitPrototype();
",2,0,0,1,2,0,4,0,0,7,47,12,0.04545,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,877,"      if (this.isInterface()) {
",0,0,0,2,5,0,2,0,0,2,25,7,0.04523,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,872,"      FunctionType other = that.toMaybeFunctionType();
",2,0,0,1,2,0,4,2,0,8,48,6,0.04500,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,873,"      if (other.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,26,7,0.04500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,653,"      fnType.setPrototypeBasedOn(baseType);
",0,0,0,1,2,0,6,0,0,6,37,7,0.04478,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,357,"          JSType maybeBaseType =
",2,0,0,0,0,0,0,2,0,4,22,10,0.04327,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,359,"          if (maybeBaseType != null &&
",2,2,0,0,1,0,0,0,0,4,28,10,0.04327,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,361,"            baseType = (ObjectType) maybeBaseType;
",4,0,0,1,2,0,0,2,0,7,38,12,0.04327,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,363,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.04327,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,54,346,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.04301,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,356,"        if (isConstructor) {
",2,0,0,1,3,0,0,0,0,2,20,8,0.04286,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,1581,"      ensureTyped(t, n);
",0,0,0,1,2,0,6,0,0,6,18,7,0.04211,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,3176,"        String ownerName = getBestLValueName(owner);
",2,0,0,1,2,0,4,2,0,8,44,8,0.04211,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,3177,"        if (ownerName != null) {
",2,1,0,1,3,0,0,0,0,3,24,8,0.04211,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,3178,"          return ownerName + ""."" + getObjectLitKeyName(lValue);
",2,1,0,1,2,1,4,0,0,8,53,10,0.04211,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnknownType,54,85,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.04211,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,3174,"      Node owner = getBestLValue(lValue.getParent());
",2,0,0,2,4,0,6,2,0,10,47,6,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,3175,"      if (owner != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,54,171,"        return charno1 - charno2;
",4,1,0,0,0,1,0,0,0,5,25,7,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,704,"          return objectType.toString() + ""."" + propName;
",2,1,0,1,2,1,4,0,0,8,46,10,0.04000,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,54,534,"      currentInfo.setBaseType(jsType);
",0,0,0,1,2,0,6,0,0,6,32,7,0.03982,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,54,535,"      populated = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.03982,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,54,536,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.03982,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,944,"        if (!jsdocBuilder.recordBaseType(typeInfo.type)) {
",4,0,0,2,5,0,4,0,0,9,50,8,0.03965,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,54,1025,"    lazyInitInfo();
",0,0,0,1,2,0,2,0,0,2,15,5,0.03965,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,54,1026,"    info.baseType = type;
",6,0,0,0,0,0,0,0,0,7,21,4,0.03965,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,54,1027,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03965,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,54,532,"    if (jsType != null && !hasAnySingletonTypeTags() &&
",2,3,0,1,3,0,2,0,0,9,51,4,0.03965,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,713,"        type = dereferenced;
",4,0,0,0,0,0,0,0,0,5,20,8,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,711,"      ObjectType dereferenced = type.dereference();
",2,0,0,1,2,0,4,2,0,8,45,6,0.03738,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,712,"      if (dereferenced != null) {
",2,1,0,1,3,0,0,0,0,3,27,6,0.03738,0,-1
defect4j,closure,com/google/javascript/rhino/Node,54,1948,"      return ""this"";
",0,0,0,0,0,1,0,0,0,1,14,8,0.03659,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,136,"  private class ExtendedTypeValidator implements Predicate<JSType> {
",2,0,0,0,1,1,0,4,0,7,66,2,0.03644,0,-1
defect4j,closure,com/google/javascript/jscomp/LinkedFlowScope,54,129,"    return cache.functionScope.getTypeOfThis();
",4,0,0,1,2,1,2,0,0,6,43,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,357,"        n.setJSType(scope.getTypeOfThis());
",0,0,0,2,4,0,8,0,0,8,35,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,358,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,2162,"      switch (key.getType()) {
",0,0,0,2,5,0,4,0,0,4,24,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,2147,"    switch (key.getType()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.03557,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,2151,"        return key.getString();
",0,0,0,1,2,1,4,0,0,4,23,6,0.03557,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,2161,"    if (valueType != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.03557,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,54,2185,"    return valueType;
",2,0,0,0,0,1,0,0,0,2,17,4,0.03557,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,684,"      scope = traverse(name.getFirstChild(), scope);
",2,0,0,2,4,0,8,0,0,11,46,6,0.03488,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,428,"                      extendedTypes.add(new ExtendedTypeInfo(
",0,0,0,0,2,0,4,2,0,6,39,18,0.03346,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,938,"      if (jsdocBuilder.isInterfaceRecorded()) {
",0,0,0,2,5,0,4,0,0,4,41,7,0.03346,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,949,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03346,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1243,"    public ExtendedTypeInfo(JSTypeExpression type, int lineno, int charno) {
",8,0,0,1,3,1,0,2,0,11,72,3,0.03346,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1244,"      this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,5,0.03346,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1245,"      this.lineno = lineno;
",4,0,0,0,0,0,0,0,0,5,21,5,0.03346,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1246,"      this.charno = charno;
",4,0,0,0,0,0,0,0,0,5,21,5,0.03346,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1247,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03346,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,54,861,"    return currentInfo.isInterface();
",0,0,0,1,2,1,4,0,0,4,33,5,0.03297,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,489,"        ensureTyped(t, n, BOOLEAN_TYPE);
",0,0,0,1,2,0,8,0,0,8,32,6,0.03200,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,490,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03200,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,1359,"      return getNativeType(UNKNOWN_TYPE);
",0,0,0,1,2,1,4,0,0,4,35,7,0.03114,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,537,"          n.setJSType(getNativeType(BOOLEAN_TYPE));
",0,0,0,2,4,0,8,0,0,8,41,7,0.03053,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,538,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03053,0,-1
defect4j,closure,com/google/javascript/jscomp/SemanticReverseAbstractInterpreter,54,261,"    return nextPreciserScopeKnowingConditionOutcome(
",0,0,0,0,1,1,2,0,0,2,48,5,0.02920,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,440,"                      if (token != JsDocToken.RC) {
",6,1,0,1,3,0,0,0,0,7,29,17,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,409,"                    token = next();
",2,0,0,1,2,0,2,0,0,5,15,15,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,410,"                    matchingRc = true;
",2,0,0,0,0,0,0,0,0,4,18,15,0.02857,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,564,"    return super.defineProperty(name, type, inferred, propertyNode);
",10,0,0,1,2,1,0,0,0,10,64,5,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,1620,"      report(t, call, WRONG_ARGUMENT_COUNT,
",0,0,0,0,1,0,8,0,0,8,37,7,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,419,"      t.report(n, diagnosticType, arguments);
",0,0,0,1,2,0,10,0,0,10,39,7,0.02685,0,-1
defect4j,closure,com/google/javascript/jscomp/ChainableReverseAbstractInterpreter,54,107,"    return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome(
",2,1,0,0,1,1,4,0,0,7,75,5,0.02667,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,54,1814,"        level = newLevel;
",4,0,0,0,0,0,0,0,0,5,17,8,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,54,109,"        return newLevel;
",2,0,0,0,0,1,0,0,0,2,16,8,0.02597,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,54,705,"    if (thisType.isObject() && thatType.isObject()) {
",0,1,0,3,7,0,8,0,0,9,49,4,0.02548,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,54,693,"    if (thisType.isEnumElementType()) {
",0,0,0,2,5,0,4,0,0,4,35,5,0.02516,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,414,"                    Node typeNode = parseAndRecordTypeNameNode(
",2,0,0,0,1,0,2,2,0,6,43,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,417,"                    lineno = stream.getLineno();
",2,0,0,1,2,0,4,0,0,7,28,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,418,"                    charno = stream.getCharno();
",2,0,0,1,2,0,4,0,0,7,28,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,420,"                    typeNode = wrapNode(Token.BANG, typeNode);
",6,0,0,1,2,0,4,0,0,11,42,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,421,"                    if (typeNode != null && !matchingRc) {
",4,2,0,1,3,0,0,0,0,7,38,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,424,"                    type = createJSTypeExpression(typeNode);
",2,0,0,1,2,0,4,0,0,7,40,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,426,"                    if (annotation == Annotation.EXTENDS) {
",6,1,0,1,3,0,0,0,0,7,39,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,438,"                    token = next();
",2,0,0,1,2,0,2,0,0,5,15,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,439,"                    if (matchingRc) {
",2,0,0,1,3,0,0,0,0,2,17,15,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,449,"                  } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1081,"    return parseAndRecordTypeNode(token, lineno, startCharno, matchingLC, true);
",0,0,0,1,2,1,10,0,0,11,76,5,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1130,"      typeNode = parseTypeNameAnnotation(token);
",2,0,0,1,2,0,4,0,0,7,42,6,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1572,"    if (token == JsDocToken.LC) {
",6,1,0,1,3,0,0,0,0,7,29,4,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,1586,"      return parseTypeName(token);
",0,0,0,1,2,1,4,0,0,4,28,7,0.02507,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,54,689,"    } else if (thatType.isUnionType()) {
",0,0,0,2,6,0,4,0,0,4,36,10,0.02500,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,54,356,"        t.warning(""Bad type annotation. Unknown type "" + reference,
",2,1,0,0,1,0,4,0,0,8,59,9,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,402,"                  skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,14,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,403,"                  token = next();
",2,0,0,1,2,0,2,0,0,5,15,13,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,404,"                  lineno = stream.getLineno();
",2,0,0,1,2,0,4,0,0,7,28,13,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,405,"                  charno = stream.getCharno();
",2,0,0,1,2,0,4,0,0,7,28,13,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,406,"                  boolean matchingRc = false;
",2,0,0,0,0,0,0,0,0,3,27,14,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,408,"                  if (token == JsDocToken.LC) {
",6,1,0,1,3,0,0,0,0,7,29,13,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,413,"                  if (token == JsDocToken.STRING) {
",6,1,0,1,3,0,0,0,0,7,33,13,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,452,"                  token = eatTokensUntilEOL(token);
",2,0,0,1,2,0,4,0,0,7,33,13,0.02493,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,54,453,"                  continue retry;
",2,0,0,0,0,0,0,0,0,2,15,13,0.02493,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,54,282,"      return super.getSlot(name);
",4,0,0,1,2,1,0,0,0,4,27,7,0.02454,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,54,388,"    if (this.isResolved()) {
",0,0,0,2,5,0,2,0,0,2,24,5,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,54,391,"      this.validator = validator;
",4,0,0,0,0,0,0,0,0,5,27,6,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,54,392,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,418,"    if (noTypeCheckSection == 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.02424,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,421,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02424,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,54,687,"    } else if (thisType.isUnionType()) {
",0,0,0,2,6,0,4,0,0,4,36,9,0.02260,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1398,"        valueType = rhsValue.getJSType();
",2,0,0,1,2,0,4,0,0,7,33,7,0.02200,0,-1
defect4j,closure,com/google/javascript/rhino/TokenStream,54,216,"                } break L;
",2,0,0,0,1,0,0,0,0,2,10,8,0.02174,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,54,510,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.02105,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,54,712,"        return computeFollowNode(fromNode, parent, cfa);
",0,0,0,1,2,1,8,0,0,8,48,6,0.02105,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,54,138,"        return prop;
",2,0,0,0,0,1,0,0,0,2,12,8,0.02069,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,54,131,"        return JSError.make(
",0,0,0,0,1,1,4,0,0,4,20,9,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,54,363,"      createEdge(node, Branch.ON_FALSE,
",4,0,0,0,1,0,4,0,0,8,33,7,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,571,"          if (""prototype"".equals(propName)) {
",0,0,0,2,5,0,4,0,0,5,35,11,0.02036,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,54,145,"      } else if (methodName.equals(""mixin"")) {
",0,0,0,2,6,0,4,0,0,5,40,8,0.02027,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,54,196,"      return scope;
",2,0,0,0,0,1,0,0,0,2,13,5,0.01940,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,1142,"      ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
",2,0,0,2,4,0,10,2,0,14,70,6,0.01915,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,1143,"      if (regType != null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.01915,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1557,"          Node child = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,8,0.01878,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,1558,"          switch (child.getType()) {
",0,0,0,2,5,0,4,0,0,4,26,9,0.01878,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,326,"          hasNonEmptyReturns = true;
",2,0,0,0,0,0,0,0,0,4,26,10,0.01869,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,327,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01869,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,54,133,"      methodName = callName.getLastChild().getString();
",2,0,0,2,4,0,6,0,0,9,49,6,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,772,"        typeable = false;
",2,0,0,0,0,0,0,0,0,4,17,5,0.01843,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,773,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01843,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,685,"      ObjectType objectType = getJSType(n.getFirstChild()).dereference();
",2,0,0,3,6,0,8,2,0,12,67,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,686,"      if (objectType != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,687,"        String propName = n.getLastChild().getString();
",2,0,0,2,4,0,6,2,0,10,47,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,688,"        if (objectType.getConstructor() != null &&
",0,2,0,1,3,0,4,0,0,6,42,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,694,"          while (objectType != null && !objectType.hasOwnProperty(propName)) {
",2,2,0,2,5,0,6,0,0,11,68,10,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeValidator,54,701,"        if (objectType != null &&
",2,2,0,0,1,0,0,0,0,4,25,8,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,518,"          typeable = false;
",2,0,0,0,0,0,0,0,0,4,17,7,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,520,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,54,114,"    compiler.report(
",0,0,0,0,1,0,4,0,0,4,16,5,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,54,116,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,54,143,"      if (methodName.equals(""inherits"")) {
",0,0,0,2,5,0,4,0,0,5,36,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,285,"                conditionFlowScope =
",2,0,0,0,0,0,0,0,0,3,20,13,0.01778,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,54,685,"    } else if (thatType.isSubtype(thisType)) {
",0,0,0,2,6,0,6,0,0,6,42,8,0.01762,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,994,"      String property = NodeUtil.getObjectLitKeyName(key);
",2,0,0,1,2,0,6,2,0,10,52,6,0.01747,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,995,"      if (type.hasProperty(property) &&
",0,1,0,1,3,0,6,0,0,7,33,6,0.01747,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,1002,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01747,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,54,90,"      return ImmutableList.of(specialCaseType);
",0,0,0,1,2,1,6,0,0,6,41,7,0.01747,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,979,"      ensureTyped(t, key, rightType);
",0,0,0,1,2,0,8,0,0,8,31,7,0.01739,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,793,"            visitObjLitKey(t, key, n);
",0,0,0,1,2,0,8,0,0,8,26,10,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,794,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,963,"    Node rvalue = key.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,964,"    JSType rightType = NodeUtil.getObjectLitKeyTypeFromValueType(
",2,0,0,0,1,0,4,2,0,8,61,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,966,"    if (rightType == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,970,"    Node owner = objlit;
",4,0,0,0,0,0,0,2,0,6,20,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,974,"    JSType keyType = getJSType(key);
",2,0,0,1,2,0,4,2,0,8,32,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,975,"    boolean valid = validator.expectCanAssignToPropertyOf(t, key,
",2,0,0,0,1,0,8,0,0,10,61,5,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,978,"    if (valid) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,990,"    JSType objlitType = getJSType(objlit);
",2,0,0,1,2,0,4,2,0,8,38,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,991,"    ObjectType type = ObjectType.cast(
",2,0,0,0,1,0,4,2,0,8,34,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,993,"    if (type != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,569,"        if (objectType.hasProperty(propName) ||
",0,1,0,1,3,0,6,0,0,7,39,8,0.01718,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,154,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,9,0.01702,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,54,691,"               typesIndexedByProperty.get(propertyName).getAlternates()) {
",0,0,0,2,6,0,8,0,0,8,59,7,0.01688,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,54,692,"        if (!alt.getGreatestSubtype(type).isEmptyType()) {
",0,0,0,3,7,0,8,0,0,9,50,8,0.01688,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,146,"      } else if (objectType.isUnknownType()) {
",0,0,0,2,6,0,4,0,0,4,40,8,0.01667,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,139,"      ObjectType objectType = ObjectType.cast(type);
",2,0,0,1,2,0,6,2,0,10,46,5,0.01660,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,140,"      if (objectType == null) {
",2,1,0,1,3,0,0,0,0,3,25,5,0.01660,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,54,143,"      } else if (objectType.isEmptyType()) {
",0,0,0,2,6,0,4,0,0,4,38,7,0.01660,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,54,88,"    JSType specialCaseType = reduceAlternatesWithoutUnion();
",2,0,0,1,2,0,2,2,0,6,56,4,0.01660,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionTypeBuilder,54,89,"    if (specialCaseType != null) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.01660,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,493,"        ensureTyped(t, n, t.getScope().getTypeOfThis());
",0,0,0,3,6,0,12,0,0,12,48,6,0.01626,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,54,494,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01626,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,284,"              if (conditionFlowScope == null) {
",2,1,0,1,3,0,0,0,0,3,33,11,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,288,"              newScope =
",2,0,0,0,0,0,0,0,0,3,10,11,0.01613,0,-1
defect4j,closure,com/google/javascript/rhino/Node,54,1947,"    } else if (type == Token.THIS) {
",6,1,0,1,4,0,0,0,0,7,32,6,0.01610,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,594,"        type = typeRegistry.createAnonymousObjectType();
",2,0,0,1,2,0,4,0,0,7,48,7,0.01610,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,54,683,"    } else if (thisType.isSubtype(thatType)) {
",0,0,0,2,6,0,6,0,0,6,42,7,0.01606,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,704,"    for (Node name = n.getFirstChild(); name != null;
",4,1,0,1,3,0,4,2,0,11,49,4,0.01601,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,54,720,"    return scope;
",2,0,0,0,0,1,0,0,0,2,13,4,0.01601,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,601,"        processObjectLitProperties(
",0,0,0,0,1,0,2,0,0,2,27,8,0.01599,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,614,"      for (Node keyNode = objLit.getFirstChild(); keyNode != null;
",4,1,0,1,3,0,4,2,0,11,60,5,0.01599,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,54,641,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01599,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,54,625,"    JSError error = JSError.make(getSourceName(), n, diagnosticType, arguments);
",2,0,0,2,4,0,12,2,0,16,76,4,0.01569,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,54,626,"    compiler.report(error);
",0,0,0,1,2,0,6,0,0,6,23,5,0.01569,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,54,627,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01569,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,54,298,"        handleIf(n);
",0,0,0,1,2,0,4,0,0,4,12,6,0.01550,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,54,299,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01550,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,54,358,"    Node thenBlock = node.getFirstChild().getNext();
",2,0,0,2,4,0,6,2,0,10,48,4,0.01550,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,54,359,"    Node elseBlock = thenBlock.getNext();
",2,0,0,1,2,0,4,2,0,8,37,4,0.01550,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,54,360,"    createEdge(node, Branch.ON_TRUE, computeFallThrough(thenBlock));
",4,0,0,2,4,0,8,0,0,12,64,5,0.01550,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,54,362,"    if (elseBlock == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.01550,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,416,"      return HELPER_SOURCE;
",2,0,0,0,0,1,0,0,0,2,21,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,427,"        if (propName.getType() != Token.STRING) {
",4,1,0,2,5,0,4,0,0,9,41,7,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,432,"        return buildCallNode(FACTORY_METHOD_NAME, propName,
",0,0,0,0,1,1,6,0,0,6,51,8,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,451,"        return value.getLastChild();
",0,0,0,1,2,1,4,0,0,4,28,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,342,"      return getBooleanProp(QUOTED_PROP);
",0,0,0,1,2,1,4,0,0,4,35,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,769,"        if (config.languageMode == LanguageMode.ECMASCRIPT3) {
",8,1,0,1,3,0,0,0,0,9,54,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,779,"        Node key = transformAsString(el.getLeft());
",2,0,0,2,4,0,6,2,0,10,43,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,780,"        Node value = transform(el.getRight());
",2,0,0,2,4,0,6,2,0,10,38,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,781,"        if (el.isGetter()) {
",0,0,0,2,5,0,4,0,0,4,20,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,794,"        key.addChildToFront(value);
",0,0,0,1,2,0,6,0,0,6,27,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,795,"        node.addChildToBack(key);
",0,0,0,1,2,0,6,0,0,6,25,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,796,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,166,"        Node value = key.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,33,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,167,"        normalizeObjectLiteralKeyAnnotations(objlit, key, value);
",0,0,0,1,2,0,8,0,0,8,57,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,224,"      Preconditions.checkState(objlit.getType() == Token.OBJECTLIT);
",4,1,0,2,4,0,8,0,0,13,62,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,225,"      if (key.getJSDocInfo() != null &&
",0,2,0,1,3,0,4,0,0,6,33,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,229,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,670,"      validateObjectLitKey(c);
",0,0,0,1,2,0,4,0,0,4,24,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,675,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,731,"    if (n.isQuotedString()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,739,"      validateNonEmptyString(n);
",0,0,0,1,2,0,4,0,0,4,26,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,741,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,55,690,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,511,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,272,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,245,"      return HELPER_SOURCE;
",2,0,0,0,0,1,0,0,0,2,21,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,251,"        return buildCallNode(FACTORY_METHOD_NAME, null,
",0,0,0,0,1,1,4,0,0,5,47,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,475,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,478,"        addLeftExpr(first, NodeUtil.precedence(type), context);
",0,0,0,2,4,0,12,0,0,12,55,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,479,"        add(""["");
",0,0,0,1,3,0,2,0,0,3,9,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,480,"        add(first.getNext());
",0,0,0,2,4,0,6,0,0,6,21,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,481,"        add(""]"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,482,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,547,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,55,231,"        return processElementGet((ElementGet) node);
",2,0,0,2,4,1,2,2,0,6,44,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,55,1927,"    return node.getType() == Token.THIS;
",4,1,0,1,2,1,4,0,0,9,36,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,221,"        call.addChildToBack(argumentNode.cloneTree());
",0,0,0,2,4,0,8,0,0,8,46,8,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,240,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,241,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,277,"        return statement.getFirstChild();
",0,0,0,1,2,1,4,0,0,4,33,8,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,717,"    for (Node child = children; child != null; child = child.next) {
",12,1,0,1,3,0,0,2,0,16,64,4,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,718,"      Preconditions.checkArgument(child.parent == null);
",4,1,0,1,2,0,4,0,0,9,50,7,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,719,"      child.parent = this;
",4,0,0,0,0,0,0,0,0,5,20,6,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,721,"    Node lastSib = children.getLastSibling();
",2,0,0,1,2,0,4,2,0,8,41,4,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,722,"    lastSib.next = first;
",6,0,0,0,0,0,0,0,0,7,21,4,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,723,"    first = children;
",4,0,0,0,0,0,0,0,0,5,17,4,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,724,"    if (last == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.12500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,727,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,94,"        for (Reduction reduction : reductions) {
",4,0,0,1,3,0,0,2,0,6,40,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,95,"          reduction.apply();
",0,0,0,1,2,0,4,0,0,4,18,11,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,96,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,98,"        Node addingRoot = compiler.getNodeForCodeInsertion(null);
",2,0,0,1,2,0,4,2,0,8,57,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,99,"        addingRoot.addChildrenToFront(helperCode);
",0,0,0,1,2,0,6,0,0,6,42,9,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,100,"        compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,9,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,138,"      parent.replaceChild(oldChild, newChild);
",0,0,0,1,2,0,8,0,0,8,40,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,139,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,140,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,55,115,"    return parameter.getString().startsWith(OPTIONAL_ARG_PREFIX);
",0,0,0,2,4,1,8,0,0,8,61,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,55,120,"    return VAR_ARGS_NAME.equals(parameter.getString());
",0,0,0,2,4,1,8,0,0,8,51,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,749,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,750,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,751,"    validateExpression(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,752,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.11111,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,1682,"      case Token.THIS:            return ""this"";
",4,0,0,0,0,1,0,0,0,5,42,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,78,"      Node helperCode = parseHelperCode(reducer);
",2,0,0,1,2,0,4,2,0,8,43,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,79,"      if (helperCode == null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,83,"      int helperCodeCost = InlineCostEstimator.getCost(helperCode);
",2,0,0,1,2,0,6,0,0,8,61,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,86,"      int savings = 0;
",2,0,0,0,0,0,0,0,0,2,16,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,87,"      for (Reduction reduction : reductions) {
",4,0,0,1,3,0,0,2,0,6,40,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,88,"        savings += reduction.estimateSavings();
",2,0,0,1,2,0,4,0,0,7,39,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,89,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,93,"      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
",6,2,0,2,5,0,0,0,0,8,53,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,102,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,111,"    Node root = compiler.parseSyntheticCode(
",2,0,0,0,1,0,4,2,0,8,40,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,113,"    return (root != null) ? root.removeFirstChild() : null;
",2,1,0,2,4,1,4,0,0,7,55,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,565,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,566,"        add(Node.tokenToName(type));
",0,0,0,2,4,0,8,0,0,8,28,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,567,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,976,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,977,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,978,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,1292,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,1293,"    addToDebugLog(""Parsing: "" + file.getName());
",0,1,0,2,4,0,6,0,0,8,44,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,1294,"    return new JsAst(file).getAstRoot(this);
",2,0,0,2,4,1,2,2,0,6,40,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,1317,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,1318,"    return parse(JSSourceFile.fromCode(fileName, js));
",0,0,0,2,4,1,10,0,0,10,50,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,1927,"    if (module == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,1928,"      if (inputs.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,23,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,1932,"      return inputs.get(0).getAstRoot(this);
",0,0,0,2,4,1,6,0,0,6,38,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,128,"    Reduction(Node parent, Node oldChild, Node newChild) {
",8,0,0,1,3,0,0,6,0,14,54,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,129,"      this.parent = parent;
",4,0,0,0,0,0,0,0,0,5,21,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,130,"      this.oldChild = oldChild;
",4,0,0,0,0,0,0,0,0,5,25,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,131,"      this.newChild = newChild;
",4,0,0,0,0,0,0,0,0,5,25,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,132,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,146,"      return InlineCostEstimator.getCost(oldChild) -
",0,1,0,1,2,1,6,0,0,7,46,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,217,"      Node call = new Node(Token.CALL, lineno, charno);
",10,0,0,1,2,0,0,4,0,14,49,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,218,"      call.putBooleanProp(Node.FREE_CALL, true);
",4,0,0,1,2,0,4,0,0,9,42,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,219,"      call.addChildToBack(Node.newString(Token.NAME, methodName));
",4,0,0,2,4,0,10,0,0,14,60,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,220,"      if (argumentNode != null) {
",2,1,0,1,3,0,0,0,0,3,27,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,223,"      return call;
",2,0,0,0,0,1,0,0,0,2,12,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,178,"          reductions.put(reducer, new Reduction(parent, node, replacement));
",6,0,0,2,4,0,6,2,0,14,66,10,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,179,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,162,"        validateChildless(n);
",0,0,0,1,2,0,4,0,0,4,21,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,163,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.10000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,1640,"    switch (token) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,632,"        if (childCount !=
",2,1,0,0,1,0,0,0,0,3,17,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,638,"        addJsString(n.getString());
",0,0,0,2,4,0,6,0,0,6,27,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,639,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,948,"    String cached = ESCAPED_JS_STRINGS.get(s);
",2,0,0,1,2,0,6,2,0,10,42,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,949,"    if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,950,"      cached = jsString(s);
",2,0,0,1,2,0,4,0,0,7,21,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,951,"      ESCAPED_JS_STRINGS.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,34,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,953,"    add(cached);
",0,0,0,1,2,0,4,0,0,4,12,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,954,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,957,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,960,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,961,"      switch (s.charAt(i)) {
",0,0,0,2,5,0,6,0,0,6,22,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,969,"    if (singleq < doubleq) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,981,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1010,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1011,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1012,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1013,"      char c = s.charAt(i);
",2,0,0,1,2,0,6,0,0,8,21,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1014,"      switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1051,"          if (outputCharsetEncoder != null) {
",2,1,0,1,3,0,0,0,0,3,35,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1062,"            if (c > 0x1f && c < 0x7f) {
",4,3,0,1,3,0,0,0,0,7,27,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1063,"              sb.append(c);
",0,0,0,1,2,0,6,0,0,6,13,12,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1073,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,1074,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,55,681,"    if (block.getType() != Token.BLOCK) {
",4,1,0,2,5,0,4,0,0,9,37,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,55,685,"    for (Node n = block.getFirstChild(); n != null; n = n.getNext()) {
",6,1,0,3,7,0,8,2,0,18,66,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,497,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,597,"    validateChildCount(n, 0);
",0,0,0,1,2,0,4,0,0,4,25,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,598,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,55,2932,"      } else if (parent.getType() == Token.NAME) {
",4,1,0,2,6,0,4,0,0,9,44,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,275,"      Node statement = body.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,38,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,276,"      if (statement.getType() == Token.RETURN) {
",4,1,0,2,5,0,4,0,0,9,42,5,0.08333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,699,"      last = child;
",4,0,0,0,0,0,0,0,0,5,13,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,1149,"        return Token.THIS;
",4,0,0,0,0,1,0,0,0,4,18,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,487,"      Node propName = getSetPropertyName(node);
",2,0,0,1,2,0,4,2,0,8,41,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,488,"      if (propName != null) {
",2,1,0,1,3,0,0,0,0,3,23,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,509,"      Node body = functionNode.getLastChild();
",2,0,0,1,2,0,4,2,0,8,40,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,510,"      if (!body.hasOneChild()) {
",0,0,0,2,5,0,4,0,0,5,26,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,435,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,453,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.07692,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,808,"        first = newChild;
",4,0,0,0,0,0,0,0,0,5,17,6,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSType,55,334,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/ObjectType,55,471,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,55,156,"        return getReferenceName().equals(thatObj.getReferenceName());
",0,0,0,3,6,1,8,0,0,8,61,10,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,55,37,"  public LoggerErrorManager(MessageFormatter formatter, Logger logger) {
",6,0,0,1,3,1,0,4,0,11,70,2,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,55,38,"    this.formatter = formatter;
",4,0,0,0,0,0,0,0,0,5,27,4,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,55,39,"    this.logger = logger;
",4,0,0,0,0,0,0,0,0,5,21,4,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,55,40,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,184,"    this((PrintStream) null);
",0,0,0,2,4,0,0,2,0,2,25,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,185,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,232,"        setErrorManager(
",0,0,0,0,1,0,2,0,0,2,16,9,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,298,"    init(Lists.<JSSourceFile>newArrayList(externs),
",0,0,0,1,3,0,8,2,0,10,47,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,55,300,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,55,31,"public class GoogleCodingConvention extends ClosureCodingConvention {
",2,0,0,0,1,1,0,2,0,5,69,1,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,55,39,"  private static final Pattern ENUM_KEY_PATTERN =
",2,0,0,0,0,3,0,2,0,7,47,2,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,376,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,393,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,68,"    validateNodeType(Token.BLOCK, n);
",4,0,0,1,2,0,4,0,0,8,33,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,69,"    validateIsSynthetic(n);
",0,0,0,1,2,0,4,0,0,4,23,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,70,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,71,"    validateCodeRoot(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,36,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,72,"    validateCodeRoot(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,35,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,73,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,425,"      Node propName = getGetPropertyName(node);
",2,0,0,1,2,0,4,2,0,8,41,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,426,"      if (propName != null) {
",2,1,0,1,3,0,0,0,0,3,23,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,447,"      Node value = maybeGetSingleReturnRValue(functionNode);
",2,0,0,1,2,0,4,2,0,8,54,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,448,"      if (value != null &&
",2,3,0,0,1,0,0,0,0,5,20,5,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,685,"    Node n = this;
",2,0,0,0,0,0,0,2,0,4,14,4,0.06667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,686,"    while (n.next != null) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.06667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,689,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,55,39,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,55,46,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,64,"    this(consumer, null);
",2,0,0,1,2,0,0,0,0,2,21,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,65,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,692,"      return newNode(transformTokenType(literalNode.getType()));
",0,0,0,3,6,1,8,0,0,8,58,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,55,216,"        return processKeywordLiteral((KeywordLiteral) node);
",2,0,0,2,4,1,2,2,0,6,52,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,61,"    CompiledSizeEstimator(int costThreshhold) {
",4,0,0,1,3,0,0,0,0,4,43,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,57,"    private int cost = 0;
",2,0,0,0,0,1,0,0,0,3,21,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,58,"    private char last = '\0';
",2,0,0,0,0,1,0,0,0,4,25,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,59,"    private boolean continueProcessing = true;
",2,0,0,0,0,1,0,0,0,4,42,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,62,"      this.maxCost = costThreshhold;
",4,0,0,0,0,0,0,0,0,5,30,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,63,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,66,"      CodeGenerator cg = new CodeGenerator(this);
",2,0,0,1,2,0,0,4,0,6,43,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,67,"      cg.add(root);
",0,0,0,1,2,0,6,0,0,6,13,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,68,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,71,"      return cost;
",2,0,0,0,0,1,0,0,0,2,12,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,76,"      return continueProcessing;
",2,0,0,0,0,1,0,0,0,2,26,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,81,"      return last;
",2,0,0,0,0,1,0,0,0,2,12,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,86,"      last = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,12,36,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,87,"      cost += str.length();
",2,0,0,1,2,0,4,0,0,7,21,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,88,"      if (maxCost <= cost) {
",4,1,0,1,3,0,0,0,0,5,22,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,91,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,95,"      add(ESTIMATED_IDENTIFIER);
",0,0,0,1,2,0,4,0,0,4,26,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,96,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,39,"    return getCost(root, Integer.MAX_VALUE);
",4,0,0,1,2,1,4,0,0,8,40,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,46,"    CompiledSizeEstimator estimator = new CompiledSizeEstimator(costThreshhold);
",4,0,0,1,2,0,0,4,0,8,76,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,47,"    estimator.add(root);
",0,0,0,1,2,0,6,0,0,6,20,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineCostEstimator,55,48,"    return estimator.getCost();
",0,0,0,1,2,1,4,0,0,4,27,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,371,"      Node valueNode = getValueNode(node);
",2,0,0,1,2,0,4,2,0,8,36,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,372,"      if (valueNode != null) {
",2,1,0,1,3,0,0,0,0,3,24,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,388,"      Node value = maybeGetSingleReturnRValue(functionNode);
",2,0,0,1,2,0,4,2,0,8,54,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,389,"      if (value != null &&
",2,2,0,0,1,0,0,0,0,4,20,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,270,"      Node body = functionNode.getLastChild();
",2,0,0,1,2,0,4,2,0,8,40,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,55,271,"      if (!body.hasOneChild()) {
",0,0,0,2,5,0,4,0,0,5,26,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,252,"        validateObjectLit(n);
",0,0,0,1,2,0,4,0,0,4,21,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,253,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,483,"      validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,668,"    validateNodeType(Token.OBJECTLIT, n);
",4,0,0,1,2,0,4,0,0,8,37,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,669,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,672,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,129,"        validateReturn(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,130,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,480,"    validateNodeType(Token.RETURN, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,481,"    validateMaximumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,482,"    if (n.hasChildren()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,55,485,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,2080,"      Node n2clone = n2.cloneTree();
",2,0,0,1,2,0,4,2,0,8,30,6,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,2081,"      n2clone.parent = result;
",6,0,0,0,0,0,0,0,0,7,24,6,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,2082,"      if (result.last != null) {
",4,1,0,1,3,0,0,0,0,5,26,6,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,2083,"        result.last.next = n2clone;
",8,0,0,0,0,0,0,0,0,9,27,8,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,2085,"      if (result.first == null) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,2086,"        result.first = n2clone;
",6,0,0,0,0,0,0,0,0,7,23,8,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,2088,"      result.last = n2clone;
",6,0,0,0,0,0,0,0,0,7,22,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,55,172,"          add(first);
",0,0,0,1,2,0,4,0,0,4,11,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,55,852,"        node.addChildToBack(transform(statementNode.getReturnValue()));
",0,0,0,3,6,0,10,0,0,10,63,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,143,"        normalizeObjectLiteralAnnotations(n);
",0,0,0,1,2,0,4,0,0,4,37,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,163,"      Preconditions.checkState(objlit.getType() == Token.OBJECTLIT);
",4,1,0,2,4,0,8,0,0,13,62,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,164,"      for (Node key = objlit.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,39,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,165,"           key != null; key = key.getNext()) {
",4,1,0,1,4,0,4,0,0,10,35,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,55,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/rhino/Node,55,814,"        last = newChild;
",4,0,0,0,0,0,0,0,0,5,16,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,136,"      StringBuilder msg = new StringBuilder(""JSCompiler errors\n"");
",2,0,0,1,2,0,0,4,0,7,61,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,137,"      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
",4,0,0,1,2,0,0,4,0,8,71,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,138,"      for (JSError e : errors) {
",4,0,0,1,3,0,0,2,0,6,26,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,139,"        msg.append(formatter.formatError(e));
",0,0,0,2,4,0,10,0,0,10,37,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,141,"      throw new RuntimeException(msg.toString());
",0,0,0,2,4,0,4,2,0,6,43,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,227,"      int nextpos = js.indexOf('\n', pos);
",2,0,0,1,2,0,6,0,0,9,36,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,228,"      if (nextpos == -1) {
",2,1,0,1,3,0,0,0,0,4,20,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,231,"      pos = nextpos + 1;
",4,1,0,0,0,0,0,0,0,6,18,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,57,"      JsMessage.Style style) {
",6,0,0,0,2,0,0,0,0,6,24,3,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,58,"    this.idGenerator = idGenerator;
",4,0,0,0,0,0,0,0,0,5,31,4,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,59,"    this.style = style;
",4,0,0,0,0,0,0,0,0,5,19,4,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,60,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,100,"    return extractMessages(ImmutableList.copyOf(inputs));
",0,0,0,2,4,1,8,0,0,8,53,5,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,116,"    Compiler compiler = new Compiler();
",2,0,0,1,2,0,0,4,0,6,35,4,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,117,"    compiler.init(
",0,0,0,0,1,0,4,0,0,4,14,5,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,122,"    ExtractMessagesVisitor extractCompilerPass =
",2,0,0,0,0,0,0,2,0,4,44,4,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,124,"    for (JSSourceFile input : inputs) {
",4,0,0,1,3,0,0,2,0,6,35,4,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,127,"      Node root = new JsAst(input).getAstRoot(compiler);
",4,0,0,2,4,0,4,4,0,12,50,6,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,130,"      extractCompilerPass.process(null, root);
",0,0,0,1,2,0,6,0,0,6,40,7,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,131,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,133,"    JSError[] errors = compiler.getErrors();
",2,0,0,2,4,0,4,2,0,8,40,4,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,135,"    if (errors.length > 0) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,51,"public class JsMessageExtractor {
",2,0,0,0,1,1,0,0,0,3,33,1,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,73,"    private ExtractMessagesVisitor(AbstractCompiler compiler) {
",4,0,0,1,3,1,0,2,0,7,59,3,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,74,"      super(compiler, true, style, idGenerator);
",6,0,0,1,2,0,0,0,0,7,42,5,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,71,"    private final List<JsMessage> messages = Lists.newLinkedList();
",2,0,0,1,2,2,4,4,0,12,63,3,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,75,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageExtractor,56,65,"  private class ExtractMessagesVisitor extends JsMessageVisitor {
",2,0,0,0,1,1,0,2,0,5,63,2,0.44444,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,56,166,"      return new com.google.javascript.jscomp.mozilla.rhino.EvaluatorException(
",14,0,0,0,1,1,0,0,0,14,73,8,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,56,134,"    } catch (EvaluatorException e) {
",2,0,0,1,4,0,0,2,0,4,32,6,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,56,135,"      logger.info(
",0,0,0,0,1,0,4,0,0,4,12,8,0.30769,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,56,120,"    compiler.report(
",0,0,0,0,1,0,4,0,0,4,16,5,0.26667,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,56,122,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.26667,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,60,"    return format(error, false);
",0,0,0,1,2,1,4,0,0,5,28,5,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,75,"      case ERROR: return maybeColorize(""ERROR"", Color.ERROR);
",6,0,0,1,2,1,2,0,0,9,55,4,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/JsAst,56,98,"      root = new Node(Token.SCRIPT);
",6,0,0,1,2,0,0,2,0,9,30,6,0.23529,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,244,"      return js.substring(pos, js.indexOf('\n', pos));
",0,0,0,2,4,1,12,0,0,13,48,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,242,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.18750,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1904,"      return input.getLine(lineNumber);
",0,0,0,1,2,1,6,0,0,6,33,7,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,206,"    String js = """";
",2,0,0,0,0,0,0,2,0,5,15,4,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,211,"      js = getCode();
",2,0,0,1,2,0,2,0,0,5,15,6,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,214,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,216,"    int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,217,"    int startLine = 1;
",2,0,0,0,0,0,0,0,0,2,18,5,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,221,"    if (lineNumber >= lastLine) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,222,"      pos = lastOffset;
",4,0,0,0,0,0,0,0,0,5,17,6,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,223,"      startLine = lastLine;
",4,0,0,0,0,0,0,0,0,5,21,6,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,226,"    for (int n = startLine; n < lineNumber; n++) {
",10,1,0,1,3,0,0,0,0,12,46,4,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,235,"    lastOffset = pos;
",4,0,0,0,0,0,0,0,0,5,17,4,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,236,"    lastLine = lineNumber;
",4,0,0,0,0,0,0,0,0,5,22,4,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,56,238,"    if (js.indexOf('\n', pos) == -1) {
",0,1,0,2,5,0,6,0,0,9,34,4,0.17647,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,56,99,"    return new JSError(
",0,0,0,0,1,1,0,2,0,2,19,6,0.17391,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,56,136,"    return JSError.make(sourceName, line, lineOffset, defaultLevel,
",0,0,0,0,1,1,12,0,0,12,63,5,0.17391,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1891,"        return input.getSourceFile();
",0,0,0,1,2,1,4,0,0,4,29,9,0.17308,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1902,"    SourceFile input = getSourceFileByName(sourceName);
",2,0,0,1,2,0,4,2,0,8,51,4,0.16981,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1903,"    if (input != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.16981,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1889,"      CompilerInput input = inputsById.get(new InputId(sourceName));
",4,0,0,2,4,0,4,4,0,12,62,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1890,"      if (input != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1888,"    if (sourceName != null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.16364,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1899,"    if (lineNumber < 1) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.15789,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,78,"      b.append(error.sourceName);
",4,0,0,1,2,0,4,0,0,8,27,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,79,"      if (error.lineNumber > 0) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,80,"        b.append(':');
",0,0,0,1,2,0,4,0,0,5,14,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,81,"        b.append(error.lineNumber);
",4,0,0,1,2,0,4,0,0,8,27,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,83,"      b.append("": "");
",0,0,0,1,2,0,4,0,0,5,15,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,56,137,"    return ast.getSourceFile();
",0,0,0,1,2,1,4,0,0,4,27,5,0.09574,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceExcerptProvider,56,36,"        return formatter.formatLine(
",0,0,0,0,1,1,4,0,0,4,28,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,70,"    SourceExcerptProvider source = getSource();
",2,0,0,1,2,0,2,2,0,6,43,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,71,"    String sourceExcerpt = source == null ? null :
",4,1,0,0,0,0,0,2,0,7,46,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,76,"    StringBuilder b = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,77,"    if (error.sourceName != null) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,86,"    b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
",10,0,0,2,4,0,6,0,0,16,72,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,87,"    b.append("" - "");
",0,0,0,1,2,0,4,0,0,5,16,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,89,"    b.append(error.description);
",4,0,0,1,2,0,4,0,0,8,28,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,90,"    b.append('\n');
",0,0,0,1,2,0,4,0,0,5,15,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,91,"    if (sourceExcerpt != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,112,"    return b.toString();
",0,0,0,1,2,1,4,0,0,4,20,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,44,"    return source;
",2,0,0,0,0,1,0,0,0,2,14,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,74,"    switch (level) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,82,"    if (!colorize) return text;
",4,0,0,1,2,1,0,0,0,5,27,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,64,"    Color(String controlCharacter) {
",4,0,0,1,3,0,0,2,0,6,32,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,65,"      this.controlCharacter = controlCharacter;
",4,0,0,0,0,0,0,0,0,5,41,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,66,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,58,"    ERROR(""\033[31m""),
",2,0,0,1,3,0,0,0,0,3,18,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,59,"    WARNING(""\033[35m""),
",2,0,0,1,3,0,0,0,0,3,20,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,60,"    RESET(""\033[39m"");
",2,0,0,1,3,0,0,0,0,3,18,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,57,"  private static enum Color {
",2,0,0,0,1,2,0,0,0,4,27,2,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,56,74,"    switch (level) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,56,125,"      return line;
",2,0,0,0,0,1,0,0,0,2,12,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,155,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.05797,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,157,"    for (Map.Entry<Node, String> msgNode : googMsgNodes.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,65,4,0.05797,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,161,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05797,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,169,"    switch (node.getType()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.05797,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,204,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.05797,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,56,129,"    for (Entry<Pattern, DiagnosticType> entry : typeMap.entrySet()) {
",2,0,0,2,5,0,4,6,0,12,65,4,0.05714,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,56,130,"      if (entry.getKey().matcher(message).matches()) {
",0,0,0,4,9,0,10,0,0,10,48,7,0.05714,0,-1
defect4j,closure,com/google/javascript/jscomp/RhinoErrorReporter,56,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05714,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessage,56,52,"  public enum Style {
",2,0,0,0,1,1,0,0,0,3,19,2,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessage,56,53,"    LEGACY, // All legacy code is completely OK
",2,0,0,0,0,0,0,0,0,2,43,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessage,56,54,"    RELAX,  // You allowed to use legacy code but it would be reported as warn
",2,0,0,0,0,0,0,0,0,2,74,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessage,56,55,"    CLOSURE; // Any legacy code is prohibited
",2,0,0,0,0,0,0,0,0,2,41,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,138,"      JsMessage.Style style, JsMessage.IdGenerator idGenerator) {
",12,0,0,0,2,0,0,0,0,12,59,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,111,"  private final Map<String, MessageLocation> messageNames =
",2,0,0,0,0,2,0,6,0,10,57,2,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,122,"  private final Map<Node, String> googMsgNodes = Maps.newHashMap();
",2,0,0,1,2,2,4,6,0,14,65,2,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,140,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,141,"    this.needToCheckDuplications = needToCheckDuplications;
",4,0,0,0,0,0,0,0,0,5,55,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,142,"    this.style = style;
",4,0,0,0,0,0,0,0,0,5,19,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,143,"    this.idGenerator = idGenerator;
",4,0,0,0,0,0,0,0,0,5,31,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,145,"    checkLevel = (style == JsMessage.Style.CLOSURE)
",10,1,0,1,2,0,0,0,0,12,47,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,151,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,44,"  static final DiagnosticType MESSAGE_HAS_NO_DESCRIPTION =
",2,0,0,0,0,2,0,2,0,6,56,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,48,"  static final DiagnosticType MESSAGE_HAS_NO_TEXT =
",2,0,0,0,0,2,0,2,0,6,49,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,53,"  static final DiagnosticType MESSAGE_TREE_MALFORMED =
",2,0,0,0,0,2,0,2,0,6,52,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,57,"  static final DiagnosticType MESSAGE_HAS_NO_VALUE =
",2,0,0,0,0,2,0,2,0,6,50,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,61,"  static final DiagnosticType MESSAGE_DUPLICATE_KEY =
",2,0,0,0,0,2,0,2,0,6,51,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,66,"  static final DiagnosticType MESSAGE_NODE_IS_ORPHANED =
",2,0,0,0,0,2,0,2,0,6,54,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,70,"  static final DiagnosticType MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX =
",2,0,0,0,0,2,0,2,0,6,70,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,91,"  private static final Pattern MSG_UNNAMED_PATTERN =
",2,0,0,0,0,3,0,2,0,7,50,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/JsMessageVisitor,56,94,"  private static final Pattern CAMELCASE_PATTERN =
",2,0,0,0,0,3,0,2,0,7,48,2,0.05405,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,56,48,"        errorCount++;
",2,0,0,0,0,0,0,0,0,3,13,8,0.01498,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,251,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.00970,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,245,"    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
",4,0,0,2,6,0,4,0,0,8,60,6,0.00950,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,247,"    } else if (!options.checkTypes) {
",4,0,0,1,4,0,0,0,0,5,33,6,0.00950,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,61,"  private DiagnosticGroup(DiagnosticType type) {
",4,0,0,1,3,1,0,2,0,7,46,2,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,62,"    this.name = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,63,"    this.types = ImmutableSet.of(type);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,72,"    if (!singletons.containsKey(type)) {
",0,0,0,2,5,0,6,0,0,7,36,4,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,73,"      singletons.put(type, new DiagnosticGroup(type));
",2,0,0,2,4,0,6,2,0,10,48,7,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,75,"    return singletons.get(type);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,56,1008,"    return warningsGuard.disables(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,56,118,"    for (DiagnosticType type : group.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,46,5,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,56,119,"      DiagnosticGroup singleton = DiagnosticGroup.forType(type);
",2,0,0,1,2,0,6,2,0,10,58,7,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,56,121,"      for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,7,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,56,129,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00933,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,118,"    for (DiagnosticType type : group.types) {
",6,0,0,1,3,0,0,2,0,8,41,4,0.00902,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,119,"      if (!matches(type)) {
",0,0,0,2,5,0,4,0,0,5,21,6,0.00902,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,56,120,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00902,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1768,"          mode = Config.LanguageMode.ECMASCRIPT3;
",8,0,0,0,0,0,0,0,0,9,39,7,0.00584,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,1769,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00584,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,56,66,"    if (this == obj) return true;
",2,1,0,1,2,1,0,0,0,4,29,4,0.00505,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,56,67,"    if (obj == null) return false;
",2,1,0,1,2,1,0,0,0,4,30,4,0.00505,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,56,68,"    if (getClass() != obj.getClass()) return false;
",0,1,0,3,6,1,6,0,0,8,47,4,0.00505,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,56,69,"    return id.equals(((InputId) obj).id);
",4,0,0,3,6,1,4,2,0,10,37,5,0.00505,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,56,286,"      composedGuards.addGuard(new DiagnosticGroupWarningsGuard(
",0,0,0,0,2,0,4,2,0,6,57,7,0.00329,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,56,95,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00329,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,56,106,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00329,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,56,149,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00326,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,56,45,"    return !level.isOn() && group.isSubGroup(otherGroup);
",0,1,0,2,4,1,10,0,0,12,53,4,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,56,58,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,56,144,"      } else if (guard.disables(group)) {
",0,0,0,2,6,0,6,0,0,6,35,8,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,56,147,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00309,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,56,108,"        errors.add(p.error);
",4,0,0,1,2,0,4,0,0,8,20,9,0.00297,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,185,"    return extractClassNameIfGoog(node, parent, ""goog.require"");
",0,0,0,1,2,1,6,0,0,7,60,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,192,"      Node callee = node.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,35,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,193,"      if (callee != null && callee.getType() == Token.GETPROP) {
",6,3,0,2,5,0,4,0,0,13,58,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,194,"        String qualifiedName = callee.getQualifiedName();
",2,0,0,1,2,0,4,2,0,8,49,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,195,"        if (functionName.equals(qualifiedName)) {
",0,0,0,2,5,0,6,0,0,6,41,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,196,"          Node target = callee.getNext();
",2,0,0,1,2,0,4,2,0,8,31,10,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,198,"            className = target.getString();
",2,0,0,1,2,0,4,0,0,7,31,12,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,190,"    String className = null;
",2,0,0,0,0,0,0,2,0,4,24,4,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,191,"    if (NodeUtil.isExprCall(parent)) {
",0,0,0,2,5,0,6,0,0,6,34,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodingConvention,57,203,"    return className;
",2,0,0,0,0,1,0,0,0,2,17,4,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1311,"      initOptions(new CompilerOptions());
",0,0,0,2,4,0,2,2,0,4,35,7,0.00217,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,57,1605,"    return n.getType() == Token.EXPR_RESULT
",4,1,0,1,2,1,4,0,0,9,39,5,0.00172,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,140,"        reservedKeywords = null;
",2,0,0,0,0,0,0,0,0,3,24,5,0.00149,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,141,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00149,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1768,"          mode = Config.LanguageMode.ECMASCRIPT3;
",8,0,0,0,0,0,0,0,0,9,39,7,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1769,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00147,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1327,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00143,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1323,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00141,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1324,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00141,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1326,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00141,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1329,"    inputsById.put(input.getInputId(), input);
",0,0,0,2,4,0,10,0,0,10,42,5,0.00141,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1330,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00141,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,251,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.00108,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,245,"    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
",4,0,0,2,6,0,4,0,0,8,60,6,0.00106,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,247,"    } else if (!options.checkTypes) {
",4,0,0,1,4,0,0,0,0,5,33,6,0.00106,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,57,1008,"    return warningsGuard.disables(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,61,"  private DiagnosticGroup(DiagnosticType type) {
",4,0,0,1,3,1,0,2,0,7,46,2,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,62,"    this.name = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,63,"    this.types = ImmutableSet.of(type);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,72,"    if (!singletons.containsKey(type)) {
",0,0,0,2,5,0,6,0,0,7,36,4,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,73,"      singletons.put(type, new DiagnosticGroup(type));
",2,0,0,2,4,0,6,2,0,10,48,7,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,75,"    return singletons.get(type);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,57,118,"    for (DiagnosticType type : group.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,46,5,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,57,119,"      DiagnosticGroup singleton = DiagnosticGroup.forType(type);
",2,0,0,1,2,0,6,2,0,10,58,7,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,57,121,"      for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,7,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,57,129,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00104,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,118,"    for (DiagnosticType type : group.types) {
",6,0,0,1,3,0,0,2,0,8,41,4,0.00101,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,119,"      if (!matches(type)) {
",0,0,0,2,5,0,4,0,0,5,21,6,0.00101,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,57,120,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00101,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,864,"      Node n = newStringNode(literalNode.getValue());
",2,0,0,2,4,0,6,2,0,10,47,5,0.00087,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,865,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,5,0.00087,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,57,257,"        return processStringLiteral((StringLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00087,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,1288,"    return Node.newString(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,58,5,0.00084,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,608,"    return new StringNode(Token.STRING, str);
",6,0,0,1,2,1,0,2,0,8,41,5,0.00082,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,591,"        node.addChildToBack(transform(child));
",0,0,0,2,4,0,8,0,0,8,38,8,0.00053,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,592,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00053,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,286,"      composedGuards.addGuard(new DiagnosticGroupWarningsGuard(
",0,0,0,0,2,0,4,2,0,6,57,7,0.00037,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,57,95,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00037,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,57,106,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00037,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,57,149,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00036,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,57,45,"    return !level.isOn() && group.isSubGroup(otherGroup);
",0,1,0,2,4,1,10,0,0,12,53,4,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,57,58,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,57,144,"      } else if (guard.disables(group)) {
",0,0,0,2,6,0,6,0,0,6,35,8,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,57,147,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00034,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,57,152,"          annotateCalls(n);
",0,0,0,1,2,0,4,0,0,4,17,7,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,57,153,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,57,176,"      Preconditions.checkState(n.getType() == Token.CALL);
",4,1,0,2,4,0,8,0,0,13,52,6,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,57,180,"      Node first = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,5,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,57,181,"      if (!NodeUtil.isGet(first)) {
",0,0,0,2,5,0,6,0,0,7,29,5,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,57,187,"      if (first.getType() == Token.NAME &&
",4,2,0,1,3,0,4,0,0,10,36,5,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/PrepareAst,57,191,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,57,184,"        return processFunctionCall((FunctionCall) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.00033,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,1139,"        return Token.CALL;
",4,0,0,0,0,1,0,0,0,4,18,6,0.00033,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,1946,"      return left + ""."" + getLastChild().getString();
",2,1,0,2,4,1,4,0,0,8,47,7,0.00030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,1942,"      String left = getFirstChild().getQualifiedName();
",2,0,0,2,4,0,4,2,0,8,49,7,0.00030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,1943,"      if (left == null) {
",2,1,0,1,3,0,0,0,0,3,19,7,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,57,1511,"    return n.getType() == Token.GETPROP
",4,1,0,1,2,1,4,0,0,9,35,5,0.00030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,1941,"    } else if (type == Token.GETPROP) {
",6,1,0,1,4,0,0,0,0,7,35,5,0.00030,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,588,"      Node node = newNode(transformTokenType(callNode.getType()),
",2,0,0,2,5,0,8,2,0,12,59,5,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,590,"      for (AstNode child : callNode.getArguments()) {
",2,0,0,2,5,0,4,2,0,8,47,5,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,594,"      int leftParamPos = callNode.getAbsolutePosition() + callNode.getLp();
",2,1,0,2,4,0,8,0,0,11,69,6,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,595,"      node.setLineno(callNode.getLineno());
",0,0,0,2,4,0,8,0,0,8,37,6,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,596,"      node.setCharno(position2charno(leftParamPos));
",0,0,0,2,4,0,8,0,0,8,46,6,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,597,"      maybeSetLengthFrom(node, callNode);
",0,0,0,1,2,0,6,0,0,6,35,6,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,598,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00029,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/ParserRunner,57,78,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00029,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,1940,"      return getString();
",0,0,0,1,2,1,2,0,0,2,19,7,0.00027,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,1939,"    if (type == Token.NAME) {
",6,1,0,1,3,0,0,0,0,7,25,4,0.00027,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,1276,"    return new Node(type, child1).clonePropsFrom(templateNode);
",4,0,0,2,4,1,4,2,0,10,59,5,0.00026,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1308,"    if (options == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1313,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,824,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,57,233,"        return processPropertyGet((PropertyGet) node);
",2,0,0,2,4,1,2,2,0,6,46,6,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,401,"        ret = transformNameAsString((Name)n);
",4,0,0,2,4,0,2,2,0,9,37,7,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,732,"        return newStringNode(Token.STRING, nameNode.getIdentifier());
",4,0,0,2,4,1,6,0,0,10,61,8,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,274,"    Node irNode = transformDispatcher.processName(node, true);
",2,0,0,1,2,0,6,2,0,11,58,4,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,275,"    JSDocInfo jsDocInfo = handleJsDoc(node, irNode);
",2,0,0,1,2,0,6,2,0,10,48,4,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,276,"    if (jsDocInfo != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,279,"    setSourceInfo(irNode, node);
",0,0,0,1,2,0,6,0,0,6,28,5,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,280,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,400,"      if (n instanceof Name) {
",2,0,0,1,3,0,0,2,0,4,24,6,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,409,"      Preconditions.checkState(ret.getType() == Token.STRING);
",4,1,0,2,4,0,8,0,0,13,56,6,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,410,"      return ret;
",2,0,0,0,0,1,0,0,0,2,11,5,0.00025,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,1280,"    return new Node(type, child1, child2).clonePropsFrom(templateNode);
",6,0,0,2,4,1,4,2,0,12,67,5,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,462,"  public Node(int nodeType, Node child) {
",6,0,0,1,3,1,0,2,0,9,39,2,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,463,"    Preconditions.checkArgument(child.parent == null,
",4,1,0,0,1,0,4,0,0,9,49,5,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,465,"    Preconditions.checkArgument(child.next == null,
",4,1,0,0,1,0,4,0,0,9,47,5,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,468,"    type = nodeType;
",4,0,0,0,0,0,0,0,0,5,16,4,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,469,"    parent = null;
",2,0,0,0,0,0,0,0,0,3,14,4,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,470,"    first = last = child;
",6,0,0,0,0,0,0,0,0,8,21,4,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,471,"    child.next = null;
",4,0,0,0,0,0,0,0,0,5,18,4,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,472,"    child.parent = this;
",4,0,0,0,0,0,0,0,0,5,20,4,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,473,"    sourcePosition = -1;
",2,0,0,0,0,0,0,0,0,4,20,4,0.00020,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,474,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00020,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,561,"      Node node = newNode(transformTokenType(statementNode.getType()));
",2,0,0,3,6,0,8,2,0,12,65,5,0.00019,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,562,"      node.addChildToBack(transform(statementNode.getExpression()));
",0,0,0,3,6,0,10,0,0,10,62,6,0.00019,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,563,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.00019,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,57,202,"          return processExpressionStatement((ExpressionStatement) node);
",2,0,0,2,4,1,2,2,0,6,62,8,0.00019,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,1253,"        return Token.EXPR_RESULT;
",4,0,0,0,0,1,0,0,0,4,25,6,0.00019,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,57,201,"        if (node instanceof ExpressionStatement) {
",2,0,0,1,3,0,0,2,0,4,42,6,0.00019,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,476,"  public Node(int nodeType, Node left, Node right) {
",8,0,0,1,3,1,0,4,0,13,50,2,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,477,"    Preconditions.checkArgument(left.parent == null,
",4,1,0,0,1,0,4,0,0,9,48,5,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,479,"    Preconditions.checkArgument(left.next == null,
",4,1,0,0,1,0,4,0,0,9,46,5,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,481,"    Preconditions.checkArgument(right.parent == null,
",4,1,0,0,1,0,4,0,0,9,49,5,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,483,"    Preconditions.checkArgument(right.next == null,
",4,1,0,0,1,0,4,0,0,9,47,5,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,485,"    type = nodeType;
",4,0,0,0,0,0,0,0,0,5,16,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,486,"    parent = null;
",2,0,0,0,0,0,0,0,0,3,14,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,487,"    first = left;
",4,0,0,0,0,0,0,0,0,5,13,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,488,"    last = right;
",4,0,0,0,0,0,0,0,0,5,13,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,489,"    left.next = right;
",6,0,0,0,0,0,0,0,0,7,18,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,490,"    left.parent = this;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,491,"    right.next = null;
",4,0,0,0,0,0,0,0,0,5,18,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,492,"    right.parent = this;
",4,0,0,0,0,0,0,0,0,5,20,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,493,"    sourcePosition = -1;
",2,0,0,0,0,0,0,0,0,4,20,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,494,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,1079,"    switch (token) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,57,1849,"    return errorManager.getErrorCount();
",0,0,0,1,2,1,4,0,0,4,36,5,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,727,"      return processName(nameNode, false);
",0,0,0,1,2,1,4,0,0,5,36,6,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,734,"        if (isReservedKeyword(nameNode.getIdentifier())) {
",0,0,0,3,7,0,6,0,0,6,50,8,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,740,"        return newStringNode(Token.NAME, nameNode.getIdentifier());
",4,0,0,2,4,1,6,0,0,10,59,8,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,748,"      return reservedKeywords != null && reservedKeywords.contains(identifier);
",2,2,0,1,2,1,6,0,0,10,73,5,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,57,243,"        return processName((Name) node);
",2,0,0,2,4,1,2,2,0,6,32,6,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,731,"      if (asString) {
",2,0,0,1,3,0,0,0,0,2,15,5,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,57,1292,"    return Node.newString(type, value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,12,0,0,12,64,5,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,121,"    Node root = ast.getAstRoot(compiler);
",2,0,0,1,2,0,6,2,0,10,37,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,123,"    if (root != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,124,"      Preconditions.checkState(root.getType() == Token.SCRIPT);
",4,1,0,2,4,0,8,0,0,13,57,7,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,125,"      Preconditions.checkNotNull(root.getInputId());
",0,0,0,2,4,0,8,0,0,8,46,7,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,127,"    return root;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/Node,57,640,"    return last;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00017,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,57,61,"    return id.hashCode();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,99,"    return id;
",2,0,0,0,0,1,0,0,0,2,10,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/JsAst,57,70,"    return inputId;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/JsAst,57,75,"    return sourceFile;
",2,0,0,0,0,1,0,0,0,2,18,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,57,194,"    isExternFile = newVal;
",4,0,0,0,0,0,0,0,0,5,22,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,57,195,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,70,"    this(ast, ast.getInputId(), isExtern);
",4,0,0,2,4,0,4,0,0,8,38,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,71,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,84,"      ast.getSourceFile().setIsExtern(isExtern);
",0,0,0,2,4,0,8,0,0,8,42,7,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,89,"    this(file, false);
",2,0,0,1,2,0,0,0,0,3,18,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,90,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,93,"    this(new JsAst(file), isExtern);
",4,0,0,2,4,0,0,2,0,6,32,4,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,94,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,77,"  public CompilerInput(SourceAst ast, InputId inputId, boolean isExtern) {
",8,0,0,1,3,1,0,4,0,13,72,2,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,57,54,"  private final Set<String> provides = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,55,2,0.00017,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,421,"        Node c = transform(child);
",2,0,0,1,2,0,4,2,0,8,26,7,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,422,"        node.addChildToBack(c);
",0,0,0,1,2,0,6,0,0,6,23,8,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,423,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,200,"          Node lhs = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,29,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,201,"          Node rhs = lhs.getNext();
",2,0,0,1,2,0,4,2,0,8,25,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,202,"          if (NodeUtil.isVar(lhs)) {
",0,0,0,2,5,0,6,0,0,6,26,8,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,206,"            addToSetIfLocal(lhs, kill);
",0,0,0,1,2,0,6,0,0,6,27,8,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,415,"      if (literalNode.isDestructuring()) {
",0,0,0,2,5,0,4,0,0,4,36,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,419,"      Node node = newNode(Token.ARRAYLIT);
",6,0,0,1,2,0,2,2,0,10,36,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,420,"      for (AstNode child : literalNode.getElements()) {
",2,0,0,2,5,0,4,2,0,8,49,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,424,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,568,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,146,"        return processArrayLiteral((ArrayLiteral) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,219,"          return processForInLoop((ForInLoop) node);
",2,0,0,2,4,1,2,2,0,6,42,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,420,"      Node item = forNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,421,"      Node collection = item.getNext();
",2,0,0,1,2,0,4,2,0,8,33,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,422,"      Node body = collection.getNext();
",2,0,0,1,2,0,4,2,0,8,33,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,424,"      createEdge(forNode, Branch.ON_TRUE, computeFallThrough(body));
",4,0,0,2,4,0,8,0,0,12,62,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,426,"      createEdge(forNode, Branch.ON_FALSE,
",4,0,0,0,1,0,4,0,0,8,36,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,428,"      connectToPossibleExceptionHandler(forNode, collection);
",0,0,0,1,2,0,6,0,0,6,55,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,731,"          return parent;
",2,0,0,0,0,1,0,0,0,2,14,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,792,"          return n;
",2,0,0,0,0,1,0,0,0,2,9,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,547,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,231,"        return processElementGet((ElementGet) node);
",2,0,0,2,4,1,2,2,0,6,44,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,195,"        if (!NodeUtil.isForIn(n)) {
",0,0,0,2,5,0,6,0,0,7,27,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,218,"        if (node instanceof ForInLoop) {
",2,0,0,1,3,0,0,2,0,4,32,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,254,"          return n == parent.getLastChild();
",2,1,0,1,2,1,4,0,0,7,34,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,307,"        handleFor(n);
",0,0,0,1,2,0,4,0,0,4,13,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,308,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,396,"    if (forNode.getChildCount() == 4) {
",0,1,0,2,5,0,4,0,0,5,35,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,430,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,730,"        if (NodeUtil.isForIn(parent)) {
",0,0,0,2,5,0,6,0,0,6,31,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,791,"        if (NodeUtil.isForIn(n)) {
",0,0,0,2,5,0,6,0,0,6,26,6,0.10000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,496,"  public Node(int nodeType, Node left, Node mid, Node right) {
",10,0,0,1,3,1,0,6,0,17,60,2,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,497,"    Preconditions.checkArgument(left.parent == null);
",4,1,0,1,2,0,4,0,0,9,49,5,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,498,"    Preconditions.checkArgument(left.next == null);
",4,1,0,1,2,0,4,0,0,9,47,5,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,499,"    Preconditions.checkArgument(mid.parent == null);
",4,1,0,1,2,0,4,0,0,9,48,5,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,500,"    Preconditions.checkArgument(mid.next == null);
",4,1,0,1,2,0,4,0,0,9,46,5,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,501,"    Preconditions.checkArgument(right.parent == null);
",4,1,0,1,2,0,4,0,0,9,50,5,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,502,"    Preconditions.checkArgument(right.next == null);
",4,1,0,1,2,0,4,0,0,9,48,5,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,503,"    type = nodeType;
",4,0,0,0,0,0,0,0,0,5,16,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,504,"    parent = null;
",2,0,0,0,0,0,0,0,0,3,14,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,505,"    first = left;
",4,0,0,0,0,0,0,0,0,5,13,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,506,"    last = right;
",4,0,0,0,0,0,0,0,0,5,13,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,507,"    left.next = mid;
",6,0,0,0,0,0,0,0,0,7,16,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,508,"    left.parent = this;
",4,0,0,0,0,0,0,0,0,5,19,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,509,"    mid.next = right;
",6,0,0,0,0,0,0,0,0,7,17,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,510,"    mid.parent = this;
",4,0,0,0,0,0,0,0,0,5,18,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,511,"    right.next = null;
",4,0,0,0,0,0,0,0,0,5,18,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,512,"    right.parent = this;
",4,0,0,0,0,0,0,0,0,5,20,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,513,"    sourcePosition = -1;
",2,0,0,0,0,0,0,0,0,4,20,4,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,514,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,1284,"    return new Node(type, child1, child2, child3).clonePropsFrom(templateNode);
",8,0,0,2,4,1,4,2,0,14,75,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,697,"      return newStringNode(Token.LABEL_NAME, labelNode.getName());
",4,0,0,2,4,1,6,0,0,10,60,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,702,"      Node node = newNode(Token.LABEL);
",6,0,0,1,2,0,2,2,0,10,33,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,703,"      Node prev = null;
",2,0,0,0,0,0,0,2,0,4,17,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,704,"      Node cur = node;
",4,0,0,0,0,0,0,2,0,6,16,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,705,"      for (Label label : statementNode.getLabels()) {
",2,0,0,2,5,0,4,2,0,8,47,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,706,"        if (prev != null) {
",2,1,0,1,3,0,0,0,0,3,19,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,709,"        cur.addChildToBack(transform(label));
",0,0,0,2,4,0,8,0,0,8,37,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,711,"        cur.setLineno(label.getLineno());
",0,0,0,2,4,0,8,0,0,8,33,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,712,"        maybeSetLengthFrom(cur, label);
",0,0,0,1,2,0,6,0,0,6,31,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,714,"        int clauseAbsolutePosition =
",2,0,0,0,0,0,0,0,0,2,28,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,716,"        cur.setCharno(clauseAbsolutePosition);
",0,0,0,1,2,0,6,0,0,6,38,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,718,"        prev = cur;
",4,0,0,0,0,0,0,0,0,5,11,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,719,"        cur = newNode(Token.LABEL);
",6,0,0,1,2,0,2,0,0,9,27,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,720,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,721,"      prev.addChildToBack(transform(statementNode.getStatement()));
",0,0,0,3,6,0,10,0,0,10,61,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,722,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,203,"        } else  if (node instanceof LabeledStatement) {
",2,0,0,1,4,0,0,2,0,4,47,7,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,204,"          return processLabeledStatement((LabeledStatement) node);
",2,0,0,2,4,1,2,2,0,6,56,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,239,"        return processLabel((Label) node);
",2,0,0,2,4,1,2,2,0,6,34,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,350,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,796,"        return computeFallThrough(n.getLastChild());
",0,0,0,2,4,1,6,0,0,6,44,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,1323,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,1324,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,1326,"    if (inputsById == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,1327,"      inputsById = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,31,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,1329,"    inputsById.put(input.getInputId(), input);
",0,0,0,2,4,0,10,0,0,10,42,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,1330,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,268,"          return n != parent.getFirstChild();
",2,1,0,1,2,1,4,0,0,7,35,7,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,859,"      return processGeneric(scopeNode);
",0,0,0,1,2,1,4,0,0,4,33,6,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,173,"        } else  if (node instanceof Scope) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,174,"          return processScope((Scope) node);
",2,0,0,2,4,1,2,2,0,6,34,9,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,316,"        List<L> values = new ArrayList<L>(inNodes.size());
",2,0,0,2,4,0,4,8,0,14,50,9,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,317,"        for (DiGraphNode<N, Branch> currentNode : inNodes) {
",4,0,0,1,3,0,0,6,0,10,52,9,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,318,"          FlowState<L> currentNodeState = currentNode.getAnnotation();
",2,0,0,1,2,0,4,4,0,10,60,11,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,319,"          values.add(currentNodeState.getIn());
",0,0,0,2,4,0,8,0,0,8,37,12,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,320,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,321,"        state.setOut(joinOp.apply(values));
",0,0,0,2,4,0,10,0,0,10,35,10,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,56,"      LiveVariableLattice result = new LiveVariableLattice(in.get(0));
",2,0,0,2,4,0,4,4,0,10,64,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,57,"      for (int i = 1; i < in.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,37,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,58,"        result.liveSet.or(in.get(i).liveSet);
",6,0,0,2,4,0,8,0,0,14,37,8,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,60,"      return result;
",2,0,0,0,0,1,0,0,0,2,14,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,203,"    Node irNode = transform(node);
",2,0,0,1,2,0,4,2,0,8,30,4,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,204,"    if (irNode.getType() != Token.BLOCK) {
",4,1,0,2,5,0,4,0,0,9,38,4,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,216,"    return irNode;
",2,0,0,0,0,1,0,0,0,2,14,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,2006,"    Node child = first;
",4,0,0,0,0,0,0,2,0,6,19,4,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,2007,"    if (child != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,2008,"      removeChild(child);
",0,0,0,1,2,0,4,0,0,4,19,7,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,2010,"    return child;
",2,0,0,0,0,1,0,0,0,2,13,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,58,1681,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,58,1613,"    return n.getType() == Token.FOR
",4,1,0,1,2,1,4,0,0,9,31,5,0.02000,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,504,"      createEdge(node, Branch.UNCOND, computeFollowNode(node, this));
",4,0,0,2,4,0,8,0,0,12,63,7,0.01724,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,785,"        first = first.next;
",6,0,0,0,0,0,0,0,0,7,19,5,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,1008,"        node.addChildToBack(transform(initializerNode.getInitializer()));
",0,0,0,3,6,0,10,0,0,10,65,8,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,1009,"        node.setLineno(node.getLineno());
",0,0,0,2,4,0,8,0,0,8,33,8,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,1010,"        maybeSetLengthFrom(node, initializerNode);
",0,0,0,1,2,0,6,0,0,6,42,8,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,58,115,"    return parameter.getString().startsWith(OPTIONAL_ARG_PREFIX);
",0,0,0,2,4,1,8,0,0,8,61,5,0.01449,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,58,120,"    return VAR_ARGS_NAME.equals(parameter.getString());
",0,0,0,2,4,1,8,0,0,8,51,5,0.01449,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,649,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01299,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,58,1540,"    return n.getType() == Token.VAR;
",4,1,0,1,2,1,4,0,0,9,32,4,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,58,131,"    return super.isExported(name, local) ||
",6,1,0,1,2,1,0,0,0,7,39,4,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,58,31,"public class GoogleCodingConvention extends ClosureCodingConvention {
",2,0,0,0,1,1,0,2,0,5,69,1,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/GoogleCodingConvention,58,39,"  private static final Pattern ENUM_KEY_PATTERN =
",2,0,0,0,0,3,0,2,0,7,47,2,0.01111,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,286,"      composedGuards.addGuard(new DiagnosticGroupWarningsGuard(
",0,0,0,0,2,0,4,2,0,6,57,7,0.01087,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,184,"    this((PrintStream) null);
",0,0,0,2,4,0,0,2,0,2,25,6,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,185,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,232,"        setErrorManager(
",0,0,0,0,1,0,2,0,0,2,16,9,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,245,"    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
",4,0,0,2,6,0,4,0,0,8,60,6,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,247,"    } else if (!options.checkTypes) {
",4,0,0,1,4,0,0,0,0,5,33,6,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,251,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,58,149,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,58,95,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,58,106,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,58,37,"  public LoggerErrorManager(MessageFormatter formatter, Logger logger) {
",6,0,0,1,3,1,0,4,0,11,70,2,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,58,38,"    this.formatter = formatter;
",4,0,0,0,0,0,0,0,0,5,27,4,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,58,39,"    this.logger = logger;
",4,0,0,0,0,0,0,0,0,5,21,4,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/LoggerErrorManager,58,40,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01075,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,1768,"          mode = Config.LanguageMode.ECMASCRIPT3;
",8,0,0,0,0,0,0,0,0,9,39,7,0.01042,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,58,1769,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01042,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,140,"        reservedKeywords = null;
",2,0,0,0,0,0,0,0,0,3,24,5,0.01042,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,141,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01042,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,572,"      Var var = i.next();
",2,0,0,1,2,0,4,2,0,8,19,6,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,573,"      if (var.getParentNode().getType() == Token.CATCH ||
",4,2,0,2,5,0,6,0,0,12,51,6,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,577,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,204,"        continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,41,"final class ControlFlowAnalysis implements Callback, CompilerPass {
",2,0,0,0,1,1,0,4,0,7,67,1,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/ControlFlowAnalysis,58,75,"      return astPosition.get(a.getValue()) - astPosition.get(b.getValue());
",0,1,0,4,8,1,16,0,0,17,69,8,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/LiveVariablesAnalysis,58,266,"    Preconditions.checkState(NodeUtil.isName(node));
",0,0,0,2,4,0,10,0,0,10,48,5,0.01000,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,58,1008,"    return warningsGuard.disables(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,58,118,"    for (DiagnosticType type : group.getTypes()) {
",2,0,0,2,5,0,4,2,0,8,46,5,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,58,119,"      DiagnosticGroup singleton = DiagnosticGroup.forType(type);
",2,0,0,1,2,0,6,2,0,10,58,7,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,58,121,"      for (WarningsGuard guard : guards) {
",4,0,0,1,3,0,0,2,0,6,36,7,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,58,129,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,58,144,"      } else if (guard.disables(group)) {
",0,0,0,2,6,0,6,0,0,6,35,8,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/ComposeWarningsGuard,58,147,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,58,45,"    return !level.isOn() && group.isSubGroup(otherGroup);
",0,1,0,2,4,1,10,0,0,12,53,4,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroupWarningsGuard,58,58,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,61,"  private DiagnosticGroup(DiagnosticType type) {
",4,0,0,1,3,1,0,2,0,7,46,2,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,62,"    this.name = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,63,"    this.types = ImmutableSet.of(type);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,64,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,72,"    if (!singletons.containsKey(type)) {
",0,0,0,2,5,0,6,0,0,7,36,4,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,73,"      singletons.put(type, new DiagnosticGroup(type));
",2,0,0,2,4,0,6,2,0,10,48,7,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,75,"    return singletons.get(type);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,118,"    for (DiagnosticType type : group.types) {
",6,0,0,1,3,0,0,2,0,8,41,4,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,119,"      if (!matches(type)) {
",0,0,0,2,5,0,4,0,0,5,21,6,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroup,58,120,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,1296,"    return Node.newNumber(value).clonePropsFrom(templateNode);
",0,0,0,2,4,1,10,0,0,10,58,5,0.00952,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,758,"      return newNumberNode(literalNode.getNumber());
",0,0,0,2,4,1,6,0,0,6,46,6,0.00952,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,58,247,"        return processNumberLiteral((NumberLiteral) node);
",2,0,0,2,4,1,2,2,0,6,50,6,0.00952,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,600,"    return new NumberNode(number);
",2,0,0,1,2,1,0,2,0,4,30,5,0.00917,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,259,"      super(Token.NUMBER);
",4,0,0,1,2,0,0,0,0,4,20,6,0.00917,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,260,"      this.number = number;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00917,0,-1
defect4j,closure,com/google/javascript/rhino/Node,58,261,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00917,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultCodingConvention,58,72,"    return isExported(name, false) || isExported(name, true);
",0,1,0,2,4,1,8,0,0,11,57,4,0.00917,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,384,"        node.addChildToBack(transform((AstNode)child));
",2,0,0,3,6,0,6,2,0,10,47,8,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,58,385,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00877,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,58,585,"    return vars.size();
",0,0,0,1,2,1,4,0,0,4,19,5,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,333,"    Node n = s.getRootNode();
",2,0,0,1,2,0,4,2,0,8,25,4,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,334,"    if (n.getType() == Token.FUNCTION) {
",4,1,0,2,5,0,4,0,0,9,36,4,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,337,"      if (inputId == null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,338,"        inputId = NodeUtil.getInputId(n);
",2,0,0,1,2,0,6,0,0,9,33,8,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,340,"      sourceName = getSourceName(n);
",2,0,0,1,2,0,4,0,0,7,30,6,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,341,"      curNode = n;
",4,0,0,0,0,0,0,0,0,5,12,6,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,342,"      pushScope(s);
",0,0,0,1,2,0,4,0,0,4,13,7,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,344,"      Node args = n.getFirstChild().getNext();
",2,0,0,2,4,0,6,2,0,10,40,6,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,345,"      Node body = args.getNext();
",2,0,0,1,2,0,4,2,0,8,27,6,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,346,"      traverseBranch(args, n);
",0,0,0,1,2,0,6,0,0,6,24,7,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,347,"      traverseBranch(body, n);
",0,0,0,1,2,0,6,0,0,6,24,7,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,349,"      popScope();
",0,0,0,1,2,0,2,0,0,2,11,7,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,350,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,58,353,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,252,"    orderedWorkSet.clear();
",0,0,0,1,2,0,4,0,0,4,23,5,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,253,"    for (DiGraphNode<N, Branch> node : cfg.getDirectedGraphNodes()) {
",2,0,0,2,5,0,4,6,0,12,65,4,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/DataFlowAnalysis,58,254,"      node.setAnnotation(new FlowState<L>(createInitialEstimateLattice(),
",0,0,0,1,4,0,6,4,0,10,67,7,0.00862,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,170,"    return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,59,935,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,59,196,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/PrintStreamErrorManager,59,71,"        stream.format(""%d error(s), %d warning(s), %.1f%% typed%n"",
",0,0,0,2,5,0,4,0,0,5,59,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,59,284,"          } else if (NodeUtil.isGet(n.getFirstChild())) {
",0,0,0,3,8,0,8,0,0,8,47,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,59,287,"            Node obj = n.getFirstChild().getFirstChild();
",2,0,0,2,4,0,6,2,0,10,45,10,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MustBeReachingVariableDef,59,288,"            if (NodeUtil.isName(obj) && ""arguments"".equals(obj.getString())) {
",0,1,0,4,9,0,12,0,0,14,66,10,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,160,"    JSType returnType = ((FunctionType) scopeType).getReturnType();
",4,0,0,3,6,0,2,4,0,10,63,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,162,"    if (returnType == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,166,"    if (!isVoidOrUnknown(returnType)) {
",0,0,0,2,5,0,4,0,0,5,35,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,188,"    final JSType voidType =
",2,0,0,0,0,1,0,2,0,5,23,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,190,"    return voidType.isSubtype(returnType);
",0,0,0,1,2,1,6,0,0,6,38,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,198,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1102,"        callbacks.add(
",0,0,0,0,1,0,4,0,0,4,14,11,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,202,"        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
",8,0,0,1,2,0,6,0,0,14,72,9,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,203,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,1729,"      entries.add(new Entry(level, groupName));
",4,0,0,2,4,0,4,2,0,10,41,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,1730,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,1719,"      private Entry(CheckLevel level, String groupName) {
",6,0,0,1,3,1,0,4,0,11,51,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,1720,"        this.level = level;
",4,0,0,0,0,0,0,0,0,5,19,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,1721,"        this.groupName = groupName;
",4,0,0,0,0,0,0,0,0,5,27,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,1722,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,59,1715,"    private static class Entry {
",2,0,0,0,1,2,0,0,0,4,28,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,59,441,"        proxy.addValue((String) value);
",2,0,0,2,4,0,4,2,0,8,31,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,59,442,"        warningGuardSpec.add(level, (String) value);
",2,0,0,2,4,0,6,2,0,10,44,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,59,443,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroups,59,206,"    DiagnosticGroup group = forName(name);
",2,0,0,1,2,0,4,2,0,8,38,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroups,59,207,"    Preconditions.checkNotNull(group, ""No warning class for name: "" + name);
",2,1,0,1,2,0,6,0,0,10,72,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroups,59,208,"    options.setWarningLevel(group, level);
",0,0,0,1,2,0,8,0,0,8,38,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroups,59,209,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,156,"    if (isEmptyFunction(scope)) {
",0,0,0,2,5,0,4,0,0,4,29,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,179,"    return function.getChildCount() == 3 &&
",0,2,0,1,2,1,4,0,0,6,39,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1114,"      return new CheckAccessControls(compiler);
",2,0,0,1,2,1,0,2,0,4,41,9,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/DiagnosticGroups,59,63,"    return groupsByName.get(name);
",0,0,0,1,2,1,6,0,0,6,30,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,83,"        return !isLValue || value.getFirstChild().getType() == Token.THIS;
",6,2,0,2,4,1,6,0,0,15,66,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,59,192,"      Node assign = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,32,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,59,193,"      Node lhs = assign.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,59,195,"      if (!NodeUtil.isName(lhs)) {
",0,0,0,2,5,0,6,0,0,7,28,5,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1153,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1159,"          namespaceForChecks = new GlobalNamespace(compiler, jsRoot);
",6,0,0,1,2,0,0,2,0,9,59,13,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1160,"          new CheckGlobalNames(compiler, options.checkGlobalNamesLevel)
",6,0,0,1,2,0,0,2,0,8,61,16,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1162,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1153,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,263,"      checks.add(checkAccessControls);
",0,0,0,1,2,0,6,0,0,6,32,7,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,59,1100,"        interpreter = new ClosureReverseAbstractInterpreter(
",2,0,0,0,1,0,0,2,0,5,52,8,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,165,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,998,"      return new VariableReferenceCheck(
",0,0,0,0,1,1,0,2,0,2,34,10,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,67,"    this.namespace = namespace;
",4,0,0,0,0,0,0,0,0,5,27,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,68,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,236,"      checks.add(checkVariableReferences);
",0,0,0,1,2,0,6,0,0,6,36,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,267,"      checks.add(checkGlobalNames);
",0,0,0,1,2,0,6,0,0,6,29,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,110,"    Node assign = expr.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,35,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,111,"    Node parent = exprParent;
",4,0,0,0,0,0,0,2,0,6,25,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,112,"    Node next = expr.getNext();
",2,0,0,1,2,0,4,2,0,8,27,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,113,"    while (next != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,42,"        addVerboseWarnings(options);
",0,0,0,1,2,0,4,0,0,4,28,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,43,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,75,"    addDefaultWarnings(options);
",0,0,0,1,2,0,4,0,0,4,28,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,78,"    options.checkSuspiciousCode = true;
",4,0,0,0,0,0,0,0,0,6,35,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,79,"    options.checkGlobalThisLevel = CheckLevel.WARNING;
",8,0,0,0,0,0,0,0,0,9,50,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,80,"    options.checkSymbols = true;
",4,0,0,0,0,0,0,0,0,6,28,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,81,"    options.checkMissingReturn = CheckLevel.WARNING;
",8,0,0,0,0,0,0,0,0,9,48,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,88,"    options.checkTypes = true;
",4,0,0,0,0,0,0,0,0,6,26,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,89,"    options.checkGlobalNamesLevel = CheckLevel.WARNING;
",8,0,0,0,0,0,0,0,0,9,51,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,90,"    options.aggressiveVarCheck = CheckLevel.WARNING;
",8,0,0,0,0,0,0,0,0,9,48,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,91,"    options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,93,"    options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,59,95,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,59,2945,"        return locals.apply(value);
",0,0,0,1,2,1,6,0,0,6,27,6,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,36,"        collapseAssign(child.getFirstChild(), child, subtree);
",0,0,0,2,4,0,10,0,0,10,54,9,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,48,"    Node leftValue = assign.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,40,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,49,"    Node rightValue = leftValue.getNext();
",2,0,0,1,2,0,4,2,0,8,38,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,50,"    if (isCollapsibleValue(leftValue, true) &&
",0,1,0,1,3,0,4,0,0,6,42,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,53,"    } else if (isCollapsibleValue(rightValue, false) &&
",0,1,0,1,4,0,4,0,0,6,51,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,56,"    } else if (rightValue.getType() == Token.ASSIGN) {
",4,1,0,2,6,0,4,0,0,9,50,6,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,60,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,77,"    switch (value.getType()) {
",0,0,0,2,5,0,4,0,0,4,26,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/ExploitAssigns,59,89,"        return NodeUtil.isImmutableValue(value);
",0,0,0,1,2,1,6,0,0,6,40,6,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,85,"  CheckMissingReturn(AbstractCompiler compiler, CheckLevel level) {
",6,0,0,1,3,0,0,4,0,10,65,2,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,86,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,87,"    this.level = level;
",4,0,0,0,0,0,0,0,0,5,19,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,88,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,38,"  static final DiagnosticType MISSING_RETURN_STATEMENT =
",2,0,0,0,0,2,0,2,0,6,54,2,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,46,"  private static final Predicate<Node> IS_RETURN = new Predicate<Node>() {
",2,0,0,1,3,3,0,8,0,13,72,2,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,56,"      GOES_THROUGH_TRUE_CONDITION_PREDICATE =
",2,0,0,0,0,0,0,0,0,2,39,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,92,"    JSType returnType = explicitReturnExpected(t.getScopeRoot());
",2,0,0,2,4,0,6,2,0,10,61,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,93,"    if (returnType == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,94,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,132,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,137,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,142,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,150,"    JSType scopeType = scope.getJSType();
",2,0,0,1,2,0,4,2,0,8,37,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,152,"    if (!(scopeType instanceof FunctionType)) {
",2,0,0,2,5,0,0,2,0,5,43,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,153,"      return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,57,"        new Predicate<DiGraphEdge<Node, ControlFlowGraph.Branch>>() {
",4,0,0,1,3,0,0,6,0,10,61,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckMissingReturn,59,46,"  private static final Predicate<Node> IS_RETURN = new Predicate<Node>() {
",2,0,0,1,3,3,0,8,0,13,72,2,0.05263,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,59,1392,"        return createOptionalType(
",0,0,0,0,1,1,2,0,0,2,26,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,59,256,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,7,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,155,"      compiler.report(t.makeError(n, GLOBAL_THIS));
",0,0,0,2,4,0,12,0,0,12,45,7,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,59,144,"        Node nameNode = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,7,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,59,145,"        Node valueNode = n.getLastChild();
",2,0,0,1,2,0,4,2,0,8,34,7,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,59,147,"        if (nameNode.isQualifiedName() &&
",0,1,0,1,3,0,4,0,0,5,33,7,0.04348,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,59,295,"      prototype.setImplicitPrototype(baseType);
",0,0,0,1,2,0,6,0,0,6,41,7,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,59,1151,"        FunctionType globalThisCtor =
",2,0,0,0,0,0,0,2,0,4,29,7,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,59,1153,"        globalThisCtor.getInstanceType().clearCachedValues();
",0,0,0,2,4,0,6,0,0,6,53,8,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,59,1154,"        globalThisCtor.getPrototype().clearCachedValues();
",0,0,0,2,4,0,6,0,0,6,50,8,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,59,1155,"        globalThisCtor
",0,0,0,0,0,0,2,0,0,2,14,8,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,1301,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,715,"        sharedCallbacks.add(new CheckGlobalThis(compiler));
",2,0,0,2,4,0,4,2,0,8,51,11,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,59,179,"        return formatter.formatWarning(this);
",0,0,0,1,2,1,4,0,0,4,37,6,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,163,"    if (assignLhsChild != null) {
",2,1,0,1,3,0,0,0,0,3,29,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,59,49,"        if (NodeUtil.isObjectLitKey(n, parent) &&
",0,1,0,1,3,0,8,0,0,9,41,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,1274,"    if (right.getType() == Token.STRING &&
",4,2,0,1,3,0,4,0,0,10,38,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,63,"    return format(warning, true);
",0,0,0,1,2,1,4,0,0,5,29,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,76,"      case WARNING: return maybeColorize(""WARNING"", Color.WARNING);
",6,0,0,1,2,1,2,0,0,9,61,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,102,"        return tryFoldGetProp(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,1268,"    Preconditions.checkArgument(n.getType() == Token.GETPROP);
",4,1,0,2,4,0,8,0,0,13,58,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,1270,"    if (left.getType() == Token.OBJECTLIT) {
",4,1,0,2,5,0,4,0,0,9,40,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,141,"          Node llhs = lhs.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,32,10,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,142,"          if (llhs.getType() == Token.GETPROP &&
",4,2,0,1,3,0,4,0,0,10,38,10,0.03448,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,137,"          if (lhs.getType() == Token.GETPROP &&
",4,2,0,1,3,0,4,0,0,10,37,10,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/PrintStreamErrorManager,59,58,"    stream.println(error.format(level, formatter));
",0,0,0,2,4,0,12,0,0,12,47,5,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/PrintStreamErrorManager,59,59,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/PrintStreamErrorManager,59,70,"      if (getTypedPercent() > 0.0) {
",0,1,0,2,5,0,2,0,0,3,30,6,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,59,830,"          if (checkForStateChangeHelper(
",0,0,0,0,2,0,2,0,0,2,30,9,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,59,837,"          if (isGet(assignTarget)) {
",0,0,0,2,5,0,4,0,0,4,26,8,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,59,842,"            Node current = assignTarget.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,44,9,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,59,843,"            if (evaluatesToLocalValue(current)) {
",0,0,0,2,5,0,4,0,0,4,37,10,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,59,852,"            while (isGet(current)) {
",0,0,0,2,5,0,4,0,0,4,24,10,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,59,856,"            return !isLiteralValue(current, true);
",0,0,0,1,2,1,4,0,0,6,38,9,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,59,91,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,167,"    for (Node c : n.children()) {
",2,0,0,2,5,0,4,2,0,8,29,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,170,"      if (c.getType() == Token.IF) {
",4,1,0,2,5,0,4,0,0,9,30,6,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,190,"      if (c == n.getLastChild()) {
",2,1,0,2,5,0,4,0,0,7,28,6,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,191,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,197,"    for (Node c = n.getLastChild(); c != null; c = n.getLastChild()) {
",6,1,0,3,7,0,8,2,0,18,66,4,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,198,"      tryMinimizeExits(c, exitType, labelName);
",0,0,0,1,2,0,8,0,0,8,41,7,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,200,"      if (c == n.getLastChild()) {
",2,1,0,2,5,0,4,0,0,7,28,6,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,201,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,204,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,115,"          blocksWithDeclarations.add(reference.getBasicBlock());
",0,0,0,2,4,0,8,0,0,8,54,10,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,116,"          isDeclaredInScope = true;
",2,0,0,0,0,0,0,0,0,4,25,9,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,117,"          hoistedFn = reference;
",4,0,0,0,0,0,0,0,0,5,22,9,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,118,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,127,"          continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,59,196,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,278,"      referenceStack.push(referencedNames);
",0,0,0,1,2,0,6,0,0,6,37,6,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,279,"      referencedNames = Sets.newHashSet();
",2,0,0,1,2,0,4,0,0,7,36,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,280,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,291,"      for (Iterator<Var> it = t.getScope().getVars(); it.hasNext();) {
",2,0,0,4,9,0,10,4,0,16,64,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,298,"      Set<String> current = referencedNames;
",4,0,0,0,0,0,0,4,0,8,38,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,299,"      referencedNames = referenceStack.pop();
",2,0,0,1,2,0,4,0,0,7,39,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,303,"      if (!referenceStack.isEmpty()) {
",0,0,0,2,5,0,4,0,0,5,32,5,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,306,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,369,"      if (NodeUtil.isReferenceName(node)) {
",0,0,0,2,5,0,6,0,0,6,37,6,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/MakeDeclaredNamesUnique,59,379,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,59,921,"        current = current.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,34,7,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,59,922,"        isPropAssign = true;
",2,0,0,0,0,0,0,0,0,4,20,7,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,59,924,"        if (current.getType() == Token.GETPROP &&
",4,2,0,1,3,0,4,0,0,10,41,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,59,978,"    return thisType;
",2,0,0,0,0,1,0,0,0,2,16,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/PassConfig,59,167,"    return new TypeCheck(
",0,0,0,0,1,1,0,2,0,2,21,7,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,59,89,"    this.typedPercent = typedPercent;
",4,0,0,0,0,0,0,0,0,5,33,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,59,90,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,136,"        if (NodeUtil.isGet(lhs)) {
",0,0,0,2,5,0,6,0,0,6,26,9,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1070,"      return new HotSwapCompilerPass() {
",0,0,0,1,3,1,0,2,0,2,34,10,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1073,"          Preconditions.checkNotNull(topScope);
",0,0,0,1,2,0,6,0,0,6,37,14,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1074,"          Preconditions.checkNotNull(getTypedScopeCreator());
",0,0,0,2,4,0,6,0,0,6,51,14,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1076,"          TypeCheck check = makeTypeCheck(compiler);
",2,0,0,1,2,0,4,2,0,8,42,13,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1077,"          check.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,29,14,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1078,"          compiler.getErrorManager().setTypedPercent(check.getTypedPercent());
",0,0,0,3,6,0,10,0,0,10,68,14,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1079,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1070,"      return new HotSwapCompilerPass() {
",0,0,0,1,3,1,0,2,0,2,34,10,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,59,335,"    reportMissingProperties = report;
",4,0,0,0,0,0,0,0,0,5,33,4,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,59,336,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,59,427,"      maybeThisType = ObjectType.cast(
",2,0,0,0,1,0,4,0,0,7,32,6,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,59,431,"      thisType = maybeThisType;
",4,0,0,0,0,0,0,0,0,5,25,6,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,59,432,"      thisType.setValidator(new ThisTypeValidator());
",0,0,0,2,4,0,4,2,0,6,47,7,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,59,182,"  private class ThisTypeValidator implements Predicate<JSType> {
",2,0,0,0,1,1,0,4,0,7,62,2,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,59,191,"      if (!type.restrictByNotNullOrUndefined().isSubtype(
",0,0,0,1,4,0,6,0,0,7,51,5,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,245,"      checks.add(resolveTypes.makeOneTimePass());
",0,0,0,2,4,0,8,0,0,8,43,7,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,246,"      checks.add(inferTypes.makeOneTimePass());
",0,0,0,2,4,0,8,0,0,8,41,7,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,247,"      if (options.checkTypes) {
",4,0,0,1,3,0,0,0,0,4,25,7,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,248,"        checks.add(checkTypes.makeOneTimePass());
",0,0,0,2,4,0,8,0,0,8,41,9,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,79,"        tryMinimizeExits(
",0,0,0,0,1,0,2,0,0,2,17,6,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,123,"      Node lhs = parent.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,6,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,124,"      Node rhs = lhs.getNext();
",2,0,0,1,2,0,4,2,0,8,25,6,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,126,"      if (n == lhs) {
",4,1,0,1,3,0,0,0,0,5,15,6,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,130,"        if (assignLhsChild == null) {
",2,1,0,1,3,0,0,0,0,3,29,8,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,131,"          assignLhsChild = lhs;
",4,0,0,0,0,0,0,0,0,5,21,10,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,158,"      assignLhsChild = null;
",2,0,0,0,0,0,0,0,0,3,22,6,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckAccessControls,59,212,"    return type;
",2,0,0,0,0,1,0,0,0,2,12,4,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,59,232,"          return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,139,"          for (BasicBlock declaredBlock : blocksWithDeclarations) {
",4,0,0,1,3,0,0,2,0,6,57,9,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,188,"          blocksWithDeclarations.add(basicBlock);
",0,0,0,1,2,0,6,0,0,6,39,10,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,189,"          isDeclaredInScope = true;
",2,0,0,0,0,0,0,0,0,4,25,9,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,76,"      b.append(error.sourceName);
",4,0,0,1,2,0,4,0,0,8,27,7,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,77,"      if (error.lineNumber > 0) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,78,"        b.append(':');
",0,0,0,1,2,0,4,0,0,5,14,9,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,79,"        b.append(error.lineNumber);
",4,0,0,1,2,0,4,0,0,8,27,9,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,81,"      b.append("": "");
",0,0,0,1,2,0,4,0,0,5,15,7,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,116,"    if (matchingExitNode(n, exitType, labelName)) {
",0,0,0,2,5,0,8,0,0,8,47,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,123,"    if (n.getType() == Token.IF) {
",4,1,0,2,5,0,4,0,0,9,30,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,134,"    if (n.getType() == Token.TRY) {
",4,1,0,2,5,0,4,0,0,9,31,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,151,"    if (n.getType() == Token.LABEL) {
",4,1,0,2,5,0,4,0,0,9,33,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,159,"    if (n.getType() != Token.BLOCK || n.getLastChild() == null) {
",4,3,0,3,7,0,8,0,0,15,61,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,160,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,284,"    if (n.getType() == type) {
",2,1,0,2,5,0,4,0,0,7,26,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/MinimizeExitPoints,59,297,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,59,553,"      return NodeUtil.isHoistedFunctionDeclaration(getParent());
",0,0,0,2,4,1,6,0,0,6,58,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,62,"      CheckLevel checkLevel) {
",2,0,0,0,2,0,0,2,0,4,24,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,59,"  private final Set<BasicBlock> blocksWithDeclarations = Sets.newHashSet();
",2,0,0,1,2,2,4,4,0,12,73,2,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,63,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,64,"    this.checkLevel = checkLevel;
",4,0,0,0,0,0,0,0,0,5,29,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,65,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,69,"    ReferenceCollectingCallback callback = new ReferenceCollectingCallback(
",2,0,0,0,1,0,0,4,0,6,71,4,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,71,"    callback.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,32,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,72,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,40,"class VariableReferenceCheck implements HotSwapCompilerPass {
",2,0,0,0,1,0,0,2,0,4,61,1,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,85,"  private class ReferenceCheckingBehavior implements Behavior {
",2,0,0,0,1,1,0,2,0,5,61,2,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,94,"      for (Iterator<Var> it = t.getScope().getVars(); it.hasNext();) {
",2,0,0,4,9,0,10,4,0,16,64,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,95,"        Var v = it.next();
",2,0,0,1,2,0,4,2,0,8,18,7,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,96,"        checkVar(t, v, referenceMap.getReferences(v).references);
",2,0,0,2,4,0,12,0,0,14,57,8,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,97,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,107,"      blocksWithDeclarations.clear();
",0,0,0,1,2,0,4,0,0,4,31,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,108,"      boolean isDeclaredInScope = false;
",2,0,0,0,0,0,0,0,0,3,34,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,109,"      boolean isUnhoistedNamedFunction = false;
",2,0,0,0,0,0,0,0,0,3,41,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,110,"      Reference hoistedFn = null;
",2,0,0,0,0,0,0,2,0,4,27,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,113,"      for (Reference reference : references) {
",4,0,0,1,3,0,0,2,0,6,40,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,114,"        if (reference.isHoistedFunction()) {
",0,0,0,2,5,0,4,0,0,4,36,8,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,119,"        } else if (NodeUtil.isFunctionDeclaration(
",0,0,0,0,3,0,4,0,0,4,42,9,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,123,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,125,"      for (Reference reference : references) {
",4,0,0,1,3,0,0,2,0,6,40,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,126,"        if (reference == hoistedFn) {
",4,1,0,1,3,0,0,0,0,5,29,7,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,130,"        BasicBlock basicBlock = reference.getBasicBlock();
",2,0,0,1,2,0,4,2,0,8,50,7,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,131,"        boolean isDeclaration = reference.isDeclaration();
",2,0,0,1,2,0,4,0,0,6,50,8,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,133,"        boolean allowDupe =
",2,0,0,0,0,0,0,0,0,2,19,8,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,136,"        if (isDeclaration && !allowDupe) {
",4,1,0,1,3,0,0,0,0,6,34,7,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,151,"        if (isUnhoistedNamedFunction && !isDeclaration && isDeclaredInScope) {
",6,1,0,1,3,0,0,0,0,8,70,7,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,165,"        if (!isDeclaration && !isDeclaredInScope) {
",4,1,0,1,3,0,0,0,0,7,43,7,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,187,"        if (isDeclaration) {
",2,0,0,1,3,0,0,0,0,2,20,7,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,191,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/VariableReferenceCheck,59,192,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,59,56,"      println(message.level, message.error);
",8,0,0,1,2,0,2,0,0,10,38,7,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,59,57,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,59,174,"    switch (level) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,59,43,"        return tryFoldAssignment(subtree);
",0,0,0,1,2,1,4,0,0,4,34,6,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,59,118,"    Preconditions.checkState(subtree.getType() == Token.ASSIGN);
",4,1,0,2,4,0,8,0,0,13,60,5,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,59,119,"    Node left = subtree.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,59,120,"    Node right = subtree.getLastChild();
",2,0,0,1,2,0,4,2,0,8,36,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,59,122,"    if (left.getType() == Token.NAME
",4,1,0,1,3,0,4,0,0,9,32,6,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,59,129,"    return subtree;
",2,0,0,0,0,1,0,0,0,2,15,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,243,"    int numExtraArgs = highestIndex - numNamedParameter + 1;
",6,2,0,0,0,0,0,0,0,8,56,5,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,246,"    String[] argNames = new String[numExtraArgs];
",2,0,1,2,4,0,0,4,0,8,45,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,250,"    for (int i = 0; i < numExtraArgs; i++) {
",8,1,0,1,3,0,0,0,0,10,40,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,258,"    for (Node ref : currentArgumentsAccess) {
",4,0,0,1,3,0,0,2,0,6,41,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,289,"    return changed;
",2,0,0,0,0,1,0,0,0,2,15,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,59,174,"    switch (level) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,59,184,"      if (s.getParent().isGlobal()) {
",0,0,0,3,7,0,6,0,0,6,31,6,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/ShadowVariables,59,185,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceExcerptProvider,59,36,"        return formatter.formatLine(
",0,0,0,0,1,1,4,0,0,4,28,8,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,64,"    Color(String controlCharacter) {
",4,0,0,1,3,0,0,2,0,6,32,3,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,65,"      this.controlCharacter = controlCharacter;
",4,0,0,0,0,0,0,0,0,5,41,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,66,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,58,"    ERROR(""\033[31m""),
",2,0,0,1,3,0,0,0,0,3,18,3,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,59,"    WARNING(""\033[35m""),
",2,0,0,1,3,0,0,0,0,3,20,3,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,60,"    RESET(""\033[39m"");
",2,0,0,1,3,0,0,0,0,3,18,3,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,57,"  private static enum Color {
",2,0,0,0,1,2,0,0,0,4,27,2,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,68,"    SourceExcerptProvider source = getSource();
",2,0,0,1,2,0,2,2,0,6,43,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,69,"    String sourceExcerpt = source == null ? null :
",4,1,0,0,0,0,0,2,0,7,46,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,74,"    StringBuilder b = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,75,"    if (error.sourceName != null) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,84,"    b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
",10,0,0,2,4,0,6,0,0,16,72,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,85,"    b.append("" - "");
",0,0,0,1,2,0,4,0,0,5,16,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,87,"    b.append(error.description);
",4,0,0,1,2,0,4,0,0,8,28,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,88,"    b.append('\n');
",0,0,0,1,2,0,4,0,0,5,15,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,89,"    if (sourceExcerpt != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,110,"    return b.toString();
",0,0,0,1,2,1,4,0,0,4,20,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,44,"    return source;
",2,0,0,0,0,1,0,0,0,2,14,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,74,"    switch (level) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,82,"    if (!colorize) return text;
",4,0,0,1,2,1,0,0,0,5,27,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,59,122,"      return line;
",2,0,0,0,0,1,0,0,0,2,12,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractMessageFormatter,59,74,"    switch (level) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,79,"      checkDescendantNames(name, name.globalSets + name.localSets > 0);
",8,2,0,1,2,0,4,0,0,14,65,7,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,80,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,92,"    if (name.props != null) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,108,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02222,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,59,1891,"    int total = nullCount + unknownCount + typedCount;
",8,1,0,0,0,0,0,0,0,9,50,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,59,1892,"    if (total == 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,59,1895,"      return (100.0 * typedCount) / total;
",4,2,0,1,2,1,0,0,0,6,36,6,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,447,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,111,"      Node gramps = parent.getParent();
",2,0,0,1,2,0,4,2,0,8,33,6,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,112,"      if (NodeUtil.isObjectLitKey(parent, gramps)) {
",0,0,0,2,5,0,8,0,0,8,46,7,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,59,65,"final class FunctionTypeBuilder {
",2,0,0,0,1,1,0,0,0,3,33,1,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,107,"    if (currentArgumentsAccess != null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,110,"    currentArgumentsAccess = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,47,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,111,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,126,"    if (tryReplaceArguments(traversal.getScope())) {
",0,0,0,3,7,0,6,0,0,6,48,5,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,135,"    if (!argumentsAccessStack.isEmpty()) {
",0,0,0,2,5,0,4,0,0,5,38,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,138,"      currentArgumentsAccess = null;
",2,0,0,0,0,0,0,0,0,3,30,6,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,140,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,166,"    if (NodeUtil.isName(node) && ARGUMENTS.equals(node.getString())) {
",0,1,0,4,9,0,14,0,0,15,66,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,169,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,180,"    Node parametersList = scope.getRootNode().getFirstChild().getNext();
",2,0,0,3,6,0,8,2,0,12,68,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,181,"    Preconditions.checkState(parametersList.getType() == Token.LP);
",4,1,0,2,4,0,8,0,0,13,63,5,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,185,"    boolean changed = false;
",2,0,0,0,0,0,0,0,0,3,24,5,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,189,"    int numNamedParameter = parametersList.getChildCount();
",2,0,0,1,2,0,4,0,0,6,55,5,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,194,"    int highestIndex = numNamedParameter - 1;
",4,1,0,0,0,0,0,0,0,5,41,5,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,59,198,"    for (Node ref : currentArgumentsAccess) {
",4,0,0,1,3,0,0,2,0,6,41,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,59,1942,"    if (options == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,59,1945,"    return errorManager;
",2,0,0,0,0,1,0,0,0,2,20,4,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,99,"      int pType = parent.getType();
",2,0,0,1,2,0,4,0,0,6,29,7,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,100,"      if (!(pType == Token.BLOCK ||
",6,5,0,0,2,0,0,0,0,12,29,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,57,"  CheckGlobalNames(AbstractCompiler compiler, CheckLevel level) {
",6,0,0,1,3,0,0,4,0,10,63,2,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,36,"  private GlobalNamespace namespace = null;
",2,0,0,0,0,1,0,2,0,5,41,2,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,58,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,59,"    this.level = level;
",4,0,0,0,0,0,0,0,0,5,19,4,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,60,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,74,"    if (namespace == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,78,"    for (Name name : namespace.getNameForest()) {
",2,0,0,2,5,0,4,2,0,8,45,4,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalNames,59,81,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,186,"      int parentType = parent.getType();
",2,0,0,1,2,0,4,0,0,6,34,7,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,59,187,"      if (parentType == Token.NAME || parentType == Token.ASSIGN) {
",12,3,0,1,3,0,0,0,0,15,61,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,59,225,"        checkProperty(t, n);
",0,0,0,1,2,0,6,0,0,6,20,9,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,59,244,"      if (n.getLastChild().getString().endsWith(""__"")) {
",0,0,0,4,9,0,8,0,0,9,50,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,59,249,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/PassConfig,59,66,"    internalScopeCreator = new TypedScopeCreator(compiler);
",4,0,0,1,2,0,0,2,0,7,55,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/PassConfig,59,67,"    typedScopeCreator = new MemoizedScopeCreator(internalScopeCreator);
",4,0,0,1,2,0,0,2,0,7,67,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/PassConfig,59,68,"    topScope = typedScopeCreator.createScope(root, null);
",2,0,0,1,2,0,6,0,0,9,53,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/PassConfig,59,69,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/PassConfig,59,154,"    return new TypeInferencePass(
",0,0,0,0,1,1,0,2,0,2,29,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,59,299,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,120,"        return tryFoldAssign(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,43,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,441,"    Preconditions.checkArgument(n.getType() == Token.ASSIGN);
",4,1,0,2,4,0,8,0,0,13,57,5,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,59,444,"    if (!right.hasChildren() ||
",0,1,0,1,3,0,4,0,0,6,27,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1017,"      return new GlobalTypeResolver(compiler);
",2,0,0,1,2,1,0,2,0,4,40,9,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,59,258,"    info = origVar.nameNode.getJSDocInfo();
",6,0,0,1,2,0,2,0,0,9,39,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,59,259,"    if (info == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,59,260,"      info = origParent.getJSDocInfo();
",2,0,0,1,2,0,4,0,0,7,33,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntacticScopeCreator,59,262,"    return (info != null && info.getSuppressions().contains(""duplicate""));
",2,2,0,3,6,1,6,0,0,11,70,5,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1027,"      return new HotSwapCompilerPass() {
",0,0,0,1,3,1,0,2,0,2,34,10,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1030,"          Preconditions.checkNotNull(topScope);
",0,0,0,1,2,0,6,0,0,6,37,14,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1031,"          Preconditions.checkNotNull(getTypedScopeCreator());
",0,0,0,2,4,0,6,0,0,6,51,14,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1033,"          makeTypeInference(compiler).process(externs, root);
",0,0,0,2,4,0,10,0,0,10,51,14,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1034,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1027,"      return new HotSwapCompilerPass() {
",0,0,0,1,3,1,0,2,0,2,34,10,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1130,"    GlobalTypeResolver(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,47,3,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1131,"      this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,5,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1132,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1136,"      if (topScope == null) {
",2,1,0,1,3,0,0,0,0,3,23,5,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1137,"        regenerateGlobalTypedScope(compiler, root.getParent());
",0,0,0,2,4,0,8,0,0,8,55,8,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,59,1141,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,59,1865,"      return input.getLine(lineNumber);
",0,0,0,1,2,1,6,0,0,6,33,7,0.01923,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,1500,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,1529,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,1542,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,60,159,"      return ""unknown"";
",0,0,0,0,0,1,0,0,0,1,17,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,2384,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,2385,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,2386,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,2387,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,60,158,"      if (!mayHaveSideEffects(n)) {
",0,0,0,2,5,0,4,0,0,5,29,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,136,"          return TernaryValue.FALSE;
",4,0,0,0,0,1,0,0,0,4,26,6,0.40000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,130,"        return subtree;
",2,0,0,0,0,1,0,0,0,2,15,8,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,138,"        if (functionNameString.equals(""parseInt"") ||
",0,1,0,1,3,0,4,0,0,6,44,8,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,240,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,228,"    } else if (NodeUtil.isFunctionExpression(name)) {
",0,0,0,2,6,0,6,0,0,6,49,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,238,"      return Lists.newArrayList(
",0,0,0,0,1,1,4,0,0,4,26,9,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,123,"        return TernaryValue.forBoolean(n.getString().length() > 0);
",0,1,0,3,6,1,10,0,0,11,59,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,226,"      checks.add(checkRegExp);
",0,0,0,1,2,0,6,0,0,6,24,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,341,"      passes.add(collapseProperties);
",0,0,0,1,2,0,6,0,0,6,31,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,364,"      passes.add(markPureFunctions);
",0,0,0,1,2,0,6,0,0,6,30,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,385,"      passes.add(checkConsts);
",0,0,0,1,2,0,6,0,0,6,24,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,398,"      passes.addAll(getCodeRemovingPasses());
",0,0,0,2,4,0,6,0,0,6,39,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,399,"      passes.add(smartNamePass);
",0,0,0,1,2,0,6,0,0,6,26,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,417,"      passes.add(crossModuleCodeMotion);
",0,0,0,1,2,0,6,0,0,6,34,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,426,"      passes.add(devirtualizePrototypeMethods);
",0,0,0,1,2,0,6,0,0,6,41,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,460,"      passes.add(crossModuleCodeMotion);
",0,0,0,1,2,0,6,0,0,6,34,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,464,"      passes.add(crossModuleMethodMotion);
",0,0,0,1,2,0,6,0,0,6,36,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,482,"        passes.add(removeUnusedVars);
",0,0,0,1,2,0,6,0,0,6,29,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,489,"      passes.add(smartNamePass2);
",0,0,0,1,2,0,6,0,0,6,27,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,493,"      passes.add(collapseAnonymousFunctions);
",0,0,0,1,2,0,6,0,0,6,39,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,516,"      passes.add(extractPrototypeMemberDeclarations);
",0,0,0,1,2,0,6,0,0,6,47,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,530,"      passes.add(gatherRawExports);
",0,0,0,1,2,0,6,0,0,6,29,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,544,"      passes.add(rewriteFunctionExpressions);
",0,0,0,1,2,0,6,0,0,6,39,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,558,"      passes.add(aliasKeywords);
",0,0,0,1,2,0,6,0,0,6,26,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,636,"      passes.add(inlineSimpleMethods);
",0,0,0,1,2,0,6,0,0,6,32,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,658,"      passes.add(optimizeCallsAndRemoveUnusedVars);
",0,0,0,1,2,0,6,0,0,6,45,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,688,"      passes.add(removeUnusedPrototypeProperties);
",0,0,0,1,2,0,6,0,0,6,44,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckGlobalThis,60,107,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1636,"      return new CrossModuleMethodMotion(
",0,0,0,0,1,1,0,2,0,2,35,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1081,"        boolean useNameReferenceGraph) {
",2,0,0,0,2,0,0,0,0,2,32,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1082,"      this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1083,"      this.reportPath = reportPath;
",4,0,0,0,0,0,0,0,0,5,29,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1084,"      this.useNameReferenceGraph = useNameReferenceGraph;
",4,0,0,0,0,0,0,0,0,5,51,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1085,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1089,"      DefinitionProvider definitionProvider = null;
",2,0,0,0,0,0,0,2,0,4,45,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1090,"      if (useNameReferenceGraph) {
",2,0,0,1,3,0,0,0,0,2,28,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1096,"        SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder(compiler);
",4,0,0,1,2,0,0,4,0,8,72,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1097,"        defFinder.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,33,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1098,"        definitionProvider = defFinder;
",4,0,0,0,0,0,0,0,0,5,31,7,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1101,"      PureFunctionIdentifier pureFunctionIdentifier =
",2,0,0,0,0,0,0,2,0,4,47,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1103,"      pureFunctionIdentifier.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,46,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1105,"      if (reportPath != null) {
",2,1,0,1,3,0,0,0,0,3,25,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,1114,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1428,"      return new PureFunctionIdentifier.Driver(
",4,0,0,0,1,1,0,0,0,4,41,11,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,387,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1383,"      return new DevirtualizePrototypeMethods(compiler);
",2,0,0,1,2,1,0,2,0,4,50,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1458,"          mode = InlineVariables.Mode.ALL;
",8,0,0,0,0,0,0,0,0,9,32,12,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1811,"      return new AliasKeywords(compiler);
",2,0,0,1,2,1,0,2,0,4,35,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1555,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1558,"          NameAnalyzer na = new NameAnalyzer(compiler, false);
",4,0,0,1,2,0,0,4,0,9,52,13,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1559,"          na.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,26,14,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1560,"          na.removeUnreferenced();
",0,0,0,1,2,0,4,0,0,4,24,14,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1561,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1555,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,60,"        applyFullCompilationOptions(options);
",0,0,0,1,2,0,4,0,0,4,37,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,61,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,130,"    options.closurePass = true;
",4,0,0,0,0,0,0,0,0,6,27,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,131,"    options.foldConstants = true;
",4,0,0,0,0,0,0,0,0,6,29,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,132,"    options.coalesceVariableNames = true;
",4,0,0,0,0,0,0,0,0,6,37,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,133,"    options.deadAssignmentElimination = true;
",4,0,0,0,0,0,0,0,0,6,41,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,134,"    options.extractPrototypeMemberDeclarations = true;
",4,0,0,0,0,0,0,0,0,6,50,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,135,"    options.collapseVariableDeclarations = true;
",4,0,0,0,0,0,0,0,0,6,44,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,136,"    options.convertToDottedProperties = true;
",4,0,0,0,0,0,0,0,0,6,41,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,137,"    options.rewriteFunctionExpressions = true;
",4,0,0,0,0,0,0,0,0,6,42,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,138,"    options.labelRenaming = true;
",4,0,0,0,0,0,0,0,0,6,29,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,139,"    options.removeDeadCode = true;
",4,0,0,0,0,0,0,0,0,6,30,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,140,"    options.optimizeArgumentsArray = true;
",4,0,0,0,0,0,0,0,0,6,38,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,141,"    options.collapseObjectLiterals = true;
",4,0,0,0,0,0,0,0,0,6,38,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,144,"    options.removeClosureAsserts = true;
",4,0,0,0,0,0,0,0,0,6,36,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,145,"    options.aliasKeywords = true;
",4,0,0,0,0,0,0,0,0,6,29,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,146,"    options.reserveRawExports = true;
",4,0,0,0,0,0,0,0,0,6,33,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,147,"    options.variableRenaming = VariableRenamingPolicy.ALL;
",8,0,0,0,0,0,0,0,0,9,54,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,148,"    options.shadowVariables = true;
",4,0,0,0,0,0,0,0,0,6,31,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,149,"    options.propertyRenaming = PropertyRenamingPolicy.ALL_UNQUOTED;
",8,0,0,0,0,0,0,0,0,9,63,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,150,"    options.removeUnusedPrototypeProperties = true;
",4,0,0,0,0,0,0,0,0,6,47,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,151,"    options.removeUnusedPrototypePropertiesInExterns = true;
",4,0,0,0,0,0,0,0,0,6,56,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,152,"    options.collapseAnonymousFunctions = true;
",4,0,0,0,0,0,0,0,0,6,42,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,153,"    options.collapseProperties = true;
",4,0,0,0,0,0,0,0,0,6,34,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,154,"    options.checkGlobalThisLevel = CheckLevel.WARNING;
",8,0,0,0,0,0,0,0,0,9,50,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,155,"    options.rewriteFunctionExpressions = true;
",4,0,0,0,0,0,0,0,0,6,42,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,156,"    options.smartNameRemoval = true;
",4,0,0,0,0,0,0,0,0,6,32,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,157,"    options.inlineConstantVars = true;
",4,0,0,0,0,0,0,0,0,6,34,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,158,"    options.inlineFunctions = true;
",4,0,0,0,0,0,0,0,0,6,31,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,159,"    options.inlineLocalFunctions = true;
",4,0,0,0,0,0,0,0,0,6,36,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,160,"    options.inlineGetters = true;
",4,0,0,0,0,0,0,0,0,6,29,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,161,"    options.inlineVariables = true;
",4,0,0,0,0,0,0,0,0,6,31,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,162,"    options.flowSensitiveInlineVariables = true;
",4,0,0,0,0,0,0,0,0,6,44,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,163,"    options.computeFunctionSideEffects = true;
",4,0,0,0,0,0,0,0,0,6,42,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,166,"    options.removeUnusedVars = true;
",4,0,0,0,0,0,0,0,0,6,32,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,167,"    options.removeUnusedLocalVars = true;
",4,0,0,0,0,0,0,0,0,6,37,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,170,"    options.crossModuleCodeMotion = true;
",4,0,0,0,0,0,0,0,0,6,37,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,171,"    options.crossModuleMethodMotion = true;
",4,0,0,0,0,0,0,0,0,6,39,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,174,"    options.devirtualizePrototypeMethods = true;
",4,0,0,0,0,0,0,0,0,6,44,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,175,"    options.optimizeParameters = true;
",4,0,0,0,0,0,0,0,0,6,34,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,176,"    options.optimizeReturns = true;
",4,0,0,0,0,0,0,0,0,6,31,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,177,"    options.optimizeCalls = true;
",4,0,0,0,0,0,0,0,0,6,29,4,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,180,"    options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JSDOC,
",4,0,0,0,1,0,4,0,0,8,60,5,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilationLevel,60,182,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1395,"      OptimizeCalls passes = new OptimizeCalls(compiler);
",4,0,0,1,2,0,0,4,0,8,51,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1396,"      if (options.optimizeReturns) {
",4,0,0,1,3,0,0,0,0,4,30,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1398,"        passes.addPass(new OptimizeReturns(compiler));
",2,0,0,2,4,0,4,2,0,8,46,11,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1401,"      if (options.optimizeParameters) {
",4,0,0,1,3,0,0,0,0,4,33,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1403,"        passes.addPass(new OptimizeParameters(compiler));
",2,0,0,2,4,0,4,2,0,8,49,11,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1406,"      if (options.optimizeCalls) {
",4,0,0,1,3,0,0,0,0,4,28,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1407,"        boolean removeOnlyLocals = options.removeUnusedLocalVars
",6,0,0,0,0,0,0,0,0,6,56,11,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1409,"        boolean preserveAnonymousFunctionNames =
",2,0,0,0,0,0,0,0,0,2,40,11,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1412,"        passes.addPass(
",0,0,0,0,1,0,4,0,0,4,15,11,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1416,"      return passes;
",2,0,0,0,0,1,0,0,0,2,14,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1571,"      return new InlineSimpleMethods(compiler);
",2,0,0,1,2,1,0,2,0,4,41,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1735,"      return new CollapseAnonymousFunctions(compiler);
",2,0,0,1,2,1,0,2,0,4,48,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,967,"      final CheckRegExp pass = new CheckRegExp(compiler);
",4,0,0,1,2,1,0,4,0,9,51,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,969,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1726,"      return new FunctionRewriter(compiler);
",2,0,0,1,2,1,0,2,0,4,38,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1318,"      return new CollapseProperties(
",0,0,0,0,1,1,0,2,0,2,30,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,969,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,972,"          pass.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,28,14,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,973,"          compiler.setHasRegExpGlobalReferences(
",0,0,0,0,1,0,4,0,0,4,38,14,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,975,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,806,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,809,"          pass.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,28,14,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,810,"          if (exportedNames == null) {
",2,1,0,1,3,0,0,0,0,3,28,13,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,813,"          exportedNames.addAll(pass.getExportedVariableNames());
",0,0,0,2,4,0,8,0,0,8,54,14,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,814,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,803,"      final GatherRawExports pass = new GatherRawExports(
",2,0,0,0,1,1,0,4,0,7,51,8,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,806,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1218,"      return new ConstCheck(compiler);
",2,0,0,1,2,1,0,2,0,4,32,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1523,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1526,"          NameAnalyzer na = new NameAnalyzer(compiler, false);
",4,0,0,1,2,0,0,4,0,9,52,13,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1527,"          na.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,26,14,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1529,"          String reportPath = options.reportPath;
",6,0,0,0,0,0,0,2,0,8,39,13,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1530,"          if (reportPath != null) {
",2,1,0,1,3,0,0,0,0,3,25,13,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1539,"          if (options.smartNameRemoval) {
",4,0,0,1,3,0,0,0,0,4,31,14,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1540,"            na.removeUnreferenced();
",0,0,0,1,2,0,4,0,0,4,24,16,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1542,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1523,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1509,"      return new RemoveUnusedPrototypeProperties(
",0,0,0,0,1,1,0,2,0,2,43,10,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1625,"      return new CrossModuleCodeMotion(compiler, compiler.getModuleGraph());
",2,0,0,2,4,1,4,2,0,8,70,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1717,"      return new ExtractPrototypeMemberDeclarations(compiler);
",2,0,0,1,2,1,0,2,0,4,56,9,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeParameters,60,89,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.14286,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,156,"        if (!mayHaveSideEffects(n)) {
",0,0,0,2,5,0,4,0,0,5,29,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,157,"          return TernaryValue.TRUE;
",4,0,0,0,0,1,0,0,0,4,25,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,525,"      passes.add(renameProperties);
",0,0,0,1,2,0,6,0,0,6,29,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1900,"    char[] reservedChars =
",2,0,0,1,2,0,0,0,0,2,22,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1902,"    switch (options.propertyRenaming) {
",4,0,0,1,3,0,0,0,0,4,35,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1916,"        RenameProperties rprop = new RenameProperties(
",2,0,0,0,1,0,0,4,0,6,46,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1919,"        rprop.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,29,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1920,"        return rprop.getPropertyMap();
",0,0,0,1,2,1,4,0,0,4,30,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1888,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1890,"          propertyMap = runPropertyRenaming(
",2,0,0,0,1,0,2,0,0,5,34,13,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1892,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1877,"      VariableMap map = null;
",2,0,0,0,0,0,0,2,0,4,23,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1878,"      if (options.inputPropertyMapSerialized != null) {
",4,1,0,1,3,0,0,0,0,5,49,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1887,"      final VariableMap prevPropertyMap = map;
",4,0,0,0,0,1,0,2,0,7,40,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1888,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckRegExp,60,44,"    return globalRegExpPropertiesUsed;
",2,0,0,0,0,1,0,0,0,2,34,4,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,60,1902,"    switch (options.propertyRenaming) {
",4,0,0,1,3,0,0,0,0,4,35,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,60,101,"      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
",0,2,0,3,7,0,8,0,0,10,54,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,60,105,"      } else if (NodeUtil.isExpressionNode(n)) {
",0,0,0,2,6,0,6,0,0,6,42,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,60,110,"      String msg = ""This code lacks side-effects. Is there a bug?"";
",2,0,0,0,0,0,0,2,0,5,61,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,60,111,"      if (n.getType() == Token.STRING) {
",4,1,0,2,5,0,4,0,0,9,34,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,60,115,"      t.getCompiler().report(
",0,0,0,1,3,0,6,0,0,6,23,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckRegExp,60,59,"      String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,6,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckRegExp,60,60,"      if (name.equals(""RegExp"") && t.getScope().getVar(name) == null) {
",0,2,0,4,9,0,12,0,0,15,65,6,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckRegExp,60,72,"    } else if (n.getType() == Token.REGEXP) {
",4,1,0,2,6,0,4,0,0,9,41,5,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,148,"            addSignature(name, n.getNext(), t.getSourceName());
",0,0,0,3,6,0,12,0,0,12,51,10,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,150,"            getSignatureStore().removeSignature(name);
",0,0,0,2,4,0,6,0,0,6,42,10,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,151,"            externMethodsWithoutSignatures.add(name);
",0,0,0,1,2,0,6,0,0,6,41,10,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineSimpleMethods,60,291,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,144,"          return TernaryValue.FALSE;
",4,0,0,0,0,1,0,0,0,4,26,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,279,"          functionInfo.setTaintsUnknown();
",0,0,0,1,2,0,4,0,0,4,32,11,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,280,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,38,"  OptimizeCalls(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,42,2,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,35,"  List<CallGraphCompilerPass> passes = Lists.newArrayList();
",2,0,0,1,2,0,4,4,0,10,58,2,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,39,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,40,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,43,"    passes.add(pass);
",0,0,0,1,2,0,6,0,0,6,17,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,44,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,53,"    if (passes.size() > 0) {
",0,1,0,2,5,0,4,0,0,5,24,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,54,"      SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder(compiler);
",4,0,0,1,2,0,0,4,0,8,72,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,55,"      defFinder.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,33,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,56,"      for (CallGraphCompilerPass pass : passes) {
",4,0,0,1,3,0,0,2,0,6,43,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,57,"        pass.process(externs, root, defFinder);
",0,0,0,1,2,0,10,0,0,10,39,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,58,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeCalls,60,60,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/TernaryValue,60,88,"      return ""false"";
",0,0,0,0,0,1,0,0,0,1,15,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/NameAnalyzer,60,467,"        ns = createNameInformation(t, n.getFirstChild(), n);
",2,0,0,2,4,0,10,0,0,13,52,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,210,"    } else if (name.getType() == Token.OR || name.getType() == Token.HOOK) {
",8,3,0,3,8,0,8,0,0,19,72,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,385,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,131,"          Node dest = n.getFirstChild().getNext();
",2,0,0,2,4,0,6,2,0,10,40,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,133,"          if (dest.getType() != Token.STRING) {
",4,1,0,2,5,0,4,0,0,9,37,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,137,"          String name = dest.getString();
",2,0,0,1,2,0,4,2,0,8,31,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,145,"          if (parent.getType() == Token.ASSIGN &&
",4,3,0,1,3,0,4,0,0,11,39,7,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,154,"          externMethods.add(name);
",0,0,0,1,2,0,6,0,0,6,24,8,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/MethodCompilerPass,60,155,"        } break;
",0,0,0,0,1,0,0,0,0,0,8,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,175,"        String fnName = n.getFirstChild().getQualifiedName();
",2,0,0,2,4,0,6,2,0,10,53,7,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,176,"        if (assertionNames.contains(fnName)) {
",0,0,0,2,5,0,6,0,0,6,38,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,369,"    if (needsAliases()) {
",0,0,0,2,5,0,2,0,0,2,21,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,378,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,381,"    for (AliasSpecification spec : aliasSpecifications) {
",4,0,0,1,3,0,0,2,0,6,53,4,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,382,"      if (!spec.nodes.isEmpty()) {
",4,0,0,2,5,0,2,0,0,7,28,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,77,"  private abstract static class AliasSpecification {
",2,0,0,0,1,3,0,0,0,5,50,2,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,40,"  private class FindAliasableNodes extends AbstractPostOrderCallback {
",2,0,0,0,1,1,0,2,0,5,68,2,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,43,"      final int type = n.getType();
",2,0,0,1,2,1,4,0,0,7,29,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,44,"      if (isAliasableType(type)) {
",0,0,0,2,5,0,4,0,0,4,28,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,46,"      } else if (type == Token.NAME) {
",6,1,0,1,4,0,0,0,0,7,32,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,49,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,351,"  AliasKeywords(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,42,2,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,352,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,353,"    aliasSpecifications = createAliasSpecifications();
",2,0,0,1,2,0,2,0,0,5,50,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,354,"    aliasTypes = Maps.newLinkedHashMap();
",2,0,0,1,2,0,4,0,0,7,37,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,355,"    aliasNames = Sets.newLinkedHashSet();
",2,0,0,1,2,0,4,0,0,7,37,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,356,"    for (AliasSpecification specification : aliasSpecifications) {
",4,0,0,1,3,0,0,2,0,6,62,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,357,"      aliasTypes.put(specification.getTokenId(), specification);
",0,0,0,2,4,0,10,0,0,10,58,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,358,"      aliasNames.add(specification.getAliasName());
",0,0,0,2,4,0,8,0,0,8,45,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,359,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,360,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,334,"  static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW =
",2,0,0,0,0,2,0,0,0,4,58,2,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,207,"    Node alias = createAliasFunctionNode(""TT"");
",2,0,0,1,2,0,2,2,0,7,43,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,208,"    return InlineCostEstimator.getCost(alias) / 2 + 1;
",0,2,0,1,2,1,6,0,0,8,50,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,216,"    Node parameterName = Node.newString(Token.NAME, ""jscomp_throw_param"");
",6,0,0,1,2,0,4,2,0,13,70,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,217,"    List<Node> parameters = Lists.newArrayList(parameterName.cloneNode());
",2,0,0,2,4,0,8,4,0,14,70,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,218,"    Node throwStatement = new Node(Token.THROW, parameterName);
",8,0,0,1,2,0,0,4,0,12,59,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,219,"    Node body = new Node(Token.BLOCK, throwStatement);
",8,0,0,1,2,0,0,4,0,12,50,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,220,"    return NodeUtil.newFunctionNode(aliasName, parameters, body, -1, -1);
",0,0,0,1,2,1,10,0,0,12,69,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,367,"    NodeTraversal.traverse(compiler, root, new FindAliasableNodes());
",0,0,0,2,4,0,8,2,0,10,65,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,432,"    return aliasTypes.containsKey(type);
",0,0,0,1,2,1,6,0,0,6,36,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,448,"    List<AliasSpecification> l = Lists.newArrayList();
",2,0,0,1,2,0,4,4,0,10,50,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,449,"    l.add(new KeywordAliasSpecification(ALIAS_FALSE, Token.FALSE));
",6,0,0,2,4,0,4,2,0,12,63,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,450,"    l.add(new KeywordAliasSpecification(ALIAS_NULL, Token.NULL));
",6,0,0,2,4,0,4,2,0,12,61,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,451,"    l.add(new KeywordAliasSpecification(ALIAS_TRUE, Token.TRUE));
",6,0,0,2,4,0,4,2,0,12,61,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,452,"    l.add(new VoidKeywordAliasSpecification(ALIAS_VOID, Token.VOID));
",6,0,0,2,4,0,4,2,0,12,65,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,459,"    l.add(new ThrowAliasSpecification(ALIAS_THROW));
",2,0,0,2,4,0,4,2,0,8,48,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,460,"    return l;
",2,0,0,0,0,1,0,0,0,2,9,4,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,38,"class AliasKeywords implements CompilerPass {
",2,0,0,0,1,0,0,2,0,4,45,1,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,165,"    ThrowAliasSpecification(String aliasName) {
",4,0,0,1,3,0,0,2,0,6,43,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,166,"      super(aliasName, Token.THROW);
",6,0,0,1,2,0,0,0,0,6,30,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,167,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,96,"    public AliasSpecification(String aliasName, int tokenId) {
",6,0,0,1,3,1,0,2,0,9,58,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,80,"    private final Map<Node, Node> nodes = Maps.newHashMap();
",2,0,0,1,2,2,4,6,0,14,56,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,86,"    private boolean isAliased = false;
",2,0,0,0,0,1,0,0,0,4,34,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,97,"      this.aliasName = aliasName;
",4,0,0,0,0,0,0,0,0,5,27,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,98,"      this.tokenId = tokenId;
",4,0,0,0,0,0,0,0,0,5,23,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,99,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,137,"      return tokenId;
",2,0,0,0,0,1,0,0,0,2,15,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,141,"      return aliasName;
",2,0,0,0,0,1,0,0,0,2,17,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,225,"    KeywordAliasSpecification(String aliasName, int tokenId) {
",6,0,0,1,3,0,0,2,0,8,58,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,226,"      super(aliasName, tokenId);
",4,0,0,1,2,0,0,0,0,4,26,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,227,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,259,"    VoidKeywordAliasSpecification(String aliasName, int tokenId) {
",6,0,0,1,3,0,0,2,0,8,62,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,260,"      super(aliasName, tokenId);
",4,0,0,1,2,0,0,0,0,4,26,5,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AliasKeywords,60,261,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,60,264,"          externNames.add(name);
",0,0,0,1,2,0,6,0,0,6,22,10,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,60,78,"        return tryReduceVoid(subtree);
",0,0,0,1,2,1,4,0,0,4,30,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,60,156,"    Node child = n.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,31,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,60,157,"    if (child.getType() != Token.NUMBER || child.getDouble() != 0.0) {
",4,3,0,3,7,0,8,0,0,15,66,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,60,163,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,2515,"    if (!isExprAssign(n)) {
",0,0,0,2,5,0,4,0,0,5,23,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,2516,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,205,"      passes.add(new FindAssertionCalls());
",0,0,0,2,4,0,4,2,0,6,37,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,49,"final class ClosureCodeRemoval implements CompilerPass {
",2,0,0,0,1,1,0,2,0,5,56,1,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,164,"    FindAssertionCalls() {
",2,0,0,1,3,0,0,0,0,2,22,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,162,"    Set<String> assertionNames = Sets.newHashSet();
",2,0,0,1,2,0,4,4,0,10,47,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,166,"               compiler.getCodingConvention().getAssertionFunctions()) {
",0,0,0,2,6,0,6,0,0,6,57,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,167,"        assertionNames.add(spec.getFunctionName());
",0,0,0,2,4,0,8,0,0,8,43,8,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,168,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,174,"      if (n.getType() == Token.CALL) {
",4,1,0,2,5,0,4,0,0,9,32,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ClosureCodeRemoval,60,180,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,300,"      if (!NodeUtil.isPrototypePropertyDeclaration(n)) {
",0,0,0,2,5,0,6,0,0,7,50,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,301,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,277,"  private static class PrototypeMemberDeclaration {
",2,0,0,0,1,2,0,0,0,4,49,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/CombinedCompilerPass,60,78,"      (new CombinedCompilerPass(compiler, callbacks)).process(null, root);
",4,0,0,3,6,0,4,2,0,11,68,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,190,"  private class GatherExtractionInfo extends AbstractShallowCallback {
",2,0,0,0,1,1,0,2,0,5,68,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,192,"    private List<ExtractionInstance> instances = Lists.newLinkedList();
",2,0,0,1,2,1,4,4,0,11,67,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,193,"    private int totalDelta = GLOBAL_VAR_DECL_OVERHEAD;
",4,0,0,0,0,1,0,0,0,5,50,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,198,"      if (n.getType() != Token.SCRIPT && n.getType() != Token.BLOCK) {
",8,3,0,3,7,0,8,0,0,19,64,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,202,"      for (Node cur = n.getFirstChild(); cur != null; cur = cur.getNext()) {
",6,1,0,3,7,0,8,2,0,18,70,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,203,"        PrototypeMemberDeclaration prototypeMember =
",2,0,0,0,0,0,0,2,0,4,44,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,205,"        if (prototypeMember == null) {
",2,1,0,1,3,0,0,0,0,3,30,7,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,206,"          continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,222,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,229,"      return totalDelta < 0;
",2,1,0,0,0,1,0,0,0,3,22,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,127,"      Node callTarget = subtree.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,42,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,129,"      if (!NodeUtil.isName(callTarget)) {
",0,0,0,2,5,0,6,0,0,7,35,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,133,"      String functionNameString = callTarget.getString();
",2,0,0,1,2,0,4,2,0,8,51,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,134,"      Node firstArgument = callTarget.getNext();
",2,0,0,1,2,0,4,2,0,8,42,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,135,"      if ((firstArgument != null) &&
",2,2,0,1,3,0,0,0,0,4,30,6,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,95,"  public ExtractPrototypeMemberDeclarations(AbstractCompiler compiler) {
",4,0,0,1,3,1,0,2,0,7,70,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,91,"  private String prototypeAlias = ""JSCompiler_prototypeAlias"";
",2,0,0,0,0,1,0,2,0,6,60,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,96,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,97,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,78,"  private static final int GLOBAL_VAR_DECL_OVERHEAD = ""var t;"".length();
",2,0,0,1,2,3,2,0,0,8,70,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,82,"  private static final int PER_EXTRACTION_INSTANCE_OVERHEAD =
",2,0,0,0,0,3,0,0,0,5,59,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,86,"  private static final int PER_PROTOTYPE_MEMBER_DELTA =
",2,0,0,0,0,3,0,0,0,5,53,2,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,101,"    GatherExtractionInfo extractionInfo = new GatherExtractionInfo();
",2,0,0,1,2,0,0,4,0,6,65,4,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,102,"    NodeTraversal.traverse(compiler, root, extractionInfo);
",0,0,0,1,2,0,10,0,0,10,55,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,103,"    if (extractionInfo.shouldExtract()) {
",0,0,0,2,5,0,4,0,0,4,37,5,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,107,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations,60,76,"class ExtractPrototypeMemberDeclarations implements CompilerPass {
",2,0,0,0,1,0,0,2,0,4,66,1,0.06250,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,60,405,"      result = result.getParent();
",2,0,0,1,2,0,4,0,0,7,28,6,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,60,1269,"        } else if (""Array"".equals(className)) {
",0,0,0,2,6,0,4,0,0,5,39,10,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameProperties,60,356,"    Map<String, String> map = new HashMap<String, String>();
",2,0,0,1,2,0,0,12,0,14,56,4,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameProperties,60,357,"    for (Property p : propertyMap.values()) {
",2,0,0,2,5,0,4,2,0,8,41,4,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameProperties,60,362,"    return new VariableMap(map);
",2,0,0,1,2,1,0,2,0,4,28,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,60,1264,"        boolean constructorHasArgs = constructorNameNode.getNext() != null;
",2,1,0,1,2,0,4,0,0,7,67,9,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,60,1266,"        if (""Object"".equals(className) && !constructorHasArgs) {
",2,1,0,2,5,0,4,0,0,9,56,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,60,1284,"        if (newLiteralNode != null) {
",2,1,0,1,3,0,0,0,0,3,29,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,60,"        subtree = tryFoldKnownNumericMethods(subtree);
",2,0,0,1,2,0,4,0,0,7,46,8,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,122,"    Preconditions.checkArgument(subtree.getType() == Token.CALL);
",4,1,0,2,4,0,8,0,0,13,61,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,124,"    if (isASTNormalized()) {
",0,0,0,2,5,0,2,0,0,2,24,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,145,"    return subtree;
",2,0,0,0,0,1,0,0,0,2,15,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,154,"      Preconditions.checkNotNull(defFinder);
",0,0,0,1,2,0,6,0,0,6,38,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,155,"      callSiteOptimizer = new CallSiteOptimizer(compiler, defFinder);
",6,0,0,1,2,0,0,2,0,9,63,6,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,159,"      callSiteOptimizer.applyChanges();
",0,0,0,1,2,0,4,0,0,4,33,7,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,406,"        SimpleDefinitionFinder defFinder) {
",2,0,0,0,2,0,0,2,0,4,35,4,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,401,"    private final List<Node> toRemove = Lists.newArrayList();
",2,0,0,1,2,2,4,4,0,12,57,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,402,"    private final List<Node> toReplaceWithZero = Lists.newArrayList();
",2,0,0,1,2,2,4,4,0,12,66,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,407,"      this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,408,"      this.defFinder = defFinder;
",4,0,0,0,0,0,0,0,0,5,27,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,409,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,428,"      for (Node n : toRemove) {
",4,0,0,1,3,0,0,2,0,6,25,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,432,"      for (Node n : toReplaceWithZero) {
",4,0,0,1,3,0,0,2,0,6,34,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,60,436,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,133,"        return TernaryValue.FALSE;
",4,0,0,0,0,1,0,0,0,4,26,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,152,"        return TernaryValue.TRUE;
",4,0,0,0,0,1,0,0,0,4,25,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,980,"      taintsUnknown = true;
",2,0,0,0,0,0,0,0,0,4,21,5,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,981,"      checkInvariant();
",0,0,0,1,2,0,2,0,0,2,17,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PureFunctionIdentifier,60,982,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeReplaceKnownMethods,60,367,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/PrintStreamErrorManager,60,74,"        stream.format(""%d error(s), %d warning(s)%n"", getErrorCount(),
",0,0,0,3,7,0,6,0,0,7,62,9,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,228,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.04762,0,-1
defect4j,closure,com/google/javascript/rhino/Node,60,438,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,60,1940,"    return isFunctionExpression(node) && isEmptyBlock(node.getLastChild());
",0,1,0,3,6,1,10,0,0,11,71,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,52,"  FunctionRewriter(AbstractCompiler compiler) {
",4,0,0,1,3,0,0,2,0,6,45,2,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,53,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,54,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,58,"    List<Reducer> reducers = ImmutableList.of(new ReturnConstantReducer(),
",2,0,0,1,3,0,4,6,0,12,70,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,64,"    Multimap<Reducer, Reduction> reductionMap = HashMultimap.create();
",2,0,0,1,2,0,4,6,0,12,66,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,68,"    NodeTraversal.traverse(compiler, root,
",0,0,0,0,1,0,8,0,0,8,38,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,72,"    for (Reducer reducer : reducers) {
",4,0,0,1,3,0,0,2,0,6,34,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,73,"      Collection<Reduction> reductions = reductionMap.get(reducer);
",2,0,0,1,2,0,6,4,0,12,61,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,74,"      if (reductions.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,27,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,75,"        continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,103,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,190,"  abstract static class Reducer {
",2,0,0,0,1,2,0,0,0,4,31,2,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,60,256,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,60,1258,"      String className = constructorNameNode.getString();
",2,0,0,1,2,0,4,2,0,8,51,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,60,1260,"      if (""RegExp"".equals(className)) {
",0,0,0,2,5,0,4,0,0,5,33,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,402,"  private static class GetterReducer extends SingleReturnStatementReducer {
",2,0,0,0,1,2,0,2,0,6,73,2,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,417,"      if (!NodeUtil.isFunctionExpression(node)) {
",0,0,0,2,5,0,6,0,0,7,43,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,418,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,259,"  abstract static class SingleReturnStatementReducer extends Reducer {
",2,0,0,0,1,2,0,2,0,6,68,2,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,162,"                      Multimap<Reducer, Reduction> reductions) {
",2,0,0,0,2,0,0,6,0,8,42,4,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,163,"      this.reducers = reducers;
",4,0,0,0,0,0,0,0,0,5,25,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,164,"      this.reductions = reductions;
",4,0,0,0,0,0,0,0,0,5,29,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,165,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,171,"      for (Reducer reducer : reducers) {
",4,0,0,1,3,0,0,2,0,6,34,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,172,"        Node replacement = reducer.reduce(node);
",2,0,0,1,2,0,6,2,0,10,40,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,173,"        if (replacement != node) {
",4,1,0,1,3,0,0,0,0,5,26,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,177,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,178,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,184,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,347,"  private static class ReturnConstantReducer
",2,0,0,0,0,2,0,0,0,4,42,2,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,363,"      if (!NodeUtil.isFunctionExpression(node)) {
",0,0,0,2,5,0,6,0,0,7,43,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,364,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,232,"  private static class EmptyFunctionReducer extends Reducer {
",2,0,0,0,1,2,0,2,0,6,59,2,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,246,"      if (NodeUtil.isEmptyFunctionExpression(node)) {
",0,0,0,2,5,0,6,0,0,6,47,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,250,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,288,"  private static class IdentityReducer extends SingleReturnStatementReducer {
",2,0,0,0,1,2,0,2,0,6,75,2,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,303,"      if (!NodeUtil.isFunctionExpression(node)) {
",0,0,0,2,5,0,6,0,0,7,43,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,304,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,462,"  private static class SetterReducer extends Reducer {
",2,0,0,0,1,2,0,2,0,6,52,2,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,479,"      if (!NodeUtil.isFunctionExpression(node)) {
",0,0,0,2,5,0,6,0,0,7,43,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionRewriter,60,480,"        return node;
",2,0,0,0,0,1,0,0,0,2,12,7,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/DefinitionsRemover,60,272,"      super(node, inExterns);
",4,0,0,1,2,0,0,0,0,4,23,5,0.04348,0,-1
defect4j,closure,com/google/javascript/jscomp/DefinitionsRemover,60,273,"      Preconditions.checkArgument(
",0,0,0,0,1,0,4,0,0,4,28,6,0.04348,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,221,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.45000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,430,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.45000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1143,"        sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,9,0.32143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1150,"        toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,9,0.32143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1149,"           cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,6,0.32143,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1122,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1127,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1128,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1129,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1136,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1137,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1142,"      for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,6,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1145,"      sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,7,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1146,"      sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,7,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1147,"      for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,7,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1148,"           cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,6,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1153,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25714,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1044,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,12,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1045,"        sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,12,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1013,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.19565,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1014,"        sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,9,0.19565,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,61,1987,"    return hasRegExpGlobalReferences;
",2,0,0,0,0,1,0,0,0,2,33,4,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,173,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,195,"        case SOURCENAME_PROP:    return ""sourcename"";
",2,0,0,0,0,1,0,0,0,3,45,4,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,923,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,928,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,929,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1050,"          sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1051,"          sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1058,"          int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1059,"          PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,10,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1060,"          sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1061,"          sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1062,"          sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1064,"          switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,10,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1100,"              value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1103,"          sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1104,"          sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,11,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,398,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.10465,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,921,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,922,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,926,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,927,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,932,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,933,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,990,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1048,"        int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,9,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1049,"        if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,8,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1056,"        int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,9,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1057,"        for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,8,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1109,"        if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.10345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1025,"      } else if (this instanceof ScriptOrFnNode) {
",0,0,0,1,4,0,0,2,0,2,44,10,0.09677,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1015,"      } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,7,0.09091,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,998,"        StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,6,0.08411,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,999,"        toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,7,0.08411,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1000,"        return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,7,0.08411,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1011,"      sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,7,0.08411,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1012,"      if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,8,0.08411,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1047,"      if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.08411,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1055,"      if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,6,0.08411,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1108,"      if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.08411,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1118,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08411,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,50,"        subtree = tryFoldExpr(subtree);
",2,0,0,1,2,0,4,0,0,7,31,5,0.06716,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,51,"        return subtree;
",2,0,0,0,0,1,0,0,0,2,15,5,0.06716,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,123,"    Node result = trySimpilifyUnusedResult(subtree.getFirstChild());
",2,0,0,2,4,0,6,2,0,10,64,4,0.06716,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,124,"    if (result == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.06716,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,136,"    return subtree;
",2,0,0,0,0,1,0,0,0,2,15,4,0.06716,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,145,"    return trySimpilifyUnusedResult(n, true);
",0,0,0,1,2,1,4,0,0,5,41,5,0.06716,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,156,"    Node result = n;
",4,0,0,0,0,0,0,2,0,6,16,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,159,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,220,"        if (!NodeUtil.nodeTypeMayHaveSideEffects(n)) {
",0,0,0,2,5,0,6,0,0,7,46,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,245,"    if (n != result) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,264,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,946,"      if (callNode.hasOneChild()
",0,0,0,1,3,0,4,0,0,4,26,9,0.06429,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,952,"      if (callNode.isOnlyModifiesThisCall()
",0,0,0,1,3,0,4,0,0,4,37,9,0.06429,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,959,"      if (compiler != null && !compiler.hasRegExpGlobalReferences()) {
",2,2,0,2,5,0,4,0,0,9,64,7,0.06429,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,228,"              c.detachFromParent();
",0,0,0,1,2,0,4,0,0,4,21,12,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,229,"              if (resultList == null)  {
",2,1,0,1,3,0,0,0,0,3,26,11,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,231,"                resultList = c;
",4,0,0,0,0,0,0,0,0,5,15,13,0.05882,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,2292,"    return areBitFlagsSet(
",0,0,0,0,1,1,2,0,0,2,22,5,0.05660,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,72,"          return subtree;
",2,0,0,0,0,1,0,0,0,2,15,5,0.05114,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,32,"class PeepholeRemoveDeadCode extends AbstractPeepholeOptimization {
",2,0,0,0,1,0,0,2,0,4,67,1,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,41,"    switch(subtree.getType()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,48,"        return tryOptimizeBlock(subtree);
",0,0,0,1,2,1,4,0,0,4,33,6,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,448,"    for (Node c = n.getFirstChild(); c != null; ) {
",4,1,0,2,5,0,4,2,0,11,47,4,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,449,"      Node next = c.getNext();  // save c.next, since 'c' may be removed
",2,0,0,1,2,0,4,2,0,8,66,6,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,450,"      if (!mayHaveSideEffects(c) && !c.isSyntheticBlock()) {
",0,1,0,3,7,0,8,0,0,11,54,6,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,457,"        tryOptimizeConditionalAfterAssign(c);
",0,0,0,1,2,0,4,0,0,4,37,9,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,459,"      c = next;
",4,0,0,0,0,0,0,0,0,5,9,6,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,460,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,462,"    if (n.isSyntheticBlock() ||  n.getParent() == null) {
",0,2,0,3,7,0,8,0,0,10,53,4,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,463,"      return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,481,"    Node next = n.getNext();
",2,0,0,1,2,0,4,2,0,8,24,4,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,504,"    if (isSimpleAssignment(n) && isConditionalStatement(next)) {
",0,1,0,3,7,0,8,0,0,9,60,4,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,521,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,530,"    if (NodeUtil.isExprAssign(n)
",0,0,0,1,3,0,6,0,0,6,28,6,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,533,"    } else if (n.getType() == Token.VAR && n.hasOneChild() &&
",4,3,0,2,6,0,8,0,0,15,57,5,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,538,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.04972,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,861,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.04688,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,256,"        if (result.getParent() != null) {
",0,1,0,2,5,0,4,0,0,5,33,8,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,259,"        n.getParent().replaceChild(n, result);
",0,0,0,2,4,0,10,0,0,10,38,9,0.04545,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,61,118,"    return NodeUtil.mayHaveSideEffects(n, currentTraversal.getCompiler());
",0,0,0,2,4,1,10,0,0,10,70,5,0.04286,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,856,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,811,"        if (isAssignmentOp(n)) {
",0,0,0,2,5,0,4,0,0,4,24,6,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,225,"            next = c.getNext();
",2,0,0,1,2,0,4,0,0,7,19,9,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,226,"            c = trySimpilifyUnusedResult(c);
",2,0,0,1,2,0,4,0,0,7,32,9,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,227,"            if (c != null) {
",2,1,0,1,3,0,0,0,0,3,16,9,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,804,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02875,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,799,"        if (!functionCallHasSideEffects(n, compiler)) {
",0,0,0,2,5,0,6,0,0,7,47,5,0.02830,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,69,"        Node newVersionOfNode =
",2,0,0,0,0,0,0,2,0,4,23,8,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,72,"        if (newVersionOfNode != currentVersionOfNode) {
",4,1,0,1,3,0,0,0,0,5,47,8,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,78,"        if (currentVersionOfNode == null) {
",2,1,0,1,3,0,0,0,0,3,35,8,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,91,"      optimization.beginTraversal(t);
",0,0,0,1,2,0,6,0,0,6,31,7,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,97,"      optimization.endTraversal(t);
",0,0,0,1,2,0,6,0,0,6,29,7,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,61,30,"abstract class AbstractPeepholeOptimization {
",2,0,0,0,1,1,0,0,0,3,45,1,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,61,93,"    currentTraversal = traversal;
",4,0,0,0,0,0,0,0,0,5,29,4,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,61,94,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,61,100,"    currentTraversal = null;
",2,0,0,0,0,0,0,0,0,3,24,4,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,61,101,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02507,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,43,"      AbstractPeepholeOptimization... optimizations) {
",2,0,0,0,2,0,0,2,0,4,48,3,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,44,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,45,"    this.peepholeOptimizations = optimizations;
",4,0,0,0,0,0,0,0,0,5,43,4,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,46,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,54,"    NodeTraversal t = new NodeTraversal(compiler, this);
",4,0,0,1,2,0,0,4,0,8,52,4,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,56,"    beginTraversal(t);
",0,0,0,1,2,0,4,0,0,4,18,5,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,57,"    t.traverse(root);
",0,0,0,1,2,0,6,0,0,6,17,5,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,58,"    endTraversal(t);
",0,0,0,1,2,0,4,0,0,4,16,5,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,59,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,63,"    Node currentVersionOfNode = n;
",4,0,0,0,0,0,0,2,0,6,30,4,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,64,"    boolean somethingChanged = false;
",2,0,0,0,0,0,0,0,0,3,33,5,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,67,"      somethingChanged = false;
",2,0,0,0,0,0,0,0,0,4,25,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,68,"      for (AbstractPeepholeOptimization optimization : peepholeOptimizations) {
",4,0,0,1,3,0,0,2,0,6,73,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,82,"    } while(somethingChanged);
",2,0,0,1,3,0,0,0,0,2,26,4,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,83,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,90,"    for (AbstractPeepholeOptimization optimization : peepholeOptimizations) {
",4,0,0,1,3,0,0,2,0,6,73,4,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,93,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,96,"    for (AbstractPeepholeOptimization optimization : peepholeOptimizations) {
",4,0,0,1,3,0,0,2,0,6,73,4,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeOptimizationsPass,61,99,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,1017,"        return NodeUtil.functionCallHasSideEffects(n, compiler);
",0,0,0,1,2,1,8,0,0,8,56,6,0.02375,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,676,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.02244,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,860,"      if (checkForStateChangeHelper(c, checkForNewObjects, compiler)) {
",0,0,0,2,5,0,8,0,0,8,65,7,0.02169,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,1516,"    return n.getType() == Token.EXPR_RESULT
",4,1,0,1,2,1,4,0,0,9,39,5,0.01948,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,807,"        if (isSimpleOperatorType(n.getType())) {
",0,0,0,3,7,0,6,0,0,6,40,6,0.01927,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,248,"        if (removeUnused) {
",2,0,0,1,3,0,0,0,0,2,19,8,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,249,"          parent.removeChild(n);
",0,0,0,1,2,0,6,0,0,6,22,11,0.01923,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,223,"          Node resultList = null;
",2,0,0,0,0,0,0,2,0,4,23,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,224,"          for (Node next, c = n.getFirstChild(); c != null; c = next) {
",10,1,0,2,5,0,4,2,0,18,61,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,240,"          result = resultList;
",4,0,0,0,0,0,0,0,0,5,20,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,246,"      Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,6,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,247,"      if (result == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,61,261,"      reportCodeChange();
",0,0,0,1,2,0,2,0,0,2,19,7,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,746,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,1010,"    switch(n.getType()) {
",0,0,0,2,5,0,4,0,0,4,21,5,0.01546,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,1002,"    return nodeTypeMayHaveSideEffects(n, null);
",0,0,0,1,2,1,4,0,0,5,43,4,0.01498,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,1006,"    if (isAssignmentOp(n)) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.01498,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,937,"    Node nameNode = callNode.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,41,4,0.01447,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,940,"    if (nameNode.getType() == Token.NAME) {
",4,1,0,2,5,0,4,0,0,9,39,4,0.01447,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,975,"    return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.01447,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,643,"    switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.01440,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,928,"    if (callNode.getType() != Token.CALL) {
",4,1,0,2,5,0,4,0,0,9,39,4,0.01422,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,933,"    if (callNode.isNoSideEffectsCall()) {
",0,0,0,2,5,0,4,0,0,4,37,5,0.01422,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,859,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,0.01355,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,2304,"    return areBitFlagsSet(getSideEffectFlags(), NO_SIDE_EFFECTS);
",0,0,0,2,4,1,6,0,0,6,61,5,0.01353,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,2320,"    return (value & flags) == flags;
",6,2,0,1,2,1,0,0,0,8,32,4,0.01345,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,2217,"    return getIntProp(SIDE_EFFECT_FLAGS);
",0,0,0,1,2,1,4,0,0,4,37,5,0.01341,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,714,"    return checkForStateChangeHelper(n, false, compiler);
",0,0,0,1,2,1,6,0,0,7,53,5,0.01102,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,61,727,"    switch (n.getType()) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.01082,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,61,368,"    return (Compiler) compiler;
",2,0,0,1,2,1,0,2,0,4,27,5,0.01020,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,455,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.00687,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,458,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.00687,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,461,"        boolean needsParens = (first.getType() == Token.NUMBER);
",6,1,0,2,4,0,4,0,0,11,56,7,0.00687,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,462,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.00687,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,465,"        addLeftExpr(first, NodeUtil.precedence(type), context);
",0,0,0,2,4,0,12,0,0,12,55,7,0.00687,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,466,"        if (needsParens) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.00687,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,469,"        add(""."");
",0,0,0,1,2,0,2,0,0,3,9,7,0.00687,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,470,"        addIdentifier(last.getString());
",0,0,0,2,4,0,6,0,0,6,32,7,0.00687,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,471,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00687,0,-1
defect4j,closure,com/google/javascript/rhino/Node,61,1679,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00606,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,526,"          addLeftExpr(first, NodeUtil.precedence(type), context);
",0,0,0,2,4,0,12,0,0,12,55,8,0.00527,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,520,"        if (isIndirectEval(first)
",0,0,0,1,3,0,4,0,0,4,25,7,0.00527,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,528,"        add(""("");
",0,0,0,1,3,0,2,0,0,3,9,6,0.00527,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,529,"        addList(first.getNext());
",0,0,0,2,4,0,6,0,0,6,25,6,0.00527,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,530,"        add("")"");
",0,0,0,1,3,0,2,0,0,3,9,6,0.00527,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,531,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00527,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,61,766,"    return n.getType() == Token.NAME && ""eval"".equals(n.getString()) &&
",4,3,0,3,6,1,10,0,0,18,67,4,0.00527,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,242,"        validateGetProp(n);
",0,0,0,1,2,0,4,0,0,4,19,6,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,243,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,611,"    validateNodeType(Token.GETPROP, n);
",4,0,0,1,2,0,4,0,0,8,35,5,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,612,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,613,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,614,"    Node prop = n.getLastChild();
",2,0,0,1,2,0,4,2,0,8,29,4,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,615,"    validateNodeType(Token.STRING, prop);
",4,0,0,1,2,0,4,0,0,8,37,5,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,616,"    validateNonEmptyString(prop);
",0,0,0,1,2,0,4,0,0,4,29,5,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,617,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00460,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,258,"        validateCall(n);
",0,0,0,1,2,0,4,0,0,4,16,6,0.00449,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,259,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00449,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,365,"    validateNodeType(Token.CALL, n);
",4,0,0,1,2,0,4,0,0,8,32,5,0.00449,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,61,366,"    validateMinimumChildCount(n, 1);
",0,0,0,1,2,0,4,0,0,4,32,5,0.00449,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,62,90,"      b.append(sourceExcerpt);
",0,0,0,1,2,0,6,0,0,6,24,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/LightweightMessageFormatter,62,91,"      b.append('\n');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1705,"          mode = Config.LanguageMode.ECMASCRIPT5_STRICT;
",8,0,0,0,0,0,0,0,0,9,46,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1706,"          break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,271,"      checks.add(checkStrictMode);
",0,0,0,1,2,0,6,0,0,6,28,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,259,"        options.setLanguageIn(CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT);
",6,0,0,1,2,0,4,0,0,10,71,9,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1173,"      return new StrictModeCheck(compiler,
",2,0,0,0,1,1,0,2,0,4,36,9,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,64,140,"        reservedKeywords = ES5_STRICT_RESERVED_KEYWORDS;
",4,0,0,0,0,0,0,0,0,5,48,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,64,141,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,64,71,"    add(""'use strict';"");
",0,0,0,1,2,0,2,0,0,3,21,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,64,72,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,64,631,"      cg.tagAsStrict();
",0,0,0,1,2,0,4,0,0,4,17,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,227,"        checkProperty(t, n);
",0,0,0,1,2,0,6,0,0,6,20,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,246,"      if (n.getLastChild().getString().endsWith(""__"")) {
",0,0,0,4,9,0,8,0,0,9,50,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,251,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,109,"      checkAssignment(t, n);
",0,0,0,1,2,0,6,0,0,6,22,9,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,160,"    if (n.getFirstChild().getType() == Token.NAME) {
",4,1,0,3,7,0,6,0,0,11,48,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,171,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,64,61,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,64,57,"    Node last = block.getLastChild();
",2,0,0,1,2,0,4,2,0,8,33,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,64,59,"    for (Node c = block.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,66,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/StatementFusion,64,60,"      if (!NodeUtil.isExpressionNode(c) && c != last) {
",4,2,0,2,5,0,6,0,0,13,49,6,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,106,"        checkNameUse(t, n);
",0,0,0,1,2,0,6,0,0,6,19,10,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,134,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,140,"    Var v = t.getScope().getVar(n.getString());
",2,0,0,3,6,0,10,2,0,14,43,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,141,"    if (v == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,149,"    if (!noCajaChecks) {
",2,0,0,1,3,0,0,0,0,3,20,4,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,156,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,64,1301,"    return n;
",2,0,0,0,0,1,0,0,0,2,9,4,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/ConvertToDottedProperties,64,49,"        if (NodeUtil.isObjectLitKey(n, parent) &&
",0,1,0,1,3,0,8,0,0,9,41,5,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,64,1274,"    if (right.getType() == Token.STRING &&
",4,2,0,1,3,0,4,0,0,10,38,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,64,102,"        return tryFoldGetProp(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,64,1268,"    Preconditions.checkArgument(n.getType() == Token.GETPROP);
",4,1,0,2,4,0,8,0,0,13,58,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,64,1270,"    if (left.getType() == Token.OBJECTLIT) {
",4,1,0,2,5,0,4,0,0,9,40,4,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,237,"      } else if (n.getString().endsWith(""__"")) {
",0,0,0,3,8,0,6,0,0,7,42,8,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,235,"      } else if (""arguments"".equals(n.getString())) {
",0,0,0,3,8,0,6,0,0,7,47,7,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,64,"class CollapseVariableDeclarations implements CompilerPass {
",2,0,0,0,1,0,0,2,0,4,60,1,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,137,"        blacklistStubVars(t, n);
",0,0,0,1,2,0,6,0,0,6,24,8,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,144,"      if (nodesToCollapse.contains(n)) return;
",0,0,0,2,4,1,6,0,0,6,40,6,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,148,"      if (parent.getType() == Token.IF) return;
",4,1,0,2,4,1,4,0,0,9,41,5,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,150,"      Node varNode = n;
",4,0,0,0,0,0,0,2,0,6,17,5,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,152,"      boolean hasVar = n.getType() == Token.VAR;
",6,1,0,1,2,0,4,0,0,11,42,6,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,155,"      n = n.getNext();
",2,0,0,1,2,0,4,0,0,7,16,5,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,157,"      boolean hasNodesToCollapse = false;
",2,0,0,0,0,0,0,0,0,3,35,6,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,159,"      while (n != null &&
",2,2,0,0,1,0,0,0,0,4,19,5,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,173,"      if (hasNodesToCollapse && hasVar) {
",4,1,0,1,3,0,0,0,0,5,35,5,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,177,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,180,"      for (Node child = varNode.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,42,6,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,181,"           child != null; child = child.getNext()) {
",4,1,0,1,4,0,4,0,0,10,41,5,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,182,"        if (child.getFirstChild() == null) {
",0,1,0,2,5,0,4,0,0,5,36,7,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/CollapseVariableDeclarations,64,186,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02857,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,172,"          createSynthesizedExternVar(varName);
",0,0,0,1,2,0,4,0,0,4,36,11,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,173,"          scope.getGlobalScope().declare(varName, n,
",0,0,0,1,3,0,10,0,0,10,42,11,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,177,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,225,"        checkDeclaration(t, n);
",0,0,0,1,2,0,6,0,0,6,23,8,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,233,"      if (""eval"".equals(n.getString())) {
",0,0,0,3,7,0,6,0,0,7,35,6,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,242,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,160,"      if (NodeUtil.isFunctionExpression(parent)) {
",0,0,0,2,5,0,6,0,0,6,44,7,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,165,"        if (!strictExternCheck || !t.getInput().isExtern()) {
",2,1,0,3,7,0,6,0,0,11,53,8,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,166,"          t.report(n, UNDEFINED_VAR_ERROR, varName);
",0,0,0,1,2,0,10,0,0,10,42,11,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,169,"        if (sanityCheck) {
",2,0,0,1,3,0,0,0,0,2,18,8,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,89,"      AbstractCompiler compiler, boolean noVarCheck, boolean noCajaChecks) {
",6,0,0,0,2,0,0,2,0,8,70,3,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,90,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,91,"    this.noVarCheck = noVarCheck;
",4,0,0,0,0,0,0,0,0,5,29,4,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,92,"    this.noCajaChecks = noCajaChecks;
",4,0,0,0,0,0,0,0,0,5,33,4,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,93,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,42,"  static final DiagnosticType UNKNOWN_VARIABLE = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,68,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,45,"  static final DiagnosticType WITH_DISALLOWED = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,67,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,48,"  static final DiagnosticType EVAL_USE = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,60,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,51,"  static final DiagnosticType EVAL_DECLARATION = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,68,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,55,"  static final DiagnosticType EVAL_ASSIGNMENT = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,67,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,59,"  static final DiagnosticType ARGUMENTS_DECLARATION = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,73,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,63,"  static final DiagnosticType ARGUMENTS_ASSIGNMENT = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,72,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,67,"  static final DiagnosticType DELETE_VARIABLE = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,67,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,72,"  static final DiagnosticType ILLEGAL_NAME = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,64,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,76,"  static final DiagnosticType DUPLICATE_OBJECT_KEY = DiagnosticType.error(
",2,0,0,0,1,2,4,2,0,10,72,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,96,"    NodeTraversal.traverseRoots(
",0,0,0,0,1,0,4,0,0,4,28,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,98,"    NodeTraversal.traverse(compiler, root, new NonExternChecks());
",0,0,0,2,4,0,8,2,0,10,62,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,99,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,102,"    if (n.getType() == Token.WITH) {
",4,1,0,2,5,0,4,0,0,9,32,4,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,104,"    } else if (n.getType() == Token.NAME) {
",4,1,0,2,6,0,4,0,0,9,39,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,105,"      if (!isDeclaration(n)) {
",0,0,0,2,5,0,4,0,0,5,24,7,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,108,"    } else if (n.getType() == Token.ASSIGN) {
",4,1,0,2,6,0,4,0,0,9,41,6,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,110,"    } else if (n.getType() == Token.DELPROP) {
",4,1,0,2,6,0,4,0,0,9,42,7,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,112,"    } else if (n.getType() == Token.OBJECTLIT) {
",4,1,0,2,6,0,4,0,0,9,44,8,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,114,"    } else if (n.getType() == Token.LABEL) {
",4,1,0,2,6,0,4,0,0,9,40,9,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,117,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,124,"    switch (n.getParent().getType()) {
",0,0,0,3,7,0,6,0,0,6,34,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,128,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,131,"        return n.getParent().getParent().getType() == Token.FUNCTION;
",4,1,0,3,6,1,8,0,0,13,61,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,39,"class StrictModeCheck extends AbstractPostOrderCallback
",2,0,0,0,0,0,0,2,0,4,55,1,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,222,"  private class NonExternChecks extends AbstractPostOrderCallback {
",2,0,0,0,1,1,0,2,0,5,65,2,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,224,"      if ((n.getType() == Token.NAME) && isDeclaration(n)) {
",4,2,0,4,9,0,8,0,0,14,54,5,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,226,"      } else if (n.getType() == Token.GETPROP) {
",4,1,0,2,6,0,4,0,0,9,42,6,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/StrictModeCheck,64,229,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02703,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,64,403,"    Scope result = this;
",2,0,0,0,0,0,0,2,0,4,20,4,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,64,404,"    while (result.getParent() != null) {
",0,1,0,2,5,0,4,0,0,5,36,4,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,64,407,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.02326,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,977,"    if (inputsByName.containsKey(name)) {
",0,0,0,2,5,0,6,0,0,6,37,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,980,"    SourceAst ast = new SyntheticAst(name);
",4,0,0,1,2,0,0,4,0,8,39,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,981,"    CompilerInput input = new CompilerInput(ast, name, true);
",6,0,0,1,2,0,0,4,0,11,57,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,982,"    inputsByName.put(name, input);
",0,0,0,1,2,0,8,0,0,8,30,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,983,"    externsRoot.addChildToFront(ast.getAstRoot(this));
",0,0,0,2,4,0,8,0,0,8,50,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,984,"    return input;
",2,0,0,0,0,1,0,0,0,2,13,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,35,"  SyntheticAst(String sourceName) {
",4,0,0,1,3,0,0,2,0,6,33,2,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,36,"    this.sourceName = sourceName;
",4,0,0,0,0,0,0,0,0,5,29,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,37,"    clearAst();
",0,0,0,1,2,0,2,0,0,2,11,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,38,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,42,"    return root;
",2,0,0,0,0,1,0,0,0,2,12,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,47,"    root = new Node(Token.SCRIPT);
",6,0,0,1,2,0,0,2,0,9,30,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,48,"    root.setIsSyntheticBlock(true);
",0,0,0,1,2,0,4,0,0,5,31,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,49,"    root.putProp(Node.SOURCENAME_PROP, sourceName);
",4,0,0,1,2,0,6,0,0,10,47,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,64,50,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,220,"    Node nameNode = Node.newString(Token.NAME, varName);
",6,0,0,1,2,0,6,2,0,14,52,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,228,"    if (compiler.getCodingConvention().isConstant(varName)) {
",0,0,0,3,7,0,8,0,0,8,57,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,232,"    getSynthesizedExternsRoot().addChildToBack(
",0,0,0,1,3,0,4,0,0,4,43,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,234,"    varsToDeclareInExterns.remove(varName);
",0,0,0,1,2,0,6,0,0,6,39,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,235,"    compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,5,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,236,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,277,"    if (synthesizedExternsInput == null) {
",2,1,0,1,3,0,0,0,0,3,38,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,278,"      synthesizedExternsInput =
",2,0,0,0,0,0,0,0,0,3,25,6,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,281,"    return synthesizedExternsInput;
",2,0,0,0,0,1,0,0,0,2,31,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,286,"    if (synthesizedExternsRoot == null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,287,"      CompilerInput synthesizedExterns = getSynthesizedExternsInput();
",2,0,0,1,2,0,2,2,0,6,64,6,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,288,"      synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler);
",2,0,0,1,2,0,6,0,0,9,65,6,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,290,"    return synthesizedExternsRoot;
",2,0,0,0,0,1,0,0,0,2,30,4,0.02174,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,64,76,"  public CompilerInput(SourceAst ast, String inputName, boolean isExtern) {
",8,0,0,1,3,1,0,4,0,13,73,2,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,64,77,"    this.ast = ast;
",4,0,0,0,0,0,0,0,0,5,15,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,64,78,"    this.name = inputName;
",4,0,0,0,0,0,0,0,0,5,22,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,64,79,"    this.isExtern = isExtern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerInput,64,80,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02128,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,64,125,"      return var.scope.isLocal();
",4,0,0,1,2,1,2,0,0,6,27,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,64,299,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,960,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,188,"    JSModule currModule = currInput.getModule();
",2,0,0,1,2,0,4,2,0,8,44,4,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,189,"    JSModule varModule = varInput.getModule();
",2,0,0,1,2,0,4,2,0,8,42,4,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,190,"    JSModuleGraph moduleGraph = compiler.getModuleGraph();
",2,0,0,1,2,0,4,2,0,8,54,4,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,191,"    if (varModule != currModule && varModule != null && currModule != null) {
",8,5,0,1,3,0,0,0,0,13,73,4,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,64,213,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeRemoveDeadCode,64,535,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,7,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,715,"        writeOutput(
",0,0,0,0,1,0,2,0,0,2,12,10,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,720,"        outputSourceMap(options);
",0,0,0,1,2,0,4,0,0,4,25,10,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,959,"    if (Strings.isEmpty(options.sourceMapOutputPath)) {
",4,0,0,2,5,0,4,0,0,8,51,5,0.01818,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,658,"        passes.add(removeUnusedVars);
",0,0,0,1,2,0,6,0,0,6,29,9,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,64,497,"        processedArgs.add(matcher.group(1));
",0,0,0,2,4,0,8,0,0,8,36,9,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,64,499,"        String value = matcher.group(2);
",2,0,0,1,2,0,4,2,0,8,32,8,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,64,500,"        Matcher quotesMatcher = quotesPattern.matcher(value);
",2,0,0,1,2,0,6,2,0,10,53,8,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,64,501,"        if (quotesMatcher.matches()) {
",0,0,0,2,5,0,4,0,0,4,30,9,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,64,504,"          processedArgs.add(value);
",0,0,0,1,2,0,6,0,0,6,25,11,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/CommandLineRunner,64,506,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1463,"        } else if (options.inlineLocalVariables) {
",4,0,0,1,4,0,0,0,0,4,42,12,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1464,"          mode = InlineVariables.Mode.LOCALS_ONLY;
",8,0,0,0,0,0,0,0,0,9,40,13,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/RemoveUnusedVars,64,262,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.01786,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,64,39,"        addDefaultWarnings(options);
",0,0,0,1,2,0,4,0,0,4,28,6,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningLevel,64,40,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01754,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,369,"    } else if (options.markNoSideEffectCalls) {
",4,0,0,1,4,0,0,0,0,4,43,6,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,596,"      passes.add(invertContextualRenaming);
",0,0,0,1,2,0,6,0,0,6,37,7,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,64,122,"  private class IdentifyLocals implements Predicate<Var> {
",2,0,0,0,1,1,0,4,0,7,56,2,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1869,"      return MakeDeclaredNamesUnique.getContextualRenameInverter(compiler);
",0,0,0,1,2,1,6,0,0,6,69,9,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/CombinedCompilerPass,64,76,"      NodeTraversal.traverse(compiler, root, callbacks.get(0));
",0,0,0,2,4,0,12,0,0,12,57,7,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1097,"      List<Callback> callbacks = Lists.newArrayList();
",2,0,0,1,2,0,4,4,0,10,48,8,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1098,"      if (options.checkUnreachableCode.isOn()) {
",4,0,0,2,5,0,2,0,0,6,42,9,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1099,"        callbacks.add(
",0,0,0,0,1,0,4,0,0,4,14,11,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1102,"      if (options.checkMissingReturn.isOn() && options.checkTypes) {
",8,1,0,2,5,0,2,0,0,11,62,8,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1106,"      return combineChecks(compiler, callbacks);
",0,0,0,1,2,1,6,0,0,6,42,9,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineVariables,64,96,"        return new IdentifyLocals();
",0,0,0,1,2,1,0,2,0,2,28,7,0.01724,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,566,"    int pos = wrapper.indexOf(codePlaceholder);
",2,0,0,1,2,0,6,0,0,8,43,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,567,"    if (pos != -1) {
",2,1,0,1,3,0,0,0,0,4,16,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,592,"      out.append(code);
",0,0,0,1,2,0,6,0,0,6,17,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,593,"      out.append('\n');
",0,0,0,1,2,0,4,0,0,5,17,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,595,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,714,"      if (modules == null) {
",2,1,0,1,3,0,0,0,0,3,22,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,769,"      if (options.externExportsPath != null) {
",4,1,0,1,3,0,0,0,0,5,40,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,777,"      outputNameMaps(options);
",0,0,0,1,2,0,4,0,0,4,24,8,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,780,"      outputManifest();
",0,0,0,1,2,0,2,0,0,2,17,8,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1011,"    String propertyMapOutputPath = null;
",2,0,0,0,0,0,0,2,0,4,36,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1012,"    String variableMapOutputPath = null;
",2,0,0,0,0,0,0,2,0,4,36,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1013,"    String functionInformationMapOutputPath = null;
",2,0,0,0,0,0,0,2,0,4,47,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1016,"    if (config.createNameMapFiles) {
",4,0,0,1,3,0,0,0,0,4,32,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1025,"    if (!config.variableMapOutputFile.equals("""")) {
",4,0,0,2,5,0,2,0,0,8,47,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1034,"    if (!config.propertyMapOutputFile.equals("""")) {
",4,0,0,2,5,0,2,0,0,8,47,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1044,"    if (variableMapOutputPath != null) {
",2,1,0,1,3,0,0,0,0,3,36,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1050,"    if (propertyMapOutputPath != null) {
",2,1,0,1,3,0,0,0,0,3,36,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1056,"    if (functionInformationMapOutputPath != null) {
",2,1,0,1,3,0,0,0,0,3,47,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1067,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1153,"    List<String> outputManifests = config.outputManifests;
",6,0,0,0,0,0,0,4,0,10,54,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1154,"    if (outputManifests.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,32,5,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1158,"    for (String outputManifest : outputManifests) {
",4,0,0,1,3,0,0,2,0,6,47,4,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1159,"      if (outputManifest.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,31,7,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1160,"        continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractCommandLineRunner,64,1185,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1936,"      VariableMap map = null;
",2,0,0,0,0,0,0,2,0,4,23,8,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1937,"      if (options.inputVariableMapSerialized != null) {
",4,1,0,1,3,0,0,0,0,5,49,8,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1946,"      final VariableMap prevVariableMap = map;
",4,0,0,0,0,1,0,2,0,7,40,8,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1947,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,481,"      passes.add(flowSensitiveInlineVariables);
",0,0,0,1,2,0,6,0,0,6,41,7,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,485,"      if (options.removeUnusedVars) {
",4,0,0,1,3,0,0,0,0,4,31,7,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,576,"        passes.add(peepholeOptimizations);
",0,0,0,1,2,0,6,0,0,6,34,9,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,600,"      passes.add(renameVars);
",0,0,0,1,2,0,6,0,0,6,23,7,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,617,"      passes.add(latePeepholeOptimizations);
",0,0,0,1,2,0,6,0,0,6,38,7,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,683,"      passes.add(minimizeExitPoints);
",0,0,0,1,2,0,6,0,0,6,31,7,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,684,"      passes.add(peepholeOptimizations);
",0,0,0,1,2,0,6,0,0,6,34,7,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1959,"    char[] reservedChars =
",2,0,0,1,2,0,0,0,0,2,22,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1961,"    boolean preserveAnonymousFunctionNames =
",2,0,0,0,0,0,0,0,0,2,40,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1963,"    RenameVars rn = new RenameVars(
",2,0,0,0,1,0,0,4,0,6,31,4,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1973,"    rn.process(externs, root);
",0,0,0,1,2,0,8,0,0,8,26,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1974,"    return rn.getVariableMap();
",0,0,0,1,2,1,4,0,0,4,27,5,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,934,"      return new PeepholeOptimizationsPass(compiler,
",2,0,0,0,1,1,0,2,0,4,46,9,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1491,"      return new MinimizeExitPoints(compiler);
",2,0,0,1,2,1,0,2,0,4,40,9,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,742,"      return new ControlStructureCheck(compiler);
",2,0,0,1,2,1,0,2,0,4,43,9,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,948,"      return new PeepholeOptimizationsPass(compiler,
",2,0,0,0,1,1,0,2,0,4,46,9,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1664,"      return new FlowSensitiveInlineVariables(compiler);
",2,0,0,1,2,1,0,2,0,4,50,9,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/Denormalize,64,80,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1947,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1949,"          variableMap = runVariableRenaming(
",2,0,0,0,1,0,2,0,0,5,34,13,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1951,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01639,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,332,"      passes.add(optimizeArgumentsArray);
",0,0,0,1,2,0,6,0,0,6,35,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,339,"      passes.add(closureCodeRemoval);
",0,0,0,1,2,0,6,0,0,6,31,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,409,"      passes.add(closureOptimizePrimitives);
",0,0,0,1,2,0,6,0,0,6,38,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,540,"      passes.add(convertToDottedProperties);
",0,0,0,1,2,0,6,0,0,6,38,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,570,"      passes.add(coalesceVariableNames);
",0,0,0,1,2,0,6,0,0,6,34,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,575,"      if (options.foldConstants) {
",4,0,0,1,3,0,0,0,0,4,28,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,581,"      passes.add(exploitAssign);
",0,0,0,1,2,0,6,0,0,6,26,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,582,"      passes.add(collapseVariableDeclarations);
",0,0,0,1,2,0,6,0,0,6,41,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,613,"      passes.add(renameLabels);
",0,0,0,1,2,0,6,0,0,6,25,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,646,"      passes.add(inlineFunctions);
",0,0,0,1,2,0,6,0,0,6,28,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,654,"      if (options.deadAssignmentElimination) {
",4,0,0,1,3,0,0,0,0,4,40,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,655,"        passes.add(deadAssignmentsElimination);
",0,0,0,1,2,0,6,0,0,6,39,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,657,"      if (!runOptimizeCalls) {
",2,0,0,1,3,0,0,0,0,3,24,6,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,676,"      passes.add(inlineVariables);
",0,0,0,1,2,0,6,0,0,6,28,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,688,"      passes.add(removeUnreachableCode);
",0,0,0,1,2,0,6,0,0,6,34,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,733,"      Preconditions.checkState(!pass.isOneTimePass());
",0,0,0,2,4,0,8,0,0,9,48,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,734,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,2068,"    return options.propertyRenaming == PropertyRenamingPolicy.HEURISTIC ||
",8,2,0,0,0,1,0,0,0,10,70,4,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,2096,"      additionalReplacements.put(COMPILED_CONSTANT_NAME, new Node(Token.TRUE));
",4,0,0,2,4,0,6,2,0,12,73,7,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,64,1236,"    return assumeStrictThis;
",2,0,0,0,0,1,0,0,0,2,24,4,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,64,88,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/CoalesceVariableNames,64,89,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,900,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/AnonymousFunctionNamingPolicy,64,59,"    return reservedCharacters;
",2,0,0,0,0,1,0,0,0,2,26,4,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1454,"      if (isInliningForbidden()) {
",0,0,0,2,5,0,2,0,0,2,28,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1461,"        if (options.inlineVariables) {
",4,0,0,1,3,0,0,0,0,4,30,11,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1469,"        return new InlineVariables(compiler, mode, true);
",4,0,0,1,2,1,0,2,0,7,49,11,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1698,"      return new CollapseVariableDeclarations(compiler);
",2,0,0,1,2,1,0,2,0,4,50,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1313,"      return new ClosureOptimizePrimitives(compiler);
",2,0,0,1,2,1,0,2,0,4,47,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1294,"      return new OptimizeArgumentsArray(compiler);
",2,0,0,1,2,1,0,2,0,4,44,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1303,"      return new ClosureCodeRemoval(compiler, options.removeAbstractMethods,
",6,0,0,0,1,1,0,2,0,8,70,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,900,"      return new CompilerPass() {
",0,0,0,1,3,1,0,2,0,2,27,10,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,903,"          Map<String, Integer> newCssNames = null;
",2,0,0,0,0,0,0,6,0,8,40,13,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,904,"          if (options.gatherCssNames) {
",4,0,0,1,3,0,0,0,0,4,29,14,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,907,"          (new ReplaceCssNames(compiler, newCssNames)).process(
",4,0,0,2,5,0,2,2,0,8,53,14,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,909,"          cssNames = newCssNames;
",4,0,0,0,0,0,0,0,0,5,23,13,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,910,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1982,"      return new RenameLabels(compiler);
",2,0,0,1,2,1,0,2,0,4,34,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,64,64,"    Preconditions.checkNotNull(externs);
",0,0,0,1,2,0,6,0,0,6,36,5,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,64,65,"    Preconditions.checkNotNull(root);
",0,0,0,1,2,0,6,0,0,6,33,5,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,64,66,"    NodeTraversal.traverse(compiler, root, this);
",0,0,0,1,2,0,8,0,0,8,45,5,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DeadAssignmentsElimination,64,67,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1502,"      return new UnreachableCodeElimination(compiler, true);
",2,0,0,1,2,1,0,2,0,5,54,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1584,"      return new DeadAssignmentsElimination(compiler);
",2,0,0,1,2,1,0,2,0,4,48,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1593,"      boolean enableBlockInlining = !isInliningForbidden();
",2,0,0,1,2,0,2,0,0,5,53,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1594,"      return new InlineFunctions(
",0,0,0,0,1,1,0,2,0,2,27,10,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1609,"      boolean removeOnlyLocals = options.removeUnusedLocalVars
",6,0,0,0,0,0,0,0,0,6,56,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1611,"      boolean preserveAnonymousFunctionNames =
",2,0,0,0,0,0,0,0,0,2,40,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1613,"      return new RemoveUnusedVars(
",0,0,0,0,1,1,0,2,0,2,28,10,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1673,"      return new CoalesceVariableNames(compiler, options.generatePseudoNames);
",6,0,0,1,2,1,0,2,0,8,72,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1685,"      return new PeepholeOptimizationsPass(compiler,
",2,0,0,0,1,1,0,2,0,4,46,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,1991,"      return new ConvertToDottedProperties(compiler);
",2,0,0,1,2,1,0,2,0,4,47,9,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,64,77,"    this(compiler, PARAMETER_PREFIX);
",4,0,0,1,2,0,0,0,0,4,33,4,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/OptimizeArgumentsArray,64,78,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,189,"      checks.add(checkControlStructures);
",0,0,0,1,2,0,6,0,0,6,35,7,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,254,"      checks.add(checkControlFlow);
",0,0,0,1,2,0,6,0,0,6,29,7,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/PhaseOptimizer,64,373,"            optimalPasses.add(pass);
",0,0,0,1,2,0,6,0,0,6,24,12,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/PhaseOptimizer,64,374,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,711,"        sharedCallbacks.add(new CheckAccidentalSemicolon(CheckLevel.WARNING));
",4,0,0,2,4,0,4,2,0,10,70,11,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,712,"        sharedCallbacks.add(new CheckSideEffects(CheckLevel.WARNING));
",4,0,0,2,4,0,4,2,0,10,62,11,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,64,90,"      if (pt == Token.FOR && parent.getChildCount() == 4 &&
",6,4,0,1,3,0,4,0,0,14,53,7,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,64,96,"        return;  // it might be ok to not have a side-effect
",0,0,0,0,0,1,0,0,0,0,52,3,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/ReplaceCssNames,64,134,"    return compiler.getCssRenamingMap();
",0,0,0,1,2,1,4,0,0,4,36,5,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,654,"        optimize();
",0,0,0,1,2,0,2,0,0,2,11,9,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1558,"    normalize();
",0,0,0,1,2,0,2,0,0,2,12,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1560,"    PhaseOptimizer phaseOptimizer = new PhaseOptimizer(this, tracker);
",4,0,0,1,2,0,0,4,0,8,66,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1561,"    if (options.devMode == DevMode.EVERY_PASS) {
",8,1,0,1,3,0,0,0,0,9,44,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1564,"    phaseOptimizer.consume(getPassConfig().getOptimizations());
",0,0,0,3,6,0,8,0,0,8,59,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1565,"    phaseOptimizer.process(externsRoot, jsRoot);
",0,0,0,1,2,0,8,0,0,8,44,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1566,"    if (hasErrors()) {
",0,0,0,2,5,0,2,0,0,2,18,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1569,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1610,"    logger.info(""Normalizing"");
",0,0,0,1,2,0,4,0,0,5,27,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1611,"    startPass(""normalize"");
",0,0,0,1,2,0,2,0,0,3,23,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1612,"    process(new Normalize(this, false));
",0,0,0,2,4,0,2,2,0,5,36,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1613,"    endPass();
",0,0,0,1,2,0,2,0,0,2,10,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,64,1614,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/RenameVars,64,160,"      this.reservedNames = Sets.newHashSet(reservedNames);
",2,0,0,1,2,0,6,0,0,9,52,6,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,315,"    List<PassFactory> passes = Lists.newArrayList();
",2,0,0,1,2,0,4,4,0,10,48,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,320,"    if (options.runtimeTypeCheck) {
",4,0,0,1,3,0,0,0,0,4,31,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,324,"    passes.add(createEmptyPass(""beforeStandardOptimizations""));
",0,0,0,2,4,0,6,0,0,7,59,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,326,"    if (!options.idGenerators.isEmpty()) {
",4,0,0,2,5,0,2,0,0,7,38,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,331,"    if (options.optimizeArgumentsArray) {
",4,0,0,1,3,0,0,0,0,4,37,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,337,"    if (options.closurePass &&
",4,1,0,0,1,0,0,0,0,5,26,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,344,"    if (options.collapseProperties) {
",4,0,0,1,3,0,0,0,0,4,33,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,350,"    if (!options.replaceStringsFunctionDescriptions.isEmpty()) {
",4,0,0,2,5,0,2,0,0,7,60,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,355,"    if (options.tightenTypes) {
",4,0,0,1,3,0,0,0,0,4,27,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,363,"    if (options.disambiguateProperties) {
",4,0,0,1,3,0,0,0,0,4,37,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,367,"    if (options.computeFunctionSideEffects) {
",4,0,0,1,3,0,0,0,0,4,41,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,382,"    if (options.chainCalls) {
",4,0,0,1,3,0,0,0,0,4,25,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,388,"    if (options.inlineConstantVars) {
",4,0,0,1,3,0,0,0,0,4,33,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,395,"    if (options.ignoreCajaProperties) {
",4,0,0,1,3,0,0,0,0,4,35,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,399,"    assertAllOneTimePasses(passes);
",0,0,0,1,2,0,4,0,0,4,31,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,401,"    if (options.smartNameRemoval || options.reportPath != null) {
",8,2,0,1,3,0,0,0,0,10,61,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,408,"    if (options.closurePass) {
",4,0,0,1,3,0,0,0,0,4,26,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,420,"    if (options.crossModuleCodeMotion) {
",4,0,0,1,3,0,0,0,0,4,36,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,429,"    if (options.devirtualizePrototypeMethods) {
",4,0,0,1,3,0,0,0,0,4,43,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,433,"    if (options.customPasses != null) {
",4,1,0,1,3,0,0,0,0,5,35,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,438,"    passes.add(createEmptyPass(""beforeMainOptimizations""));
",0,0,0,2,4,0,6,0,0,7,55,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,440,"    if (options.specializeInitialModule) {
",4,0,0,1,3,0,0,0,0,4,38,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,459,"    passes.addAll(getMainOptimizationLoop());
",0,0,0,2,4,0,6,0,0,6,41,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,461,"    passes.add(createEmptyPass(""beforeModuleMotion""));
",0,0,0,2,4,0,6,0,0,7,50,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,463,"    if (options.crossModuleCodeMotion) {
",4,0,0,1,3,0,0,0,0,4,36,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,467,"    if (options.crossModuleMethodMotion) {
",4,0,0,1,3,0,0,0,0,4,38,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,471,"    passes.add(createEmptyPass(""afterModuleMotion""));
",0,0,0,2,4,0,6,0,0,7,49,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,475,"    if (options.customPasses != null) {
",4,1,0,1,3,0,0,0,0,5,35,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,480,"    if (options.flowSensitiveInlineVariables) {
",4,0,0,1,3,0,0,0,0,4,43,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,492,"    if (options.smartNameRemoval) {
",4,0,0,1,3,0,0,0,0,4,31,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,496,"    if (options.collapseAnonymousFunctions) {
",4,0,0,1,3,0,0,0,0,4,41,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,501,"    if (options.moveFunctionDeclarations) {
",4,0,0,1,3,0,0,0,0,4,39,5,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,505,"    if (options.anonymousFunctionNaming ==
",4,1,0,0,1,0,0,0,0,5,38,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/DefaultPassConfig,64,516,"    if (options.extractPrototypeMemberDeclarations &&
",4,1,0,0,1,0,0,0,0,5,49,4,0.01563,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,65,1265,"      inputsByName = Maps.newHashMap();
",2,0,0,1,2,0,4,0,0,7,33,6,0.00373,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,65,1261,"    initCompilerOptionsIfTesting();
",0,0,0,1,2,0,2,0,0,2,31,5,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,65,1262,"    CompilerInput input = new CompilerInput(
",2,0,0,0,1,0,0,4,0,6,40,4,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,65,1264,"    if (inputsByName == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,65,1267,"    inputsByName.put(input.getName(), input);
",0,0,0,2,4,0,10,0,0,10,41,5,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,65,1268,"    return input.getAstRoot(this);
",0,0,0,1,2,1,4,0,0,4,30,5,0.00357,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,961,"      switch (s.charAt(i)) {
",0,0,0,2,5,0,6,0,0,6,22,7,0.00215,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,632,"        if (childCount !=
",2,1,0,0,1,0,0,0,0,3,17,5,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,638,"        addJsString(n.getString());
",0,0,0,2,4,0,6,0,0,6,27,6,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,639,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,976,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,977,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,978,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.00204,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,948,"    String cached = ESCAPED_JS_STRINGS.get(s);
",2,0,0,1,2,0,6,2,0,10,42,4,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,949,"    if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,950,"      cached = jsString(s);
",2,0,0,1,2,0,4,0,0,7,21,6,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,951,"      ESCAPED_JS_STRINGS.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,34,7,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,953,"    add(cached);
",0,0,0,1,2,0,4,0,0,4,12,5,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,954,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,957,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,960,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,969,"    if (singleq < doubleq) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,981,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,1013,"      char c = s.charAt(i);
",2,0,0,1,2,0,6,0,0,8,21,7,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,1014,"      switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,6,0.00203,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,65,277,"      composedGuards.addGuard(new DiagnosticGroupWarningsGuard(
",0,0,0,0,2,0,4,2,0,6,57,7,0.00196,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,65,95,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00196,0,-1
defect4j,closure,com/google/javascript/jscomp/WarningsGuard,65,106,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00196,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,65,249,"      options.setWarningLevel(
",0,0,0,0,1,0,4,0,0,4,24,9,0.00195,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,1010,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.00193,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,1011,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00193,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,1012,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.00193,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,65,1073,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00193,0,-1
