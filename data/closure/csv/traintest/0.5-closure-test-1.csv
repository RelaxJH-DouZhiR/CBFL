dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,16,175,"      this.aliasName = aliasName;
",4,0,0,0,0,0,0,0,0,5,27,5,0.25000,1,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,1288,"      if (options.dependencyOptions.needsManagement() && options.closurePass) {
",8,1,0,2,5,0,2,0,0,11,73,6,0.00025,1,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax,20,220,"      if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,130,"    if (
",0,0,0,0,1,0,0,0,0,0,4,3,0.00268,1,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,228,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,34,334,"        if (getLastChar() != ' ') {
",0,1,0,2,5,0,2,0,0,4,27,7,0.00000,1,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,37,670,"      parseDirectives(bodyNode);
",0,0,0,1,2,0,4,0,0,4,26,6,0.00019,1,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,214,"      e.setAnnotation(VISITED_EDGE);
",0,0,0,1,2,0,6,0,0,6,30,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,216,"      if (ignoreEdge(e)) {
",0,0,0,2,5,0,4,0,0,4,20,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,219,"      if (e.getAnnotation() == BACK_EDGE) {
",2,1,0,2,5,0,4,0,0,7,37,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,223,"      DiGraphNode<N, E> next = e.getDestination();
",2,0,0,1,2,0,4,6,0,12,44,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,224,"      if (checkSomePathsWithoutBackEdges(next, b)) {
",0,0,0,2,5,0,6,0,0,6,46,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,227,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,228,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,15,362,"          pathCheck = new CheckPathsBetweenNodes<Node, ControlFlowGraph.Branch>(
",6,0,0,0,1,0,0,4,0,10,70,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,15,370,"        if (pathCheck.somePathsSatisfyPredicate()) {
",0,0,0,2,5,0,4,0,0,4,44,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/FlowSensitiveInlineVariables,15,104,"          if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
",0,1,0,3,7,0,10,0,0,12,60,10,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,15,1198,"      case Token.IN:     return 9;
",4,0,0,0,0,1,0,0,0,4,28,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,313,"    List<GraphEdge<N, E>> result = Lists.newArrayList();
",2,0,0,1,2,0,4,8,0,14,52,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,314,"    for (DiGraphNode<N, E> node : nodes.values()) {
",2,0,0,2,5,0,4,6,0,12,47,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,315,"      for (DiGraphEdge<N, E> edge : node.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,51,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,316,"        result.add(edge);
",0,0,0,1,2,0,6,0,0,6,17,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,317,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,318,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/LinkedDirectedGraph,15,319,"    return Collections.unmodifiableList(result);
",0,0,0,1,2,1,6,0,0,6,44,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,246,"    if (nodeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,247,"      nodeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,249,"    pushAnnotations(nodeAnnotationStack, getNodes());
",0,0,0,2,4,0,6,0,0,6,49,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,250,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,257,"    Preconditions.checkNotNull(nodeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,259,"    popAnnotations(nodeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,260,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,267,"    if (edgeAnnotationStack == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,268,"      edgeAnnotationStack = Lists.newLinkedList();
",2,0,0,1,2,0,4,0,0,7,44,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,270,"    pushAnnotations(edgeAnnotationStack, getEdges());
",0,0,0,2,4,0,6,0,0,6,49,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,271,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,278,"    Preconditions.checkNotNull(edgeAnnotationStack,
",0,0,0,0,1,0,6,0,0,6,47,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,280,"    popAnnotations(edgeAnnotationStack);
",0,0,0,1,2,0,4,0,0,4,36,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,281,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,338,"    stack.push(new GraphAnnotationState(haveAnnotations.size()));
",0,0,0,3,6,0,8,2,0,10,61,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,339,"    for (Annotatable h : haveAnnotations) {
",4,0,0,1,3,0,0,2,0,6,39,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,340,"      stack.peek().add(new AnnotationState(h, h.getAnnotation()));
",2,0,0,4,8,0,10,2,0,14,60,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,341,"      h.setAnnotation(null);
",0,0,0,1,2,0,4,0,0,4,22,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,342,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,343,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,349,"    for (AnnotationState as : stack.pop()) {
",2,0,0,2,5,0,4,2,0,8,40,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,350,"      as.first.setAnnotation(as.second);
",8,0,0,1,2,0,2,0,0,10,34,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,351,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/graph/Graph,15,352,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,87,"      Predicate<DiGraphEdge<N, E>> edgePredicate, boolean inclusive) {
",4,0,0,0,2,0,0,8,0,12,64,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,88,"    this.graph = graph;
",4,0,0,0,0,0,0,0,0,5,19,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,89,"    this.start = a;
",4,0,0,0,0,0,0,0,0,5,15,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,90,"    this.end = b;
",4,0,0,0,0,0,0,0,0,5,13,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,91,"    this.nodePredicate = nodePredicate;
",4,0,0,0,0,0,0,0,0,5,35,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,92,"    this.edgePredicate = edgePredicate;
",4,0,0,0,0,0,0,0,0,5,35,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,93,"    this.inclusive = inclusive;
",4,0,0,0,0,0,0,0,0,5,27,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,94,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,55,"  private static final Annotation BACK_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,64,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,56,"  private static final Annotation VISITED_EDGE = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,67,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,59,"  private static final Annotation WHITE = null;
",2,0,0,0,0,3,0,2,0,7,45,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,61,"  private static final Annotation GRAY = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,59,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,63,"  private static final Annotation BLACK = new Annotation() {};
",2,0,0,2,4,3,0,4,0,9,60,2,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,129,"    graph.pushNodeAnnotations();
",0,0,0,1,2,0,4,0,0,4,28,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,130,"    graph.pushEdgeAnnotations();
",0,0,0,1,2,0,4,0,0,4,28,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,131,"    discoverBackEdges(this.start);
",2,0,0,1,2,0,2,0,0,4,30,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,132,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,135,"    graph.popNodeAnnotations();
",0,0,0,1,2,0,4,0,0,4,27,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,136,"    graph.popEdgeAnnotations();
",0,0,0,1,2,0,4,0,0,4,27,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,137,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,140,"    u.setAnnotation(GRAY);
",0,0,0,1,2,0,6,0,0,6,22,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,141,"    for (DiGraphEdge<N, E> e : u.getOutEdges()) {
",2,0,0,2,5,0,4,6,0,12,45,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,142,"      if (ignoreEdge(e)) {
",0,0,0,2,5,0,4,0,0,4,20,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,145,"      DiGraphNode<N, E> v = e.getDestination();
",2,0,0,1,2,0,4,6,0,12,41,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,146,"      if (v.getAnnotation() == WHITE) {
",2,1,0,2,5,0,4,0,0,7,33,6,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,147,"        discoverBackEdges(v);
",0,0,0,1,2,0,4,0,0,4,21,9,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckPathsBetweenNodes,15,151,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,16,845,"    Preconditions.checkState(namesToTypes.containsKey(name));
",0,0,0,2,4,0,10,0,0,10,57,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,16,846,"    register(t, name);
",0,0,0,1,2,0,6,0,0,6,18,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,16,847,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1822,"      String typedef = candidate.getQualifiedName();
",2,0,0,1,2,0,4,2,0,8,46,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1823,"      if (typedef == null) {
",2,1,0,1,3,0,0,0,0,3,22,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1830,"      typeRegistry.declareType(typedef, getNativeType(UNKNOWN_TYPE));
",0,0,0,2,4,0,10,0,0,10,63,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1832,"      JSType realType = info.getTypedefType().evaluate(scope, typeRegistry);
",2,0,0,2,4,0,10,2,0,14,70,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1833,"      if (realType == null) {
",2,1,0,1,3,0,0,0,0,3,23,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1839,"      typeRegistry.overwriteDeclaredType(typedef, realType);
",0,0,0,1,2,0,8,0,0,8,54,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1840,"      if (candidate.isGetProp()) {
",0,0,0,2,5,0,4,0,0,4,28,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1841,"        defineSlot(candidate, candidate.getParent(),
",0,0,0,1,3,0,8,0,0,8,44,8,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1844,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,1678,"          continue;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,16,1098,"    return getType(TYPEFIELD_TYPEDEF);
",0,0,0,1,2,1,4,0,0,4,34,5,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,383,"            registry.identifyNonNullableName(nameNode.getQualifiedName());
",0,0,0,2,4,0,8,0,0,8,62,13,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/NamedType,16,188,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,117,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,142,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,144,"        case LENGTH:    return ""length"";
",2,0,0,0,0,1,0,0,0,3,32,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,879,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,880,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,881,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,884,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,885,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,886,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,887,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,890,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,891,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,936,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,972,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,973,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,974,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,975,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,980,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,981,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,982,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,983,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,984,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,985,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,986,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,988,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,990,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,993,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,994,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,999,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1011,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1016,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1017,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1018,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1025,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1026,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1030,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1033,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1034,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1035,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1036,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1040,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1430,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1446,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,16,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,319,"      UnionType that = object.toMaybeUnionType();
",2,0,0,1,2,0,4,2,0,8,43,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,320,"      if (alternates.size() != that.alternates.size()) {
",4,1,0,3,7,0,6,0,0,11,50,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,323,"      for (JSType alternate : that.alternates) {
",6,0,0,1,3,0,0,2,0,8,42,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,324,"        if (!hasAlternate(alternate)) {
",0,0,0,2,5,0,4,0,0,5,31,8,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,327,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,328,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,335,"    for (JSType alternate : alternates) {
",4,0,0,1,3,0,0,2,0,6,37,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,336,"      if (alternate.isEquivalentTo(type)) {
",0,0,0,2,5,0,6,0,0,6,37,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,337,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,339,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,2147,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,2148,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,2149,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,2150,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,320,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,352,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,956,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,16,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,16,349,"      String name = n.getFirstChild().getQualifiedName();
",2,0,0,2,4,0,6,2,0,10,51,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,16,350,"      if (name != null) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,16,351,"        ProvidedName pn = providedNames.get(name);
",2,0,0,1,2,0,6,2,0,10,42,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessClosurePrimitives,16,352,"        if (pn != null) {
",2,1,0,1,3,0,0,0,0,3,17,8,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,16,1452,"    Preconditions.checkNotNull(name);
",0,0,0,1,2,0,6,0,0,6,33,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,16,1453,"    nonNullableTypeNames.add(name);
",0,0,0,1,2,0,6,0,0,6,31,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,16,1454,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,16,705,"        } else if (FunctionTypeBuilder.isFunctionTypeDeclaration(info)) {
",0,0,0,2,6,0,6,0,0,6,65,9,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,315,"    if (object == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,318,"    if (object.isUnionType()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,534,"      Collection<JSType> newAlternates = resolvedTypes.build();
",2,0,0,1,2,0,4,4,0,10,57,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,535,"      Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,7,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/UnionType,16,537,"      alternates = newAlternates;
",4,0,0,0,0,0,0,0,0,5,27,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,16,1014,"    setType(type, TYPEFIELD_TYPEDEF);
",0,0,0,1,2,0,6,0,0,6,33,5,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,16,1015,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,16,900,"                        if (!jsdocBuilder.recordTypedef(type)) {
",0,0,0,2,5,0,6,0,0,7,40,16,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,16,449,"    if (type != null && !hasAnyTypeRelatedTags()) {
",2,2,0,2,5,0,2,0,0,8,47,4,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,16,450,"      currentInfo.setTypedefType(type);
",0,0,0,1,2,0,6,0,0,6,33,7,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,16,451,"      populated = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,16,452,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,16,343,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,16,449,"            fixTypeNode(node);
",0,0,0,1,2,0,4,0,0,4,18,12,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,16,450,"          }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,16,458,"      if (typeNode.isString()) {
",0,0,0,2,5,0,4,0,0,4,26,6,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,16,459,"        String name = typeNode.getString();
",2,0,0,1,2,0,4,2,0,8,35,7,0.25000,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,375,"          sb.append("", "");
",0,0,0,1,2,0,4,0,0,5,16,12,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/BasicErrorManager,17,161,"        return lineno1 - lineno2;
",4,1,0,0,0,1,0,0,0,5,25,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,17,1295,"                return rValue.getJSType();
",0,0,0,1,2,1,4,0,0,4,26,19,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,17,1291,"              if (rValue.getJSType() != null && !rValue.getJSType().isUnknownType()) {
",0,2,0,4,9,0,10,0,0,13,72,16,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,374,"        if (i > 0) {
",2,1,0,1,3,0,0,0,0,3,12,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,378,"        sb.append(property);
",0,0,0,1,2,0,6,0,0,6,20,10,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,379,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,10,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,380,"        sb.append(getPropertyType(property).toStringHelper(forAnnotations));
",0,0,0,3,6,0,12,0,0,12,68,10,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,382,"        ++i;
",2,0,0,0,0,0,0,0,0,3,4,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,383,"        if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) {
",6,2,0,1,3,0,0,0,0,9,60,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,387,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,17,832,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,17,208,"        jsdocBuilder.recordBlockDescription("""");
",0,0,0,1,2,0,4,0,0,5,40,9,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,356,"    } else if (prettyPrint) {
",2,0,0,1,4,0,0,0,0,2,25,5,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,358,"      prettyPrint = false;
",2,0,0,0,0,0,0,0,0,4,20,7,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,361,"      Set<String> propertyNames = Sets.newTreeSet();
",2,0,0,1,2,0,4,4,0,10,46,7,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,362,"      for (ObjectType current = this;
",2,0,0,0,1,0,0,2,0,4,31,8,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,363,"           current != null && !current.isNativeObjectType() &&
",2,3,0,1,2,0,4,0,0,10,51,7,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,366,"        propertyNames.addAll(current.getOwnPropertyNames());
",0,0,0,2,4,0,8,0,0,8,52,10,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,365,"           current = current.getImplicitPrototype()) {
",2,0,0,1,4,0,4,0,0,7,43,7,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,369,"      StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,7,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,370,"      sb.append(""{"");
",0,0,0,1,3,0,4,0,0,5,15,8,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,372,"      int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,8,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,373,"      for (String property : propertyNames) {
",4,0,0,1,3,0,0,2,0,6,39,7,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,389,"      sb.append(""}"");
",0,0,0,1,3,0,4,0,0,5,15,8,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,391,"      prettyPrint = true;
",2,0,0,0,0,0,0,0,0,4,19,7,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,392,"      return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,8,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,467,"      Iterable<ObjectType> thisInterfaces = getCtorImplementedInterfaces();
",2,0,0,1,2,0,2,4,0,8,69,6,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,468,"      for (ObjectType thisInterface : thisInterfaces) {
",4,0,0,1,3,0,0,2,0,6,49,6,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,17,831,"    if (!lazyInitDocumentation()) {
",0,0,0,2,5,0,2,0,0,3,31,4,0.01887,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,17,240,"    populated = true;
",2,0,0,0,0,0,0,0,0,4,17,4,0.01887,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,17,241,"    return currentInfo.documentBlock(description);
",0,0,0,1,2,1,6,0,0,6,46,5,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,17,1289,"            JSType knownType = null;
",2,0,0,0,0,0,0,2,0,4,24,14,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,17,1290,"            if (rValue != null) {
",2,1,0,1,3,0,0,0,0,3,21,14,0.01887,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,17,1841,"      return getNativeType(UNKNOWN_TYPE);
",0,0,0,1,2,1,4,0,0,4,35,7,0.01266,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,691,"            var.setType(oldType == null ?
",2,1,0,0,1,0,4,0,0,7,29,13,0.00943,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,476,"      for (ObjectType thisInterface : getCtorExtendedInterfaces()) {
",2,0,0,2,5,0,2,2,0,6,62,6,0.00870,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/PrototypeObjectType,17,354,"    if (hasReferenceName()) {
",0,0,0,2,5,0,2,0,0,2,25,5,0.00775,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,687,"          String qKeyName = qObjName + ""."" + memberName;
",6,1,0,0,0,0,0,2,0,10,46,10,0.00763,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,688,"          Var var = syntacticScope.getVar(qKeyName);
",2,0,0,1,2,0,6,2,0,10,42,10,0.00763,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,689,"          JSType oldType = var == null ? null : var.getType();
",4,1,0,1,2,0,4,2,0,11,52,10,0.00763,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,690,"          if (var != null && var.isTypeInferred()) {
",2,2,0,2,5,0,4,0,0,8,42,10,0.00763,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,695,"          scope.inferQualifiedSlot(name, qKeyName,
",0,0,0,0,1,0,8,0,0,8,40,11,0.00763,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,17,1038,"        validator.expectCanAssignToPropertyOf(
",0,0,0,0,1,0,4,0,0,4,38,9,0.00714,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,212,"    if (!implementedInterfaces.isEmpty()){
",0,0,0,2,5,0,4,0,0,5,38,4,0.00629,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,215,"    FunctionType superCtor = isConstructor() ?
",2,0,0,1,2,0,2,2,0,6,42,4,0.00629,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,217,"    if (superCtor != null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00629,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,220,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00629,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,518,"    return extendedInterfaces.size();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00629,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,17,1557,"      for (ObjectType extInterface : functionType.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,70,7,0.00629,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,17,1565,"      if (functionType.hasImplementedInterfaces()) {
",0,0,0,2,5,0,4,0,0,4,46,8,0.00629,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeCheck,17,1570,"      if (functionType.getExtendedInterfacesCount() > 1) {
",0,1,0,2,5,0,4,0,0,5,52,7,0.00629,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,17,1289,"      return ImmutableList.of();
",0,0,0,1,2,1,4,0,0,4,26,7,0.00606,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,17,257,"                  if (!jsdocBuilder.recordConstancy()) {
",0,0,0,2,5,0,4,0,0,5,38,13,0.00602,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,17,261,"                  token = eatTokensUntilEOL();
",2,0,0,1,2,0,2,0,0,5,28,13,0.00602,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,17,262,"                  continue retry;
",2,0,0,0,0,0,0,0,0,2,15,13,0.00602,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,841,"      if (that.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,25,7,0.00599,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,844,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00599,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,17,612,"        typeRegistry.declareType(fnName, fnType.getInstanceType());
",0,0,0,2,4,0,10,0,0,10,59,10,0.00599,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,674,"      Node value = name.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,34,6,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,675,"      String memberName = NodeUtil.getObjectLitKeyName(name);
",2,0,0,1,2,0,6,2,0,10,55,6,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,676,"      if (memberName != null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,677,"        JSType rawValueType =  name.getFirstChild().getJSType();
",2,0,0,2,4,0,6,2,0,10,56,8,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,678,"        JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
",2,0,0,0,1,0,4,2,0,8,61,8,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,680,"        if (valueType == null) {
",2,1,0,1,3,0,0,0,0,3,24,8,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,683,"        objectType.defineInferredProperty(memberName, valueType, name);
",0,0,0,1,2,0,10,0,0,10,63,9,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,686,"        if (qObjName != null && name.isStringKey()) {
",2,2,0,2,5,0,4,0,0,8,45,8,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,699,"      } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00595,0,-1
defect4j,closure,com/google/javascript/jscomp/TypeInference,17,673,"         name = name.getNext()) {
",2,0,0,1,4,0,4,0,0,7,24,4,0.00595,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,17,1288,"    if (info == null || info.extendedInterfaces == null) {
",6,3,0,1,3,0,0,0,0,9,54,4,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,160,"    super(registry, name,
",4,0,0,0,1,0,0,0,0,4,21,4,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,162,"    setPrettyPrint(true);
",0,0,0,1,2,0,2,0,0,3,21,5,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,164,"    Preconditions.checkArgument(source == null ||
",2,2,0,0,1,0,4,0,0,8,45,5,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,166,"    Preconditions.checkArgument(name != null);
",2,1,0,1,2,0,4,0,0,7,42,5,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,167,"    this.source = source;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,168,"    this.call = new ArrowType(registry, new Node(Token.PARAM_LIST), null);
",8,0,0,2,4,0,0,4,0,15,70,4,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,169,"    this.kind = Kind.INTERFACE;
",6,0,0,0,0,0,0,0,0,7,27,4,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,170,"    this.typeOfThis = new InstanceObjectType(registry, this);
",4,0,0,1,2,0,0,2,0,7,57,4,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,171,"    this.templateTypeNames = ImmutableList.of();
",2,0,0,1,2,0,4,0,0,7,44,4,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,172,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,177,"    return new FunctionType(registry, name, source);
",6,0,0,1,2,1,0,2,0,8,48,5,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,412,"        for (ObjectType interfaceType : getExtendedInterfaces()) {
",2,0,0,2,5,0,2,2,0,6,58,8,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,523,"    if (isInterface()) {
",0,0,0,2,5,0,2,0,0,2,20,5,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,524,"      this.extendedInterfaces = ImmutableList.copyOf(extendedInterfaces);
",2,0,0,1,2,0,6,0,0,9,67,6,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/FunctionType,17,528,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,17,1428,"    return FunctionType.forInterface(this, name, source);
",0,0,0,1,2,1,8,0,0,8,53,5,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,17,55,"    this(registry, constructor, false);
",4,0,0,1,2,0,0,0,0,5,35,4,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/InstanceObjectType,17,56,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00592,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,17,354,"        extendedInterfaces = Lists.newArrayList();
",2,0,0,1,2,0,4,0,0,7,42,8,0.00592,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,17,355,"        for (JSTypeExpression t : info.getExtendedInterfaces()) {
",2,0,0,2,5,0,4,2,0,8,57,8,0.00592,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,17,609,"      fnType = typeRegistry.createInterfaceType(
",2,0,0,0,1,0,4,0,0,7,42,7,0.00592,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,2147,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,2148,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,2149,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,2150,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1430,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,0.16667,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1446,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,18,1310,"    Preconditions.checkNotNull(options);
",0,0,0,1,2,0,6,0,0,6,36,5,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,18,1311,"    this.dependencyOptions = options;
",4,0,0,0,0,0,0,0,0,5,33,4,0.05882,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,18,1312,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,18,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,129,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,143,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,0.05000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,352,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,0.04762,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1011,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1016,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1017,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1018,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1025,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1026,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1030,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1031,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1033,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1034,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1035,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1036,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1038,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1037,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1040,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,320,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,117,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,142,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,881,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,886,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,887,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,974,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,975,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,982,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,983,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,984,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,985,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,986,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,988,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,990,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,993,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,994,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,18,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,879,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,880,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,884,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,885,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,890,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,891,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,936,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,972,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,973,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,980,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,981,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,999,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.02632,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,956,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.02632,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,18,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,161,"          createSynthesizedExternVar(varName);
",0,0,0,1,2,0,4,0,0,4,36,11,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,162,"          scope.getGlobalScope().declare(varName, n,
",0,0,0,1,3,0,10,0,0,10,42,11,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,166,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01613,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,149,"      if (NodeUtil.isFunctionExpression(parent)) {
",0,0,0,2,5,0,6,0,0,6,44,7,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,154,"        if (!strictExternCheck || !t.getInput().isExtern()) {
",2,1,0,3,7,0,6,0,0,11,53,8,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,155,"          t.report(n, UNDEFINED_VAR_ERROR, varName);
",0,0,0,1,2,0,10,0,0,10,42,11,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,158,"        if (sanityCheck) {
",2,0,0,1,3,0,0,0,0,2,18,8,0.01587,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,18,456,"    Scope result = this;
",2,0,0,0,0,0,0,2,0,4,20,4,0.01429,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,18,457,"    while (result.getParent() != null) {
",0,1,0,2,5,0,4,0,0,5,36,4,0.01429,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,18,460,"    return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.01429,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,210,"    Node nameNode = IR.name(varName);
",2,0,0,1,2,0,6,2,0,10,33,4,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,218,"    if (compiler.getCodingConvention().isConstant(varName)) {
",0,0,0,3,7,0,8,0,0,8,57,5,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,222,"    getSynthesizedExternsRoot().addChildToBack(
",0,0,0,1,3,0,4,0,0,4,43,5,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,224,"    varsToDeclareInExterns.remove(varName);
",0,0,0,1,2,0,6,0,0,6,39,5,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,225,"    compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,5,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,226,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,268,"    return compiler.getSynthesizedExternsInput();
",0,0,0,1,2,1,4,0,0,4,45,5,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,273,"    if (synthesizedExternsRoot == null) {
",2,1,0,1,3,0,0,0,0,3,37,4,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,274,"      CompilerInput synthesizedExterns = getSynthesizedExternsInput();
",2,0,0,1,2,0,2,2,0,6,64,6,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,275,"      synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler);
",2,0,0,1,2,0,6,0,0,9,65,6,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/VarCheck,18,277,"    return synthesizedExternsRoot;
",2,0,0,0,0,1,0,0,0,2,30,4,0.01370,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,2334,"    if (synthesizedExternsInput == null) {
",2,1,0,1,3,0,0,0,0,3,38,4,0.01205,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,2335,"      synthesizedExternsInput = newExternInput(SYNTHETIC_EXTERNS);
",2,0,0,1,2,0,4,0,0,7,60,6,0.01205,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,2337,"    return synthesizedExternsInput;
",2,0,0,0,0,1,0,0,0,2,31,4,0.01205,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,1027,"    SourceAst ast = new SyntheticAst(name);
",4,0,0,1,2,0,0,4,0,8,39,4,0.01176,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,1028,"    if (inputsById.containsKey(ast.getInputId())) {
",0,0,0,3,7,0,8,0,0,8,47,5,0.01176,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,1031,"    CompilerInput input = new CompilerInput(ast, true);
",4,0,0,1,2,0,0,4,0,9,51,4,0.01176,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,1032,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.01176,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,18,1033,"    externsRoot.addChildToFront(ast.getAstRoot(this));
",0,0,0,2,4,0,8,0,0,8,50,5,0.01176,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1000,"        String jsTypeString = jsType.toString();
",2,0,0,1,2,0,4,2,0,8,40,8,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1001,"        if (jsTypeString != null) {
",2,1,0,1,3,0,0,0,0,3,27,8,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1002,"          sb.append("" : "");
",0,0,0,1,2,0,4,0,0,5,17,11,0.20000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1003,"          sb.append(jsTypeString);
",0,0,0,1,2,0,6,0,0,6,24,11,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,137,"            return getNativeType(NULL_TYPE);
",0,0,0,1,2,1,4,0,0,4,32,22,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,136,"          if (p.outcome) {
",4,0,0,1,3,0,0,0,0,4,16,20,0.14286,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1011,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1016,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1017,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1018,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1025,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1026,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1030,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1033,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1034,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1035,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1036,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1040,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,117,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,142,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,881,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,886,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,887,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,974,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,975,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,982,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,983,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,984,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,985,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,986,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,988,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,990,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,993,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,994,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.03125,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,19,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,320,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,879,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,880,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,884,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,885,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,890,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,891,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,936,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,972,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,973,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,980,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,981,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,999,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.03030,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,19,198,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,5,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,19,184,"  private class ThisTypeValidator implements Predicate<JSType> {
",2,0,0,0,1,1,0,4,0,7,62,2,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,19,193,"      if (!type.restrictByNotNullOrUndefined().isSubtype(
",0,0,0,1,4,0,6,0,0,7,51,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,19,393,"      maybeThisType = ObjectType.cast(
",2,0,0,0,1,0,4,0,0,7,32,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,19,397,"      thisType = maybeThisType;
",4,0,0,0,0,0,0,0,0,5,25,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,19,398,"      thisType.setValidator(new ThisTypeValidator());
",0,0,0,2,4,0,4,2,0,6,47,7,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,19,1113,"    return thisType;
",2,0,0,0,0,1,0,0,0,2,16,4,0.02439,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.02381,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.02083,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02041,0,-1
defect4j,closure,com/google/javascript/rhino/Node,19,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,212,"        JSType paramType =  getTypeIfRefinable(param, blindScope);
",2,0,0,1,2,0,6,2,0,10,58,8,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,213,"        Node left = callee.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,35,8,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,214,"        Node right = callee.getLastChild();
",2,0,0,1,2,0,4,2,0,8,35,8,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,215,"        if (left.isName() && ""goog"".equals(left.getString()) &&
",0,1,0,3,7,0,10,0,0,12,55,8,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,217,"          Function<TypeRestriction, JSType> restricter =
",2,0,0,0,0,0,0,6,0,8,46,10,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,219,"          if (restricter != null) {
",2,1,0,1,3,0,0,0,0,3,25,10,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,220,"            return restrictParameter(param, paramType, blindScope, restricter,
",0,0,0,0,1,1,10,0,0,10,66,13,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,234,"    type = restriction.apply(new TypeRestriction(type, outcome));
",6,0,0,2,4,0,4,2,0,13,61,4,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,237,"    if (type != null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,238,"      FlowScope informed = blindScope.createChildFlowScope();
",2,0,0,1,2,0,4,2,0,8,55,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,239,"      declareNameInScope(informed, parameter, type);
",0,0,0,1,2,0,8,0,0,8,46,7,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,250,"    private TypeRestriction(JSType type, boolean outcome) {
",6,0,0,1,3,1,0,2,0,9,55,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,251,"      this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,5,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,252,"      this.outcome = outcome;
",4,0,0,0,0,0,0,0,0,5,23,5,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,253,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,246,"  private static class TypeRestriction {
",2,0,0,0,1,2,0,0,0,4,38,2,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,209,"      Node callee = condition.getFirstChild();
",2,0,0,1,2,0,4,2,0,8,40,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,210,"      Node param = condition.getLastChild();
",2,0,0,1,2,0,4,2,0,8,38,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter,19,211,"      if (callee.isGetProp() && param.isQualifiedName()) {
",0,1,0,3,7,0,8,0,0,9,52,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/FunctionTypeBuilder,19,66,"final class FunctionTypeBuilder {
",2,0,0,0,1,1,0,0,0,3,33,1,0.01852,0,-1
defect4j,closure,com/google/javascript/jscomp/TypedScopeCreator,19,1732,"          return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.01031,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,19,1776,"    this.closurePass = closurePass;
",4,0,0,0,0,0,0,0,0,5,31,4,0.00980,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,19,1777,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00980,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,19,1743,"      skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,10,0.00917,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,117,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,142,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,879,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,880,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,881,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,884,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,885,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,886,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,887,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,890,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,891,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,936,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,972,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,973,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,974,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,975,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,980,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,981,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,982,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,983,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,984,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,985,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,986,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,988,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,990,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,993,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,994,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,999,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,20,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/IR,20,390,"    return binaryOp(Token.ADD, expr1, expr2);
",4,0,0,1,2,1,6,0,0,10,41,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,320,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,956,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,20,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,20,1203,"      case Token.ADD:    return 11;
",4,0,0,0,0,1,0,0,0,4,29,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,20,2155,"      case Token.ADD: return ""+"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,20,1177,"        return Token.ADD;
",4,0,0,0,0,1,0,0,0,4,17,6,0.07143,0,-1
defect4j,closure,com/google/javascript/rhino/IR,20,473,"    Preconditions.checkState(mayBeExpression(expr1));
",0,0,0,2,4,0,8,0,0,8,49,5,0.04167,0,-1
defect4j,closure,com/google/javascript/rhino/IR,20,474,"    Preconditions.checkState(mayBeExpression(expr2));
",0,0,0,2,4,0,8,0,0,8,49,5,0.04167,0,-1
defect4j,closure,com/google/javascript/rhino/IR,20,475,"    return new Node(token, expr1, expr2);
",6,0,0,1,2,1,0,2,0,8,37,5,0.04167,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,910,"        cc.listSeparator();
",0,0,0,1,2,0,4,0,0,4,19,9,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,911,"        addExpr(n, isArrayOrFunctionArgument ? 1 : 0, Context.OTHER);
",6,0,0,1,2,0,4,0,0,10,61,9,0.03226,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,20,124,"    add("","");
",0,0,0,1,2,0,2,0,0,3,9,5,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,20,125,"    maybeLineBreak();
",0,0,0,1,2,0,2,0,0,2,17,5,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,20,126,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02941,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,20,227,"        validateString(n);
",0,0,0,1,2,0,4,0,0,4,18,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,20,228,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,20,637,"    validateNodeType(Token.STRING, n);
",4,0,0,1,2,0,4,0,0,8,34,5,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,20,638,"    validateChildCount(n, 0);
",0,0,0,1,2,0,4,0,0,4,25,5,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,20,641,"      n.getString();
",0,0,0,1,2,0,4,0,0,4,14,7,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,20,644,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,20,645,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,638,"        Preconditions.checkState(
",0,0,0,0,1,0,4,0,0,4,25,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,640,"        addJsString(n);
",0,0,0,1,2,0,4,0,0,4,15,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,641,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,987,"      quote = '\""';
",2,0,0,0,0,0,0,0,0,4,13,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,988,"      doublequote = ""\\\"""";
",2,0,0,0,0,0,0,0,0,4,21,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,989,"      singlequote = ""\'"";
",2,0,0,0,0,0,0,0,0,4,19,6,0.02083,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,953,"    String s = n.getString();
",2,0,0,1,2,0,4,2,0,8,25,4,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,954,"    boolean useSlashV = n.getBooleanProp(Node.SLASH_V);
",6,0,0,1,2,0,4,0,0,10,51,5,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,955,"    if (useSlashV) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,958,"      String cached = ESCAPED_JS_STRINGS.get(s);
",2,0,0,1,2,0,6,2,0,10,42,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,959,"      if (cached == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,960,"        cached = jsString(n.getString(), useSlashV);
",2,0,0,2,4,0,8,0,0,11,44,8,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,961,"        ESCAPED_JS_STRINGS.put(s, cached);
",0,0,0,1,2,0,8,0,0,8,34,9,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,963,"      add(cached);
",0,0,0,1,2,0,4,0,0,4,12,7,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,965,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,968,"    int singleq = 0, doubleq = 0;
",4,0,0,0,0,0,0,0,0,4,29,5,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,971,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,972,"      switch (s.charAt(i)) {
",0,0,0,2,5,0,6,0,0,6,22,7,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,980,"    if (singleq < doubleq) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,992,"    return strEscape(s, quote, doublequote, singlequote, ""\\\\"",
",0,0,0,0,1,1,10,0,0,11,60,5,0.02041,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,1023,"    StringBuilder sb = new StringBuilder(s.length() + 2);
",2,1,0,2,4,0,4,4,0,11,53,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,1024,"    sb.append(quote);
",0,0,0,1,2,0,6,0,0,6,17,5,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,1025,"    for (int i = 0; i < s.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,38,4,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,1026,"      char c = s.charAt(i);
",2,0,0,1,2,0,6,0,0,8,21,7,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,1027,"      switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,6,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,20,1079,"          if (outputCharsetEncoder != null) {
",2,1,0,1,3,0,0,0,0,3,35,7,0.01961,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,115,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,118,"        for (Node an : parent.getAncestors()) {
",2,0,0,2,5,0,4,2,0,8,39,8,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,119,"          int ancestorType = an.getType();
",2,0,0,1,2,0,4,0,0,6,32,11,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,120,"          if (ancestorType == Token.COMMA) continue;
",6,1,0,1,2,0,0,0,0,7,42,10,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,121,"          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
",12,3,0,1,2,1,0,0,0,15,77,10,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,114,"      if (isResultUsed) {
",2,0,0,1,3,0,0,0,0,2,19,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,117,"      if (n == parent.getLastChild()) {
",2,1,0,2,5,0,4,0,0,7,33,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,134,"        msg = ""Is there a missing '+' on the previous line?"";
",2,0,0,0,0,0,0,0,0,4,53,8,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,21,3123,"        Node gramps = parent.getParent();
",2,0,0,1,2,0,4,2,0,8,33,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,21,3124,"        if (gramps.isCall() &&
",0,1,0,1,3,0,4,0,0,5,22,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,21,3138,"        return (expr == parent.getFirstChild())
",2,1,0,2,4,1,4,0,0,7,39,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,91,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,136,"        msg = ""The result of the '"" + Token.name(n.getType()).toLowerCase() +
",2,1,0,3,6,0,10,0,0,15,69,9,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,157,"      addExtern();
",0,0,0,1,2,0,2,0,0,2,12,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,158,"      for (Node n : problemNodes) {
",4,0,0,1,3,0,0,2,0,6,29,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,159,"        Node name = IR.name(PROTECTOR_FN).srcref(n);
",2,0,0,2,4,0,10,2,0,14,44,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,160,"        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);
",4,0,0,1,2,0,4,0,0,9,49,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,161,"        Node replacement = IR.call(name).srcref(n);
",2,0,0,2,4,0,10,2,0,14,43,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,162,"        replacement.putBooleanProp(Node.FREE_CALL, true);
",4,0,0,1,2,0,4,0,0,9,49,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,163,"        n.getParent().replaceChild(n, replacement);
",0,0,0,2,4,0,10,0,0,10,43,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,164,"        replacement.addChildToBack(n);
",0,0,0,1,2,0,6,0,0,6,30,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,165,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,166,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,171,"    Node name = IR.name(PROTECTOR_FN);
",2,0,0,1,2,0,6,2,0,10,34,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,172,"    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);
",4,0,0,1,2,0,4,0,0,9,49,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,173,"    Node var = IR.var(name);
",2,0,0,1,2,0,6,2,0,10,24,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,175,"    JSDocInfoBuilder builder = new JSDocInfoBuilder(false);
",2,0,0,1,2,0,0,4,0,7,55,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,176,"    builder.recordNoAlias();
",0,0,0,1,2,0,4,0,0,4,24,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,177,"    var.setJSDocInfo(builder.build(var));
",0,0,0,2,4,0,10,0,0,10,37,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,178,"    CompilerInput input = compiler.getSynthesizedExternsInput();
",2,0,0,1,2,0,4,2,0,8,60,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,179,"    input.getAstRoot(compiler).addChildrenToBack(var);
",0,0,0,2,4,0,10,0,0,10,50,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,180,"    compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,181,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,21,1170,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,135,"      } else if (isSimpleOp) {
",2,0,0,1,4,0,0,0,0,2,24,7,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,132,"      String msg = ""This code lacks side-effects. Is there a bug?"";
",2,0,0,0,0,0,0,2,0,5,61,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,133,"      if (n.isString()) {
",0,0,0,2,5,0,4,0,0,4,19,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,140,"      t.getCompiler().report(
",0,0,0,1,3,0,6,0,0,6,23,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,144,"      if (!NodeUtil.isStatement(n)) {
",0,0,0,2,5,0,6,0,0,7,31,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,21,145,"        problemNodes.add(n);
",0,0,0,1,2,0,6,0,0,6,20,9,0.03571,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,21,373,"    setFlag(value, MASK_NOALIAS);
",0,0,0,1,2,0,6,0,0,6,29,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,21,374,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,21,779,"    if (!currentInfo.isNoAlias()) {
",0,0,0,2,5,0,4,0,0,5,31,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,21,780,"      currentInfo.setNoAlias(true);
",0,0,0,1,2,0,4,0,0,5,29,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,21,781,"      populated = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,21,782,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,21,499,"    return getFlag(MASK_NOALIAS);
",0,0,0,1,2,1,4,0,0,4,29,5,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/Node,21,687,"      if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.02500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,21,690,"        last = lastSibling;
",4,0,0,0,0,0,0,0,0,5,19,8,0.02500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,21,692,"      first = children;
",4,0,0,0,0,0,0,0,0,5,17,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,21,2139,"      case Token.EQ: return ""=="";
",4,0,0,0,0,1,0,0,0,5,27,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,21,1192,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,21,175,"          Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,8,0.01515,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,21,222,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,21,223,"        unrollBinaryOperator(n, Token.COMMA, "","", context, Context.OTHER, 0, 0);
",8,0,0,1,2,0,6,0,0,15,72,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,21,224,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01389,0,-1
defect4j,closure,com/google/javascript/rhino/Node,21,186,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,21,635,"    addChildrenAfter(children, getLastChild());
",0,0,0,2,4,0,6,0,0,6,43,5,0.01220,0,-1
defect4j,closure,com/google/javascript/rhino/Node,21,636,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,2335,"    if (synthesizedExternsInput == null) {
",2,1,0,1,3,0,0,0,0,3,38,4,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,2336,"      synthesizedExternsInput = newExternInput(SYNTHETIC_EXTERNS);
",2,0,0,1,2,0,4,0,0,7,60,6,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,2338,"    return synthesizedExternsInput;
",2,0,0,0,0,1,0,0,0,2,31,4,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,1027,"    SourceAst ast = new SyntheticAst(name);
",4,0,0,1,2,0,0,4,0,8,39,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,1028,"    if (inputsById.containsKey(ast.getInputId())) {
",0,0,0,3,7,0,8,0,0,8,47,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,1031,"    CompilerInput input = new CompilerInput(ast, true);
",4,0,0,1,2,0,0,4,0,9,51,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,1032,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,1033,"    externsRoot.addChildToFront(ast.getAstRoot(this));
",0,0,0,2,4,0,8,0,0,8,50,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,1034,"    externs.add(0, input);
",0,0,0,1,2,0,6,0,0,6,22,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,21,1035,"    return input;
",2,0,0,0,0,1,0,0,0,2,13,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,37,"  SyntheticAst(String sourceName) {
",4,0,0,1,3,0,0,2,0,6,33,2,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,38,"    this.inputId = new InputId(sourceName);
",4,0,0,1,2,0,0,2,0,7,39,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,39,"    this.sourceFile = new SourceFile(sourceName);
",4,0,0,1,2,0,0,2,0,7,45,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,40,"    clearAst();
",0,0,0,1,2,0,2,0,0,2,11,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,41,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,45,"    return root;
",2,0,0,0,0,1,0,0,0,2,12,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,50,"    root = IR.script();
",2,0,0,1,2,0,4,0,0,7,19,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,51,"    root.setInputId(inputId);
",0,0,0,1,2,0,6,0,0,6,25,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,52,"    root.setStaticSourceFile(sourceFile);
",0,0,0,1,2,0,6,0,0,6,37,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,53,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,57,"    return inputId;
",2,0,0,0,0,1,0,0,0,2,15,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,21,62,"    return sourceFile;
",2,0,0,0,0,1,0,0,0,2,18,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,21,882,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,9,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,21,1242,"        return Token.COMMA;
",4,0,0,0,0,1,0,0,0,4,19,6,0.01087,0,-1
defect4j,closure,com/google/javascript/rhino/Node,21,1966,"    putBooleanProp(EMPTY_BLOCK, val);
",0,0,0,1,2,0,6,0,0,6,33,5,0.00990,0,-1
defect4j,closure,com/google/javascript/rhino/Node,21,1967,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,21,225,"        irNode.setType(Token.BLOCK);
",4,0,0,1,2,0,4,0,0,8,28,9,0.00990,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,102,"      Node gramps = parent.getParent();
",2,0,0,1,2,0,4,2,0,8,33,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,103,"      if (gramps.isCall() && parent == gramps.getFirstChild()) {
",2,2,0,3,7,0,8,0,0,12,58,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,111,"      if (n == parent.getLastChild()) {
",2,1,0,2,5,0,4,0,0,7,33,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,112,"        for (Node an : parent.getAncestors()) {
",2,0,0,2,5,0,4,2,0,8,39,8,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,113,"          int ancestorType = an.getType();
",2,0,0,1,2,0,4,0,0,6,32,11,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,114,"          if (ancestorType == Token.COMMA)
",6,1,0,1,2,0,0,0,0,7,32,10,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,116,"          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
",12,3,0,1,2,0,0,0,0,15,69,10,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,117,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,122,"    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
",8,3,0,3,8,0,8,0,0,19,86,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,141,"        msg = ""Is there a missing '+' on the previous line?"";
",2,0,0,0,0,0,0,0,0,4,53,8,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,22,3123,"        Node gramps = parent.getParent();
",2,0,0,1,2,0,4,2,0,8,33,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,22,3124,"        if (gramps.isCall() &&
",0,1,0,1,3,0,4,0,0,5,22,5,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,22,3138,"        return (expr == parent.getFirstChild())
",2,1,0,2,4,1,4,0,0,7,39,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,91,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,143,"        msg = ""The result of the '"" + Token.name(n.getType()).toLowerCase() +
",2,1,0,3,6,0,10,0,0,15,69,9,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,164,"      addExtern();
",0,0,0,1,2,0,2,0,0,2,12,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,165,"      for (Node n : problemNodes) {
",4,0,0,1,3,0,0,2,0,6,29,6,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,166,"        Node name = IR.name(PROTECTOR_FN).srcref(n);
",2,0,0,2,4,0,10,2,0,14,44,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,167,"        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);
",4,0,0,1,2,0,4,0,0,9,49,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,168,"        Node replacement = IR.call(name).srcref(n);
",2,0,0,2,4,0,10,2,0,14,43,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,169,"        replacement.putBooleanProp(Node.FREE_CALL, true);
",4,0,0,1,2,0,4,0,0,9,49,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,170,"        n.getParent().replaceChild(n, replacement);
",0,0,0,2,4,0,10,0,0,10,43,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,171,"        replacement.addChildToBack(n);
",0,0,0,1,2,0,6,0,0,6,30,9,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,172,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,173,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,178,"    Node name = IR.name(PROTECTOR_FN);
",2,0,0,1,2,0,6,2,0,10,34,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,179,"    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);
",4,0,0,1,2,0,4,0,0,9,49,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,180,"    Node var = IR.var(name);
",2,0,0,1,2,0,6,2,0,10,24,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,182,"    JSDocInfoBuilder builder = new JSDocInfoBuilder(false);
",2,0,0,1,2,0,0,4,0,7,55,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,183,"    builder.recordNoAlias();
",0,0,0,1,2,0,4,0,0,4,24,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,184,"    var.setJSDocInfo(builder.build(var));
",0,0,0,2,4,0,10,0,0,10,37,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,185,"    CompilerInput input = compiler.getSynthesizedExternsInput();
",2,0,0,1,2,0,4,2,0,8,60,4,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,186,"    input.getAstRoot(compiler).addChildrenToBack(var);
",0,0,0,2,4,0,10,0,0,10,50,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,187,"    compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,5,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,188,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,22,1170,"      case Token.COMMA:  return 0;
",4,0,0,0,0,1,0,0,0,4,28,6,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,142,"      } else if (isSimpleOp) {
",2,0,0,1,4,0,0,0,0,2,24,7,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,136,"      } else if (n.isExprResult()) {
",0,0,0,2,6,0,4,0,0,4,30,8,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,139,"      String msg = ""This code lacks side-effects. Is there a bug?"";
",2,0,0,0,0,0,0,2,0,5,61,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,140,"      if (n.isString()) {
",0,0,0,2,5,0,4,0,0,4,19,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,147,"      t.getCompiler().report(
",0,0,0,1,3,0,6,0,0,6,23,7,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,151,"      if (!NodeUtil.isStatement(n)) {
",0,0,0,2,5,0,6,0,0,7,31,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,152,"        problemNodes.add(n);
",0,0,0,1,2,0,6,0,0,6,20,9,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CheckSideEffects,22,134,"      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
",0,2,0,3,7,0,8,0,0,10,54,6,0.03125,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,22,373,"    setFlag(value, MASK_NOALIAS);
",0,0,0,1,2,0,6,0,0,6,29,5,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,22,374,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,22,779,"    if (!currentInfo.isNoAlias()) {
",0,0,0,2,5,0,4,0,0,5,31,4,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,22,780,"      currentInfo.setNoAlias(true);
",0,0,0,1,2,0,4,0,0,5,29,7,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,22,781,"      populated = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfoBuilder,22,782,"      return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.03030,0,-1
defect4j,closure,com/google/javascript/rhino/JSDocInfo,22,499,"    return getFlag(MASK_NOALIAS);
",0,0,0,1,2,1,4,0,0,4,29,5,0.02941,0,-1
defect4j,closure,com/google/javascript/rhino/Node,22,687,"      if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.02500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,22,690,"        last = lastSibling;
",4,0,0,0,0,0,0,0,0,5,19,8,0.02500,0,-1
defect4j,closure,com/google/javascript/rhino/Node,22,692,"      first = children;
",4,0,0,0,0,0,0,0,0,5,17,6,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,22,2139,"      case Token.EQ: return ""=="";
",4,0,0,0,0,1,0,0,0,5,27,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,22,1192,"      case Token.SHNE:   return 8;
",4,0,0,0,0,1,0,0,0,4,28,6,0.01695,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,22,175,"          Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,8,0.01515,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,22,222,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,22,223,"        unrollBinaryOperator(n, Token.COMMA, "","", context, Context.OTHER, 0, 0);
",8,0,0,1,2,0,6,0,0,15,72,6,0.01389,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,22,224,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01389,0,-1
defect4j,closure,com/google/javascript/rhino/Node,22,186,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.01333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,22,635,"    addChildrenAfter(children, getLastChild());
",0,0,0,2,4,0,6,0,0,6,43,5,0.01220,0,-1
defect4j,closure,com/google/javascript/rhino/Node,22,636,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,2335,"    if (synthesizedExternsInput == null) {
",2,1,0,1,3,0,0,0,0,3,38,4,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,2336,"      synthesizedExternsInput = newExternInput(SYNTHETIC_EXTERNS);
",2,0,0,1,2,0,4,0,0,7,60,6,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,2338,"    return synthesizedExternsInput;
",2,0,0,0,0,1,0,0,0,2,31,4,0.01220,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,1027,"    SourceAst ast = new SyntheticAst(name);
",4,0,0,1,2,0,0,4,0,8,39,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,1028,"    if (inputsById.containsKey(ast.getInputId())) {
",0,0,0,3,7,0,8,0,0,8,47,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,1031,"    CompilerInput input = new CompilerInput(ast, true);
",4,0,0,1,2,0,0,4,0,9,51,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,1032,"    putCompilerInput(input.getInputId(), input);
",0,0,0,2,4,0,8,0,0,8,44,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,1033,"    externsRoot.addChildToFront(ast.getAstRoot(this));
",0,0,0,2,4,0,8,0,0,8,50,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,1034,"    externs.add(0, input);
",0,0,0,1,2,0,6,0,0,6,22,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,22,1035,"    return input;
",2,0,0,0,0,1,0,0,0,2,13,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,37,"  SyntheticAst(String sourceName) {
",4,0,0,1,3,0,0,2,0,6,33,2,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,38,"    this.inputId = new InputId(sourceName);
",4,0,0,1,2,0,0,2,0,7,39,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,39,"    this.sourceFile = new SourceFile(sourceName);
",4,0,0,1,2,0,0,2,0,7,45,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,40,"    clearAst();
",0,0,0,1,2,0,2,0,0,2,11,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,41,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,45,"    return root;
",2,0,0,0,0,1,0,0,0,2,12,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,50,"    root = IR.script();
",2,0,0,1,2,0,4,0,0,7,19,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,51,"    root.setInputId(inputId);
",0,0,0,1,2,0,6,0,0,6,25,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,52,"    root.setStaticSourceFile(sourceFile);
",0,0,0,1,2,0,6,0,0,6,37,5,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,53,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,57,"    return inputId;
",2,0,0,0,0,1,0,0,0,2,15,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/SyntheticAst,22,62,"    return sourceFile;
",2,0,0,0,0,1,0,0,0,2,18,4,0.01190,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,22,882,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,9,0.01136,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1364,"      return tryFoldArrayAccess(n, left, right);
",0,0,0,1,2,1,8,0,0,8,42,7,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1423,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1427,"    if (isAssignmentTarget(n)) {
",0,0,0,2,5,0,4,0,0,4,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,117,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,142,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,879,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,880,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,881,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,884,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,885,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,886,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,887,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,890,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,891,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,936,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,968,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,969,"      sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,972,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,973,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,974,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,975,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,980,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,981,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,982,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,983,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,984,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,985,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,986,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,988,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,990,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,993,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,994,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,999,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,23,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,23,52,"    JSError error =
",2,0,0,0,0,0,0,2,0,4,15,4,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,23,54,"    compiler.report(error);
",0,0,0,1,2,0,6,0,0,6,23,5,0.50000,0,-1
defect4j,closure,com/google/javascript/jscomp/AbstractPeepholeOptimization,23,55,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,320,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Token,23,213,"          case NUMBER:          return ""NUMBER"";
",2,0,0,0,0,1,0,0,0,3,38,4,0.50000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1419,"    return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1410,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1411,"    if ((NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n)
",2,2,0,3,7,0,10,0,0,14,68,7,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,566,"      Node node = newNode(Token.EMPTY);
",6,0,0,1,2,0,2,2,0,10,33,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,567,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.20000,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,589,"      validateChildless(n);
",0,0,0,1,2,0,4,0,0,4,21,7,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,662,"      validateOptionalExpression(c);
",0,0,0,1,2,0,4,0,0,4,30,7,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,432,"        Node c = transform(child);
",2,0,0,1,2,0,4,2,0,8,26,7,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,433,"        node.addChildToBack(c);
",0,0,0,1,2,0,6,0,0,6,23,8,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,434,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1363,"    if (left.isArrayLit()) {
",0,0,0,2,5,0,4,0,0,4,24,5,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,118,"        return tryFoldGetElem(subtree, left, right);
",0,0,0,1,2,1,8,0,0,8,44,6,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1357,"    Preconditions.checkArgument(n.isGetElem());
",0,0,0,2,4,0,8,0,0,8,43,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/PeepholeFoldConstants,23,1359,"    if (left.isObjectLit()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,23,199,"        return (node instanceof EmptyExpression) ?
",2,0,0,1,2,1,0,2,0,4,42,8,0.08333,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,239,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,240,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,591,"      validateExpression(n);
",0,0,0,1,2,0,4,0,0,4,22,7,0.07692,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,247,"        validateArrayLit(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,248,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,588,"    if (n.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,18,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,593,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,659,"    validateNodeType(Token.ARRAYLIT, n);
",4,0,0,1,2,0,4,0,0,8,36,5,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,660,"    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
",6,1,0,3,7,0,8,2,0,18,62,4,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,23,664,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.06667,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,23,148,"        return processArrayLiteral((ArrayLiteral) node);
",2,0,0,2,4,1,2,2,0,6,48,6,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,426,"      if (literalNode.isDestructuring()) {
",0,0,0,2,5,0,4,0,0,4,36,6,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,430,"      Node node = newNode(Token.ARRAYLIT);
",6,0,0,1,2,0,2,2,0,10,36,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,431,"      for (AstNode child : literalNode.getElements()) {
",2,0,0,2,5,0,4,2,0,8,49,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,435,"      return node;
",2,0,0,0,0,1,0,0,0,2,12,5,0.05263,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,23,234,"        return processElementGet((ElementGet) node);
",2,0,0,2,4,1,2,2,0,6,44,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,23,558,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.05000,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,23,70,"          Node rhs = current.getLastChild();
",2,0,0,1,2,0,4,2,0,8,34,12,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,23,71,"          if (rhs.isFunction()) {
",0,0,0,2,5,0,4,0,0,4,23,13,0.04000,0,-1
defect4j,closure,com/google/javascript/jscomp/JSError,23,193,"    return type.key + "". "" + description + "" at "" +
",6,1,0,0,0,1,0,0,0,9,47,4,0.03448,0,-1
defect4j,closure,com/google/javascript/rhino/Node,23,2179,"    return this.getType() == Token.ARRAYLIT;
",4,1,0,1,2,1,2,0,0,7,40,4,0.03333,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,268,"      compiler.report(t.makeError(n, error, arguments));
",0,0,0,2,4,0,14,0,0,14,50,6,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,269,"      hasErrors = true;
",2,0,0,0,0,0,0,0,0,4,17,5,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,270,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,24,240,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,24,241,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,24,1177,"        return Token.ADD;
",4,0,0,0,0,1,0,0,0,4,17,6,0.09091,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,24,234,"        return processElementGet((ElementGet) node);
",2,0,0,2,4,1,2,2,0,6,44,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,24,558,"      return newNode(
",0,0,0,0,1,1,2,0,0,2,15,6,0.07143,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeTraversal,24,682,"    return JSError.make(getSourceName(), n, type, arguments);
",0,0,0,2,4,1,12,0,0,12,57,5,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,24,203,"        validateBinaryOp(n);
",0,0,0,1,2,0,4,0,0,4,20,6,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,24,204,"        return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04762,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,24,749,"    validateChildCount(n, 2);
",0,0,0,1,2,0,4,0,0,4,25,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,24,750,"    validateExpression(n.getFirstChild());
",0,0,0,2,4,0,6,0,0,6,38,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,24,751,"    validateExpression(n.getLastChild());
",0,0,0,2,4,0,6,0,0,6,37,5,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/AstValidator,24,752,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/TypeSafeDispatcher,24,146,"        return processInfixExpression((InfixExpression) node);
",2,0,0,2,4,1,2,2,0,6,54,6,0.03571,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,24,2080,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02778,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,127,"        Node expressionWithScopeCall = scopeCall.getParent();
",2,0,0,1,2,0,4,2,0,8,53,8,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,128,"        Node scopeClosureBlock = scopeCall.getLastChild().getLastChild();
",2,0,0,2,4,0,6,2,0,10,65,8,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,129,"        scopeClosureBlock.detachFromParent();
",0,0,0,1,2,0,4,0,0,4,37,9,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,130,"        expressionWithScopeCall.getParent().replaceChild(
",0,0,0,1,3,0,6,0,0,6,49,9,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,133,"        NodeUtil.tryMergeBlock(scopeClosureBlock);
",0,0,0,1,2,0,6,0,0,6,42,9,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,134,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,139,"        compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,9,0.02632,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,279,"          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
",0,1,0,4,9,0,10,0,0,11,61,9,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,280,"          String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,11,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,281,"          Var aliasVar = scope.getVar(name);
",2,0,0,1,2,0,6,2,0,10,34,11,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,282,"          aliases.put(name, aliasVar);
",0,0,0,1,2,0,8,0,0,8,28,12,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,284,"          String qualifiedName =
",2,0,0,0,0,0,0,2,0,4,22,11,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,286,"          transformation.addAlias(name, qualifiedName);
",0,0,0,1,2,0,8,0,0,8,45,12,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,291,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,338,"          aliasVar = lexicalVar;
",4,0,0,0,0,0,0,0,0,5,22,9,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,345,"          if (aliasVar.getNode() == n) {
",2,1,0,2,5,0,4,0,0,7,30,9,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,346,"            aliasDefinitionsInOrder.add(n);
",0,0,0,1,2,0,6,0,0,6,31,12,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,350,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.02564,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,275,"        Node n = v.getNode();
",2,0,0,1,2,0,4,2,0,8,21,7,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,276,"        int type = n.getType();
",2,0,0,1,2,0,4,0,0,6,23,8,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,277,"        Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,7,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,278,"        if (parent.isVar()) {
",0,0,0,2,5,0,4,0,0,4,21,8,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,296,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02500,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,24,2070,"      position.setItem(NULL_ALIAS_TRANSFORMATION);
",0,0,0,1,2,0,6,0,0,6,44,6,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/CompilerOptions,24,2071,"      return NULL_ALIAS_TRANSFORMATION;
",2,0,0,0,0,1,0,0,0,2,33,5,0.02439,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,24,2025,"    Preconditions.checkArgument(n.isName() || n.isGetProp() ||
",0,1,0,2,5,0,12,0,0,13,58,5,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,24,2027,"    Node parent = n.getParent();
",2,0,0,1,2,0,4,2,0,8,28,4,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,24,2028,"    return (NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n)
",2,2,0,3,6,1,10,0,0,14,71,12,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/SuppressDocWarningsGuard,24,66,"          info = NodeUtil.getFunctionJSDocInfo(current);
",2,0,0,1,2,0,6,0,0,9,46,10,0.02381,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,317,"          scopeCalls.add(n);
",0,0,0,1,2,0,6,0,0,6,18,10,0.02326,0,-1
defect4j,closure,com/google/javascript/rhino/SourcePosition,24,93,"      if (startLineno > endLineno) {
",4,1,0,1,3,0,0,0,0,5,30,6,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/Scope,24,585,"    return vars.values();
",0,0,0,1,2,1,4,0,0,4,21,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,224,"        transformation = transformationHandler.logAliasTransformation(
",2,0,0,0,1,0,4,0,0,7,62,7,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,226,"        findAliases(t);
",0,0,0,1,2,0,4,0,0,4,15,8,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,233,"        aliases.clear();
",0,0,0,1,2,0,4,0,0,4,16,8,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,234,"        transformation = null;
",2,0,0,0,0,0,0,0,0,3,22,7,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,250,"      Node testNode = n;
",4,0,0,0,0,0,0,2,0,6,18,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,251,"      Node next = null;
",2,0,0,0,0,0,0,2,0,4,17,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,252,"      for (; next != null || testNode.isScript();) {
",2,2,0,2,5,0,4,0,0,8,46,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,257,"      int endLine = next == null ? Integer.MAX_VALUE : next.getLineno();
",8,1,0,1,2,0,4,0,0,13,66,6,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,258,"      int endChar = next == null ? Integer.MAX_VALUE : next.getCharno();
",8,1,0,1,2,0,4,0,0,13,66,6,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,259,"      SourcePosition<AliasTransformation> pos =
",2,0,0,0,0,0,0,4,0,6,41,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,261,"      pos.setPositionInformation(
",0,0,0,0,1,0,4,0,0,4,27,6,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,263,"      return pos;
",2,0,0,0,0,1,0,0,0,2,11,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,273,"      Scope scope = t.getScope();
",2,0,0,1,2,0,4,2,0,8,27,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,274,"      for (Var v : scope.getVarIterable()) {
",2,0,0,2,5,0,4,2,0,8,38,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,297,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,300,"      if (preprocessorSymbolTable != null) {
",2,1,0,1,3,0,0,0,0,3,38,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,303,"      if (!parent.isExprResult()) {
",0,0,0,2,5,0,4,0,0,5,29,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,306,"      if (n.getChildCount() != 2) {
",0,1,0,2,5,0,4,0,0,5,29,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,311,"        Node anonymousFnNode = n.getChildAtIndex(1);
",2,0,0,1,2,0,4,2,0,8,44,7,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,312,"        if (!anonymousFnNode.isFunction() ||
",0,2,0,1,3,0,4,0,0,7,36,7,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,320,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,325,"        validateScopeCall(t, n, n.getParent());
",0,0,0,2,4,0,10,0,0,10,39,8,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,332,"      int type = n.getType();
",2,0,0,1,2,0,4,0,0,6,23,6,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,333,"      Var aliasVar = null;
",2,0,0,0,0,0,0,2,0,4,20,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,334,"      if (type == Token.NAME) {
",6,1,0,1,3,0,0,0,0,7,25,5,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,335,"        String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,7,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,336,"        Var lexicalVar = t.getScope().getVar(n.getString());
",2,0,0,3,6,0,10,2,0,14,52,7,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,337,"        if (lexicalVar != null && lexicalVar == aliases.get(name)) {
",4,3,0,2,5,0,6,0,0,13,60,7,0.02273,0,-1
defect4j,closure,com/google/javascript/jscomp/ScopedAliases,24,343,"      if (t.getScopeDepth() == 2) {
",0,1,0,2,5,0,4,0,0,5,29,5,0.02273,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1629,"        fieldNameNode = fieldTypeNode.getFirstChild();
",2,0,0,1,2,0,4,0,0,7,46,8,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1630,"        hasType = true;
",2,0,0,0,0,0,0,0,0,4,15,8,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1647,"        fieldType = createFromTypeNodesInternal(
",2,0,0,0,1,0,2,0,0,5,40,8,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2149,"    next();
",0,0,0,1,2,0,2,0,0,2,7,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2153,"    skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2154,"    Node typeExpression = parseTypeExpression(next());
",2,0,0,2,4,0,4,2,0,8,50,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2156,"    if (typeExpression == null) {
",2,1,0,1,3,0,0,0,0,3,29,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2160,"    Node fieldType = newNode(Token.COLON);
",6,0,0,1,2,0,2,2,0,10,38,4,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2161,"    fieldType.addChildToBack(fieldName);
",0,0,0,1,2,0,6,0,0,6,36,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2162,"    fieldType.addChildToBack(typeExpression);
",0,0,0,1,2,0,6,0,0,6,41,5,0.03846,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2163,"    return fieldType;
",2,0,0,0,0,1,0,0,0,2,17,4,0.03846,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1314,"    return new RecordType(this, properties);
",2,0,0,1,2,1,0,2,0,4,40,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1456,"        return createRecordTypeFromNodes(
",0,0,0,0,1,1,2,0,0,2,33,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1617,"    RecordTypeBuilder builder = new RecordTypeBuilder(this);
",2,0,0,1,2,0,0,4,0,6,56,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1620,"    for (Node fieldTypeNode = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,44,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1621,"         fieldTypeNode != null;
",2,1,0,0,0,0,0,0,0,3,22,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1625,"      Node fieldNameNode = fieldTypeNode;
",4,0,0,0,0,0,0,2,0,6,35,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1626,"      boolean hasType = false;
",2,0,0,0,0,0,0,0,0,3,24,7,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1628,"      if (fieldTypeNode.getType() == Token.COLON) {
",4,1,0,2,5,0,4,0,0,9,45,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1633,"      String fieldName = fieldNameNode.getString();
",2,0,0,1,2,0,4,2,0,8,45,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1638,"      if (fieldName.startsWith(""'"") || fieldName.startsWith(""\"""")) {
",0,1,0,3,7,0,8,0,0,11,62,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1643,"      JSType fieldType = null;
",2,0,0,0,0,0,0,2,0,4,24,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1645,"      if (hasType) {
",2,0,0,1,3,0,0,0,0,2,14,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1655,"      if (builder.addProperty(fieldName, fieldType, fieldNameNode) == null) {
",0,1,0,2,5,0,10,0,0,11,71,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1622,"         fieldTypeNode = fieldTypeNode.getNext()) {
",2,0,0,1,4,0,4,0,0,7,42,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/JSTypeRegistry,25,1664,"    return builder.build();
",0,0,0,1,2,1,4,0,0,4,23,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,1737,"      skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,9,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,1738,"      return parseRecordType(next());
",0,0,0,2,4,1,4,0,0,4,31,9,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2084,"    Node recordType = newNode(Token.LC);
",6,0,0,1,2,0,2,2,0,10,36,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2085,"    Node fieldTypeList = parseFieldTypeList(token);
",2,0,0,1,2,0,4,2,0,8,47,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2087,"    if (fieldTypeList == null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2091,"    skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2092,"    if (!match(JsDocToken.RC)) {
",4,0,0,2,5,0,2,0,0,7,28,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2096,"    next();
",0,0,0,1,2,0,2,0,0,2,7,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2098,"    recordType.addChildToBack(fieldTypeList);
",0,0,0,1,2,0,6,0,0,6,41,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2099,"    return recordType;
",2,0,0,0,0,1,0,0,0,2,18,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2106,"    Node fieldTypeList = newNode(Token.LB);
",6,0,0,1,2,0,2,2,0,10,39,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2109,"      Node fieldType = parseFieldType(token);
",2,0,0,1,2,0,4,2,0,8,39,6,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2111,"      if (fieldType == null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2115,"      fieldTypeList.addChildToBack(fieldType);
",0,0,0,1,2,0,6,0,0,6,40,7,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2117,"      skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,7,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2118,"      if (!match(JsDocToken.COMMA)) {
",4,0,0,2,5,0,2,0,0,7,31,6,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2119,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2130,"    return fieldTypeList;
",2,0,0,0,0,1,0,0,0,2,21,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2137,"    Node fieldName = parseFieldName(token);
",2,0,0,1,2,0,4,2,0,8,39,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2139,"    if (fieldName == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2143,"    skipEOLs();
",0,0,0,1,2,0,2,0,0,2,11,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2144,"    if (!match(JsDocToken.COLON)) {
",4,0,0,2,5,0,2,0,0,7,31,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2171,"    switch (token) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2173,"        String string = stream.getString();
",2,0,0,1,2,0,4,2,0,8,35,5,0.03704,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/JsDocInfoParser,25,2174,"        return newStringNode(string);
",0,0,0,1,2,1,4,0,0,4,29,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,79,"    super(registry, null, null);
",2,0,0,1,2,0,0,0,0,3,28,3,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,67,"  private final SortedMap<String, JSType> properties = Maps.newTreeMap();
",2,0,0,1,2,2,4,6,0,14,71,2,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,68,"  private boolean isFrozen = false;
",2,0,0,0,0,1,0,0,0,4,33,2,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,80,"    setPrettyPrint(true);
",0,0,0,1,2,0,2,0,0,3,21,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,82,"    for (String property : properties.keySet()) {
",2,0,0,2,5,0,4,2,0,8,45,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,83,"      RecordProperty prop = properties.get(property);
",2,0,0,1,2,0,6,2,0,10,47,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,84,"      if (prop == null) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,88,"      defineDeclaredProperty(property, prop.getType(), prop.getPropertyNode());
",0,0,0,3,6,0,12,0,0,12,73,7,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,89,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,92,"    isFrozen = true;
",2,0,0,0,0,0,0,0,0,4,16,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,93,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,122,"    return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);
",4,0,0,1,2,1,4,0,0,8,62,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,128,"    if (isFrozen) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,132,"    if (!inferred) {
",2,0,0,1,3,0,0,0,0,3,16,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,133,"      properties.put(propertyName, type);
",0,0,0,1,2,0,8,0,0,8,35,7,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,136,"    return super.defineProperty(propertyName, type, inferred,
",8,0,0,0,1,1,0,0,0,8,57,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,272,"    for (Map.Entry<String, JSType> entry : properties.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,63,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,273,"      JSType type = entry.getValue();
",2,0,0,1,2,0,4,2,0,8,31,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,274,"      JSType resolvedType = type.resolve(t, scope);
",2,0,0,1,2,0,8,2,0,12,45,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,275,"      if (type != resolvedType) {
",4,1,0,1,3,0,0,0,0,5,27,6,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,278,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordType,25,279,"    return super.resolveInternal(t, scope);
",6,0,0,1,2,1,0,0,0,6,39,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,96,"    RecordProperty(JSType type, Node propertyNode) {
",6,0,0,1,3,0,0,4,0,10,48,3,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,97,"      this.type = type;
",4,0,0,0,0,0,0,0,0,5,17,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,98,"      this.propertyNode = propertyNode;
",4,0,0,0,0,0,0,0,0,5,33,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,99,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,102,"      return type;
",2,0,0,0,0,1,0,0,0,2,12,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,106,"      return propertyNode;
",2,0,0,0,0,1,0,0,0,2,20,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,57,"  public RecordTypeBuilder(JSTypeRegistry registry) {
",4,0,0,1,3,1,0,2,0,7,51,2,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,53,"  private boolean isEmpty = true;
",2,0,0,0,0,1,0,0,0,4,31,2,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,55,"  private final HashMap<String, RecordProperty> properties = Maps.newHashMap();
",2,0,0,1,2,2,4,6,0,14,77,2,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,58,"    this.registry = registry;
",4,0,0,0,0,0,0,0,0,5,25,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,59,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,71,"    isEmpty = false;
",2,0,0,0,0,0,0,0,0,4,16,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,72,"    if (properties.containsKey(name)) {
",0,0,0,2,5,0,6,0,0,6,35,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,75,"    properties.put(name, new RecordProperty(type, propertyNode));
",4,0,0,2,4,0,6,2,0,12,61,5,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,76,"    return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/jstype/RecordTypeBuilder,25,85,"    if (isEmpty) {
",2,0,0,1,3,0,0,0,0,2,14,4,0.03704,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,131,"        case ORIGINALNAME_PROP:  return ""originalname"";
",2,0,0,0,0,1,0,0,0,3,47,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,65,"    NodeTraversal
",0,0,0,0,0,0,2,0,0,2,13,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,67,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,39,"public class ProcessCommonJSModules implements CompilerPass {
",2,0,0,0,1,1,0,2,0,5,61,1,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,124,"  private class ProcessCommonJsModulesCallback extends
",2,0,0,0,0,1,0,0,0,3,52,2,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,127,"    private int scriptNodeCount = 0;
",2,0,0,0,0,1,0,0,0,3,32,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,131,"      if (n.isCall() && n.getChildCount() == 2 &&
",0,4,0,2,5,0,8,0,0,12,43,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,137,"      if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,138,"        scriptNodeCount++;
",2,0,0,0,0,0,0,0,0,3,18,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,139,"        visitScript(t, n);
",0,0,0,1,2,0,6,0,0,6,18,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,142,"      if (n.isGetProp() &&
",0,1,0,1,3,0,4,0,0,5,20,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,146,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,173,"      Preconditions.checkArgument(scriptNodeCount == 1,
",2,1,0,0,1,0,4,0,0,7,49,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,176,"      String moduleName = guessCJSModuleName(normalizeSourceName(script
",2,0,0,0,2,0,6,2,0,10,65,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,178,"      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit())
",0,0,0,3,7,0,18,0,0,18,66,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,180,"      if (reportDependencies) {
",2,0,0,1,3,0,0,0,0,2,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,187,"      script.addChildToFront(IR.exprResult(
",0,0,0,0,2,0,8,0,0,8,37,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,191,"      emitOptionalModuleExportsOverride(script, moduleName);
",0,0,0,1,2,0,6,0,0,6,54,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,194,"      NodeTraversal.traverse(compiler, script, new SuffixVarsCallback(
",0,0,0,0,2,0,8,2,0,10,64,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,197,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,198,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,208,"      Node moduleExportsProp = IR.getprop(IR.name(moduleName),
",2,0,0,1,3,0,10,2,0,14,56,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,210,"      script.addChildToBack(IR.ifNode(
",0,0,0,0,2,0,8,0,0,8,32,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,215,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,252,"    SuffixVarsCallback(String suffix) {
",4,0,0,1,3,0,0,2,0,6,35,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,253,"      this.suffix = suffix;
",4,0,0,0,0,0,0,0,0,5,21,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,254,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,258,"      if (n.isName()) {
",0,0,0,2,5,0,4,0,0,4,17,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,259,"        String name = n.getString();
",2,0,0,1,2,0,4,2,0,8,28,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,260,"        if (suffix.equals(name)) {
",0,0,0,2,5,0,6,0,0,6,26,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,261,"          return;
",0,0,0,0,0,1,0,0,0,0,7,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,263,"        if (EXPORTS.equals(name)) {
",0,0,0,2,5,0,6,0,0,6,27,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,267,"          Scope.Var var = t.getScope().getVar(name);
",6,0,0,2,4,0,8,0,0,14,42,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,268,"          if (var != null && var.isGlobal()) {
",2,2,0,2,5,0,4,0,0,8,36,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,274,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,56,"      boolean reportDependencies) {
",2,0,0,0,2,0,0,0,0,2,29,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,57,"    this.compiler = compiler;
",4,0,0,0,0,0,0,0,0,5,25,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,58,"    this.filenamePrefix = filenamePrefix.endsWith(File.separator) ?
",6,0,0,1,2,0,4,0,0,11,63,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,60,"    this.reportDependencies = reportDependencies;
",4,0,0,0,0,0,0,0,0,5,45,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,61,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,70,"    return toModuleName(normalizeSourceName(filename));
",0,0,0,2,4,1,6,0,0,6,51,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,87,"    return MODULE_NAME_PREFIX +
",2,1,0,0,0,1,0,0,0,3,27,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,115,"    if (filename.indexOf(filenamePrefix) == 0) {
",0,1,0,2,5,0,6,0,0,7,44,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,118,"    return filename;
",2,0,0,0,0,1,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,269,"            n.setString(name + ""$$"" + suffix);
",4,1,0,1,2,0,4,0,0,10,34,12,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,270,"            n.putProp(Node.ORIGINALNAME_PROP, name);
",4,0,0,1,2,0,6,0,0,10,40,12,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1430,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1446,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1459,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,2145,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,2146,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,2147,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,2148,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,264,"          n.setString(suffix);
",0,0,0,1,2,0,6,0,0,6,20,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,265,"          n.putProp(Node.ORIGINALNAME_PROP, EXPORTS);
",4,0,0,1,2,0,6,0,0,10,43,10,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,157,"    Preconditions.checkState(mayBeExpression(cond));
",0,0,0,2,4,0,8,0,0,8,48,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,158,"    Preconditions.checkState(then.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,159,"    return new Node(Token.IF, cond, then);
",8,0,0,1,2,1,0,2,0,10,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,99,"    requiredFilename = requiredFilename.replaceAll(""\\.js$"", """");
",2,0,0,1,2,0,4,0,0,9,61,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,100,"    currentFilename = currentFilename.replaceAll(""\\.js$"", """");
",2,0,0,1,2,0,4,0,0,9,59,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,102,"    if (requiredFilename.startsWith(""."" + File.separator) ||
",4,2,0,1,3,0,4,0,0,11,56,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,111,"    return toModuleName(requiredFilename);
",0,0,0,1,2,1,4,0,0,4,38,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,134,"        visitRequireCall(t, n, parent);
",0,0,0,1,2,0,8,0,0,8,31,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,153,"      String moduleName = toModuleName(require.getChildAtIndex(1).getString(),
",2,0,0,2,5,0,8,2,0,12,72,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,155,"      Node moduleRef = IR.name(moduleName).srcref(require);
",2,0,0,2,4,0,10,2,0,14,53,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,156,"      parent.replaceChild(require, moduleRef);
",0,0,0,1,2,0,8,0,0,8,40,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,157,"      Node script = getCurrentScriptNode(parent);
",2,0,0,1,2,0,4,2,0,8,43,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,158,"      if (reportDependencies) {
",2,0,0,1,3,0,0,0,0,2,25,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,162,"      script.addChildToFront(IR.exprResult(
",0,0,0,0,2,0,8,0,0,8,37,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,165,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,166,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,235,"        if (n.isScript()) {
",0,0,0,2,5,0,4,0,0,4,19,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,236,"          return n;
",2,0,0,0,0,1,0,0,0,2,9,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ProcessCommonJSModules,26,238,"        n = n.getParent();
",2,0,0,1,2,0,4,0,0,7,18,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,126,"    Preconditions.checkState(name.isName() && !name.hasChildren());
",0,1,0,3,6,0,12,0,0,14,63,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,127,"    Preconditions.checkState(mayBeExpression(value));
",0,0,0,2,4,0,8,0,0,8,49,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,128,"    name.addChildToFront(value);
",0,0,0,1,2,0,6,0,0,6,28,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,129,"    return var(name);
",0,0,0,1,2,1,4,0,0,4,17,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,129,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,143,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,26,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,352,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1011,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1016,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1017,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1018,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1025,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1026,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1030,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1031,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1033,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1034,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1035,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1036,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1038,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1037,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,1040,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,117,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,142,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,881,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,886,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,887,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,974,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,975,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,982,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,983,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,984,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,985,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,986,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,988,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,990,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,993,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,994,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,26,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,320,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,879,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,880,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,884,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,885,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,890,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,891,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,936,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,972,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,973,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,980,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,981,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,999,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,956,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,968,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,969,"      sb.append(getDouble());
",0,0,0,2,4,0,6,0,0,6,23,9,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,97,"    Preconditions.checkState(mayBeStatement(stmt));
",0,0,0,2,4,0,8,0,0,8,47,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,98,"    Node block = new Node(Token.BLOCK, stmt);
",8,0,0,1,2,0,0,4,0,12,41,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,26,99,"    return block;
",2,0,0,0,0,1,0,0,0,2,13,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,26,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/IR,27,231,"    Preconditions.checkState(tryBody.isBlock());
",0,0,0,2,4,0,8,0,0,8,44,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,27,232,"    Preconditions.checkState(catchNode.isCatch());
",0,0,0,2,4,0,8,0,0,8,46,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,27,233,"    Node catchBody = block(catchNode).copyInformationFrom(catchNode);
",2,0,0,2,4,0,8,2,0,12,65,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,27,246,"    Preconditions.checkState(expr.isName());
",0,0,0,2,4,0,8,0,0,8,40,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,27,247,"    Preconditions.checkState(body.isBlock());
",0,0,0,2,4,0,8,0,0,8,41,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,117,"      switch (propType) {
",2,0,0,1,3,0,0,0,0,2,19,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,129,"        case SYNTHETIC_BLOCK_PROP: return ""synthetic"";
",2,0,0,0,0,1,0,0,0,3,46,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,141,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,142,"        case STATIC_SOURCE_FILE:    return ""source_file"";
",2,0,0,0,0,1,0,0,0,3,49,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,143,"        case INPUT_ID:  return ""input_id"";
",2,0,0,0,0,1,0,0,0,3,34,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,879,"    int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,880,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,881,"      count++;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,884,"    int[] keys = new int[count];
",2,0,1,2,4,0,0,0,0,4,28,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,885,"    for (PropListItem x = propListHead; x != null; x = x.getNext()) {
",8,1,0,2,5,0,4,2,0,16,65,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,886,"      count--;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,887,"      keys[count] = x.getType();
",0,0,1,2,4,0,4,0,0,9,26,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,890,"    Arrays.sort(keys);
",0,0,0,1,2,0,6,0,0,6,18,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,891,"    return keys;
",2,0,0,0,0,1,0,0,0,2,12,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,936,"    return toString(true, true, true);
",0,0,0,1,2,1,2,0,0,5,34,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,958,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,962,"      if (first == null || first.getType() != Token.NAME) {
",6,3,0,2,5,0,4,0,0,13,53,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,965,"        sb.append(first.getString());
",0,0,0,2,4,0,8,0,0,8,29,10,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,972,"      int lineno = getLineno();
",2,0,0,1,2,0,2,0,0,4,25,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,973,"      if (lineno != -1) {
",2,1,0,1,3,0,0,0,0,4,19,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,974,"        sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,975,"        sb.append(lineno);
",0,0,0,1,2,0,6,0,0,6,18,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,980,"      int[] keys = getSortedPropTypes();
",2,0,0,2,4,0,2,0,0,4,34,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,981,"      for (int i = 0; i < keys.length; i++) {
",10,1,0,1,3,0,0,0,0,12,39,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,982,"        int type = keys[i];
",2,0,1,1,2,0,0,0,0,6,19,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,983,"        PropListItem x = lookupProperty(type);
",2,0,0,1,2,0,4,2,0,8,38,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,984,"        sb.append("" ["");
",0,0,0,1,3,0,4,0,0,5,16,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,985,"        sb.append(propToString(type));
",0,0,0,2,4,0,8,0,0,8,30,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,986,"        sb.append("": "");
",0,0,0,1,2,0,4,0,0,5,16,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,988,"        switch (type) {
",2,0,0,1,3,0,0,0,0,2,15,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,990,"            value = x.toString();
",2,0,0,1,2,0,4,0,0,7,21,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,993,"        sb.append(value);
",0,0,0,1,2,0,6,0,0,6,17,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,994,"        sb.append(']');
",0,0,0,1,3,0,4,0,0,5,15,9,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,999,"      if (jsType != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1011,"    return toStringTreeImpl();
",0,0,0,1,2,1,2,0,0,2,26,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1016,"      StringBuilder s = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,38,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1017,"      appendStringTree(s);
",0,0,0,1,2,0,4,0,0,4,20,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1018,"      return s.toString();
",0,0,0,1,2,1,4,0,0,4,20,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1025,"    toStringTreeHelper(this, 0, appendable);
",0,0,0,1,2,0,4,0,0,4,40,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1026,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1030,"    for (int i = 0; i != level; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1031,"      sb.append(""    "");
",0,0,0,1,2,0,4,0,0,5,18,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1033,"    sb.append(n.toString());
",0,0,0,2,4,0,8,0,0,8,24,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1034,"    sb.append('\n');
",0,0,0,1,2,0,4,0,0,5,16,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1035,"    for (Node cursor = n.getFirstChild();
",2,0,0,1,3,0,4,2,0,8,37,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1036,"         cursor != null;
",2,1,0,0,0,0,0,0,0,3,15,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1038,"      toStringTreeHelper(cursor, level + 1, sb);
",2,1,0,1,2,0,6,0,0,9,42,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1037,"         cursor = cursor.getNext()) {
",2,0,0,1,4,0,4,0,0,7,28,4,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1040,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1430,"        return ""Node tree inequality:"" +
",0,2,0,0,0,1,0,0,0,3,32,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1446,"      return new NodeMismatch(this, node2);
",2,0,0,1,2,1,0,2,0,4,37,7,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1459,"        return res;
",2,0,0,0,0,1,0,0,0,2,11,8,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/InputId,28,74,"    return ""InputId: "" + getIdName();
",0,1,0,1,2,1,2,0,0,4,33,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/SourceFile,28,303,"    return fileName;
",2,0,0,0,0,1,0,0,0,2,16,4,1.00000,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeConsumer,28,98,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,2145,"    NodeMismatch(Node nodeA, Node nodeB) {
",6,0,0,1,3,0,0,4,0,10,38,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,2146,"      this.nodeA = nodeA;
",4,0,0,0,0,0,0,0,0,5,19,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,2147,"      this.nodeB = nodeB;
",4,0,0,0,0,0,0,0,0,5,19,5,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,2148,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,352,"      return String.valueOf(intValue);
",0,0,0,1,2,1,6,0,0,6,32,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,320,"      return objectValue == null ? ""null"" : objectValue.toString();
",2,1,0,1,2,1,4,0,0,8,61,6,1.00000,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,956,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.33333,0,-1
defect4j,closure,com/google/javascript/rhino/Node,28,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,453,"      if (lineLength > 0) {
",2,1,0,1,3,0,0,0,0,3,21,5,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,454,"        prevCutPosition = code.length();
",2,0,0,1,2,0,4,0,0,7,32,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,455,"        prevLineStartPosition = lineStartPosition;
",4,0,0,0,0,0,0,0,0,5,42,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,456,"        code.append('\n');
",0,0,0,1,2,0,4,0,0,5,18,8,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,457,"        lineLength = 0;
",2,0,0,0,0,0,0,0,0,3,15,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,458,"        lineIndex++;
",2,0,0,0,0,0,0,0,0,3,12,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,459,"        lineStartPosition = code.length();
",2,0,0,1,2,0,4,0,0,7,34,7,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,461,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,503,"          startNewLine();
",0,0,0,1,2,0,2,0,0,2,15,10,0.33333,0,-1
defect4j,closure,com/google/javascript/jscomp/CodePrinter,28,493,"        if (preferredBreakPosition > lineStartPosition &&
",4,2,0,0,1,0,0,0,0,6,49,7,0.25000,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,28,699,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineFunctions,28,906,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,0.12500,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,28,2134,"      case Token.NOT: return ""!"";
",4,0,0,0,0,1,0,0,0,5,27,4,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,28,562,"        Preconditions.checkState(childCount == 0);
",2,1,0,1,2,0,4,0,0,7,42,6,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,28,563,"        cc.addConstant(""false"");
",0,0,0,1,2,0,4,0,0,5,24,6,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,28,564,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.11111,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,28,1187,"        return Token.NOT;
",4,0,0,0,0,1,0,0,0,4,17,6,0.11111,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,943,"    StringBuilder sb = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,39,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,944,"    toString(sb, printSource, printAnnotations, printType);
",0,0,0,1,2,0,10,0,0,10,55,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,945,"    return sb.toString();
",0,0,0,1,2,1,4,0,0,4,21,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,953,"    sb.append(Token.name(type));
",0,0,0,2,4,0,10,0,0,10,28,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,954,"    if (this instanceof StringNode) {
",0,0,0,1,3,0,0,2,0,2,33,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,955,"      sb.append(' ');
",0,0,0,1,2,0,4,0,0,5,15,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,956,"      sb.append(getString());
",0,0,0,2,4,0,6,0,0,6,23,7,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,957,"    } else if (type == Token.FUNCTION) {
",6,1,0,1,4,0,0,0,0,7,36,5,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,967,"    } else if (type == Token.NUMBER) {
",6,1,0,1,4,0,0,0,0,7,34,6,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,971,"    if (printSource) {
",2,0,0,1,3,0,0,0,0,2,18,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,979,"    if (printAnnotations) {
",2,0,0,1,3,0,0,0,0,2,23,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,998,"    if (printType) {
",2,0,0,1,3,0,0,0,0,2,16,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,1007,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,263,"          case BLOCK:           return ""BLOCK"";
",2,0,0,0,0,1,0,0,0,3,37,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,266,"          case SCRIPT:          return ""SCRIPT"";
",2,0,0,0,0,1,0,0,0,3,38,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,219,"          case TRUE:            return ""TRUE"";
",2,0,0,0,0,1,0,0,0,3,36,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,230,"          case COMMA:           return ""COMMA"";
",2,0,0,0,0,1,0,0,0,3,37,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,278,"          case VOID:            return ""VOID"";
",2,0,0,0,0,1,0,0,0,3,36,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,288,"          String var = VAR_PREFIX + varname + ""_"" + safeNameIdSupplier.get();
",6,1,0,1,2,0,4,2,0,14,67,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,289,"          varmap.put(varname, var);
",0,0,0,1,2,0,8,0,0,8,25,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2165,"      case Token.VOID: return ""void"";
",4,0,0,0,0,1,0,0,0,5,31,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Node,29,141,"        case FREE_CALL:          return ""free_call"";
",2,0,0,0,0,1,0,0,0,3,44,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,215,"          case STRING_KEY:      return ""STRING_KEY"";
",2,0,0,0,0,1,0,0,0,3,42,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,411,"          varnode.copyInformationFromForTree(vnode);
",0,0,0,1,2,0,6,0,0,6,42,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,403,"        vnode = v.getScope().getRootNode().getLastChild().getFirstChild();
",2,0,0,4,8,0,10,0,0,13,66,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,433,"          ref.getGrandparent().removeChild(ref.getParent());
",0,0,0,3,6,0,10,0,0,10,50,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,337,"        nodes.add(
",0,0,0,0,1,0,4,0,0,4,10,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,341,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,609,"        return isLhsOfForInExpression(parent);
",0,0,0,1,2,1,4,0,0,4,38,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,349,"        nodes.add(IR.trueNode());
",0,0,0,2,4,0,8,0,0,8,25,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,354,"        nodes = Lists.reverse(nodes);
",2,0,0,1,2,0,6,0,0,9,29,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,355,"        replacement = new Node(Token.COMMA);
",6,0,0,1,2,0,0,2,0,9,36,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,356,"        Node cur = replacement;
",4,0,0,0,0,0,0,2,0,6,23,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,358,"        for (i = 0; i < nodes.size() - 2; i++) {
",6,2,0,2,5,0,4,0,0,14,40,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,364,"        cur.addChildToFront(nodes.get(i));
",0,0,0,2,4,0,10,0,0,10,34,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,365,"        cur.addChildToFront(nodes.get(i + 1));
",2,1,0,2,4,0,8,0,0,11,38,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,381,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,399,"        return references.get(1);
",0,0,0,1,2,1,4,0,0,4,25,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,318,"      List<Node> nodes = Lists.newArrayList();
",2,0,0,1,2,0,4,4,0,10,40,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,319,"      Node val = ref.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,34,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,320,"      blacklistVarReferencesInTree(val, v.scope);
",4,0,0,1,2,0,4,0,0,8,43,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,321,"      Preconditions.checkState(val.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,44,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,322,"      Set<String> all = Sets.newLinkedHashSet(varmap.keySet());
",2,0,0,2,4,0,8,4,0,14,57,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,323,"      for (Node key = val.getFirstChild(); key != null;
",4,1,0,1,3,0,4,2,0,11,49,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,336,"      for (String var : all) {
",4,0,0,1,3,0,0,2,0,6,24,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,344,"      if (nodes.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,22,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,368,"      Node replace = ref.getParent();
",2,0,0,1,2,0,4,2,0,8,31,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,369,"      replacement.copyInformationFromForTree(replace);
",0,0,0,1,2,0,6,0,0,6,48,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,371,"      if (replace.isVar()) {
",0,0,0,2,5,0,4,0,0,4,22,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,375,"        replace.getParent().replaceChild(replace, replacement);
",0,0,0,2,4,0,10,0,0,10,55,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,377,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,429,"          replaceAssignmentExpression(v, ref, varmap);
",0,0,0,1,2,0,8,0,0,8,44,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,29,222,"        Preconditions.checkState(childCount == 2);
",2,1,0,1,2,0,4,0,0,7,42,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,29,223,"        unrollBinaryOperator(n, Token.COMMA, "","", context, Context.OTHER, 0, 0);
",8,0,0,1,2,0,6,0,0,15,72,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,29,224,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,279,"          Node getprop = ref.getParent();
",2,0,0,1,2,0,4,2,0,8,31,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,280,"          Preconditions.checkState(getprop.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,283,"          String varname = getprop.getLastChild().getString();
",2,0,0,2,4,0,6,2,0,10,52,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,284,"          if (varmap.containsKey(varname)) {
",0,0,0,2,5,0,6,0,0,6,34,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,436,"          Node getprop = ref.getParent();
",2,0,0,1,2,0,4,2,0,8,31,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,437,"          Preconditions.checkState(getprop.isGetProp());
",0,0,0,2,4,0,8,0,0,8,46,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,440,"          String var = getprop.getChildAtIndex(1).getString();
",2,0,0,2,4,0,6,2,0,10,52,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,444,"          Preconditions.checkState(varmap.containsKey(var));
",0,0,0,2,4,0,10,0,0,10,50,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,447,"          Node replacement = IR.name(varmap.get(var));
",2,0,0,2,4,0,10,2,0,14,44,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,448,"          replacement.copyInformationFrom(getprop);
",0,0,0,1,2,0,6,0,0,6,41,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,449,"          ref.getGrandparent().replaceChild(ref.getParent(), replacement);
",0,0,0,3,6,0,12,0,0,12,64,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,407,"        Node val = initvals.get(entry.getKey());
",2,0,0,2,4,0,8,2,0,12,40,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,408,"        Node varnode = NodeUtil.newVarNode(entry.getValue(), val);
",2,0,0,2,4,0,10,2,0,14,58,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,409,"        if (val == null) {
",2,1,0,1,3,0,0,0,0,3,18,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,415,"        vnode.getParent().addChildBefore(varnode, vnode);
",0,0,0,2,4,0,10,0,0,10,49,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,416,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,426,"        if (ref.isLvalue()) {
",0,0,0,2,5,0,4,0,0,4,21,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,430,"        } else if (ref.getParent().isVar()) {
",0,0,0,3,8,0,6,0,0,6,37,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,451,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,97,"          staleVars.add(v);
",0,0,0,1,2,0,6,0,0,6,17,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,99,"          Reference declaration = referenceInfo.references.get(0);
",6,0,0,1,2,0,2,2,0,10,56,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,100,"          Reference init = referenceInfo.getInitializingReference();
",2,0,0,1,2,0,4,2,0,8,58,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,104,"          splitObject(v, declaration, init, referenceInfo);
",0,0,0,1,2,0,10,0,0,10,49,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,239,"      return ret;
",2,0,0,0,0,1,0,0,0,2,11,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,257,"      Map<String, String> varmap = Maps.newLinkedHashMap();
",2,0,0,1,2,0,4,6,0,12,53,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,259,"      for (Reference ref : referenceInfo.references) {
",6,0,0,1,3,0,0,2,0,8,48,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,260,"        if (ref.isLvalue() || ref.isInitializingDeclaration()) {
",0,1,0,3,7,0,8,0,0,9,56,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,261,"          Node val = ref.getAssignedValue();
",2,0,0,1,2,0,4,2,0,8,34,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,262,"          if (val != null) {
",2,1,0,1,3,0,0,0,0,3,18,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,263,"            Preconditions.checkState(val.isObjectLit());
",0,0,0,2,4,0,8,0,0,8,44,12,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,264,"            for (Node child = val.getFirstChild(); child != null;
",4,1,0,1,3,0,4,2,0,11,53,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,276,"        } else if (ref.getParent().isVar()) {
",0,0,0,3,8,0,6,0,0,6,37,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,291,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,293,"      return varmap;
",2,0,0,0,0,1,0,0,0,2,14,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,388,"      Map<String, String> varmap = computeVarList(v, referenceInfo);
",2,0,0,1,2,0,6,6,0,14,62,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,390,"      Map<String, Node> initvals = Maps.newHashMap();
",2,0,0,1,2,0,4,6,0,12,47,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,395,"      boolean defined = referenceInfo.isWellDefined() &&
",2,1,0,1,2,0,4,0,0,7,50,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,397,"      if (defined) {
",2,0,0,1,3,0,0,0,0,2,14,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,406,"      for (Map.Entry<String, String> entry : varmap.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,59,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,418,"      if (defined) {
",2,0,0,1,3,0,0,0,0,2,14,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,422,"      for (Reference ref : referenceInfo.references) {
",6,0,0,1,3,0,0,2,0,8,48,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,424,"        if (defined && ref == init) continue;
",6,2,0,1,2,0,0,0,0,8,37,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,453,"      compiler.reportCodeChange();
",0,0,0,1,2,0,4,0,0,4,28,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,454,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,211,"          case NAME:            return ""NAME"";
",2,0,0,0,0,1,0,0,0,3,36,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2181,"    String res = opToStr(operator);
",2,0,0,1,2,0,4,2,0,8,31,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2182,"    if (res == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2186,"    return res;
",2,0,0,0,0,1,0,0,0,2,11,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,29,237,"        Preconditions.checkState(childCount == 1);
",2,1,0,1,2,0,4,0,0,7,42,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,29,238,"        cc.addOp(NodeUtil.opToStrNoFail(type), false);
",0,0,0,2,4,0,10,0,0,11,46,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,29,239,"        addExpr(first, NodeUtil.precedence(type), Context.OTHER);
",4,0,0,2,4,0,10,0,0,14,57,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/CodeGenerator,29,240,"        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,166,"          Preconditions.checkState(parent.getFirstChild() == name);
",2,1,0,2,4,0,8,0,0,11,57,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,168,"          if (gramps.isCall()
",0,0,0,1,3,0,4,0,0,4,19,11,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,359,"          cur.addChildToFront(nodes.get(i));
",0,0,0,2,4,0,10,0,0,10,34,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,360,"          Node t = new Node(Token.COMMA);
",6,0,0,1,2,0,0,4,0,10,31,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,361,"          cur.addChildToFront(t);
",0,0,0,1,2,0,6,0,0,6,23,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,362,"          cur = t;
",4,0,0,0,0,0,0,0,0,5,8,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,378,"          Preconditions.checkState(!maybeDecl.isInitializingDeclaration());
",0,0,0,2,4,0,8,0,0,9,65,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,379,"          Reference maybeInit = references.get(index);
",2,0,0,1,2,0,6,2,0,10,44,9,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,380,"          if (maybeInit.isSimpleAssignmentToName()) {
",0,0,0,2,5,0,4,0,0,4,43,10,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,709,"           currentBlock = currentBlock.getParent()) {
",2,0,0,1,4,0,4,0,0,7,42,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2533,"    Node node = IR.voidNode(IR.number(0));
",2,0,0,2,4,0,8,2,0,12,38,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2534,"    if (srcReferenceNode != null) {
",2,1,0,1,3,0,0,0,0,3,31,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2537,"    return node;
",2,0,0,0,0,1,0,0,0,2,12,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/IR,29,350,"    return unaryOp(Token.VOID, expr1);
",4,0,0,1,2,1,4,0,0,8,34,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,1531,"      return n.getNext();
",0,0,0,1,2,1,4,0,0,4,19,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,710,"        if (currentBlock.isHoisted) {
",4,0,0,1,3,0,0,0,0,4,29,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/parsing/IRFactory,29,1221,"        return Token.SHEQ;
",4,0,0,0,0,1,0,0,0,4,18,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2132,"      case Token.SHEQ: return ""==="";
",4,0,0,0,0,1,0,0,0,5,30,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,183,"          case RETURN:          return ""RETURN"";
",2,0,0,0,0,1,0,0,0,3,38,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,220,"          case SHEQ:            return ""SHEQ"";
",2,0,0,0,0,1,0,0,0,3,36,4,1,0,-1
defect4j,closure,com/google/javascript/rhino/Token,29,246,"          case AND:             return ""AND"";
",2,0,0,0,0,1,0,0,0,3,35,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,565,"      return getParent().isVar();
",0,0,0,2,4,1,4,0,0,4,27,6,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,365,"      return false;
",0,0,0,0,0,1,0,0,0,1,13,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,375,"      if (index < references.size() && index > 0) {
",4,3,0,2,5,0,4,0,0,11,45,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,376,"        Reference maybeDecl = references.get(index-1);
",4,1,0,1,2,0,4,2,0,11,46,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,377,"        if (maybeDecl.isVarDeclaration()) {
",0,0,0,2,5,0,4,0,0,4,35,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/ReferenceCollectingCallback,29,398,"      } else if (isInitializingAssignmentAt(1)) {
",0,0,0,2,6,0,2,0,0,2,43,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,325,"        String var = key.getString();
",2,0,0,1,2,0,4,2,0,8,29,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,326,"        Node value = key.removeFirstChild();
",2,0,0,1,2,0,4,2,0,8,36,7,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,328,"        nodes.add(
",0,0,0,0,1,0,4,0,0,4,10,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,332,"        all.remove(var);
",0,0,0,1,2,0,6,0,0,6,16,8,1,0,-1
defect4j,closure,com/google/javascript/jscomp/InlineObjectLiterals,29,324,"           key = key.getNext()) {
",2,0,0,1,4,0,4,0,0,7,22,5,1,0,-1
defect4j,closure,com/google/javascript/jscomp/Compiler,29,957,"    return uniqueNameId++;
",2,0,0,0,0,1,0,0,0,3,22,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2544,"    Node nodeName = IR.name(name);
",2,0,0,1,2,0,6,2,0,10,30,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2545,"    if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2550,"    Node var = IR.var(nodeName).srcref(nodeName);
",2,0,0,2,4,0,10,2,0,14,45,4,1,0,-1
defect4j,closure,com/google/javascript/jscomp/NodeUtil,29,2552,"    return var;
",2,0,0,0,0,1,0,0,0,2,11,4,1,0,-1
