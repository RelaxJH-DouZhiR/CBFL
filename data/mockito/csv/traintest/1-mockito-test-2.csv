dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,mockito,org/mockito/internal/configuration/injection/FinalMockCandidateFilter,15,26,"                    } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,13,0.00000,1,0
defect4j,mockito,org/mockito/internal/MockitoCore,16,36,"        return mockUtil.createMock(classToMock, (MockSettingsImpl) mockSettings);
",2,0,0,2,4,1,6,2,0,10,73,5,0.00159,1,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,87,"        } else if (type == Collection.class) {
",2,1,0,1,4,0,0,2,0,5,38,5,0.00210,1,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,7,41,"        } catch (Throwable t){
",2,0,0,1,4,0,0,2,0,4,22,6,1.00000,0,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,7,42,"            notifyMethodCallException(invocation, t);
",0,0,0,1,2,0,6,0,0,6,41,8,1.00000,0,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,7,43,"            throw t;
",2,0,0,0,0,0,0,0,0,2,8,7,1.00000,0,1
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,7,59,"        return GLOBAL_CONFIGURATION.get().cleansStackTrace();
",0,0,0,2,4,1,6,0,0,6,53,5,1.00000,0,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,7,59,"		for (InvocationListener listener : invocationListeners) {
",4,0,0,1,3,0,0,2,0,6,57,4,1.00000,0,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,7,66,"	}
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,392,"                return (Class<?>) type;
",2,0,0,1,2,1,0,2,0,4,23,8,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,430,"            List<Type> extraInterfaces = extraInterfaces();
",2,0,0,1,2,0,2,4,0,8,47,5,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,431,"            List<Class<?>> rawExtraInterfaces = new ArrayList<Class<?>>();
",2,0,0,1,2,0,0,8,0,10,62,5,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,432,"            for (Type extraInterface : extraInterfaces) {
",4,0,0,1,3,0,0,2,0,6,45,5,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,439,"            return rawExtraInterfaces.toArray(new Class[rawExtraInterfaces.size()]);
",0,0,0,3,6,1,8,2,0,10,72,6,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,414,"                return Arrays.asList(((BoundedType) type).interfaceBounds());
",2,0,0,4,8,1,6,2,0,10,61,8,0.11111,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,451,"                Type actualFirstBound = extractActualBoundedTypeOf(((BoundedType) type).firstBound());
",4,0,0,4,8,0,4,4,0,12,86,7,0.11111,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,452,"                if (!(actualFirstBound instanceof BoundedType)) {
",2,0,0,2,5,0,0,2,0,5,49,7,0.11111,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,453,"                    return type; // avoid going one step further, ie avoid : O(TypeVar) -> K(TypeVar) -> Some ParamType
",2,0,0,2,4,1,0,0,0,2,99,9,0.11111,0,1
defect4j,mockito,org/mockito/internal/creation/cglib/ClassImposterizer,7,106,"            enhancer.setSuperclass(Object.class);
",0,0,0,1,2,0,4,2,0,6,37,7,0.10000,0,1
defect4j,mockito,org/mockito/internal/creation/cglib/ClassImposterizer,7,107,"            enhancer.setInterfaces(allMockedTypes);
",0,0,0,1,2,0,6,0,0,6,39,7,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,398,"                return extractRawTypeOf(((BoundedType) type).firstBound());
",2,0,0,4,8,1,4,2,0,8,59,8,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,8,184,"            TypeVariable typeVariable = (TypeVariable) type;
",4,0,0,1,2,0,0,4,0,8,48,6,0.12500,0,1
defect4j,mockito,org/mockito/exceptions/Reporter,9,583,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,1,0,1
defect4j,mockito,org/mockito/Mockito,9,1405,"        return MOCKITO_CORE.mock(classToSpy, withSettings()
",0,0,0,1,3,1,8,0,0,8,51,5,1,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,15,"            return noArgConstructor(cls);
",0,0,0,1,2,1,4,0,0,4,29,7,0.80000,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,55,"            return cls.newInstance();
",0,0,0,1,2,1,4,0,0,4,25,7,0.80000,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,14,"        if (outerClassInstance == null) {
",2,1,0,1,3,0,0,0,0,3,33,4,0.57143,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,9,"    public ConstructorInstantiator(Object outerClassInstance) {
",4,0,0,1,3,1,0,2,0,7,59,2,0.50000,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,10,"        this.outerClassInstance = outerClassInstance;
",4,0,0,0,0,0,0,0,0,5,45,4,0.50000,0,1
defect4j,mockito,org/mockito/internal/creation/instance/InstantiatorProvider,9,11,"            return new ConstructorInstantiator(settings.getOuterClassInstance());
",0,0,0,2,4,1,4,2,0,6,69,7,0.50000,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,11,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,1
defect4j,mockito,org/mockito/internal/creation/settings/CreationSettings,9,110,"        return outerClassInstance;
",2,0,0,0,0,1,0,0,0,2,26,4,0.50000,0,1
defect4j,mockito,org/mockito/internal/creation/MockSettingsImpl,9,98,"        this.useConstructor = true;
",2,0,0,0,0,0,0,0,0,4,27,4,0.44444,0,1
defect4j,mockito,org/mockito/internal/creation/MockSettingsImpl,9,99,"        return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.44444,0,0
defect4j,mockito,org/mockito/internal/invocation/realmethod/CleanTraceRealMethod,9,31,"        } catch (Throwable t) {
",2,0,0,1,4,0,0,2,0,4,23,6,0.25000,0,1
defect4j,mockito,org/mockito/internal/invocation/realmethod/CleanTraceRealMethod,9,32,"            new ConditionalStackTraceFilter().filter(t);
",0,0,0,2,4,0,4,2,0,6,44,8,0.25000,0,1
defect4j,mockito,org/mockito/internal/invocation/realmethod/CleanTraceRealMethod,9,33,"            throw t;
",2,0,0,0,0,0,0,0,0,2,8,7,0.25000,0,1
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,9,46,"        return (method.getModifiers() & Modifier.ABSTRACT) != 0;
",4,2,0,2,4,1,4,0,0,10,56,4,0.20455,0,1
defect4j,mockito,org/mockito/internal/invocation/InvocationImpl,9,109,"        if (method.isAbstract()) {
",0,0,0,2,5,0,4,0,0,4,26,5,0.18000,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,34,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.04500,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,35,"        filterStackTrace();
",0,0,0,1,2,0,2,0,0,2,19,5,0.04500,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,36,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04500,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,39,"        unfilteredStackTrace = getStackTrace();
",2,0,0,1,2,0,2,0,0,5,39,4,0.04286,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,41,"        ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();
",2,0,0,1,2,0,0,4,0,6,71,4,0.04286,0,1
defect4j,mockito,org/mockito/exceptions/Reporter,10,760,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.50000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,215,"            return new NotGenericReturnTypeSupport(genericReturnType);
",2,0,0,1,2,1,0,2,0,4,58,7,0.04762,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,480,"        public NotGenericReturnTypeSupport(Type genericReturnType) {
",4,0,0,1,3,1,0,2,0,7,60,3,0.04762,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,481,"            returnType = (Class<?>) genericReturnType;
",4,0,0,1,2,0,0,2,0,7,42,5,0.04762,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,482,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,486,"            return returnType;
",2,0,0,0,0,1,0,0,0,2,18,5,0.04762,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,162,"        return new Class[0];
",0,0,0,1,2,1,0,2,0,2,20,7,0.04348,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,59,"        InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());
",2,0,0,3,6,0,6,6,0,14,90,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,60,"        InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();
",2,0,0,2,4,0,4,4,0,10,95,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,63,"        for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {
",2,0,0,2,5,0,4,2,0,8,93,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,95,"        MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ?
",2,0,0,1,2,0,4,2,0,8,79,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,99,"        return mockSettings.serializable()
",0,0,0,1,2,1,4,0,0,4,34,6,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,105,"        return new ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata);
",2,0,0,1,2,1,0,2,0,4,76,5,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,123,"        public ReturnsDeepStubsSerializationFallback(GenericMetadataSupport returnTypeGenericMetadata) {
",4,0,0,1,3,1,0,2,0,7,96,3,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,124,"            this.returnTypeGenericMetadata = returnTypeGenericMetadata;
",4,0,0,0,0,0,0,0,0,5,59,5,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,125,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,169,"        return rawExtraInterfaces().length > 0;
",2,1,0,1,2,1,2,0,0,5,39,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,47,"        GenericMetadataSupport returnTypeGenericMetadata =
",2,0,0,0,0,0,0,2,0,4,50,4,0.03704,0,1
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,55,"            return method.equals(o);
",0,0,0,1,2,1,6,0,0,6,24,5,1,0,1
defect4j,mockito,org/mockito/internal/util/MockUtil,11,69,"        return isMockitoMock(mock) && getMockSettings(mock).getSpiedInstance() != null;
",0,2,0,3,6,1,10,0,0,14,79,4,0.00816,0,1
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,76,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00816,0,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,72,"        } else if (isMockOrSpy(instance)) {
",0,0,0,2,6,0,4,0,0,4,35,6,0.00765,0,1
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,86,"        return mockUtil.isMock(instance)
",0,0,0,1,2,1,6,0,0,6,32,6,0.00765,0,1
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,42,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00750,0,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,12,"public class DelegatingMethod implements MockitoMethod {
",2,0,0,0,1,1,0,2,0,5,56,1,0.00593,0,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,16,"    public DelegatingMethod(Method method) {
",4,0,0,1,3,1,0,2,0,7,40,2,0.00593,0,1
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,17,"        assert method != null : ""Method cannot be null"";
",2,1,0,0,0,0,0,0,0,4,48,4,0.00593,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,19,"            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
",4,0,0,4,8,0,2,4,0,10,72,6,1,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,20,"                return (Class) actual;
",2,0,0,1,2,1,0,2,0,4,22,7,1,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,8,"public class GenericMaster {
",2,0,0,0,1,1,0,0,0,3,28,1,1,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,17,"        Type generic = field.getGenericType();
",2,0,0,1,2,0,4,2,0,8,38,4,1,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,18,"        if (generic != null && generic instanceof ParameterizedType) {
",4,2,0,1,3,0,0,2,0,8,62,4,1,0,1
defect4j,mockito,org/mockito/internal/util/MockCreationValidator,12,11,"public class MockCreationValidator {
",2,0,0,0,1,1,0,0,0,3,36,1,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsMocks,12,15,"public class ReturnsMocks implements Answer<Object>, Serializable {
",2,0,0,0,1,1,0,6,0,9,67,1,1,0,0
defect4j,mockito,org/mockito/internal/matchers/CapturingMatcher,12,16,"public class CapturingMatcher<T> extends ArgumentMatcher<T> implements CapturesArguments, Serializable {
",4,0,0,0,1,1,0,8,0,13,104,1,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,12,17,"public class ReturnsDeepStubs implements Answer<Object>, Serializable {
",2,0,0,0,1,1,0,6,0,9,71,1,1,0,0
defect4j,mockito,org/mockito/internal/progress/HandyReturnValues,12,17,"public class HandyReturnValues {
",2,0,0,0,1,1,0,0,0,3,32,1,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsMocks,12,18,"    private MockitoCore mockitoCore = new MockitoCore();
",2,0,0,1,2,1,0,4,0,7,52,2,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsMocks,12,19,"    private Answer<Object> delegate = new ReturnsMoreEmptyValues();
",2,0,0,1,2,1,0,6,0,9,63,2,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/GloballyConfiguredAnswer,12,19,"public class GloballyConfiguredAnswer implements Answer<Object>, Serializable {
",2,0,0,0,1,1,0,6,0,9,79,1,1,0,0
defect4j,mockito,org/mockito/internal/matchers/CapturingMatcher,12,19,"    private LinkedList<Object> arguments = new LinkedList<Object>();
",2,0,0,1,2,1,0,8,0,11,64,2,1,0,0
