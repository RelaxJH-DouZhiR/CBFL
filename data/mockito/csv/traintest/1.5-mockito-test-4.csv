dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,87,"        } else if (type == Collection.class) {
",2,1,0,1,4,0,0,2,0,5,38,5,0.00210,1,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker,20,32,"        T mockInstance = null;
",2,0,0,0,0,0,0,2,0,4,22,4,0.06172,1,-1
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,19,27,"				if (field.getName().equals(mockUtil.getMockName(mock).toString())) {
",0,0,0,5,11,0,14,0,0,14,68,9,0.05263,0,-1
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,19,28,"					mockNameMatches.add(mock);
",0,0,0,1,2,0,6,0,0,6,26,11,0.05263,0,-1
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,19,30,"			}
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0,-1
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,19,31,"			return next.filterCandidate(mockNameMatches, field,
",0,0,0,0,1,1,8,0,0,8,51,7,0.05263,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,19,65,"            Object mock = invocation.getMock();
",2,0,0,1,2,0,4,2,0,8,35,6,0.05263,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,19,66,"            MockName name = mockUtil.getMockName(mock);
",2,0,0,1,2,0,6,2,0,10,43,6,0.05263,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,19,67,"            if (name.isDefault()) {
",0,0,0,2,5,0,4,0,0,4,23,7,0.05263,0,-1
defect4j,mockito,org/mockito/internal/util/MockUtil,19,44,"        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);
",2,0,0,2,4,0,4,4,0,10,76,4,0.04545,0,-1
defect4j,mockito,org/mockito/internal/util/MockUtil,19,45,"        MockCreationSettings settings = oldHandler.getMockSettings();
",2,0,0,1,2,0,4,2,0,8,61,4,0.04545,0,-1
defect4j,mockito,org/mockito/internal/util/MockUtil,19,46,"        MockHandler newHandler = new MockHandlerFactory().create(settings);
",2,0,0,2,4,0,4,4,0,10,67,4,0.04545,0,-1
defect4j,mockito,org/mockito/internal/util/MockUtil,19,48,"        mockMaker.resetMock(mock, newHandler, settings);
",0,0,0,1,2,0,10,0,0,10,48,5,0.04545,0,-1
defect4j,mockito,org/mockito/internal/util/MockUtil,19,49,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,mockito,org/mockito/internal/MockitoCore,19,99,"            mockUtil.resetMock(m);
",0,0,0,1,2,0,6,0,0,6,22,7,0.04545,0,-1
defect4j,mockito,org/mockito/internal/MockitoCore,19,101,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,mockito,org/mockito/Mockito,19,1610,"        MOCKITO_CORE.reset(mocks);
",0,0,0,1,2,0,6,0,0,6,26,5,0.04545,0,-1
defect4j,mockito,org/mockito/Mockito,19,1611,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/SuperTypesLastSorter,19,34,"            Field f = fields.get(i);
",2,0,0,1,2,0,6,2,0,10,24,6,0.04167,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/SuperTypesLastSorter,19,35,"            Class<?> ft = f.getType();
",2,0,0,1,2,0,4,2,0,8,26,6,0.04167,0,-1
defect4j,mockito,org/mockito/internal/creation/MockSettingsImpl,20,98,"        this.useConstructor = true;
",2,0,0,0,0,0,0,0,0,4,27,4,1,0,-1
defect4j,mockito,org/mockito/internal/creation/MockSettingsImpl,20,99,"        return this;
",0,0,0,0,0,1,0,0,0,0,12,3,1,0,-1
defect4j,mockito,org/mockito/internal/creation/MockSettingsImpl,20,103,"        this.outerClassInstance = outerClassInstance;
",4,0,0,0,0,0,0,0,0,5,45,4,1,0,-1
defect4j,mockito,org/mockito/internal/creation/MockSettingsImpl,20,104,"        return this;
",0,0,0,0,0,1,0,0,0,0,12,3,1,0,-1
defect4j,mockito,org/mockito/internal/stubbing/answers/CallsRealMethods,20,42,"        return invocation.callRealMethod();
",0,0,0,1,2,1,4,0,0,4,35,5,0.52083,0,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/InterceptedInvocation,20,121,"        return superMethod.invoke();
",0,0,0,1,2,1,4,0,0,4,28,5,0.52083,0,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/InterceptedInvocation,20,184,"                    return callable.call();
",0,0,0,1,2,1,4,0,0,4,23,9,0.52083,0,-1
defect4j,mockito,org/mockito/internal/stubbing/answers/CallsRealMethods,20,39,"    	if (Modifier.isAbstract(invocation.getMethod().getModifiers())) {
",0,0,0,4,9,0,10,0,0,10,65,5,0.51020,0,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/InterceptedInvocation,20,178,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.50000,0,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/InterceptedInvocation,20,118,"        if (!superMethod.isInvokable()) {
",0,0,0,2,5,0,4,0,0,5,33,4,0.49020,0,-1
defect4j,mockito,org/mockito/Mockito,20,1401,"        return MOCKITO_CORE.mock(classToSpy, withSettings()
",0,0,0,1,3,1,8,0,0,8,51,5,0.36364,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,117,"            return Mockito.mock(type, settings.useConstructor());
",0,0,0,2,4,1,10,0,0,10,53,7,0.23529,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,67,"                        field.set(testInstance, newSpyInstance(testInstance, field));
",0,0,0,2,4,0,12,0,0,12,61,14,0.18182,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,85,"        MockSettings settings = withSettings()
",2,0,0,1,2,0,2,2,0,6,38,4,0.18182,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,88,"        Class<?> type = field.getType();
",2,0,0,1,2,0,4,2,0,8,32,4,0.18182,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,89,"        if (type.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.18182,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,92,"        if (!Modifier.isStatic(type.getModifiers())) {
",0,0,0,3,7,0,8,0,0,9,46,4,0.18182,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,107,"            constructor = type.getDeclaredConstructor();
",2,0,0,1,2,0,4,0,0,7,44,6,0.18182,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,110,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.18182,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,112,"        if (Modifier.isPrivate(constructor.getModifiers())) {
",0,0,0,3,7,0,8,0,0,8,53,5,0.18182,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,100,"                return Mockito.mock(type, settings
",0,0,0,0,1,1,8,0,0,8,34,9,0.14286,0,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/MockMethodInterceptor,20,45,"        return doIntercept(
",0,0,0,0,1,1,2,0,0,2,19,5,0.13089,0,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/InterceptedInvocation,20,172,"            public FromCallable(Callable<?> callable) {
",4,0,0,1,3,1,0,2,0,7,43,4,0.12887,0,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/InterceptedInvocation,20,173,"                this.callable = callable;
",4,0,0,0,0,0,0,0,0,5,25,6,0.12887,0,-1
defect4j,mockito,org/mockito/internal/creation/bytebuddy/InterceptedInvocation,20,174,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12887,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,95,"                if (!enclosing.isInstance(testInstance)) {
",0,0,0,2,5,0,6,0,0,7,42,8,0.12500,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,62,"                        field.set(testInstance, Mockito.mock(instance.getClass(), withSettings()
",0,0,0,2,6,0,16,0,0,16,72,14,0.12121,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,93,"            Class<?> enclosing = type.getEnclosingClass();
",2,0,0,1,2,0,4,2,0,8,46,6,0.11111,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,94,"            if (enclosing != null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.11111,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,51,"                assertNoIncompatibleAnnotations(Spy.class, field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);
",8,0,0,1,2,0,4,6,0,18,119,9,0.09756,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,52,"                field.setAccessible(true);
",0,0,0,1,2,0,4,0,0,5,26,9,0.09756,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,55,"                    instance = field.get(testInstance);
",2,0,0,1,2,0,6,0,0,9,35,10,0.09756,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,56,"                    assertNotInterface(instance, field.getType());
",0,0,0,2,4,0,8,0,0,8,46,11,0.09756,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,57,"                    if (new MockUtil().isMock(instance)) {
",0,0,0,3,7,0,4,2,0,6,38,11,0.09756,0,-1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,20,61,"                    } else if (instance != null) {
",2,1,0,1,4,0,0,0,0,3,30,11,0.09756,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,17,"        return withOuterClass(cls);
",0,0,0,1,2,1,4,0,0,4,27,5,1.00000,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,24,"            Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass());
",2,0,0,2,4,0,8,4,0,14,77,6,1.00000,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,25,"            return c.newInstance(outerClassInstance);
",0,0,0,1,2,1,6,0,0,6,41,7,1.00000,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,26,"        } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,6,1.00000,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,27,"            throw paramsException(cls, e);
",0,0,0,1,2,0,6,0,0,6,30,8,1.00000,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,32,"        return new InstantationException(""Unable to create mock instance of '""
",0,0,0,0,1,1,0,2,0,3,70,5,1.00000,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/InstantationException,21,6,"        super(message, cause);
",4,0,0,1,2,0,0,0,0,4,22,4,0.33333,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/InstantationException,21,7,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,14,"        if (outerClassInstance == null) {
",2,1,0,1,3,0,0,0,0,3,33,4,0.11111,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,9,"    public ConstructorInstantiator(Object outerClassInstance) {
",4,0,0,1,3,1,0,2,0,7,59,2,0.10000,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,10,"        this.outerClassInstance = outerClassInstance;
",4,0,0,0,0,0,0,0,0,5,45,4,0.10000,0,-1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,21,11,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0,-1
defect4j,mockito,org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider,21,9,"public class DefaultStackTraceCleanerProvider implements StackTraceCleanerProvider {
",2,0,0,0,1,1,0,2,0,5,84,1,0.06250,0,-1
defect4j,mockito,org/mockito/internal/util/Checks,21,14,"        if(value == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.06250,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,16,"            return isArray(o2) && areArraysEqual(o1, o2);
",0,1,0,2,4,1,10,0,0,11,45,7,0.33333,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,23,"        return areArrayLengthsEqual(o1, o2)
",0,0,0,1,2,1,6,0,0,6,35,6,0.33333,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,28,"        return Array.getLength(o1) == Array.getLength(o2);
",0,1,0,2,4,1,12,0,0,13,50,4,0.33333,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,32,"        for (int i = 0; i < Array.getLength(o1); i++) {
",6,1,0,2,5,0,6,0,0,14,47,4,0.33333,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,33,"            if (!areEqual(Array.get(o1, i), Array.get(o2, i))) return false;
",0,0,0,4,8,1,18,0,0,20,64,6,0.33333,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,35,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,14,"            return o1 == null && o2 == null;
",4,3,0,0,0,1,0,0,0,7,32,6,0.06667,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,15,"        } else if (isArray(o1)) {
",0,0,0,2,6,0,4,0,0,4,25,6,0.00392,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,18,"            return o1.equals(o2);
",0,0,0,1,2,1,6,0,0,6,21,8,0.00392,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equality,22,39,"        return o.getClass().isArray();
",0,0,0,2,4,1,6,0,0,6,30,5,0.00392,0,-1
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,22,26,"        return globalConfiguration.get();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00191,0,-1
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,22,14,"public abstract class MockInjectionStrategy {
",2,0,0,0,1,2,0,0,0,4,45,1,0.00182,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,253,"                registerTypeVariablesOn(genericInterface);
",0,0,0,1,2,0,4,0,0,4,42,8,0.12500,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,53,"            return delegate.returnValueFor(rawType);
",0,0,0,1,2,1,6,0,0,6,40,7,0.07692,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,194,"            return new NotGenericReturnTypeSupport(genericReturnType);
",2,0,0,1,2,1,0,2,0,4,58,7,0.05556,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,444,"        public NotGenericReturnTypeSupport(Type genericReturnType) {
",4,0,0,1,3,1,0,2,0,7,60,3,0.05556,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,445,"            returnType = (Class<?>) genericReturnType;
",4,0,0,1,2,0,0,2,0,7,42,5,0.05556,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,446,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,450,"            return returnType;
",2,0,0,0,0,1,0,0,0,2,18,5,0.05556,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,107,"                return returnTypeGenericMetadata;
",2,0,0,0,0,1,0,0,0,2,33,9,0.05263,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,116,"                return mock;
",2,0,0,0,0,1,0,0,0,2,12,10,0.05263,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,148,"        return new Class[0];
",0,0,0,1,2,1,0,2,0,2,20,7,0.05000,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,56,"        return getMock(invocation, returnTypeGenericMetadata);
",0,0,0,1,2,1,6,0,0,6,54,5,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,62,"    	InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());
",2,0,0,3,6,0,6,6,0,14,90,4,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,63,"    	InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();
",2,0,0,2,4,0,4,4,0,10,95,4,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,66,"        for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {
",2,0,0,2,5,0,4,2,0,8,93,4,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,73,"        return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);
",0,0,0,2,4,1,8,0,0,8,87,5,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,87,"        return mockitoCore.mock(
",0,0,0,0,1,1,4,0,0,4,24,5,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,94,"        MockSettings mockSettings =
",2,0,0,0,0,0,0,2,0,4,27,4,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,99,"        return mockSettings
",0,0,0,0,0,1,2,0,0,2,19,5,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,104,"        return new ReturnsDeepStubs() {
",0,0,0,1,3,1,0,2,0,2,31,6,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,114,"        container.addAnswer(new Answer<Object>() {
",0,0,0,1,4,0,4,4,0,8,42,5,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,120,"        return mock;
",2,0,0,0,0,1,0,0,0,2,12,4,0.04348,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,48,"        GenericMetadataSupport returnTypeGenericMetadata =
",2,0,0,0,0,0,0,2,0,4,50,4,0.04167,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,51,"        Class<?> rawType = returnTypeGenericMetadata.rawType();
",2,0,0,1,2,0,4,2,0,8,55,4,0.04167,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,23,52,"        if (!mockitoCore.isTypeMockable(rawType)) {
",0,0,0,2,5,0,6,0,0,7,43,4,0.04167,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,59,"public abstract class GenericMetadataSupport implements Serializable {
",2,0,0,0,1,2,0,2,0,6,70,1,0.04167,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,66,"    protected Map<TypeVariable, Type> contextualActualTypeParameters = new HashMap<TypeVariable, Type>();
",2,0,0,1,2,1,0,12,0,15,101,2,0.04167,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,70,"        if (!(classType instanceof ParameterizedType)) {
",2,0,0,2,5,0,0,2,0,5,48,4,0.04167,0,-1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,23,71,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.04167,0,-1
defect4j,mockito,org/mockito/internal/stubbing/OngoingStubbingImpl,24,43,"        return invocationContainerImpl.getInvocations();
",0,0,0,1,2,1,4,0,0,4,48,5,0.04545,0,-1
defect4j,mockito,org/mockito/internal/MockitoCore,24,164,"        OngoingStubbingImpl ongoingStubbing = ((OngoingStubbingImpl) mockingProgress.pullOngoingStubbing());
",2,0,0,3,6,0,4,4,0,10,100,4,0.04545,0,-1
defect4j,mockito,org/mockito/internal/MockitoCore,24,165,"        List<Invocation> allInvocations = ongoingStubbing.getRegisteredInvocations();
",2,0,0,1,2,0,4,4,0,10,77,4,0.04545,0,-1
defect4j,mockito,org/mockito/internal/MockitoCore,24,166,"        return allInvocations.get(allInvocations.size()-1);
",0,1,0,2,4,1,8,0,0,9,51,5,0.04545,0,-1
defect4j,mockito,org/mockito/internal/creation/jmock/ClassImposterizer,24,80,"            constructor.setAccessible(accessible);
",0,0,0,1,2,0,6,0,0,6,38,7,0.01465,0,-1
defect4j,mockito,org/mockito/internal/creation/jmock/ClassImposterizer,24,103,"            enhancer.setSuperclass(mockedType);
",0,0,0,1,2,0,6,0,0,6,35,7,0.01465,0,-1
defect4j,mockito,org/mockito/internal/creation/jmock/ClassImposterizer,24,104,"            enhancer.setInterfaces(interfaces);
",0,0,0,1,2,0,6,0,0,6,35,7,0.01465,0,-1
defect4j,mockito,org/mockito/internal/invocation/ArgumentsProcessor,24,47,"                matchers.add(new Equals(arg));
",2,0,0,2,4,0,4,2,0,8,30,9,0.00873,0,-1
defect4j,mockito,org/mockito/internal/invocation/ArgumentsProcessor,24,44,"            if (arg != null && arg.getClass().isArray()) {
",2,2,0,3,7,0,6,0,0,10,46,6,0.00864,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equals,24,19,"    public Equals(Object wanted) {
",4,0,0,1,3,1,0,2,0,7,30,2,0.00853,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equals,24,20,"        this.wanted = wanted;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00853,0,-1
defect4j,mockito,org/mockito/internal/matchers/Equals,24,21,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00853,0,-1
defect4j,mockito,org/mockito/Mockito,24,1122,"        return mock(classToMock, withSettings().defaultAnswer(RETURNS_DEFAULTS));
",0,0,0,3,6,1,10,0,0,10,73,5,0.00798,0,-1
defect4j,mockito,org/mockito/ArgumentMatcher,24,60,"public abstract class ArgumentMatcher<T> extends BaseMatcher<T> {
",4,0,0,0,1,2,0,4,0,10,65,1,0.00786,0,-1
defect4j,mockito,org/mockito/configuration/DefaultMockitoConfiguration,24,32,"        return new ReturnsEmptyValues();
",0,0,0,1,2,1,0,2,0,2,32,6,0.00771,0,-1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/GloballyConfiguredAnswer,24,24,"        return new GlobalConfiguration().getDefaultAnswer().answer(invocation);
",0,0,0,3,6,1,6,2,0,8,71,5,0.00769,0,-1
