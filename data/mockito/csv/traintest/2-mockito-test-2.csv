dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,mockito,org/mockito/internal/configuration/injection/FinalMockCandidateFilter,15,26,"                    } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,13,0.00000,1,0
defect4j,mockito,org/mockito/internal/MockitoCore,16,36,"        return mockUtil.createMock(classToMock, (MockSettingsImpl) mockSettings);
",2,0,0,2,4,1,6,2,0,10,73,5,0.00159,1,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,87,"        } else if (type == Collection.class) {
",2,1,0,1,4,0,0,2,0,5,38,5,0.00210,1,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,7,59,"		for (InvocationListener listener : invocationListeners) {
",4,0,0,1,3,0,0,2,0,6,57,4,1.00000,0,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,7,66,"	}
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,392,"                return (Class<?>) type;
",2,0,0,1,2,1,0,2,0,4,23,8,0.12500,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,430,"            List<Type> extraInterfaces = extraInterfaces();
",2,0,0,1,2,0,2,4,0,8,47,5,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,431,"            List<Class<?>> rawExtraInterfaces = new ArrayList<Class<?>>();
",2,0,0,1,2,0,0,8,0,10,62,5,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,432,"            for (Type extraInterface : extraInterfaces) {
",4,0,0,1,3,0,0,2,0,6,45,5,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,439,"            return rawExtraInterfaces.toArray(new Class[rawExtraInterfaces.size()]);
",0,0,0,3,6,1,8,2,0,10,72,6,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,414,"                return Arrays.asList(((BoundedType) type).interfaceBounds());
",2,0,0,4,8,1,6,2,0,10,61,8,0.11111,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,451,"                Type actualFirstBound = extractActualBoundedTypeOf(((BoundedType) type).firstBound());
",4,0,0,4,8,0,4,4,0,12,86,7,0.11111,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,452,"                if (!(actualFirstBound instanceof BoundedType)) {
",2,0,0,2,5,0,0,2,0,5,49,7,0.11111,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,453,"                    return type; // avoid going one step further, ie avoid : O(TypeVar) -> K(TypeVar) -> Some ParamType
",2,0,0,2,4,1,0,0,0,2,99,9,0.11111,0,0
defect4j,mockito,org/mockito/internal/creation/cglib/ClassImposterizer,7,106,"            enhancer.setSuperclass(Object.class);
",0,0,0,1,2,0,4,2,0,6,37,7,0.10000,0,1
defect4j,mockito,org/mockito/internal/creation/cglib/ClassImposterizer,7,107,"            enhancer.setInterfaces(allMockedTypes);
",0,0,0,1,2,0,6,0,0,6,39,7,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,398,"                return extractRawTypeOf(((BoundedType) type).firstBound());
",2,0,0,4,8,1,4,2,0,8,59,8,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,412,"            Type type = extractActualBoundedTypeOf(typeVariable);
",2,0,0,1,2,0,4,2,0,8,53,5,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,413,"            if (type instanceof BoundedType) {
",2,0,0,1,3,0,0,2,0,4,34,6,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,443,"            if (type instanceof TypeVariable) {
",2,0,0,1,3,0,0,2,0,4,35,6,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,448,"                return extractActualBoundedTypeOf(contextualActualTypeParameters.get(type));
",0,0,0,2,4,1,8,0,0,8,76,8,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,450,"            if (type instanceof BoundedType) {
",2,0,0,1,3,0,0,2,0,4,34,6,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,457,"            return type; // irrelevant, we don't manage other types as they are not bounded.
",2,0,0,0,0,1,0,0,0,2,80,5,0.10000,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,538,"            Type[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];
",4,1,0,3,6,0,4,4,0,13,71,5,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,539,"            System.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);
",2,1,0,3,6,0,14,0,0,17,103,6,0.10000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,540,"            return interfaceBounds;
",2,0,0,0,0,1,0,0,0,2,23,5,0.10000,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,527,"            return typeVariable.getBounds()[0]; //
",0,0,0,2,4,1,4,0,0,4,38,7,0.08333,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,209,"        if (genericReturnType instanceof TypeVariable) {
",2,0,0,1,3,0,0,2,0,4,48,5,0.07692,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,210,"            return new TypeVariableReturnType(this, method.getTypeParameters(), (TypeVariable) genericReturnType);
",2,0,0,3,6,1,4,4,0,10,102,7,0.07692,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,362,"        public TypeVariableReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, TypeVariable typeVariable) {
",8,0,0,2,5,1,0,6,0,15,120,3,0.07692,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,363,"            this.typeParameters = typeParameters;
",4,0,0,0,0,0,0,0,0,5,37,5,0.07692,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,364,"            this.typeVariable = typeVariable;
",4,0,0,0,0,0,0,0,0,5,33,5,0.07692,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,365,"            this.contextualActualTypeParameters = source.contextualActualTypeParameters;
",6,0,0,0,0,0,0,0,0,7,76,5,0.07692,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,367,"            readTypeParameters();
",0,0,0,1,2,0,2,0,0,2,21,6,0.07692,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,368,"            readTypeVariables();
",0,0,0,1,2,0,2,0,0,2,20,6,0.07692,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,7,369,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,8,184,"            TypeVariable typeVariable = (TypeVariable) type;
",4,0,0,1,2,0,0,4,0,8,48,6,0.12500,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,8,209,"        if (genericReturnType instanceof TypeVariable) {
",2,0,0,1,3,0,0,2,0,4,48,5,0.08333,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,8,362,"        public TypeVariableReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, TypeVariable typeVariable) {
",8,0,0,2,5,1,0,6,0,15,120,3,0.08333,0,1
defect4j,mockito,org/mockito/exceptions/Reporter,9,583,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,1,0,1
defect4j,mockito,org/mockito/Mockito,9,1405,"        return MOCKITO_CORE.mock(classToSpy, withSettings()
",0,0,0,1,3,1,8,0,0,8,51,5,1,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,15,"            return noArgConstructor(cls);
",0,0,0,1,2,1,4,0,0,4,29,7,0.80000,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,55,"            return cls.newInstance();
",0,0,0,1,2,1,4,0,0,4,25,7,0.80000,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,14,"        if (outerClassInstance == null) {
",2,1,0,1,3,0,0,0,0,3,33,4,0.57143,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,9,"    public ConstructorInstantiator(Object outerClassInstance) {
",4,0,0,1,3,1,0,2,0,7,59,2,0.50000,0,0
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,10,"        this.outerClassInstance = outerClassInstance;
",4,0,0,0,0,0,0,0,0,5,45,4,0.50000,0,0
defect4j,mockito,org/mockito/internal/creation/instance/InstantiatorProvider,9,11,"            return new ConstructorInstantiator(settings.getOuterClassInstance());
",0,0,0,2,4,1,4,2,0,6,69,7,0.50000,0,1
defect4j,mockito,org/mockito/internal/creation/instance/ConstructorInstantiator,9,11,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,0
defect4j,mockito,org/mockito/internal/creation/settings/CreationSettings,9,110,"        return outerClassInstance;
",2,0,0,0,0,1,0,0,0,2,26,4,0.50000,0,0
defect4j,mockito,org/mockito/internal/creation/MockSettingsImpl,9,98,"        this.useConstructor = true;
",2,0,0,0,0,0,0,0,0,4,27,4,0.44444,0,0
defect4j,mockito,org/mockito/internal/creation/MockSettingsImpl,9,99,"        return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.44444,0,0
defect4j,mockito,org/mockito/internal/invocation/realmethod/CleanTraceRealMethod,9,31,"        } catch (Throwable t) {
",2,0,0,1,4,0,0,2,0,4,23,6,0.25000,0,1
defect4j,mockito,org/mockito/internal/invocation/realmethod/CleanTraceRealMethod,9,32,"            new ConditionalStackTraceFilter().filter(t);
",0,0,0,2,4,0,4,2,0,6,44,8,0.25000,0,1
defect4j,mockito,org/mockito/internal/invocation/realmethod/CleanTraceRealMethod,9,33,"            throw t;
",2,0,0,0,0,0,0,0,0,2,8,7,0.25000,0,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,9,46,"        return (method.getModifiers() & Modifier.ABSTRACT) != 0;
",4,2,0,2,4,1,4,0,0,10,56,4,0.20455,0,1
defect4j,mockito,org/mockito/internal/invocation/InvocationImpl,9,109,"        if (method.isAbstract()) {
",0,0,0,2,5,0,4,0,0,4,26,5,0.18000,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,34,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.04500,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,35,"        filterStackTrace();
",0,0,0,1,2,0,2,0,0,2,19,5,0.04500,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,36,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04500,0,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,39,"        unfilteredStackTrace = getStackTrace();
",2,0,0,1,2,0,2,0,0,5,39,4,0.04286,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,41,"        ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();
",2,0,0,1,2,0,0,4,0,6,71,4,0.04286,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,42,"        filter.filter(this);
",0,0,0,1,2,0,4,0,0,4,20,5,0.04286,0,1
defect4j,mockito,org/mockito/exceptions/base/MockitoException,9,43,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04286,0,0
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,9,41,"        } catch (Throwable t){
",2,0,0,1,4,0,0,2,0,4,22,6,0.04206,0,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,9,42,"            notifyMethodCallException(invocation, t);
",0,0,0,1,2,0,6,0,0,6,41,8,0.04206,0,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,9,43,"            throw t;
",2,0,0,0,0,0,0,0,0,2,8,7,0.04206,0,0
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,9,59,"		for (InvocationListener listener : invocationListeners) {
",4,0,0,1,3,0,0,2,0,6,57,4,0.04206,0,1
defect4j,mockito,org/mockito/internal/handler/InvocationNotifierHandler,9,66,"	}
",0,0,0,0,1,0,0,0,0,0,1,3,0.04206,0,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,9,59,"        return GLOBAL_CONFIGURATION.get().cleansStackTrace();
",0,0,0,2,4,1,6,0,0,6,53,5,0.02059,0,1
defect4j,mockito,org/mockito/internal/creation/settings/CreationSettings,9,81,"        return defaultAnswer;
",2,0,0,0,0,1,0,0,0,2,21,4,0.01459,0,0
defect4j,mockito,org/mockito/internal/stubbing/InvocationContainerImpl,9,85,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01459,0,0
defect4j,mockito,org/mockito/internal/stubbing/InvocationContainerImpl,9,87,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.01459,0,0
defect4j,mockito,org/mockito/internal/util/MockNameImpl,9,20,"            this.mockName = toInstanceName(classToMock);
",2,0,0,1,2,0,4,0,0,7,44,6,0.01417,0,1
defect4j,mockito,org/mockito/internal/util/MockNameImpl,9,21,"            this.defaultName = true;
",2,0,0,0,0,0,0,0,0,4,24,6,0.01417,0,0
defect4j,mockito,org/mockito/internal/util/MockNameImpl,9,32,"        String className = clazz.getSimpleName();
",2,0,0,1,2,0,4,2,0,8,41,4,0.01417,0,1
defect4j,mockito,org/mockito/internal/util/MockNameImpl,9,33,"        if (className.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.01417,0,1
defect4j,mockito,org/mockito/internal/util/MockNameImpl,9,38,"        return className.substring(0, 1).toLowerCase() + className.substring(1);
",0,1,0,3,6,1,10,0,0,11,72,4,0.01417,0,1
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,9,42,"        return method.isVarArgs();
",0,0,0,1,2,1,4,0,0,4,26,5,0.01391,0,1
defect4j,mockito,org/mockito/internal/creation/cglib/DelegatingMockitoMethodProxy,9,14,"    public DelegatingMockitoMethodProxy(MethodProxy methodProxy) {
",4,0,0,1,3,1,0,2,0,7,62,2,0.01389,0,0
defect4j,mockito,org/mockito/internal/creation/cglib/DelegatingMockitoMethodProxy,9,15,"        this.methodProxy = methodProxy;
",4,0,0,0,0,0,0,0,0,5,31,4,0.01389,0,0
defect4j,mockito,org/mockito/internal/creation/cglib/DelegatingMockitoMethodProxy,9,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01389,0,0
defect4j,mockito,org/mockito/internal/creation/cglib/MethodInterceptorFilter,9,73,"        return new DelegatingMockitoMethodProxy(methodProxy);
",2,0,0,1,2,1,0,2,0,4,53,5,0.01389,0,1
defect4j,mockito,org/mockito/internal/creation/cglib/MethodInterceptorFilter,9,80,"            return new DelegatingMethod(method);
",2,0,0,1,2,1,0,2,0,4,36,7,0.01389,0,1
defect4j,mockito,org/mockito/internal/creation/cglib/ClassImposterizer,9,86,"            constructor.setAccessible(accessible);
",0,0,0,1,2,0,6,0,0,6,38,7,0.01389,0,1
defect4j,mockito,org/mockito/exceptions/Reporter,10,760,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.50000,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,215,"            return new NotGenericReturnTypeSupport(genericReturnType);
",2,0,0,1,2,1,0,2,0,4,58,7,0.04762,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,480,"        public NotGenericReturnTypeSupport(Type genericReturnType) {
",4,0,0,1,3,1,0,2,0,7,60,3,0.04762,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,481,"            returnType = (Class<?>) genericReturnType;
",4,0,0,1,2,0,0,2,0,7,42,5,0.04762,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,482,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,486,"            return returnType;
",2,0,0,0,0,1,0,0,0,2,18,5,0.04762,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,162,"        return new Class[0];
",0,0,0,1,2,1,0,2,0,2,20,7,0.04348,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,59,"        InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());
",2,0,0,3,6,0,6,6,0,14,90,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,60,"        InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();
",2,0,0,2,4,0,4,4,0,10,95,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,63,"        for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {
",2,0,0,2,5,0,4,2,0,8,93,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,95,"        MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ?
",2,0,0,1,2,0,4,2,0,8,79,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,99,"        return mockSettings.serializable()
",0,0,0,1,2,1,4,0,0,4,34,6,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,105,"        return new ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata);
",2,0,0,1,2,1,0,2,0,4,76,5,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,123,"        public ReturnsDeepStubsSerializationFallback(GenericMetadataSupport returnTypeGenericMetadata) {
",4,0,0,1,3,1,0,2,0,7,96,3,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,124,"            this.returnTypeGenericMetadata = returnTypeGenericMetadata;
",4,0,0,0,0,0,0,0,0,5,59,5,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,125,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,169,"        return rawExtraInterfaces().length > 0;
",2,1,0,1,2,1,2,0,0,5,39,4,0.03846,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,47,"        GenericMetadataSupport returnTypeGenericMetadata =
",2,0,0,0,0,0,0,2,0,4,50,4,0.03704,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,50,"        Class<?> rawType = returnTypeGenericMetadata.rawType();
",2,0,0,1,2,0,4,2,0,8,55,4,0.03704,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,67,"public abstract class GenericMetadataSupport {
",2,0,0,0,1,2,0,0,0,4,46,1,0.03704,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,74,"    protected Map<TypeVariable, Type> contextualActualTypeParameters = new HashMap<TypeVariable, Type>();
",2,0,0,1,2,1,0,12,0,15,101,2,0.03704,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,78,"        if (!(classType instanceof ParameterizedType)) {
",2,0,0,2,5,0,0,2,0,5,48,4,0.03704,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,79,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.03704,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,98,"        for (TypeVariable typeVariable : typeParameters) {
",4,0,0,1,3,0,0,2,0,6,50,4,0.03704,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,101,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03704,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,114,"        CreationSettings mockSettings = (CreationSettings) new MockUtil().getMockHandler(mock).getMockSettings();
",2,0,0,4,8,0,6,6,0,14,105,4,0.03704,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,115,"        return GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());
",0,0,0,2,4,1,8,0,0,8,70,5,0.03704,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,151,"        return LazyHolder.MOCKITO_CORE;
",4,0,0,0,0,1,0,0,0,4,31,5,0.03704,0,1
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,159,"        private static final MockitoCore MOCKITO_CORE = new MockitoCore();
",2,0,0,1,2,3,0,4,0,9,66,3,0.03704,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,10,160,"        private static final ReturnsEmptyValues DELEGATE = new ReturnsEmptyValues();
",2,0,0,1,2,3,0,4,0,9,76,3,0.03704,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,211,"        Type genericReturnType = method.getGenericReturnType();
",2,0,0,1,2,0,4,2,0,8,55,4,0.03704,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,214,"        if (genericReturnType instanceof Class) {
",2,0,0,1,3,0,0,2,0,4,41,5,0.03704,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,240,"        Checks.checkNotNull(type, ""type"");
",0,0,0,1,2,0,6,0,0,7,34,5,0.03704,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,241,"        if (type instanceof Class) {
",2,0,0,1,3,0,0,2,0,4,28,5,0.03704,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,242,"            return new FromClassGenericMetadataSupport((Class<?>) type);
",2,0,0,2,4,1,0,4,0,6,60,7,0.03704,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMetadataSupport,10,265,"        public FromClassGenericMetadataSupport(Class<?> clazz) {
",4,0,0,1,3,1,0,2,0,7,56,3,0.03704,0,1
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,55,"            return method.equals(o);
",0,0,0,1,2,1,6,0,0,6,24,5,1,0,1
defect4j,mockito,org/mockito/internal/util/MockUtil,11,69,"        return isMockitoMock(mock) && getMockSettings(mock).getSpiedInstance() != null;
",0,2,0,3,6,1,10,0,0,14,79,4,0.00816,0,1
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,76,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00816,0,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,72,"        } else if (isMockOrSpy(instance)) {
",0,0,0,2,6,0,4,0,0,4,35,6,0.00765,0,1
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,86,"        return mockUtil.isMock(instance)
",0,0,0,1,2,1,6,0,0,6,32,6,0.00765,0,1
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,42,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00750,0,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,12,"public class DelegatingMethod implements MockitoMethod {
",2,0,0,0,1,1,0,2,0,5,56,1,0.00593,0,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,16,"    public DelegatingMethod(Method method) {
",4,0,0,1,3,1,0,2,0,7,40,2,0.00593,0,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,17,"        assert method != null : ""Method cannot be null"";
",2,1,0,0,0,0,0,0,0,4,48,4,0.00593,0,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,18,"        this.method = method;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00593,0,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,19,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00593,0,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,65,"        return isMockitoMock(mock);
",0,0,0,1,2,1,4,0,0,4,27,5,0.00567,0,1
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,41,"        if (!(mock instanceof Factory)) {
",2,0,0,2,5,0,0,2,0,5,33,4,0.00531,0,1
defect4j,mockito,org/mockito/internal/util/MockUtil,11,73,"        return mockMaker.getHandler(mock) != null;
",0,1,0,1,2,1,6,0,0,7,42,4,0.00531,0,1
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,49,"            if (field.isAnnotationPresent(Spy.class) && !field.isAnnotationPresent(InjectMocks.class)) {
",0,1,0,3,7,0,8,4,0,14,92,6,0.00517,0,1
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,52,"            if (null != field.getAnnotation(InjectMocks.class)) {
",0,1,0,2,5,0,4,2,0,7,53,6,0.00517,0,1
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,59,"            FieldReader fieldReader = new FieldReader(instance, field);
",6,0,0,1,2,0,0,4,0,10,59,6,0.00517,0,1
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,61,"            Object mockInstance = preparedMock(fieldReader.read(), field);
",2,0,0,2,4,0,8,2,0,12,62,6,0.00517,0,1
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,62,"            if (mockInstance != null) {
",2,1,0,1,3,0,0,0,0,3,27,6,0.00517,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,19,"            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
",4,0,0,4,8,0,2,4,0,10,72,6,1,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,20,"                return (Class) actual;
",2,0,0,1,2,1,0,2,0,4,22,7,1,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,8,"public class GenericMaster {
",2,0,0,0,1,1,0,0,0,3,28,1,1,0,0
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,17,"        Type generic = field.getGenericType();
",2,0,0,1,2,0,4,2,0,8,38,4,1,0,1
defect4j,mockito,org/mockito/internal/util/reflection/GenericMaster,12,18,"        if (generic != null && generic instanceof ParameterizedType) {
",4,2,0,1,3,0,0,2,0,8,62,4,1,0,1
defect4j,mockito,org/mockito/internal/util/MockCreationValidator,12,11,"public class MockCreationValidator {
",2,0,0,0,1,1,0,0,0,3,36,1,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsMocks,12,15,"public class ReturnsMocks implements Answer<Object>, Serializable {
",2,0,0,0,1,1,0,6,0,9,67,1,1,0,0
defect4j,mockito,org/mockito/internal/matchers/CapturingMatcher,12,16,"public class CapturingMatcher<T> extends ArgumentMatcher<T> implements CapturesArguments, Serializable {
",4,0,0,0,1,1,0,8,0,13,104,1,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,12,17,"public class ReturnsDeepStubs implements Answer<Object>, Serializable {
",2,0,0,0,1,1,0,6,0,9,71,1,1,0,0
defect4j,mockito,org/mockito/internal/progress/HandyReturnValues,12,17,"public class HandyReturnValues {
",2,0,0,0,1,1,0,0,0,3,32,1,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsMocks,12,18,"    private MockitoCore mockitoCore = new MockitoCore();
",2,0,0,1,2,1,0,4,0,7,52,2,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsMocks,12,19,"    private Answer<Object> delegate = new ReturnsMoreEmptyValues();
",2,0,0,1,2,1,0,6,0,9,63,2,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/GloballyConfiguredAnswer,12,19,"public class GloballyConfiguredAnswer implements Answer<Object>, Serializable {
",2,0,0,0,1,1,0,6,0,9,79,1,1,0,0
defect4j,mockito,org/mockito/internal/matchers/CapturingMatcher,12,19,"    private LinkedList<Object> arguments = new LinkedList<Object>();
",2,0,0,1,2,1,0,8,0,11,64,2,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs,12,21,"    private Answer<Object> delegate = new ReturnsEmptyValues();
",2,0,0,1,2,1,0,6,0,9,59,2,1,0,0
defect4j,mockito,org/mockito/Answers,12,25,"public enum Answers {
",2,0,0,0,1,1,0,0,0,3,21,1,1,0,0
defect4j,mockito,org/mockito/internal/util/MockUtil,12,26,"    public MockUtil(MockCreationValidator creationValidator) {
",4,0,0,1,3,1,0,2,0,7,58,2,1,0,0
defect4j,mockito,org/mockito/internal/util/MockUtil,12,27,"        this.creationValidator = creationValidator;
",4,0,0,0,0,0,0,0,0,5,43,4,1,0,0
defect4j,mockito,org/mockito/Answers,12,27,"    RETURNS_DEFAULTS(new GloballyConfiguredAnswer()),
",2,0,0,2,4,0,0,2,0,4,49,2,1,0,0
defect4j,mockito,org/mockito/internal/util/MockUtil,12,28,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,mockito,org/mockito/Answers,12,28,"    RETURNS_SMART_NULLS(new ReturnsSmartNulls()),
",2,0,0,2,4,0,0,2,0,4,45,2,1,0,0
defect4j,mockito,org/mockito/Answers,12,29,"    RETURNS_MOCKS(new ReturnsMocks()),
",2,0,0,2,4,0,0,2,0,4,34,2,1,0,0
defect4j,mockito,org/mockito/Answers,12,30,"    RETURNS_DEEP_STUBS(new ReturnsDeepStubs()),
",2,0,0,2,4,0,0,2,0,4,43,2,1,0,0
defect4j,mockito,org/mockito/internal/util/MockUtil,12,31,"        this(new MockCreationValidator());
",0,0,0,2,4,0,0,2,0,2,34,6,1,0,1
defect4j,mockito,org/mockito/Answers,12,31,"    CALLS_REAL_METHODS(new CallsRealMethods())
",2,0,0,2,4,0,0,2,0,4,42,2,1,0,0
defect4j,mockito,org/mockito/internal/util/MockUtil,12,32,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/answers/CallsRealMethods,12,32,"public class CallsRealMethods implements Answer<Object>, Serializable {
",2,0,0,0,1,1,0,6,0,9,71,1,1,0,0
defect4j,mockito,org/mockito/Answers,12,36,"    private Answers(Answer<Object> implementation) {
",4,0,0,1,3,1,0,4,0,9,48,2,1,0,0
defect4j,mockito,org/mockito/Answers,12,37,"        this.implementation = implementation;
",4,0,0,0,0,0,0,0,0,5,37,4,1,0,0
defect4j,mockito,org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls,12,38,"public class ReturnsSmartNulls implements Answer<Object>, Serializable {
",2,0,0,0,1,1,0,6,0,9,72,1,1,0,0
defect4j,mockito,org/mockito/internal/MockitoCore,12,38,"public class MockitoCore {
",2,0,0,0,1,1,0,0,0,3,26,1,1,0,0
