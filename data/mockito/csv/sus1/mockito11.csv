dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,55,"            return method.equals(o);
",0,0,0,1,2,1,6,0,0,6,24,5,1,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,69,"        return isMockitoMock(mock) && getMockSettings(mock).getSpiedInstance() != null;
",0,2,0,3,6,1,10,0,0,14,79,4,0.00816,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,76,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00816,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,72,"        } else if (isMockOrSpy(instance)) {
",0,0,0,2,6,0,4,0,0,4,35,6,0.00765,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,86,"        return mockUtil.isMock(instance)
",0,0,0,1,2,1,6,0,0,6,32,6,0.00765,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,42,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00750,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,12,"public class DelegatingMethod implements MockitoMethod {
",2,0,0,0,1,1,0,2,0,5,56,1,0.00593,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,16,"    public DelegatingMethod(Method method) {
",4,0,0,1,3,1,0,2,0,7,40,2,0.00593,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,17,"        assert method != null : ""Method cannot be null"";
",2,1,0,0,0,0,0,0,0,4,48,4,0.00593,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,18,"        this.method = method;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00593,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,19,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00593,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,65,"        return isMockitoMock(mock);
",0,0,0,1,2,1,4,0,0,4,27,5,0.00567,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,41,"        if (!(mock instanceof Factory)) {
",2,0,0,2,5,0,0,2,0,5,33,4,0.00531,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,73,"        return mockMaker.getHandler(mock) != null;
",0,1,0,1,2,1,6,0,0,7,42,4,0.00531,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,49,"            if (field.isAnnotationPresent(Spy.class) && !field.isAnnotationPresent(InjectMocks.class)) {
",0,1,0,3,7,0,8,4,0,14,92,6,0.00517,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,52,"            if (null != field.getAnnotation(InjectMocks.class)) {
",0,1,0,2,5,0,4,2,0,7,53,6,0.00517,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,59,"            FieldReader fieldReader = new FieldReader(instance, field);
",6,0,0,1,2,0,0,4,0,10,59,6,0.00517,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,61,"            Object mockInstance = preparedMock(fieldReader.read(), field);
",2,0,0,2,4,0,8,2,0,12,62,6,0.00517,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,62,"            if (mockInstance != null) {
",2,1,0,1,3,0,0,0,0,3,27,6,0.00517,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,64,"            boolean alreadyAssigned = false;
",2,0,0,0,0,0,0,0,0,3,32,7,0.00517,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,65,"            for(Annotation annotation : field.getAnnotations()) {           
",2,0,0,2,5,0,4,2,0,8,53,6,0.00517,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,70,"        if (isAnnotatedByMockOrSpy(field)) {
",0,0,0,2,5,0,4,0,0,4,36,5,0.00517,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,80,"        return null != field.getAnnotation(Spy.class)
",0,1,0,1,2,1,4,2,0,7,45,6,0.00517,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,115,"            processAnnotationDeprecatedWay(annotationEngine, testClass, field);
",0,0,0,1,2,0,8,0,0,8,67,7,0.00517,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,121,"        boolean alreadyAssigned = false;
",2,0,0,0,0,0,0,0,0,3,32,5,0.00517,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,122,"        for(Annotation annotation : field.getAnnotations()) {
",2,0,0,2,5,0,4,2,0,8,53,4,0.00517,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,135,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00517,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,15,"    final AccessibilityChanger changer = new AccessibilityChanger();
",2,0,0,1,2,1,0,4,0,7,64,2,0.00508,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,17,"    public FieldReader(Object target, Field field) {
",6,0,0,1,3,1,0,4,0,11,48,2,0.00508,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,18,"        this.target = target;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00508,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,19,"        this.field = field;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00508,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,20,"        changer.enableAccess(field);
",0,0,0,1,2,0,6,0,0,6,28,5,0.00508,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,21,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00508,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,29,"            return field.get(target);
",0,0,0,1,2,1,6,0,0,6,25,7,0.00508,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,9,"public class AccessibilityChanger {
",2,0,0,0,1,1,0,0,0,3,35,1,0.00504,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,11,"    private Boolean wasAccessible = null;
",2,0,0,0,0,1,0,2,0,5,37,2,0.00504,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,29,"        wasAccessible = accessibleObject.isAccessible();
",2,0,0,1,2,0,4,0,0,7,48,4,0.00504,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,30,"        accessibleObject.setAccessible(true);
",0,0,0,1,2,0,4,0,0,5,37,5,0.00504,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,31,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00504,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,26,"        return GLOBAL_CONFIGURATION.get();
",0,0,0,1,2,1,4,0,0,4,34,5,0.00503,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,14,"public abstract class MockInjectionStrategy {
",2,0,0,0,1,2,0,0,0,4,45,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,16,"public class MockAnnotationProcessor implements FieldAnnotationProcessor<Mock> {
",2,0,0,0,1,1,0,4,0,7,80,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,16,"    private final MockUtil mockUtil = new MockUtil();
",2,0,0,1,2,2,0,4,0,8,49,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,16,"    public TypeBasedCandidateFilter(MockCandidateFilter next) {
",4,0,0,1,3,1,0,2,0,7,59,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/MockitoAnnotationsMockAnnotationProcessor,11,16,"public class MockitoAnnotationsMockAnnotationProcessor implements FieldAnnotationProcessor<Mock> {
",2,0,0,0,1,1,0,4,0,7,98,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,17,"        this.next = next;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultInjectionEngine,11,17,"public class DefaultInjectionEngine {
",2,0,0,0,1,1,0,0,0,3,37,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/CaptorAnnotationProcessor,11,17,"public class CaptorAnnotationProcessor implements FieldAnnotationProcessor<Captor> {
",2,0,0,0,1,1,0,4,0,7,84,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,18,"    public NameBasedCandidateFilter(MockCandidateFilter next) {
",4,0,0,1,3,1,0,2,0,7,59,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,18,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,19,"        this.next = next;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,20,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/Sets,11,20,"        return HashCodeAndEqualsSafeSet.of(mocks);
",0,0,0,1,2,1,6,0,0,6,42,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,20,"        return new MockInjectionStrategy() {
",0,0,0,1,3,1,0,2,0,2,36,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultInjectionEngine,11,20,"        MockInjection.onFields(needingInjection, testClassInstance)
",0,0,0,1,2,0,8,0,0,8,59,10,0.00477,0
defect4j,mockito,org/mockito/internal/util/Checks,11,21,"        checkNotNull(iterable, checkedIterable);
",0,0,0,1,2,0,6,0,0,6,40,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,22,"public class FinalMockCandidateFilter implements MockCandidateFilter {
",2,0,0,0,1,1,0,2,0,5,70,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,22,"    private final MockUtil mockUtil = new MockUtil();
",2,0,0,1,2,2,0,4,0,8,49,2,0.00477,0
defect4j,mockito,org/mockito/internal/util/Checks,11,22,"        for (Object item : iterable) {
",4,0,0,1,3,0,0,2,0,6,30,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,23,"public class InjectingAnnotationEngine implements AnnotationEngine {
",2,0,0,0,1,1,0,2,0,5,68,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,24,"    private final AnnotationEngine delegate = new DefaultAnnotationEngine();
",2,0,0,1,2,2,0,4,0,8,72,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,25,"    private final AnnotationEngine spyAnnotationEngine = new SpyAnnotationEngine();
",2,0,0,1,2,2,0,4,0,8,79,2,0.00477,0
defect4j,mockito,org/mockito/internal/util/Checks,11,25,"        return iterable;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultInjectionEngine,11,26,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,28,"public class SpyOnInjectedFieldsHandler extends MockInjectionStrategy {
",2,0,0,0,1,1,0,2,0,5,71,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,29,"    public InjectMocksScanner(Class<?> clazz) {
",4,0,0,1,3,1,0,2,0,7,43,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,30,"    private final Map<Class<? extends Annotation>, FieldAnnotationProcessor<?>> annotationProcessorMap = new HashMap<Class<? extends Annotation>, FieldAnnotationProcessor<?>>();
",2,0,0,1,2,2,0,16,0,20,173,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,30,"        this.clazz = clazz;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,31,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,32,"    public DefaultAnnotationEngine() {
",2,0,0,1,3,1,0,0,0,3,34,2,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,32,"public class HashCodeAndEqualsSafeSet implements Set<Object> {
",2,0,0,0,1,1,0,4,0,7,62,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,32,"    public MockScanner(Object instance, Class<?> clazz) {
",6,0,0,1,3,1,0,4,0,11,53,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,33,"        registerAnnotationProcessor(Mock.class, new MockAnnotationProcessor());
",0,0,0,2,4,0,2,4,0,6,71,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,33,"        this.instance = instance;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,34,"        registerAnnotationProcessor(MockitoAnnotations.Mock.class, new MockitoAnnotationsMockAnnotationProcessor());
",4,0,0,2,4,0,2,2,0,8,108,5,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,34,"    private final HashSet<HashCodeAndEqualsMockWrapper> backingHashSet = new HashSet<HashCodeAndEqualsMockWrapper>();
",2,0,0,1,2,2,0,8,0,12,113,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,34,"        this.clazz = clazz;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,35,"        registerAnnotationProcessor(Captor.class, new CaptorAnnotationProcessor());
",0,0,0,2,4,0,2,4,0,6,75,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,35,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,36,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,37,"        return new Iterator<Object>() {
",0,0,0,1,3,1,0,4,0,4,31,7,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,38,"            private final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();
",2,0,0,1,2,2,4,4,0,12,90,7,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,39,"public class SpyAnnotationEngine implements AnnotationEngine {
",2,0,0,0,1,1,0,2,0,5,62,1,0.00477,0
defect4j,mockito,org/mockito/configuration/DefaultMockitoConfiguration,11,39,"        return new InjectingAnnotationEngine();
",0,0,0,1,2,1,0,2,0,2,39,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,40,"        mockDependentFields.addAll(scan());
",0,0,0,2,4,0,6,0,0,6,35,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,41,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,41,"                return iterator.hasNext();
",0,0,0,1,2,1,4,0,0,4,26,10,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,41,"        if(nextStrategy != null) {
",2,1,0,1,3,0,0,0,0,3,26,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,42,"            nextStrategy.thenTry(strategy);
",0,0,0,1,2,0,6,0,0,6,31,7,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,42,"    public ConstructorInjection() { }
",2,0,0,2,4,1,0,0,0,3,33,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,44,"            nextStrategy = strategy;
",4,0,0,0,0,0,0,0,0,5,24,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,46,"        return strategy;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,47,"        Field[] fields = context.getDeclaredFields();
",2,0,0,2,4,0,4,2,0,8,45,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,47,"        mocks.addAll(scan());
",0,0,0,2,4,0,6,0,0,6,21,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,48,"        for (Field field : fields) {
",4,0,0,1,3,0,0,2,0,6,28,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,48,"        return new OngoingMockInjection(fields, ofInstance);
",4,0,0,1,2,1,0,2,0,6,52,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,49,"        Set<Field> mockDependentFields = new HashSet<Field>();
",2,0,0,1,2,0,0,8,0,10,54,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,50,"        Field[] fields = clazz.getDeclaredFields();
",2,0,0,2,4,0,4,2,0,8,43,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,51,"        for (Field field : fields) {
",4,0,0,1,3,0,0,2,0,6,28,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,55,"        processIndependentAnnotations(testInstance.getClass(), testInstance);
",0,0,0,2,4,0,8,0,0,8,69,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,55,"        return GLOBAL_CONFIGURATION.get().getAnnotationEngine();
",0,0,0,2,4,1,6,0,0,6,56,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,55,"        private final Set<Field> fields = new HashSet<Field>();
",2,0,0,1,2,2,0,8,0,12,55,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,56,"        processInjectMocks(testInstance.getClass(), testInstance);
",0,0,0,2,4,0,8,0,0,8,58,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,56,"        private final Set<Object> mocks = newMockSafeHashSet();
",2,0,0,1,2,2,2,4,0,10,55,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,56,"        Set<Object> mocks = newMockSafeHashSet();
",2,0,0,1,2,0,2,4,0,8,41,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,57,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,57,"        for (Field field : clazz.getDeclaredFields()) {
",2,0,0,2,5,0,4,2,0,8,47,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,58,"        return mockDependentFields;
",2,0,0,0,0,1,0,0,0,2,27,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,58,"        annotationProcessorMap.put(annotationClass, fieldAnnotationProcessor);
",0,0,0,1,2,0,8,0,0,8,70,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,58,"        private final MockInjectionStrategy injectionStrategies = MockInjectionStrategy.nop();
",2,0,0,1,2,2,4,2,0,10,86,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,59,"public class PropertyAndSetterInjection extends MockInjectionStrategy {
",2,0,0,0,1,1,0,2,0,5,71,1,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,59,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,59,"        private final MockInjectionStrategy postInjectionStrategies = MockInjectionStrategy.nop();
",2,0,0,1,2,2,4,2,0,10,90,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,60,"        Class<?> classContext = clazz;
",4,0,0,0,0,0,0,2,0,6,30,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,61,"    private final MockCandidateFilter mockCandidateFilter = new TypeBasedCandidateFilter(new NameBasedCandidateFilter(new FinalMockCandidateFilter()));
",2,0,0,3,6,2,0,8,0,12,147,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,61,"        while (classContext != Object.class) {
",2,1,0,1,3,0,0,2,0,5,38,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,62,"    private final Comparator<Field> superTypesLast = new FieldTypeAndNameComparator();
",2,0,0,1,2,2,0,6,0,10,82,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,62,"            injectMocks(testInstance);
",0,0,0,1,2,0,4,0,0,4,26,7,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,62,"        Field[] fields = clazz.getDeclaredFields();
",2,0,0,2,4,0,4,2,0,8,43,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,63,"            classContext = classContext.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,44,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,63,"        for (Field field : fields) {
",4,0,0,1,3,0,0,2,0,6,28,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,64,"    private final ListUtil.Filter<Field> notFinalOrStatic = new ListUtil.Filter<Field>() {
",10,0,0,1,3,2,0,4,0,16,86,2,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,65,"        private OngoingMockInjection(Set<Field> fields, Object fieldOwner) {
",6,0,0,1,3,1,0,6,0,13,68,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,66,"            this.fieldOwner = checkNotNull(fieldOwner, ""fieldOwner"");
",2,0,0,1,2,0,4,0,0,8,57,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,66,"        return mocks;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,67,"            this.fields.addAll(checkItemsNotNull(fields, ""fields""));
",2,0,0,2,4,0,6,0,0,9,56,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,68,"        Class<?> classContext = clazz;
",4,0,0,0,0,0,0,2,0,6,30,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,68,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,69,"        while (classContext != Object.class) {
",2,1,0,1,3,0,0,2,0,5,38,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,71,"            this.mocks.addAll(checkNotNull(mocks, ""mocks""));
",2,0,0,2,4,0,6,0,0,9,48,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,71,"            delegate.process(classContext, testInstance);
",0,0,0,1,2,0,8,0,0,8,45,7,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,72,"            return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,73,"            spyAnnotationEngine.process(classContext, testInstance);
",0,0,0,1,2,0,8,0,0,8,56,7,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,75,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,75,"            classContext = classContext.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,44,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,76,"            injectionStrategies.thenTry(new ConstructorInjection());
",0,0,0,2,4,0,4,2,0,6,56,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,77,"            return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,77,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,79,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,81,"            injectionStrategies.thenTry(new PropertyAndSetterInjection());
",0,0,0,2,4,0,4,2,0,6,62,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,82,"            return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,86,"            postInjectionStrategies.thenTry(new SpyOnInjectedFieldsHandler());
",0,0,0,2,4,0,4,2,0,6,66,6,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,87,"            return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,90,"        Class<?> clazz = testClassInstance.getClass();
",2,0,0,1,2,0,4,2,0,8,46,4,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,90,"        if (testClass == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,91,"            for (Field field : fields) {
",4,0,0,1,3,0,0,2,0,6,28,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,91,"        Set<Field> mockDependentFields = new HashSet<Field>();
",2,0,0,1,2,0,0,8,0,10,54,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,92,"        Set<Object> mocks = newMockSafeHashSet();
",2,0,0,1,2,0,2,4,0,8,41,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,94,"        while (clazz != Object.class) {
",2,1,0,1,3,0,0,2,0,5,31,4,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,94,"        AnnotationEngine annotationEngine = new GlobalConfiguration().getAnnotationEngine();
",2,0,0,2,4,0,2,4,0,8,84,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,95,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,95,"            new InjectMocksScanner(clazz).addTo(mockDependentFields);
",2,0,0,2,4,0,4,2,0,8,57,7,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,95,"        Class<?> clazz = testClass.getClass();
",2,0,0,1,2,0,4,2,0,8,38,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,96,"            new MockScanner(testClassInstance, clazz).addPreparedMocks(mocks);
",4,0,0,2,4,0,4,2,0,10,66,7,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,97,"            clazz = clazz.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,30,6,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,98,"        if (annotationEngine.getClass() != new DefaultMockitoConfiguration().getAnnotationEngine().getClass()) {
",0,1,0,5,11,0,8,2,0,11,104,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,100,"        new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields, mocks, testClassInstance);
",0,0,0,2,4,0,8,2,0,10,96,5,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,101,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,101,"            while (clazz != Object.class) {
",2,1,0,1,3,0,0,2,0,5,31,6,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,102,"                scanDeprecatedWay(annotationEngine, testClass, clazz);
",0,0,0,1,2,0,8,0,0,8,54,9,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,103,"                clazz = clazz.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,30,8,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,108,"        annotationEngine.process(testClass.getClass(), testClass);
",0,0,0,2,4,0,10,0,0,10,58,5,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,109,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,112,"        Field[] fields = clazz.getDeclaredFields();
",2,0,0,2,4,0,4,2,0,8,43,4,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,114,"        for (Field field : fields) {
",4,0,0,1,3,0,0,2,0,6,28,4,0.00477,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,117,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,124,"        return backingHashSet.addAll(asWrappedMocks(mocks));
",0,0,0,2,4,1,8,0,0,8,52,5,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,132,"        Checks.checkNotNull(mocks, ""Passed collection should notify() be null"");
",0,0,0,2,4,0,6,0,0,7,72,5,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,133,"        HashSet<HashCodeAndEqualsMockWrapper> hashSet = new HashSet<HashCodeAndEqualsMockWrapper>();
",2,0,0,1,2,0,0,8,0,10,92,4,0.00477,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,133,"    static class FieldTypeAndNameComparator implements Comparator<Field> {
",2,0,0,0,1,1,0,4,0,7,70,2,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,134,"        for (Object mock : mocks) {
",4,0,0,1,3,0,0,2,0,6,27,4,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,138,"        return hashSet;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,146,"        return of(Arrays.asList(mocks));
",0,0,0,2,4,1,8,0,0,8,32,5,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,150,"        HashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new HashCodeAndEqualsSafeSet();
",2,0,0,1,2,0,0,4,0,6,83,4,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,151,"        if (objects != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,152,"            for (Object mock : objects) {
",4,0,0,1,3,0,0,2,0,6,29,6,0.00477,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,156,"        return hashCodeAndEqualsSafeSet;
",2,0,0,0,0,1,0,0,0,2,32,4,0.00477,0
defect4j,mockito,org/mockito/internal/util/Checks,11,14,"        if(value == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00472,0
defect4j,mockito,org/mockito/internal/util/Checks,11,17,"        return value;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00472,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,48,"        threadSafely().validateState();
",0,0,0,2,4,0,4,0,0,4,31,5,0.00464,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,49,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00464,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,68,"        validateMostStuff();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00464,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,71,"        if (stubbingInProgress != null) {
",2,1,0,1,3,0,0,0,0,3,33,4,0.00464,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,76,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00464,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,15,"public class ThreadSafeMockingProgress implements MockingProgress, Serializable {
",2,0,0,0,1,1,0,4,0,7,81,1,0.00451,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,18,"    private static final ThreadLocal<MockingProgress> mockingProgress = new ThreadLocal<MockingProgress>();
",2,0,0,1,2,3,0,8,0,13,103,2,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,19,"public class MockingProgressImpl implements MockingProgress {
",2,0,0,0,1,1,0,2,0,5,61,1,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,21,"    private final Reporter reporter = new Reporter();
",2,0,0,1,2,2,0,4,0,8,49,2,0.00451,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,21,"public class MockUtil {
",2,0,0,0,1,1,0,0,0,3,23,1,0.00451,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,21,"        if (mockingProgress.get() == null) {
",0,1,0,2,5,0,4,0,0,5,36,4,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,22,"    private final ArgumentMatcherStorage argumentMatcherStorage = new ArgumentMatcherStorageImpl();
",2,0,0,1,2,2,0,4,0,8,95,2,0.00451,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,22,"public class ArgumentMatcherStorageImpl implements ArgumentMatcherStorage {
",2,0,0,0,1,1,0,2,0,5,75,1,0.00451,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,22,"            mockingProgress.set(new MockingProgressImpl());
",0,0,0,2,4,0,4,2,0,6,47,7,0.00451,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,23,"    private static final MockMaker mockMaker = ClassPathLoader.getMockMaker();
",2,0,0,1,2,3,4,2,0,11,74,2,0.00451,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,24,"        return mockingProgress.get();
",0,0,0,1,2,1,4,0,0,4,29,5,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,26,"    private Location stubbingInProgress = null;
",2,0,0,0,0,1,0,2,0,5,43,2,0.00451,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,26,"    private final Stack<LocalizedMatcher> matcherStack = new Stack<LocalizedMatcher>();
",2,0,0,1,2,2,0,8,0,12,83,2,0.00451,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,47,"        new GlobalConfiguration();
",0,0,0,1,2,0,0,2,0,2,26,6,0.00451,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00451,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,49,"public class Reporter {
",2,0,0,0,1,1,0,0,0,3,23,1,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,81,"        GlobalConfiguration.validate();
",0,0,0,1,2,0,4,0,0,4,31,5,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,83,"        if (verificationMode != null) {
",2,1,0,1,3,0,0,0,0,3,31,4,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,89,"        getArgumentMatcherStorage().validateState();
",0,0,0,2,4,0,4,0,0,4,44,5,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,90,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00451,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,97,"        return mockMaker;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00451,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,109,"        return argumentMatcherStorage;
",2,0,0,0,0,1,0,0,0,2,30,4,0.00451,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,112,"        if (!matcherStack.isEmpty()) {
",0,0,0,2,5,0,4,0,0,5,30,4,0.00451,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,117,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00451,0
defect4j,mockito,org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider,11,9,"public class DefaultStackTraceCleanerProvider implements StackTraceCleanerProvider {
",2,0,0,0,1,1,0,2,0,5,84,1,0.00448,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,19,"public final class CglibMockMaker implements MockMaker {
",2,0,0,0,1,2,0,2,0,6,56,1,0.00448,0
defect4j,mockito,org/mockito/configuration/DefaultMockitoConfiguration,11,20,"public class DefaultMockitoConfiguration implements IMockitoConfiguration {
",2,0,0,0,1,1,0,2,0,5,75,1,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,22,"    private static final ThreadLocal<IMockitoConfiguration> GLOBAL_CONFIGURATION = new ThreadLocal<IMockitoConfiguration>();
",2,0,0,1,2,3,0,8,0,13,120,2,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,29,"    public GlobalConfiguration() {
",2,0,0,1,3,1,0,0,0,3,30,2,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,31,"        if (GLOBAL_CONFIGURATION.get() == null) {
",0,1,0,2,5,0,4,0,0,5,41,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,32,"            GLOBAL_CONFIGURATION.set(createConfig());
",0,0,0,2,4,0,6,0,0,6,41,7,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,34,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,37,"        IMockitoConfiguration defaultConfiguration = new DefaultMockitoConfiguration();
",2,0,0,1,2,0,0,4,0,6,79,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,38,"        IMockitoConfiguration config = new ClassPathLoader().loadConfiguration();
",2,0,0,2,4,0,2,4,0,8,73,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,39,"        if (config != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,40,"            return config;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,56,"public class ClassPathLoader {
",2,0,0,0,1,1,0,0,0,3,30,1,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,63,"    private static final MockMaker mockMaker = findPlatformMockMaker();
",2,0,0,1,2,3,2,2,0,9,67,2,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,64,"    private static final StackTraceCleanerProvider stackTraceCleanerProvider =
",2,0,0,0,0,3,0,2,0,7,74,2,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,75,"            configClass = (Class) Class.forName(MOCKITO_CONFIGURATION_CLASS_NAME);
",2,0,0,2,4,0,6,2,0,11,70,6,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,79,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,82,"            return (IMockitoConfiguration) configClass.newInstance();
",0,0,0,2,4,1,4,2,0,6,57,7,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,110,"        return findPluginImplementation(MockMaker.class, DEFAULT_MOCK_MAKER_CLASS);
",0,0,0,1,2,1,4,2,0,6,75,5,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,114,"        return findPluginImplementation(
",0,0,0,0,1,1,2,0,0,2,32,5,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,119,"        for (T plugin : loadImplementations(pluginType)) {
",2,0,0,2,5,0,4,2,0,8,50,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,127,"            return pluginType.cast(Class.forName(defaultPluginClassName).newInstance());
",0,0,0,3,6,1,12,0,0,12,76,7,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,140,"        ClassLoader loader = Thread.currentThread().getContextClassLoader();
",2,0,0,2,4,0,6,2,0,10,68,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,141,"        if (loader == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,146,"            resources = loader.getResources(""mockito-extensions/"" + service.getName());
",2,1,0,2,4,0,8,0,0,13,75,6,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,149,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,151,"        List<T> result = new ArrayList<T>();
",2,0,0,1,2,0,0,8,0,10,36,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,152,"        for (URL resource : Collections.list(resources)) {
",2,0,0,2,5,0,6,2,0,10,50,4,0.00448,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,169,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00448,0
defect4j,mockito,org/mockito/internal/util/Checks,11,11,"public class Checks {
",2,0,0,0,1,1,0,0,0,3,21,1,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/ListUtil,11,11,"public class ListUtil {
",2,0,0,0,1,1,0,0,0,3,23,1,0.00000,0
defect4j,mockito,org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider,11,12,"        return defaultCleaner;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/CannotVerifyStubOnlyMock,11,13,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/MockitoConfigurationException,11,14,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/SmartNullPointerException,11,14,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/ListUtil,11,14,"        LinkedList<T> filtered = new LinkedList<T>();
",2,0,0,1,2,0,0,8,0,10,45,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/Sets,11,14,"public abstract class Sets {
",2,0,0,0,1,2,0,0,0,4,28,1,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/CannotVerifyStubOnlyMock,11,14,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/WrongTypeOfReturnValue,11,14,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/FriendlyReminderException,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/MockitoConfigurationException,11,15,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/NeverWantedButInvoked,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/InvalidUseOfMatchersException,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/TooLittleActualInvocations,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/UnfinishedVerificationException,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/NullInsteadOfMockException,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/VerificationInOrderFailure,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/SmartNullPointerException,11,15,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/Checks,11,15,"            throw new NullPointerException(checkedValue + "" should not be null"");
",2,1,0,1,2,0,0,2,0,7,69,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/ListUtil,11,15,"        for (T t : collection) {
",4,0,0,1,3,0,0,2,0,6,24,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/NotAMockException,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/TooManyActualInvocations,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/MissingMethodInvocationException,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/WrongTypeOfReturnValue,11,15,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/UnfinishedStubbingException,11,15,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,16,"    public FieldInitializationReport(Object fieldInstance, boolean wasInitialized, boolean wasInitializedUsingConstructorArgs) {
",8,0,0,1,3,1,0,2,0,11,124,2,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/FriendlyReminderException,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/NeverWantedButInvoked,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/InvalidUseOfMatchersException,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/TooLittleActualInvocations,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/UnfinishedVerificationException,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/NullInsteadOfMockException,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/VerificationInOrderFailure,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/ListUtil,11,16,"            if (!filter.isOut(t)) {
",0,0,0,2,5,0,6,0,0,7,23,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/Sets,11,16,"        return HashCodeAndEqualsSafeSet.of(mocks);
",0,0,0,1,2,1,6,0,0,6,42,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/NotAMockException,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/TooManyActualInvocations,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/WantedButNotInvoked,11,16,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/ArgumentsAreDifferent,11,16,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/MissingMethodInvocationException,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/UnfinishedStubbingException,11,16,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,17,"        this.fieldInstance = fieldInstance;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/ListUtil,11,17,"                filtered.add(t);
",0,0,0,1,2,0,6,0,0,6,16,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,17,"        assert wasAccessible != null : ""accessibility info shall not be null"";
",2,1,0,0,0,0,0,0,0,4,70,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/WantedButNotInvoked,11,17,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/ArgumentsAreDifferent,11,17,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,18,"        this.wasInitialized = wasInitialized;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoAssertionError,11,18,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/NoInteractionsWanted,11,18,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,18,"        MockSettings mockSettings = Mockito.withSettings();
",2,0,0,1,2,0,4,2,0,8,51,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/MockitoConfigurationException,11,18,"        super(message, cause);
",4,0,0,1,2,0,0,0,0,4,22,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,19,"        this.wasInitializedUsingConstructorArgs = wasInitializedUsingConstructorArgs;
",4,0,0,0,0,0,0,0,0,5,77,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,19,"        if (annotation.extraInterfaces().length > 0) { // never null
",2,1,0,2,5,0,4,0,0,7,60,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/NoInteractionsWanted,11,19,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/MockitoConfigurationException,11,19,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/ListUtil,11,19,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/CaptorAnnotationProcessor,11,19,"        Class<?> type = field.getType();
",2,0,0,1,2,0,4,2,0,8,32,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,19,"            accessibleObject.setAccessible(wasAccessible);
",0,0,0,1,2,0,6,0,0,6,46,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/InvalidUseOfMatchersException,11,19,"        super("""");
",0,0,0,1,2,0,0,0,0,1,10,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockitoAnnotationsMockAnnotationProcessor,11,19,"        return Mockito.mock(field.getType(), field.getName());
",0,0,0,3,6,1,12,0,0,12,54,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,20,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoAssertionError,11,20,"        unfilteredStackTrace = getStackTrace();
",2,0,0,1,2,0,2,0,0,5,39,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,20,"            mockSettings.extraInterfaces(annotation.extraInterfaces());
",0,0,0,2,4,0,8,0,0,8,59,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/ListUtil,11,20,"        return filtered;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/CaptorAnnotationProcessor,11,20,"        if (!ArgumentCaptor.class.isAssignableFrom(type)) {
",0,0,0,2,5,0,4,2,0,7,51,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,20,"        } catch (Throwable t) {
",2,0,0,1,4,0,0,2,0,4,23,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/misusing/InvalidUseOfMatchersException,11,20,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/CaptorAnnotationProcessor,11,21,"            throw new MockitoException(""@Captor field must be of the type ArgumentCaptor.\n"" + ""Field: '""
",0,2,0,0,1,0,0,2,0,6,93,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/WantedButNotInvoked,11,21,"        return new RemoveFirstLine().of(super.toString());
",2,0,0,3,6,1,2,2,0,6,50,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,21,"        List<Object> mockTypeMatches = new ArrayList<Object>();
",2,0,0,1,2,0,0,8,0,10,55,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/verification/ArgumentsAreDifferent,11,21,"        return new RemoveFirstLine().of(super.toString());
",2,0,0,3,6,1,2,2,0,6,50,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoAssertionError,11,22,"        ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();
",2,0,0,1,2,0,0,4,0,6,71,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,22,"        return method.getExceptionTypes();
",0,0,0,1,2,1,4,0,0,4,34,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,22,"        if ("""".equals(annotation.name())) {
",0,0,0,3,7,0,6,0,0,7,35,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,22,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,22,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,22,"        for (Object mock : mocks) {
",4,0,0,1,3,0,0,2,0,6,27,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,22,"        InternalMockHandler mockitoHandler = cast(handler);
",2,0,0,1,2,0,4,2,0,8,51,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/ListUtil,11,23,"    public interface Filter<T> {
",4,0,0,0,1,1,0,0,0,5,28,2,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoAssertionError,11,23,"        filter.filter(this);
",0,0,0,1,2,0,4,0,0,4,20,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,23,"            mockSettings.name(field.getName());
",0,0,0,2,4,0,8,0,0,8,35,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,23,"        List<Object> mockNameMatches = new ArrayList<Object>();
",2,0,0,1,2,0,0,8,0,10,55,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/AccessibilityChanger,11,23,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,23,"            if (field.getType().isAssignableFrom(mock.getClass())) {
",0,0,0,4,9,0,10,0,0,10,56,7,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,23,"        new AcrossJVMSerializationFeature().enableSerializationAcrossJVM(settings);
",0,0,0,2,4,0,4,2,0,6,75,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/Checks,11,23,"            checkNotNull(item, ""item in "" + checkedIterable);
",2,1,0,1,2,0,4,0,0,8,49,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/Sets,11,24,"        return new IdentitySet();
",0,0,0,1,2,1,0,2,0,2,25,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoAssertionError,11,24,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,24,"        if(mocks.size() == 1) {
",0,1,0,2,5,0,4,0,0,5,23,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,24,"        if(mocks.size() > 1) {
",0,1,0,2,5,0,4,0,0,5,22,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,24,"                mockTypeMatches.add(mock);
",0,0,0,1,2,0,6,0,0,6,26,9,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,24,"        return ClassImposterizer.INSTANCE.imposterise(
",4,0,0,0,1,1,2,0,0,6,46,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/Checks,11,24,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,24,"            return read() == null;
",0,1,0,1,2,1,2,0,0,4,22,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,25,"public class MockInjection {
",2,0,0,0,1,1,0,0,0,3,28,1,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,25,"            final Object matchingMock = mocks.iterator().next();
",2,0,0,2,4,1,6,2,0,11,52,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,25,"            mockSettings.name(annotation.name());
",0,0,0,2,4,0,8,0,0,8,37,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,25,"            for (Object mock : mocks) {
",4,0,0,1,3,0,0,2,0,6,27,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/CaptorAnnotationProcessor,11,25,"        Class cls = new GenericMaster().getGenericType(field);
",2,0,0,2,4,0,4,4,0,10,54,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,26,"        return method;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,26,"      return !type.isPrimitive() && !Modifier.isFinal(type.getModifiers());
",0,1,0,3,6,1,12,0,0,15,69,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,26,"                if (field.getName().equals(mockUtil.getMockName(mock).toString())) {
",0,0,0,5,11,0,14,0,0,14,68,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/CaptorAnnotationProcessor,11,26,"        return ArgumentCaptor.forClass(cls);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,26,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,27,"            return new OngoingInjecter() {
",0,0,0,1,3,1,0,2,0,2,30,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,27,"        if(annotation.serializable()){
",0,0,0,2,5,0,4,0,0,4,30,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,27,"                    mockNameMatches.add(mock);
",0,0,0,1,2,0,6,0,0,6,26,11,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoAssertionError,11,27,"        return unfilteredStackTrace;
",2,0,0,0,0,1,0,0,0,2,28,4,0.00000,0
defect4j,mockito,org/mockito/configuration/DefaultMockitoConfiguration,11,27,"        throw new RuntimeException(""\n"" + ""This method should not be used by the framework because it was deprecated""
",0,1,0,0,1,0,0,2,0,5,109,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,28,"        	mockSettings.serializable();
",0,0,0,1,2,0,4,0,0,4,28,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,28,"        return fieldInstance;
",2,0,0,0,0,1,0,0,0,2,21,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,11,28,"        return next.filterCandidate(mockTypeMatches, field, fieldInstance);
",0,0,0,1,2,1,10,0,0,10,67,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,28,"        threadSafely().reportOngoingStubbing(iOngoingStubbing);
",0,0,0,2,4,0,6,0,0,6,55,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/Sets,11,28,"        if (elements == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,29,"        if (!(handler instanceof InternalMockHandler)) {
",2,0,0,2,5,0,0,2,0,5,48,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,29,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,29,"        super(message, t);
",4,0,0,1,2,0,0,0,0,4,18,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,29,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/Sets,11,29,"            throw new IllegalArgumentException(""Expected an array of elements (or empty array) but received a null."");
",0,0,0,2,4,0,0,2,0,4,106,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,30,"        this.iOngoingStubbing = iOngoingStubbing;
",4,0,0,0,0,0,0,0,0,5,41,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,30,"                        if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {
",4,0,0,3,7,0,4,2,0,11,70,13,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,30,"            throw new MockitoException(""At the moment you cannot provide own implementations of MockHandler."" +
",0,1,0,0,1,0,0,2,0,4,99,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,30,"            return next.filterCandidate(mockNameMatches, field, fieldInstance);
",0,0,0,1,2,1,10,0,0,10,67,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,30,"        filterStackTrace();
",0,0,0,1,2,0,2,0,0,2,19,5,0.00000,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,30,"        return method.getName();
",0,0,0,1,2,1,4,0,0,4,24,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,30,"        } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,30,"        MockHandler mockHandler = new MockHandlerFactory().create(settings);
",2,0,0,2,4,0,4,4,0,10,68,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,31,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,31,"                            new FieldSetter(fieldInstance, field).set(matchingMock);
",4,0,0,2,4,0,4,2,0,10,56,16,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,31,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldReader,11,31,"            throw new MockitoException(""Cannot read state from field: "" + field + "", on instance: "" + target);
",4,1,0,1,2,0,0,2,0,9,98,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/Sets,11,31,"        return new LinkedHashSet<T>(asList(elements));
",0,0,0,2,4,1,4,4,0,8,46,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,32,"        matcherStack.push(new LocalizedMatcher(matcher));
",2,0,0,2,4,0,4,2,0,8,49,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,32,"        mockSettings.defaultAnswer(annotation.answer().get());
",0,0,0,3,6,0,10,0,0,10,54,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,11,32,"        return next.filterCandidate(mocks, field, fieldInstance);
",0,0,0,1,2,1,10,0,0,10,57,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,32,"        FieldReader fieldReader = new FieldReader(fieldOwner, field);
",6,0,0,1,2,0,0,4,0,10,61,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,32,"        return threadSafely().pullOngoingStubbing();
",0,0,0,2,4,1,4,0,0,4,44,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,32,"        T mock = mockMaker.createMock(settings, mockHandler);
",2,0,0,1,2,0,8,2,0,12,53,4,0.00000,0
defect4j,mockito,org/mockito/configuration/DefaultMockitoConfiguration,11,32,"        return new ReturnsEmptyValues();
",0,0,0,1,2,1,0,2,0,2,32,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,33,"        return new HandyReturnValues();
",0,0,0,1,2,1,0,2,0,2,31,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,33,"                    } catch (RuntimeException e) {
",2,0,0,1,4,0,0,2,0,4,30,13,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/MockAnnotationProcessor,11,33,"        return Mockito.mock(field.getType(), mockSettings);
",0,0,0,2,4,1,10,0,0,10,51,5,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,33,"        return (InternalMockHandler) handler;
",2,0,0,1,2,1,0,2,0,4,37,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,34,"        IOngoingStubbing temp = iOngoingStubbing;
",4,0,0,0,0,0,0,2,0,6,41,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,34,"                        new Reporter().cannotInjectDependency(field, matchingMock, e);
",0,0,0,2,4,0,8,2,0,10,62,15,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,34,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,34,"        return method.getParameterTypes();
",0,0,0,1,2,1,4,0,0,4,34,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,34,"        Object spiedInstance = settings.getSpiedInstance();
",2,0,0,1,2,0,4,2,0,8,51,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,35,"        iOngoingStubbing = null;
",2,0,0,0,0,0,0,0,0,3,24,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,35,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,35,"        filterStackTrace();
",0,0,0,1,2,0,2,0,0,2,19,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/InjectingAnnotationEngine,11,35,"        return delegate.createMockFor(annotation, field);
",0,0,0,1,2,1,8,0,0,8,49,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,35,"        if(!fieldReader.isNull() && field.isAnnotationPresent(Spy.class)) {
",0,1,0,3,7,0,8,2,0,12,67,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,35,"        if (spiedInstance != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,36,"        return temp;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,36,"                    return matchingMock;
",2,0,0,0,0,1,0,0,0,2,20,11,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,36,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,36,"        threadSafely().verificationStarted(verify);
",0,0,0,2,4,0,6,0,0,6,43,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,36,"        return new OngoingMockInjection(field, ofInstance);
",4,0,0,1,2,1,0,2,0,6,51,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,36,"            new LenientCopyTool().copyToMock(spiedInstance, mock);
",0,0,0,2,4,0,6,2,0,8,54,7,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,37,"        ((Factory) mock).setCallback(0, new MethodInterceptorFilter(cast(newHandler), settings));
",4,0,0,5,10,0,6,4,0,14,89,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,37,"        return wasInitialized;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,37,"                Object instance = fieldReader.read();
",2,0,0,1,2,0,4,2,0,8,37,8,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,37,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,38,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,38,"        return method.getReturnType();
",0,0,0,1,2,1,4,0,0,4,30,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,38,"                if (new MockUtil().isMock(instance)) {
",0,0,0,3,7,0,4,2,0,6,38,9,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,39,"        unfilteredStackTrace = getStackTrace();
",2,0,0,1,2,0,2,0,0,5,39,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,39,"        return mock;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,40,"        validateState();
",0,0,0,1,2,0,2,0,0,2,16,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,40,"        if (matcherStack.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,29,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,40,"        return threadSafely().pullVerificationMode();
",0,0,0,2,4,1,4,0,0,4,45,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,41,"        resetOngoingStubbing();
",0,0,0,1,2,0,2,0,0,2,23,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,41,"        return new OngoingInjecter() {
",0,0,0,1,3,1,0,2,0,2,30,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,41,"            return Collections.emptyList();
",0,0,0,1,2,1,4,0,0,4,31,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,41,"                    Mockito.reset(instance);
",0,0,0,1,2,0,6,0,0,6,24,11,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,41,"        ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();
",2,0,0,1,2,0,0,4,0,6,71,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,42,"        verificationMode = new Localized(verify);
",4,0,0,1,2,0,0,2,0,7,41,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,42,"            return defaultConfiguration;
",2,0,0,0,0,1,0,0,0,2,28,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,42,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,42,"        return method.isVarArgs();
",0,0,0,1,2,1,4,0,0,4,26,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,42,"        filter.filter(this);
",0,0,0,1,2,0,4,0,0,4,20,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,43,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,43,"        return forAnnotation(annotation).process(annotation, field);
",0,0,0,2,4,1,10,0,0,10,60,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,43,"        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);
",2,0,0,2,4,0,4,4,0,10,76,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,43,"                    new FieldSetter(fieldOwner, field).set(
",4,0,0,1,3,0,2,2,0,8,39,11,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,11,43,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,43,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,44,"        threadSafely().stubbingStarted();
",0,0,0,2,4,0,4,0,0,4,33,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,44,"        MockCreationSettings settings = oldHandler.getMockSettings();
",2,0,0,1,2,0,4,2,0,8,61,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,44,"        Factory factory = (Factory) mock;
",4,0,0,1,2,0,0,4,0,8,33,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,44,"        List<LocalizedMatcher> matchers = new ArrayList<LocalizedMatcher>(matcherStack);
",4,0,0,1,2,0,0,8,0,12,80,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,45,"                return iterator.next().get();
",0,0,0,2,4,1,6,0,0,6,29,10,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,45,"        MockHandler newHandler = new MockHandlerFactory().create(settings);
",2,0,0,2,4,0,4,4,0,10,67,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,45,"        Callback callback = factory.getCallback(0);
",2,0,0,1,2,0,4,2,0,8,43,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,45,"        matcherStack.clear();
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,45,"    ConstructorInjection(ConstructorArgumentResolver argResolver) {
",4,0,0,1,3,0,0,2,0,6,63,2,0.00000,0
defect4j,mockito,org/mockito/exceptions/base/MockitoException,11,46,"        return unfilteredStackTrace;
",2,0,0,0,0,1,0,0,0,2,28,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,46,"        if (!(callback instanceof MethodInterceptorFilter)) {
",2,0,0,2,5,0,0,2,0,5,53,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,46,"        return wasInitializedUsingConstructorArgs;
",2,0,0,0,0,1,0,0,0,2,42,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,46,"        return (List) matchers;
",2,0,0,1,2,1,0,2,0,4,23,5,0.00000,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,46,"        return (method.getModifiers() & Modifier.ABSTRACT) != 0;
",4,2,0,2,4,1,4,0,0,10,56,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,46,"        this.argResolver = argResolver;
",4,0,0,0,0,0,0,0,0,5,31,4,0.00000,0
defect4j,mockito,org/mockito/configuration/DefaultMockitoConfiguration,11,46,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,46,"        this(fieldOwner, field, new NoArgConstructorInstantiator(fieldOwner, field));
",8,0,0,2,4,0,0,2,0,10,77,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,47,"        mockMaker.resetMock(mock, newHandler, settings);
",0,0,0,1,2,0,10,0,0,10,48,5,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,47,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,47,"        if (annotationProcessorMap.containsKey(annotation.annotationType())) {
",0,0,0,3,7,0,8,0,0,8,70,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,47,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,47,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,48,"            return (FieldAnnotationProcessor<A>) annotationProcessorMap.get(annotation.annotationType());
",0,0,0,3,6,1,8,4,0,12,93,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,49,"        iOngoingStubbing = null;
",2,0,0,0,0,0,0,0,0,3,24,4,0.00000,0
defect4j,mockito,org/mockito/internal/creation/CglibMockMaker,11,49,"        return ((MethodInterceptorFilter) callback).getHandler();
",2,0,0,3,6,1,2,2,0,6,57,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,49,"                iterator.remove();
",0,0,0,1,2,0,4,0,0,4,18,10,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,50,"                assertNoIncompatibleAnnotations(Spy.class, field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);
",8,0,0,1,2,0,4,6,0,18,119,9,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,50,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,50,"            } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,50,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,50,"        return new FieldAnnotationProcessor<A>() {
",0,0,0,1,3,1,0,4,0,4,42,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,51,"            SimpleArgumentResolver simpleArgumentResolver = new SimpleArgumentResolver(mockCandidates);
",4,0,0,1,2,0,0,4,0,8,91,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,51,"                Object instance = null;
",2,0,0,0,0,0,0,2,0,4,23,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,51,"                throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);
",2,1,0,2,4,0,4,2,0,10,84,10,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,51,"        return GLOBAL_CONFIGURATION.get().getReturnValues();
",0,0,0,2,4,1,6,0,0,6,52,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,51,"        if (mock == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,52,"            FieldInitializationReport report = new FieldInitializer(fieldOwner, field, simpleArgumentResolver).initialize();
",8,0,0,2,4,0,2,4,0,14,112,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,52,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,52,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,52,"            throw new NotAMockException(""Argument should be a mock, but is null!"");
",0,0,0,1,2,0,0,2,0,4,71,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,52,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,52,"        threadSafely().stubbingCompleted(invocation);
",0,0,0,2,4,0,6,0,0,6,45,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,53,"                    FieldInitializationReport report = new FieldInitializer(testInstance, field).initialize();
",6,0,0,2,4,0,2,4,0,12,90,10,0.00000,0
defect4j,mockito,org/mockito/configuration/DefaultMockitoConfiguration,11,53,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,53,"        assertStateFor(""And(?)"", TWO_SUB_MATCHERS);
",0,0,0,2,4,0,4,0,0,5,43,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,53,"        if (verificationMode == null) {
",2,1,0,1,3,0,0,0,0,3,31,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,53,"                assertNoAnnotations(field, Mock.class, MockitoAnnotations.Mock.class, Captor.class);
",4,0,0,1,2,0,4,4,0,12,84,9,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,53,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,54,"            return report.fieldWasInitializedUsingContructorArgs();
",0,0,0,1,2,1,4,0,0,4,55,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,54,"                    instance = report.fieldInstance();
",2,0,0,1,2,0,4,0,0,7,34,10,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,54,"        And and = new And(popLastArgumentMatchers(TWO_SUB_MATCHERS));
",2,0,0,2,4,0,4,4,0,10,61,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,54,"    public static class OngoingMockInjection {
",2,0,0,0,1,2,0,0,0,4,42,2,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,54,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,54,"                mockDependentFields.add(field);
",0,0,0,1,2,0,6,0,0,6,31,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,55,"        } catch (MockitoException e) {
",2,0,0,1,4,0,0,2,0,4,30,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,55,"                } catch (MockitoException e) {
",2,0,0,1,4,0,0,2,0,4,30,10,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,55,"        matcherStack.push(new LocalizedMatcher(and));
",2,0,0,2,4,0,4,2,0,8,45,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,11,55,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializationReport,11,55,"        return fieldInstance != null ? fieldInstance.getClass() : null;
",2,1,0,1,2,1,4,0,0,7,63,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,55,"        if (isMockitoMock(mock)) {
",0,0,0,2,5,0,4,0,0,4,26,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,55,"        return backingHashSet.size();
",0,0,0,1,2,1,4,0,0,4,29,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,56,"            if(e.getCause() instanceof InvocationTargetException) {
",0,0,0,2,5,0,4,2,0,6,55,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,56,"                    new Reporter().cannotInitializeForSpyAnnotation(field.getName(), e);
",0,0,0,3,6,0,8,2,0,10,68,12,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,56,"        return new HandyReturnValues();
",0,0,0,1,2,1,0,2,0,2,31,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,56,"        return threadSafely().toString();
",0,0,0,2,4,1,4,0,0,4,33,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,56,"            MockHandler handler = mockMaker.getHandler(mock);
",2,0,0,1,2,0,6,2,0,10,49,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,57,"                Throwable realCause = e.getCause().getCause();
",2,0,0,2,4,0,6,2,0,10,46,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,57,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,57,"        VerificationMode temp = verificationMode.getObject();
",2,0,0,1,2,0,4,2,0,8,53,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,57,"            return (InternalMockHandler) handler;
",2,0,0,1,2,1,0,2,0,4,37,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,58,"                new Reporter().fieldInitialisationThrewException(field, realCause);
",0,0,0,2,4,0,6,2,0,8,67,10,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,58,"        verificationMode = null;
",2,0,0,0,0,0,0,0,0,3,24,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,59,"                    if (new MockUtil().isMock(instance)) {
",0,0,0,3,7,0,4,2,0,6,38,11,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,59,"        return temp;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,59,"        return GLOBAL_CONFIGURATION.get().cleansStackTrace();
",0,0,0,2,4,1,6,0,0,6,53,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,59,"        return backingHashSet.isEmpty();
",0,0,0,1,2,1,4,0,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,59,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,59,"            throw new NotAMockException(""Argument should be a mock, but is: "" + mock.getClass());
",0,1,0,2,4,0,4,2,0,8,85,7,0.00000,0
defect4j,mockito,org/mockito/internal/creation/DelegatingMethod,11,60,"        return 1;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,60,"        threadSafely().reset();
",0,0,0,2,4,0,4,0,0,4,23,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,61,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,61,"        this(fieldOwner, field, new ParameterizedConstructorInstantiator(fieldOwner, field, argResolver));
",10,0,0,2,4,0,0,2,0,12,98,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,62,"                        Mockito.reset(instance);
",0,0,0,1,2,0,6,0,0,6,24,13,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,62,"        for (Class annotation : annotations) {
",4,0,0,1,3,0,0,2,0,6,38,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,62,"            this(Collections.singleton(field), fieldOwner);
",2,0,0,2,4,0,6,0,0,8,47,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,62,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,63,"        return backingHashSet.contains(HashCodeAndEqualsMockWrapper.of(mock));
",0,0,0,2,4,1,10,0,0,10,70,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,63,"        assertStateFor(""Or(?)"", TWO_SUB_MATCHERS);
",0,0,0,2,4,0,4,0,0,5,42,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,63,"        return GLOBAL_CONFIGURATION.get().enableClassCache();
",0,0,0,2,4,1,6,0,0,6,53,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,63,"            if (field.isAnnotationPresent(annotation)) {
",0,0,0,2,5,0,6,0,0,6,44,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,63,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,63,"        validateState();
",0,0,0,1,2,0,2,0,0,2,16,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,63,"                mocks.add(mockInstance);
",0,0,0,1,2,0,6,0,0,6,24,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,64,"                        field.setAccessible(true);
",0,0,0,1,2,0,4,0,0,5,26,13,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,64,"public class MockitoAnnotations {
",2,0,0,0,1,1,0,0,0,3,33,1,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,64,"        threadSafely().resetOngoingStubbing();
",0,0,0,2,4,0,4,0,0,4,38,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,64,"        Or or = new Or(popLastArgumentMatchers(TWO_SUB_MATCHERS));
",2,0,0,2,4,0,4,4,0,10,58,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,64,"                new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), InjectMocks.class.getSimpleName());
",0,0,0,4,8,0,8,4,0,12,114,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,64,"    private FieldInitializer(Object fieldOwner, Field field, ConstructorInstantiator instantiator) {
",8,0,0,1,3,1,0,6,0,15,96,2,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,64,"        stubbingInProgress = new LocationImpl();
",2,0,0,1,2,0,0,2,0,5,40,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,65,"                        field.set(testInstance, Mockito.mock(instance.getClass(), withSettings()
",0,0,0,2,6,0,16,0,0,16,72,13,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,65,"        matcherStack.push(new LocalizedMatcher(or));
",2,0,0,2,4,0,4,2,0,8,44,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,65,"        if(new FieldReader(fieldOwner, field).isNull()) {
",4,0,0,3,7,0,2,2,0,8,49,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,66,"        throw new UnfinishedStubbingException(join(
",0,0,0,0,2,0,2,2,0,4,43,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,66,"        return new HandyReturnValues();
",0,0,0,1,2,1,0,2,0,2,31,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,66,"            return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());
",0,1,0,4,8,1,16,0,0,17,91,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,66,"            checkNotLocal(field);
",0,0,0,1,2,0,4,0,0,4,21,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,66,"                Object mock = createMockFor(annotation, field);
",2,0,0,1,2,0,6,2,0,10,47,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,67,"        return backingHashSet.add(HashCodeAndEqualsMockWrapper.of(mock));
",0,0,0,2,4,1,10,0,0,10,65,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,11,67,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,67,"            checkNotInner(field);
",0,0,0,1,2,0,4,0,0,4,21,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,67,"                if (mock != null) {
",2,1,0,1,3,0,0,0,0,3,19,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/GlobalConfiguration,11,67,"        return GLOBAL_CONFIGURATION.get().getDefaultAnswer();
",0,0,0,2,4,1,6,0,0,6,53,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,68,"        if(processInjection(onField, fieldOwnedBy, mockCandidates)) {
",0,0,0,2,5,0,8,0,0,8,61,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,68,"                    throwIfAlreadyAssigned(field, alreadyAssigned);                    
",0,0,0,1,2,0,6,0,0,6,47,11,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,68,"            checkNotInterface(field);
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,68,"        return threadSafely().getArgumentMatcherStorage();
",0,0,0,2,4,1,4,0,0,4,50,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,69,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,69,"                    alreadyAssigned = true;                    
",2,0,0,0,0,0,0,0,0,4,23,10,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,69,"            checkNotAbstract(field);
",0,0,0,1,2,0,4,0,0,4,24,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,70,"                } catch (IllegalAccessException e) {
",2,0,0,1,4,0,0,2,0,4,36,10,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,71,"            return instance;
",2,0,0,0,0,1,0,0,0,2,16,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,71,"                    throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);
",2,1,0,2,4,0,4,2,0,10,84,12,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,71,"        return backingHashSet.remove(HashCodeAndEqualsMockWrapper.of(mock));
",0,0,0,2,4,1,10,0,0,10,68,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,71,"        return relayProcessToNextStrategy(onField, fieldOwnedBy, mockCandidates);
",0,0,0,1,2,1,8,0,0,8,73,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,71,"                        new FieldSetter(testInstance, field).set(mock);
",4,0,0,2,4,0,4,2,0,10,47,13,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,71,"        this.fieldOwner = fieldOwner;
",4,0,0,0,0,0,0,0,0,5,29,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,72,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,72,"            Location temp = stubbingInProgress;
",4,0,0,0,0,0,0,2,0,6,35,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,72,"        public SimpleArgumentResolver(Set<Object> objects) {
",4,0,0,1,3,1,0,4,0,9,52,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,72,"                    } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,12,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,72,"        threadSafely().mockingStarted(mock, classToMock);
",0,0,0,2,4,0,8,0,0,8,49,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,72,"        this.field = field;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,73,"            mockUtil.maybeRedefineMockName(instance, field.getName());
",0,0,0,2,4,0,10,0,0,10,58,8,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,73,"            stubbingInProgress = null;
",2,0,0,0,0,0,0,0,0,3,26,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,73,"            this.objects = objects;
",4,0,0,0,0,0,0,0,0,5,23,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,73,"        assertStateFor(""Not(?)"", ONE_SUB_MATCHER);
",0,0,0,2,4,0,4,0,0,5,42,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,73,"                        throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with ""
",0,1,0,1,3,0,4,2,0,9,91,14,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,73,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,73,"        this.instantiator = instantiator;
",4,0,0,0,0,0,0,0,0,5,33,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,73,"        FieldInitializationReport report = initializeInjectMocksField(injectMocksField, injectMocksFieldOwner);
",2,0,0,1,2,0,6,2,0,10,103,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/scanner/MockScanner,11,74,"            return instance;
",2,0,0,0,0,1,0,0,0,2,16,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,74,"            reporter.unfinishedStubbing(temp);
",0,0,0,1,2,0,6,0,0,6,34,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,74,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,74,"        Not not = new Not(popLastArgumentMatchers(ONE_SUB_MATCHER).get(0));
",2,0,0,3,6,0,6,4,0,12,67,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,74,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,75,"        matcherStack.push(new LocalizedMatcher(not));
",2,0,0,2,4,0,4,2,0,8,45,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,75,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,75,"        backingHashSet.clear();
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,76,"        return new HandyReturnValues();
",0,0,0,1,2,1,0,2,0,2,31,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,76,"        } catch (ClassNotFoundException e) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,76,"        threadSafely().setListener(listener);
",0,0,0,2,4,0,6,0,0,6,37,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,76,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,76,"        boolean injectionOccurred = false;
",2,0,0,0,0,0,0,0,0,3,34,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,77,"        return getMockHandler(mock).getMockSettings().getMockName();
",0,0,0,3,6,1,8,0,0,8,60,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ThreadSafeMockingProgress,11,77,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,77,"            List<Object> argumentInstances = new ArrayList<Object>(argTypes.length);
",6,0,0,1,2,0,0,8,0,14,72,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,77,"        Class<?> fieldClass = report.fieldClass();
",2,0,0,1,2,0,4,2,0,8,42,4,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,78,"    @Target( { FIELD })
",4,0,0,2,4,0,0,0,0,4,19,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,78,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,78,"            for (Class<?> argType : argTypes) {
",4,0,0,1,3,0,0,2,0,6,35,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,78,"        Object fieldInstanceNeedingInjection = report.fieldInstance();
",2,0,0,1,2,0,4,2,0,8,62,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,79,"        throw new CloneNotSupportedException();
",0,0,0,1,2,0,0,2,0,2,39,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,79,"        for (Class u : undesiredAnnotations) {
",4,0,0,1,3,0,0,2,0,6,38,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,79,"                argumentInstances.add(objectThatIsAssignableFrom(argType));
",0,0,0,2,4,0,8,0,0,8,59,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,79,"        while (fieldClass != Object.class) {
",2,1,0,1,3,0,0,2,0,5,36,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,80,"            if (field.isAnnotationPresent(u)) {
",0,0,0,2,5,0,6,0,0,6,35,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,80,"            injectionOccurred |= injectMockCandidates(fieldClass, newMockSafeHashSet(mockCandidates), fieldInstanceNeedingInjection);
",2,0,0,2,4,0,10,0,0,13,121,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,80,"        assertMatchersFoundFor(additionalMatcherName);
",0,0,0,1,2,0,4,0,0,4,46,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,81,"        MockName mockName = getMockName(mock);
",2,0,0,1,2,0,4,2,0,8,38,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,81,"                new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), annotation.getClass().getSimpleName());
",0,0,0,5,10,0,12,2,0,14,118,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,81,"            fieldClass = fieldClass.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,40,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,81,"        assertIncorrectUseOfAdditionalMatchers(additionalMatcherName, subMatchersCount);
",0,0,0,1,2,0,6,0,0,6,80,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,81,"            return argumentInstances.toArray();
",0,0,0,1,2,1,4,0,0,4,35,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,82,"        final AccessibilityChanger changer = new AccessibilityChanger();
",2,0,0,1,2,1,0,4,0,7,64,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,82,"        if (alreadyAssigned) {
",2,0,0,1,3,0,0,0,0,2,22,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,82,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,83,"        changer.enableAccess(field);
",0,0,0,1,2,0,6,0,0,6,28,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,83,"            new Reporter().moreThanOneAnnotationNotAllowed(field.getName());
",0,0,0,3,6,0,6,2,0,8,64,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,83,"        if (mockName.isDefault() && getMockHandler(mock).getMockSettings() instanceof CreationSettings) {
",0,1,0,4,9,0,10,2,0,13,97,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,83,"        return injectionOccurred;
",2,0,0,0,0,1,0,0,0,2,25,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,83,"        } catch (ClassCastException e) {
",2,0,0,1,4,0,0,2,0,4,32,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,83,"        if (!(o instanceof HashCodeAndEqualsSafeSet)) {
",2,0,0,2,5,0,0,2,0,5,47,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,84,"            Location location = verificationMode.getLocation();
",2,0,0,1,2,0,4,2,0,8,51,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,84,"            ((CreationSettings) getMockHandler(mock).getMockSettings()).setMockName(new MockNameImpl(newName));
",2,0,0,6,12,0,8,4,0,14,99,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/SpyAnnotationEngine,11,84,"    }    
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,84,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,84,"            throw new MockitoConfigurationException(""MockitoConfiguration class must implement "" + IMockitoConfiguration.class.getName() + "" interface."", e);
",2,1,0,2,4,0,2,4,0,11,145,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,84,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,85,"        List<Matcher> result = new LinkedList<Matcher>();
",2,0,0,1,2,0,0,8,0,10,49,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,85,"            verificationMode = null;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/DefaultAnnotationEngine,11,85,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,85,"        } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,85,"            for (Object object : objects) {
",4,0,0,1,3,0,0,2,0,6,31,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,86,"            return acquireFieldInstance();
",0,0,0,1,2,1,2,0,0,2,30,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,86,"        result.addAll(matcherStack.subList(matcherStack.size() - count, matcherStack.size()));
",2,1,0,4,8,0,16,0,0,19,86,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,86,"            reporter.unfinishedVerificationException(location);
",0,0,0,1,2,0,6,0,0,6,51,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,86,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,86,"            throw new MockitoConfigurationException(""Unable to instantiate "" + MOCKITO_CONFIGURATION_CLASS_NAME +"" class. Does it have a safe, no-arg constructor?"", e);
",4,1,0,1,2,0,0,2,0,9,156,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,86,"        HashCodeAndEqualsSafeSet that = (HashCodeAndEqualsSafeSet) o;
",4,0,0,1,2,0,0,4,0,8,61,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,86,"                if(argType.isAssignableFrom(object.getClass())) return object;
",2,0,0,3,6,1,8,0,0,10,62,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,87,"        } catch(IllegalAccessException e) {
",2,0,0,1,4,0,0,2,0,4,35,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,87,"        for (int i = 0; i < count; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,87,"        return backingHashSet.equals(that.backingHashSet);
",4,0,0,1,2,1,4,0,0,8,50,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,87,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,87,"        FieldInitializationReport report = null;
",2,0,0,0,0,0,0,2,0,4,40,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,88,"            throw new MockitoException(""Problems initializing field '"" + field.getName() + ""' of type '"" + field.getType().getSimpleName() + ""'"", e);
",2,1,0,4,8,0,10,2,0,18,137,8,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,88,"            matcherStack.pop();
",0,0,0,1,2,0,4,0,0,4,19,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/ConstructorInjection,11,88,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/MockUtil,11,89,"        return getMockHandler(mock).getMockSettings();
",0,0,0,2,4,1,6,0,0,6,46,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjectionStrategy,11,89,"        return nextStrategy != null && nextStrategy.process(field, fieldOwner, mockCandidates);
",2,2,0,1,2,1,10,0,0,14,87,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,89,"            report = new FieldInitializer(fieldOwner, field).initialize();
",6,0,0,2,4,0,2,2,0,11,62,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,90,"            changer.safelyDisableAccess(field);
",0,0,0,1,2,0,6,0,0,6,35,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,90,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,90,"        } catch (MockitoException e) {
",2,0,0,1,4,0,0,2,0,4,30,6,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,91,"            throw new MockitoException(""testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations class"");
",0,0,0,1,2,0,0,2,0,4,147,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,91,"        return backingHashSet.hashCode();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,91,"            if(e.getCause() instanceof InvocationTargetException) {
",0,0,0,2,5,0,4,2,0,6,55,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,92,"                injectionStrategies.process(field, fieldOwner, mocks);
",0,0,0,1,2,0,10,0,0,10,54,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,92,"                Throwable realCause = e.getCause().getCause();
",2,0,0,2,4,0,6,2,0,10,46,9,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,93,"        stubbingInProgress = null;
",2,0,0,0,0,0,0,0,0,3,26,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,93,"                postInjectionStrategies.process(field, fieldOwner, mocks);
",0,0,0,1,2,0,10,0,0,10,58,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,93,"                new Reporter().fieldInitialisationThrewException(field, realCause);
",0,0,0,2,4,0,6,2,0,8,67,10,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,94,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,94,"        if (matcherStack.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,29,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/MockInjection,11,94,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,95,"            matcherStack.clear();
",0,0,0,1,2,0,4,0,0,4,21,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,95,"        if(field.getType().isLocalClass()) {
",0,0,0,3,7,0,6,0,0,6,36,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,95,"        return unwrapTo(new Object[size()]);
",0,0,0,3,6,1,4,2,0,6,36,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,95,"            new Reporter().cannotInitializeForInjectMocksAnnotation(field.getName(), e);
",0,0,0,3,6,0,8,2,0,10,76,8,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,96,"            new Reporter().reportNoSubMatchersFound(additionalMatcherName);
",0,0,0,2,4,0,4,2,0,6,63,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,96,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is a local class."");
",0,1,0,3,6,0,6,2,0,11,99,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,96,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,97,"        throw new MissingMethodInvocationException(join(
",0,0,0,0,2,0,2,2,0,4,48,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,97,"        return  ""iOngoingStubbing: "" + iOngoingStubbing + 
",2,1,0,0,0,1,0,0,0,4,49,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,97,"        return report; // never null
",2,0,0,0,0,1,0,0,0,2,28,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,99,"        Iterator<Object> iterator = iterator();
",2,0,0,1,2,0,2,4,0,8,39,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,100,"        for (int i = 0, objectsLength = array.length; i < objectsLength; i++) {
",14,1,0,1,3,0,0,0,0,16,71,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,101,"            if (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,25,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,101,"        if(matcherStack.size() < count) {
",2,1,0,2,5,0,4,0,0,7,33,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,101,"        if(field.getType().isMemberClass() && !Modifier.isStatic(field.getType().getModifiers())) {
",0,1,0,6,13,0,16,0,0,18,91,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,102,"                array[i] = (T) iterator.next();
",0,0,1,3,6,0,4,2,0,11,31,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,102,"        return stackTraceCleanerProvider;
",2,0,0,0,0,1,0,0,0,2,33,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,102,"            ArrayList<LocalizedMatcher> lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);
",4,0,0,1,2,0,0,8,0,12,89,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,102,"        boolean injectionOccurred = false;
",2,0,0,0,0,0,0,0,0,3,34,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,102,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an inner class."");
",0,1,0,3,6,0,6,2,0,11,100,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,103,"            matcherStack.clear();
",0,0,0,1,2,0,4,0,0,4,21,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,103,"        stubbingInProgress = null;
",2,0,0,0,0,0,0,0,0,3,26,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,103,"        List<Field> orderedInstanceFields = orderedInstanceFieldsFrom(awaitingInjectionClazz);
",2,0,0,1,2,0,4,4,0,10,86,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,104,"            new Reporter().incorrectUseOfAdditionalMatchers(additionalMatcherName, count, lastMatchers);
",0,0,0,2,4,0,8,2,0,10,92,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,104,"        verificationMode = null;
",2,0,0,0,0,0,0,0,0,3,24,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,104,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,105,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,105,"        getArgumentMatcherStorage().reset();
",0,0,0,2,4,0,4,0,0,4,36,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,105,"        injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);
",2,0,0,1,2,0,10,0,0,13,109,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,106,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,106,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,107,"        if(field.getType().isInterface()) {
",0,0,0,3,7,0,6,0,0,6,35,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,107,"        injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);
",2,0,0,1,2,0,10,0,0,13,109,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,108,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an interface."");
",0,1,0,3,6,0,6,2,0,11,98,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,108,"        return injectionOccurred;
",2,0,0,0,0,1,0,0,0,2,25,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,110,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,110,"        T[] array = typedArray.length >= size() ? typedArray :
",8,1,0,2,4,0,2,2,0,13,54,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,112,"        return unwrapTo(array);
",0,0,0,1,2,1,4,0,0,4,23,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,112,"        for (Iterator<Field> it = orderedInstanceFields.iterator(); it.hasNext(); ) {
",2,0,0,3,7,0,8,4,0,14,77,4,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,113,"            ArrayList lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);
",4,0,0,1,2,0,0,6,0,10,71,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,113,"        UnfinishedVerificationException exception = new UnfinishedVerificationException(join(
",2,0,0,0,2,0,2,4,0,8,85,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,113,"        if(Modifier.isAbstract(field.getType().getModifiers())) {
",0,0,0,4,9,0,10,0,0,10,57,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,113,"        if (listener instanceof MockingStartedListener) {
",2,0,0,1,3,0,0,2,0,4,49,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,113,"            Field field = it.next();
",2,0,0,1,2,0,4,2,0,8,24,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,114,"            matcherStack.clear();
",0,0,0,1,2,0,4,0,0,4,21,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,114,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + "" is an abstract class."");
",0,1,0,3,6,0,6,2,0,11,102,7,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,114,"            ((MockingStartedListener) listener).mockingStarted(mock, classToMock);
",2,0,0,3,6,0,6,2,0,10,70,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,114,"            Object injected = mockCandidateFilter.filterCandidate(mocks, field, instance).thenInject();
",2,0,0,2,4,0,12,2,0,16,91,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,115,"            new Reporter().misplacedArgumentMatcher(lastMatchers);
",0,0,0,2,4,0,4,2,0,6,54,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,115,"            if (injected != null) {
",2,1,0,1,3,0,0,0,0,3,23,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,116,"        return backingHashSet.removeAll(asWrappedMocks(mocks));
",0,0,0,2,4,1,8,0,0,8,55,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,116,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,116,"        validateMostStuff();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,116,"                injectionOccurred |= true;
",2,0,0,0,0,0,0,0,0,4,26,8,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,117,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,117,"                mocks.remove(injected);
",0,0,0,1,2,0,6,0,0,6,23,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,118,"                it.remove();
",0,0,0,1,2,0,4,0,0,4,12,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,119,"        Object fieldInstance = field.get(fieldOwner);
",2,0,0,1,2,0,6,2,0,10,45,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,120,"            return plugin; // return the first one service loader finds (if any)
",2,0,0,1,2,2,0,0,0,2,68,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,120,"        return backingHashSet.containsAll(asWrappedMocks(mocks));
",0,0,0,2,4,1,8,0,0,8,57,5,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,120,"        this.listener = listener;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,120,"        if(fieldInstance != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,120,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/progress/MockingProgressImpl,11,121,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,121,"            return new FieldInitializationReport(fieldInstance, false, false);
",2,0,0,1,2,1,0,2,0,6,66,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,121,"        return injectionOccurred;
",2,0,0,0,0,1,0,0,0,2,25,4,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,123,"            Object mock = annotationEngine.createMockFor(annotation, field);
",2,0,0,1,2,0,8,2,0,12,64,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,123,"        matcherStack.clear();
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,124,"            if (mock != null) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.00000,0
defect4j,mockito,org/mockito/internal/progress/ArgumentMatcherStorageImpl,11,124,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,124,"        return instantiator.instantiate();
",0,0,0,1,2,1,4,0,0,4,34,5,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,125,"                throwIfAlreadyAssigned(field, alreadyAssigned);
",0,0,0,1,2,0,6,0,0,6,47,9,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,125,"        throw exception;
",2,0,0,0,0,0,0,0,0,2,16,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,125,"        List<Field> declaredFields = Arrays.asList(awaitingInjectionClazz.getDeclaredFields());
",2,0,0,2,4,0,8,4,0,14,87,4,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,126,"                alreadyAssigned = true;                
",2,0,0,0,0,0,0,0,0,4,23,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,126,"        declaredFields = ListUtil.filter(declaredFields, notFinalOrStatic);
",2,0,0,1,2,0,8,0,0,11,67,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,128,"        } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,6,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,128,"                    new FieldSetter(testClass, field).set(mock);
",4,0,0,2,4,0,4,2,0,10,44,11,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,128,"        return backingHashSet.retainAll(asWrappedMocks(mocks));
",0,0,0,2,4,1,8,0,0,8,55,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,128,"        Collections.sort(declaredFields, superTypesLast);
",0,0,0,1,2,0,8,0,0,8,49,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,129,"            throw new MockitoException(""Internal problem occurred, please report it. "" +
",0,1,0,0,1,0,0,2,0,4,76,8,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,129,"        throw new NotAMockException(join(
",0,0,0,0,2,0,2,2,0,4,33,5,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,129,"                } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,10,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,130,"                    throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with ""
",0,1,0,1,3,0,4,2,0,9,91,12,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,130,"        return declaredFields;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,132,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,135,"            assert ! (mock instanceof HashCodeAndEqualsMockWrapper) : ""WRONG"";
",2,0,0,1,2,0,0,2,0,6,66,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,135,"            Class<?> field1Type = field1.getType();
",2,0,0,1,2,0,4,2,0,8,39,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,136,"            hashSet.add(HashCodeAndEqualsMockWrapper.of(mock));
",0,0,0,2,4,0,10,0,0,10,51,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,136,"            Class<?> field2Type = field2.getType();
",2,0,0,1,2,0,4,2,0,8,39,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,137,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,138,"        if (alreadyAssigned) {
",2,0,0,1,3,0,0,0,0,2,22,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,139,"            if (field1Type == field2Type) {
",4,1,0,1,3,0,0,0,0,5,31,5,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,139,"            new Reporter().moreThanOneAnnotationNotAllowed(field.getName());
",0,0,0,3,6,0,6,2,0,8,64,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,140,"        throw new NullInsteadOfMockException(join(
",0,0,0,0,2,0,2,2,0,4,42,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,140,"                return field1.getName().compareTo(field2.getName());
",0,0,0,3,6,1,10,0,0,10,52,8,0.00000,0
defect4j,mockito,org/mockito/MockitoAnnotations,11,141,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,142,"            loader = ClassLoader.getSystemClassLoader();
",2,0,0,1,2,0,4,0,0,7,44,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,142,"        return backingHashSet.toString();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,142,"            if(field1Type.isAssignableFrom(field2Type)) {
",0,0,0,2,5,0,6,0,0,6,45,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,143,"                return 1;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,145,"            if(field2Type.isAssignableFrom(field1Type)) {
",0,0,0,2,5,0,6,0,0,6,45,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,146,"                return -1;
",0,0,0,0,0,1,0,0,0,1,10,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,147,"        } catch (IOException e) {
",2,0,0,1,4,0,0,2,0,4,25,6,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,148,"            throw new MockitoException(""Failed to load "" + service, e);
",4,1,0,1,2,0,0,2,0,8,59,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/injection/PropertyAndSetterInjection,11,148,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,152,"        throw new NotAMockException(join(
",0,0,0,0,2,0,2,2,0,4,33,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,153,"                hashCodeAndEqualsSafeSet.add(mock);
",0,0,0,1,2,0,6,0,0,6,35,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,153,"            InputStream in = null;
",2,0,0,0,0,0,0,2,0,4,22,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,11,154,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,155,"                in = resource.openStream();
",2,0,0,1,2,0,4,0,0,7,27,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,156,"                for (String line : readerToLines(new InputStreamReader(in, ""UTF-8""))) {
",4,0,0,3,7,0,2,4,0,11,71,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,157,"                    String name = stripCommentAndWhitespace(line);
",2,0,0,1,2,0,4,2,0,8,46,10,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,158,"                    if (name.length() != 0) {
",0,1,0,2,5,0,4,0,0,5,25,10,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,159,"                        result.add(service.cast(loader.loadClass(name).newInstance()));
",0,0,0,4,8,0,16,0,0,16,63,13,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,160,"        throw new NullInsteadOfMockException(join(
",0,0,0,0,2,0,2,2,0,4,42,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,161,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,162,"            } catch (Exception e) {
",2,0,0,1,4,0,0,2,0,4,23,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,163,"                throw new MockitoConfigurationException(
",0,0,0,0,1,0,0,2,0,2,40,11,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,166,"                closeQuietly(in);
",0,0,0,1,2,0,4,0,0,4,17,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,167,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,168,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,169,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,169,"        NoArgConstructorInstantiator(Object testClass, Field field) {
",6,0,0,1,3,0,0,4,0,10,61,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,170,"            this.testClass = testClass;
",4,0,0,0,0,0,0,0,0,5,27,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,171,"            this.field = field;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,172,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,173,"        List<String> result = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,46,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,174,"        BufferedReader lineReader = new BufferedReader(reader);
",4,0,0,1,2,0,0,4,0,8,55,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,175,"            final AccessibilityChanger changer = new AccessibilityChanger();
",2,0,0,1,2,1,0,4,0,7,64,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,176,"            Constructor<?> constructor = null;
",2,0,0,0,0,0,0,2,0,4,34,5,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,176,"        while ((line = lineReader.readLine()) != null) {
",2,1,0,3,7,0,4,0,0,8,48,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,177,"            result.add(line);
",0,0,0,1,2,0,6,0,0,6,17,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,178,"                constructor = field.getType().getDeclaredConstructor();
",2,0,0,2,4,0,6,0,0,9,55,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,179,"        throw new NotAMockException(join(
",0,0,0,0,2,0,2,2,0,4,33,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,179,"                changer.enableAccess(constructor);
",0,0,0,1,2,0,6,0,0,6,34,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,179,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,181,"                final Object[] noArg = new Object[0];
",2,0,0,2,4,1,0,4,0,7,37,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,182,"                Object newFieldInstance = constructor.newInstance(noArg);
",2,0,0,1,2,0,6,2,0,10,57,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,183,"        int hash = line.indexOf('#');
",2,0,0,1,2,0,4,0,0,7,29,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,183,"                new FieldSetter(testClass, field).set(newFieldInstance);
",4,0,0,2,4,0,4,2,0,10,56,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,184,"        if (hash != -1) {
",2,1,0,1,3,0,0,0,0,4,17,4,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,185,"            line = line.substring(0, hash);
",2,0,0,1,2,0,6,0,0,9,31,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,185,"                return new FieldInitializationReport(field.get(testClass), true, false);
",0,0,0,2,4,1,6,2,0,10,72,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,186,"            } catch (NoSuchMethodException e) {
",2,0,0,1,4,0,0,2,0,4,35,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,187,"        return line.trim();
",0,0,0,1,2,1,4,0,0,4,19,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,187,"                throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' has no default constructor"", e);
",2,1,0,3,6,0,6,2,0,13,111,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,188,"            } catch (InvocationTargetException e) {
",2,0,0,1,4,0,0,2,0,4,39,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,189,"        throw new NullInsteadOfMockException(join(
",0,0,0,0,2,0,2,2,0,4,42,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,189,"                throw new MockitoException(""the default constructor of type '"" + field.getType().getSimpleName() + ""' has raised an exception (see the stack trace for cause): "" + e.getTargetException().toString(), e);
",2,1,0,6,12,0,12,2,0,19,201,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,190,"            } catch (InstantiationException e) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,191,"        if (in != null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,191,"                throw new MockitoException(""InstantiationException (see the stack trace for cause): "" + e.toString(), e);
",2,1,0,3,6,0,4,2,0,10,105,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,192,"            } catch (IllegalAccessException e) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,193,"                in.close();
",0,0,0,1,2,0,4,0,0,4,11,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,193,"                throw new MockitoException(""IllegalAccessException (see the stack trace for cause): "" + e.toString(), e);
",2,1,0,3,6,0,4,2,0,10,105,9,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,194,"            } catch (IOException ignored) {
",2,0,0,1,4,0,0,2,0,4,31,8,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,195,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,195,"                if(constructor != null) {
",2,1,0,1,3,0,0,0,0,3,25,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,196,"                    changer.safelyDisableAccess(constructor);
",0,0,0,1,2,0,6,0,0,6,41,10,0.00000,0
defect4j,mockito,org/mockito/internal/configuration/ClassPathLoader,11,197,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,198,"        throw new NotAMockException(join(
",0,0,0,0,2,0,2,2,0,4,33,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,207,"        throw new NullInsteadOfMockException(join(
",0,0,0,0,2,0,2,2,0,4,42,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,216,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,216,"	      private final MockUtil mockUtil = new MockUtil();
",2,0,0,1,2,2,0,4,0,8,49,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,217,"        private final Comparator<Constructor<?>> byParameterNumber = new Comparator<Constructor<?>>() {
",2,0,0,1,3,2,0,8,0,12,95,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,219,"	            int argLengths = constructorB.getParameterTypes().length - constructorA.getParameterTypes().length;
",6,1,0,2,4,0,8,0,0,15,99,10,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,220,"	            if (argLengths == 0) {
",2,1,0,1,3,0,0,0,0,3,22,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,221,"		            int constructorAMockableParamsSize = countMockableParams(constructorA);
",2,0,0,1,2,0,4,0,0,6,71,12,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,222,"		            int constructorBMockableParamsSize = countMockableParams(constructorB);
",2,0,0,1,2,0,4,0,0,6,71,12,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,223,"		            return constructorBMockableParamsSize - constructorAMockableParamsSize;
",4,1,0,0,0,1,0,0,0,5,71,11,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,225,"	            return argLengths;
",2,0,0,0,0,1,0,0,0,2,18,9,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,225,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,229,"		        int constructorMockableParamsSize = 0;
",2,0,0,0,0,0,0,0,0,2,38,10,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,230,"		        for (Class<?> aClass : constructor.getParameterTypes()) {
",2,0,0,2,5,0,4,2,0,8,57,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,231,"			        if(mockUtil.isTypeMockable(aClass)){
",0,0,0,2,5,0,6,0,0,6,36,12,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,232,"				        constructorMockableParamsSize++;
",2,0,0,0,0,0,0,0,0,3,32,13,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,234,"        throw new InvalidUseOfMatchersException(join(
",0,0,0,0,2,0,2,2,0,4,45,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,235,"		        return constructorMockableParamsSize;
",2,0,0,0,0,1,0,0,0,2,37,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,243,"        ParameterizedConstructorInstantiator(Object testClass, Field field, ConstructorArgumentResolver argumentResolver) {
",8,0,0,1,3,0,0,6,0,14,115,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,244,"            this.testClass = testClass;
",4,0,0,0,0,0,0,0,0,5,27,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,245,"            this.field = field;
",4,0,0,0,0,0,0,0,0,5,19,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,246,"            this.argResolver = argumentResolver;
",4,0,0,0,0,0,0,0,0,5,36,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,247,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,250,"            final AccessibilityChanger changer = new AccessibilityChanger();
",2,0,0,1,2,1,0,4,0,7,64,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,251,"            Constructor<?> constructor = null;
",2,0,0,0,0,0,0,2,0,4,34,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,253,"        throw new InvalidUseOfMatchersException(join(
",0,0,0,0,2,0,2,2,0,4,45,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,253,"                constructor = biggestConstructor(field.getType());
",2,0,0,2,4,0,6,0,0,9,50,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,254,"                changer.enableAccess(constructor);
",0,0,0,1,2,0,6,0,0,6,34,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,256,"                final Object[] args = argResolver.resolveTypeInstances(constructor.getParameterTypes());
",2,0,0,3,6,1,8,2,0,13,88,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,257,"                Object newFieldInstance = constructor.newInstance(args);
",2,0,0,1,2,0,6,2,0,10,56,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,258,"                new FieldSetter(testClass, field).set(newFieldInstance);
",4,0,0,2,4,0,4,2,0,10,56,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,260,"                return new FieldInitializationReport(field.get(testClass), false, true);
",0,0,0,2,4,1,6,2,0,10,72,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,261,"            } catch (IllegalArgumentException e) {
",2,0,0,1,4,0,0,2,0,4,38,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,262,"                throw new MockitoException(""internal error : argResolver provided incorrect types for constructor "" + constructor + "" of type "" + field.getType().getSimpleName(), e);
",4,1,0,3,6,0,6,2,0,15,166,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,263,"            } catch (InvocationTargetException e) {
",2,0,0,1,4,0,0,2,0,4,39,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,264,"                throw new MockitoException(""the constructor of type '"" + field.getType().getSimpleName() + ""' has raised an exception (see the stack trace for cause): "" + e.getTargetException().toString(), e);
",2,1,0,6,12,0,12,2,0,19,193,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,265,"            } catch (InstantiationException e) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,266,"                throw new MockitoException(""InstantiationException (see the stack trace for cause): "" + e.toString(), e);
",2,1,0,3,6,0,4,2,0,10,105,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,267,"            } catch (IllegalAccessException e) {
",2,0,0,1,4,0,0,2,0,4,36,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,268,"                throw new MockitoException(""IllegalAccessException (see the stack trace for cause): "" + e.toString(), e);
",2,1,0,3,6,0,4,2,0,10,105,9,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,270,"                if(constructor != null) {
",2,1,0,1,3,0,0,0,0,3,25,7,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,271,"                    changer.safelyDisableAccess(constructor);
",0,0,0,1,2,0,6,0,0,6,41,10,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,274,"        throw new CannotVerifyStubOnlyMock(join(
",0,0,0,0,2,0,2,2,0,4,40,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,277,"            if(constructor.getParameterTypes().length == 0) {
",2,1,0,2,5,0,4,0,0,7,49,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,278,"                throw new MockitoException(""the field "" + field.getName() + "" of type "" + field.getType() + "" has no parameterized constructor"");
",0,1,0,3,6,0,8,2,0,14,129,8,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,280,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,281,"        throw new InvalidUseOfMatchersException(join(
",0,0,0,0,2,0,2,2,0,4,45,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,283,"            final List<Constructor<?>> constructors = Arrays.asList(clazz.getDeclaredConstructors());
",2,0,0,2,4,1,8,4,0,15,89,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,284,"            Collections.sort(constructors, byParameterNumber);
",0,0,0,1,2,0,8,0,0,8,50,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,286,"            Constructor<?> constructor = constructors.get(0);
",2,0,0,1,2,0,4,2,0,8,49,5,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,287,"            checkParameterized(constructor, field);
",0,0,0,1,2,0,6,0,0,6,39,6,0.00000,0
defect4j,mockito,org/mockito/internal/util/reflection/FieldInitializer,11,288,"            return constructor;
",2,0,0,0,0,1,0,0,0,2,19,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,290,"        List<String> description = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,291,"        for (LocalizedMatcher matcher : matchers)
",4,0,0,1,2,0,0,2,0,6,41,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,292,"            description.add(matcher.getLocation().toString());
",0,0,0,3,6,0,10,0,0,10,50,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,293,"        return join(description.toArray());
",0,0,0,2,4,1,6,0,0,6,35,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,297,"        String message = join(""Argument(s) are different! Wanted:"",
",2,0,0,1,3,0,2,2,0,7,59,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,306,"        if (JUnitTool.hasJUnit()) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,307,"            throw JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);
",0,0,0,1,2,0,10,0,0,10,78,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,309,"            throw new ArgumentsAreDifferent(message);
",2,0,0,1,2,0,0,2,0,4,41,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,314,"        throw new WantedButNotInvoked(createWantedButNotInvokedMessage(wanted));
",0,0,0,2,4,0,4,2,0,6,72,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,319,"        if (invocations.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,320,"            allInvocations = ""Actually, there were zero interactions with this mock.\n"";
",2,0,0,0,0,0,0,0,0,4,76,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,322,"            StringBuilder sb = new StringBuilder(""\nHowever, there were other interactions with this mock:\n"");
",2,0,0,1,2,0,0,4,0,7,99,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,323,"            for (DescribedInvocation i : invocations) {
",4,0,0,1,3,0,0,2,0,6,43,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,324,"                sb.append(i.toString())
",0,0,0,2,4,0,8,0,0,8,23,12,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,328,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,329,"            allInvocations = sb.toString();
",2,0,0,1,2,0,4,0,0,7,31,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,332,"        String message = createWantedButNotInvokedMessage(wanted);
",2,0,0,1,2,0,4,2,0,8,58,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,333,"        throw new WantedButNotInvoked(message + allInvocations);
",4,1,0,1,2,0,0,2,0,7,56,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,337,"        return join(
",0,0,0,0,1,1,2,0,0,2,12,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,346,"        throw new VerificationInOrderFailure(join(
",0,0,0,0,2,0,2,2,0,4,42,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,359,"        String message = createTooManyInvocationsMessage(wantedCount, actualCount, wanted, firstUndesired);
",2,0,0,1,2,0,10,2,0,14,99,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,360,"        throw new TooManyActualInvocations(message);
",2,0,0,1,2,0,0,2,0,4,44,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,365,"        return join(
",0,0,0,0,1,1,2,0,0,2,12,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,376,"        throw new NeverWantedButInvoked(join(
",0,0,0,0,2,0,2,2,0,4,37,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,387,"        String message = createTooManyInvocationsMessage(wantedCount, actualCount, wanted, firstUndesired);
",2,0,0,1,2,0,10,2,0,14,99,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,388,"        throw new VerificationInOrderFailure(join(
",0,0,0,0,2,0,2,2,0,4,42,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,395,"        String ending =
",2,0,0,0,0,0,0,2,0,4,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,398,"        String message = join(
",2,0,0,0,1,0,2,2,0,6,22,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,405,"        return message;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,409,"        String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);
",2,0,0,1,2,0,8,2,0,12,92,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,411,"        throw new TooLittleActualInvocations(message);
",2,0,0,1,2,0,0,2,0,4,46,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,415,"        String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);
",2,0,0,1,2,0,8,2,0,12,92,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,417,"        throw new VerificationInOrderFailure(join(
",0,0,0,0,2,0,2,2,0,4,42,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,423,"        ScenarioPrinter scenarioPrinter = new ScenarioPrinter();
",2,0,0,1,2,0,0,4,0,6,56,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,424,"        String scenario = scenarioPrinter.print(invocations);
",2,0,0,1,2,0,6,2,0,10,53,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,426,"        throw new NoInteractionsWanted(join(
",0,0,0,0,2,0,2,2,0,4,36,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,436,"        throw new VerificationInOrderFailure(join(
",0,0,0,0,2,0,2,2,0,4,42,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,445,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,455,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,471,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,483,"        throw new WrongTypeOfReturnValue(join(
",0,0,0,0,2,0,2,2,0,4,38,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,498,"        throw new MockitoAssertionError(join(""Wanted at most "" + pluralize(maxNumberOfInvocations) + "" but was "" + foundSize));
",2,1,0,3,6,0,6,2,0,13,119,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,502,"        throw new InvalidUseOfMatchersException(join(
",0,0,0,0,2,0,2,2,0,4,45,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,519,"        throw new SmartNullPointerException(join(
",0,0,0,0,2,0,2,2,0,4,41,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,530,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,545,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,551,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,558,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,566,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,572,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,583,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,592,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,602,"        throw new MockitoException(""You cannot have more than one Mockito annotation on a field!\n"" +
",0,2,0,0,1,0,0,2,0,5,93,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,608,"        throw new MockitoException(""This combination of annotations is not permitted on a single field:\n"" +
",0,2,0,0,1,0,0,2,0,5,100,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,613,"        throw new MockitoException(join(""Cannot instantiate a @Spy for '"" + fieldName + ""' field."",
",2,1,0,0,2,0,2,2,0,9,91,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,624,"        throw new MockitoException(join(""Cannot instantiate @InjectMocks field named '"" + fieldName + ""'."",
",2,1,0,0,2,0,2,2,0,9,99,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,636,"        throw new FriendlyReminderException(join("""",
",0,0,0,0,2,0,2,2,0,5,44,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,647,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,656,"        throw new MockitoException(""invocationListeners() does not accept null parameters"");
",0,0,0,2,4,0,0,2,0,4,84,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,660,"        throw new MockitoException(""invocationListeners() requires at least one listener"");
",0,0,0,2,4,0,0,2,0,3,83,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,664,"        throw new MockitoException(StringJoiner.join(
",0,0,0,0,2,0,4,2,0,6,45,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,670,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,680,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,691,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,697,"        throw new MockitoException(join(""Invalid argument index."",
",0,0,0,0,2,0,2,2,0,5,58,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,704,"        throw new MockitoException(
",0,0,0,0,1,0,0,2,0,2,27,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,717,"        Class<?>[] parameterTypes = invocation.getMethod().getParameterTypes();
",2,0,0,3,6,0,6,2,0,10,71,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,718,"        if (parameterTypes.length == 0) {
",4,1,0,1,3,0,0,0,0,5,33,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,719,"            return new StringBuilder(""the method has no arguments.\n"");
",0,0,0,1,2,1,0,2,0,3,59,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,722,"        StringBuilder stringBuilder = new StringBuilder(""the possible argument indexes for this method are :\n"");
",2,0,0,1,2,0,0,4,0,7,105,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,723,"        for (int i = 0, parameterTypesLength = parameterTypes.length; i < parameterTypesLength; i++) {
",14,1,0,1,3,0,0,0,0,16,94,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,724,"            stringBuilder.append(""    ["").append(i);
",0,0,0,2,5,0,8,0,0,9,40,7,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,726,"            if (invocation.getMethod().isVarArgs() && i == parameterTypesLength - 1) {
",4,3,0,3,7,0,6,0,0,13,74,6,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,727,"                stringBuilder.append(""+] "").append(parameterTypes[i].getComponentType().getSimpleName()).append(""  <- Vararg"").append(""\n"");
",0,0,1,7,15,0,14,0,0,21,124,9,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,729,"                stringBuilder.append(""] "").append(parameterTypes[i].getSimpleName()).append(""\n"");
",0,0,1,5,11,0,10,0,0,16,82,9,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,732,"        return stringBuilder;
",2,0,0,0,0,1,0,0,0,2,21,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,736,"        throw new WrongTypeOfReturnValue(join(
",0,0,0,0,2,0,2,2,0,4,38,5,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,758,"        throw new MockitoException(""defaultAnswer() does not accept null parameter"");
",0,0,0,2,4,0,0,2,0,4,77,4,0.00000,0
defect4j,mockito,org/mockito/exceptions/Reporter,11,762,"        throw new MockitoException(join(
",0,0,0,0,2,0,2,2,0,4,32,5,0.00000,0
