dataset,project,pPath,pId,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,final CharSequence result = lookupMap.get(subSeq);,1,0,0,1,2,1,3,1,0,6,50,6,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,268,"return Class.forName(name, false, Thread.currentThread().getContextClassLoader());",0,0,0,3,6,1,6,0,0,7,82,9,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,return cs1.equals(cs2);,0,0,0,1,2,1,3,0,0,3,23,5,1,1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,262,(cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,4,8,0,2,5,0,4,0,0,16,68,5,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,                return foundDigit && !hasExp;,2,1,0,0,0,0,0,0,0,4,29,8,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,8,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,0,0,0,0,0,0,0,0,0,1,13,10,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,"			char ch = cs.charAt(i);",1,0,0,1,2,0,3,0,0,4,23,7,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,"				if (searchChars[j] == ch) {",1,1,1,2,5,0,0,0,0,4,27,8,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,"						return true;",0,0,0,0,0,0,0,0,0,1,12,10,1,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,909,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,0,0,0,0,7,40,4,1,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,0,0,1,3,6,0,1,0,0,6,33,6,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3295,            type = Object.class;,1,0,0,0,0,0,0,1,0,3,20,7,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,1,2,0,4,0,0,8,71,5,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,872,            calendar = (Calendar) calendar.clone();,1,0,0,2,4,0,2,1,0,5,39,6,1,1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,0,5,0,0,5,60,5,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,466,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",1,0,0,2,4,0,5,0,0,6,66,5,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,677,                if (ch == 'Y') {,1,1,0,1,3,0,0,0,0,3,16,6,1,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,        return cAvailableLocaleSet.contains(locale);,0,0,0,1,2,0,3,0,0,3,44,5,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",0,0,0,1,2,0,5,0,0,5,38,9,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,5,1,0,1,3,0,0,0,0,7,42,4,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,4,1,0,0,0,0,0,0,0,5,34,5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,2,3,0,1,3,0,0,0,0,7,37,15,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,1,0,0,2,4,0,4,0,0,6,56,17,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,306,            days += 31;,1,0,0,0,0,0,0,0,0,2,11,6,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,312,            months -= 1;,1,0,0,0,0,0,0,0,0,2,12,6,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78, if (result != null) {,1,1,0,1,3,0,0,0,0,2,21,6,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"final CharSequence subSeq = input.subSequence(index, index + i);",3,1,0,1,2,1,3,1,0,9,64,6,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,99," throw new SerializationException(""ClassNotFoundException while reading cloned object data"", ex);",1,0,0,1,2,0,0,1,0,3,96,8,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,98, catch (ClassNotFoundException ex) {,1,0,0,1,3,0,0,1,0,2,35,6,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,267,catch (ClassNotFoundException ex) {,1,0,0,1,3,0,0,1,0,2,35,7,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,return true;,0,0,0,0,0,1,0,0,0,1,12,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782, if (cs1 == cs2) {,2,1,0,1,3,0,0,0,0,3,17,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,if (cs1 == null || cs2 == null) {,2,3,0,1,3,0,0,0,1,5,33,4,1,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,259,if (cal1 == null || cal2 == null) {,2,3,0,1,3,0,0,0,1,5,35,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,480,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,0,0,1,0,4,65,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,553,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,0,0,1,0,4,65,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,621,        return str.length() > 0;,0,1,0,1,2,0,2,0,0,3,24,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,521,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,0,0,1,0,4,65,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1379,                allowSigns = false;,1,0,0,0,0,0,0,0,0,3,19,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1373,                hasExp = true;,1,0,0,0,0,0,0,0,0,3,14,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1370,                if (!foundDigit) {,1,0,0,1,3,0,0,0,0,2,18,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1376,                if (!allowSigns) {,1,0,0,1,3,0,0,0,0,2,18,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1377,                    return false;,0,0,0,0,0,0,0,0,0,1,13,13,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1374,                allowSigns = true;,1,0,0,0,0,0,0,0,0,3,18,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1375,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,3,8,0,0,0,0,9,48,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,532,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1361,                    return false;,0,0,0,0,0,0,0,0,0,1,13,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1363,                hasDecPoint = true;,1,0,0,0,0,0,0,0,0,3,19,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1364,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,9,48,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1366,                if (hasExp) {,1,0,0,1,3,0,0,0,0,1,13,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1348,"        sz--; // don't want to loop to the last char, check it afterwords",1,0,0,0,0,0,0,0,0,2,65,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1354,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1355,                foundDigit = true;,1,0,0,0,0,0,0,0,0,3,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1350,        int i = start;,2,0,0,0,0,0,0,0,0,2,14,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,457,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,1,0,2,72,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1353,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,6,6,0,2,5,0,0,0,0,13,61,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,586,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1358,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,4,29,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1359,                if (hasDecPoint || hasExp) {,2,1,0,1,3,0,0,0,0,3,28,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1356,                allowSigns = false;,1,0,0,0,0,0,0,0,0,3,19,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,598,                return createBigDecimal(str);,0,0,0,1,2,0,2,0,0,2,29,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1342,                        return false;,0,0,0,0,0,0,0,0,0,1,13,12,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1345,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,594,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1334,                if (i == sz) {,2,1,0,1,3,0,0,0,0,3,14,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1332,            if (chars[start] == '0' && chars[start + 1] == 'x') {,1,4,1,3,7,0,0,0,0,10,53,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1333,                int i = start + 2;,2,1,0,0,0,0,0,0,0,3,18,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1330,        int start = (chars[0] == '-') ? 1 : 0;,1,1,1,2,4,0,0,0,0,4,38,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1331,        if (sz > start + 1) {,2,2,0,1,3,0,0,0,0,4,21,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1338,                for (; i < chars.length; i++) {,4,1,0,1,3,0,0,0,0,6,31,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1339,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,9,38,13,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1401,                return foundDigit;,1,0,0,0,0,0,0,0,0,1,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1403,            if (!allowSigns,1,0,0,0,1,0,0,0,0,2,15,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1408,                return foundDigit;,1,0,0,0,0,0,0,0,0,1,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1410,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,4,19,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1325,        boolean hasExp = false;,1,0,0,0,0,0,0,0,0,2,23,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1324,        int sz = chars.length;,3,0,0,0,0,0,0,0,0,3,22,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1327,        boolean allowSigns = false;,1,0,0,0,0,0,0,0,0,2,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1326,        boolean hasDecPoint = false;,1,0,0,0,0,0,0,0,0,2,28,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1321,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1320,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,3,0,0,3,31,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1323,        char[] chars = str.toCharArray();,1,0,0,2,4,0,2,0,0,3,33,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1328,        boolean foundDigit = false;,1,0,0,0,0,0,0,0,0,2,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1416,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1391,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1393,                return false;,0,0,0,0,0,0,0,0,0,1,13,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1395,            if (chars[i] == '.') {,0,1,1,2,5,0,0,0,0,4,22,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1396,                if (hasDecPoint || hasExp) {,2,1,0,1,3,0,0,0,0,3,28,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,492,"                mant = str.substring(0, expPos);",1,0,0,1,2,0,3,0,0,5,32,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,543,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,548,                    } catch (NumberFormatException e) {,1,0,0,1,4,0,0,1,0,2,35,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1387,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1386,        if (i < chars.length) {,3,1,0,1,3,0,0,0,0,4,23,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1384,            i++;,1,0,0,0,0,0,0,0,0,2,4,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1382,                return false;,0,0,0,0,0,0,0,0,0,1,13,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1380,                foundDigit = false; // we need a digit after the E,1,0,0,0,0,0,0,0,0,3,50,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1389,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,3,0,0,0,0,0,0,0,0,3,35,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,1,0,0,1,2,0,2,0,0,3,24,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,2,3,0,1,3,0,0,0,0,5,40,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,"		int searchLength = searchChars.length;",3,0,0,0,0,0,0,0,0,3,38,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,"		int csLength = cs.length();",1,0,0,1,2,0,2,0,0,3,27,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,"		for (int i = 0; i < csLength; i++) {",4,1,0,1,3,0,0,0,0,6,36,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,"		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {",0,1,0,3,7,0,5,0,0,6,53,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,"			for (int j = 0; j < searchLength; j++) {",4,1,0,1,3,0,0,0,0,6,40,6,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,903,        if (array == null) {,1,1,0,1,3,0,0,0,0,2,20,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,2,1,0,1,4,0,0,0,0,3,31,5,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,2,0,0,0,0,0,0,0,0,2,36,8,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,3,0,0,2,4,0,0,2,0,5,45,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,1,0,0,0,0,0,0,0,0,1,15,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3292,        } else if (element != null) {,1,1,0,1,4,0,0,0,0,2,29,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,1,1,0,1,3,0,0,0,0,2,21,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,1,1,0,1,4,0,0,0,0,2,28,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,2,4,1,3,1,0,6,60,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,4,8,0,3,2,0,11,80,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,1,2,0,4,0,0,6,59,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,1,0,0,0,0,0,0,0,0,1,19,4,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,642,"                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);",3,0,0,1,2,0,2,0,0,6,56,7,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,873,            calendar.setTimeZone(mTimeZone);,0,0,0,1,2,0,3,0,0,3,32,7,1,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,2,3,0,1,3,0,0,0,0,5,39,4,1,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,470,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",4,2,0,1,2,0,2,0,0,8,64,5,1,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,467,        if (gcd == 1) {,1,1,0,1,3,0,0,0,0,2,15,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,685,                if (ch == 't') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,0,0,0,2,5,0,2,0,0,2,23,5,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,24,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",1,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,                char ch1 = str.charAt(1);,1,0,0,1,2,0,2,0,0,3,25,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,25,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,                char ch = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,24,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,1,0,0,1,2,0,3,0,0,5,58,4,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,1,0,0,2,4,0,4,1,0,6,56,4,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,3,2,2,0,8,90,2,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,3,2,2,0,8,91,2,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,1,1,0,1,3,0,0,0,0,2,16,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,2,1,0,1,2,0,1,0,0,4,29,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,2,1,0,3,6,0,3,1,0,8,60,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,2,1,0,1,3,0,0,0,0,3,22,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,1,1,1,2,5,0,0,0,0,4,23,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,0,0,0,0,7,40,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,2,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,3,7,0,3,0,0,8,38,9,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,3,3,0,1,3,0,0,0,0,6,40,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,0,5,47,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,1,0,0,0,0,0,0,0,0,1,15,11,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,1,0,0,0,0,0,0,0,0,1,9,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,4,1,0,1,3,0,0,0,0,6,34,7,1,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,2,0,0,3,31,11,1,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,1,0,0,1,2,0,2,0,0,3,36,14,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,437,            int newdiff = startValue - endValue;,3,1,0,0,0,0,0,0,0,4,36,7,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,439,            return newdiff;,1,0,0,0,0,0,0,0,0,1,15,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,315,            months += 12;,1,0,0,0,0,0,0,0,0,2,13,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,316,            years -= 1;,1,0,0,0,0,0,0,0,0,2,11,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,438,"            end.add( field, newdiff );",0,0,0,1,2,0,4,0,0,4,26,7,1,0