dataset,project,pPath,pId,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680, if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.741071429,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,return Integer.decode(str);,0,0,0,1,2,1,3,0,0,3,27,5,0.741071429,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460, for(final String pfx : hex_prefixes) {,2,0,0,1,3,1,0,1,0,4,38,4,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,if (str.startsWith(pfx)) {,0,0,0,2,5,0,3,0,1,3,26,7,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,if (str == null) {,1,1,0,1,3,0,0,0,1,2,18,4,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454, if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,3,0,0,3,31,5,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,int pfxLen = 0;,1,0,0,0,0,0,0,0,0,1,15,5,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",1,0,0,2,4,1,0,1,0,9,68,4,0.30952381,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,261,if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,5,0,1,7,52,6,0.275,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,260,for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,1,6,34,4,0.275,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,262,return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.275,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,257,if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,0,2,0,1,8,48,4,0.275,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78, if (result != null) {,1,1,0,1,3,0,0,0,0,2,21,6,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"final CharSequence subSeq = input.subSequence(index, index + i);",3,1,0,1,2,1,3,1,0,9,64,6,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,final CharSequence result = lookupMap.get(subSeq);,1,0,0,1,2,1,3,1,0,6,50,6,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,int max = longest;,2,0,0,0,0,0,0,0,0,2,18,5,0.8,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71, if (index + longest > input.length()) {,2,2,0,2,5,0,2,0,0,6,39,4,0.8,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,for (int i = max; i >= shortest; i--) {,5,1,0,1,3,0,0,0,1,7,39,4,0.8,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,99," throw new SerializationException(""ClassNotFoundException while reading cloned object data"", ex);",1,0,0,1,2,0,0,1,0,3,96,8,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,98, catch (ClassNotFoundException ex) {,1,0,0,1,3,0,0,1,0,2,35,6,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,267,catch (ClassNotFoundException ex) {,1,0,0,1,3,0,0,1,0,2,35,7,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,268,"return Class.forName(name, false, Thread.currentThread().getContextClassLoader());",0,0,0,3,6,1,6,0,0,7,82,9,1,1
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"super(msg, cause);",2,0,0,1,2,0,0,0,0,2,18,4,0.488372093,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,264,String name = desc.getName();,1,0,0,1,2,0,2,1,0,4,29,5,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,this.classLoader = classLoader;,2,0,0,0,0,0,0,0,0,3,31,5,0.079069767,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,T readObject = (T) in.readObject();,1,0,0,2,4,0,2,2,0,5,35,6,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,2,0,0,1,2,0,0,2,0,4,65,4,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,ClassLoaderAwareObjectInputStream in = null;,1,0,0,0,0,0,0,1,0,2,44,4,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,super(in);,1,0,0,1,2,0,0,0,0,1,10,5,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266," return Class.forName(name, false, classLoader);",0,0,0,1,2,0,4,0,0,5,47,8,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",2,0,0,3,6,0,3,1,0,7,85,6,0.079069767,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,return true;,0,0,0,0,0,1,0,0,0,1,12,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782, if (cs1 == cs2) {,2,1,0,1,3,0,0,0,0,3,17,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,if (cs1 == null || cs2 == null) {,2,3,0,1,3,0,0,0,1,5,33,4,1,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,262,(cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,4,8,0,2,5,0,4,0,0,16,68,5,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,480,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,0,0,1,0,4,65,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,553,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,0,0,1,0,4,65,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,621,        return str.length() > 0;,0,1,0,1,2,0,2,0,0,3,24,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1379,                allowSigns = false;,1,0,0,0,0,0,0,0,0,3,19,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1373,                hasExp = true;,1,0,0,0,0,0,0,0,0,3,14,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1370,                if (!foundDigit) {,1,0,0,1,3,0,0,0,0,2,18,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1376,                if (!allowSigns) {,1,0,0,1,3,0,0,0,0,2,18,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1377,                    return false;,0,0,0,0,0,0,0,0,0,1,13,13,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1375,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,3,8,0,0,0,0,9,48,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,532,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1361,                    return false;,0,0,0,0,0,0,0,0,0,1,13,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1363,                hasDecPoint = true;,1,0,0,0,0,0,0,0,0,3,19,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1364,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,9,48,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1366,                if (hasExp) {,1,0,0,1,3,0,0,0,0,1,13,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1348,"        sz--; // don't want to loop to the last char, check it afterwords",1,0,0,0,0,0,0,0,0,2,65,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1354,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1355,                foundDigit = true;,1,0,0,0,0,0,0,0,0,3,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,457,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,1,0,2,72,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1353,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,6,6,0,2,5,0,0,0,0,13,61,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,586,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1358,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,4,29,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1359,                if (hasDecPoint || hasExp) {,2,1,0,1,3,0,0,0,0,3,28,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,598,                return createBigDecimal(str);,0,0,0,1,2,0,2,0,0,2,29,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1342,                        return false;,0,0,0,0,0,0,0,0,0,1,13,12,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1345,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1334,                if (i == sz) {,2,1,0,1,3,0,0,0,0,3,14,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1332,            if (chars[start] == '0' && chars[start + 1] == 'x') {,1,4,1,3,7,0,0,0,0,10,53,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1333,                int i = start + 2;,2,1,0,0,0,0,0,0,0,3,18,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1330,        int start = (chars[0] == '-') ? 1 : 0;,1,1,1,2,4,0,0,0,0,4,38,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1331,        if (sz > start + 1) {,2,2,0,1,3,0,0,0,0,4,21,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1338,                for (; i < chars.length; i++) {,4,1,0,1,3,0,0,0,0,6,31,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1339,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,9,38,13,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,                return foundDigit && !hasExp;,2,1,0,0,0,0,0,0,0,4,29,8,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1401,                return foundDigit;,1,0,0,0,0,0,0,0,0,1,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1403,            if (!allowSigns,1,0,0,0,1,0,0,0,0,2,15,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1410,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,4,19,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1325,        boolean hasExp = false;,1,0,0,0,0,0,0,0,0,2,23,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1324,        int sz = chars.length;,3,0,0,0,0,0,0,0,0,3,22,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1321,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1323,        char[] chars = str.toCharArray();,1,0,0,2,4,0,2,0,0,3,33,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1395,            if (chars[i] == '.') {,0,1,1,2,5,0,0,0,0,4,22,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,492,"                mant = str.substring(0, expPos);",1,0,0,1,2,0,3,0,0,5,32,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1386,        if (i < chars.length) {,3,1,0,1,3,0,0,0,0,4,23,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1384,            i++;,1,0,0,0,0,0,0,0,0,2,4,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,0,6,32,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);",2,1,0,1,2,0,3,0,0,7,40,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,0,2,0,0,9,47,6,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,                            return f;,1,0,0,0,0,0,0,0,0,1,9,11,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,5,11,0,4,0,0,10,65,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,1,1,0,2,5,0,2,0,0,4,28,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",2,2,0,2,4,0,4,0,0,9,50,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,1,0,0,0,0,0,0,0,0,1,9,12,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,2,4,0,4,0,0,6,55,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,0,0,0,1,2,0,2,0,0,2,33,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,1,0,0,1,2,0,2,1,0,4,29,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,5,11,0,4,0,0,10,65,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,3,3,0,2,5,0,2,0,0,8,47,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,            if (expPos > -1) {,1,1,0,1,3,0,0,0,0,3,18,6,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,0,0,0,1,2,0,2,0,0,2,26,11,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",2,1,0,2,4,0,4,0,0,8,46,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",1,0,0,1,2,0,3,0,0,5,32,6,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,1,0,0,0,0,0,0,0,0,2,11,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,2,3,0,1,3,0,0,0,0,5,33,6,0.495495495,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,8,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,0,0,0,0,0,0,0,0,0,1,13,10,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,1,0,0,1,2,0,2,0,0,3,24,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,2,3,0,1,3,0,0,0,0,5,40,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,3,3,0,1,3,0,0,0,0,6,41,4,0.77173913,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.77173913,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,52,5,0.246376812,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,                        return i;,1,0,0,0,0,0,0,0,0,1,9,10,0.217391304,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,5,0,0,6,53,4,0.217391304,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,1,3,0,1,2,0,2,0,0,6,38,4,0.198565666,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1449,        int csLast = csLength - 1;,2,1,0,0,0,0,0,0,0,3,26,5,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,10,7,0,1,3,0,0,0,0,17,111,10,0.142857143,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1570,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,4,0,0,5,43,4,0.02173913,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,0,1,0,2,5,0,3,0,0,4,34,6,0.02173913,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1542,            return i;,1,0,0,0,0,0,0,0,0,1,9,7,0.010869565,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1538,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,9,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1535,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1537,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,7,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1536,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,8,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,2,1,0,1,4,0,0,0,0,3,31,5,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,2,0,0,0,0,0,0,0,0,2,36,8,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,3,0,0,2,4,0,0,2,0,5,45,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,909,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,0,0,0,0,7,40,4,1,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,1,0,0,0,0,0,0,0,0,1,15,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,0,0,1,3,6,0,1,0,0,6,33,6,1,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,3,0,6,0,10,101,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",2,0,0,1,2,0,2,1,0,5,47,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,0,8,86,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",4,0,0,1,2,0,2,0,0,6,46,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,1,0,0,3,28,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,3,0,0,4,43,6,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,1,0,0,1,2,0,3,1,0,5,64,6,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,1,0,0,2,5,0,2,1,0,4,62,4,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,4,0,0,4,52,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,4,0,0,4,54,9,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3295,            type = Object.class;,1,0,0,0,0,0,0,1,0,3,20,7,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3292,        } else if (element != null) {,1,1,0,1,4,0,0,0,0,2,29,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,3,1,1,1,2,0,0,0,0,6,40,4,0.248861912,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,4,8,0,3,2,0,6,49,4,0.248861912,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,0,3,0,0,3,51,5,0.06107739,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,2,4,1,3,1,0,6,60,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,4,8,0,3,2,0,11,80,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,1,2,0,4,0,0,6,59,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,1,2,0,4,0,0,8,71,5,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,872,            calendar = (Calendar) calendar.clone();,1,0,0,2,4,0,2,1,0,5,39,6,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,642,"                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);",3,0,0,1,2,0,2,0,0,6,56,7,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,873,            calendar.setTimeZone(mTimeZone);,0,0,0,1,2,0,3,0,0,3,32,7,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,0,0,1,2,0,3,0,0,4,44,4,0.494252874,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.24137931,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,3,1,0,1,3,0,0,0,0,5,33,7,0.24137931,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,2,0,0,3,19,10,0.24137931,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,6,0.005363985,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",2,1,0,2,4,0,4,0,0,7,51,6,0.005363985,0
defect4j,lang,org/apache/commons/lang3/Validate,38,121,        if (expression == false) {,1,1,0,1,3,0,0,0,0,3,26,4,0.004310345,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1311,                    digits = Integer.toString(value).length();,1,0,0,2,4,0,4,0,0,6,42,9,0.004310345,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1310,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",1,1,0,1,2,0,3,0,0,7,77,10,0.004310345,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1354,            if (value < 100) {,1,1,0,1,3,0,0,0,0,2,18,5,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1292,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,5,0,0,5,39,6,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,2,0,0,0,0,0,0,0,0,4,23,12,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,832,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",1,0,0,3,6,0,3,1,0,5,73,5,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1098,            buffer.append(mValue);,0,0,0,1,2,0,3,0,0,3,22,6,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,5,0,0,5,39,8,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,1,1,0,1,3,0,0,0,0,2,19,7,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,871,        if (mTimeZoneForced) {,1,0,0,1,3,0,0,0,0,1,22,4,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,3,5,0,2,5,0,2,0,0,11,54,10,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,890,"            rules[i].appendTo(buf, calendar);",0,0,1,2,4,0,3,0,0,5,33,7,0.002955665,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,887,        Rule[] rules = mRules;,2,0,0,1,2,0,0,1,0,3,22,4,0.002955665,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,549,            locale = Locale.getDefault();,1,0,0,1,2,0,2,0,0,4,29,6,0.001149425,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,621,                    rule = TwoDigitMonthField.INSTANCE;,3,0,0,0,0,0,0,0,0,4,35,11,0.000841043,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1403,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,1,0,0,1,2,2,0,2,0,5,68,3,0.000841043,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,618,                } else if (tokenLen == 3) {,1,1,0,1,4,0,0,0,0,2,27,8,0.000547345,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,620,                } else if (tokenLen == 2) {,1,1,0,1,4,0,0,0,0,2,27,9,0.000547345,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1272,"        PaddedNumberField(int field, int size) {",3,0,0,1,3,0,0,0,0,3,40,3,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1332,        TwoDigitNumberField(int field) {,2,0,0,1,3,0,0,0,0,2,32,3,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,610,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",3,0,0,1,2,0,2,0,0,6,49,9,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,771,            return new TwoDigitNumberField(field);,1,0,0,1,2,0,0,1,0,2,38,6,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,773,"            return new PaddedNumberField(field, padding);",2,0,0,1,2,0,0,1,0,3,45,6,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,586,        String[] AmPmStrings = symbols.getAmPmStrings();,1,0,0,2,4,0,2,1,0,4,48,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,747,                    i--;,1,0,0,0,0,0,0,0,0,2,4,11,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,589,        int[] indexRef = new int[1];,1,0,0,2,4,0,0,0,0,1,28,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,579,        List<Rule> rules = new ArrayList<Rule>();,1,0,0,1,2,0,0,4,0,5,41,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,750,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,12,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,756,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,755,        indexRef[0] = i;,1,0,1,1,2,0,0,0,0,3,16,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,592,            indexRef[0] = i;,1,0,1,1,2,0,0,0,0,3,16,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,596,            int tokenLen = token.length();,1,0,0,1,2,0,2,0,0,3,30,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,714,        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {,4,7,0,1,3,0,0,0,0,15,51,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,218,"            cInstanceCache.put(format, format);  // this is OK!",0,0,0,1,2,0,4,0,0,4,51,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,216,            format = emptyFormat;,2,0,0,0,0,0,0,0,0,3,21,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,214,        FastDateFormat format = cInstanceCache.get(emptyFormat);,1,0,0,1,2,0,3,1,0,5,56,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,213,"        FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",4,0,0,1,2,0,0,2,0,6,75,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,604,            switch (c) {,1,0,0,1,3,0,0,0,0,1,12,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,566,        mMaxLengthEstimate = len;,2,0,0,0,0,0,0,0,0,3,25,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,563,            len += mRules[i].estimateLength();,1,0,1,2,4,0,1,0,0,5,34,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,685,                    rule = new CharacterLiteral(sub.charAt(0));,1,0,0,2,4,0,2,1,0,5,43,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,684,                if (sub.length() == 1) {,0,1,0,2,5,0,2,0,0,3,24,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,683,                String sub = token.substring(1);,1,0,0,1,2,0,2,1,0,4,32,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,745,                } else if (!inLiteral &&,1,1,0,0,2,0,0,0,0,3,24,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,708,        StringBuilder buf = new StringBuilder();,1,0,0,1,2,0,0,2,0,3,40,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,541,        mTimeZoneForced = (timeZone != null);,2,1,0,1,2,0,0,0,0,4,37,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1007,        total += (mLocaleForced ? 1 : 0);,2,0,0,1,2,0,0,0,0,3,33,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1006,        total += mLocale.hashCode();,1,0,0,1,2,0,2,0,0,4,28,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,719,            while (i + 1 < length) {,2,2,0,1,3,0,0,0,0,4,24,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,713,        char c = pattern.charAt(i);,1,0,0,1,2,0,3,0,0,4,27,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,710,        int i = indexRef[0];,1,0,1,1,2,0,0,0,0,2,20,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,559,        mRules = rulesList.toArray(new Rule[rulesList.size()]);,1,0,0,3,6,0,4,1,0,7,55,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,558,        List<Rule> rulesList = parsePattern();,1,0,0,1,2,0,1,2,0,4,38,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,737,                if (c == '\'') {,1,1,0,1,3,0,0,0,0,3,16,8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,722,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,11,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,723,                    i++;,1,0,0,0,0,0,0,0,0,2,4,10,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,720,                char peek = pattern.charAt(i + 1);,2,1,0,1,2,0,2,0,0,5,34,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,734,            for (; i < length; i++) {,3,1,0,1,3,0,0,0,0,5,25,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,730,            buf.append('\'');,0,0,0,1,2,0,2,0,0,3,17,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,732,            boolean inLiteral = false;,1,0,0,0,0,0,0,0,0,2,26,7,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,0,5,0,0,5,60,5,1,1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,0,3,0,0,4,35,4,0.25,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,470,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",4,2,0,1,2,0,2,0,0,8,64,5,1,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,466,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",1,0,0,2,4,0,5,0,0,6,66,5,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,3,2,0,0,1,0,0,0,0,5,35,6,0.106382979,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,2,0,0,0,0,0,0,0,0,4,27,6,0.106382979,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,3,7,0,3,7,0,0,0,0,10,72,4,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,3,2,0,1,2,0,0,0,0,6,14,6,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,3,1,0,2,4,0,0,0,0,6,37,4,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,4,3,0,3,6,0,0,0,0,8,38,5,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,1,2,0,2,5,0,0,0,0,3,39,6,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,2,0,0,0,0,0,0,0,0,4,7,8,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,2,0,0,0,0,0,0,0,0,3,6,8,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,2,0,1,2,0,0,0,0,5,33,4,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,6,0,0,9,43,4,0.035460993,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",2,0,0,1,2,0,0,1,0,3,44,5,0.012765957,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,88,"    public static final Fraction THREE_FIFTHS = new Fraction(3, 5);",1,0,0,1,2,3,0,2,0,6,63,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,107,    private transient int hashCode = 0;,1,0,0,0,0,2,0,0,0,3,35,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,115,    private transient String toProperString = null;,1,0,0,0,0,2,0,1,0,4,47,2,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,0,0,0,2,5,0,2,0,0,2,23,5,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,1,0,0,1,2,0,3,0,0,5,58,4,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,1,0,0,2,4,0,4,1,0,6,56,4,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,3,2,2,0,8,90,2,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",0,0,0,1,2,0,5,0,0,5,38,9,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,2,1,0,1,2,0,1,0,0,4,29,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,2,1,0,3,6,0,3,1,0,8,60,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,2,1,0,1,3,0,0,0,0,3,22,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,1,1,1,2,5,0,0,0,0,4,23,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",2,1,0,1,2,0,3,0,0,6,36,9,0.497058824,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,0,2,0,0,5,43,5,0.497058824,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,0,0,0,0,7,40,5,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,3,7,0,3,0,0,8,38,9,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,3,2,0,0,0,0,0,0,0,5,28,5,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,0,5,47,4,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",2,1,0,1,2,0,6,0,0,9,72,5,0.061176471,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,2,1,0,2,4,0,2,0,0,6,43,6,0.008487395,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,5,0,0,5,37,7,0.002941176,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,474,            int len = length();,1,0,0,1,2,0,1,0,0,2,19,7,0.002941176,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,262,            Arrays.sort(this.chars);,1,0,0,1,2,0,2,0,0,3,24,6,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,261,            this.chars = (char[]) chars.clone();,1,0,0,3,6,0,2,0,0,4,36,5,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",1,0,0,2,4,3,1,2,0,8,88,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",1,0,0,1,2,3,0,2,0,7,69,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,4,1,0,0,0,0,0,0,0,5,34,5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,2,0,0,3,31,11,1,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,1,0,0,1,2,0,2,0,0,3,36,14,1,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,2,3,0,1,3,0,0,0,0,7,37,15,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,1,0,0,2,4,0,4,0,0,6,56,17,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,1,0,0,3,6,0,2,0,0,3,33,11,0.474358974,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,3,3,0,1,3,0,0,0,0,7,33,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,1,0,1,2,0,3,1,0,7,47,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,2,0,0,3,31,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,2,0,0,4,41,9,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,4,1,0,2,5,0,2,0,0,8,47,4,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,5,0,0,5,39,5,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",2,1,0,1,2,0,2,0,0,6,35,9,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,1,0,0,2,4,0,2,2,0,5,50,4,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,1,0,0,1,2,0,2,0,0,4,32,5,0.026590693,0
defect4j,lang,org/apache/commons/lang/Entities,62,372,        HTML32 = new Entities();,1,0,0,1,2,0,0,1,0,3,24,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,53,    static final String[][] ISO8859_1_ARRAY = {,1,0,0,2,5,2,0,1,0,4,43,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,133,        table = new Entry[initialCapacity];,1,0,1,1,2,0,0,1,0,4,35,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,134,        threshold = (int) (initialCapacity * loadFactor);,3,1,0,2,4,0,0,0,0,5,49,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,48,    private static final String[][] APOS_ARRAY = {,1,0,0,2,5,3,0,1,0,5,46,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,262,        Entry newMap[] = new Entry[newCapacity];,1,0,1,2,4,0,0,2,0,4,40,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,504,        private int LOOKUP_TABLE_SIZE = 256;,1,0,0,0,0,1,0,0,0,2,36,3,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,428,"            mapValueToName.put(value, name);",0,0,0,1,2,0,4,0,0,4,32,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,502,    static class LookupEntityMap extends PrimitiveEntityMap {,1,0,0,0,1,1,0,1,0,3,57,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,269,                Entry e = old;,2,0,0,0,0,0,0,1,0,3,14,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,268,            for (Entry old = oldMap[i]; old != null;) {,2,1,1,2,5,0,0,1,0,6,43,6,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,298,        int index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,0,0,0,0,6,45,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,299,        for (Entry e = tab[index]; e != null; e = e.next) {,5,1,1,2,5,0,0,1,0,10,51,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,693,    EntityMap map = new Entities.LookupEntityMap();,3,0,0,1,2,0,0,1,0,4,47,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,272,                int index = (e.hash & 0x7FFFFFFF) % newCapacity;,4,2,0,1,2,0,0,0,0,6,48,9,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",5,0,0,1,3,1,0,2,0,8,62,3,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,273,                e.next = newMap[index];,2,0,1,1,2,0,0,0,0,5,23,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,270,                old = old.next;,3,0,0,0,0,0,0,0,0,4,15,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,274,                newMap[index] = e;,1,0,1,1,2,0,0,0,0,4,18,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,261,        int newCapacity = oldCapacity * 2 + 1;,2,2,0,0,0,0,0,0,0,4,38,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,267,        for (int i = oldCapacity; i-- > 0;) {,3,1,0,1,3,0,0,0,0,5,37,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,427,"            mapNameToValue.put(name, new Integer(value));",1,0,0,2,4,0,3,1,0,5,45,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,421,        private IntHashMap mapValueToName = new IntHashMap();,1,0,0,1,2,1,0,2,0,4,53,3,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,309,            rehash();,0,0,0,1,2,0,1,0,0,1,9,7,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,300,            if (e.hash == hash) {,3,1,0,1,3,0,0,0,0,4,21,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,702,"            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));",0,0,1,6,12,0,3,0,0,7,66,7,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,39,class Entities {,1,0,0,0,1,0,0,0,0,1,16,1,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,317,        tab[index] = e;,1,0,1,1,2,0,0,0,0,4,15,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,316,"        Entry e = new Entry(hash, key, value, tab[index]);",4,0,1,2,4,0,0,2,0,8,50,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,312,            index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,0,0,0,0,7,41,6,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,437,            int newdiff = startValue - endValue;,3,1,0,0,0,0,0,0,0,4,36,7,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,439,            return newdiff;,1,0,0,0,0,0,0,0,0,1,15,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,2,1,0,0,0,0,0,0,0,4,19,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,4,0,0,4,46,7,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,0,6,0,0,7,81,5,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,3,1,0,0,0,0,0,0,0,4,38,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,3,2,0,1,3,0,0,0,0,5,45,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,5,1,0,2,4,0,4,0,0,10,62,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",3,0,0,1,2,0,4,0,0,8,66,4,0.214285714,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",1,1,0,1,2,0,3,0,0,6,34,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,0,10,0,0,10,96,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,1,0,0,2,4,0,2,1,0,4,33,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",1,0,0,2,5,0,9,0,0,11,96,12,0.083333333,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3868,        int pads = size - str.length();,2,1,0,1,2,0,2,0,0,5,31,5,0.027210884,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,0,0,0,0,0,0,0,0,0,1,13,5,0.027210884,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,528,            int sz = tokens.length;,3,0,0,0,0,0,0,0,0,3,23,6,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,531,                    return true;,0,0,0,0,0,0,0,0,0,1,12,9,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,384,            Token token = tokens[i];,1,0,1,1,2,0,0,1,0,4,24,6,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,385,            Object value = token.getValue();,1,0,0,1,2,0,2,1,0,4,32,6,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,394,                } else if (value == M) {,2,1,0,1,4,0,0,0,0,3,24,9,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,530,                if (tokens[i].getValue() == value) {,1,1,1,3,7,0,1,0,0,5,36,7,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,469,            if(inLiteral && ch != '\'') {,2,2,0,1,3,0,0,0,0,5,29,6,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,468,            char ch = array[i];,1,0,1,1,2,0,0,0,0,3,19,7,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,461,        java.util.ArrayList list = new java.util.ArrayList(array.length);,9,0,0,1,2,0,0,0,0,9,65,4,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,502,                if(previous != null && previous.getValue() == value) {,2,3,0,2,5,0,2,0,0,7,54,8,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,505,                    Token token = new Token(value);,2,0,0,1,2,0,0,2,0,4,31,10,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,507,                    previous = token;,2,0,0,0,0,0,0,0,0,3,17,10,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,512,        return (Token[]) list.toArray( new Token[0] );,0,0,0,4,8,0,2,2,0,4,46,5,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,545,        Token(Object value) {,2,0,0,1,3,0,0,1,0,3,21,3,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,473,            Object value = null;,1,0,0,0,0,0,0,1,0,2,20,6,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,450,"    static final Object s = ""s"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0