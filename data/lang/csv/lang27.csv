dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,"                if (expPos < decPos) {
",4,1,0,1,3,0,0,0,0,5,22,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,"                        return createBigDecimal(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,"                    return createLong(str);
",0,0,0,1,2,1,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,"                return createBigInteger(str);
",0,0,0,1,2,1,4,0,0,4,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,"                        return f;
",2,0,0,0,0,1,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,474,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,495,"        if (!Character.isDigit(lastChar) && lastChar != '.') {
",2,2,0,2,5,0,6,0,0,12,54,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,496,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,9,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,511,"                            return createLong(numeric);
",0,0,0,1,2,1,4,0,0,4,27,12,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,610,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,"        for (int i = str.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,45,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,"            if (str.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,27,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,615,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,"        return Float.valueOf(str);
",0,0,0,1,2,1,6,0,0,6,26,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,"        return Double.valueOf(str);
",0,0,0,1,2,1,6,0,0,6,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,"        return Integer.decode(str);
",0,0,0,1,2,1,6,0,0,6,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,"        return new BigInteger(str);
",2,0,0,1,2,1,0,2,0,4,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,714,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,"        return new BigDecimal(str);
",2,0,0,1,2,1,0,2,0,4,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,"        return Long.valueOf(str);
",0,0,0,1,2,1,6,0,0,6,25,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,"        for (int i = 0; i < str.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1296,"            if (!Character.isDigit(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,193,"        return cs == null || cs.length() == 0;
",2,3,0,1,2,1,4,0,0,9,38,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,233,"        if (cs == null || (strLen = cs.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,48,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,236,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,"            if ((Character.isWhitespace(cs.charAt(i)) == false)) {
",0,1,0,4,9,0,10,0,0,12,54,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,238,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,41,"    public static final Long LONG_ZERO = new Long(0L);
",2,0,0,1,2,3,0,4,0,9,50,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,43,"    public static final Long LONG_ONE = new Long(1L);
",2,0,0,1,2,3,0,4,0,9,49,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,45,"    public static final Long LONG_MINUS_ONE = new Long(-1L);
",2,0,0,1,2,3,0,4,0,10,56,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,47,"    public static final Integer INTEGER_ZERO = new Integer(0);
",2,0,0,1,2,3,0,4,0,9,58,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,49,"    public static final Integer INTEGER_ONE = new Integer(1);
",2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,51,"    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);
",2,0,0,1,2,3,0,4,0,10,64,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,53,"    public static final Short SHORT_ZERO = new Short((short) 0);
",2,0,0,2,4,3,0,4,0,9,60,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,55,"    public static final Short SHORT_ONE = new Short((short) 1);
",2,0,0,2,4,3,0,4,0,9,59,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,57,"    public static final Short SHORT_MINUS_ONE = new Short((short) -1);
",2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,59,"    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);
",2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,61,"    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);
",2,0,0,2,4,3,4,2,0,11,59,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,63,"    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);
",2,0,0,2,4,3,4,2,0,12,66,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,65,"    public static final Double DOUBLE_ZERO = new Double(0.0d);
",2,0,0,1,2,3,0,4,0,9,58,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,67,"    public static final Double DOUBLE_ONE = new Double(1.0d);
",2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,69,"    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);
",2,0,0,1,2,3,0,4,0,10,64,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,71,"    public static final Float FLOAT_ZERO = new Float(0.0f);
",2,0,0,1,2,3,0,4,0,9,55,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,73,"    public static final Float FLOAT_ONE = new Float(1.0f);
",2,0,0,1,2,3,0,4,0,9,54,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,75,"    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);
",2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1821,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1822,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,340,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,359,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");
",2,0,0,1,2,3,2,2,0,10,121,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");
",2,0,0,1,2,3,2,2,0,10,66,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");
",2,0,0,1,2,3,2,2,0,10,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")
",2,1,0,2,4,3,4,2,0,16,118,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,822,"    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);
",2,0,0,1,2,3,4,2,0,11,70,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,841,"    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");
",2,0,0,1,2,3,2,2,0,10,70,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,917,"    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();
",2,0,0,1,2,3,2,2,0,9,74,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,943,"    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();
",2,0,0,1,2,3,2,0,0,7,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,964,"    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();
",2,0,0,1,2,3,2,0,0,7,65,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");
",2,0,0,1,2,3,2,0,0,8,64,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");
",2,0,0,1,2,3,2,0,0,8,68,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");
",2,0,0,1,2,3,2,0,0,8,66,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");
",2,1,0,2,4,3,4,0,0,12,97,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");
",2,0,0,1,2,3,2,0,0,8,64,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");
",2,0,0,1,2,3,2,0,0,8,73,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");
",2,0,0,1,2,3,2,0,0,8,65,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");
",2,0,0,1,2,3,2,0,0,8,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");
",2,0,0,1,2,3,2,0,0,8,69,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1186,"    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS
",14,1,0,0,0,3,0,0,0,18,128,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1200,"    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);
",2,0,0,1,2,3,4,0,0,9,85,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");
",2,0,0,1,2,3,4,0,0,10,93,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");
",4,1,0,1,2,3,2,0,0,12,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");
",4,1,0,1,2,3,2,0,0,12,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");
",2,0,0,1,2,3,4,0,0,10,91,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");
",4,1,0,1,2,3,2,0,0,11,96,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");
",2,0,0,1,2,3,4,0,0,10,91,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");
",2,0,0,1,2,3,4,0,0,10,94,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");
",2,0,0,1,2,3,4,0,0,10,90,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1324,"        return new File(System.getProperty(JAVA_HOME_KEY));
",0,0,0,2,4,1,6,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1340,"        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));
",0,0,0,2,4,1,6,2,0,8,56,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));
",4,0,0,2,4,1,6,0,0,10,95,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));
",4,0,0,2,4,1,6,0,0,10,93,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);
",0,0,0,1,2,1,6,0,0,6,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1410,"        if (JAVA_VERSION != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1411,"            for (int i = 0; i < JAVA_VERSION.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1412,"                char ch = JAVA_VERSION.charAt(i);
",2,0,0,1,2,0,6,0,0,8,33,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1413,"                if (ch >= '0' && ch <= '9') {
",4,3,0,1,3,0,0,0,0,9,29,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1414,"                    return JAVA_VERSION.substring(i);
",0,0,0,1,2,1,6,0,0,6,33,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1418,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1431,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);
",0,0,0,1,2,1,10,0,0,10,69,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1442,"        return isOSNameMatch(OS_NAME, osNamePrefix);
",0,0,0,1,2,1,6,0,0,6,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1462,"            return System.getProperty(property);
",0,0,0,1,2,1,6,0,0,6,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1463,"        } catch (SecurityException ex) {
",2,0,0,1,4,0,0,2,0,4,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1465,"            System.err.println(""Caught a SecurityException reading the system property '"" + property
",6,1,0,0,1,0,2,0,0,10,88,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1467,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1484,"        return new File(System.getProperty(USER_DIR_KEY));
",0,0,0,2,4,1,6,2,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1500,"        return new File(System.getProperty(USER_HOME_KEY));
",0,0,0,2,4,1,6,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1513,"        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;
",6,1,0,2,4,1,6,0,0,14,93,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1534,"        return JAVA_VERSION_FLOAT >= requiredVersion;
",4,1,0,0,0,1,0,0,0,5,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1556,"        return JAVA_VERSION_INT >= requiredVersion;
",4,1,0,0,0,1,0,0,0,5,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1574,"        if (version == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1575,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1577,"        return version.startsWith(versionPrefix);
",0,0,0,1,2,1,6,0,0,6,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1597,"        if (osName == null || osVersion == null) {
",4,3,0,1,3,0,0,0,0,7,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1598,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1600,"        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);
",0,1,0,2,4,1,12,0,0,13,80,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1616,"        if (osName == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1617,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1619,"        return osName.startsWith(osNamePrefix);
",0,0,0,1,2,1,6,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1646,"        return toVersionFloat(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
",0,0,0,2,4,1,8,0,0,8,78,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1673,"        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
",0,0,0,2,4,1,8,0,0,8,76,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1696,"        return toJavaVersionIntArray(version, Integer.MAX_VALUE);
",4,0,0,1,2,1,4,0,0,8,57,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1716,"        if (version == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1717,"            return ArrayUtils.EMPTY_INT_ARRAY;
",4,0,0,0,0,1,0,0,0,4,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);
",2,0,0,4,8,0,8,2,0,13,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1720,"        int[] ints = new int[Math.min(limit, strings.length)];
",6,0,0,3,6,0,6,0,0,12,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1721,"        int j = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1722,"        for (int i = 0; i < strings.length && j < limit; i++) {
",14,3,0,1,3,0,0,0,0,18,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1723,"            String s = strings[i];
",2,0,1,1,2,0,0,2,0,8,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1724,"            if (s.length() > 0) {
",0,1,0,2,5,0,4,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1725,"                ints[j++] = Integer.parseInt(s);
",2,0,1,2,4,0,6,0,0,12,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1728,"        return ints;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1752,"        if (javaVersions == null || javaVersions.length == 0) {
",6,3,0,1,3,0,0,0,0,9,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1753,"            return 0f;
",0,0,0,0,0,1,0,0,0,0,10,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1755,"        if (javaVersions.length == 1) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1756,"            return javaVersions[0];
",0,0,1,1,2,1,0,0,0,2,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1758,"        StringBuilder builder = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1759,"        builder.append(javaVersions[0]);
",0,0,1,2,4,0,4,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1760,"        builder.append('.');
",0,0,0,1,2,0,4,0,0,5,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1761,"        for (int i = 1; i < javaVersions.length; i++) {
",10,1,0,1,3,0,0,0,0,12,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1762,"            builder.append(javaVersions[i]);
",0,0,1,2,4,0,4,0,0,8,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1765,"            return Float.parseFloat(builder.toString());
",0,0,0,2,4,1,8,0,0,8,44,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1766,"        } catch (Exception ex) {
",2,0,0,1,4,0,0,2,0,4,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1767,"            return 0f;
",0,0,0,0,0,1,0,0,0,0,10,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1792,"        if (javaVersions == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1793,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1795,"        int intVersion = 0;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1796,"        int len = javaVersions.length;
",6,0,0,0,0,0,0,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1797,"        if (len >= 1) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1798,"            intVersion = javaVersions[0] * 100;
",2,1,1,1,2,0,0,0,0,6,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1800,"        if (len >= 2) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1801,"            intVersion += javaVersions[1] * 10;
",2,1,1,1,2,0,0,0,0,6,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1803,"        if (len >= 3) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1804,"            intVersion += javaVersions[2];
",2,0,1,1,2,0,0,0,0,5,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1806,"        return intVersion;
",2,0,0,0,0,1,0,0,0,2,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,85,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,86,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,107,"        return toInt(str, 0);
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,128,"        if(str == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,129,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,132,"            return Integer.parseInt(str);
",0,0,0,1,2,1,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,133,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,134,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,156,"        return toLong(str, 0L);
",0,0,0,1,2,1,4,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,177,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,178,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,181,"            return Long.parseLong(str);
",0,0,0,1,2,1,6,0,0,6,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,182,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,183,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,206,"        return toFloat(str, 0.0f);
",0,0,0,1,2,1,4,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,229,"      if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,230,"          return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,233,"          return Float.parseFloat(str);
",0,0,0,1,2,1,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,234,"      } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,235,"          return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,258,"        return toDouble(str, 0.0d);
",0,0,0,1,2,1,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,281,"      if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,282,"          return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,285,"          return Double.parseDouble(str);
",0,0,0,1,2,1,6,0,0,6,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,286,"      } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,287,"          return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,310,"        return toByte(str, (byte) 0);
",0,0,0,2,4,1,4,0,0,4,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,331,"        if(str == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,332,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,335,"            return Byte.parseByte(str);
",0,0,0,1,2,1,6,0,0,6,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,336,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,337,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,359,"        return toShort(str, (short) 0);
",0,0,0,2,4,1,4,0,0,4,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,380,"        if(str == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,381,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,384,"            return Short.parseShort(str);
",0,0,0,1,2,1,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,385,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,386,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,457,"            throw new NumberFormatException(""A blank string is not a valid number"");
",0,0,0,1,2,0,0,2,0,3,72,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,464,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,480,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,512,"                        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,515,"                        return createBigInteger(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,518,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,531,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,529,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,542,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,540,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,545,"                    } catch (NumberFormatException e) {
",2,0,0,1,4,0,0,2,0,4,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,550,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,585,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,583,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,588,"                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,66,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,589,"                        return d;
",2,0,0,0,0,1,0,0,0,2,9,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,593,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,591,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,595,"                return createBigDecimal(str);
",0,0,0,1,2,1,4,0,0,4,29,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,611,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,618,"        return str.length() > 0;
",0,1,0,1,2,1,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,633,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,649,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,666,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,683,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,699,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,715,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,719,"            throw new NumberFormatException(""A blank string is not a valid number"");
",0,0,0,1,2,0,0,2,0,3,72,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,736,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,737,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,738,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,739,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,743,"        long min = array[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,744,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,745,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,746,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,750,"        return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,763,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,764,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,765,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,766,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,770,"        int min = array[0];
",2,0,1,1,2,0,0,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,771,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,772,"            if (array[j] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,773,"                min = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,777,"        return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,790,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,791,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,792,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,793,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,797,"        short min = array[0];
",2,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,798,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,799,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,800,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,804,"        return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,817,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,818,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,819,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,820,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,824,"        byte min = array[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,825,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,826,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,827,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,831,"        return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,845,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,846,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,847,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,848,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,852,"        double min = array[0];
",2,0,1,1,2,0,0,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,853,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,854,"            if (Double.isNaN(array[i])) {
",0,0,1,3,7,0,4,0,0,8,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,855,"                return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,857,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,858,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,862,"        return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,876,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,877,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,878,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,879,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,883,"        float min = array[0];
",2,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,884,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,885,"            if (Float.isNaN(array[i])) {
",0,0,1,3,7,0,4,0,0,8,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,886,"                return Float.NaN;
",4,0,0,0,0,1,0,0,0,4,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,888,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,889,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,893,"        return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,908,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,909,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,910,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,911,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,915,"        long max = array[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,916,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,917,"            if (array[j] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,918,"                max = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,922,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,935,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,936,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,937,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,938,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,942,"        int max = array[0];
",2,0,1,1,2,0,0,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,943,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,944,"            if (array[j] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,945,"                max = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,949,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,962,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,963,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,964,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,965,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,969,"        short max = array[0];
",2,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,970,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,971,"            if (array[i] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,972,"                max = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,976,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,989,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,990,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,991,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,992,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,996,"        byte max = array[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,997,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,998,"            if (array[i] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,999,"                max = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1003,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1017,"        if (array== null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1018,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1019,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1020,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1024,"        double max = array[0];
",2,0,1,1,2,0,0,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1025,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1026,"            if (Double.isNaN(array[j])) {
",0,0,1,3,7,0,4,0,0,8,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1027,"                return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1029,"            if (array[j] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1030,"                max = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1034,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1048,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1049,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1050,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1051,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1055,"        float max = array[0];
",2,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1056,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1057,"            if (Float.isNaN(array[j])) {
",0,0,1,3,7,0,4,0,0,8,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1058,"                return Float.NaN;
",4,0,0,0,0,1,0,0,0,4,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1060,"            if (array[j] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1061,"                max = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1065,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1079,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1080,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1082,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1083,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1085,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1097,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1098,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1100,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1101,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1103,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1115,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1116,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1118,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1119,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1121,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1133,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1134,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1136,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1137,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1139,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1155,"        return Math.min(Math.min(a, b), c);
",0,0,0,2,4,1,14,0,0,14,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1171,"        return Math.min(Math.min(a, b), c);
",0,0,0,2,4,1,14,0,0,14,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1185,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1186,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1188,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1189,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1191,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1203,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1204,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1206,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1207,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1209,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1221,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1222,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1224,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1225,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1227,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1239,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1240,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1242,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1243,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1245,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1261,"        return Math.max(Math.max(a, b), c);
",0,0,0,2,4,1,14,0,0,14,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1277,"        return Math.max(Math.max(a, b), c);
",0,0,0,2,4,1,14,0,0,14,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1293,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1297,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1317,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1318,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1320,"        char[] chars = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1321,"        int sz = chars.length;
",6,0,0,0,0,0,0,0,0,6,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1322,"        boolean hasExp = false;
",2,0,0,0,0,0,0,0,0,3,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1323,"        boolean hasDecPoint = false;
",2,0,0,0,0,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1324,"        boolean allowSigns = false;
",2,0,0,0,0,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1325,"        boolean foundDigit = false;
",2,0,0,0,0,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1327,"        int start = (chars[0] == '-') ? 1 : 0;
",2,1,1,2,4,0,0,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1328,"        if (sz > start + 1) {
",4,2,0,1,3,0,0,0,0,6,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1329,"            if (chars[start] == '0' && chars[start + 1] == 'x') {
",2,4,1,3,7,0,0,0,0,14,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1330,"                int i = start + 2;
",4,1,0,0,0,0,0,0,0,5,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1331,"                if (i == sz) {
",4,1,0,1,3,0,0,0,0,5,14,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1332,"                    return false; // str == ""0x""
",0,0,0,0,0,1,0,0,0,1,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1335,"                for (; i < chars.length; i++) {
",8,1,0,1,3,0,0,0,0,10,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1336,"                    if ((chars[i] < '0' || chars[i] > '9')
",0,3,1,3,7,0,0,0,0,13,38,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1339,"                        return false;
",0,0,0,0,0,1,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1342,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1345,"        sz--; // don't want to loop to the last char, check it afterwords
",2,0,0,0,0,0,0,0,0,3,65,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1347,"        int i = start;
",4,0,0,0,0,0,0,0,0,4,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1350,"        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {
",12,6,0,2,5,0,0,0,0,19,61,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1351,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1352,"                foundDigit = true;
",2,0,0,0,0,0,0,0,0,4,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1353,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1355,"            } else if (chars[i] == '.') {
",0,1,1,2,6,0,0,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1356,"                if (hasDecPoint || hasExp) {
",4,1,0,1,3,0,0,0,0,5,28,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1358,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1360,"                hasDecPoint = true;
",2,0,0,0,0,0,0,0,0,4,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1361,"            } else if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,8,0,0,0,0,13,48,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1363,"                if (hasExp) {
",2,0,0,1,3,0,0,0,0,2,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1365,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1367,"                if (!foundDigit) {
",2,0,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1368,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1370,"                hasExp = true;
",2,0,0,0,0,0,0,0,0,4,14,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1371,"                allowSigns = true;
",2,0,0,0,0,0,0,0,0,4,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1372,"            } else if (chars[i] == '+' || chars[i] == '-') {
",0,3,1,3,8,0,0,0,0,13,48,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1373,"                if (!allowSigns) {
",2,0,0,1,3,0,0,0,0,3,18,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1374,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1376,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1377,"                foundDigit = false; // we need a digit after the E
",2,0,0,0,0,0,0,0,0,4,50,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1379,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1381,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1383,"        if (i < chars.length) {
",6,1,0,1,3,0,0,0,0,7,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1384,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1386,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1388,"            if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1390,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1392,"            if (chars[i] == '.') {
",0,1,1,2,5,0,0,0,0,6,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1393,"                if (hasDecPoint || hasExp) {
",4,1,0,1,3,0,0,0,0,5,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1395,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1398,"                return foundDigit;
",2,0,0,0,0,1,0,0,0,2,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1400,"            if (!allowSigns
",2,0,0,0,1,0,0,0,0,3,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1405,"                return foundDigit;
",2,0,0,0,0,1,0,0,0,2,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1407,"            if (chars[i] == 'l'
",0,1,1,1,3,0,0,0,0,6,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1410,"                return foundDigit && !hasExp;
",4,1,0,0,0,1,0,0,0,6,29,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1413,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1417,"        return !allowSigns && foundDigit;
",4,1,0,0,0,1,0,0,0,6,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,168,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,212,"        return !StringUtils.isEmpty(cs);
",0,0,0,1,2,1,6,0,0,7,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,234,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,241,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,262,"        return !StringUtils.isBlank(cs);
",0,0,0,1,2,1,6,0,0,7,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,291,"        return str == null ? null : str.trim();
",2,1,0,1,2,1,4,0,0,7,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,317,"        String ts = trim(str);
",2,0,0,1,2,0,4,2,0,8,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,318,"        return isEmpty(ts) ? null : ts;
",2,0,0,1,2,1,4,0,0,7,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,343,"        return str == null ? EMPTY : str.trim();
",4,1,0,1,2,1,4,0,0,9,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,371,"        return strip(str, null);
",0,0,0,1,2,1,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,398,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,399,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,401,"        str = strip(str, null);
",2,0,0,1,2,0,4,0,0,8,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,402,"        return str.length() == 0 ? null : str;
",2,1,0,1,2,1,4,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,428,"        return str == null ? EMPTY : strip(str, null);
",4,1,0,1,2,1,4,0,0,10,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,458,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,459,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,461,"        str = stripStart(str, stripChars);
",2,0,0,1,2,0,6,0,0,9,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,462,"        return stripEnd(str, stripChars);
",0,0,0,1,2,1,6,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,491,"        if (str == null || (strLen = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,492,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,494,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,495,"        if (stripChars == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,496,"            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {
",4,2,0,4,9,0,10,0,0,16,72,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,497,"                start++;
",2,0,0,0,0,0,0,0,0,3,8,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,499,"        } else if (stripChars.length() == 0) {
",0,1,0,2,6,0,4,0,0,5,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,500,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,502,"            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {
",6,3,0,5,11,0,10,0,0,19,89,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,503,"                start++;
",2,0,0,0,0,0,0,0,0,3,8,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,506,"        return str.substring(start);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,535,"        if (str == null || (end = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,536,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,539,"        if (stripChars == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,540,"            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {
",4,3,0,4,9,0,8,0,0,15,67,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,541,"                end--;
",2,0,0,0,0,0,0,0,0,3,6,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,543,"        } else if (stripChars.length() == 0) {
",0,1,0,2,6,0,4,0,0,5,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,544,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,546,"            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {
",6,4,0,5,11,0,8,0,0,18,84,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,547,"                end--;
",2,0,0,0,0,0,0,0,0,3,6,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,550,"        return str.substring(0, end);
",0,0,0,1,2,1,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,575,"        return stripAll(strs, null);
",0,0,0,1,2,1,4,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,605,"        if (strs == null || (strsLen = strs.length) == 0) {
",8,3,0,2,5,0,0,0,0,12,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,606,"            return strs;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,608,"        String[] newArr = new String[strsLen];
",2,0,1,2,4,0,0,4,0,8,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,609,"        for (int i = 0; i < strsLen; i++) {
",8,1,0,1,3,0,0,0,0,10,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,610,"            newArr[i] = strip(strs[i], stripChars);
",0,0,1,3,6,0,4,0,0,13,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,612,"        return newArr;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,632,"        if(input == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,633,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,635,"        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {
",0,0,0,2,5,0,4,0,0,4,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,642,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);
",2,0,0,1,2,0,4,2,0,10,87,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,645,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);
",2,0,0,1,2,0,4,2,0,10,78,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,648,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );
",10,0,0,1,2,0,6,2,0,19,115,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,651,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");
",10,0,0,1,2,0,4,0,0,15,66,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,654,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );
",2,0,0,3,6,0,10,4,0,16,73,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,657,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");
",18,0,0,2,4,0,2,0,0,21,109,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,658,"                return accentPattern.matcher(decomposed).replaceAll("""");
",0,0,0,2,4,1,8,0,0,9,56,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,659,"            } catch(ClassNotFoundException cnfe) {
",2,0,0,1,4,0,0,2,0,4,38,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,660,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);
",2,0,0,1,2,0,0,2,0,5,95,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,661,"            } catch(NoSuchMethodException nsme) {
",2,0,0,1,4,0,0,2,0,4,37,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,662,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);
",2,0,0,1,2,0,0,2,0,5,94,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,663,"            } catch(NoSuchFieldException nsfe) {
",2,0,0,1,4,0,0,2,0,4,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,664,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);
",2,0,0,1,2,0,0,2,0,5,93,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,665,"            } catch(IllegalAccessException iae) {
",2,0,0,1,4,0,0,2,0,4,37,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,666,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);
",2,0,0,1,2,0,0,2,0,5,94,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,667,"            } catch(IllegalArgumentException iae) {
",2,0,0,1,4,0,0,2,0,4,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,668,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);
",2,0,0,1,2,0,0,2,0,5,96,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,669,"            } catch(java.lang.reflect.InvocationTargetException ite) {
",10,0,0,1,4,0,0,0,0,10,58,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,670,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);
",2,0,0,1,2,0,0,2,0,5,97,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,671,"            } catch(SecurityException se) {
",2,0,0,1,4,0,0,2,0,4,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,672,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);
",2,0,0,1,2,0,0,2,0,5,88,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,675,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");
",0,0,0,2,4,0,0,2,0,3,107,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,703,"        return cs1 == null ? cs2 == null : cs1.equals(cs2);
",4,2,0,1,2,1,6,0,0,12,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,728,"        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);
",4,2,0,1,2,1,6,0,0,12,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,753,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,754,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,756,"        return str.indexOf(searchChar);
",0,0,0,1,2,1,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,785,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,786,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,788,"        return str.indexOf(searchChar, startPos);
",0,0,0,1,2,1,8,0,0,8,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,815,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,816,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,818,"        return str.indexOf(searchStr);
",0,0,0,1,2,1,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,854,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,855,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,857,"        return str.indexOf(searchStr, startPos);
",0,0,0,1,2,1,8,0,0,8,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,894,"        return ordinalIndexOf(str, searchStr, ordinal, false);
",0,0,0,1,2,1,8,0,0,9,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,912,"        if (str == null || searchStr == null || ordinal <= 0) {
",6,5,0,1,3,0,0,0,0,11,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,913,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,915,"        if (searchStr.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,916,"            return lastIndex ? str.length() : 0;
",2,0,0,1,2,1,4,0,0,6,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,918,"        int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,919,"        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;
",6,0,0,1,2,0,4,0,0,10,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,921,"            if(lastIndex) {
",2,0,0,1,3,0,0,0,0,2,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,922,"                index = str.lastIndexOf(searchStr, index - 1);
",4,1,0,1,2,0,6,0,0,12,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,924,"                index = str.indexOf(searchStr, index + 1);
",4,1,0,1,2,0,6,0,0,12,42,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,926,"            if (index < 0) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,927,"                return index;
",2,0,0,0,0,1,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,929,"            found++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,930,"        } while (found < ordinal);
",4,1,0,1,3,0,0,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,931,"        return index;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,959,"        return indexOfIgnoreCase(str, searchStr, 0);
",0,0,0,1,2,1,6,0,0,6,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,994,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,995,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,997,"        if (startPos < 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,998,"            startPos = 0;
",2,0,0,0,0,0,0,0,0,3,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1000,"        int endLimit = (str.length() - searchStr.length()) + 1;
",2,2,0,3,6,0,8,0,0,12,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1001,"        if (startPos > endLimit) {
",4,1,0,1,3,0,0,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1002,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1004,"        if (searchStr.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1005,"            return startPos;
",2,0,0,0,0,1,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1007,"        for (int i = startPos; i < endLimit; i++) {
",10,1,0,1,3,0,0,0,0,12,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1008,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {
",0,0,0,3,7,0,12,0,0,13,67,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1009,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1012,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1037,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1038,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1040,"        return str.lastIndexOf(searchChar);
",0,0,0,1,2,1,6,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1071,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1072,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1074,"        return str.lastIndexOf(searchChar, startPos);
",0,0,0,1,2,1,8,0,0,8,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1100,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1101,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1103,"        return str.lastIndexOf(searchStr);
",0,0,0,1,2,1,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1140,"        return ordinalIndexOf(str, searchStr, ordinal, true);
",0,0,0,1,2,1,8,0,0,9,53,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1172,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1173,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1175,"        return str.lastIndexOf(searchStr, startPos);
",0,0,0,1,2,1,8,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1201,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1202,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1204,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());
",0,0,0,2,4,1,10,0,0,10,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1236,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1237,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1239,"        if (startPos > (str.length() - searchStr.length())) {
",2,2,0,4,9,0,8,0,0,12,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1240,"            startPos = str.length() - searchStr.length();
",2,1,0,2,4,0,8,0,0,12,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1242,"        if (startPos < 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1243,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1245,"        if (searchStr.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1246,"            return startPos;
",2,0,0,0,0,1,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1249,"        for (int i = startPos; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1250,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {
",0,0,0,3,7,0,12,0,0,13,67,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1251,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1254,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1279,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1280,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1282,"        return str.indexOf(searchChar) >= 0;
",0,1,0,1,2,1,6,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1307,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1308,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1310,"        return str.indexOf(searchStr) >= 0;
",0,1,0,1,2,1,6,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1337,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1338,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1340,"        int len = searchStr.length();
",2,0,0,1,2,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1341,"        int max = str.length() - len;
",4,1,0,1,2,0,4,0,0,9,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1342,"        for (int i = 0; i <= max; i++) {
",8,1,0,1,3,0,0,0,0,10,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1343,"            if (str.regionMatches(true, i, searchStr, 0, len)) {
",0,0,0,2,5,0,10,0,0,11,52,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1344,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1347,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1360,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1361,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1363,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1364,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1365,"            if (Character.isWhitespace(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,10,44,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1366,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1369,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1398,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1399,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1401,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1402,"        int csLast = csLen - 1;
",4,1,0,0,0,0,0,0,0,5,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1403,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1404,"        int searchLast = searchLen - 1;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1405,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1406,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1407,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1408,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1409,"                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
",8,4,0,2,5,0,6,0,0,18,68,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1411,"                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
",4,3,1,3,7,0,4,0,0,13,45,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1412,"                            return i;
",2,0,0,0,0,1,0,0,0,2,9,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1415,"                        return i;
",2,0,0,0,0,1,0,0,0,2,9,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1420,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1447,"        if (isEmpty(cs) || isEmpty(searchChars)) {
",0,1,0,3,7,0,8,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1448,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1450,"        return indexOfAny(cs, searchChars.toCharArray());
",0,0,0,2,4,1,8,0,0,8,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1479,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1480,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1482,"        int csLength = cs.length();
",2,0,0,1,2,0,4,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1483,"        int searchLength = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1484,"        int csLast = csLength - 1;
",4,1,0,0,0,0,0,0,0,5,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1485,"        int searchLast = searchLength - 1;
",4,1,0,0,0,0,0,0,0,5,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1486,"        for (int i = 0; i < csLength; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1487,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1488,"            for (int j = 0; j < searchLength; j++) {
",8,1,0,1,3,0,0,0,0,10,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1489,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1490,"                    if (Character.isHighSurrogate(ch)) {
",0,0,0,2,5,0,6,0,0,6,36,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1491,"                        if (j == searchLast) {
",4,1,0,1,3,0,0,0,0,5,22,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1493,"                            return true;
",0,0,0,0,0,1,0,0,0,1,12,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1495,"                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
",8,5,1,3,7,0,4,0,0,19,59,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1496,"                            return true;
",0,0,0,0,0,1,0,0,0,1,12,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1500,"                        return true;
",0,0,0,0,0,1,0,0,0,1,12,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1505,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1536,"        if (searchChars == null) {
",2,1,0,1,3,0,0,0,0,3,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1537,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1539,"        return containsAny(cs, searchChars.toCharArray());
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1568,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1569,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1571,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1572,"        int csLast = csLen - 1;
",4,1,0,0,0,0,0,0,0,5,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1573,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1574,"        int searchLast = searchLen - 1;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1576,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1577,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1578,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1579,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1580,"                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
",8,4,0,2,5,0,6,0,0,18,68,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1581,"                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
",4,3,1,3,7,0,4,0,0,13,45,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1582,"                            continue outer;
",2,0,0,0,0,0,0,0,0,2,15,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1589,"            return i;
",2,0,0,0,0,1,0,0,0,2,9,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1591,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1617,"        if (isEmpty(str) || isEmpty(searchChars)) {
",0,1,0,3,7,0,8,0,0,9,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1618,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1620,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1621,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1622,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1623,"            boolean chFound = searchChars.indexOf(ch) >= 0;
",2,1,0,1,2,0,6,0,0,9,47,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1624,"            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
",4,3,0,2,5,0,6,0,0,13,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1625,"                char ch2 = str.charAt(i + 1);
",4,1,0,1,2,0,4,0,0,9,29,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1626,"                if (chFound && searchChars.indexOf(ch2) < 0) {
",2,2,0,2,5,0,6,0,0,10,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1627,"                    return i;
",2,0,0,0,0,1,0,0,0,2,9,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1629,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1630,"                if (!chFound) {
",2,0,0,1,3,0,0,0,0,3,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1631,"                    return i;
",2,0,0,0,0,1,0,0,0,2,9,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1635,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1664,"        if (valid == null || cs == null) {
",4,3,0,1,3,0,0,0,0,7,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1665,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1667,"        if (cs.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1668,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1670,"        if (valid.length == 0) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1671,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1673,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1700,"        if (cs == null || validChars == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1701,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1703,"        return containsOnly(cs, validChars.toCharArray());
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1732,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1733,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1735,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1736,"        int csLast = csLen - 1;
",4,1,0,0,0,0,0,0,0,5,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1737,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1738,"        int searchLast = searchLen - 1;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1739,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1740,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1741,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1742,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1743,"                    if (Character.isHighSurrogate(ch)) {
",0,0,0,2,5,0,6,0,0,6,36,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1744,"                        if (j == searchLast) {
",4,1,0,1,3,0,0,0,0,5,22,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1746,"                            return false;
",0,0,0,0,0,1,0,0,0,1,13,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1748,"                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
",8,5,1,3,7,0,4,0,0,19,59,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1749,"                            return false;
",0,0,0,0,0,1,0,0,0,1,13,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1753,"                        return false;
",0,0,0,0,0,1,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1758,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1785,"        if (cs == null || invalidChars == null) {
",4,3,0,1,3,0,0,0,0,7,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1786,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1788,"        return containsNone(cs, invalidChars.toCharArray());
",0,0,0,2,4,1,8,0,0,8,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1820,"        if (str == null || searchStrs == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1821,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1823,"        int sz = searchStrs.length;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1826,"        int ret = Integer.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1828,"        int tmp = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1829,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1830,"            String search = searchStrs[i];
",2,0,1,1,2,0,0,2,0,8,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1831,"            if (search == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1832,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1834,"            tmp = str.indexOf(search);
",2,0,0,1,2,0,6,0,0,9,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1835,"            if (tmp == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1836,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1839,"            if (tmp < ret) {
",4,1,0,1,3,0,0,0,0,5,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1840,"                ret = tmp;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1844,"        return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;
",10,1,0,1,2,1,0,0,0,11,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1873,"        if (str == null || searchStrs == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1874,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1876,"        int sz = searchStrs.length;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1877,"        int ret = INDEX_NOT_FOUND;
",4,0,0,0,0,0,0,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1878,"        int tmp = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1879,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1880,"            String search = searchStrs[i];
",2,0,1,1,2,0,0,2,0,8,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1881,"            if (search == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1882,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1884,"            tmp = str.lastIndexOf(search);
",2,0,0,1,2,0,6,0,0,9,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1885,"            if (tmp > ret) {
",4,1,0,1,3,0,0,0,0,5,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1886,"                ret = tmp;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1889,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1919,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1920,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1924,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1925,"            start = str.length() + start; // remember start is negative
",4,1,0,1,2,0,4,0,0,10,59,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1928,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1929,"            start = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1931,"        if (start > str.length()) {
",2,1,0,2,5,0,4,0,0,7,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1932,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1935,"        return str.substring(start);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1974,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1975,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1979,"        if (end < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1980,"            end = str.length() + end; // remember end is negative
",4,1,0,1,2,0,4,0,0,10,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1982,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1983,"            start = str.length() + start; // remember start is negative
",4,1,0,1,2,0,4,0,0,10,59,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1987,"        if (end > str.length()) {
",2,1,0,2,5,0,4,0,0,7,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1988,"            end = str.length();
",2,0,0,1,2,0,4,0,0,7,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1992,"        if (start > end) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1993,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1996,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1997,"            start = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1999,"        if (end < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2000,"            end = 0;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2003,"        return str.substring(start, end);
",0,0,0,1,2,1,8,0,0,8,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2029,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2030,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2032,"        if (len < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2033,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2035,"        if (str.length() <= len) {
",2,1,0,2,5,0,4,0,0,7,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2036,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2038,"        return str.substring(0, len);
",0,0,0,1,2,1,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2062,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2063,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2065,"        if (len < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2066,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2068,"        if (str.length() <= len) {
",2,1,0,2,5,0,4,0,0,7,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2069,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2071,"        return str.substring(str.length() - len);
",2,1,0,2,4,1,8,0,0,11,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2099,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2100,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2102,"        if (len < 0 || pos > str.length()) {
",4,3,0,2,5,0,4,0,0,11,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2103,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2105,"        if (pos < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2106,"            pos = 0;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2108,"        if (str.length() <= (pos + len)) {
",4,2,0,3,7,0,4,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2109,"            return str.substring(pos);
",0,0,0,1,2,1,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2111,"        return str.substring(pos, pos + len);
",4,1,0,1,2,1,6,0,0,11,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2144,"        if (isEmpty(str) || separator == null) {
",2,2,0,2,5,0,4,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2145,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2147,"        if (separator.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2148,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2150,"        int pos = str.indexOf(separator);
",2,0,0,1,2,0,6,0,0,8,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2151,"        if (pos == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2152,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2154,"        return str.substring(0, pos);
",0,0,0,1,2,1,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2186,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2187,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2189,"        if (separator == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2190,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2192,"        int pos = str.indexOf(separator);
",2,0,0,1,2,0,6,0,0,8,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2193,"        if (pos == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2194,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2196,"        return str.substring(pos + separator.length());
",2,1,0,2,4,1,8,0,0,11,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2227,"        if (isEmpty(str) || isEmpty(separator)) {
",0,1,0,3,7,0,8,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2228,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2230,"        int pos = str.lastIndexOf(separator);
",2,0,0,1,2,0,6,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2231,"        if (pos == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2232,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2234,"        return str.substring(0, pos);
",0,0,0,1,2,1,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2267,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2268,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2270,"        if (isEmpty(separator)) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2271,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2273,"        int pos = str.lastIndexOf(separator);
",2,0,0,1,2,0,6,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2274,"        if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length())) {
",6,4,0,4,9,0,8,0,0,18,75,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2275,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2277,"        return str.substring(pos + separator.length());
",2,1,0,2,4,1,8,0,0,11,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2304,"        return substringBetween(str, tag, tag);
",0,0,0,1,2,1,8,0,0,8,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2335,"        if (str == null || open == null || close == null) {
",6,5,0,1,3,0,0,0,0,11,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2336,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2338,"        int start = str.indexOf(open);
",2,0,0,1,2,0,6,0,0,8,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2339,"        if (start != INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2340,"            int end = str.indexOf(close, start + open.length());
",4,1,0,2,4,0,10,0,0,15,52,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2341,"            if (end != INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2342,"                return str.substring(start + open.length(), end);
",2,1,0,2,4,1,10,0,0,13,49,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2345,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2371,"        if (str == null || isEmpty(open) || isEmpty(close)) {
",2,3,0,3,7,0,8,0,0,15,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2372,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2374,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2375,"        if (strLen == 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2376,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,1,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2378,"        int closeLen = close.length();
",2,0,0,1,2,0,4,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2379,"        int openLen = open.length();
",2,0,0,1,2,0,4,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2380,"        List<String> list = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2381,"        int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2382,"        while (pos < (strLen - closeLen)) {
",6,2,0,2,5,0,0,0,0,8,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2383,"            int start = str.indexOf(open, pos);
",2,0,0,1,2,0,8,0,0,10,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2384,"            if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2385,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2387,"            start += openLen;
",4,0,0,0,0,0,0,0,0,5,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2388,"            int end = str.indexOf(close, start);
",2,0,0,1,2,0,8,0,0,10,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2389,"            if (end < 0) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2390,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2392,"            list.add(str.substring(start, end));
",0,0,0,2,4,0,12,0,0,12,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2393,"            pos = end + closeLen;
",6,1,0,0,0,0,0,0,0,8,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2394,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2395,"        if (list.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2396,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2398,"        return list.toArray(new String [list.size()]);
",0,0,0,3,6,1,8,2,0,10,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2429,"        return split(str, null, -1);
",0,0,0,1,2,1,4,0,0,6,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2457,"        return splitWorker(str, separatorChar, false);
",0,0,0,1,2,1,6,0,0,7,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2486,"        return splitWorker(str, separatorChars, -1, false);
",0,0,0,1,2,1,6,0,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2520,"        return splitWorker(str, separatorChars, max, false);
",0,0,0,1,2,1,8,0,0,9,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2547,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;
",0,0,0,1,2,1,6,0,0,8,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2578,"        return splitByWholeSeparatorWorker(str, separator, max, false);
",0,0,0,1,2,1,8,0,0,9,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2607,"        return splitByWholeSeparatorWorker(str, separator, -1, true);
",0,0,0,1,2,1,6,0,0,8,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2640,"        return splitByWholeSeparatorWorker(str, separator, max, true);
",0,0,0,1,2,1,8,0,0,9,62,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2660,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2661,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2664,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2666,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2667,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,1,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2670,"        if ((separator == null) || (EMPTY.equals(separator))) {
",2,2,0,4,9,0,6,0,0,10,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2672,"            return splitWorker(str, null, max, preserveAllTokens);
",0,0,0,1,2,1,8,0,0,9,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2675,"        int separatorLength = separator.length();
",2,0,0,1,2,0,4,0,0,6,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2677,"        ArrayList<String> substrings = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2678,"        int numberOfSubstrings = 0;
",2,0,0,0,0,0,0,0,0,2,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2679,"        int beg = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2680,"        int end = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2681,"        while (end < len) {
",4,1,0,1,3,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2682,"            end = str.indexOf(separator, beg);
",2,0,0,1,2,0,8,0,0,11,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2684,"            if (end > -1) {
",2,1,0,1,3,0,0,0,0,4,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2685,"                if (end > beg) {
",4,1,0,1,3,0,0,0,0,5,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2686,"                    numberOfSubstrings += 1;
",2,0,0,0,0,0,0,0,0,3,24,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2688,"                    if (numberOfSubstrings == max) {
",4,1,0,1,3,0,0,0,0,5,32,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2689,"                        end = len;
",4,0,0,0,0,0,0,0,0,5,10,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2690,"                        substrings.add(str.substring(beg));
",0,0,0,2,4,0,10,0,0,10,35,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2694,"                        substrings.add(str.substring(beg, end));
",0,0,0,2,4,0,12,0,0,12,40,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2699,"                        beg = end + separatorLength;
",6,1,0,0,0,0,0,0,0,8,28,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2703,"                    if (preserveAllTokens) {
",2,0,0,1,3,0,0,0,0,2,24,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2704,"                        numberOfSubstrings += 1;
",2,0,0,0,0,0,0,0,0,3,24,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2705,"                        if (numberOfSubstrings == max) {
",4,1,0,1,3,0,0,0,0,5,32,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2706,"                            end = len;
",4,0,0,0,0,0,0,0,0,5,10,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2707,"                            substrings.add(str.substring(beg));
",0,0,0,2,4,0,10,0,0,10,35,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2709,"                            substrings.add(EMPTY);
",0,0,0,1,2,0,6,0,0,6,22,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2712,"                    beg = end + separatorLength;
",6,1,0,0,0,0,0,0,0,8,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2716,"                substrings.add(str.substring(beg));
",0,0,0,2,4,0,10,0,0,10,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2717,"                end = len;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2721,"        return substrings.toArray(new String[substrings.size()]);
",0,0,0,3,6,1,8,2,0,10,57,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2750,"        return splitWorker(str, null, -1, true);
",0,0,0,1,2,1,4,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2786,"        return splitWorker(str, separatorChar, true);
",0,0,0,1,2,1,6,0,0,7,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2804,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2805,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2807,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2808,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2809,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,1,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2811,"        List<String> list = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2812,"        int i = 0, start = 0;
",4,0,0,0,0,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2813,"        boolean match = false;
",2,0,0,0,0,0,0,0,0,3,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2814,"        boolean lastMatch = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2815,"        while (i < len) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2816,"            if (str.charAt(i) == separatorChar) {
",2,1,0,2,5,0,6,0,0,9,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2817,"                if (match || preserveAllTokens) {
",4,1,0,1,3,0,0,0,0,5,33,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2818,"                    list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2819,"                    match = false;
",2,0,0,0,0,0,0,0,0,4,14,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2820,"                    lastMatch = true;
",2,0,0,0,0,0,0,0,0,4,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2822,"                start = ++i;
",4,0,0,0,0,0,0,0,0,6,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2823,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2825,"            lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2826,"            match = true;
",2,0,0,0,0,0,0,0,0,4,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2827,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2829,"        if (match || (preserveAllTokens && lastMatch)) {
",6,2,0,2,5,0,0,0,0,8,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2830,"            list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2832,"        return list.toArray(new String[list.size()]);
",0,0,0,3,6,1,8,2,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2869,"        return splitWorker(str, separatorChars, -1, true);
",0,0,0,1,2,1,6,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2909,"        return splitWorker(str, separatorChars, max, true);
",0,0,0,1,2,1,8,0,0,9,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2931,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2932,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2934,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2935,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2936,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,1,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2938,"        List<String> list = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2939,"        int sizePlus1 = 1;
",2,0,0,0,0,0,0,0,0,2,18,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2940,"        int i = 0, start = 0;
",4,0,0,0,0,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2941,"        boolean match = false;
",2,0,0,0,0,0,0,0,0,3,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2942,"        boolean lastMatch = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2943,"        if (separatorChars == null) {
",2,1,0,1,3,0,0,0,0,3,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2945,"            while (i < len) {
",4,1,0,1,3,0,0,0,0,5,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2946,"                if (Character.isWhitespace(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,10,44,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2947,"                    if (match || preserveAllTokens) {
",4,1,0,1,3,0,0,0,0,5,33,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2948,"                        lastMatch = true;
",2,0,0,0,0,0,0,0,0,4,17,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2949,"                        if (sizePlus1++ == max) {
",4,1,0,1,3,0,0,0,0,6,25,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2950,"                            i = len;
",4,0,0,0,0,0,0,0,0,5,8,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2951,"                            lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2953,"                        list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2954,"                        match = false;
",2,0,0,0,0,0,0,0,0,4,14,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2956,"                    start = ++i;
",4,0,0,0,0,0,0,0,0,6,12,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2957,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2959,"                lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2960,"                match = true;
",2,0,0,0,0,0,0,0,0,4,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2961,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2963,"        } else if (separatorChars.length() == 1) {
",0,1,0,2,6,0,4,0,0,5,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2965,"            char sep = separatorChars.charAt(0);
",2,0,0,1,2,0,4,0,0,6,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2966,"            while (i < len) {
",4,1,0,1,3,0,0,0,0,5,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2967,"                if (str.charAt(i) == sep) {
",2,1,0,2,5,0,6,0,0,9,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2968,"                    if (match || preserveAllTokens) {
",4,1,0,1,3,0,0,0,0,5,33,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2969,"                        lastMatch = true;
",2,0,0,0,0,0,0,0,0,4,17,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2970,"                        if (sizePlus1++ == max) {
",4,1,0,1,3,0,0,0,0,6,25,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2971,"                            i = len;
",4,0,0,0,0,0,0,0,0,5,8,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2972,"                            lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2974,"                        list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2975,"                        match = false;
",2,0,0,0,0,0,0,0,0,4,14,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2977,"                    start = ++i;
",4,0,0,0,0,0,0,0,0,6,12,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2978,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2980,"                lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2981,"                match = true;
",2,0,0,0,0,0,0,0,0,4,13,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2982,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2984,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2986,"            while (i < len) {
",4,1,0,1,3,0,0,0,0,5,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2987,"                if (separatorChars.indexOf(str.charAt(i)) >= 0) {
",0,1,0,3,7,0,10,0,0,11,49,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2988,"                    if (match || preserveAllTokens) {
",4,1,0,1,3,0,0,0,0,5,33,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2989,"                        lastMatch = true;
",2,0,0,0,0,0,0,0,0,4,17,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2990,"                        if (sizePlus1++ == max) {
",4,1,0,1,3,0,0,0,0,6,25,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2991,"                            i = len;
",4,0,0,0,0,0,0,0,0,5,8,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2992,"                            lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2994,"                        list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2995,"                        match = false;
",2,0,0,0,0,0,0,0,0,4,14,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2997,"                    start = ++i;
",4,0,0,0,0,0,0,0,0,6,12,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2998,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3000,"                lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3001,"                match = true;
",2,0,0,0,0,0,0,0,0,4,13,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3002,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3005,"        if (match || (preserveAllTokens && lastMatch)) {
",6,2,0,2,5,0,0,0,0,8,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3006,"            list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3008,"        return list.toArray(new String[list.size()]);
",0,0,0,3,6,1,8,2,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3031,"        return splitByCharacterType(str, false);
",0,0,0,1,2,1,4,0,0,5,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3059,"        return splitByCharacterType(str, true);
",0,0,0,1,2,1,4,0,0,5,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3077,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3078,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3080,"        if (str.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3081,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,1,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3083,"        char[] c = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3084,"        List<String> list = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3085,"        int tokenStart = 0;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3086,"        int currentType = Character.getType(c[tokenStart]);
",2,0,1,2,4,0,4,0,0,10,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3087,"        for (int pos = tokenStart + 1; pos < c.length; pos++) {
",12,2,0,1,3,0,0,0,0,15,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3088,"            int type = Character.getType(c[pos]);
",2,0,1,2,4,0,4,0,0,10,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3089,"            if (type == currentType) {
",4,1,0,1,3,0,0,0,0,5,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3090,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3092,"            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {
",14,4,0,1,3,0,0,0,0,18,99,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3093,"                int newTokenStart = pos - 1;
",4,1,0,0,0,0,0,0,0,5,28,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3094,"                if (newTokenStart != tokenStart) {
",4,1,0,1,3,0,0,0,0,5,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3095,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));
",8,1,0,2,4,0,4,2,0,15,64,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3096,"                    tokenStart = newTokenStart;
",4,0,0,0,0,0,0,0,0,5,27,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3098,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3099,"                list.add(new String(c, tokenStart, pos - tokenStart));
",8,1,0,2,4,0,4,2,0,15,54,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3100,"                tokenStart = pos;
",4,0,0,0,0,0,0,0,0,5,17,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3102,"            currentType = type;
",4,0,0,0,0,0,0,0,0,5,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3104,"        list.add(new String(c, tokenStart, c.length - tokenStart));
",10,1,0,2,4,0,4,2,0,17,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3105,"        return list.toArray(new String[list.size()]);
",0,0,0,3,6,1,8,2,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3127,"        return join(elements, null);
",0,0,0,1,2,1,4,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3149,"        return join(elements, separator);
",0,0,0,1,2,1,6,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3173,"        return join(array, null);
",0,0,0,1,2,1,4,0,0,5,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3199,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3200,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3203,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,1,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3233,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3234,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3236,"        int bufSize = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3237,"        if (bufSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3238,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3241,"        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
",2,2,1,6,12,0,4,0,0,17,90,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3242,"        StringBuilder buf = new StringBuilder(bufSize);
",4,0,0,1,2,0,0,4,0,8,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3244,"        for (int i = startIndex; i < endIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3245,"            if (i > startIndex) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3246,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3248,"            if (array[i] != null) {
",0,1,1,2,5,0,0,0,0,5,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3249,"                buf.append(array[i]);
",0,0,1,2,4,0,4,0,0,8,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3252,"        return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3280,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3281,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3283,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,1,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3314,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3315,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3317,"        if (separator == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3318,"            separator = EMPTY;
",4,0,0,0,0,0,0,0,0,5,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3323,"        int bufSize = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3324,"        if (bufSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3325,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3328,"        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())
",2,1,1,5,11,0,4,0,0,16,84,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3331,"        StringBuilder buf = new StringBuilder(bufSize);
",4,0,0,1,2,0,0,4,0,8,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3333,"        for (int i = startIndex; i < endIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3334,"            if (i > startIndex) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3335,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3337,"            if (array[i] != null) {
",0,1,1,2,5,0,0,0,0,5,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3338,"                buf.append(array[i]);
",0,0,1,2,4,0,4,0,0,8,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3341,"        return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3361,"        if (iterator == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3362,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3364,"        if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3365,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3367,"        Object first = iterator.next();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3368,"        if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3369,"            return ObjectUtils.toString(first);
",0,0,0,1,2,1,6,0,0,6,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3373,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small
",2,0,0,1,2,0,0,4,0,6,85,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3374,"        if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3375,"            buf.append(first);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3378,"        while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3379,"            buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3380,"            Object obj = iterator.next();
",2,0,0,1,2,0,4,2,0,8,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3381,"            if (obj != null) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3382,"                buf.append(obj);
",0,0,0,1,2,0,6,0,0,6,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3384,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3386,"        return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3405,"        if (iterator == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3406,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3408,"        if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3409,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3411,"        Object first = iterator.next();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3412,"        if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3413,"            return ObjectUtils.toString(first);
",0,0,0,1,2,1,6,0,0,6,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3417,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small
",2,0,0,1,2,0,0,4,0,6,85,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3418,"        if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3419,"            buf.append(first);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3422,"        while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3423,"            if (separator != null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3424,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3426,"            Object obj = iterator.next();
",2,0,0,1,2,0,4,2,0,8,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3427,"            if (obj != null) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3428,"                buf.append(obj);
",0,0,0,1,2,0,6,0,0,6,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3430,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3431,"        return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3449,"        if (iterable == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3450,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3452,"        return join(iterable.iterator(), separator);
",0,0,0,2,4,1,8,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3470,"        if (iterable == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3471,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3473,"        return join(iterable.iterator(), separator);
",0,0,0,2,4,1,8,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3493,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3494,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3496,"        int sz = str.length();
",2,0,0,1,2,0,4,0,0,6,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3497,"        char[] chs = new char[sz];
",2,0,1,2,4,0,0,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3498,"        int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3499,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3500,"            if (!Character.isWhitespace(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,11,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3501,"                chs[count++] = str.charAt(i);
",2,0,1,2,4,0,6,0,0,12,29,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3504,"        if (count == sz) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3505,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3507,"        return new String(chs, 0, count);
",4,0,0,1,2,1,0,2,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3537,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3538,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3540,"        if (str.startsWith(remove)){
",0,0,0,2,5,0,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3541,"            return str.substring(remove.length());
",0,0,0,2,4,1,8,0,0,8,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3543,"        return str;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3572,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3573,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3575,"        if (startsWithIgnoreCase(str, remove)) {
",0,0,0,2,5,0,6,0,0,6,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3576,"            return str.substring(remove.length());
",0,0,0,2,4,1,8,0,0,8,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3578,"        return str;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3606,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3607,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3609,"        if (str.endsWith(remove)) {
",0,0,0,2,5,0,6,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3610,"            return str.substring(0, str.length() - remove.length());
",0,1,0,3,6,1,12,0,0,13,56,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3612,"        return str;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3642,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3643,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3645,"        if (endsWithIgnoreCase(str, remove)) {
",0,0,0,2,5,0,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3646,"            return str.substring(0, str.length() - remove.length());
",0,1,0,3,6,1,12,0,0,13,56,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3648,"        return str;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3675,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3676,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3678,"        return replace(str, remove, EMPTY, -1);
",0,0,0,1,2,1,8,0,0,9,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3701,"        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {
",2,2,0,3,7,0,10,0,0,14,61,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3702,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3704,"        char[] chars = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3705,"        int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3706,"        for (int i = 0; i < chars.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3707,"            if (chars[i] != remove) {
",2,1,1,2,5,0,0,0,0,7,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3708,"                chars[pos++] = chars[i];
",2,0,1,2,4,0,0,0,0,10,24,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3711,"        return new String(chars, 0, pos);
",4,0,0,1,2,1,0,2,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3740,"        return replace(text, searchString, replacement, 1);
",0,0,0,1,2,1,8,0,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3767,"        return replace(text, searchString, replacement, -1);
",0,0,0,1,2,1,8,0,0,9,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3799,"        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {
",4,4,0,3,7,0,8,0,0,18,80,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3800,"            return text;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3802,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3803,"        int end = text.indexOf(searchString, start);
",2,0,0,1,2,0,8,0,0,10,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3804,"        if (end == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3805,"            return text;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3807,"        int replLength = searchString.length();
",2,0,0,1,2,0,4,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3808,"        int increase = replacement.length() - replLength;
",4,1,0,1,2,0,4,0,0,9,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3809,"        increase = (increase < 0 ? 0 : increase);
",6,1,0,1,2,0,0,0,0,8,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3810,"        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));
",8,2,0,2,4,0,0,0,0,11,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3811,"        StringBuilder buf = new StringBuilder(text.length() + increase);
",4,1,0,2,4,0,4,4,0,13,64,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3812,"        while (end != INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3813,"            buf.append(text.substring(start, end)).append(replacement);
",0,0,0,3,6,0,16,0,0,16,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3814,"            start = end + replLength;
",6,1,0,0,0,0,0,0,0,8,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3815,"            if (--max == 0) {
",2,1,0,1,3,0,0,0,0,4,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3816,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3818,"            end = text.indexOf(searchString, start);
",2,0,0,1,2,0,8,0,0,11,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3820,"        buf.append(text.substring(start));
",0,0,0,2,4,0,10,0,0,10,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3821,"        return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3864,"        return replaceEach(text, searchList, replacementList, false, 0);
",0,0,0,1,2,1,8,0,0,9,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3915,"        int timeToLive = searchList == null ? 0 : searchList.length;
",8,1,0,0,0,0,0,0,0,9,60,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3916,"        return replaceEach(text, searchList, replacementList, true, timeToLive);
",0,0,0,1,2,1,10,0,0,11,72,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3974,"        if (text == null || text.length() == 0 || searchList == null ||
",4,8,0,1,3,0,4,0,0,16,63,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3977,"            return text;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3981,"        if (timeToLive < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3982,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);
",4,1,0,1,2,0,0,2,0,9,92,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3985,"        int searchLength = searchList.length;
",6,0,0,0,0,0,0,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3986,"        int replacementLength = replacementList.length;
",6,0,0,0,0,0,0,0,0,6,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3989,"        if (searchLength != replacementLength) {
",4,1,0,1,3,0,0,0,0,5,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3990,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: ""
",0,0,0,0,1,0,0,2,0,3,83,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3997,"        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
",2,0,1,2,4,0,0,0,0,4,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4000,"        int textIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4001,"        int replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,3,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4002,"        int tempIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4006,"        for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4007,"            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
",0,4,1,2,5,0,0,0,0,12,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4010,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4012,"            tempIndex = text.indexOf(searchList[i]);
",2,0,1,2,4,0,4,0,0,11,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4015,"            if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4016,"                noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4018,"                if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4019,"                    textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4020,"                    replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4027,"        if (textIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4028,"            return text;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4031,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4034,"        int increase = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4037,"        for (int i = 0; i < searchList.length; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4038,"            if (searchList[i] == null || replacementList[i] == null) {
",0,3,1,3,7,0,0,0,0,11,58,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4039,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4041,"            int greater = replacementList[i].length() - searchList[i].length();
",2,1,1,4,8,0,4,0,0,15,67,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4042,"            if (greater > 0) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4043,"                increase += 3 * greater; // assume 3 matches
",4,1,0,0,0,0,0,0,0,6,44,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4047,"        increase = Math.min(increase, text.length() / 5);
",2,1,0,2,4,0,10,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4049,"        StringBuilder buf = new StringBuilder(text.length() + increase);
",4,1,0,2,4,0,4,4,0,13,64,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4051,"        while (textIndex != -1) {
",2,1,0,1,3,0,0,0,0,4,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4053,"            for (int i = start; i < textIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4054,"                buf.append(text.charAt(i));
",0,0,0,2,4,0,10,0,0,10,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4056,"            buf.append(replacementList[replaceIndex]);
",0,0,1,2,4,0,4,0,0,8,42,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4058,"            start = textIndex + searchList[replaceIndex].length();
",4,1,1,2,4,0,2,0,0,12,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4060,"            textIndex = -1;
",2,0,0,0,0,0,0,0,0,4,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4061,"            replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,4,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4062,"            tempIndex = -1;
",2,0,0,0,0,0,0,0,0,4,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4065,"            for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4066,"                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
",0,4,1,2,5,0,0,0,0,12,60,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4069,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4071,"                tempIndex = text.indexOf(searchList[i], start);
",2,0,1,2,4,0,6,0,0,13,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4074,"                if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4075,"                    noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4077,"                    if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4078,"                        textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4079,"                        replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4086,"        int textLength = text.length();
",2,0,0,1,2,0,4,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4087,"        for (int i = start; i < textLength; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4088,"            buf.append(text.charAt(i));
",0,0,0,2,4,0,10,0,0,10,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4090,"        String result = buf.toString();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4091,"        if (!repeat) {
",2,0,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4092,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4095,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);
",2,1,0,1,2,1,10,0,0,13,80,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4121,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4122,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4124,"        return str.replace(searchChar, replaceChar);
",0,0,0,1,2,1,8,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4164,"        if (isEmpty(str) || isEmpty(searchChars)) {
",0,1,0,3,7,0,8,0,0,9,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4165,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4167,"        if (replaceChars == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4168,"            replaceChars = EMPTY;
",4,0,0,0,0,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4170,"        boolean modified = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4171,"        int replaceCharsLength = replaceChars.length();
",2,0,0,1,2,0,4,0,0,6,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4172,"        int strLength = str.length();
",2,0,0,1,2,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4173,"        StringBuilder buf = new StringBuilder(strLength);
",4,0,0,1,2,0,0,4,0,8,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4174,"        for (int i = 0; i < strLength; i++) {
",8,1,0,1,3,0,0,0,0,10,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4175,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4176,"            int index = searchChars.indexOf(ch);
",2,0,0,1,2,0,6,0,0,8,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4177,"            if (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4178,"                modified = true;
",2,0,0,0,0,0,0,0,0,4,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4179,"                if (index < replaceCharsLength) {
",4,1,0,1,3,0,0,0,0,5,33,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4180,"                    buf.append(replaceChars.charAt(index));
",0,0,0,2,4,0,10,0,0,10,39,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4183,"                buf.append(ch);
",0,0,0,1,2,0,6,0,0,6,15,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4186,"        if (modified) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4187,"            return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4189,"        return str;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4224,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4225,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4227,"        if (overlay == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4228,"            overlay = EMPTY;
",4,0,0,0,0,0,0,0,0,5,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4230,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4231,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4232,"            start = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4234,"        if (start > len) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4235,"            start = len;
",4,0,0,0,0,0,0,0,0,5,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4237,"        if (end < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4238,"            end = 0;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4240,"        if (end > len) {
",4,1,0,1,3,0,0,0,0,5,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4241,"            end = len;
",4,0,0,0,0,0,0,0,0,5,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4243,"        if (start > end) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4244,"            int temp = start;
",4,0,0,0,0,0,0,0,0,4,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4245,"            start = end;
",4,0,0,0,0,0,0,0,0,5,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4246,"            end = temp;
",4,0,0,0,0,0,0,0,0,5,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4248,"        return new StringBuilder(len + start - end + overlay.length() + 1)
",6,4,0,2,4,1,4,2,0,16,66,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4283,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4284,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4287,"        if (str.length() == 1) {
",0,1,0,2,5,0,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4288,"            char ch = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4289,"            if (ch == CharUtils.CR || ch == CharUtils.LF) {
",12,3,0,1,3,0,0,0,0,15,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4290,"                return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4292,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4295,"        int lastIdx = str.length() - 1;
",2,1,0,1,2,0,4,0,0,7,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4296,"        char last = str.charAt(lastIdx);
",2,0,0,1,2,0,6,0,0,8,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4298,"        if (last == CharUtils.LF) {
",6,1,0,1,3,0,0,0,0,7,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4299,"            if (str.charAt(lastIdx - 1) == CharUtils.CR) {
",6,2,0,2,5,0,4,0,0,12,46,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4300,"                lastIdx--;
",2,0,0,0,0,0,0,0,0,3,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4302,"        } else if (last != CharUtils.CR) {
",6,1,0,1,4,0,0,0,0,7,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4303,"            lastIdx++;
",2,0,0,0,0,0,0,0,0,3,10,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4305,"        return str.substring(0, lastIdx);
",0,0,0,1,2,1,6,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4335,"        if (isEmpty(str) || separator == null) {
",2,2,0,2,5,0,4,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4336,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4338,"        if (str.endsWith(separator)) {
",0,0,0,2,5,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4339,"            return str.substring(0, str.length() - separator.length());
",0,1,0,3,6,1,12,0,0,13,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4341,"        return str;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4370,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4371,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4373,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4374,"        if (strLen < 2) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4375,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4377,"        int lastIdx = strLen - 1;
",4,1,0,0,0,0,0,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4378,"        String ret = str.substring(0, lastIdx);
",2,0,0,1,2,0,6,2,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4379,"        char last = str.charAt(lastIdx);
",2,0,0,1,2,0,6,0,0,8,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4380,"        if (last == CharUtils.LF) {
",6,1,0,1,3,0,0,0,0,7,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4381,"            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {
",6,2,0,2,5,0,4,0,0,12,46,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4382,"                return ret.substring(0, lastIdx - 1);
",2,1,0,1,2,1,4,0,0,7,37,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4385,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4414,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4415,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4417,"        if (repeat <= 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4418,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4420,"        int inputLength = str.length();
",2,0,0,1,2,0,4,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4421,"        if (repeat == 1 || inputLength == 0) {
",4,3,0,1,3,0,0,0,0,7,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4422,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4424,"        if (inputLength == 1 && repeat <= PAD_LIMIT) {
",6,3,0,1,3,0,0,0,0,9,46,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4425,"            return padding(repeat, str.charAt(0));
",0,0,0,2,4,1,8,0,0,8,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4428,"        int outputLength = inputLength * repeat;
",6,1,0,0,0,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4429,"        switch (inputLength) {
",2,0,0,1,3,0,0,0,0,2,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4431,"                char ch = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4432,"                char[] output1 = new char[outputLength];
",2,0,1,2,4,0,0,0,0,4,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4433,"                for (int i = repeat - 1; i >= 0; i--) {
",8,2,0,1,3,0,0,0,0,11,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4434,"                    output1[i] = ch;
",2,0,1,1,2,0,0,0,0,7,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4436,"                return new String(output1);
",2,0,0,1,2,1,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4438,"                char ch0 = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4439,"                char ch1 = str.charAt(1);
",2,0,0,1,2,0,4,0,0,6,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4440,"                char[] output2 = new char[outputLength];
",2,0,1,2,4,0,0,0,0,4,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4441,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {
",10,3,0,1,3,0,0,0,0,15,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4442,"                    output2[i] = ch0;
",2,0,1,1,2,0,0,0,0,7,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4443,"                    output2[i + 1] = ch1;
",4,1,1,1,2,0,0,0,0,8,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4445,"                return new String(output2);
",2,0,0,1,2,1,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4447,"                StringBuilder buf = new StringBuilder(outputLength);
",4,0,0,1,2,0,0,4,0,8,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4448,"                for (int i = 0; i < repeat; i++) {
",8,1,0,1,3,0,0,0,0,10,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4449,"                    buf.append(str);
",0,0,0,1,2,0,6,0,0,6,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4451,"                return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4476,"        if(str == null || separator == null) {
",4,3,0,1,3,0,0,0,0,7,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4477,"            return repeat(str, repeat);
",0,0,0,1,2,1,6,0,0,6,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4480,"            String result = repeat(str + separator, repeat);
",6,1,0,1,2,0,4,2,0,13,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4481,"            return removeEnd(result, separator);
",0,0,0,1,2,1,6,0,0,6,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4509,"        if (repeat < 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4510,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);
",2,1,0,1,2,0,0,2,0,6,79,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4512,"        final char[] buf = new char[repeat];
",2,0,1,2,4,1,0,0,0,5,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4513,"        for (int i = 0; i < buf.length; i++) {
",10,1,0,1,3,0,0,0,0,12,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4514,"            buf[i] = padChar;
",2,0,1,1,2,0,0,0,0,7,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4516,"        return new String(buf);
",2,0,0,1,2,1,0,2,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4539,"        return rightPad(str, size, ' ');
",0,0,0,1,2,1,6,0,0,7,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4564,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4565,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4567,"        int pads = size - str.length();
",4,1,0,1,2,0,4,0,0,9,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4568,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4569,"            return str; // returns original String when possible
",2,0,0,0,0,1,0,0,0,2,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4571,"        if (pads > PAD_LIMIT) {
",4,1,0,1,3,0,0,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4572,"            return rightPad(str, size, String.valueOf(padChar));
",0,0,0,2,4,1,12,0,0,12,52,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4574,"        return str.concat(padding(pads, padChar));
",0,0,0,2,4,1,10,0,0,10,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4601,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4602,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4604,"        if (isEmpty(padStr)) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4605,"            padStr = "" "";
",2,0,0,0,0,0,0,0,0,4,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4607,"        int padLen = padStr.length();
",2,0,0,1,2,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4608,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4609,"        int pads = size - strLen;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4610,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4611,"            return str; // returns original String when possible
",2,0,0,0,0,1,0,0,0,2,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4613,"        if (padLen == 1 && pads <= PAD_LIMIT) {
",6,3,0,1,3,0,0,0,0,9,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4614,"            return rightPad(str, size, padStr.charAt(0));
",0,0,0,2,4,1,10,0,0,10,45,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4617,"        if (pads == padLen) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4618,"            return str.concat(padStr);
",0,0,0,1,2,1,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4619,"        } else if (pads < padLen) {
",4,1,0,1,4,0,0,0,0,5,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4620,"            return str.concat(padStr.substring(0, pads));
",0,0,0,2,4,1,10,0,0,10,45,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4622,"            char[] padding = new char[pads];
",2,0,1,2,4,0,0,0,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4623,"            char[] padChars = padStr.toCharArray();
",2,0,0,2,4,0,4,0,0,6,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4624,"            for (int i = 0; i < pads; i++) {
",8,1,0,1,3,0,0,0,0,10,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4625,"                padding[i] = padChars[i % padLen];
",4,1,1,2,4,0,0,0,0,12,34,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4627,"            return str.concat(new String(padding));
",2,0,0,2,4,1,4,2,0,8,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4651,"        return leftPad(str, size, ' ');
",0,0,0,1,2,1,6,0,0,7,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4676,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4677,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4679,"        int pads = size - str.length();
",4,1,0,1,2,0,4,0,0,9,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4680,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4681,"            return str; // returns original String when possible
",2,0,0,0,0,1,0,0,0,2,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4683,"        if (pads > PAD_LIMIT) {
",4,1,0,1,3,0,0,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4684,"            return leftPad(str, size, String.valueOf(padChar));
",0,0,0,2,4,1,12,0,0,12,51,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4686,"        return padding(pads, padChar).concat(str);
",0,0,0,2,4,1,10,0,0,10,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4713,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4714,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4716,"        if (isEmpty(padStr)) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4717,"            padStr = "" "";
",2,0,0,0,0,0,0,0,0,4,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4719,"        int padLen = padStr.length();
",2,0,0,1,2,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4720,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4721,"        int pads = size - strLen;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4722,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4723,"            return str; // returns original String when possible
",2,0,0,0,0,1,0,0,0,2,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4725,"        if (padLen == 1 && pads <= PAD_LIMIT) {
",6,3,0,1,3,0,0,0,0,9,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4726,"            return leftPad(str, size, padStr.charAt(0));
",0,0,0,2,4,1,10,0,0,10,44,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4729,"        if (pads == padLen) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4730,"            return padStr.concat(str);
",0,0,0,1,2,1,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4731,"        } else if (pads < padLen) {
",4,1,0,1,4,0,0,0,0,5,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4732,"            return padStr.substring(0, pads).concat(str);
",0,0,0,2,4,1,10,0,0,10,45,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4734,"            char[] padding = new char[pads];
",2,0,1,2,4,0,0,0,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4735,"            char[] padChars = padStr.toCharArray();
",2,0,0,2,4,0,4,0,0,6,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4736,"            for (int i = 0; i < pads; i++) {
",8,1,0,1,3,0,0,0,0,10,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4737,"                padding[i] = padChars[i % padLen];
",4,1,1,2,4,0,0,0,0,12,34,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4739,"            return new String(padding).concat(str);
",2,0,0,2,4,1,4,2,0,8,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4757,"        return CharSequenceUtils.length(cs);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4786,"        return center(str, size, ' ');
",0,0,0,1,2,1,6,0,0,7,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4814,"        if (str == null || size <= 0) {
",4,3,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4815,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4817,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4818,"        int pads = size - strLen;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4819,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4820,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4822,"        str = leftPad(str, strLen + pads / 2, padChar);
",6,2,0,1,2,0,6,0,0,15,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4823,"        str = rightPad(str, size, padChar);
",2,0,0,1,2,0,8,0,0,11,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4824,"        return str;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4854,"        if (str == null || size <= 0) {
",4,3,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4855,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4857,"        if (isEmpty(padStr)) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4858,"            padStr = "" "";
",2,0,0,0,0,0,0,0,0,4,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4860,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4861,"        int pads = size - strLen;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4862,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4863,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4865,"        str = leftPad(str, strLen + pads / 2, padStr);
",6,2,0,1,2,0,6,0,0,15,46,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4866,"        str = rightPad(str, size, padStr);
",2,0,0,1,2,0,8,0,0,11,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4867,"        return str;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4892,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4893,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4895,"        return str.toUpperCase();
",0,0,0,1,2,1,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4915,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4916,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4918,"        return str.toUpperCase(locale);
",0,0,0,1,2,1,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4941,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4942,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4944,"        return str.toLowerCase();
",0,0,0,1,2,1,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4964,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4965,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4967,"        return str.toLowerCase(locale);
",0,0,0,1,2,1,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4992,"        if (cs == null ) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4993,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4996,"        if ((strLen = cs.length()) == 0) {
",2,1,0,3,7,0,4,0,0,8,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4997,"            return cs.toString();
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4999,"        return new StringBuilder(strLen)
",2,0,0,1,2,1,0,2,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5027,"        if (cs == null ) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5028,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5031,"        if ((strLen = cs.length()) == 0) {
",2,1,0,3,7,0,4,0,0,8,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5032,"            return cs.toString();
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5034,"        return new StringBuilder(strLen)
",2,0,0,1,2,1,0,2,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5069,"        if (str == null || (strLen = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5070,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5072,"        StringBuilder buffer = new StringBuilder(strLen);
",4,0,0,1,2,0,0,4,0,8,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5074,"        char ch = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5075,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5076,"            ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,9,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5077,"            if (Character.isUpperCase(ch)) {
",0,0,0,2,5,0,6,0,0,6,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5078,"                ch = Character.toLowerCase(ch);
",2,0,0,1,2,0,6,0,0,9,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5079,"            } else if (Character.isTitleCase(ch)) {
",0,0,0,2,6,0,6,0,0,6,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5080,"                ch = Character.toLowerCase(ch);
",2,0,0,1,2,0,6,0,0,9,31,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5081,"            } else if (Character.isLowerCase(ch)) {
",0,0,0,2,6,0,6,0,0,6,39,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5082,"                ch = Character.toUpperCase(ch);
",2,0,0,1,2,0,6,0,0,9,31,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5084,"            buffer.append(ch);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5086,"        return buffer.toString();
",0,0,0,1,2,1,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5111,"        if (isEmpty(str) || isEmpty(sub)) {
",0,1,0,3,7,0,8,0,0,9,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5112,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5114,"        int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5115,"        int idx = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5116,"        while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND) {
",4,1,0,3,7,0,8,0,0,14,58,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5117,"            count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5118,"            idx += sub.length();
",2,0,0,1,2,0,4,0,0,7,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5120,"        return count;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5145,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5146,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5148,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5149,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5150,"            if (Character.isLetter(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5151,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5154,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5180,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5181,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5183,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5184,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5185,"            if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
",0,3,0,6,13,0,16,0,0,21,75,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5186,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5189,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5214,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5215,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5217,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5218,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5219,"            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,55,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5220,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5223,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5249,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5250,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5252,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5253,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5254,"            if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
",0,3,0,6,13,0,16,0,0,21,82,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5255,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5258,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5288,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5289,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5291,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5292,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5293,"            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,56,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5294,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5297,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5323,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5324,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5326,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5327,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5328,"            if (Character.isDigit(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5329,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5332,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5360,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5361,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5363,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5364,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5365,"            if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
",0,3,0,6,13,0,16,0,0,21,74,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5366,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5369,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5393,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5394,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5396,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5397,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5398,"            if ((Character.isWhitespace(cs.charAt(i)) == false)) {
",0,1,0,4,9,0,10,0,0,12,54,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5399,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5402,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5425,"        if (cs == null || isEmpty(cs)) {
",2,2,0,2,5,0,4,0,0,9,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5426,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5428,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5429,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5430,"            if (Character.isLowerCase(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,51,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5431,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5434,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5457,"        if (cs == null || isEmpty(cs)) {
",2,2,0,2,5,0,4,0,0,9,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5458,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5460,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5461,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5462,"            if (Character.isUpperCase(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,51,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5463,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5466,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5488,"        return str == null ? EMPTY : str;
",6,1,0,0,0,1,0,0,0,7,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5509,"        return str == null ? defaultStr : str;
",6,1,0,0,0,1,0,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5530,"        return StringUtils.isEmpty(str) ? defaultStr : str;
",4,0,0,1,2,1,6,0,0,10,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5550,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5551,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5553,"        return new StringBuilder(str).reverse().toString();
",2,0,0,3,6,1,4,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5576,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5577,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5581,"        String[] strs = split(str, separatorChar);
",2,0,0,2,4,0,6,2,0,10,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5582,"        ArrayUtils.reverse(strs);
",0,0,0,1,2,0,6,0,0,6,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5583,"        return join(strs, separatorChar);
",0,0,0,1,2,1,6,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5621,"        return abbreviate(str, 0, maxWidth);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5660,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5661,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5663,"        if (maxWidth < 4) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5664,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");
",0,0,0,1,2,0,0,2,0,3,70,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5666,"        if (str.length() <= maxWidth) {
",2,1,0,2,5,0,4,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5667,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5669,"        if (offset > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5670,"            offset = str.length();
",2,0,0,1,2,0,4,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5672,"        if ((str.length() - offset) < (maxWidth - 3)) {
",4,3,0,4,9,0,4,0,0,11,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5673,"            offset = str.length() - (maxWidth - 3);
",4,2,0,2,4,0,4,0,0,11,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5675,"        final String abrevMarker = ""..."";
",2,0,0,0,0,1,0,2,0,6,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5676,"        if (offset <= 4) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5677,"            return str.substring(0, maxWidth - 3) + abrevMarker;
",4,2,0,1,2,1,4,0,0,10,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5679,"        if (maxWidth < 7) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5680,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");
",0,0,0,1,2,0,0,2,0,3,82,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5682,"        if ((offset + (maxWidth - 3)) < str.length()) {
",4,3,0,4,9,0,4,0,0,11,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5683,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);
",4,2,0,2,4,1,8,0,0,14,69,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5685,"        return abrevMarker + str.substring(str.length() - (maxWidth - 3));
",4,3,0,3,6,1,8,0,0,15,66,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5718,"        if (isEmpty(str) || isEmpty(middle)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5719,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5722,"        if (length >= str.length() || length < (middle.length()+2)) {
",4,4,0,4,9,0,8,0,0,16,61,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5723,"            return str;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5726,"        int targetSting = length-middle.length();
",4,1,0,1,2,0,4,0,0,9,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5727,"        int startOffset = targetSting/2+targetSting%2;
",6,3,0,0,0,0,0,0,0,9,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5728,"        int endOffset = str.length()-targetSting/2;
",4,2,0,1,2,0,4,0,0,10,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5730,"        StringBuilder builder = new StringBuilder(length);
",4,0,0,1,2,0,0,4,0,8,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5731,"        builder.append(str.substring(0,startOffset));
",0,0,0,2,4,0,10,0,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5732,"        builder.append(middle);
",0,0,0,1,2,0,6,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5733,"        builder.append(str.substring(endOffset));
",0,0,0,2,4,0,10,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5735,"        return builder.toString();
",0,0,0,1,2,1,4,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5766,"        if (str1 == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5767,"            return str2;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5769,"        if (str2 == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5770,"            return str1;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5772,"        int at = indexOfDifference(str1, str2);
",2,0,0,1,2,0,6,0,0,8,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5773,"        if (at == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5774,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5776,"        return str2.substring(at);
",0,0,0,1,2,1,6,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5804,"        if (cs1 == cs2) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5805,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5807,"        if (cs1 == null || cs2 == null) {
",4,3,0,1,3,0,0,0,0,7,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5808,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5811,"        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {
",8,3,0,3,7,0,8,0,0,21,56,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5812,"            if (cs1.charAt(i) != cs2.charAt(i)) {
",0,1,0,3,7,0,12,0,0,13,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5813,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5816,"        if (i < cs2.length() || i < cs1.length()) {
",4,3,0,3,7,0,8,0,0,15,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5817,"            return i;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5819,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5855,"        if (css == null || css.length <= 1) {
",6,3,0,1,3,0,0,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5856,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5858,"        boolean anyStringNull = false;
",2,0,0,0,0,0,0,0,0,3,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5859,"        boolean allStringsNull = true;
",2,0,0,0,0,0,0,0,0,3,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5860,"        int arrayLen = css.length;
",6,0,0,0,0,0,0,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5861,"        int shortestStrLen = Integer.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5862,"        int longestStrLen = 0;
",2,0,0,0,0,0,0,0,0,2,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5867,"        for (int i = 0; i < arrayLen; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5868,"            if (css[i] == null) {
",0,1,1,2,5,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5869,"                anyStringNull = true;
",2,0,0,0,0,0,0,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5870,"                shortestStrLen = 0;
",2,0,0,0,0,0,0,0,0,3,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5872,"                allStringsNull = false;
",2,0,0,0,0,0,0,0,0,4,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5873,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);
",2,0,1,3,6,0,8,0,0,15,59,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5874,"                longestStrLen = Math.max(css[i].length(), longestStrLen);
",2,0,1,3,6,0,8,0,0,15,57,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5879,"        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {
",6,3,0,2,5,0,0,0,0,10,63,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5880,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5884,"        if (shortestStrLen == 0) {
",2,1,0,1,3,0,0,0,0,3,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5885,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5889,"        int firstDiff = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5890,"        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {
",8,1,0,1,3,0,0,0,0,10,66,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5891,"            char comparisonChar = css[0].charAt(stringPos);
",2,0,1,2,4,0,4,0,0,8,47,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5892,"            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {
",8,1,0,1,3,0,0,0,0,10,57,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5893,"                if (css[arrayPos].charAt(stringPos) != comparisonChar) {
",2,1,1,3,7,0,4,0,0,11,56,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5894,"                    firstDiff = stringPos;
",4,0,0,0,0,0,0,0,0,5,22,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5895,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5898,"            if (firstDiff != -1) {
",2,1,0,1,3,0,0,0,0,4,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5899,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5903,"        if (firstDiff == -1 && shortestStrLen != longestStrLen) {
",6,3,0,1,3,0,0,0,0,10,57,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5907,"            return shortestStrLen;
",2,0,0,0,0,1,0,0,0,2,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5909,"        return firstDiff;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5946,"        if (strs == null || strs.length == 0) {
",6,3,0,1,3,0,0,0,0,9,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5947,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5949,"        int smallestIndexOfDiff = indexOfDifference(strs);
",2,0,0,1,2,0,4,0,0,6,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5950,"        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5952,"            if (strs[0] == null) {
",0,1,1,2,5,0,0,0,0,3,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5953,"                return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5955,"            return strs[0];
",0,0,1,1,2,1,0,0,0,2,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5956,"        } else if (smallestIndexOfDiff == 0) {
",2,1,0,1,4,0,0,0,0,3,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5958,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5961,"            return strs[0].substring(0, smallestIndexOfDiff);
",0,0,1,2,4,1,4,0,0,6,49,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6003,"        if (s == null || t == null) {
",4,3,0,1,3,0,0,0,0,7,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6004,"            throw new IllegalArgumentException(""Strings must not be null"");
",0,0,0,1,2,0,0,2,0,4,63,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6024,"        int n = s.length(); // length of s
",2,0,0,1,2,0,4,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6025,"        int m = t.length(); // length of t
",2,0,0,1,2,0,4,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6027,"        if (n == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6028,"            return m;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6029,"        } else if (m == 0) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6030,"            return n;
",2,0,0,0,0,1,0,0,0,2,9,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6033,"        if (n > m) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6035,"            CharSequence tmp = s;
",4,0,0,0,0,0,0,2,0,6,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6036,"            s = t;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6037,"            t = tmp;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6038,"            n = m;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6039,"            m = t.length();
",2,0,0,1,2,0,4,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6042,"        int p[] = new int[n+1]; //'previous' cost array, horizontally
",4,1,0,2,4,0,0,0,0,5,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6043,"        int d[] = new int[n+1]; // cost array, horizontally
",4,1,0,2,4,0,0,0,0,5,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6054,"        for (i = 0; i<=n; i++) {
",8,1,0,1,3,0,0,0,0,11,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6055,"            p[i] = i;
",2,0,1,1,2,0,0,0,0,7,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6058,"        for (j = 1; j<=m; j++) {
",8,1,0,1,3,0,0,0,0,11,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6059,"            t_j = t.charAt(j-1);
",4,1,0,1,2,0,4,0,0,10,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6060,"            d[0] = j;
",2,0,1,1,2,0,0,0,0,5,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6062,"            for (i=1; i<=n; i++) {
",8,1,0,1,3,0,0,0,0,11,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6063,"                cost = s.charAt(i-1)==t_j ? 0 : 1;
",6,2,0,1,2,0,4,0,0,13,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6065,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);
",6,5,1,6,12,0,8,0,0,32,58,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6069,"            _d = p;
",4,0,0,0,0,0,0,0,0,5,7,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6070,"            p = d;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6071,"            d = _d;
",4,0,0,0,0,0,0,0,0,5,7,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6076,"        return p[n];
",0,0,1,1,2,1,0,0,0,4,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6104,"        return startsWith(str, prefix, false);
",0,0,0,1,2,1,6,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6129,"        return startsWith(str, prefix, true);
",0,0,0,1,2,1,6,0,0,7,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6144,"        if (str == null || prefix == null) {
",4,3,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6145,"            return (str == null && prefix == null);
",4,3,0,1,2,1,0,0,0,7,39,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6147,"        if (prefix.length() > str.length()) {
",0,1,0,3,7,0,8,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6148,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6150,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());
",0,0,0,2,4,1,12,0,0,12,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6172,"        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {
",0,1,0,3,7,0,10,0,0,11,59,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6173,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6175,"        for (int i = 0; i < searchStrings.length; i++) {
",10,1,0,1,3,0,0,0,0,12,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6176,"            String searchString = searchStrings[i];
",2,0,1,1,2,0,0,2,0,8,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6177,"            if (StringUtils.startsWith(string, searchString)) {
",0,0,0,2,5,0,8,0,0,8,51,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6178,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6181,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6210,"        return endsWith(str, suffix, false);
",0,0,0,1,2,1,6,0,0,7,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6236,"        return endsWith(str, suffix, true);
",0,0,0,1,2,1,6,0,0,7,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6251,"        if (str == null || suffix == null) {
",4,3,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6252,"            return str == null && suffix == null;
",4,3,0,0,0,1,0,0,0,7,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6254,"        if (suffix.length() > str.length()) {
",0,1,0,3,7,0,8,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6255,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6257,"        int strOffset = str.length() - suffix.length();
",2,1,0,2,4,0,8,0,0,11,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6258,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());
",0,0,0,2,4,1,14,0,0,14,76,5,0.00000,0
