dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,"            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
",2,1,0,4,8,0,4,4,0,11,67,6,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);
",0,0,0,1,2,0,6,0,0,6,24,7,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,"        if (string == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);
",4,0,0,1,2,0,6,0,0,10,39,5,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");
",0,0,0,1,2,0,4,0,0,5,19,11,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));
",0,0,0,2,4,0,10,0,0,10,38,11,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,"                    writer.write(';');
",0,0,0,1,2,0,4,0,0,5,18,11,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,"            return super.name(value);
",4,0,0,1,2,0,0,0,0,4,25,6,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,831,"                if (c > 0x7F) {
",2,1,0,1,3,0,0,0,0,3,15,8,0.33333,1
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);
",2,0,0,2,4,0,8,0,0,11,63,18,0.25000,0
defect4j,lang,org/apache/commons/lang/Entities,42,826,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,827,"        for (int i = 0; i < len; i++) {
",8,1,0,1,3,0,0,0,0,10,31,4,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,828,"            char c = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,829,"            String entityName = this.entityName(c);
",2,0,0,1,2,0,4,2,0,8,39,6,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,830,"            if (entityName == null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,844,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,951,"                        if (entityContentLen > 1) {
",2,1,0,1,3,0,0,0,0,3,27,12,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,952,"                            char isHexChar = entityContent.charAt(1);
",2,0,0,1,2,0,4,0,0,6,41,15,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,954,"                                switch (isHexChar) {
",2,0,0,1,3,0,0,0,0,2,20,16,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,964,"                                if (entityValue > 0xFFFF) {
",2,1,0,1,3,0,0,0,0,3,27,16,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,969,"                            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0
defect4j,lang,org/apache/commons/lang/Entities,42,970,"                        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,529,"            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
",2,1,0,4,8,0,4,4,0,11,67,6,0.16667,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,530,"            unescapeHtml(writer, str);
",0,0,0,1,2,0,6,0,0,6,26,7,0.16667,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,531,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.16667,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.16667,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,"        if (string == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);
",4,0,0,1,2,0,6,0,0,10,41,5,0.16667,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,564,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.16667,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,245,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.14286,0
defect4j,lang,org/apache/commons/lang/Entities,42,981,"                    writer.write(entityValue);
",0,0,0,1,2,0,6,0,0,6,26,11,0.12500,0
defect4j,lang,org/apache/commons/lang/Entities,42,533,"            if (value < LOOKUP_TABLE_SIZE) {
",4,1,0,1,3,0,0,0,0,5,32,5,0.12500,0
defect4j,lang,org/apache/commons/lang/Entities,42,766,"        return map.name(value);
",0,0,0,1,2,0,6,0,0,6,23,5,0.11111,0
defect4j,lang,org/apache/commons/lang/Entities,42,457,"            return (String) mapValueToName.get(value);
",0,0,0,2,4,0,6,2,0,8,42,6,0.10000,0
defect4j,lang,org/apache/commons/lang/Entities,42,905,"        int firstAmp = str.indexOf('&');
",2,0,0,1,2,0,4,0,0,7,32,5,0.10000,0
defect4j,lang,org/apache/commons/lang/Entities,42,906,"        if (firstAmp < 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.10000,0
defect4j,lang,org/apache/commons/lang/Entities,42,910,"            doUnescape(writer, str, firstAmp);
",0,0,0,1,2,0,8,0,0,8,34,7,0.10000,0
defect4j,lang,org/apache/commons/lang/Entities,42,912,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,237,"        Entry tab[] = table;
",4,0,0,1,2,0,0,2,0,6,20,4,0.10000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,238,"        int hash = key;
",4,0,0,0,0,0,0,0,0,4,15,5,0.10000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,239,"        int index = (hash & 0x7FFFFFFF) % tab.length;
",8,2,0,1,2,0,0,0,0,10,45,5,0.10000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,240,"        for (Entry e = tab[index]; e != null; e = e.next) {
",10,1,1,2,5,0,0,2,0,18,51,4,0.10000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,241,"            if (e.hash == hash) {
",6,1,0,1,3,0,0,0,0,7,21,6,0.10000,0
defect4j,lang,org/apache/commons/lang/Entities,42,928,"        writer.write(str, 0, firstAmp);
",0,0,0,1,2,0,8,0,0,8,31,5,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,929,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,930,"        for (int i = firstAmp; i < len; i++) {
",10,1,0,1,3,0,0,0,0,12,38,4,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,931,"            char c = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,932,"            if (c == '&') {
",2,1,0,1,3,0,0,0,0,4,15,6,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,933,"                int nextIdx = i + 1;
",4,1,0,0,0,0,0,0,0,5,20,9,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,934,"                int semiColonIdx = str.indexOf(';', nextIdx);
",2,0,0,1,2,0,6,0,0,9,45,9,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,935,"                if (semiColonIdx == -1) {
",2,1,0,1,3,0,0,0,0,4,25,8,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,939,"                int amphersandIdx = str.indexOf('&', i + 1);
",4,1,0,1,2,0,4,0,0,10,44,9,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,940,"                if (amphersandIdx != -1 && amphersandIdx < semiColonIdx) {
",6,3,0,1,3,0,0,0,0,10,58,8,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,945,"                String entityContent = str.substring(nextIdx, semiColonIdx);
",2,0,0,1,2,0,8,2,0,12,60,8,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,946,"                int entityValue = -1;
",2,0,0,0,0,0,0,0,0,3,21,9,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,947,"                int entityContentLen = entityContent.length();
",2,0,0,1,2,0,4,0,0,6,46,9,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,948,"                if (entityContentLen > 0) {
",2,1,0,1,3,0,0,0,0,3,27,8,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,949,"                    if (entityContent.charAt(0) == '#') { // escaped value content is an integer (decimal or
",0,1,0,2,6,0,4,0,0,6,88,10,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,976,"                if (entityValue == -1) {
",2,1,0,1,3,0,0,0,0,4,24,8,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,983,"                i = semiColonIdx; // move index up to the semi-colon
",4,0,0,0,0,0,0,0,0,5,52,8,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,984,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.09091,0
defect4j,lang,org/apache/commons/lang/Entities,42,988,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,46,"    private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
",2,0,0,1,2,3,6,2,0,13,70,2,0.05556,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,47,"    private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};
",14,0,0,3,6,3,0,0,0,17,113,2,0.05556,0
defect4j,lang,org/apache/commons/lang/Entities,42,440,"    static class PrimitiveEntityMap implements EntityMap {
",2,0,0,0,1,1,0,2,0,5,54,2,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,441,"        private Map mapNameToValue = new HashMap();
",2,0,0,1,2,1,0,4,0,7,43,3,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,443,"        private IntHashMap mapValueToName = new IntHashMap();
",2,0,0,1,2,1,0,4,0,7,53,3,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,449,"            mapNameToValue.put(name, new Integer(value));
",2,0,0,2,4,0,6,2,0,10,45,6,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,450,"            mapValueToName.put(value, name);
",0,0,0,1,2,0,8,0,0,8,32,6,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,451,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,43,"class Entities {
",2,0,0,0,1,0,0,0,0,2,16,1,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,726,"    EntityMap map = new Entities.LookupEntityMap();
",6,0,0,1,2,0,0,2,0,8,47,2,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,45,"    private static final String[][] BASIC_ARRAY = {{""quot"", ""34""}, // "" - double-quote
",2,0,0,3,7,3,0,2,0,9,82,2,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,51,"    private static final String[][] APOS_ARRAY = {{""apos"", ""39""}, // XML apostrophe
",2,0,0,3,7,3,0,2,0,9,79,2,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,55,"    static final String[][] ISO8859_1_ARRAY = {{""nbsp"", ""160""}, // non-breaking space
",2,0,0,3,7,2,0,2,0,8,81,2,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,155,"    static final String[][] HTML40_ARRAY = {
",2,0,0,2,5,2,0,2,0,6,40,2,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,374,"        XML = new Entities();
",2,0,0,1,2,0,0,2,0,5,21,4,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,375,"        XML.addEntities(BASIC_ARRAY);
",0,0,0,1,2,0,6,0,0,6,29,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,376,"        XML.addEntities(APOS_ARRAY);
",0,0,0,1,2,0,6,0,0,6,28,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,380,"        HTML32 = new Entities();
",2,0,0,1,2,0,0,2,0,5,24,4,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,381,"        HTML32.addEntities(BASIC_ARRAY);
",0,0,0,1,2,0,6,0,0,6,32,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,382,"        HTML32.addEntities(ISO8859_1_ARRAY);
",0,0,0,1,2,0,6,0,0,6,36,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,386,"        HTML40 = new Entities();
",2,0,0,1,2,0,0,2,0,5,24,4,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,387,"        fillWithHtml40Entities(HTML40);
",0,0,0,1,2,0,4,0,0,4,31,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,388,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,399,"        entities.addEntities(BASIC_ARRAY);
",0,0,0,1,2,0,6,0,0,6,34,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,400,"        entities.addEntities(ISO8859_1_ARRAY);
",0,0,0,1,2,0,6,0,0,6,38,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,401,"        entities.addEntities(HTML40_ARRAY);
",0,0,0,1,2,0,6,0,0,6,35,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,402,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,737,"        for (int i = 0; i < entityArray.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,46,4,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,738,"            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));
",0,0,1,6,12,0,6,0,0,14,66,7,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,740,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,753,"        map.add(name, value);
",0,0,0,1,2,0,8,0,0,8,21,5,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,754,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,524,"    static class LookupEntityMap extends PrimitiveEntityMap {
",2,0,0,0,1,1,0,2,0,5,57,2,0.02326,0
defect4j,lang,org/apache/commons/lang/Entities,42,527,"        private int LOOKUP_TABLE_SIZE = 256;
",2,0,0,0,0,1,0,0,0,3,36,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,96,"        this(20, 0.75f);
",0,0,0,1,2,0,0,0,0,0,16,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,97,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,121,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,122,"        if (initialCapacity < 0) {
",2,1,0,1,3,0,0,0,0,3,26,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,125,"        if (loadFactor <= 0) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,128,"        if (initialCapacity == 0) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,132,"        this.loadFactor = loadFactor;
",4,0,0,0,0,0,0,0,0,5,29,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,133,"        table = new Entry[initialCapacity];
",2,0,1,1,2,0,0,2,0,7,35,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,134,"        threshold = (int) (initialCapacity * loadFactor);
",6,1,0,2,4,0,0,0,0,8,49,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,135,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,258,"        int oldCapacity = table.length;
",6,0,0,0,0,0,0,0,0,6,31,5,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,259,"        Entry oldMap[] = table;
",4,0,0,1,2,0,0,2,0,6,23,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,261,"        int newCapacity = oldCapacity * 2 + 1;
",4,2,0,0,0,0,0,0,0,6,38,5,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,262,"        Entry newMap[] = new Entry[newCapacity];
",2,0,1,2,4,0,0,4,0,8,40,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,264,"        threshold = (int) (newCapacity * loadFactor);
",6,1,0,2,4,0,0,0,0,8,45,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,265,"        table = newMap;
",4,0,0,0,0,0,0,0,0,5,15,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,267,"        for (int i = oldCapacity; i-- > 0;) {
",6,1,0,1,3,0,0,0,0,8,37,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,268,"            for (Entry old = oldMap[i]; old != null;) {
",4,1,1,2,5,0,0,2,0,11,43,6,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,269,"                Entry e = old;
",4,0,0,0,0,0,0,2,0,6,14,8,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,270,"                old = old.next;
",6,0,0,0,0,0,0,0,0,7,15,8,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,272,"                int index = (e.hash & 0x7FFFFFFF) % newCapacity;
",8,2,0,1,2,0,0,0,0,10,48,9,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,273,"                e.next = newMap[index];
",4,0,1,1,2,0,0,0,0,9,23,8,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,274,"                newMap[index] = e;
",2,0,1,1,2,0,0,0,0,7,18,8,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,275,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,277,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,296,"        Entry tab[] = table;
",4,0,0,1,2,0,0,2,0,6,20,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,297,"        int hash = key;
",4,0,0,0,0,0,0,0,0,4,15,5,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,298,"        int index = (hash & 0x7FFFFFFF) % tab.length;
",8,2,0,1,2,0,0,0,0,10,45,5,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,299,"        for (Entry e = tab[index]; e != null; e = e.next) {
",10,1,1,2,5,0,0,2,0,18,51,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,300,"            if (e.hash == hash) {
",6,1,0,1,3,0,0,0,0,7,21,6,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,307,"        if (count >= threshold) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,309,"            rehash();
",0,0,0,1,2,0,2,0,0,2,9,7,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,311,"            tab = table;
",4,0,0,0,0,0,0,0,0,5,12,6,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,312,"            index = (hash & 0x7FFFFFFF) % tab.length;
",8,2,0,1,2,0,0,0,0,11,41,6,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,316,"        Entry e = new Entry(hash, key, value, tab[index]);
",8,0,1,2,4,0,0,4,0,16,50,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,317,"        tab[index] = e;
",2,0,1,1,2,0,0,0,0,7,15,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,318,"        count++;
",2,0,0,0,0,0,0,0,0,3,8,4,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,319,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,83,"        protected Entry(int hash, int key, Object value, Entry next) {
",10,0,0,1,3,1,0,4,0,15,62,3,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,84,"            this.hash = hash;
",4,0,0,0,0,0,0,0,0,5,17,5,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,85,"            this.key = key;
",4,0,0,0,0,0,0,0,0,5,15,5,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,86,"            this.value = value;
",4,0,0,0,0,0,0,0,0,5,19,5,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,87,"            this.next = next;
",4,0,0,0,0,0,0,0,0,5,17,5,0.02326,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,88,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,60,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,87,"        return escapeJavaStyleString(str, false, false);
",0,0,0,1,2,0,4,0,0,6,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,103,"        escapeJavaStyleString(out, str, false, false);
",0,0,0,1,2,0,6,0,0,8,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,104,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,128,"        return escapeJavaStyleString(str, true, true);
",0,0,0,1,2,0,4,0,0,6,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,144,"        escapeJavaStyleString(out, str, true, true);
",0,0,0,1,2,0,6,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,145,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,156,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,157,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,160,"            StringWriter writer = new StringWriter(str.length() * 2);
",2,1,0,2,4,0,4,4,0,11,57,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,161,"            escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);
",0,0,0,1,2,0,10,0,0,10,75,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,162,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,163,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,165,"            throw new UnhandledException(ioe);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,180,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,181,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,183,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,184,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,187,"        sz = str.length();
",2,0,0,1,2,0,4,0,0,7,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,188,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,189,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,192,"            if (ch > 0xfff) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,193,"                out.write(""\\u"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,194,"            } else if (ch > 0xff) {
",2,1,0,1,4,0,0,0,0,3,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,195,"                out.write(""\\u0"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,196,"            } else if (ch > 0x7f) {
",2,1,0,1,4,0,0,0,0,3,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,197,"                out.write(""\\u00"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,29,11,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,198,"            } else if (ch < 32) {
",2,1,0,1,4,0,0,0,0,3,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,199,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,201,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,202,"                        out.write('b');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,203,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,205,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,206,"                        out.write('n');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,207,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,209,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,210,"                        out.write('t');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,211,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,213,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,214,"                        out.write('f');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,215,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,217,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,218,"                        out.write('r');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,219,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,221,"                        if (ch > 0xf) {
",2,1,0,1,3,0,0,0,0,3,15,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,222,"                            out.write(""\\u00"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,29,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,224,"                            out.write(""\\u000"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,30,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,226,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,229,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,231,"                        if (escapeSingleQuote) {
",2,0,0,1,3,0,0,0,0,2,24,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,232,"                            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,234,"                        out.write('\'');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,235,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,237,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,238,"                        out.write('""');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,239,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,241,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,242,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,243,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,245,"                        if (escapeForwardSlash) {
",2,0,0,1,3,0,0,0,0,2,25,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,246,"                            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,248,"                        out.write('/');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,249,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,251,"                        out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,256,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,266,"        return Integer.toHexString(ch).toUpperCase(Locale.ENGLISH);
",4,0,0,2,4,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,279,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,280,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,283,"            StringWriter writer = new StringWriter(str.length());
",2,0,0,2,4,0,4,4,0,10,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,284,"            unescapeJava(writer, str);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,285,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,286,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,288,"            throw new UnhandledException(ioe);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,308,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,309,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,311,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,312,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,314,"        int sz = str.length();
",2,0,0,1,2,0,4,0,0,6,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,315,"        StringBuffer unicode = new StringBuffer(4);
",2,0,0,1,2,0,0,4,0,6,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,316,"        boolean hadSlash = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,317,"        boolean inUnicode = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,318,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,319,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,320,"            if (inUnicode) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,323,"                unicode.append(ch);
",0,0,0,1,2,0,6,0,0,6,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,324,"                if (unicode.length() == 4) {
",0,1,0,2,5,0,4,0,0,5,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,328,"                        int value = Integer.parseInt(unicode.toString(), 16);
",2,0,0,2,4,0,8,0,0,10,53,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,329,"                        out.write((char) value);
",2,0,0,2,4,0,4,0,0,6,24,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,330,"                        unicode.setLength(0);
",0,0,0,1,2,0,4,0,0,4,21,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,331,"                        inUnicode = false;
",2,0,0,0,0,0,0,0,0,4,18,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,332,"                        hadSlash = false;
",2,0,0,0,0,0,0,0,0,4,17,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,335,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,333,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,334,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);
",4,1,0,1,2,0,0,2,0,8,85,14,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,339,"            if (hadSlash) {
",2,0,0,1,3,0,0,0,0,2,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,341,"                hadSlash = false;
",2,0,0,0,0,0,0,0,0,4,17,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,342,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,344,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,345,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,347,"                        out.write('\'');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,348,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,350,"                        out.write('""');
",0,0,0,1,2,0,4,0,0,5,15,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,351,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,353,"                        out.write('\r');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,354,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,356,"                        out.write('\f');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,357,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,359,"                        out.write('\t');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,360,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,362,"                        out.write('\n');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,363,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,365,"                        out.write('\b');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,366,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,370,"                            inUnicode = true;
",2,0,0,0,0,0,0,0,0,4,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,371,"                            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,374,"                        out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,375,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,378,"            } else if (ch == '\\') {
",2,1,0,1,4,0,0,0,0,4,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,379,"                hadSlash = true;
",2,0,0,0,0,0,0,0,0,4,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,380,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,382,"            out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,384,"        if (hadSlash) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,387,"            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,389,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,403,"        return unescapeJava(str);
",0,0,0,1,2,0,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,423,"        unescapeJava(out, str);
",0,0,0,1,2,0,6,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,424,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,456,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,462,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,464,"            throw new UnhandledException(ioe);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,499,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,502,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,526,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,532,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,534,"            throw new UnhandledException(ioe);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,558,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,561,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,587,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,588,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,590,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,591,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,593,"        Entities.XML.escape(writer, str);
",4,0,0,1,2,0,6,0,0,10,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,594,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,614,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,615,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,617,"        return Entities.XML.escape(str);
",4,0,0,1,2,0,4,0,0,8,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,639,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,640,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,642,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,643,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,645,"        Entities.XML.unescape(writer, str);
",4,0,0,1,2,0,6,0,0,10,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,646,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,664,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,665,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,667,"        return Entities.XML.unescape(str);
",4,0,0,1,2,0,4,0,0,8,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,690,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,691,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,693,"        return StringUtils.replace(str, ""'"", ""''"");
",0,0,0,1,2,0,6,0,0,8,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,721,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {
",0,0,0,2,5,0,8,0,0,8,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,722,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,725,"            StringWriter writer = new StringWriter();
",2,0,0,1,2,0,0,4,0,6,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,726,"            escapeCsv(writer, str);
",0,0,0,1,2,0,6,0,0,6,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,727,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,728,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,730,"            throw new UnhandledException(ioe);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,758,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {
",0,0,0,2,5,0,8,0,0,8,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,759,"            if (str != null) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,760,"                out.write(str);
",0,0,0,1,2,0,6,0,0,6,15,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,762,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,764,"        out.write(CSV_QUOTE);
",0,0,0,1,2,0,6,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,765,"        for (int i = 0; i < str.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,766,"            char c = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,767,"            if (c == CSV_QUOTE) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,768,"                out.write(CSV_QUOTE); // escape double quote
",0,0,0,1,2,0,6,0,0,6,44,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,770,"            out.write(c);
",0,0,0,1,2,0,6,0,0,6,13,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,772,"        out.write(CSV_QUOTE);
",0,0,0,1,2,0,6,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,773,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,798,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,799,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,802,"            StringWriter writer = new StringWriter();
",2,0,0,1,2,0,0,4,0,6,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,803,"            unescapeCsv(writer, str);
",0,0,0,1,2,0,6,0,0,6,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,804,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,805,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,807,"            throw new UnhandledException(ioe);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,835,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,836,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,838,"        if (str.length() < 2) {
",0,1,0,2,5,0,4,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,839,"            out.write(str);
",0,0,0,1,2,0,6,0,0,6,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,840,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,842,"        if ( str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE ) {
",4,4,0,4,9,0,12,0,0,20,80,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,843,"            out.write(str);
",0,0,0,1,2,0,6,0,0,6,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,844,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,848,"        String quoteless = str.substring(1, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,850,"        if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {
",0,0,0,2,5,0,8,0,0,8,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,852,"            str = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR);
",6,1,0,1,2,0,8,0,0,16,83,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,855,"        out.write(str);
",0,0,0,1,2,0,6,0,0,6,15,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,856,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/UnhandledException,42,60,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/UnhandledException,42,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/UnhandledException,42,70,"        super(message, cause);
",4,0,0,1,2,0,0,0,0,4,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/UnhandledException,42,71,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,60,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,47,"    protected NestableDelegate delegate = new NestableDelegate(this);
",2,0,0,1,2,1,0,4,0,7,65,2,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,53,"    private Throwable cause = null;
",2,0,0,0,0,1,0,2,0,5,31,2,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,70,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,71,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,81,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,82,"        this.cause = cause;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,83,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,94,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,95,"        this.cause = cause;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,96,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,102,"        return cause;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,113,"        if (super.getMessage() != null) {
",2,1,0,2,5,0,0,0,0,3,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,114,"            return super.getMessage();
",2,0,0,1,2,0,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,115,"        } else if (cause != null) {
",2,1,0,1,4,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,116,"            return cause.toString();
",0,0,0,1,2,0,4,0,0,4,24,8,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,118,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,126,"        if (index == 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,127,"            return super.getMessage();
",2,0,0,1,2,0,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,129,"        return delegate.getMessage(index);
",0,0,0,1,2,0,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,136,"        return delegate.getMessages();
",0,0,0,1,2,0,4,0,0,4,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,143,"        return delegate.getThrowable(index);
",0,0,0,1,2,0,6,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,150,"        return delegate.getThrowableCount();
",0,0,0,1,2,0,4,0,0,4,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,157,"        return delegate.getThrowables();
",0,0,0,1,2,0,4,0,0,4,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,164,"        return delegate.indexOfThrowable(type, 0);
",0,0,0,1,2,0,6,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,171,"        return delegate.indexOfThrowable(type, fromIndex);
",0,0,0,1,2,0,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,178,"        delegate.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,179,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,185,"        delegate.printStackTrace(out);
",0,0,0,1,2,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,186,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,192,"        delegate.printStackTrace(out);
",0,0,0,1,2,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,193,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,199,"        super.printStackTrace(out);
",4,0,0,1,2,0,0,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,42,200,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,464,"            Object value = mapNameToValue.get(name);
",2,0,0,1,2,0,6,2,0,10,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,465,"            if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,466,"                return -1;
",0,0,0,0,0,0,0,0,0,1,10,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,468,"            return ((Integer) value).intValue();
",2,0,0,3,6,0,2,2,0,6,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,779,"        return map.value(name);
",0,0,0,1,2,0,6,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,797,"        StringWriter stringWriter = createStringWriter(str);
",2,0,0,1,2,0,4,2,0,8,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,799,"            this.escape(stringWriter, str);
",0,0,0,1,2,0,6,0,0,6,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,804,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,800,"        } catch (IOException e) {
",2,0,0,1,4,0,0,2,0,4,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,803,"            throw new UnhandledException(e);
",2,0,0,1,2,0,0,2,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,805,"        return stringWriter.toString();
",0,0,0,1,2,0,4,0,0,4,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,836,"                    writer.write(c);
",0,0,0,1,2,0,6,0,0,6,16,11,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,839,"                writer.write('&');
",0,0,0,1,2,0,4,0,0,5,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,840,"                writer.write(entityName);
",0,0,0,1,2,0,6,0,0,6,25,9,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,841,"                writer.write(';');
",0,0,0,1,2,0,4,0,0,5,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,861,"        int firstAmp = str.indexOf('&');
",2,0,0,1,2,0,4,0,0,7,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,862,"        if (firstAmp < 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,863,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,865,"            StringWriter stringWriter = createStringWriter(str);
",2,0,0,1,2,0,4,2,0,8,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,867,"                this.doUnescape(stringWriter, str, firstAmp);
",0,0,0,1,2,0,8,0,0,8,45,9,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,872,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,868,"            } catch (IOException e) {
",2,0,0,1,4,0,0,2,0,4,25,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,871,"                throw new UnhandledException(e);
",2,0,0,1,2,0,0,2,0,4,32,10,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,873,"            return stringWriter.toString();
",0,0,0,1,2,0,4,0,0,4,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,884,"        return new StringWriter((int) (str.length() + (str.length() * 0.1)));
",0,2,0,6,12,0,8,2,0,12,69,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,907,"            writer.write(str);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,908,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,936,"                    writer.write(c);
",0,0,0,1,2,0,6,0,0,6,16,11,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,937,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,942,"                    writer.write(c);
",0,0,0,1,2,0,6,0,0,6,16,11,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,943,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,957,"                                        entityValue = Integer.parseInt(entityContent.substring(2), 16);
",2,0,0,2,4,0,8,0,0,11,63,18,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,958,"                                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,965,"                                    entityValue = -1;
",2,0,0,0,0,0,0,0,0,4,17,18,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,967,"                            } catch (NumberFormatException e) {
",2,0,0,1,4,0,0,2,0,4,35,16,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,968,"                                entityValue = -1;
",2,0,0,0,0,0,0,0,0,4,17,17,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,972,"                        entityValue = this.entityValue(entityContent);
",2,0,0,1,2,0,4,0,0,7,46,12,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,977,"                    writer.write('&');
",0,0,0,1,2,0,4,0,0,5,18,11,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,978,"                    writer.write(entityContent);
",0,0,0,1,2,0,6,0,0,6,28,11,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,979,"                    writer.write(';');
",0,0,0,1,2,0,4,0,0,5,18,11,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,985,"                writer.write(c);
",0,0,0,1,2,0,6,0,0,6,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,655,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,656,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,666,"            super(growBy);
",2,0,0,1,2,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,667,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,678,"            int low = 0;
",2,0,0,0,0,0,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,679,"            int high = size - 1;
",4,1,0,0,0,0,0,0,0,5,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,681,"            while (low <= high) {
",4,1,0,1,3,0,0,0,0,5,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,682,"                int mid = (low + high) >>> 1;
",6,2,0,1,2,0,0,0,0,8,29,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,683,"                int midVal = values[mid];
",2,0,1,1,2,0,0,0,0,6,25,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,685,"                if (midVal < key) {
",4,1,0,1,3,0,0,0,0,5,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,686,"                    low = mid + 1;
",4,1,0,0,0,0,0,0,0,6,14,9,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,687,"                } else if (midVal > key) {
",4,1,0,1,4,0,0,0,0,5,26,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,688,"                    high = mid - 1;
",4,1,0,0,0,0,0,0,0,6,15,10,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,690,"                    return mid; // key found
",2,0,0,0,0,0,0,0,0,2,24,10,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,692,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,693,"            return -(low + 1); // key not found.
",2,1,0,1,2,0,0,0,0,4,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,700,"            ensureCapacity(size + 1);
",2,1,0,1,2,0,2,0,0,5,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,701,"            int insertAt = binarySearch(value);
",2,0,0,1,2,0,4,0,0,6,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,702,"            if (insertAt > 0) {
",2,1,0,1,3,0,0,0,0,3,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,703,"                return; // note: this means you can't insert the same value twice
",0,0,0,0,0,0,0,0,0,0,65,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,705,"            insertAt = -(insertAt + 1); // binarySearch returns it negative and off-by-one
",4,1,0,1,2,0,0,0,0,7,78,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,706,"            System.arraycopy(values, insertAt, values, insertAt + 1, size - insertAt);
",6,2,0,1,2,0,10,0,0,18,74,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,707,"            values[insertAt] = value;
",2,0,1,1,2,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,708,"            System.arraycopy(names, insertAt, names, insertAt + 1, size - insertAt);
",6,2,0,1,2,0,10,0,0,18,72,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,709,"            names[insertAt] = name;
",2,0,1,1,2,0,0,0,0,7,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,710,"            size++;
",2,0,0,0,0,0,0,0,0,3,7,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,711,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,717,"            int index = binarySearch(value);
",2,0,0,1,2,0,4,0,0,6,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,718,"            if (index < 0) {
",2,1,0,1,3,0,0,0,0,3,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,719,"                return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,721,"            return names[index];
",0,0,1,1,2,0,0,0,0,4,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,578,"        public ArrayEntityMap() {
",2,0,0,1,3,1,0,0,0,3,25,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,567,"        protected int growBy = 100;
",2,0,0,0,0,1,0,0,0,3,27,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,569,"        protected int size = 0;
",2,0,0,0,0,1,0,0,0,3,23,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,579,"            names = new String[growBy];
",2,0,1,1,2,0,0,2,0,7,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,580,"            values = new int[growBy];
",2,0,1,1,2,0,0,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,581,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,590,"        public ArrayEntityMap(int growBy) {
",4,0,0,1,3,1,0,0,0,5,35,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,591,"            this.growBy = growBy;
",4,0,0,0,0,0,0,0,0,5,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,592,"            names = new String[growBy];
",2,0,1,1,2,0,0,2,0,7,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,593,"            values = new int[growBy];
",2,0,1,1,2,0,0,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,594,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,600,"            ensureCapacity(size + 1);
",2,1,0,1,2,0,2,0,0,5,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,601,"            names[size] = name;
",2,0,1,1,2,0,0,0,0,7,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,602,"            values[size] = value;
",2,0,1,1,2,0,0,0,0,7,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,603,"            size++;
",2,0,0,0,0,0,0,0,0,3,7,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,604,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,613,"            if (capacity > names.length) {
",6,1,0,1,3,0,0,0,0,7,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,614,"                int newSize = Math.max(capacity, size + growBy);
",6,1,0,1,2,0,6,0,0,13,48,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,615,"                String[] newNames = new String[newSize];
",2,0,1,2,4,0,0,4,0,8,40,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,616,"                System.arraycopy(names, 0, newNames, 0, size);
",0,0,0,1,2,0,10,0,0,10,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,617,"                names = newNames;
",4,0,0,0,0,0,0,0,0,5,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,618,"                int[] newValues = new int[newSize];
",2,0,1,2,4,0,0,0,0,4,35,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,619,"                System.arraycopy(values, 0, newValues, 0, size);
",0,0,0,1,2,0,10,0,0,10,48,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,620,"                values = newValues;
",4,0,0,0,0,0,0,0,0,5,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,622,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,628,"            for (int i = 0; i < size; ++i) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,629,"                if (values[i] == value) {
",2,1,1,2,5,0,0,0,0,7,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,630,"                    return names[i];
",0,0,1,1,2,0,0,0,0,4,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,633,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,640,"            for (int i = 0; i < size; ++i) {
",8,1,0,1,3,0,0,0,0,10,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,641,"                if (names[i].equals(name)) {
",0,0,1,3,7,0,4,0,0,8,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,642,"                    return values[i];
",0,0,1,1,2,0,0,0,0,4,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,645,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,534,"                return lookupTable()[value];
",0,0,1,2,4,0,2,0,0,4,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,547,"            if (lookupTable == null) {
",2,1,0,1,3,0,0,0,0,3,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,548,"                createLookupTable();
",0,0,0,1,2,0,2,0,0,2,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,550,"            return lookupTable;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,559,"            lookupTable = new String[LOOKUP_TABLE_SIZE];
",2,0,1,1,2,0,0,2,0,7,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,560,"            for (int i = 0; i < LOOKUP_TABLE_SIZE; ++i) {
",8,1,0,1,3,0,0,0,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,561,"                lookupTable[i] = super.name(i);
",4,0,1,2,4,0,0,0,0,9,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,563,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,518,"        public TreeEntityMap() {
",2,0,0,1,3,1,0,0,0,3,24,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,519,"            mapNameToValue = new TreeMap();
",2,0,0,1,2,0,0,2,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,520,"            mapValueToName = new TreeMap();
",2,0,0,1,2,0,0,2,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,521,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,472,"    static abstract class MapIntMap implements Entities.EntityMap {
",6,0,0,0,1,2,0,0,0,8,63,2,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,481,"            mapNameToValue.put(name, new Integer(value));
",2,0,0,2,4,0,6,2,0,10,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,482,"            mapValueToName.put(new Integer(value), name);
",2,0,0,2,4,0,6,2,0,10,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,483,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,489,"            return (String) mapValueToName.get(new Integer(value));
",2,0,0,3,6,0,4,4,0,10,55,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,496,"            Object value = mapNameToValue.get(name);
",2,0,0,1,2,0,6,2,0,10,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,497,"            if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,498,"                return -1;
",0,0,0,0,0,0,0,0,0,1,10,7,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,500,"            return ((Integer) value).intValue();
",2,0,0,3,6,0,2,2,0,6,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,508,"        public HashEntityMap() {
",2,0,0,1,3,1,0,0,0,3,24,3,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,509,"            mapNameToValue = new HashMap();
",2,0,0,1,2,0,0,2,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,510,"            mapValueToName = new HashMap();
",2,0,0,1,2,0,0,2,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/Entities,42,511,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,108,"        this(initialCapacity, 0.75f);
",2,0,0,1,2,0,0,0,0,2,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,109,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,123,"            throw new IllegalArgumentException(""Illegal Capacity: "" + initialCapacity);
",2,1,0,1,2,0,0,2,0,6,75,7,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,126,"            throw new IllegalArgumentException(""Illegal Load: "" + loadFactor);
",2,1,0,1,2,0,0,2,0,6,66,7,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,129,"            initialCapacity = 1;
",2,0,0,0,0,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,143,"        return count;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,153,"        return count == 0;
",2,1,0,0,0,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,175,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,176,"            throw new NullPointerException();
",0,0,0,1,2,0,0,2,0,2,33,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,179,"        Entry tab[] = table;
",4,0,0,1,2,0,0,2,0,6,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,180,"        for (int i = tab.length; i-- > 0;) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,181,"            for (Entry e = tab[i]; e != null; e = e.next) {
",10,1,1,2,5,0,0,2,0,18,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,182,"                if (e.value.equals(value)) {
",4,0,0,2,5,0,4,0,0,8,28,9,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,183,"                    return true;
",0,0,0,0,0,0,0,0,0,1,12,10,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,187,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,203,"        return contains(value);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,216,"        Entry tab[] = table;
",4,0,0,1,2,0,0,2,0,6,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,217,"        int hash = key;
",4,0,0,0,0,0,0,0,0,4,15,5,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,218,"        int index = (hash & 0x7FFFFFFF) % tab.length;
",8,2,0,1,2,0,0,0,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,219,"        for (Entry e = tab[index]; e != null; e = e.next) {
",10,1,1,2,5,0,0,2,0,18,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,220,"            if (e.hash == hash) {
",6,1,0,1,3,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,221,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,224,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,242,"                return e.value;
",4,0,0,0,0,0,0,0,0,4,15,9,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,301,"                Object old = e.value;
",6,0,0,0,0,0,0,2,0,8,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,302,"                e.value = value;
",6,0,0,0,0,0,0,0,0,7,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,303,"                return old;
",2,0,0,0,0,0,0,0,0,2,11,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,334,"        Entry tab[] = table;
",4,0,0,1,2,0,0,2,0,6,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,335,"        int hash = key;
",4,0,0,0,0,0,0,0,0,4,15,5,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,336,"        int index = (hash & 0x7FFFFFFF) % tab.length;
",8,2,0,1,2,0,0,0,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,337,"        for (Entry e = tab[index], prev = null; e != null; prev = e, e = e.next) {
",16,1,1,2,5,0,0,2,0,25,74,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,338,"            if (e.hash == hash) {
",6,1,0,1,3,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,339,"                if (prev != null) {
",2,1,0,1,3,0,0,0,0,3,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,340,"                    prev.next = e.next;
",8,0,0,0,0,0,0,0,0,9,19,10,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,342,"                    tab[index] = e.next;
",4,0,1,1,2,0,0,0,0,9,20,10,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,344,"                count--;
",2,0,0,0,0,0,0,0,0,3,8,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,345,"                Object oldValue = e.value;
",6,0,0,0,0,0,0,2,0,8,26,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,346,"                e.value = null;
",4,0,0,0,0,0,0,0,0,5,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,347,"                return oldValue;
",2,0,0,0,0,0,0,0,0,2,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,350,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,357,"        Entry tab[] = table;
",4,0,0,1,2,0,0,2,0,6,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,358,"        for (int index = tab.length; --index >= 0;) {
",8,1,0,1,3,0,0,0,0,10,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,359,"            tab[index] = null;
",0,0,1,1,2,0,0,0,0,5,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,361,"        count = 0;
",2,0,0,0,0,0,0,0,0,3,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/IntHashMap,42,362,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
