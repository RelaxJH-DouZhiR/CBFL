dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,"                            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,"                        out.write('/');
",0,0,0,1,2,0,4,0,0,5,15,13,1.00000,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);
",0,0,0,1,2,0,4,0,0,5,41,5,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,"            StringWriter writer = new StringWriter(str.length() * 2);
",2,1,0,2,4,0,4,4,0,11,57,6,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);
",0,0,0,1,2,0,8,0,0,8,55,7,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,"        sz = str.length();
",2,0,0,1,2,0,4,0,0,7,18,4,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,"            if (ch > 0xfff) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,"            } else if (ch > 0xff) {
",2,1,0,1,4,0,0,0,0,3,23,7,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,"            } else if (ch > 0x7f) {
",2,1,0,1,4,0,0,0,0,3,23,8,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,"            } else if (ch < 32) {
",2,1,0,1,4,0,0,0,0,3,21,9,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,11,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,"                        out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,13,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,253,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,45,"    private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
",2,0,0,1,2,3,6,2,0,13,70,2,0.05556,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,46,"    private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};
",14,0,0,3,6,3,0,0,0,17,113,2,0.05556,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,60,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,47,"    protected NestableDelegate delegate = new NestableDelegate(this);
",2,0,0,1,2,1,0,4,0,7,65,2,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,53,"    private Throwable cause = null;
",2,0,0,0,0,1,0,2,0,5,31,2,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,70,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,71,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,81,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,82,"        this.cause = cause;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,83,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,94,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,95,"        this.cause = cause;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,96,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,102,"        return cause;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,113,"        if (super.getMessage() != null) {
",2,1,0,2,5,0,0,0,0,3,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,114,"            return super.getMessage();
",2,0,0,1,2,0,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,115,"        } else if (cause != null) {
",2,1,0,1,4,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,116,"            return cause.toString();
",0,0,0,1,2,0,4,0,0,4,24,8,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,118,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,126,"        if (index == 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,127,"            return super.getMessage();
",2,0,0,1,2,0,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,129,"        return delegate.getMessage(index);
",0,0,0,1,2,0,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,136,"        return delegate.getMessages();
",0,0,0,1,2,0,4,0,0,4,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,143,"        return delegate.getThrowable(index);
",0,0,0,1,2,0,6,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,150,"        return delegate.getThrowableCount();
",0,0,0,1,2,0,4,0,0,4,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,157,"        return delegate.getThrowables();
",0,0,0,1,2,0,4,0,0,4,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,164,"        return delegate.indexOfThrowable(type, 0);
",0,0,0,1,2,0,6,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,171,"        return delegate.indexOfThrowable(type, fromIndex);
",0,0,0,1,2,0,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,178,"        delegate.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,179,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,185,"        delegate.printStackTrace(out);
",0,0,0,1,2,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,186,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,192,"        delegate.printStackTrace(out);
",0,0,0,1,2,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,193,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,199,"        super.printStackTrace(out);
",4,0,0,1,2,0,0,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,200,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,59,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,60,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,102,"        escapeJavaStyleString(out, str, false);
",0,0,0,1,2,0,6,0,0,7,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,103,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);
",0,0,0,1,2,0,4,0,0,5,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,143,"        escapeJavaStyleString(out, str, true);
",0,0,0,1,2,0,6,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,144,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,156,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,162,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,164,"            ioe.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,165,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,180,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,183,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,192,"                out.write(""\\u"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,194,"                out.write(""\\u0"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,196,"                out.write(""\\u00"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,29,11,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,198,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,200,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,201,"                        out.write('b');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,202,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,204,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,205,"                        out.write('n');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,206,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,208,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,209,"                        out.write('t');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,210,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,212,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,213,"                        out.write('f');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,214,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,216,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,217,"                        out.write('r');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,218,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,220,"                        if (ch > 0xf) {
",2,1,0,1,3,0,0,0,0,3,15,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,221,"                            out.write(""\\u00"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,29,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,223,"                            out.write(""\\u000"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,30,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,225,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,230,"                        if (escapeSingleQuote) {
",2,0,0,1,3,0,0,0,0,2,24,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,231,"                            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,233,"                        out.write('\'');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,234,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,236,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,237,"                        out.write('""');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,238,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,240,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,241,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,242,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,263,"        return Integer.toHexString(ch).toUpperCase();
",0,0,0,2,4,0,8,0,0,8,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,276,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,277,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,280,"            StringWriter writer = new StringWriter(str.length());
",2,0,0,2,4,0,4,4,0,10,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,281,"            unescapeJava(writer, str);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,282,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,283,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,285,"            ioe.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,286,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,306,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,307,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,309,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,310,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,312,"        int sz = str.length();
",2,0,0,1,2,0,4,0,0,6,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,313,"        StringBuffer unicode = new StringBuffer(4);
",2,0,0,1,2,0,0,4,0,6,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,314,"        boolean hadSlash = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,315,"        boolean inUnicode = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,316,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,317,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,318,"            if (inUnicode) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,321,"                unicode.append(ch);
",0,0,0,1,2,0,6,0,0,6,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,322,"                if (unicode.length() == 4) {
",0,1,0,2,5,0,4,0,0,5,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,326,"                        int value = Integer.parseInt(unicode.toString(), 16);
",2,0,0,2,4,0,8,0,0,10,53,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,327,"                        out.write((char) value);
",2,0,0,2,4,0,4,0,0,6,24,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,328,"                        unicode.setLength(0);
",0,0,0,1,2,0,4,0,0,4,21,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,329,"                        inUnicode = false;
",2,0,0,0,0,0,0,0,0,4,18,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,330,"                        hadSlash = false;
",2,0,0,0,0,0,0,0,0,4,17,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,333,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,331,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,332,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);
",4,1,0,1,2,0,0,2,0,8,85,14,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,337,"            if (hadSlash) {
",2,0,0,1,3,0,0,0,0,2,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,339,"                hadSlash = false;
",2,0,0,0,0,0,0,0,0,4,17,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,340,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,342,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,343,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,345,"                        out.write('\'');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,346,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,348,"                        out.write('""');
",0,0,0,1,2,0,4,0,0,5,15,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,349,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,351,"                        out.write('\r');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,352,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,354,"                        out.write('\f');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,355,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,357,"                        out.write('\t');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,358,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,360,"                        out.write('\n');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,361,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,363,"                        out.write('\b');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,364,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,368,"                            inUnicode = true;
",2,0,0,0,0,0,0,0,0,4,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,369,"                            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,372,"                        out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,373,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,376,"            } else if (ch == '\\') {
",2,1,0,1,4,0,0,0,0,4,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,377,"                hadSlash = true;
",2,0,0,0,0,0,0,0,0,4,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,378,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,380,"            out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,382,"        if (hadSlash) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,385,"            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,387,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,401,"        return unescapeJava(str);
",0,0,0,1,2,0,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,421,"        unescapeJava(out, str);
",0,0,0,1,2,0,6,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,422,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,453,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,454,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,457,"            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
",2,1,0,4,8,0,4,4,0,11,67,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,458,"            escapeHtml(writer, str);
",0,0,0,1,2,0,6,0,0,6,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,459,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,460,"        } catch (IOException e) {
",2,0,0,1,4,0,0,2,0,4,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,463,"            e.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,464,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,498,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,499,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,501,"        if (string == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,502,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,504,"        Entities.HTML40.escape(writer, string);
",4,0,0,1,2,0,6,0,0,10,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,505,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,525,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,526,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,529,"            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
",2,1,0,4,8,0,4,4,0,11,67,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,530,"            unescapeHtml(writer, str);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,531,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,532,"        } catch (IOException e) {
",2,0,0,1,4,0,0,2,0,4,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,535,"            e.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,536,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,559,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,560,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,562,"        if (string == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,563,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,565,"        Entities.HTML40.unescape(writer, string);
",4,0,0,1,2,0,6,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,566,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,589,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,590,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,592,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,593,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,595,"        Entities.XML.escape(writer, str);
",4,0,0,1,2,0,6,0,0,10,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,596,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,616,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,617,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,619,"        return Entities.XML.escape(str);
",4,0,0,1,2,0,4,0,0,8,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,641,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,642,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,644,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,645,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,647,"        Entities.XML.unescape(writer, str);
",4,0,0,1,2,0,6,0,0,10,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,648,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,666,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,667,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,669,"        return Entities.XML.unescape(str);
",4,0,0,1,2,0,4,0,0,8,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,692,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,693,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,695,"        return StringUtils.replace(str, ""'"", ""''"");
",0,0,0,1,2,0,6,0,0,8,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,723,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {
",0,0,0,2,5,0,8,0,0,8,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,724,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,727,"            StringWriter writer = new StringWriter();
",2,0,0,1,2,0,0,4,0,6,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,728,"            escapeCsv(writer, str);
",0,0,0,1,2,0,6,0,0,6,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,729,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,730,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,732,"            ioe.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,733,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,761,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {
",0,0,0,2,5,0,8,0,0,8,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,762,"            if (str != null) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,763,"                out.write(str);
",0,0,0,1,2,0,6,0,0,6,15,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,765,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,767,"        out.write(CSV_QUOTE);
",0,0,0,1,2,0,6,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,768,"        for (int i = 0; i < str.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,769,"            char c = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,770,"            if (c == CSV_QUOTE) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,771,"                out.write(CSV_QUOTE); // escape double quote
",0,0,0,1,2,0,6,0,0,6,44,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,773,"            out.write(c);
",0,0,0,1,2,0,6,0,0,6,13,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,775,"        out.write(CSV_QUOTE);
",0,0,0,1,2,0,6,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,776,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,801,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,802,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,805,"            StringWriter writer = new StringWriter();
",2,0,0,1,2,0,0,4,0,6,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,806,"            unescapeCsv(writer, str);
",0,0,0,1,2,0,6,0,0,6,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,807,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,808,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,810,"            ioe.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,811,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,839,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,840,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,842,"        if (str.length() < 2) {
",0,1,0,2,5,0,4,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,843,"            out.write(str);
",0,0,0,1,2,0,6,0,0,6,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,844,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,846,"        if ( str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE ) {
",4,4,0,4,9,0,12,0,0,20,80,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,847,"            out.write(str);
",0,0,0,1,2,0,6,0,0,6,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,848,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,852,"        String quoteless = str.substring(1, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,854,"        if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {
",0,0,0,2,5,0,8,0,0,8,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,856,"            str = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR);
",6,1,0,1,2,0,8,0,0,16,83,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,859,"        out.write(str);
",0,0,0,1,2,0,6,0,0,6,15,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,860,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
