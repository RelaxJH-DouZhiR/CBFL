dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,"        if (val == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,"        if (val.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,24,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.50000,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,"        char lastChar = val.charAt(val.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,"        int decPos = val.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,"        int expPos = val.indexOf('e') + val.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,"                mant = val;
",4,0,0,0,0,0,0,0,0,5,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,"        if (!Character.isDigit(lastChar)) {
",0,0,0,2,5,0,6,0,0,7,35,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,"            if (expPos > -1 && expPos < val.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,9,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,"        if (s == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,"        for (int i = s.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,43,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,"            if (s.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,25,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,47,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);
",0,0,0,1,2,1,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,74,"            return Integer.parseInt(str);
",0,0,0,1,2,1,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,"            return defaultValue;
",2,0,0,0,0,1,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,140,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,143,"            throw new NumberFormatException(""\""\"" is not a valid number."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,150,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,153,"            return createInteger(val);
",0,0,0,1,2,1,4,0,0,4,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,"                if (expPos < decPos) {
",4,1,0,1,3,0,0,0,0,5,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,"                dec = val.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,"                            return createLong(numeric);
",0,0,0,1,2,1,4,0,0,4,27,12,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,"                        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,201,"                        return createBigInteger(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,209,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,212,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,217,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,"                    } catch (NumberFormatException e) {
",2,0,0,1,4,0,0,2,0,4,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,223,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,228,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,226,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,230,"                        return createBigDecimal(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,"                    } catch (NumberFormatException e) {
",2,0,0,1,4,0,0,2,0,4,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,236,"                    throw new NumberFormatException(val + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,242,"            if (expPos > -1 && expPos < val.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());
",4,1,0,2,4,0,8,0,0,14,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,245,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,250,"                    return createInteger(val);
",0,0,0,1,2,1,4,0,0,4,26,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,255,"                    return createLong(val);
",0,0,0,1,2,1,4,0,0,4,23,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,256,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,259,"                return createBigInteger(val);
",0,0,0,1,2,1,4,0,0,4,29,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,263,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,265,"                    Float f = createFloat(val);
",2,0,0,1,2,0,4,2,0,8,27,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,266,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,267,"                        return f;
",2,0,0,0,0,1,0,0,0,2,9,12,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,271,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,"                    Double d = createDouble(val);
",2,0,0,1,2,0,4,2,0,8,29,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,274,"                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,66,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,"                        return d;
",2,0,0,0,0,1,0,0,0,2,9,12,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,279,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,277,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,281,"                return createBigDecimal(val);
",0,0,0,1,2,1,4,0,0,4,29,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,298,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,"        return s.length() > 0;
",0,1,0,1,2,1,4,0,0,5,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,318,"        return Float.valueOf(val);
",0,0,0,1,2,1,6,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,329,"        return Double.valueOf(val);
",0,0,0,1,2,1,6,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,342,"        return Integer.decode(val);
",0,0,0,1,2,1,6,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,353,"        return Long.valueOf(val);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,364,"        BigInteger bi = new BigInteger(val);
",4,0,0,1,2,0,0,4,0,8,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,365,"        return bi;
",2,0,0,0,0,1,0,0,0,2,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,376,"        BigDecimal bd = new BigDecimal(val);
",4,0,0,1,2,0,0,4,0,8,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,377,"        return bd;
",2,0,0,0,0,1,0,0,0,2,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,394,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,413,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,427,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,431,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,446,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,448,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,"        return a;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,"        if (lhs < rhs) {
",4,1,0,1,3,0,0,0,0,5,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,492,"            return -1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,"        if (lhs > rhs) {
",4,1,0,1,3,0,0,0,0,5,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,495,"            return +1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,501,"        long lhsBits = Double.doubleToLongBits(lhs);
",2,0,0,1,2,0,6,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,502,"        long rhsBits = Double.doubleToLongBits(rhs);
",2,0,0,1,2,0,6,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,503,"        if (lhsBits == rhsBits) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,504,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,512,"        if (lhsBits < rhsBits) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,513,"            return -1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,515,"            return +1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,"        if (lhs < rhs) {
",4,1,0,1,3,0,0,0,0,5,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,553,"            return -1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,555,"        if (lhs > rhs) {
",4,1,0,1,3,0,0,0,0,5,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,556,"            return +1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,"        int lhsBits = Float.floatToIntBits(lhs);
",2,0,0,1,2,0,6,0,0,8,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,563,"        int rhsBits = Float.floatToIntBits(rhs);
",2,0,0,1,2,0,6,0,0,8,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,"        if (lhsBits == rhsBits) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,565,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,573,"        if (lhsBits < rhsBits) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,574,"            return -1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,576,"            return +1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,593,"        if ((str == null) || (str.length() == 0)) {
",2,3,0,4,9,0,4,0,0,9,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,594,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,"        for (int i = 0; i < str.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,597,"            if (!Character.isDigit(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,11,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,601,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,618,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,619,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,"        char[] chars = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,"        int sz = chars.length;
",6,0,0,0,0,0,0,0,0,6,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,"        boolean hasExp = false;
",2,0,0,0,0,0,0,0,0,3,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,"        boolean hasDecPoint = false;
",2,0,0,0,0,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,625,"        boolean allowSigns = false;
",2,0,0,0,0,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,626,"        boolean foundDigit = false;
",2,0,0,0,0,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,"        int start = (chars[0] == '-') ? 1 : 0;
",2,1,1,2,4,0,0,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,"        if (sz > start + 1) {
",4,2,0,1,3,0,0,0,0,6,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,"            if (chars[start] == '0' && chars[start + 1] == 'x') {
",2,4,1,3,7,0,0,0,0,14,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,"                int i = start + 2;
",4,1,0,0,0,0,0,0,0,5,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,632,"                if (i == sz) {
",4,1,0,1,3,0,0,0,0,5,14,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,633,"                    return false; // str == ""0x""
",0,0,0,0,0,1,0,0,0,1,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,636,"                for (; i < chars.length; i++) {
",8,1,0,1,3,0,0,0,0,10,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,"                    if ((chars[i] < '0' || chars[i] > '9')
",0,3,1,3,7,0,0,0,0,13,38,13,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,640,"                        return false;
",0,0,0,0,0,1,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,643,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords
",2,0,0,0,0,0,0,0,0,3,65,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,648,"        int i = start;
",4,0,0,0,0,0,0,0,0,4,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,"        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {
",12,6,0,2,5,0,0,0,0,19,61,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,"                foundDigit = true;
",2,0,0,0,0,0,0,0,0,4,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,"            } else if (chars[i] == '.') {
",0,1,1,2,6,0,0,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,657,"                if (hasDecPoint || hasExp) {
",4,1,0,1,3,0,0,0,0,5,28,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,659,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,"                hasDecPoint = true;
",2,0,0,0,0,0,0,0,0,4,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,"            } else if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,8,0,0,0,0,13,48,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,664,"                if (hasExp) {
",2,0,0,1,3,0,0,0,0,2,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,666,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,"                if (!foundDigit) {
",2,0,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,669,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,671,"                hasExp = true;
",2,0,0,0,0,0,0,0,0,4,14,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,"                allowSigns = true;
",2,0,0,0,0,0,0,0,0,4,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,673,"            } else if (chars[i] == '+' || chars[i] == '-') {
",0,3,1,3,8,0,0,0,0,13,48,9,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,"                if (!allowSigns) {
",2,0,0,1,3,0,0,0,0,3,18,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,675,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,13,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,678,"                foundDigit = false; // we need a digit after the E
",2,0,0,0,0,0,0,0,0,4,50,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,"        if (i < chars.length) {
",6,1,0,1,3,0,0,0,0,7,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,685,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,687,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,"            if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,691,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,693,"            if (!allowSigns
",2,0,0,0,1,0,0,0,0,3,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,"                return foundDigit;
",2,0,0,0,0,1,0,0,0,2,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,"            if (chars[i] == 'l'
",0,1,1,1,3,0,0,0,0,6,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,"                return foundDigit && !hasExp;
",4,1,0,0,0,1,0,0,0,6,29,8,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,706,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,710,"        return !allowSigns && foundDigit;
",4,1,0,0,0,1,0,0,0,6,33,4,0.00000,0
