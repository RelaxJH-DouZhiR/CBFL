dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,"            return typeVarAssigns;
",2,0,0,0,0,1,0,0,0,2,22,6,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,548,"            return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,69,7,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,78,7,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {
",0,0,0,2,5,0,6,0,0,7,34,4,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,658,"        if (cls.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,24,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,671,"        HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()
",4,1,0,1,2,0,0,12,0,18,112,4,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,"        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {
",2,2,0,3,7,0,10,0,0,14,64,4,1,1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,331,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,"    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);
",2,0,0,1,2,3,6,2,0,13,114,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =
",2,0,0,0,0,3,0,2,0,7,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");
",2,0,0,1,2,3,2,2,0,10,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?
",2,1,0,1,2,3,2,2,0,12,85,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,772,"    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);
",2,0,0,1,2,3,4,2,0,11,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,790,"    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");
",2,0,0,1,2,3,2,2,0,10,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");
",2,0,0,1,2,3,2,0,0,8,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");
",2,0,0,1,2,3,2,0,0,8,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");
",2,0,0,1,2,3,2,0,0,8,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");
",2,1,0,2,4,3,4,0,0,12,97,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");
",2,0,0,1,2,3,2,0,0,8,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");
",2,0,0,1,2,3,2,0,0,8,65,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");
",2,0,0,1,2,3,2,0,0,8,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");
",2,0,0,1,2,3,2,0,0,8,69,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1086,"    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX
",12,1,0,0,0,3,0,0,0,16,111,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1099,"    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);
",2,0,0,1,2,3,4,0,0,9,85,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");
",2,0,0,1,2,3,4,0,0,10,93,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");
",2,0,0,1,2,3,4,0,0,10,93,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");
",4,1,0,1,2,3,2,0,0,12,110,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");
",4,1,0,1,2,3,2,0,0,12,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");
",4,1,0,1,2,3,2,0,0,12,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");
",2,0,0,1,2,3,4,0,0,10,91,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");
",4,1,0,1,2,3,2,0,0,11,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");
",2,0,0,1,2,3,4,0,0,10,91,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");
",2,0,0,1,2,3,4,0,0,10,94,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");
",2,0,0,1,2,3,4,0,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1265,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);
",0,0,0,1,2,1,6,0,0,6,69,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1276,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);
",0,0,0,1,2,1,10,0,0,10,69,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1286,"        return isOSNameMatch(OS_NAME, osNamePrefix);
",0,0,0,1,2,1,6,0,0,6,44,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1304,"            return System.getProperty(property);
",0,0,0,1,2,1,6,0,0,6,36,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1371,"        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);
",0,0,0,1,2,1,6,0,0,6,67,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1387,"        if (version == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1390,"        return version.startsWith(versionPrefix);
",0,0,0,1,2,1,6,0,0,6,41,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1406,"        if (osName == null || osVersion == null) {
",4,3,0,1,3,0,0,0,0,7,42,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1409,"        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);
",0,1,0,2,4,1,12,0,0,13,80,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1423,"        if (osName == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1426,"        return osName.startsWith(osNamePrefix);
",0,0,0,1,2,1,6,0,0,6,39,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,89,"    JavaVersion(final float value, final String name) {
",6,0,0,1,3,2,0,2,0,10,51,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,90,"        this.value = value;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,91,"        this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,92,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,32,"    JAVA_0_9(1.5f, ""0.9""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,37,"    JAVA_1_1(1.1f, ""1.1""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,42,"    JAVA_1_2(1.2f, ""1.2""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,47,"    JAVA_1_3(1.3f, ""1.3""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,52,"    JAVA_1_4(1.4f, ""1.4""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,57,"    JAVA_1_5(1.5f, ""1.5""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,62,"    JAVA_1_6(1.6f, ""1.6""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,67,"    JAVA_1_7(1.7f, ""1.7""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,72,"    JAVA_1_8(1.8f, ""1.8"");
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,27,"public enum JavaVersion {
",2,0,0,0,1,1,0,0,0,3,25,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,105,"        return this.value >= requiredVersion.value;
",6,1,0,0,0,1,0,0,0,7,43,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,132,"        if (""0.9"".equals(nom)) {
",0,0,0,2,5,0,4,0,0,5,24,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,134,"        } else if (""1.1"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,136,"        } else if (""1.2"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,138,"        } else if (""1.3"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,140,"        } else if (""1.4"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,142,"        } else if (""1.5"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,144,"        } else if (""1.6"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,146,"        } else if (""1.7"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,147,"            return JAVA_1_7;
",2,0,0,0,0,1,0,0,0,2,16,13,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,52,"    public static final CharSequenceTranslator ESCAPE_JAVA = 
",2,0,0,0,0,3,0,2,0,7,56,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,72,"    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = 
",2,0,0,0,0,3,0,2,0,7,62,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,94,"    public static final CharSequenceTranslator ESCAPE_XML = 
",2,0,0,0,0,3,0,2,0,7,55,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,109,"    public static final CharSequenceTranslator ESCAPE_HTML3 = 
",2,0,0,0,0,3,0,2,0,7,57,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,124,"    public static final CharSequenceTranslator ESCAPE_HTML4 = 
",2,0,0,0,0,3,0,2,0,7,57,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,140,"    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();
",2,0,0,1,2,3,0,4,0,9,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,183,"    public static final CharSequenceTranslator UNESCAPE_JAVA = 
",2,0,0,0,0,3,0,2,0,7,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,206,"    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;
",4,0,0,0,0,3,0,2,0,9,79,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,217,"    public static final CharSequenceTranslator UNESCAPE_HTML3 = 
",2,0,0,0,0,3,0,2,0,7,59,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,233,"    public static final CharSequenceTranslator UNESCAPE_HTML4 = 
",2,0,0,0,0,3,0,2,0,7,59,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,250,"    public static final CharSequenceTranslator UNESCAPE_XML = 
",2,0,0,0,0,3,0,2,0,7,57,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,266,"    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();
",2,0,0,1,2,3,0,4,0,9,77,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,433,"        return ESCAPE_HTML4.translate(input);
",0,0,0,1,2,1,6,0,0,6,37,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,32,"public abstract class CharSequenceTranslator {
",2,0,0,0,1,2,0,0,0,4,46,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,54,"        if (input == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,58,"            StringWriter writer = new StringWriter(input.length() * 2);
",2,1,0,2,4,0,4,4,0,11,59,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,59,"            translate(input, writer);
",0,0,0,1,2,0,6,0,0,6,25,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,60,"            return writer.toString();
",0,0,0,1,2,1,4,0,0,4,25,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,76,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,79,"        if (input == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,82,"        int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,83,"        int len = input.length();
",2,0,0,1,2,0,4,0,0,6,25,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,84,"        while (pos < len) {
",4,1,0,1,3,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,85,"            int consumed = translate(input, pos, out);
",2,0,0,1,2,0,8,0,0,10,42,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,86,"            if (consumed == 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,87,"                char[] c = Character.toChars(Character.codePointAt(input, pos));
",2,0,0,3,6,0,12,0,0,14,64,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,88,"                out.write(c);
",0,0,0,1,2,0,6,0,0,6,13,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,89,"                pos+= c.length;
",6,0,0,0,0,0,0,0,0,7,15,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,90,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,94,"            for (int pt = 0; pt < consumed; pt++) {
",8,1,0,1,3,0,0,0,0,10,39,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,95,"                pos += Character.charCount(Character.codePointAt(input, pos));
",2,0,0,2,4,0,12,0,0,15,62,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,97,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,108,"        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];
",6,1,0,2,4,0,0,4,0,11,87,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,109,"        newArray[0] = this;
",0,0,1,1,2,0,0,0,0,3,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);
",4,0,0,1,2,0,8,0,0,12,66,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,111,"        return new AggregateTranslator(newArray);
",2,0,0,1,2,1,0,2,0,4,41,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,40,"    public AggregateTranslator(CharSequenceTranslator... translators) {
",4,0,0,1,3,1,0,2,0,7,67,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,41,"        this.translators = ArrayUtils.clone(translators);
",2,0,0,1,2,0,6,0,0,9,49,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,42,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,51,"        for (CharSequenceTranslator translator : translators) {
",4,0,0,1,3,0,0,2,0,6,55,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,52,"            int consumed = translator.translate(input, index, out);
",2,0,0,1,2,0,10,0,0,12,55,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,53,"            if(consumed != 0) {
",2,1,0,1,3,0,0,0,0,3,19,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,54,"                return consumed;
",2,0,0,0,0,1,0,0,0,2,16,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,57,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,145,"    static class CsvEscaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,56,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,149,"        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
",2,0,0,1,2,3,6,2,0,13,70,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,150,"        private static final char[] CSV_SEARCH_CHARS = 
",2,0,0,1,2,3,0,0,0,5,46,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,268,"    static class CsvUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,272,"        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
",2,0,0,1,2,3,6,2,0,13,70,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,273,"        private static final char[] CSV_SEARCH_CHARS = 
",2,0,0,1,2,3,0,0,0,5,46,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,53,"    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);
",2,0,0,1,2,3,6,2,0,13,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,63,"    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);
",2,0,0,1,2,3,6,2,0,13,94,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,68,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();
",2,0,0,1,2,3,0,12,0,17,101,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,70,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);
",4,0,0,1,2,0,4,2,0,10,53,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,71,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);
",4,0,0,1,2,0,4,2,0,10,47,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,72,"         primitiveWrapperMap.put(Character.TYPE, Character.class);
",4,0,0,1,2,0,4,2,0,10,57,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,73,"         primitiveWrapperMap.put(Short.TYPE, Short.class);
",4,0,0,1,2,0,4,2,0,10,49,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,74,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);
",4,0,0,1,2,0,4,2,0,10,53,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,75,"         primitiveWrapperMap.put(Long.TYPE, Long.class);
",4,0,0,1,2,0,4,2,0,10,47,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,76,"         primitiveWrapperMap.put(Double.TYPE, Double.class);
",4,0,0,1,2,0,4,2,0,10,51,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,77,"         primitiveWrapperMap.put(Float.TYPE, Float.class);
",4,0,0,1,2,0,4,2,0,10,49,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,78,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);
",8,0,0,1,2,0,4,0,0,12,46,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,84,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();
",2,0,0,1,2,3,0,12,0,17,101,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,86,"        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {
",2,0,0,2,5,0,4,2,0,8,62,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,87,"            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);
",2,0,0,1,2,0,6,2,0,10,64,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,88,"            if (!primitiveClass.equals(wrapperClass)) {
",0,0,0,2,5,0,6,0,0,7,43,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,89,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);
",0,0,0,1,2,0,8,0,0,8,54,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,91,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,97,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();
",2,0,0,1,2,3,0,12,0,17,89,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,102,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();
",2,0,0,1,2,3,0,12,0,17,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,119,"        addAbbreviation(""int"", ""I"");
",0,0,0,1,2,0,2,0,0,4,28,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,120,"        addAbbreviation(""boolean"", ""Z"");
",0,0,0,1,2,0,2,0,0,4,32,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,121,"        addAbbreviation(""float"", ""F"");
",0,0,0,1,2,0,2,0,0,4,30,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,122,"        addAbbreviation(""long"", ""J"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,123,"        addAbbreviation(""short"", ""S"");
",0,0,0,1,2,0,2,0,0,4,30,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,124,"        addAbbreviation(""byte"", ""B"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,125,"        addAbbreviation(""double"", ""D"");
",0,0,0,1,2,0,2,0,0,4,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,126,"        addAbbreviation(""char"", ""C"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,127,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,111,"        abbreviationMap.put(primitive, abbreviation);
",0,0,0,1,2,0,8,0,0,8,45,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,112,"        reverseAbbreviationMap.put(abbreviation, primitive);
",0,0,0,1,2,0,8,0,0,8,52,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,113,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,589,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));
",4,0,0,2,4,1,10,0,0,14,90,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,620,"        if (toClass == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,624,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,628,"        if (autoboxing) {
",2,0,0,1,3,0,0,0,0,2,17,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,629,"            if (cls.isPrimitive() && !toClass.isPrimitive()) {
",0,1,0,3,7,0,8,0,0,10,50,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,630,"                cls = primitiveToWrapper(cls);
",2,0,0,1,2,0,4,0,0,7,30,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,631,"                if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,635,"            if (toClass.isPrimitive() && !cls.isPrimitive()) {
",0,1,0,3,7,0,8,0,0,10,50,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,642,"        if (cls.equals(toClass)) {
",0,0,0,2,5,0,6,0,0,6,26,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,645,"        if (cls.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,24,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,689,"        return toClass.isAssignableFrom(cls);
",0,0,0,1,2,1,6,0,0,6,37,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,705,"        Class<?> convertedClass = cls;
",4,0,0,0,0,0,0,2,0,6,30,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,706,"        if (cls != null && cls.isPrimitive()) {
",2,2,0,2,5,0,4,0,0,8,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,707,"            convertedClass = primitiveWrapperMap.get(cls);
",2,0,0,1,2,0,6,0,0,9,46,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,709,"        return convertedClass;
",2,0,0,0,0,1,0,0,0,2,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,49,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,53,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,57,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,61,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,65,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,69,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,73,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,77,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,81,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,85,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,89,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,93,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,97,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,101,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,105,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,109,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,113,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,117,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,121,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,320,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,323,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,65,"        return isAssignable(type, toType, null);
",0,0,0,1,2,1,6,0,0,7,40,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,79,"        if (toType == null || toType instanceof Class<?>) {
",4,2,0,1,3,0,0,2,0,8,51,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,80,"            return isAssignable(type, (Class<?>) toType);
",2,0,0,2,4,1,4,2,0,8,45,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,88,"            return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,69,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,113,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,115,"            return toClass == null || !toClass.isPrimitive();
",2,2,0,1,2,1,4,0,0,9,49,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,120,"        if (toClass == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,121,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,125,"        if (toClass.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,27,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,126,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,129,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,131,"            return ClassUtils.isAssignable((Class<?>) type, toClass);
",2,0,0,2,4,1,6,2,0,10,57,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,134,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,136,"            return isAssignable(getRawType((ParameterizedType) type), toClass);
",2,0,0,3,6,1,6,2,0,10,67,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,140,"        if (type instanceof TypeVariable<?>) {
",2,0,0,1,3,0,0,2,0,4,38,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,154,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,155,"            return toClass.equals(Object.class)
",0,0,0,1,2,1,4,2,0,6,35,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,193,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,211,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,262,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,268,"        if (toGenericArrayType == null) {
",2,1,0,1,3,0,0,0,0,3,33,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,273,"        if (toGenericArrayType.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,38,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,274,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,277,"        Type toComponentType = toGenericArrayType.getGenericComponentType();
",2,0,0,1,2,0,4,2,0,8,68,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,279,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,280,"            Class<?> cls = (Class<?>) type;
",4,0,0,1,2,0,0,4,0,8,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,283,"            return cls.isArray()
",0,0,0,1,2,1,4,0,0,4,20,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,287,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,289,"            return isAssignable(((GenericArrayType) type).getGenericComponentType(),
",2,0,0,3,7,1,4,2,0,8,72,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,357,"            WildcardType wildcardType = (WildcardType) type;
",4,0,0,1,2,0,0,4,0,8,48,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,358,"            Type[] upperBounds = getImplicitUpperBounds(wildcardType);
",2,0,0,2,4,0,4,2,0,8,58,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,359,"            Type[] lowerBounds = getImplicitLowerBounds(wildcardType);
",2,0,0,2,4,0,4,2,0,8,58,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,361,"            for (Type toBound : toUpperBounds) {
",4,0,0,1,3,0,0,2,0,6,36,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,364,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);
",2,0,0,1,2,0,6,0,0,9,59,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,369,"                for (Type bound : upperBounds) {
",4,0,0,1,3,0,0,2,0,6,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,370,"                    if (!isAssignable(bound, toBound, typeVarAssigns)) {
",0,0,0,2,5,0,8,0,0,9,52,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,371,"                        return false;
",0,0,0,0,0,1,0,0,0,1,13,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,376,"            for (Type toBound : toLowerBounds) {
",4,0,0,1,3,0,0,2,0,6,36,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,379,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);
",2,0,0,1,2,0,6,0,0,9,59,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,384,"                for (Type bound : lowerBounds) {
",4,0,0,1,3,0,0,2,0,6,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,385,"                    if (!isAssignable(toBound, bound, typeVarAssigns)) {
",0,0,0,2,5,0,8,0,0,9,52,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,386,"                        return false;
",0,0,0,0,0,1,0,0,0,1,13,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,391,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,399,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,408,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,600,"        Class<?> cls = getRawType(parameterizedType);
",2,0,0,1,2,0,4,2,0,8,45,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,603,"        if (!isAssignable(cls, toClass)) {
",0,0,0,2,5,0,6,0,0,7,34,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,607,"        Type ownerType = parameterizedType.getOwnerType();
",2,0,0,1,2,0,4,2,0,8,50,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,610,"        if (ownerType instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,45,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,617,"            typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()
",4,1,0,1,2,0,0,6,0,13,81,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,622,"        Type[] typeArgs = parameterizedType.getActualTypeArguments();
",2,0,0,2,4,0,4,2,0,8,61,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,624,"        TypeVariable<?>[] typeParams = cls.getTypeParameters();
",2,0,0,2,4,0,4,2,0,8,55,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,627,"        for (int i = 0; i < typeParams.length; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,628,"            Type typeArg = typeArgs[i];
",2,0,1,1,2,0,0,2,0,8,27,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,629,"            typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns
",0,0,1,2,5,0,12,0,0,16,86,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,633,"        if (toClass.equals(cls)) {
",0,0,0,2,5,0,6,0,0,6,26,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,635,"            return typeVarAssigns;
",2,0,0,0,0,1,0,0,0,2,22,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,660,"            if (toClass.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,28,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,667,"            cls = ClassUtils.primitiveToWrapper(cls);
",2,0,0,1,2,0,6,0,0,9,41,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,799,"        if (superClass.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,801,"            Type[] interfaceTypes = cls.getGenericInterfaces();
",2,0,0,2,4,0,4,2,0,8,51,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,803,"            Type genericInterface = null;
",2,0,0,0,0,0,0,2,0,4,29,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,806,"            for (Type midType : interfaceTypes) {
",4,0,0,1,3,0,0,2,0,6,37,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,807,"                Class<?> midClass = null;
",2,0,0,0,0,0,0,2,0,4,25,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,809,"                if (midType instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,810,"                    midClass = getRawType((ParameterizedType) midType);
",4,0,0,2,4,0,2,2,0,9,51,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,820,"                if (isAssignable(midClass, superClass)
",0,0,0,1,3,0,6,0,0,6,38,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,822,"                    genericInterface = midType;
",4,0,0,0,0,0,0,0,0,5,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,827,"            if (genericInterface != null) {
",2,1,0,1,3,0,0,0,0,3,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,828,"                return genericInterface;
",2,0,0,0,0,1,0,0,0,2,24,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,986,"        Type rawType = parameterizedType.getRawType();
",2,0,0,1,2,0,4,2,0,8,46,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,993,"        if (!(rawType instanceof Class<?>)) {
",2,0,0,2,5,0,0,2,0,5,37,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,997,"        return (Class<?>) rawType;
",2,0,0,1,2,1,0,2,0,4,26,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,40,"    public LookupTranslator(CharSequence[]... lookup) {
",4,0,0,2,5,1,0,2,0,7,51,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();
",2,0,0,1,2,0,0,6,0,9,54,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,42,"        int _shortest = Integer.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,34,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,43,"        int _longest = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,44,"        if (lookup != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,45,"            for (CharSequence[] seq : lookup) {
",4,0,0,2,5,0,0,2,0,6,35,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,46,"                this.lookupMap.put(seq[0], seq[1]);
",2,0,1,3,6,0,2,0,0,8,35,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,47,"                int sz = seq[0].length();
",2,0,1,2,4,0,2,0,0,6,25,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,48,"                if (sz < _shortest) {
",4,1,0,1,3,0,0,0,0,5,21,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,49,"                    _shortest = sz;
",4,0,0,0,0,0,0,0,0,5,15,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,51,"                if (sz > _longest) {
",4,1,0,1,3,0,0,0,0,5,20,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,52,"                    _longest = sz;
",4,0,0,0,0,0,0,0,0,5,14,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,56,"        shortest = _shortest;
",4,0,0,0,0,0,0,0,0,5,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,57,"        longest = _longest;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,65,"        int max = longest;
",4,0,0,0,0,0,0,0,0,4,18,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,66,"        if (index + longest > input.length()) {
",4,2,0,2,5,0,4,0,0,10,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,70,"        for (int i = max; i >= shortest; i--) {
",10,1,0,1,3,0,0,0,0,12,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,71,"            CharSequence subSeq = input.subSequence(index, index + i);
",6,1,0,1,2,0,6,2,0,15,58,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,72,"            CharSequence result = lookupMap.get(subSeq);
",2,0,0,1,2,0,6,2,0,10,44,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,73,"            if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,74,"                out.write(result.toString());
",0,0,0,2,4,0,8,0,0,8,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,75,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,78,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,29,"public abstract class CodePointTranslator extends CharSequenceTranslator {
",2,0,0,0,1,2,0,2,0,6,74,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,56,"    public NumericEntityUnescaper(OPTION... options) {
",4,0,0,1,3,1,0,2,0,7,50,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,57,"        if(options.length > 0) {
",4,1,0,1,3,0,0,0,0,5,24,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,60,"            this.options = EnumSet.copyOf(Arrays.asList(new OPTION[] { OPTION.semiColonRequired }));
",6,0,0,4,8,0,8,2,0,17,88,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,62,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,35,"    public static enum OPTION { semiColonRequired, semiColonOptional, errorIfNoSemiColon }
",8,0,0,1,2,2,0,0,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,51,"    private UnicodeEscaper(int below, int above, boolean between) {
",8,0,0,1,3,1,0,0,0,9,63,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,52,"        this.below = below;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,53,"        this.above = above;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,54,"        this.between = between;
",4,0,0,0,0,0,0,0,0,5,23,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,55,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);
",4,0,0,1,2,1,0,2,0,7,62,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,34,"public class OctalUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,60,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,36,"    private static int OCTAL_MAX = 377;
",2,0,0,0,0,2,0,0,0,4,35,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,35,"    private static final String[][] ISO8859_1_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,52,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,139,"    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,148,"    private static final String[][] HTML40_EXTENDED_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,350,"    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,359,"    private static final String[][] BASIC_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,48,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,371,"    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,378,"    private static final String[][] APOS_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,47,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,387,"    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,396,"    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,409,"    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,34,"    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,138,"    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,84,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,147,"    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,349,"    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,358,"    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,370,"    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,377,"    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,386,"    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,395,"    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,408,"    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,417,"        String[][] newarray = new String[array.length][2];
",6,0,0,4,8,0,0,4,0,10,50,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,418,"        for(int i = 0; i<array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,419,"            newarray[i][0] = array[i][1];
",0,0,1,4,8,0,0,0,0,9,29,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,420,"            newarray[i][1] = array[i][0];
",0,0,1,4,8,0,0,0,0,9,29,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,422,"        return newarray;
",2,0,0,0,0,1,0,0,0,2,16,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,30,"public class UnicodeUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,62,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,87,"        if (toType instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,41,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,91,"        if (toType instanceof WildcardType) {
",2,0,0,1,3,0,0,2,0,4,37,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,92,"            return isAssignable(type, (WildcardType) toType, typeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,65,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,230,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,338,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,344,"        if (toWildcardType == null) {
",2,1,0,1,3,0,0,0,0,3,29,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,349,"        if (toWildcardType.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,34,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,353,"        Type[] toUpperBounds = getImplicitUpperBounds(toWildcardType);
",2,0,0,2,4,0,4,2,0,8,62,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,354,"        Type[] toLowerBounds = getImplicitLowerBounds(toWildcardType);
",2,0,0,2,4,0,4,2,0,8,62,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,356,"        if (type instanceof WildcardType) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,394,"        for (Type toBound : toUpperBounds) {
",4,0,0,1,3,0,0,2,0,6,36,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,397,"            if (!isAssignable(type, substituteTypeVariables(toBound, typeVarAssigns),
",0,0,0,1,4,0,10,0,0,11,73,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,403,"        for (Type toBound : toLowerBounds) {
",4,0,0,1,3,0,0,2,0,6,36,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,406,"            if (!isAssignable(substituteTypeVariables(toBound, typeVarAssigns), type,
",0,0,0,1,4,0,10,0,0,11,73,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,412,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,472,"        if (type instanceof TypeVariable<?> && typeVarAssigns != null) {
",4,2,0,1,3,0,0,2,0,8,64,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,483,"        return type;
",2,0,0,0,0,1,0,0,0,2,12,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,534,"        return getTypeArguments(type, toClass, null);
",0,0,0,1,2,1,6,0,0,7,45,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,639,"        return getTypeArguments(getClosestParentType(cls, toClass), toClass, typeVarAssigns);
",0,0,0,2,4,1,12,0,0,12,85,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,834,"        return cls.getGenericSuperclass();
",0,0,0,1,2,1,4,0,0,4,34,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,877,"        if (bounds.length < 2) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,878,"            return bounds;
",2,0,0,0,0,1,0,0,0,2,14,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,927,"        Type[] bounds = wildcardType.getUpperBounds();
",2,0,0,2,4,0,4,2,0,8,46,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,929,"        return bounds.length == 0 ? new Type[] { Object.class } : normalizeUpperBounds(bounds);
",4,1,0,3,6,1,4,4,0,13,87,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,942,"        Type[] bounds = wildcardType.getLowerBounds();
",2,0,0,2,4,0,4,2,0,8,46,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,944,"        return bounds.length == 0 ? new Type[] { null } : bounds;
",6,1,0,2,4,1,0,2,0,9,57,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,83,"        if (toType instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,42,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,84,"            return isAssignable(type, (ParameterizedType) toType, typeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,70,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,181,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,187,"        if (toParameterizedType == null) {
",2,1,0,1,3,0,0,0,0,3,34,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,192,"        if (toParameterizedType.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,39,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,197,"        Class<?> toClass = getRawType(toParameterizedType);
",2,0,0,1,2,0,4,2,0,8,51,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,200,"        Map<TypeVariable<?>, Type> fromTypeVarAssigns = getTypeArguments(type, toClass, null);
",2,0,0,1,2,0,6,6,0,15,86,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,203,"        if (fromTypeVarAssigns == null) {
",2,1,0,1,3,0,0,0,0,3,33,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,210,"        if (fromTypeVarAssigns.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,35,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,215,"        Map<TypeVariable<?>, Type> toTypeVarAssigns = getTypeArguments(toParameterizedType,
",2,0,0,0,1,0,4,6,0,12,83,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,219,"        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,76,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,220,"            Type toTypeArg = entry.getValue();
",2,0,0,1,2,0,4,2,0,8,34,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,221,"            Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());
",2,0,0,2,4,0,8,2,0,12,58,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,226,"            if (fromTypeArg != null
",2,1,0,0,1,0,0,0,0,3,23,8,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,232,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,234,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,680,"        return getTypeArguments(getClosestParentType(cls, toClass), toClass, typeVarAssigns);
",0,0,0,2,4,1,12,0,0,12,85,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1440,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1441,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1238,"        return new File(System.getProperty(JAVA_HOME_KEY));
",0,0,0,2,4,1,6,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1253,"        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));
",0,0,0,2,4,1,6,2,0,8,56,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1305,"        } catch (SecurityException ex) {
",2,0,0,1,4,0,0,2,0,4,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1307,"            System.err.println(""Caught a SecurityException reading the system property '"" + property
",6,1,0,0,1,0,2,0,0,10,88,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1309,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1325,"        return new File(System.getProperty(USER_DIR_KEY));
",0,0,0,2,4,1,6,2,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1340,"        return new File(System.getProperty(USER_HOME_KEY));
",0,0,0,2,4,1,6,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1352,"        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;
",6,1,0,2,4,1,6,0,0,14,93,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1388,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1407,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1424,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,119,"        return get(nom);
",0,0,0,1,2,1,4,0,0,4,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,133,"            return JAVA_0_9;
",2,0,0,0,0,1,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,135,"            return JAVA_1_1;
",2,0,0,0,0,1,0,0,0,2,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,137,"            return JAVA_1_2;
",2,0,0,0,0,1,0,0,0,2,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,139,"            return JAVA_1_3;
",2,0,0,0,0,1,0,0,0,2,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,141,"            return JAVA_1_4;
",2,0,0,0,0,1,0,0,0,2,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,143,"            return JAVA_1_5;
",2,0,0,0,0,1,0,0,0,2,16,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,145,"            return JAVA_1_6;
",2,0,0,0,0,1,0,0,0,2,16,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,148,"        } else if (""1.8"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,149,"            return JAVA_1_8;
",2,0,0,0,0,1,0,0,0,2,16,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,151,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,165,"        return name;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,314,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,315,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,341,"        return ESCAPE_JAVA.translate(input);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,370,"        return ESCAPE_ECMASCRIPT.translate(input);
",0,0,0,1,2,1,6,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,383,"        return UNESCAPE_JAVA.translate(input);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,400,"        return UNESCAPE_ECMASCRIPT.translate(input);
",0,0,0,1,2,1,6,0,0,6,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,446,"        return ESCAPE_HTML3.translate(input);
",0,0,0,1,2,1,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,468,"        return UNESCAPE_HTML4.translate(input);
",0,0,0,1,2,1,6,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,482,"        return UNESCAPE_HTML3.translate(input);
",0,0,0,1,2,1,6,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,506,"        return ESCAPE_XML.translate(input);
",0,0,0,1,2,1,6,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,527,"        return UNESCAPE_XML.translate(input);
",0,0,0,1,2,1,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,556,"        return ESCAPE_CSV.translate(input);
",0,0,0,1,2,1,6,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,582,"        return UNESCAPE_CSV.translate(input);
",0,0,0,1,2,1,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,55,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,61,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,63,"            throw new RuntimeException(ioe);
",2,0,0,1,2,0,0,2,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,77,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,80,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,122,"        return Integer.toHexString(codepoint).toUpperCase(Locale.ENGLISH);
",4,0,0,2,4,1,8,0,0,12,66,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,156,"            if(index != 0) {
",2,1,0,1,3,0,0,0,0,3,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,157,"                throw new IllegalStateException(""CsvEscaper should never reach the [1] index"");
",0,0,0,2,4,0,0,2,0,3,79,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {
",0,0,0,3,7,0,10,0,0,10,67,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,161,"                out.write(input.toString());
",0,0,0,2,4,0,8,0,0,8,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,163,"                out.write(CSV_QUOTE);
",0,0,0,1,2,0,6,0,0,6,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,164,"                out.write(StringUtils.replace(input.toString(), CSV_QUOTE_STR, CSV_QUOTE_STR + CSV_QUOTE_STR));
",4,1,0,3,6,0,14,0,0,19,95,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,165,"                out.write(CSV_QUOTE);
",0,0,0,1,2,0,6,0,0,6,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,167,"            return input.length();
",0,0,0,1,2,1,4,0,0,4,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,279,"            if(index != 0) {
",2,1,0,1,3,0,0,0,0,3,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,280,"                throw new IllegalStateException(""CsvUnescaper should never reach the [1] index"");
",0,0,0,2,4,0,0,2,0,3,81,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,283,"            if ( input.charAt(0) != CSV_QUOTE || input.charAt(input.length() - 1) != CSV_QUOTE ) {
",4,4,0,4,9,0,12,0,0,20,86,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,284,"                out.write(input.toString());
",0,0,0,2,4,0,8,0,0,8,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,285,"                return input.length();
",0,0,0,1,2,1,4,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,289,"            String quoteless = input.subSequence(1, input.length() - 1).toString();
",2,1,0,3,6,0,10,2,0,15,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,291,"            if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {
",0,0,0,2,5,0,8,0,0,8,61,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,293,"                out.write(StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR));
",4,1,0,2,4,0,12,0,0,17,88,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,295,"                out.write(input.toString());
",0,0,0,2,4,0,8,0,0,8,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,297,"            return input.length();
",0,0,0,1,2,1,4,0,0,4,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,138,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,139,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,151,"        if (object == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,152,"            return valueIfNull;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,154,"        return getShortClassName(object.getClass());
",0,0,0,2,4,1,6,0,0,6,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,168,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,169,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,171,"        return getShortClassName(cls.getName());
",0,0,0,2,4,1,6,0,0,6,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,187,"        if (className == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,188,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,190,"        if (className.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,191,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,194,"        StringBuilder arrayPrefix = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,197,"        if (className.startsWith(""["")) {
",0,0,0,2,6,0,4,0,0,5,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,198,"            while (className.charAt(0) == '[') {
",0,1,0,2,6,0,4,0,0,6,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,199,"                className = className.substring(1);
",2,0,0,1,2,0,4,0,0,7,35,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,200,"                arrayPrefix.append(""[]"");
",0,0,0,2,4,0,4,0,0,5,25,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,203,"            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
",0,4,0,4,9,0,12,0,0,18,84,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,204,"                className = className.substring(1, className.length() - 1);
",2,1,0,2,4,0,8,0,0,12,59,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,208,"        if (reverseAbbreviationMap.containsKey(className)) {
",0,0,0,2,5,0,6,0,0,6,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,209,"            className = reverseAbbreviationMap.get(className);
",2,0,0,1,2,0,6,0,0,9,50,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,212,"        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
",2,0,0,1,2,0,6,0,0,8,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,213,"        int innerIdx = className.indexOf(
",2,0,0,0,1,0,4,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,215,"        String out = className.substring(lastDotIdx + 1);
",4,1,0,1,2,0,4,2,0,11,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,216,"        if (innerIdx != -1) {
",2,1,0,1,3,0,0,0,0,4,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,217,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);
",2,0,0,1,2,0,8,0,0,11,70,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,219,"        return out + arrayPrefix;
",4,1,0,0,0,1,0,0,0,5,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,231,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,232,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,234,"        return cls.getSimpleName();
",0,0,0,1,2,1,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,247,"        if (object == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,248,"            return valueIfNull;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,250,"        return getSimpleName(object.getClass());
",0,0,0,2,4,1,6,0,0,6,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,263,"        if (object == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,264,"            return valueIfNull;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,266,"        return getPackageName(object.getClass());
",0,0,0,2,4,1,6,0,0,6,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,276,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,277,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,279,"        return getPackageName(cls.getName());
",0,0,0,2,4,1,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,292,"        if (className == null || className.length() == 0) {
",2,3,0,2,5,0,4,0,0,9,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,293,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,297,"        while (className.charAt(0) == '[') {
",0,1,0,2,6,0,4,0,0,6,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,298,"            className = className.substring(1);
",2,0,0,1,2,0,4,0,0,7,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,301,"        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
",0,4,0,4,9,0,12,0,0,18,84,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,302,"            className = className.substring(1);
",2,0,0,1,2,0,4,0,0,7,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,305,"        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
",2,0,0,1,2,0,6,0,0,8,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,306,"        if (i == -1) {
",2,1,0,1,3,0,0,0,0,4,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,307,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,309,"        return className.substring(0, i);
",0,0,0,1,2,1,6,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,322,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,323,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,325,"        List<Class<?>> classes = new ArrayList<Class<?>>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,326,"        Class<?> superclass = cls.getSuperclass();
",2,0,0,1,2,0,4,2,0,8,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,327,"        while (superclass != null) {
",2,1,0,1,3,0,0,0,0,3,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,328,"            classes.add(superclass);
",0,0,0,1,2,0,6,0,0,6,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,329,"            superclass = superclass.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,331,"        return classes;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,348,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,349,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,352,"        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();
",2,0,0,1,2,0,0,8,0,10,72,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,353,"        getAllInterfaces(cls, interfacesFound);
",0,0,0,1,2,0,6,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,355,"        return new ArrayList<Class<?>>(interfacesFound);
",2,0,0,1,2,1,0,4,0,6,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,365,"        while (cls != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,366,"            Class<?>[] interfaces = cls.getInterfaces();
",2,0,0,2,4,0,4,2,0,8,44,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,368,"            for (Class<?> i : interfaces) {
",4,0,0,1,3,0,0,2,0,6,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,369,"                if (interfacesFound.add(i)) {
",0,0,0,2,5,0,6,0,0,6,29,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,370,"                    getAllInterfaces(i, interfacesFound);
",0,0,0,1,2,0,6,0,0,6,37,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,374,"            cls = cls.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,375,"         }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,376,"     }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,393,"        if (classNames == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,394,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,396,"        List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());
",2,0,0,2,4,0,4,8,0,14,68,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,397,"        for (String className : classNames) {
",4,0,0,1,3,0,0,2,0,6,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,399,"                classes.add(Class.forName(className));
",0,0,0,2,4,0,10,0,0,10,38,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,402,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,400,"            } catch (Exception ex) {
",2,0,0,1,4,0,0,2,0,4,24,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,401,"                classes.add(null);
",0,0,0,1,2,0,4,0,0,4,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,403,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,404,"        return classes;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,420,"        if (classes == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,421,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,423,"        List<String> classNames = new ArrayList<String>(classes.size());
",2,0,0,2,4,0,4,8,0,14,64,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,424,"        for (Class<?> cls : classes) {
",4,0,0,1,3,0,0,2,0,6,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,425,"            if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,426,"                classNames.add(null);
",0,0,0,1,2,0,4,0,0,4,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,428,"                classNames.add(cls.getName());
",0,0,0,2,4,0,8,0,0,8,30,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,430,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,431,"        return classNames;
",2,0,0,0,0,1,0,0,0,2,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,473,"        return isAssignable(classArray, toClassArray, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));
",4,0,0,2,4,1,10,0,0,14,102,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,509,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {
",0,1,0,2,5,0,8,0,0,10,65,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,510,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,512,"        if (classArray == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,513,"            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;
",6,0,0,0,0,0,0,0,0,7,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,515,"        if (toClassArray == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,516,"            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;
",6,0,0,0,0,0,0,0,0,7,44,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,518,"        for (int i = 0; i < classArray.length; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,519,"            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {
",0,1,1,4,9,0,4,0,0,14,72,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,520,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,523,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,537,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,538,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,540,"        return type.isPrimitive() || isPrimitiveWrapper(type);
",0,1,0,2,4,1,8,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,554,"        return wrapperPrimitiveMap.containsKey(type);
",0,0,0,1,2,1,6,0,0,6,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,621,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,625,"            return !toClass.isPrimitive();
",0,0,0,1,2,1,4,0,0,5,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,632,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,636,"                cls = wrapperToPrimitive(cls);
",2,0,0,1,2,0,4,0,0,7,30,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,637,"                if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,638,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,643,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,646,"            if (toClass.isPrimitive() == false) {
",0,1,0,2,5,0,4,0,0,6,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,647,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,649,"            if (Integer.TYPE.equals(cls)) {
",4,0,0,2,5,0,4,0,0,8,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,650,"                return Long.TYPE.equals(toClass)
",4,0,0,1,2,1,4,0,0,8,32,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,654,"            if (Long.TYPE.equals(cls)) {
",4,0,0,2,5,0,4,0,0,8,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,655,"                return Float.TYPE.equals(toClass)
",4,0,0,1,2,1,4,0,0,8,33,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,658,"            if (Boolean.TYPE.equals(cls)) {
",4,0,0,2,5,0,4,0,0,8,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,659,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,661,"            if (Double.TYPE.equals(cls)) {
",4,0,0,2,5,0,4,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,662,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,664,"            if (Float.TYPE.equals(cls)) {
",4,0,0,2,5,0,4,0,0,8,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,665,"                return Double.TYPE.equals(toClass);
",4,0,0,1,2,1,4,0,0,8,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,667,"            if (Character.TYPE.equals(cls)) {
",4,0,0,2,5,0,4,0,0,8,33,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,668,"                return Integer.TYPE.equals(toClass)
",4,0,0,1,2,1,4,0,0,8,35,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,673,"            if (Short.TYPE.equals(cls)) {
",4,0,0,2,5,0,4,0,0,8,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,674,"                return Integer.TYPE.equals(toClass)
",4,0,0,1,2,1,4,0,0,8,35,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,679,"            if (Byte.TYPE.equals(cls)) {
",4,0,0,2,5,0,4,0,0,8,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,680,"                return Short.TYPE.equals(toClass)
",4,0,0,1,2,1,4,0,0,8,33,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,687,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,723,"        if (classes == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,724,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,727,"        if (classes.length == 0) {
",4,1,0,1,3,0,0,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,728,"            return classes;
",2,0,0,0,0,1,0,0,0,2,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,731,"        Class<?>[] convertedClasses = new Class[classes.length];
",6,0,0,2,4,0,0,4,0,10,56,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,732,"        for (int i = 0; i < classes.length; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,733,"            convertedClasses[i] = primitiveToWrapper(classes[i]);
",0,0,1,3,6,0,2,0,0,11,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,735,"        return convertedClasses;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,755,"        return wrapperPrimitiveMap.get(cls);
",0,0,0,1,2,1,6,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,773,"        if (classes == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,774,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,777,"        if (classes.length == 0) {
",4,1,0,1,3,0,0,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,778,"            return classes;
",2,0,0,0,0,1,0,0,0,2,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,781,"        Class<?>[] convertedClasses = new Class[classes.length];
",6,0,0,2,4,0,0,4,0,10,56,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,782,"        for (int i = 0; i < classes.length; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,783,"            convertedClasses[i] = wrapperToPrimitive(classes[i]);
",0,0,1,3,6,0,2,0,0,11,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,785,"        return convertedClasses;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,798,"        return cls != null && cls.getEnclosingClass() != null;
",2,3,0,1,2,1,4,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,819,"            if (abbreviationMap.containsKey(className)) {
",0,0,0,2,5,0,6,0,0,6,45,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,820,"                String clsName = ""["" + abbreviationMap.get(className);
",2,1,0,1,3,0,6,2,0,12,54,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,821,"                clazz = Class.forName(clsName, initialize, classLoader).getComponentType();
",2,0,0,2,4,0,12,0,0,15,75,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,822,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,823,"                clazz = Class.forName(toCanonicalName(className), initialize, classLoader);
",2,0,0,2,4,0,12,0,0,15,75,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,825,"            return clazz;
",2,0,0,0,0,1,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,826,"        } catch (ClassNotFoundException ex) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,828,"            int lastDotIndex = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
",2,0,0,1,2,0,6,0,0,8,65,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,830,"            if (lastDotIndex != -1) {
",2,1,0,1,3,0,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,832,"                    return getClass(classLoader, className.substring(0, lastDotIndex) +
",0,1,0,1,3,1,10,0,0,11,67,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,835,"                } catch (ClassNotFoundException ex2) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,47,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,840,"            throw ex;
",2,0,0,0,0,0,0,0,0,2,9,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,857,"        return getClass(classLoader, className, true);
",0,0,0,1,2,1,6,0,0,7,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,872,"        return getClass(className, true);
",0,0,0,1,2,1,4,0,0,5,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,887,"        ClassLoader contextCL = Thread.currentThread().getContextClassLoader();
",2,0,0,2,4,0,6,2,0,10,71,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,888,"        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;
",6,1,0,1,2,0,2,4,0,13,87,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,889,"        return getClass(loader, className, initialize);
",0,0,0,1,2,1,8,0,0,8,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,918,"        Method declaredMethod = cls.getMethod(methodName, parameterTypes);
",2,0,0,1,2,0,8,2,0,12,66,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,919,"        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {
",0,0,0,4,9,0,10,0,0,10,75,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,920,"            return declaredMethod;
",2,0,0,0,0,1,0,0,0,2,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,923,"        List<Class<?>> candidateClasses = new ArrayList<Class<?>>();
",2,0,0,1,2,0,0,8,0,10,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,924,"        candidateClasses.addAll(getAllInterfaces(cls));
",0,0,0,2,4,0,8,0,0,8,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,925,"        candidateClasses.addAll(getAllSuperclasses(cls));
",0,0,0,2,4,0,8,0,0,8,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,927,"        for (Class<?> candidateClass : candidateClasses) {
",4,0,0,1,3,0,0,2,0,6,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,928,"            if (!Modifier.isPublic(candidateClass.getModifiers())) {
",0,0,0,3,7,0,8,0,0,9,56,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,929,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,933,"                candidateMethod = candidateClass.getMethod(methodName, parameterTypes);
",2,0,0,1,2,0,8,0,0,11,71,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,936,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,934,"            } catch (NoSuchMethodException ex) {
",2,0,0,1,4,0,0,2,0,4,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,935,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,937,"            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {
",0,0,0,4,9,0,10,0,0,10,76,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,938,"                return candidateMethod;
",2,0,0,0,0,1,0,0,0,2,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,940,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,942,"        throw new NoSuchMethodException(""Can't find a public method for "" +
",0,1,0,0,1,0,0,2,0,4,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,954,"        className = StringUtils.deleteWhitespace(className);
",2,0,0,1,2,0,6,0,0,9,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,955,"        if (className == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,956,"            throw new NullPointerException(""className must not be null."");
",0,0,0,1,2,0,0,2,0,4,62,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,957,"        } else if (className.endsWith(""[]"")) {
",0,0,0,3,8,0,4,0,0,5,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,958,"            StringBuilder classNameBuffer = new StringBuilder();
",2,0,0,1,2,0,0,4,0,6,52,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,959,"            while (className.endsWith(""[]"")) {
",0,0,0,3,7,0,4,0,0,5,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,960,"                className = className.substring(0, className.length() - 2);
",2,1,0,2,4,0,8,0,0,12,59,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,961,"                classNameBuffer.append(""["");
",0,0,0,1,3,0,4,0,0,5,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,963,"            String abbreviation = abbreviationMap.get(className);
",2,0,0,1,2,0,6,2,0,10,53,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,964,"            if (abbreviation != null) {
",2,1,0,1,3,0,0,0,0,3,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,965,"                classNameBuffer.append(abbreviation);
",0,0,0,1,2,0,6,0,0,6,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,967,"                classNameBuffer.append(""L"").append(className).append("";"");
",0,0,0,3,6,0,10,0,0,12,58,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,969,"            className = classNameBuffer.toString();
",2,0,0,1,2,0,4,0,0,7,39,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,971,"        return className;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,985,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,986,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,987,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,988,"            return ArrayUtils.EMPTY_CLASS_ARRAY;
",4,0,0,0,0,1,0,0,0,4,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,990,"        Class<?>[] classes = new Class[array.length];
",6,0,0,2,4,0,0,4,0,10,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,991,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,992,"            classes[i] = array[i] == null ? null : array[i].getClass();
",0,1,1,4,8,0,2,0,0,16,59,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,994,"        return classes;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1008,"        if (object == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1009,"            return valueIfNull;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1011,"        return getShortCanonicalName(object.getClass().getName());
",0,0,0,3,6,1,8,0,0,8,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1022,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1023,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1025,"        return getShortCanonicalName(cls.getName());
",0,0,0,2,4,1,6,0,0,6,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1038,"        return ClassUtils.getShortClassName(getCanonicalName(canonicalName));
",0,0,0,2,4,1,8,0,0,8,69,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1052,"        if (object == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1053,"            return valueIfNull;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1055,"        return getPackageCanonicalName(object.getClass().getName());
",0,0,0,3,6,1,8,0,0,8,60,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1066,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1067,"            return StringUtils.EMPTY;
",4,0,0,0,0,1,0,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1069,"        return getPackageCanonicalName(cls.getName());
",0,0,0,2,4,1,6,0,0,6,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1083,"        return ClassUtils.getPackageName(getCanonicalName(canonicalName));
",0,0,0,2,4,1,8,0,0,8,66,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1103,"        className = StringUtils.deleteWhitespace(className);
",2,0,0,1,2,0,6,0,0,9,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1104,"        if (className == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1105,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1107,"            int dim = 0;
",2,0,0,0,0,0,0,0,0,2,12,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1108,"            while (className.startsWith(""["")) {
",0,0,0,2,6,0,4,0,0,5,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1109,"                dim++;
",2,0,0,0,0,0,0,0,0,3,6,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1110,"                className = className.substring(1);
",2,0,0,1,2,0,4,0,0,7,35,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1112,"            if (dim < 1) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1113,"                return className;
",2,0,0,0,0,1,0,0,0,2,17,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1115,"                if (className.startsWith(""L"")) {
",0,0,0,2,5,0,4,0,0,5,32,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1116,"                    className = className.substring(
",2,0,0,0,1,0,4,0,0,7,32,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1122,"                    if (className.length() > 0) {
",0,1,0,2,5,0,4,0,0,5,29,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1123,"                        className = reverseAbbreviationMap.get(className.substring(0, 1));
",2,0,0,2,4,0,8,0,0,11,66,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1126,"                StringBuilder canonicalClassNameBuffer = new StringBuilder(className);
",4,0,0,1,2,0,0,4,0,8,70,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1127,"                for (int i = 0; i < dim; i++) {
",8,1,0,1,3,0,0,0,0,10,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1128,"                    canonicalClassNameBuffer.append(""[]"");
",0,0,0,2,4,0,4,0,0,5,38,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,1130,"                return canonicalClassNameBuffer.toString();
",0,0,0,1,2,1,4,0,0,4,43,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,138,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,139,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,159,"        return toString(array, ""{}"");
",0,0,0,2,4,1,4,0,0,5,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,175,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,176,"            return stringIfNull;
",2,0,0,0,0,1,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,178,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();
",6,0,0,3,6,1,6,2,0,14,87,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,190,"        return new HashCodeBuilder().append(array).toHashCode();
",0,0,0,3,6,1,6,2,0,8,56,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,204,"        return new EqualsBuilder().append(array1, array2).isEquals();
",0,0,0,3,6,1,8,2,0,10,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,235,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,236,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,238,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));
",6,1,0,3,6,1,0,12,0,20,88,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,239,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,240,"            Object object = array[i];
",2,0,1,1,2,0,0,2,0,8,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,241,"            if (object instanceof Map.Entry<?, ?>) {
",6,0,0,1,3,0,0,0,0,6,40,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,242,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;
",12,0,0,1,2,0,0,0,0,12,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,243,"                map.put(entry.getKey(), entry.getValue());
",0,0,0,3,6,0,12,0,0,12,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,244,"            } else if (object instanceof Object[]) {
",2,0,0,2,6,0,0,2,0,4,40,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,245,"                Object[] entry = (Object[]) object;
",4,0,0,3,6,0,0,4,0,8,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,246,"                if (entry.length < 2) {
",4,1,0,1,3,0,0,0,0,5,23,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,247,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""
",2,1,0,0,1,0,0,2,0,7,63,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,251,"                map.put(entry[0], entry[1]);
",0,0,1,3,6,0,4,0,0,8,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,252,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,253,"                throw new IllegalArgumentException(""Array element "" + i + "", '""
",2,1,0,0,1,0,0,2,0,7,63,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,258,"        return map;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,301,"        return items;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,321,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,336,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,337,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,339,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,352,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,353,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,355,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,368,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,369,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,371,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,384,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,385,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,387,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,400,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,401,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,403,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,416,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,417,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,419,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,432,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,433,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,435,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,448,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,449,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,451,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,470,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,471,"            return EMPTY_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,473,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,490,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,491,"            return EMPTY_STRING_ARRAY;
",2,0,0,0,0,1,0,0,0,2,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,493,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,510,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,511,"            return EMPTY_LONG_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,513,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,530,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,531,"            return EMPTY_INT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,533,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,550,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,551,"            return EMPTY_SHORT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,553,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,570,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,571,"            return EMPTY_CHAR_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,573,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,590,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,591,"            return EMPTY_BYTE_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,593,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,610,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,611,"            return EMPTY_DOUBLE_ARRAY;
",2,0,0,0,0,1,0,0,0,2,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,613,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,630,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,631,"            return EMPTY_FLOAT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,633,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,650,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,651,"            return EMPTY_BOOLEAN_ARRAY;
",2,0,0,0,0,1,0,0,0,2,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,653,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,670,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,671,"            return EMPTY_LONG_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,673,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,690,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,691,"            return EMPTY_INTEGER_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,693,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,710,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,711,"            return EMPTY_SHORT_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,713,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,730,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,731,"            return EMPTY_CHARACTER_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,733,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,750,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,751,"            return EMPTY_BYTE_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,753,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,770,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,771,"            return EMPTY_DOUBLE_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,773,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,790,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,791,"            return EMPTY_FLOAT_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,793,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,810,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,811,"            return EMPTY_BOOLEAN_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,813,"        return array;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,847,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,848,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,850,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,851,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,853,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,854,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,856,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,857,"        Class<?> type = array.getClass().getComponentType();
",2,0,0,2,4,0,6,2,0,10,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,858,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,860,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);
",2,0,0,4,8,1,6,4,0,13,56,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,861,"            return emptyArray;
",2,0,0,0,0,1,0,0,0,2,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,864,"        T[] subarray = (T[]) Array.newInstance(type, newSize);
",2,0,0,4,8,0,8,4,0,14,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,865,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,866,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,889,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,890,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,892,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,893,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,895,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,896,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,898,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,899,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,900,"            return EMPTY_LONG_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,903,"        long[] subarray = new long[newSize];
",2,0,1,2,4,0,0,0,0,4,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,904,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,905,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,928,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,929,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,931,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,932,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,934,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,935,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,937,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,938,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,939,"            return EMPTY_INT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,942,"        int[] subarray = new int[newSize];
",2,0,1,2,4,0,0,0,0,4,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,943,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,944,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,967,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,968,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,970,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,971,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,973,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,974,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,976,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,977,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,978,"            return EMPTY_SHORT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,981,"        short[] subarray = new short[newSize];
",2,0,1,2,4,0,0,0,0,4,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,982,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,983,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1006,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1007,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1009,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1010,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1012,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1013,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1015,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1016,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1017,"            return EMPTY_CHAR_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1020,"        char[] subarray = new char[newSize];
",2,0,1,2,4,0,0,0,0,4,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1021,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1022,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1045,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1046,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1048,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1049,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1051,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1052,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1054,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1055,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1056,"            return EMPTY_BYTE_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1059,"        byte[] subarray = new byte[newSize];
",2,0,1,2,4,0,0,0,0,4,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1060,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1061,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1084,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1085,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1087,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1088,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1090,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1091,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1093,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1094,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1095,"            return EMPTY_DOUBLE_ARRAY;
",2,0,0,0,0,1,0,0,0,2,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1098,"        double[] subarray = new double[newSize];
",2,0,1,2,4,0,0,0,0,4,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1099,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1100,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1123,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1124,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1126,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1127,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1129,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1130,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1132,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1133,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1134,"            return EMPTY_FLOAT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1137,"        float[] subarray = new float[newSize];
",2,0,1,2,4,0,0,0,0,4,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1138,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1139,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1162,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1163,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1165,"        if (startIndexInclusive < 0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1166,"            startIndexInclusive = 0;
",2,0,0,0,0,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1168,"        if (endIndexExclusive > array.length) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1169,"            endIndexExclusive = array.length;
",6,0,0,0,0,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1171,"        int newSize = endIndexExclusive - startIndexInclusive;
",6,1,0,0,0,0,0,0,0,7,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1172,"        if (newSize <= 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1173,"            return EMPTY_BOOLEAN_ARRAY;
",2,0,0,0,0,1,0,0,0,2,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1176,"        boolean[] subarray = new boolean[newSize];
",2,0,1,2,4,0,0,0,0,4,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1177,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);
",0,0,0,1,2,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1178,"        return subarray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1195,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1198,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1200,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1213,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1216,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1218,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1231,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1234,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1236,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1249,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1252,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1254,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1267,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1270,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1272,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1285,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1288,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1290,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1303,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1306,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1308,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1321,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1324,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1326,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1339,"        if ((array1 == null && array2 != null && array2.length > 0) ||
",8,6,0,1,3,0,0,0,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1342,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1344,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1369,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1370,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1372,"        return Array.getLength(array);
",0,0,0,1,2,1,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1385,"        if (array1 == null || array2 == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1386,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1388,"        return array1.getClass().getName().equals(array2.getClass().getName());
",0,0,0,5,10,1,14,0,0,14,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1403,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1404,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1406,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1407,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1409,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1410,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1411,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1412,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1413,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1414,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1416,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1426,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1427,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1429,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1430,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1432,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1433,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1434,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1435,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1436,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1437,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1439,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1449,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1450,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1452,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1453,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1455,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1456,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1457,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1458,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1459,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1460,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1462,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1472,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1473,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1475,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1476,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1478,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1479,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1480,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1481,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1482,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1483,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1485,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1495,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1496,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1498,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1499,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1501,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1502,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1503,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1504,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1505,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1506,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1508,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1518,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1519,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1521,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1522,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1524,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1525,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1526,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1527,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1528,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1529,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1531,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1541,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1542,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1544,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1545,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1547,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1548,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1549,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1550,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1551,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1552,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1554,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1564,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1565,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1567,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1568,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1570,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1571,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1572,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1573,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1574,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1575,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1577,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1587,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1588,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1590,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1591,"        int j = array.length - 1;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1593,"        while (j > i) {
",4,1,0,1,3,0,0,0,0,5,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1594,"            tmp = array[j];
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1595,"            array[j] = array[i];
",0,0,1,2,4,0,0,0,0,9,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1596,"            array[i] = tmp;
",2,0,1,1,2,0,0,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1597,"            j--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1598,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1600,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1618,"        return indexOf(array, objectToFind, 0);
",0,0,0,1,2,1,6,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1636,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1637,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1639,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1640,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1642,"        if (objectToFind == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1643,"            for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1644,"                if (array[i] == null) {
",0,1,1,2,5,0,0,0,0,5,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1645,"                    return i;
",2,0,0,0,0,1,0,0,0,2,9,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1648,"        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {
",0,0,0,4,10,0,10,0,0,10,74,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1649,"            for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1650,"                if (objectToFind.equals(array[i])) {
",0,0,1,3,7,0,4,0,0,8,36,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1651,"                    return i;
",2,0,0,0,0,1,0,0,0,2,9,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1655,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1669,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1687,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1688,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1690,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1691,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1692,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1693,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1695,"        if (objectToFind == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1696,"            for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1697,"                if (array[i] == null) {
",0,1,1,2,5,0,0,0,0,5,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1698,"                    return i;
",2,0,0,0,0,1,0,0,0,2,9,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1701,"        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {
",0,0,0,4,10,0,10,0,0,10,74,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1702,"            for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1703,"                if (objectToFind.equals(array[i])) {
",0,0,1,3,7,0,4,0,0,8,36,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1704,"                    return i;
",2,0,0,0,0,1,0,0,0,2,9,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1708,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1721,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1737,"        return indexOf(array, valueToFind, 0);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1755,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1756,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1758,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1759,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1761,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1762,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1763,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1766,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1780,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1798,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1799,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1801,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1802,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1803,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1804,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1806,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1807,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1808,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1811,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1824,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1840,"        return indexOf(array, valueToFind, 0);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1858,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1859,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1861,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1862,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1864,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1865,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1866,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1869,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1883,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1901,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1902,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1904,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1905,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1906,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1907,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1909,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1910,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1911,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1914,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1927,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1943,"        return indexOf(array, valueToFind, 0);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1961,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1962,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1964,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1965,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1967,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1968,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1969,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1972,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,1986,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2004,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2005,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2007,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2008,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2009,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2010,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2012,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2013,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2014,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2017,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2030,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2047,"        return indexOf(array, valueToFind, 0);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2066,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2067,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2069,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2070,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2072,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2073,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2074,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2077,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2092,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2111,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2112,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2114,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2115,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2116,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2117,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2119,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2120,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2121,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2124,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2138,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2154,"        return indexOf(array, valueToFind, 0);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2172,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2173,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2175,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2176,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2178,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2179,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2180,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2183,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2197,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2215,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2216,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2218,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2219,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2220,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2221,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2223,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2224,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2225,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2228,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2241,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2257,"        return indexOf(array, valueToFind, 0);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2274,"        return indexOf(array, valueToFind, 0, tolerance);
",0,0,0,1,2,1,8,0,0,8,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2292,"        if (ArrayUtils.isEmpty(array)) {
",0,0,0,2,5,0,6,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2293,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2295,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2296,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2298,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2299,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2300,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2303,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2324,"        if (ArrayUtils.isEmpty(array)) {
",0,0,0,2,5,0,6,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2325,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2327,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2328,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2330,"        double min = valueToFind - tolerance;
",6,1,0,0,0,0,0,0,0,7,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2331,"        double max = valueToFind + tolerance;
",6,1,0,0,0,0,0,0,0,7,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2332,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2333,"            if (array[i] >= min && array[i] <= max) {
",4,3,1,3,7,0,0,0,0,15,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2334,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2337,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2351,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2368,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);
",4,0,0,1,2,1,8,0,0,12,69,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2386,"        if (ArrayUtils.isEmpty(array)) {
",0,0,0,2,5,0,6,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2387,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2389,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2390,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2391,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2392,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2394,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2395,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2396,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2399,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2420,"        if (ArrayUtils.isEmpty(array)) {
",0,0,0,2,5,0,6,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2421,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2423,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2424,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2425,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2426,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2428,"        double min = valueToFind - tolerance;
",6,1,0,0,0,0,0,0,0,7,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2429,"        double max = valueToFind + tolerance;
",6,1,0,0,0,0,0,0,0,7,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2430,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2431,"            if (array[i] >= min && array[i] <= max) {
",4,3,1,3,7,0,0,0,0,15,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2432,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2435,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2448,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2465,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,8,0,0,11,68,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2481,"        return indexOf(array, valueToFind, 0);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2499,"        if (ArrayUtils.isEmpty(array)) {
",0,0,0,2,5,0,6,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2500,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2502,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2503,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2505,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2506,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2507,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2510,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2524,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2542,"        if (ArrayUtils.isEmpty(array)) {
",0,0,0,2,5,0,6,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2543,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2545,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2546,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2547,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2548,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2550,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2551,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2552,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2555,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2568,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2584,"        return indexOf(array, valueToFind, 0);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2603,"        if (ArrayUtils.isEmpty(array)) {
",0,0,0,2,5,0,6,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2604,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2606,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2607,"            startIndex = 0;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2609,"        for (int i = startIndex; i < array.length; i++) {
",12,1,0,1,3,0,0,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2610,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2611,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2614,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2629,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2647,"        if (ArrayUtils.isEmpty(array)) {
",0,0,0,2,5,0,6,0,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2648,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2650,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2651,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2652,"        } else if (startIndex >= array.length) {
",6,1,0,1,4,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2653,"            startIndex = array.length - 1;
",6,1,0,0,0,0,0,0,0,8,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2655,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2656,"            if (valueToFind == array[i]) {
",2,1,1,2,5,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2657,"                return i;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2660,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,1,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2673,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;
",2,1,0,1,2,1,6,0,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2691,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2692,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2693,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2694,"            return EMPTY_CHAR_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2696,"        final char[] result = new char[array.length];
",6,0,0,2,4,1,0,0,0,7,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2697,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2698,"            result[i] = array[i].charValue();
",0,0,1,3,6,0,2,0,0,11,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2700,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2713,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2714,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2715,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2716,"            return EMPTY_CHAR_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2718,"        final char[] result = new char[array.length];
",6,0,0,2,4,1,0,0,0,7,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2719,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2720,"            Character b = array[i];
",2,0,1,1,2,0,0,2,0,8,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2721,"            result[i] = (b == null ? valueForNull : b.charValue());
",4,1,1,3,6,0,4,0,0,14,55,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2723,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2735,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2736,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2737,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2738,"            return EMPTY_CHARACTER_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2740,"        final Character[] result = new Character[array.length];
",6,0,0,2,4,1,0,4,0,11,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2741,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2742,"            result[i] = Character.valueOf(array[i]);
",0,0,1,3,6,0,4,0,0,13,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2744,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2759,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2760,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2761,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2762,"            return EMPTY_LONG_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2764,"        final long[] result = new long[array.length];
",6,0,0,2,4,1,0,0,0,7,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2765,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2766,"            result[i] = array[i].longValue();
",0,0,1,3,6,0,2,0,0,11,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2768,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2781,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2782,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2783,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2784,"            return EMPTY_LONG_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2786,"        final long[] result = new long[array.length];
",6,0,0,2,4,1,0,0,0,7,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2787,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2788,"            Long b = array[i];
",2,0,1,1,2,0,0,2,0,8,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2789,"            result[i] = (b == null ? valueForNull : b.longValue());
",4,1,1,3,6,0,4,0,0,14,55,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2791,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2803,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2804,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2805,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2806,"            return EMPTY_LONG_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2808,"        final Long[] result = new Long[array.length];
",6,0,0,2,4,1,0,4,0,11,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2809,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2810,"            result[i] = Long.valueOf(array[i]);
",0,0,1,3,6,0,4,0,0,13,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2812,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2827,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2828,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2829,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2830,"            return EMPTY_INT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2832,"        final int[] result = new int[array.length];
",6,0,0,2,4,1,0,0,0,7,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2833,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2834,"            result[i] = array[i].intValue();
",0,0,1,3,6,0,2,0,0,11,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2836,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2849,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2850,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2851,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2852,"            return EMPTY_INT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2854,"        final int[] result = new int[array.length];
",6,0,0,2,4,1,0,0,0,7,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2855,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2856,"            Integer b = array[i];
",2,0,1,1,2,0,0,2,0,8,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2857,"            result[i] = (b == null ? valueForNull : b.intValue());
",4,1,1,3,6,0,4,0,0,14,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2859,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2871,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2872,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2873,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2874,"            return EMPTY_INTEGER_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2876,"        final Integer[] result = new Integer[array.length];
",6,0,0,2,4,1,0,4,0,11,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2877,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2878,"            result[i] = Integer.valueOf(array[i]);
",0,0,1,3,6,0,4,0,0,13,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2880,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2895,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2896,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2897,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2898,"            return EMPTY_SHORT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2900,"        final short[] result = new short[array.length];
",6,0,0,2,4,1,0,0,0,7,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2901,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2902,"            result[i] = array[i].shortValue();
",0,0,1,3,6,0,2,0,0,11,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2904,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2917,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2918,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2919,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2920,"            return EMPTY_SHORT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2922,"        final short[] result = new short[array.length];
",6,0,0,2,4,1,0,0,0,7,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2923,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2924,"            Short b = array[i];
",2,0,1,1,2,0,0,2,0,8,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2925,"            result[i] = (b == null ? valueForNull : b.shortValue());
",4,1,1,3,6,0,4,0,0,14,56,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2927,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2939,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2940,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2941,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2942,"            return EMPTY_SHORT_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2944,"        final Short[] result = new Short[array.length];
",6,0,0,2,4,1,0,4,0,11,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2945,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2946,"            result[i] = Short.valueOf(array[i]);
",0,0,1,3,6,0,4,0,0,13,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2948,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2963,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2964,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2965,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2966,"            return EMPTY_BYTE_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2968,"        final byte[] result = new byte[array.length];
",6,0,0,2,4,1,0,0,0,7,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2969,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2970,"            result[i] = array[i].byteValue();
",0,0,1,3,6,0,2,0,0,11,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2972,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2985,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2986,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2987,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2988,"            return EMPTY_BYTE_ARRAY;
",2,0,0,0,0,1,0,0,0,2,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2990,"        final byte[] result = new byte[array.length];
",6,0,0,2,4,1,0,0,0,7,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2991,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2992,"            Byte b = array[i];
",2,0,1,1,2,0,0,2,0,8,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2993,"            result[i] = (b == null ? valueForNull : b.byteValue());
",4,1,1,3,6,0,4,0,0,14,55,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,2995,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3007,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3008,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3009,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3010,"            return EMPTY_BYTE_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3012,"        final Byte[] result = new Byte[array.length];
",6,0,0,2,4,1,0,4,0,11,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3013,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3014,"            result[i] = Byte.valueOf(array[i]);
",0,0,1,3,6,0,4,0,0,13,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3016,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3031,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3032,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3033,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3034,"            return EMPTY_DOUBLE_ARRAY;
",2,0,0,0,0,1,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3036,"        final double[] result = new double[array.length];
",6,0,0,2,4,1,0,0,0,7,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3037,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3038,"            result[i] = array[i].doubleValue();
",0,0,1,3,6,0,2,0,0,11,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3040,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3053,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3054,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3055,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3056,"            return EMPTY_DOUBLE_ARRAY;
",2,0,0,0,0,1,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3058,"        final double[] result = new double[array.length];
",6,0,0,2,4,1,0,0,0,7,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3059,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3060,"            Double b = array[i];
",2,0,1,1,2,0,0,2,0,8,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3061,"            result[i] = (b == null ? valueForNull : b.doubleValue());
",4,1,1,3,6,0,4,0,0,14,57,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3063,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3075,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3076,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3077,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3078,"            return EMPTY_DOUBLE_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,33,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3080,"        final Double[] result = new Double[array.length];
",6,0,0,2,4,1,0,4,0,11,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3081,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3082,"            result[i] = Double.valueOf(array[i]);
",0,0,1,3,6,0,4,0,0,13,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3084,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3099,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3100,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3101,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3102,"            return EMPTY_FLOAT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3104,"        final float[] result = new float[array.length];
",6,0,0,2,4,1,0,0,0,7,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3105,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3106,"            result[i] = array[i].floatValue();
",0,0,1,3,6,0,2,0,0,11,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3108,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3121,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3122,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3123,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3124,"            return EMPTY_FLOAT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3126,"        final float[] result = new float[array.length];
",6,0,0,2,4,1,0,0,0,7,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3127,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3128,"            Float b = array[i];
",2,0,1,1,2,0,0,2,0,8,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3129,"            result[i] = (b == null ? valueForNull : b.floatValue());
",4,1,1,3,6,0,4,0,0,14,56,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3131,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3143,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3144,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3145,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3146,"            return EMPTY_FLOAT_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3148,"        final Float[] result = new Float[array.length];
",6,0,0,2,4,1,0,4,0,11,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3149,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3150,"            result[i] = Float.valueOf(array[i]);
",0,0,1,3,6,0,4,0,0,13,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3152,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3167,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3168,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3169,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3170,"            return EMPTY_BOOLEAN_ARRAY;
",2,0,0,0,0,1,0,0,0,2,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3172,"        final boolean[] result = new boolean[array.length];
",6,0,0,2,4,1,0,0,0,7,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3173,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3174,"            result[i] = array[i].booleanValue();
",0,0,1,3,6,0,2,0,0,11,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3176,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3189,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3190,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3191,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3192,"            return EMPTY_BOOLEAN_ARRAY;
",2,0,0,0,0,1,0,0,0,2,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3194,"        final boolean[] result = new boolean[array.length];
",6,0,0,2,4,1,0,0,0,7,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3195,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3196,"            Boolean b = array[i];
",2,0,1,1,2,0,0,2,0,8,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3197,"            result[i] = (b == null ? valueForNull : b.booleanValue());
",4,1,1,3,6,0,4,0,0,14,58,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3199,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3211,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3212,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3213,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3214,"            return EMPTY_BOOLEAN_OBJECT_ARRAY;
",2,0,0,0,0,1,0,0,0,2,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3216,"        final Boolean[] result = new Boolean[array.length];
",6,0,0,2,4,1,0,4,0,11,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3217,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3218,"            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);
",8,0,1,3,6,0,0,0,0,17,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3220,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3232,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3243,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3254,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3265,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3276,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3287,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3298,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3309,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3320,"        return array == null || array.length == 0;
",6,3,0,0,0,1,0,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3333,"         return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3344,"        return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3355,"        return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3366,"        return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3377,"        return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3388,"        return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3399,"        return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3410,"        return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3421,"        return (array != null && array.length != 0);
",6,3,0,1,2,1,0,0,0,9,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3449,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3450,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3451,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3452,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3454,"        final Class<?> type1 = array1.getClass().getComponentType();
",2,0,0,2,4,1,6,2,0,11,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3456,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
",10,1,0,4,8,0,6,4,0,21,80,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3457,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3459,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3473,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3460,"        } catch (ArrayStoreException ase) {
",2,0,0,1,4,0,0,2,0,4,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3467,"            final Class<?> type2 = array2.getClass().getComponentType();
",2,0,0,2,4,1,6,2,0,11,60,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3468,"            if (!type1.isAssignableFrom(type2)){
",0,0,0,2,5,0,6,0,0,7,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3469,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""
",0,1,0,1,3,0,4,2,0,9,85,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3472,"            throw ase; // No, so rethrow original
",2,0,0,0,0,0,0,0,0,2,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3474,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3495,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3496,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3497,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3498,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3500,"        boolean[] joinedArray = new boolean[array1.length + array2.length];
",10,1,0,2,4,0,0,0,0,11,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3501,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3502,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3503,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3524,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3525,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3526,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3527,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3529,"        char[] joinedArray = new char[array1.length + array2.length];
",10,1,0,2,4,0,0,0,0,11,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3530,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3531,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3532,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3553,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3554,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3555,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3556,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3558,"        byte[] joinedArray = new byte[array1.length + array2.length];
",10,1,0,2,4,0,0,0,0,11,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3559,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3560,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3561,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3582,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3583,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3584,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3585,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3587,"        short[] joinedArray = new short[array1.length + array2.length];
",10,1,0,2,4,0,0,0,0,11,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3588,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3589,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3590,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3611,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3612,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3613,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3614,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3616,"        int[] joinedArray = new int[array1.length + array2.length];
",10,1,0,2,4,0,0,0,0,11,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3617,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3618,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3619,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3640,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3641,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3642,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3643,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3645,"        long[] joinedArray = new long[array1.length + array2.length];
",10,1,0,2,4,0,0,0,0,11,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3646,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3647,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3648,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3669,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3670,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3671,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3672,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3674,"        float[] joinedArray = new float[array1.length + array2.length];
",10,1,0,2,4,0,0,0,0,11,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3675,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3676,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3677,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3698,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3699,"            return clone(array2);
",0,0,0,1,2,1,4,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3700,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3701,"            return clone(array1);
",0,0,0,1,2,1,4,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3703,"        double[] joinedArray = new double[array1.length + array2.length];
",10,1,0,2,4,0,0,0,0,11,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3704,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3705,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3706,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3740,"        if (array != null){
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3741,"            type = array.getClass();
",2,0,0,1,2,0,4,0,0,7,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3742,"        } else if (element != null) {
",2,1,0,1,4,0,0,0,0,3,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3743,"            type = element.getClass();
",2,0,0,1,2,0,4,0,0,7,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3745,"            throw new IllegalArgumentException(""Arguments cannot both be null"");
",0,0,0,1,2,0,0,2,0,4,68,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3748,"        T[] newArray = (T[]) copyArrayGrow1(array, type);
",2,0,0,4,8,0,6,4,0,12,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3749,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3750,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3775,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);
",6,0,0,4,8,0,4,0,0,10,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3776,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3777,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3802,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);
",6,0,0,4,8,0,4,0,0,10,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3803,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3804,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3829,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);
",6,0,0,4,8,0,4,0,0,10,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3830,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3831,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3856,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);
",6,0,0,4,8,0,4,0,0,10,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3857,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3858,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3883,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);
",6,0,0,4,8,0,4,0,0,10,62,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3884,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3885,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3910,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);
",6,0,0,4,8,0,4,0,0,10,60,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3911,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3912,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3937,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);
",6,0,0,4,8,0,4,0,0,10,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3938,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3939,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3964,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);
",6,0,0,4,8,0,4,0,0,10,62,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3965,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3966,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3979,"        if (array != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3980,"            int arrayLength = Array.getLength(array);
",2,0,0,1,2,0,6,0,0,8,41,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3981,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);
",4,1,0,3,6,0,10,2,0,17,90,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3982,"            System.arraycopy(array, 0, newArray, 0, arrayLength);
",0,0,0,1,2,0,10,0,0,10,53,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3983,"            return newArray;
",2,0,0,0,0,1,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,3985,"        return Array.newInstance(newArrayComponentType, 1);
",0,0,0,1,2,1,6,0,0,6,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4019,"        Class<?> clss = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4020,"        if (array != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4021,"            clss = array.getClass().getComponentType();
",2,0,0,2,4,0,6,0,0,9,43,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4022,"        } else if (element != null) {
",2,1,0,1,4,0,0,0,0,3,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4023,"            clss = element.getClass();
",2,0,0,1,2,0,4,0,0,7,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4025,"            throw new IllegalArgumentException(""Array and element cannot both be null"");
",0,0,0,1,2,0,0,2,0,4,76,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4028,"        final T[] newArray = (T[]) add(array, index, element, clss);
",2,0,0,4,8,1,10,4,0,17,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4029,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4060,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);
",4,0,0,4,8,1,12,0,0,16,77,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4092,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);
",4,0,0,4,8,1,12,0,0,16,78,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4123,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);
",4,0,0,4,8,1,12,0,0,16,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4154,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);
",4,0,0,4,8,1,12,0,0,16,71,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4185,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);
",4,0,0,4,8,1,12,0,0,16,73,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4216,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);
",4,0,0,4,8,1,12,0,0,16,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4247,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);
",4,0,0,4,8,1,12,0,0,16,71,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4278,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);
",4,0,0,4,8,1,12,0,0,16,74,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4293,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4294,"            if (index != 0) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4295,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");
",2,1,0,1,2,0,0,2,0,7,71,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4297,"            Object joinedArray = Array.newInstance(clss, 1);
",2,0,0,1,2,0,6,2,0,10,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4298,"            Array.set(joinedArray, 0, element);
",0,0,0,1,2,0,8,0,0,8,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4299,"            return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4301,"        int length = Array.getLength(array);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4302,"        if (index > length || index < 0) {
",6,3,0,1,3,0,0,0,0,9,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4303,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);
",4,1,0,1,2,0,0,2,0,9,79,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4305,"        Object result = Array.newInstance(clss, length + 1);
",4,1,0,1,2,0,6,2,0,13,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4306,"        System.arraycopy(array, 0, result, 0, index);
",0,0,0,1,2,0,10,0,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4307,"        Array.set(result, index, element);
",0,0,0,1,2,0,10,0,0,10,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4308,"        if (index < length) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4309,"            System.arraycopy(array, index, result, index + 1, length - index);
",6,2,0,1,2,0,10,0,0,18,66,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4311,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4345,"        return (T[]) remove((Object) array, index);
",2,0,0,4,8,1,4,4,0,10,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4375,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4376,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4377,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4379,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4411,"        return (boolean[]) remove((Object) array, index);
",2,0,0,4,8,1,4,2,0,8,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4440,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4441,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4442,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4444,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4476,"        return (byte[]) remove((Object) array, index);
",2,0,0,4,8,1,4,2,0,8,46,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4505,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4506,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4507,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4509,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4541,"        return (char[]) remove((Object) array, index);
",2,0,0,4,8,1,4,2,0,8,46,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4570,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4571,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4572,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4574,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4606,"        return (double[]) remove((Object) array, index);
",2,0,0,4,8,1,4,2,0,8,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4635,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4636,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4637,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4639,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4671,"        return (float[]) remove((Object) array, index);
",2,0,0,4,8,1,4,2,0,8,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4700,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4701,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4702,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4704,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4736,"        return (int[]) remove((Object) array, index);
",2,0,0,4,8,1,4,2,0,8,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4765,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4766,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4767,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4769,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4801,"        return (long[]) remove((Object) array, index);
",2,0,0,4,8,1,4,2,0,8,46,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4830,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4831,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4832,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4834,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4866,"        return (short[]) remove((Object) array, index);
",2,0,0,4,8,1,4,2,0,8,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4895,"        int index = indexOf(array, element);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4896,"        if (index == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4897,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4899,"        return remove(array, index);
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4924,"        int length = getLength(array);
",2,0,0,1,2,0,4,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4925,"        if (index < 0 || index >= length) {
",6,3,0,1,3,0,0,0,0,9,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4926,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);
",4,1,0,1,2,0,0,2,0,9,79,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4929,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);
",4,1,0,3,6,0,10,2,0,17,83,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4930,"        System.arraycopy(array, 0, result, 0, index);
",0,0,0,1,2,0,10,0,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4931,"        if (index < length - 1) {
",4,2,0,1,3,0,0,0,0,6,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4932,"            System.arraycopy(array, index + 1, result, index, length - index - 1);
",6,2,0,1,2,0,10,0,0,18,70,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4935,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4967,"        return (T[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,4,0,12,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,4999,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5000,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5002,"        HashMap<T, MutableInt> occurrences = new HashMap<T, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,79,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5003,"        for (T v : values) {
",4,0,0,1,3,0,0,2,0,6,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5004,"            MutableInt count = occurrences.get(v);
",2,0,0,1,2,0,6,2,0,10,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5005,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5006,"                occurrences.put(v, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,38,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5008,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5011,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5012,"        for (Map.Entry<T, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,59,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5013,"            T v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5014,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5015,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5016,"                found = indexOf(array, v, found);
",2,0,0,1,2,0,8,0,0,11,33,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5017,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5018,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5020,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5022,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5023,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5056,"        return (byte[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,2,0,10,58,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5087,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5088,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5090,"        HashMap<Byte, MutableInt> occurrences = new HashMap<Byte, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,85,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5091,"        for (byte v : values) {
",4,0,0,1,3,0,0,0,0,4,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5092,"            Byte boxed = Byte.valueOf(v);
",2,0,0,1,2,0,6,2,0,10,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5093,"            MutableInt count = occurrences.get(boxed);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5094,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5095,"                occurrences.put(boxed, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5097,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5100,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5101,"        for (Map.Entry<Byte, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5102,"            Byte v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5103,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5104,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5105,"                found = indexOf(array, v.byteValue(), found);
",2,0,0,2,4,0,10,0,0,13,45,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5106,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5107,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5109,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5111,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5112,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5145,"        return (short[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,2,0,10,59,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5176,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5177,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5179,"        HashMap<Short, MutableInt> occurrences = new HashMap<Short, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,87,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5180,"        for (short v : values) {
",4,0,0,1,3,0,0,0,0,4,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5181,"            Short boxed = Short.valueOf(v);
",2,0,0,1,2,0,6,2,0,10,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5182,"            MutableInt count = occurrences.get(boxed);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5183,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5184,"                occurrences.put(boxed, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5186,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5189,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5190,"        for (Map.Entry<Short, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,63,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5191,"            Short v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5192,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5193,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5194,"                found = indexOf(array, v.shortValue(), found);
",2,0,0,2,4,0,10,0,0,13,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5195,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5196,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5198,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5200,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5201,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5234,"        return (int[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,2,0,10,57,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5265,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5266,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5268,"        HashMap<Integer, MutableInt> occurrences = new HashMap<Integer, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,91,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5269,"        for (int v : values) {
",4,0,0,1,3,0,0,0,0,4,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5270,"            Integer boxed = Integer.valueOf(v);
",2,0,0,1,2,0,6,2,0,10,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5271,"            MutableInt count = occurrences.get(boxed);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5272,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5273,"                occurrences.put(boxed, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5275,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5278,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5279,"        for (Map.Entry<Integer, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,65,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5280,"            Integer v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5281,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5282,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5283,"                found = indexOf(array, v.intValue(), found);
",2,0,0,2,4,0,10,0,0,13,44,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5284,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5285,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5287,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5289,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5290,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5323,"        return (char[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,2,0,10,58,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5354,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5355,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5357,"        HashMap<Character, MutableInt> occurrences = new HashMap<Character, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,95,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5358,"        for (char v : values) {
",4,0,0,1,3,0,0,0,0,4,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5359,"            Character boxed = Character.valueOf(v);
",2,0,0,1,2,0,6,2,0,10,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5360,"            MutableInt count = occurrences.get(boxed);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5361,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5362,"                occurrences.put(boxed, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5364,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5367,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5368,"        for (Map.Entry<Character, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,67,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5369,"            Character v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5370,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5371,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5372,"                found = indexOf(array, v.charValue(), found);
",2,0,0,2,4,0,10,0,0,13,45,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5373,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5374,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5376,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5378,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5379,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5412,"        return (long[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,2,0,10,58,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5443,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5444,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5446,"        HashMap<Long, MutableInt> occurrences = new HashMap<Long, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,85,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5447,"        for (long v : values) {
",4,0,0,1,3,0,0,0,0,4,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5448,"            Long boxed = Long.valueOf(v);
",2,0,0,1,2,0,6,2,0,10,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5449,"            MutableInt count = occurrences.get(boxed);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5450,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5451,"                occurrences.put(boxed, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5453,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5456,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5457,"        for (Map.Entry<Long, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,62,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5458,"            Long v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5459,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5460,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5461,"                found = indexOf(array, v.longValue(), found);
",2,0,0,2,4,0,10,0,0,13,45,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5462,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5463,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5465,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5467,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5468,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5501,"        return (float[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,2,0,10,59,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5532,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5533,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5535,"        HashMap<Float, MutableInt> occurrences = new HashMap<Float, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,87,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5536,"        for (float v : values) {
",4,0,0,1,3,0,0,0,0,4,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5537,"            Float boxed = Float.valueOf(v);
",2,0,0,1,2,0,6,2,0,10,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5538,"            MutableInt count = occurrences.get(boxed);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5539,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5540,"                occurrences.put(boxed, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5542,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5545,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5546,"        for (Map.Entry<Float, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,63,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5547,"            Float v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5548,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5549,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5550,"                found = indexOf(array, v.floatValue(), found);
",2,0,0,2,4,0,10,0,0,13,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5551,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5552,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5554,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5556,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5557,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5590,"        return (double[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,2,0,10,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5621,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5622,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5624,"        HashMap<Double, MutableInt> occurrences = new HashMap<Double, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,89,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5625,"        for (double v : values) {
",4,0,0,1,3,0,0,0,0,4,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5626,"            Double boxed = Double.valueOf(v);
",2,0,0,1,2,0,6,2,0,10,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5627,"            MutableInt count = occurrences.get(boxed);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5628,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5629,"                occurrences.put(boxed, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5631,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5634,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5635,"        for (Map.Entry<Double, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,64,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5636,"            Double v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5637,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5638,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5639,"                found = indexOf(array, v.doubleValue(), found);
",2,0,0,2,4,0,10,0,0,13,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5640,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5641,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5643,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5645,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5646,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5675,"        return (boolean[]) removeAll((Object) array, clone(indices));
",2,0,0,5,10,1,6,2,0,10,61,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5706,"        if (isEmpty(array) || isEmpty(values)) {
",0,1,0,3,7,0,8,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5707,"            return clone(array);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5709,"        HashMap<Boolean, MutableInt> occurrences = new HashMap<Boolean, MutableInt>(values.length);
",6,0,0,1,2,0,0,12,0,18,91,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5710,"        for (boolean v : values) {
",4,0,0,1,3,0,0,0,0,4,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5711,"            Boolean boxed = Boolean.valueOf(v);
",2,0,0,1,2,0,6,2,0,10,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5712,"            MutableInt count = occurrences.get(boxed);
",2,0,0,1,2,0,6,2,0,10,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5713,"            if (count == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5714,"                occurrences.put(boxed, new MutableInt(1));
",0,0,0,2,4,0,6,2,0,8,42,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5716,"                count.increment();
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5719,"        HashSet<Integer> toRemove = new HashSet<Integer>();
",2,0,0,1,2,0,0,8,0,10,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5720,"        for (Map.Entry<Boolean, MutableInt> e : occurrences.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,65,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5721,"            Boolean v = e.getKey();
",2,0,0,1,2,0,4,2,0,8,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5722,"            int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5723,"            for (int i = 0, ct = e.getValue().intValue(); i < ct; i++) {
",10,1,0,3,7,0,6,0,0,18,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5724,"                found = indexOf(array, v.booleanValue(), found);
",2,0,0,2,4,0,10,0,0,13,48,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5725,"                if (found < 0) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5726,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5728,"                toRemove.add(found++);
",2,0,0,1,2,0,4,0,0,7,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5730,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5731,"        return removeAll(array, extractIndices(toRemove));
",0,0,0,2,4,1,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5742,"        int length = getLength(array);
",2,0,0,1,2,0,4,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5743,"        int diff = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5745,"        if (isNotEmpty(indices)) {
",0,0,0,2,5,0,4,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5746,"            Arrays.sort(indices);
",0,0,0,1,2,0,6,0,0,6,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5748,"            int i = indices.length;
",6,0,0,0,0,0,0,0,0,6,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5749,"            int prevIndex = length;
",4,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5750,"            while (--i >= 0) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5751,"                int index = indices[i];
",2,0,1,1,2,0,0,0,0,6,23,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5752,"                if (index < 0 || index >= length) {
",6,3,0,1,3,0,0,0,0,9,35,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5753,"                    throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);
",4,1,0,1,2,0,0,2,0,9,79,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5755,"                if (index >= prevIndex) {
",4,1,0,1,3,0,0,0,0,5,25,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5756,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5758,"                diff++;
",2,0,0,0,0,0,0,0,0,3,7,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5759,"                prevIndex = index;
",4,0,0,0,0,0,0,0,0,5,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5760,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5762,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - diff);
",6,1,0,3,6,0,10,2,0,19,86,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5763,"        if (diff < length) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5764,"            int end = length;
",4,0,0,0,0,0,0,0,0,4,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5765,"            int dest = length - diff;
",6,1,0,0,0,0,0,0,0,7,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5766,"            for (int i = indices.length - 1; i >= 0; i--) {
",10,2,0,1,3,0,0,0,0,13,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5767,"                int index = indices[i];
",2,0,1,1,2,0,0,0,0,6,23,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5768,"                if (end - index > 1) {
",4,2,0,1,3,0,0,0,0,6,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5769,"                    int cp = end - index - 1;
",6,1,0,0,0,0,0,0,0,7,25,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5770,"                    dest -= cp;
",4,0,0,0,0,0,0,0,0,5,11,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5771,"                    System.arraycopy(array, index + 1, result, dest, cp);
",2,1,0,1,2,0,12,0,0,15,53,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5773,"                end = index;
",4,0,0,0,0,0,0,0,0,5,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5775,"            if (end > 0) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5776,"                System.arraycopy(array, 0, result, 0, end);
",0,0,0,1,2,0,10,0,0,10,43,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5779,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5789,"        int[] result = new int[coll.size()];
",2,0,0,3,6,0,4,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5790,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5791,"        for (Integer index : coll) {
",4,0,0,1,3,0,0,2,0,6,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5792,"            result[i++] = index.intValue();
",2,0,1,2,4,0,4,0,0,10,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5793,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,5794,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,51,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,52,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,96,"        if (toType instanceof TypeVariable<?>) {
",2,0,0,1,3,0,0,2,0,4,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,97,"            return isAssignable(type, (TypeVariable<?>) toType, typeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,68,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,101,"        throw new IllegalStateException(""found an unhandled type: "" + toType);
",2,1,0,1,2,0,0,2,0,6,70,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,143,"            for (Type bound : ((TypeVariable<?>) type).getBounds()) {
",4,0,0,4,9,0,2,4,0,10,57,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,144,"                if (isAssignable(bound, toClass)) {
",0,0,0,2,5,0,6,0,0,6,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,145,"                    return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,149,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,163,"        if (type instanceof WildcardType) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,164,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,167,"        throw new IllegalStateException(""found an unhandled type: "" + type);
",2,1,0,1,2,0,0,2,0,6,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,182,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,188,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,204,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,240,"            result = typeVarAssigns.get(var);
",2,0,0,1,2,0,6,0,0,9,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,241,"            if (result instanceof TypeVariable<?> && !result.equals(var)) {
",2,1,0,2,5,0,6,2,0,12,63,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,242,"                var = (TypeVariable<?>) result;
",4,0,0,1,2,0,0,2,0,7,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,243,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,247,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,263,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,269,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,293,"        if (type instanceof WildcardType) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,295,"            for (Type bound : getImplicitUpperBounds((WildcardType) type)) {
",4,0,0,3,7,0,2,4,0,10,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,296,"                if (isAssignable(bound, toGenericArrayType)) {
",0,0,0,2,5,0,6,0,0,6,46,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,297,"                    return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,301,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,304,"        if (type instanceof TypeVariable<?>) {
",2,0,0,1,3,0,0,2,0,4,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,307,"            for (Type bound : getImplicitBounds((TypeVariable<?>) type)) {
",4,0,0,3,7,0,2,4,0,10,62,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,308,"                if (isAssignable(bound, toGenericArrayType)) {
",0,0,0,2,5,0,6,0,0,6,46,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,309,"                    return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,313,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,316,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,320,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,323,"        throw new IllegalStateException(""found an unhandled type: "" + type);
",2,1,0,1,2,0,0,2,0,6,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,339,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,345,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,350,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,427,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,428,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,433,"        if (toTypeVariable == null) {
",2,1,0,1,3,0,0,0,0,3,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,434,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,438,"        if (toTypeVariable.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,439,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,442,"        if (type instanceof TypeVariable<?>) {
",2,0,0,1,3,0,0,2,0,4,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,446,"            Type[] bounds = getImplicitBounds((TypeVariable<?>) type);
",4,0,0,3,6,0,2,4,0,10,58,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,448,"            for (Type bound : bounds) {
",4,0,0,1,3,0,0,2,0,6,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,449,"                if (isAssignable(bound, toTypeVariable, typeVarAssigns)) {
",0,0,0,2,5,0,8,0,0,8,58,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,450,"                    return true;
",0,0,0,0,0,1,0,0,0,1,12,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,455,"        if (type instanceof Class<?> || type instanceof ParameterizedType
",4,1,0,0,1,0,0,4,0,9,65,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,457,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,460,"        throw new IllegalStateException(""found an unhandled type: "" + type);
",2,1,0,1,2,0,0,2,0,6,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,473,"            Type replacementType = typeVarAssigns.get(type);
",2,0,0,1,2,0,6,2,0,10,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,475,"            if (replacementType == null) {
",2,1,0,1,3,0,0,0,0,3,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,476,"                throw new IllegalArgumentException(""missing assignment type for type variable ""
",0,0,0,0,1,0,0,2,0,3,79,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,480,"            return replacementType;
",2,0,0,0,0,1,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,498,"        return getTypeArguments(type, getRawType(type), null);
",0,0,0,2,4,1,8,0,0,10,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,555,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,556,"            return getTypeArguments(((GenericArrayType) type).getGenericComponentType(), toClass
",2,0,0,3,7,1,6,2,0,10,84,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,562,"        if (type instanceof WildcardType) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,563,"            for (Type bound : getImplicitUpperBounds((WildcardType) type)) {
",4,0,0,3,7,0,2,4,0,10,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,565,"                if (isAssignable(bound, toClass)) {
",0,0,0,2,5,0,6,0,0,6,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,566,"                    return getTypeArguments(bound, toClass, subtypeVarAssigns);
",0,0,0,1,2,1,8,0,0,8,59,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,570,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,574,"        if (type instanceof TypeVariable<?>) {
",2,0,0,1,3,0,0,2,0,4,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,575,"            for (Type bound : getImplicitBounds((TypeVariable<?>) type)) {
",4,0,0,3,7,0,2,4,0,10,62,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,577,"                if (isAssignable(bound, toClass)) {
",0,0,0,2,5,0,6,0,0,6,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,578,"                    return getTypeArguments(bound, toClass, subtypeVarAssigns);
",0,0,0,1,2,1,8,0,0,8,59,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,582,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,586,"        throw new IllegalStateException(""found an unhandled type: "" + type);
",2,1,0,1,2,0,0,2,0,6,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,604,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,612,"            ParameterizedType parameterizedOwnerType = (ParameterizedType) ownerType;
",4,0,0,1,2,0,0,4,0,8,73,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,613,"            typeVarAssigns = getTypeArguments(parameterizedOwnerType,
",2,0,0,0,1,0,4,0,0,7,57,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,615,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,654,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,663,"                return new HashMap<TypeVariable<?>, Type>();
",0,0,0,1,2,1,0,6,0,6,44,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,712,"        Class<?> superClass = getRawType(superType);
",2,0,0,1,2,0,4,2,0,8,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,715,"        if (!isAssignable(cls, superClass)) {
",0,0,0,2,5,0,6,0,0,7,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,716,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,719,"        if (cls.equals(superClass)) {
",0,0,0,2,5,0,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,720,"            return getTypeArguments(superType, superClass, null);
",0,0,0,1,2,1,6,0,0,7,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,724,"        Type midType = getClosestParentType(cls, superClass);
",2,0,0,1,2,0,6,2,0,10,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,727,"        if (midType instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,728,"            return determineTypeArguments((Class<?>) midType, superType);
",2,0,0,2,4,1,4,2,0,8,61,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,731,"        ParameterizedType midParameterizedType = (ParameterizedType) midType;
",4,0,0,1,2,0,0,4,0,8,69,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,732,"        Class<?> midClass = getRawType(midParameterizedType);
",2,0,0,1,2,0,4,2,0,8,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,735,"        Map<TypeVariable<?>, Type> typeVarAssigns = determineTypeArguments(midClass, superType);
",2,0,0,1,2,0,6,6,0,14,88,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,737,"        mapTypeVariablesToArguments(cls, midParameterizedType, typeVarAssigns);
",0,0,0,1,2,0,8,0,0,8,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,739,"        return typeVarAssigns;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,753,"        Type ownerType = parameterizedType.getOwnerType();
",2,0,0,1,2,0,4,2,0,8,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,755,"        if (ownerType instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,757,"            mapTypeVariablesToArguments(cls, (ParameterizedType) ownerType, typeVarAssigns);
",2,0,0,2,4,0,6,2,0,10,80,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,764,"        Type[] typeArgs = parameterizedType.getActualTypeArguments();
",2,0,0,2,4,0,4,2,0,8,61,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,768,"        TypeVariable<?>[] typeVars = getRawType(parameterizedType).getTypeParameters();
",2,0,0,3,6,0,6,2,0,10,79,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,771,"        List<TypeVariable<Class<T>>> typeVarList = Arrays.asList(cls
",2,0,0,0,1,0,6,8,0,16,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,774,"        for (int i = 0; i < typeArgs.length; i++) {
",10,1,0,1,3,0,0,0,0,12,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,775,"            TypeVariable<?> typeVar = typeVars[i];
",2,0,1,1,2,0,0,2,0,8,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,776,"            Type typeArg = typeArgs[i];
",2,0,1,1,2,0,0,2,0,8,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,779,"            if (typeVarList.contains(typeArg)
",0,0,0,1,3,0,6,0,0,6,33,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,784,"                typeVarAssigns.put((TypeVariable<?>) typeArg, typeVarAssigns.get(typeVar));
",2,0,0,3,6,0,10,2,0,14,75,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,787,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,811,"                } else if (midType instanceof Class<?>) {
",2,0,0,1,4,0,0,2,0,4,41,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,812,"                    midClass = (Class<?>) midType;
",4,0,0,1,2,0,0,2,0,7,30,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,814,"                    throw new IllegalStateException(""Unexpected generic""
",0,0,0,0,1,0,0,2,0,3,52,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,846,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,847,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,850,"        return value == null ? !(type instanceof Class<?>) || !((Class<?>) type).isPrimitive()
",6,2,0,4,8,1,2,4,0,16,86,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,881,"        Set<Type> types = new HashSet<Type>(bounds.length);
",6,0,0,1,2,0,0,8,0,14,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,883,"        for (Type type1 : bounds) {
",4,0,0,1,3,0,0,2,0,6,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,884,"            boolean subtypeFound = false;
",2,0,0,0,0,0,0,0,0,3,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,886,"            for (Type type2 : bounds) {
",4,0,0,1,3,0,0,2,0,6,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,887,"                if (type1 != type2 && isAssignable(type2, type1, null)) {
",4,2,0,2,5,0,6,0,0,13,57,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,888,"                    subtypeFound = true;
",2,0,0,0,0,0,0,0,0,4,20,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,889,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,893,"            if (!subtypeFound) {
",2,0,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,894,"                types.add(type1);
",0,0,0,1,2,0,6,0,0,6,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,898,"        return types.toArray(new Type[types.size()]);
",0,0,0,3,6,1,8,2,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,911,"        Type[] bounds = typeVariable.getBounds();
",2,0,0,2,4,0,4,2,0,8,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,913,"        return bounds.length == 0 ? new Type[] { Object.class } : normalizeUpperBounds(bounds);
",4,1,0,3,6,1,4,4,0,13,87,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,963,"        for (Map.Entry<TypeVariable<?>, Type> entry : typeVarAssigns.entrySet()) {
",6,0,0,2,5,0,4,4,0,14,74,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,964,"            TypeVariable<?> typeVar = entry.getKey();
",2,0,0,1,2,0,4,2,0,8,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,965,"            Type type = entry.getValue();
",2,0,0,1,2,0,4,2,0,8,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,967,"            for (Type bound : getImplicitBounds(typeVar)) {
",2,0,0,2,5,0,4,2,0,8,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,968,"                if (!isAssignable(type, substituteTypeVariables(bound, typeVarAssigns),
",0,0,0,1,4,0,10,0,0,11,71,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,970,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,973,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,975,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,994,"            throw new IllegalStateException(""Wait... What!? Type of rawType: "" + rawType);
",2,1,0,1,2,0,0,2,0,6,78,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1013,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1015,"            return (Class<?>) type;
",2,0,0,1,2,1,0,2,0,4,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1018,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1020,"            return getRawType((ParameterizedType) type);
",2,0,0,2,4,1,2,2,0,6,44,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1023,"        if (type instanceof TypeVariable<?>) {
",2,0,0,1,3,0,0,2,0,4,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1024,"            if (assigningType == null) {
",2,1,0,1,3,0,0,0,0,3,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1025,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1029,"            Object genericDeclaration = ((TypeVariable<?>) type).getGenericDeclaration();
",4,0,0,3,6,0,2,4,0,10,77,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1033,"            if (!(genericDeclaration instanceof Class<?>)) {
",2,0,0,2,5,0,0,2,0,5,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1034,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1039,"            Map<TypeVariable<?>, Type> typeVarAssigns = getTypeArguments(assigningType,
",2,0,0,0,1,0,4,6,0,12,75,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1044,"            if (typeVarAssigns == null) {
",2,1,0,1,3,0,0,0,0,3,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1045,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1049,"            Type typeArgument = typeVarAssigns.get(type);
",2,0,0,1,2,0,6,2,0,10,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1051,"            if (typeArgument == null) {
",2,1,0,1,3,0,0,0,0,3,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1052,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1056,"            return getRawType(typeArgument, assigningType);
",0,0,0,1,2,1,6,0,0,6,47,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1059,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1061,"            Class<?> rawComponentType = getRawType(((GenericArrayType) type)
",4,0,0,2,5,0,2,4,0,10,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1065,"            return Array.newInstance(rawComponentType, 0).getClass();
",0,0,0,2,4,1,8,0,0,8,57,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1069,"        if (type instanceof WildcardType) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1070,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1073,"        throw new IllegalArgumentException(""unknown type: "" + type);
",2,1,0,1,2,0,0,2,0,6,60,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1082,"        return type instanceof GenericArrayType || type instanceof Class<?> && ((Class<?>) type).isArray();
",6,2,0,3,6,1,2,6,0,16,99,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1091,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1092,"            Class<?> clazz = (Class<?>) type;
",4,0,0,1,2,0,0,4,0,8,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1093,"            return clazz.isArray() ? clazz.getComponentType() : null;
",0,0,0,2,4,1,8,0,0,8,57,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1095,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1096,"            return ((GenericArrayType) type).getGenericComponentType();
",2,0,0,3,6,1,2,2,0,6,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,1098,"        return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,67,"            max = input.length() - index;
",4,1,0,1,2,0,4,0,0,10,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,37,"        int codepoint = Character.codePointAt(input, index);
",2,0,0,1,2,0,8,0,0,10,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,38,"        boolean consumed = translate(codepoint, out);
",2,0,0,1,2,0,6,0,0,8,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,39,"        if (consumed) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,40,"            return 1;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,42,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,58,"            this.options = EnumSet.copyOf(Arrays.asList(options));
",2,0,0,2,4,0,10,0,0,13,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,71,"        return options == null ? false : options.contains(option);
",2,1,0,1,2,1,6,0,0,10,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,79,"        int seqEnd = input.length();
",2,0,0,1,2,0,4,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,81,"        if(input.charAt(index) == '&' && index < seqEnd - 2 && input.charAt(index + 1) == '#') {
",6,7,0,3,7,0,10,0,0,25,88,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,82,"            int start = index + 2;
",4,1,0,0,0,0,0,0,0,5,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,83,"            boolean isHex = false;
",2,0,0,0,0,0,0,0,0,3,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,85,"            char firstChar = input.charAt(start);
",2,0,0,1,2,0,6,0,0,8,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,86,"            if(firstChar == 'x' || firstChar == 'X') {
",4,3,0,1,3,0,0,0,0,9,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,87,"                start++;
",2,0,0,0,0,0,0,0,0,3,8,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,88,"                isHex = true;
",2,0,0,0,0,0,0,0,0,4,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,91,"                if(start == seqEnd) {
",4,1,0,1,3,0,0,0,0,5,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,92,"                    return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,96,"            int end = start;
",4,0,0,0,0,0,0,0,0,4,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,98,"            while(end < seqEnd && ( input.charAt(end) >= '0' && input.charAt(end) <= '9' ||
",4,7,0,2,6,0,12,0,0,25,79,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,102,"                end++;
",2,0,0,0,0,0,0,0,0,3,6,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,105,"            boolean semiNext = end != seqEnd && input.charAt(end) == ';';
",6,3,0,1,2,0,6,0,0,16,61,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,107,"            if(!semiNext) {
",2,0,0,1,3,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,108,"                if(isSet(OPTION.semiColonRequired)) {
",4,0,0,2,5,0,2,0,0,6,37,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,109,"                    return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,111,"                if(isSet(OPTION.errorIfNoSemiColon)) {
",4,0,0,2,5,0,2,0,0,6,38,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,112,"                    throw new IllegalArgumentException(""Semi-colon required at end of numeric entity"");
",0,0,0,1,2,0,0,2,0,3,83,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,118,"                if(isHex) {
",2,0,0,1,3,0,0,0,0,2,11,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,119,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
",2,0,0,3,6,0,14,0,0,17,77,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,121,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
",2,0,0,3,6,0,14,0,0,17,77,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,125,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,123,"            } catch(NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,124,"                return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,127,"            if(entityValue > 0xFFFF) {
",2,1,0,1,3,0,0,0,0,3,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,128,"                char[] chrs = Character.toChars(entityValue);
",2,0,0,2,4,0,6,0,0,8,45,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,129,"                out.write(chrs[0]);
",0,0,1,2,4,0,4,0,0,6,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,130,"                out.write(chrs[1]);
",0,0,1,2,4,0,4,0,0,6,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,131,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,132,"                out.write(entityValue);
",0,0,0,1,2,0,6,0,0,6,23,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,135,"            return 2 + end - start + (isHex ? 1 : 0) + (semiNext ? 1 : 0);
",8,4,0,2,4,1,0,0,0,12,62,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,137,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,38,"        this(0, Integer.MAX_VALUE, true);
",4,0,0,1,2,0,0,0,0,5,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,39,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,64,"        return outsideOf(codepoint, Integer.MAX_VALUE);
",4,0,0,1,2,1,4,0,0,8,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,74,"        return outsideOf(0, codepoint);
",0,0,0,1,2,1,4,0,0,4,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,96,"        return new UnicodeEscaper(codepointLow, codepointHigh, true);
",4,0,0,1,2,1,0,2,0,7,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,104,"        if(between) {
",2,0,0,1,3,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,105,"            if (codepoint < below || codepoint > above) {
",8,3,0,1,3,0,0,0,0,11,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,106,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,109,"            if (codepoint >= below && codepoint <= above) {
",8,3,0,1,3,0,0,0,0,11,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,110,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,115,"        if (codepoint > 0xffff) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,118,"            out.write(""\\u"" + hex(codepoint));
",0,1,0,2,4,0,8,0,0,10,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,119,"        } else if (codepoint > 0xfff) {
",2,1,0,1,4,0,0,0,0,3,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,120,"            out.write(""\\u"" + hex(codepoint));
",0,1,0,2,4,0,8,0,0,10,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,121,"        } else if (codepoint > 0xff) {
",2,1,0,1,4,0,0,0,0,3,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,122,"            out.write(""\\u0"" + hex(codepoint));
",0,1,0,2,4,0,8,0,0,10,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,123,"        } else if (codepoint > 0xf) {
",2,1,0,1,4,0,0,0,0,3,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,124,"            out.write(""\\u00"" + hex(codepoint));
",0,1,0,2,4,0,8,0,0,10,36,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,126,"            out.write(""\\u000"" + hex(codepoint));
",0,1,0,2,4,0,8,0,0,10,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,128,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,43,"        if(input.charAt(index) == '\\' && index < (input.length() - 1) && Character.isDigit(input.charAt(index + 1)) ) {
",4,6,0,6,13,0,18,0,0,29,112,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,44,"            int start = index + 1;
",4,1,0,0,0,0,0,0,0,5,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,46,"            int end = index + 2;
",4,1,0,0,0,0,0,0,0,5,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,47,"            while ( end < input.length() && Character.isDigit(input.charAt(end)) ) {
",2,2,0,4,9,0,14,0,0,18,72,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,48,"                end++;
",2,0,0,0,0,0,0,0,0,3,6,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,49,"                if ( Integer.parseInt(input.subSequence(start, end).toString(), 10) > OCTAL_MAX) {
",2,1,0,4,9,0,14,0,0,17,82,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,50,"                    end--; // rollback
",2,0,0,0,0,0,0,0,0,3,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,51,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,55,"            out.write( Integer.parseInt(input.subSequence(start, end).toString(), 8) );
",0,0,0,4,8,0,18,0,0,18,75,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,56,"            return 1 + end - start;
",4,2,0,0,0,1,0,0,0,6,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,58,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,27,"public class EntityArrays {
",2,0,0,0,1,1,0,0,0,3,27,1,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,37,"        if (input.charAt(index) == '\\' && index + 1 < input.length() && input.charAt(index + 1) == 'u') {
",4,7,0,4,9,0,14,0,0,27,98,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,39,"            int i = 2;
",2,0,0,0,0,0,0,0,0,2,10,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,40,"            while (index + i < input.length() && input.charAt(index + i) == 'u') {
",8,5,0,3,7,0,8,0,0,22,70,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,41,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,44,"            if (index + i < input.length() && input.charAt(index + i) == '+') {
",8,5,0,3,7,0,8,0,0,22,67,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,45,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,48,"            if (index + i + 4 <= input.length()) {
",4,2,0,2,5,0,4,0,0,10,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,50,"                CharSequence unicode = input.subSequence(index + i, index + i + 4);
",10,2,0,1,2,0,4,2,0,18,67,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,53,"                    int value = Integer.parseInt(unicode.toString(), 16);
",2,0,0,2,4,0,8,0,0,10,53,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,54,"                    out.write((char) value);
",2,0,0,2,4,0,4,0,0,6,24,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,57,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,55,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,56,"                    throw new IllegalArgumentException(""Unable to parse unicode value: "" + unicode, nfe);
",4,1,0,1,2,0,0,2,0,8,85,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,58,"                return i + 4;
",2,1,0,0,0,1,0,0,0,3,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,60,"                throw new IllegalArgumentException(""Less than 4 hex digits in unicode value: '"" + input.subSequence(index, input.length())
",0,1,0,2,5,0,10,2,0,14,122,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,64,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
