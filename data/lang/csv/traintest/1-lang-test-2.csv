dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,89,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04348,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,"        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
",2,2,1,7,14,0,8,4,0,25,133,4,0.25000,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,"                return foundDigit && !hasExp;
",4,1,0,0,0,1,0,0,0,6,29,8,0.00000,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,"        Calendar c = new GregorianCalendar(mTimeZone);
",4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,521,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,"        return ESCAPE_XML.translate(input);
",0,0,0,1,2,1,6,0,0,6,35,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.07692,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,"        for (CharSequenceTranslator translator : translators) {
",4,0,0,1,3,0,0,2,0,6,55,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,52,"            int consumed = translator.translate(input, index, out);
",2,0,0,1,2,0,10,0,0,12,55,7,0.06667,0,1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,53,"            if(consumed != 0) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,78,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,65,"        int max = longest;
",4,0,0,0,0,0,0,0,0,4,18,5,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,66,"        if (index + longest > input.length()) {
",4,2,0,2,5,0,4,0,0,10,39,4,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,70,"        for (int i = max; i >= shortest; i--) {
",10,1,0,1,3,0,0,0,0,12,39,4,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,71,"            CharSequence subSeq = input.subSequence(index, index + i);
",6,1,0,1,2,0,6,2,0,15,58,6,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,72,"            CharSequence result = lookupMap.get(subSeq);
",2,0,0,1,2,0,6,2,0,10,44,6,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,73,"            if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);
",10,0,0,1,2,0,0,4,0,14,77,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,"        String value = cTimeZoneDisplayCache.get(key);
",2,0,0,1,2,0,6,2,0,10,46,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);
",2,0,0,1,2,0,10,0,0,13,51,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);
",2,0,0,1,2,0,8,2,0,12,61,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,1,6,0,0,10,47,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,"        int noOfItems = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,40,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,"        if (noOfItems <= 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3295,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,"        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
",2,2,1,6,12,0,4,4,0,21,116,4,0.50000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3300,"        for (int i = startIndex; i < endIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,"            if (i > startIndex) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,"            if (array[i] != null) {
",0,1,1,2,5,0,0,0,0,5,23,6,0.50000,0,1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");
",2,0,0,1,2,3,4,2,0,12,73,2,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,"    private static final int[][] fields = {
",2,0,0,2,5,3,0,0,0,5,39,2,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");
",0,0,0,1,2,0,0,2,0,3,66,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,"            numerator/=2; denominator/=2;
",4,0,0,0,0,0,0,0,0,6,29,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,0
