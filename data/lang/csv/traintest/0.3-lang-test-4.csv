dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,"        getRegistry().add(new IDKey(value));
",2,0,0,3,6,0,4,2,0,8,36,5,0.14286,1,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,"            classes[i] = array[i].getClass();
",0,0,1,3,6,0,2,0,0,11,33,6,0.00000,1,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,164,"        return m.containsKey(value);
",0,0,0,1,2,1,6,0,0,6,28,5,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,"            return (T[]) new Object[] { null };
",0,0,0,4,8,1,0,4,0,4,35,8,0.00000,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,"		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,"		int csLength = cs.length();
",2,0,0,1,2,0,4,0,0,6,27,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,"		int searchLength = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,38,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,"		for (int i = 0; i < csLength; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,"			char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,"			for (int j = 0; j < searchLength; j++) {
",8,1,0,1,3,0,0,0,0,10,40,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);
",0,0,0,1,2,1,4,0,0,6,61,4,0.33333,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,"            return new HashSet<IDKey>();
",0,0,0,1,2,1,0,4,0,4,28,11,0.14286,0,-1
