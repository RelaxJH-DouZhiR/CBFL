dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.33333,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,872,"            calendar = (Calendar) calendar.clone();
",2,0,0,2,4,0,4,2,0,9,39,6,0.00000,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,"            int greater = replacementList[i].length() - searchList[i].length();
",2,1,1,4,8,0,4,0,0,15,67,7,1.00000,1,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());
",0,0,0,3,6,1,10,0,0,10,60,5,1.00000,1,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);
",0,0,0,1,2,1,4,0,0,7,50,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);
",6,0,0,1,2,0,0,0,0,6,29,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,"        this.setUpToClass(reflectUpToClass);
",0,0,0,1,2,0,4,0,0,4,36,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,"        this.setAppendTransients(outputTransients);
",0,0,0,1,2,0,4,0,0,4,43,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,"        this.setAppendStatics(outputStatics);
",0,0,0,1,2,0,4,0,0,4,37,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)
",10,0,0,1,2,1,0,2,0,13,108,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,"        if (array != null){
",2,1,0,1,3,0,0,0,0,3,19,4,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);
",2,0,0,4,8,0,6,4,0,12,49,4,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);
",0,0,0,1,2,1,6,0,0,6,51,5,0.12500,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,"        if (array != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.10000,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,"        if (!Character.isDigit(lastChar)) {
",0,0,0,2,5,0,6,0,0,7,35,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.33333,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.33333,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,"        final Class<?> type1 = array1.getClass().getComponentType();
",2,0,0,2,4,1,6,2,0,11,60,4,0.33333,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.33333,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);
",0,0,0,1,2,1,6,0,0,7,44,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,"                for (int i = mSize; --i >= 2; ) {
",6,1,0,1,3,0,0,0,0,8,33,7,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,"                    buffer.append('0');
",0,0,0,1,2,0,4,0,0,5,19,10,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,"                buffer.append((char)(value / 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,8,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,"                buffer.append((char)(value % 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,8,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,"        if (text == null || text.length() == 0 || searchList == null || 
",4,8,0,1,3,0,4,0,0,16,63,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,"            return text;
",2,0,0,0,0,1,0,0,0,2,12,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,"        if (timeToLive < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,"        int searchLength = searchList.length;
",6,0,0,0,0,0,0,0,0,6,37,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,"        int replacementLength = replacementList.length;
",6,0,0,0,0,0,0,0,0,6,47,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,"        if (searchLength != replacementLength) {
",4,1,0,1,3,0,0,0,0,5,40,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,"        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
",2,0,1,2,4,0,0,0,0,4,64,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,"        int textIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,"        int replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,3,22,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,"        int tempIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,"        for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,"        return str.indexOf(searchStr) >= 0;
",0,1,0,1,2,1,6,0,0,7,35,4,0.50000,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.33333,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,168,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0,-1
