dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,"            if (zone.useDaylightTime()
",0,0,0,1,3,0,4,0,0,4,26,7,1,1,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,91,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,97,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();
",2,0,0,1,2,3,0,12,0,17,89,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,102,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();
",2,0,0,1,2,3,0,12,0,17,96,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,119,"        addAbbreviation(""int"", ""I"");
",0,0,0,1,2,0,2,0,0,4,28,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,120,"        addAbbreviation(""boolean"", ""Z"");
",0,0,0,1,2,0,2,0,0,4,32,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,121,"        addAbbreviation(""float"", ""F"");
",0,0,0,1,2,0,2,0,0,4,30,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,122,"        addAbbreviation(""long"", ""J"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,123,"        addAbbreviation(""short"", ""S"");
",0,0,0,1,2,0,2,0,0,4,30,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,124,"        addAbbreviation(""byte"", ""B"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,125,"        addAbbreviation(""double"", ""D"");
",0,0,0,1,2,0,2,0,0,4,31,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,126,"        addAbbreviation(""char"", ""C"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,127,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,111,"        abbreviationMap.put(primitive, abbreviation);
",0,0,0,1,2,0,8,0,0,8,45,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,112,"        reverseAbbreviationMap.put(abbreviation, primitive);
",0,0,0,1,2,0,8,0,0,8,52,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,113,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,589,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));
",4,0,0,2,4,0,10,0,0,14,90,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,620,"        if (toClass == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,624,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,628,"        if (autoboxing) {
",2,0,0,1,3,0,0,0,0,2,17,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,629,"            if (cls.isPrimitive() && !toClass.isPrimitive()) {
",0,1,0,3,7,0,8,0,0,10,50,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,630,"                cls = primitiveToWrapper(cls);
",2,0,0,1,2,0,4,0,0,7,30,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,631,"                if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,635,"            if (toClass.isPrimitive() && !cls.isPrimitive()) {
",0,1,0,3,7,0,8,0,0,10,50,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,642,"        if (cls.equals(toClass)) {
",0,0,0,2,5,0,6,0,0,6,26,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,645,"        if (cls.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,24,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,689,"        return toClass.isAssignableFrom(cls);
",0,0,0,1,2,0,6,0,0,6,37,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,705,"        Class<?> convertedClass = cls;
",4,0,0,0,0,0,0,2,0,6,30,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,706,"        if (cls != null && cls.isPrimitive()) {
",2,2,0,2,5,0,4,0,0,8,39,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,707,"            convertedClass = primitiveWrapperMap.get(cls);
",2,0,0,1,2,0,6,0,0,9,46,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,709,"        return convertedClass;
",2,0,0,0,0,0,0,0,0,2,22,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,49,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,53,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,57,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,61,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,65,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,69,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,73,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,77,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,81,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,85,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,89,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,93,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,97,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,101,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,105,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,109,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,113,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,117,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,121,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,320,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,323,"        return array.clone();
",0,0,0,1,2,0,4,0,0,4,21,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,65,"        return isAssignable(type, toType, null);
",0,0,0,1,2,0,6,0,0,7,40,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,79,"        if (toType == null || toType instanceof Class<?>) {
",4,2,0,1,3,0,0,2,0,8,51,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,80,"            return isAssignable(type, (Class<?>) toType);
",2,0,0,2,4,0,4,2,0,8,45,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,88,"            return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);
",2,0,0,2,4,0,6,2,0,10,69,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,113,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,115,"            return toClass == null || !toClass.isPrimitive();
",2,2,0,1,2,0,4,0,0,9,49,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,120,"        if (toClass == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,121,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,125,"        if (toClass.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,27,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,126,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,129,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,131,"            return ClassUtils.isAssignable((Class<?>) type, toClass);
",2,0,0,2,4,0,6,2,0,10,57,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,134,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,136,"            return isAssignable(getRawType((ParameterizedType) type), toClass);
",2,0,0,3,6,0,6,2,0,10,67,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,140,"        if (type instanceof TypeVariable<?>) {
",2,0,0,1,3,0,0,2,0,4,38,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,154,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,155,"            return toClass.equals(Object.class)
",0,0,0,1,2,0,4,2,0,6,35,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,193,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,211,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,262,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,268,"        if (toGenericArrayType == null) {
",2,1,0,1,3,0,0,0,0,3,33,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,273,"        if (toGenericArrayType.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,38,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,274,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,277,"        Type toComponentType = toGenericArrayType.getGenericComponentType();
",2,0,0,1,2,0,4,2,0,8,68,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,279,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,280,"            Class<?> cls = (Class<?>) type;
",4,0,0,1,2,0,0,4,0,8,31,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,283,"            return cls.isArray()
",0,0,0,1,2,0,4,0,0,4,20,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,287,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,289,"            return isAssignable(((GenericArrayType) type).getGenericComponentType(),
",2,0,0,3,7,0,4,2,0,8,72,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,357,"            WildcardType wildcardType = (WildcardType) type;
",4,0,0,1,2,0,0,4,0,8,48,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,358,"            Type[] upperBounds = getImplicitUpperBounds(wildcardType);
",2,0,0,2,4,0,4,2,0,8,58,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,359,"            Type[] lowerBounds = getImplicitLowerBounds(wildcardType);
",2,0,0,2,4,0,4,2,0,8,58,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,361,"            for (Type toBound : toUpperBounds) {
",4,0,0,1,3,0,0,2,0,6,36,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,364,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);
",2,0,0,1,2,0,6,0,0,9,59,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,369,"                for (Type bound : upperBounds) {
",4,0,0,1,3,0,0,2,0,6,32,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,370,"                    if (!isAssignable(bound, toBound, typeVarAssigns)) {
",0,0,0,2,5,0,8,0,0,9,52,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,371,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,376,"            for (Type toBound : toLowerBounds) {
",4,0,0,1,3,0,0,2,0,6,36,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,379,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);
",2,0,0,1,2,0,6,0,0,9,59,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,384,"                for (Type bound : lowerBounds) {
",4,0,0,1,3,0,0,2,0,6,32,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,385,"                    if (!isAssignable(toBound, bound, typeVarAssigns)) {
",0,0,0,2,5,0,8,0,0,9,52,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,386,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,391,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,399,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,408,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,600,"        Class<?> cls = getRawType(parameterizedType);
",2,0,0,1,2,0,4,2,0,8,45,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,603,"        if (!isAssignable(cls, toClass)) {
",0,0,0,2,5,0,6,0,0,7,34,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,607,"        Type ownerType = parameterizedType.getOwnerType();
",2,0,0,1,2,0,4,2,0,8,50,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,610,"        if (ownerType instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,45,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,617,"            typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()
",4,1,0,1,2,0,0,6,0,13,81,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,622,"        Type[] typeArgs = parameterizedType.getActualTypeArguments();
",2,0,0,2,4,0,4,2,0,8,61,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,624,"        TypeVariable<?>[] typeParams = cls.getTypeParameters();
",2,0,0,2,4,0,4,2,0,8,55,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,627,"        for (int i = 0; i < typeParams.length; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,628,"            Type typeArg = typeArgs[i];
",2,0,1,1,2,0,0,2,0,8,27,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,629,"            typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns
",0,0,1,2,5,0,12,0,0,16,86,7,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,633,"        if (toClass.equals(cls)) {
",0,0,0,2,5,0,6,0,0,6,26,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,635,"            return typeVarAssigns;
",2,0,0,0,0,0,0,0,0,2,22,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,660,"            if (toClass.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,28,7,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,667,"            cls = ClassUtils.primitiveToWrapper(cls);
",2,0,0,1,2,0,6,0,0,9,41,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,799,"        if (superClass.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,31,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,801,"            Type[] interfaceTypes = cls.getGenericInterfaces();
",2,0,0,2,4,0,4,2,0,8,51,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,803,"            Type genericInterface = null;
",2,0,0,0,0,0,0,2,0,4,29,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,806,"            for (Type midType : interfaceTypes) {
",4,0,0,1,3,0,0,2,0,6,37,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,807,"                Class<?> midClass = null;
",2,0,0,0,0,0,0,2,0,4,25,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,809,"                if (midType instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,43,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,810,"                    midClass = getRawType((ParameterizedType) midType);
",4,0,0,2,4,0,2,2,0,9,51,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,820,"                if (isAssignable(midClass, superClass)
",0,0,0,1,3,0,6,0,0,6,38,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,822,"                    genericInterface = midType;
",4,0,0,0,0,0,0,0,0,5,27,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,827,"            if (genericInterface != null) {
",2,1,0,1,3,0,0,0,0,3,31,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,828,"                return genericInterface;
",2,0,0,0,0,0,0,0,0,2,24,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,986,"        Type rawType = parameterizedType.getRawType();
",2,0,0,1,2,0,4,2,0,8,46,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,993,"        if (!(rawType instanceof Class<?>)) {
",2,0,0,2,5,0,0,2,0,5,37,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,997,"        return (Class<?>) rawType;
",2,0,0,1,2,0,0,2,0,4,26,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,40,"    public LookupTranslator(CharSequence[]... lookup) {
",4,0,0,2,5,1,0,2,0,7,51,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();
",2,0,0,1,2,0,0,6,0,9,54,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,42,"        int _shortest = Integer.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,34,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,43,"        int _longest = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,44,"        if (lookup != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,45,"            for (CharSequence[] seq : lookup) {
",4,0,0,2,5,0,0,2,0,6,35,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,46,"                this.lookupMap.put(seq[0], seq[1]);
",2,0,1,3,6,0,2,0,0,8,35,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,47,"                int sz = seq[0].length();
",2,0,1,2,4,0,2,0,0,6,25,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,48,"                if (sz < _shortest) {
",4,1,0,1,3,0,0,0,0,5,21,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,49,"                    _shortest = sz;
",4,0,0,0,0,0,0,0,0,5,15,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,51,"                if (sz > _longest) {
",4,1,0,1,3,0,0,0,0,5,20,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,52,"                    _longest = sz;
",4,0,0,0,0,0,0,0,0,5,14,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,56,"        shortest = _shortest;
",4,0,0,0,0,0,0,0,0,5,21,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,57,"        longest = _longest;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,65,"        int max = longest;
",4,0,0,0,0,0,0,0,0,4,18,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,66,"        if (index + longest > input.length()) {
",4,2,0,2,5,0,4,0,0,10,39,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,70,"        for (int i = max; i >= shortest; i--) {
",10,1,0,1,3,0,0,0,0,12,39,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,71,"            CharSequence subSeq = input.subSequence(index, index + i);
",6,1,0,1,2,0,6,2,0,15,58,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,72,"            CharSequence result = lookupMap.get(subSeq);
",2,0,0,1,2,0,6,2,0,10,44,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,73,"            if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,74,"                out.write(result.toString());
",0,0,0,2,4,0,8,0,0,8,29,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,75,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,78,"        return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,29,"public abstract class CodePointTranslator extends CharSequenceTranslator {
",2,0,0,0,1,2,0,2,0,6,74,1,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,56,"    public NumericEntityUnescaper(OPTION... options) {
",4,0,0,1,3,1,0,2,0,7,50,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,57,"        if(options.length > 0) {
",4,1,0,1,3,0,0,0,0,5,24,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,60,"            this.options = EnumSet.copyOf(Arrays.asList(new OPTION[] { OPTION.semiColonRequired }));
",6,0,0,4,8,0,8,2,0,17,88,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,62,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,35,"    public static enum OPTION { semiColonRequired, semiColonOptional, errorIfNoSemiColon }
",8,0,0,1,2,2,0,0,0,10,86,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,51,"    private UnicodeEscaper(int below, int above, boolean between) {
",8,0,0,1,3,1,0,0,0,9,63,2,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,52,"        this.below = below;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,53,"        this.above = above;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,54,"        this.between = between;
",4,0,0,0,0,0,0,0,0,5,23,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,55,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);
",4,0,0,1,2,0,0,2,0,7,62,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,34,"public class OctalUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,60,1,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,36,"    private static int OCTAL_MAX = 377;
",2,0,0,0,0,2,0,0,0,4,35,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,35,"    private static final String[][] ISO8859_1_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,52,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,139,"    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,78,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,148,"    private static final String[][] HTML40_EXTENDED_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,58,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,350,"    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,90,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,359,"    private static final String[][] BASIC_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,48,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,371,"    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,70,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,378,"    private static final String[][] APOS_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,47,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,387,"    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,68,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,396,"    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,58,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,409,"    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,90,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,34,"    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,80,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,138,"    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,84,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,147,"    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,92,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,349,"    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,96,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,358,"    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,72,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,370,"    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,76,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,377,"    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,70,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,386,"    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,74,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,395,"    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,92,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,408,"    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,96,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,417,"        String[][] newarray = new String[array.length][2];
",6,0,0,4,8,0,0,4,0,10,50,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,418,"        for(int i = 0; i<array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,419,"            newarray[i][0] = array[i][1];
",0,0,1,4,8,0,0,0,0,9,29,6,1.00000,0,0
