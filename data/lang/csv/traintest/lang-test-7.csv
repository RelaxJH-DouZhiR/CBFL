dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,"        return joinedArray;
",2,0,0,0,0,0,0,0,0,2,19,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,"        final Class<?> type1 = array1.getClass().getComponentType();
",2,0,0,2,4,1,6,2,0,11,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.33333,0,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);
",0,0,0,1,2,0,6,0,0,7,44,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,"        if (text == null || text.length() == 0 || searchList == null || 
",4,8,0,1,3,0,4,0,0,16,63,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,"            return text;
",2,0,0,0,0,0,0,0,0,2,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,"        if (timeToLive < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,"        int searchLength = searchList.length;
",6,0,0,0,0,0,0,0,0,6,37,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,"        int replacementLength = replacementList.length;
",6,0,0,0,0,0,0,0,0,6,47,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,"        if (searchLength != replacementLength) {
",4,1,0,1,3,0,0,0,0,5,40,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,"        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
",2,0,1,2,4,0,0,0,0,4,64,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,"        int textIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,"        int replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,3,22,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,"        int tempIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,"        for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,"            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || 
",0,4,1,2,5,0,0,0,0,12,60,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,"            tempIndex = text.indexOf(searchList[i]);
",2,0,1,2,4,0,4,0,0,11,40,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,"            if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,"                noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,"                if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,"                    textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,"                    replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,"        if (textIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,"            return text;
",2,0,0,0,0,0,0,0,0,2,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,"        int increase = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,"        for (int i = 0; i < searchList.length; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,"            if (greater > 0) {
",2,1,0,1,3,0,0,0,0,3,18,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);
",2,1,0,2,4,0,10,0,0,14,49,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,"        StringBuilder buf = new StringBuilder(text.length() + increase);
",4,1,0,2,4,0,4,4,0,13,64,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,"        while (textIndex != -1) {
",2,1,0,1,3,0,0,0,0,4,25,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,"            for (int i = start; i < textIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,41,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,"                buf.append(text.charAt(i));
",0,0,0,2,4,0,10,0,0,10,27,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,"            buf.append(replacementList[replaceIndex]);
",0,0,1,2,4,0,4,0,0,8,42,7,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,"            start = textIndex + searchList[replaceIndex].length();
",4,1,1,2,4,0,2,0,0,12,54,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,"            textIndex = -1;
",2,0,0,0,0,0,0,0,0,4,15,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,"            replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,4,18,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,"            tempIndex = -1;
",2,0,0,0,0,0,0,0,0,4,15,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,"            for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,"                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || 
",0,4,1,2,5,0,0,0,0,12,60,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);
",2,0,1,2,4,0,6,0,0,13,47,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,"                if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,"                    noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,"                    if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,"                        textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,"                        replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,"        int textLength = text.length();
",2,0,0,1,2,0,4,0,0,6,31,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,"        for (int i = start; i < textLength; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,"            buf.append(text.charAt(i));
",0,0,0,2,4,0,10,0,0,10,27,7,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,"        String result = buf.toString();
",2,0,0,1,2,0,4,2,0,8,31,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,"        if (!repeat) {
",2,0,0,1,3,0,0,0,0,3,14,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,"            return StringUtils.EMPTY;
",4,0,0,0,0,0,0,0,0,4,25,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,"            return StringUtils.EMPTY;
",4,0,0,0,0,0,0,0,0,4,25,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,"            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
",2,1,0,4,8,0,4,4,0,11,67,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);
",0,0,0,1,2,0,6,0,0,6,24,7,0.50000,0,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.50000,0,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,"        if (string == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);
",4,0,0,1,2,0,6,0,0,10,39,5,0.50000,0,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");
",0,0,0,1,2,0,4,0,0,5,19,11,0.50000,0,1
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));
",0,0,0,2,4,0,10,0,0,10,38,11,0.50000,0,1
defect4j,lang,org/apache/commons/lang/Entities,42,834,"                    writer.write(';');
",0,0,0,1,2,0,4,0,0,5,18,11,0.50000,0,1
defect4j,lang,org/apache/commons/lang/Entities,42,536,"            return super.name(value);
",4,0,0,1,2,0,0,0,0,4,25,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);
",4,0,0,2,4,0,4,0,0,8,45,4,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,"        if (val == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,"        if (val.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,24,4,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,"        char lastChar = val.charAt(val.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,"        int decPos = val.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,"        int expPos = val.indexOf('e') + val.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,"                mant = val;
",4,0,0,0,0,0,0,0,0,5,11,8,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,"        if (!Character.isDigit(lastChar)) {
",0,0,0,2,5,0,6,0,0,7,35,4,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,"            if (expPos > -1 && expPos < val.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,9,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,"        if (s == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,"        for (int i = s.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,43,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,"            if (s.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,25,6,0.50000,0,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.50000,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,"        return str == null ? EMPTY : str;
",6,1,0,0,0,0,0,0,0,7,33,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,"                            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,1.00000,0,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,"        return nullText;
",2,0,0,0,0,0,0,0,0,2,16,4,1,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,"            return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,"            if (numerator==Integer.MIN_VALUE ||
",6,2,0,0,1,0,0,0,0,8,35,6,0.25000,0,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,"            numerator = -numerator;
",4,0,0,0,0,0,0,0,0,6,23,6,0.25000,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,"            denominator = -denominator;
",4,0,0,0,0,0,0,0,0,6,27,6,0.25000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {
",6,0,0,1,3,1,0,4,0,11,39,3,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,"            mObj1 = obj1;
",4,0,0,0,0,0,0,0,0,5,13,5,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,"            mObj2 = obj2;
",4,0,0,0,0,0,0,0,0,5,13,5,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,"            return
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,"            return new UnpaddedNumberField(field);
",2,0,0,1,2,0,0,2,0,4,38,6,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,"        return mLocale;
",2,0,0,0,0,0,0,0,0,2,15,4,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,"        UnpaddedNumberField(int field) {
",4,0,0,1,3,0,0,0,0,4,32,3,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,"            mField = field;
",4,0,0,0,0,0,0,0,0,5,15,5,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,"        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);
",6,0,0,1,2,2,0,4,0,12,88,3,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,"            return 4;
",0,0,0,0,0,0,0,0,0,0,9,3,1,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);
",0,0,0,1,2,0,4,0,0,5,42,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,"                locale = Locale.getDefault();
",2,0,0,1,2,0,4,0,0,7,29,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);
",0,0,0,1,2,0,6,0,0,7,61,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);
",0,0,0,1,2,0,8,0,0,9,63,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
",6,0,0,3,6,0,0,8,0,14,70,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,"        if (timeZone != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,"        if (locale != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);
",6,0,0,1,2,0,0,2,0,9,28,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,"        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
",2,0,0,2,4,0,6,4,0,12,73,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,"        if (format == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,"            if (locale == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,"                locale = Locale.getDefault();
",2,0,0,1,2,0,4,0,0,7,29,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,
",2,0,0,1,3,0,8,4,0,14,100,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,"                String pattern = formatter.toPattern();
",2,0,0,1,2,0,4,2,0,8,39,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);
",2,0,0,1,2,0,8,0,0,11,48,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);
",0,0,0,1,2,0,8,0,0,8,40,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,"        return format;
",2,0,0,0,0,0,0,0,0,2,14,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,"                if (tokenLen >= 4) {
",2,1,0,1,3,0,0,0,0,3,20,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);
",12,0,0,1,2,0,0,2,0,15,81,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,"            if (this == obj) {
",2,1,0,1,3,0,0,0,0,3,18,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,"            if (!(obj instanceof Pair)) {
",2,0,0,2,5,0,0,2,0,5,29,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,"            Pair key = (Pair)obj;
",4,0,0,1,2,0,0,4,0,8,21,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,"            return
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {
",10,0,0,1,3,0,0,4,0,14,87,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,"            mTimeZone = timeZone;
",4,0,0,0,0,0,0,0,0,5,21,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,"            mTimeZoneForced = timeZoneForced;
",4,0,0,0,0,0,0,0,0,5,33,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,"            mLocale = locale;
",4,0,0,0,0,0,0,0,0,5,17,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,"            mStyle = style;
",4,0,0,0,0,0,0,0,0,5,15,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,"            if (timeZoneForced) {
",2,0,0,1,3,0,0,0,0,2,21,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1548,"                mStandard = null;
",2,0,0,0,0,0,0,0,0,3,17,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,"                mDaylight = null;
",2,0,0,0,0,0,0,0,0,3,17,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1551,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1557,"            if (mTimeZoneForced) {
",2,0,0,1,3,0,0,0,0,2,22,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1559,"            } else if (mStyle == TimeZone.SHORT) {
",6,1,0,1,4,0,0,0,0,7,38,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1560,"                return 4;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,"        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);
",8,0,0,2,4,0,4,0,0,12,60,6,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,"        return bool.booleanValue() ? true : false;
",0,0,0,1,2,0,4,0,0,6,42,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,"        return !isTrue(bool);
",0,0,0,1,2,0,4,0,0,5,21,4,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,"        return bool.booleanValue() ? false : true;
",0,0,0,1,2,0,4,0,0,6,42,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,"        return !isFalse(bool);
",0,0,0,1,2,0,4,0,0,5,22,4,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,"        return bool ? Boolean.TRUE : Boolean.FALSE;
",10,0,0,0,0,0,0,0,0,10,43,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,183,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,184,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,186,"        return bool.booleanValue() ? true : false;
",0,0,0,1,2,0,4,0,0,6,42,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,"            return valueIfNull;
",2,0,0,0,0,0,0,0,0,2,19,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,206,"        return bool.booleanValue() ? true : false;
",0,0,0,1,2,0,4,0,0,6,42,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,"        return value == 0 ? false : true;
",2,1,0,0,0,0,0,0,0,5,33,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,"        return value == 0 ? Boolean.FALSE : Boolean.TRUE;
",10,1,0,0,0,0,0,0,0,11,49,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,265,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,"        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;
",8,1,0,1,2,0,4,0,0,13,60,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,287,"        if (value == trueValue) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,288,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,"        } else if (value == falseValue) {
",4,1,0,1,4,0,0,0,0,5,33,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,7,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");
",0,0,0,1,2,0,0,2,0,3,87,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,"            if (trueValue == null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,318,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,"            } else if (falseValue == null) {
",2,1,0,1,4,0,0,0,0,3,32,7,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,9,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,"        } else if (value.equals(trueValue)) {
",0,0,0,2,6,0,6,0,0,6,37,6,0.00000,0,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,323,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,7,0.00000,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,"        } else if (value.equals(falseValue)) {
",0,0,0,2,6,0,6,0,0,6,38,7,0.00000,0,1
