dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,"            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
",6,2,0,2,4,1,0,0,0,8,47,6,0.50000,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,"        getRegistry().add(new IDKey(value));
",2,0,0,3,6,0,4,2,0,8,36,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,"            classes[i] = array[i].getClass();
",0,0,1,3,6,0,2,0,0,11,33,6,0.00000,1,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,164,"        return m.containsKey(value);
",0,0,0,1,2,1,6,0,0,6,28,5,1,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,"            return (T[]) new Object[] { null };
",0,0,0,4,8,1,0,4,0,4,35,8,0.00000,1,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,"            if (numerator==Integer.MIN_VALUE ||
",6,2,0,0,1,0,0,0,0,8,35,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');
",2,0,0,1,2,3,0,4,0,10,69,2,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,"    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');
",2,0,0,1,2,3,0,4,0,10,68,2,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,"    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');
",2,0,0,1,2,3,0,4,0,10,69,2,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,"                if (expPos < decPos || expPos > str.length()) {
",6,3,0,2,5,0,4,0,0,13,47,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,"                        return createBigDecimal(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,"            buffer.append(mValues[calendar.get(mField)]);
",0,0,1,3,6,0,10,0,0,12,45,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,"            buffer.append(mValue);
",0,0,0,1,2,0,6,0,0,6,22,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,"                if (expPos < decPos) {
",4,1,0,1,3,0,0,0,0,5,22,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,"                        return createBigDecimal(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,"            return ArrayUtils.EMPTY_INT_ARRAY;
",4,0,0,0,0,1,0,0,0,4,34,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,1,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,"                        return false;
",0,0,0,0,0,1,0,0,0,1,13,10,1,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,1,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,"        if (cs == null || invalidChars == null) {
",4,3,0,1,3,0,0,0,0,7,41,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());
",0,0,0,2,4,1,8,0,0,8,52,5,0.44444,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.40000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.40000,0,0
