dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,"                return foundDigit && !hasExp;
",4,1,0,0,0,1,0,0,0,6,29,8,0.00000,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,"        Calendar c = new GregorianCalendar(mTimeZone);
",4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,"            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
",6,2,0,2,4,1,0,0,0,8,47,6,0.50000,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");
",0,0,0,1,2,0,0,2,0,3,66,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,"                if (expPos < decPos || expPos > str.length()) {
",6,3,0,2,5,0,4,0,0,13,47,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,"            buffer.append(mValues[calendar.get(mField)]);
",0,0,1,3,6,0,10,0,0,12,45,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,"                if (expPos < decPos) {
",4,1,0,1,3,0,0,0,0,5,22,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,"            return ArrayUtils.EMPTY_INT_ARRAY;
",4,0,0,0,0,1,0,0,0,4,34,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,1,0,-1
