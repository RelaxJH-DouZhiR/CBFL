dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,89,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04348,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,"        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
",2,2,1,7,14,0,8,4,0,25,133,4,0.25000,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,"                return foundDigit && !hasExp;
",4,1,0,0,0,1,0,0,0,6,29,8,0.00000,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,"        Calendar c = new GregorianCalendar(mTimeZone);
",4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,"    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);
",2,0,0,1,2,3,6,2,0,13,114,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =
",2,0,0,0,0,3,0,2,0,7,64,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,521,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,560,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,564,"                    return createLong(str);
",0,0,0,1,2,1,4,0,0,4,23,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,572,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,574,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,575,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,"                        return f;
",2,0,0,0,0,1,0,0,0,2,9,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,445,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,448,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,451,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,461,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,465,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,466,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,468,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,480,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,486,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,488,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,490,"        if (!Character.isDigit(lastChar) && lastChar != '.') {
",2,2,0,2,5,0,6,0,0,12,54,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,"        return ESCAPE_XML.translate(input);
",0,0,0,1,2,1,6,0,0,6,35,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.07692,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,"        for (CharSequenceTranslator translator : translators) {
",4,0,0,1,3,0,0,2,0,6,55,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,52,"            int consumed = translator.translate(input, index, out);
",2,0,0,1,2,0,10,0,0,12,55,7,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,53,"            if(consumed != 0) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,78,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,65,"        int max = longest;
",4,0,0,0,0,0,0,0,0,4,18,5,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,66,"        if (index + longest > input.length()) {
",4,2,0,2,5,0,4,0,0,10,39,4,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,70,"        for (int i = max; i >= shortest; i--) {
",10,1,0,1,3,0,0,0,0,12,39,4,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,71,"            CharSequence subSeq = input.subSequence(index, index + i);
",6,1,0,1,2,0,6,2,0,15,58,6,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,72,"            CharSequence result = lookupMap.get(subSeq);
",2,0,0,1,2,0,6,2,0,10,44,6,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,73,"            if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.06250,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,46,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,50,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,54,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,58,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,62,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,66,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,70,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,74,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,78,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,82,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,86,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,90,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,94,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);
",10,0,0,1,2,0,0,4,0,14,77,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,"        String value = cTimeZoneDisplayCache.get(key);
",2,0,0,1,2,0,6,2,0,10,46,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);
",2,0,0,1,2,0,10,0,0,13,51,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);
",2,0,0,1,2,0,8,2,0,12,61,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,415,"            if (prior != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,419,"        return value;
",2,0,0,0,0,1,0,0,0,2,13,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,"                if (tokenLen >= 4) {
",2,1,0,1,3,0,0,0,0,3,20,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);
",10,0,0,1,2,0,0,2,0,13,64,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,560,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,"            int start = index + 2;
",4,1,0,0,0,0,0,0,0,5,22,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,1,6,0,0,10,47,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,"        int noOfItems = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,40,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,"        if (noOfItems <= 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3295,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,"        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
",2,2,1,6,12,0,4,4,0,21,116,4,0.50000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3300,"        for (int i = startIndex; i < endIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,"            if (i > startIndex) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,"            if (array[i] != null) {
",0,1,1,2,5,0,0,0,0,5,23,6,0.50000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3305,"                buf.append(array[i]);
",0,0,1,2,4,0,4,0,0,8,21,9,0.50000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3308,"        return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,5,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3230,"        return join(elements, null);
",0,0,0,1,2,1,4,0,0,5,28,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3336,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3380,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3335,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3338,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,1,6,0,0,10,47,5,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3369,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3372,"        if (separator == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3373,"            separator = EMPTY;
",4,0,0,0,0,0,0,0,0,5,18,6,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3378,"        int noOfItems = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,40,5,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3379,"        if (noOfItems <= 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");
",2,0,0,1,2,3,4,2,0,12,73,2,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,"    private static final int[][] fields = {
",2,0,0,2,5,3,0,0,0,5,39,2,0.00926,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,"            this.endFinal = endFinal;
",4,0,0,0,0,0,0,0,0,5,25,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,"            spot = startFinal;
",4,0,0,0,0,0,0,0,0,5,18,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);
",4,0,0,1,2,0,4,0,0,9,28,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");
",0,0,0,1,2,0,0,2,0,3,66,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,"            numerator/=2; denominator/=2;
",4,0,0,0,0,0,0,0,0,6,29,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,"            if (numerator==Integer.MIN_VALUE ||
",6,2,0,0,1,0,0,0,0,8,35,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");
",0,0,0,1,2,0,0,2,0,3,56,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,"            numerator = -numerator;
",4,0,0,0,0,0,0,0,0,6,23,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,0
