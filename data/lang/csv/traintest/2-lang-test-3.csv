dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,"                return foundDigit && !hasExp;
",4,1,0,0,0,1,0,0,0,6,29,8,0.00000,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,"        Calendar c = new GregorianCalendar(mTimeZone);
",4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,"            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
",6,2,0,2,4,1,0,0,0,8,47,6,0.50000,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,"            numerator = -numerator;
",4,0,0,0,0,0,0,0,0,6,23,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');
",2,0,0,1,2,3,0,4,0,10,69,2,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,"    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');
",2,0,0,1,2,3,0,4,0,10,68,2,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,"    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');
",2,0,0,1,2,3,0,4,0,10,69,2,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());
",2,0,0,2,4,3,2,4,0,12,94,2,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,"    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();
",2,0,0,1,2,3,0,4,0,9,65,2,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,"    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');
",2,0,0,1,2,3,0,4,0,10,77,2,0.25000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,"                if (expPos < decPos || expPos > str.length()) {
",6,3,0,2,5,0,4,0,0,13,47,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,"                        return createBigDecimal(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,"                    return createLong(str);
",0,0,0,1,2,1,4,0,0,4,23,11,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,"                return createBigInteger(str);
",0,0,0,1,2,1,4,0,0,4,29,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,"                        return f;
",2,0,0,0,0,1,0,0,0,2,9,12,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,240,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,"            buffer.append(mValues[calendar.get(mField)]);
",0,0,1,3,6,0,10,0,0,12,45,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,"            buffer.append(mValue);
",0,0,0,1,2,0,6,0,0,6,22,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,821,"        c.setTime(date);
",0,0,0,1,2,0,6,0,0,6,16,5,0.03333,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();
",2,0,0,3,6,1,6,2,0,10,70,5,0.03333,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,"        StringLiteral(String value) {
",4,0,0,1,3,0,0,2,0,6,29,3,0.02857,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,"            mValue = value;
",4,0,0,0,0,0,0,0,0,5,15,5,0.02857,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,"                if (expPos < decPos) {
",4,1,0,1,3,0,0,0,0,5,22,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,"                        return createBigDecimal(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,"                    return createLong(str);
",0,0,0,1,2,1,4,0,0,4,23,11,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,"                return createBigInteger(str);
",0,0,0,1,2,1,4,0,0,4,29,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,"                        return f;
",2,0,0,0,0,1,0,0,0,2,9,12,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
",2,0,0,3,6,0,14,0,0,17,77,10,0.50000,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,"            return ArrayUtils.EMPTY_INT_ARRAY;
",4,0,0,0,0,1,0,0,0,4,34,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,0.00485,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,"                        return false;
",0,0,0,0,0,1,0,0,0,1,13,10,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,"        if (cs == null || invalidChars == null) {
",4,3,0,1,3,0,0,0,0,7,41,4,0.44444,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());
",0,0,0,2,4,1,8,0,0,8,52,5,0.44444,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.40000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.40000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.40000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.40000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1378,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.40000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,0.40000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.40000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,"                        return i;
",2,0,0,0,0,1,0,0,0,2,9,10,0.40000,0,-1
