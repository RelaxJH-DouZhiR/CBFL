dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,"        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {
",2,2,0,3,7,0,10,0,0,14,64,4,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,89,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04348,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,"        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
",2,2,1,7,14,0,8,4,0,25,133,4,0.25000,1,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,548,"            return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,69,7,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,78,7,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {
",0,0,0,2,5,0,6,0,0,7,34,4,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,"        return ESCAPE_XML.translate(input);
",0,0,0,1,2,1,6,0,0,6,35,5,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.07692,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,"        for (CharSequenceTranslator translator : translators) {
",4,0,0,1,3,0,0,2,0,6,55,4,0.06667,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);
",10,0,0,1,2,0,0,4,0,14,77,4,1.00000,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0,-1
