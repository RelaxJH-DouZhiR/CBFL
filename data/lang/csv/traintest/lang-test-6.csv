dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,164,"        return m.containsKey(value);
",0,0,0,1,2,0,6,0,0,6,28,5,1,1,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,325,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,82,"    public static final ToStringStyle DEFAULT_STYLE = new DefaultToStringStyle();
",2,0,0,1,2,3,0,4,0,9,77,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,96,"    public static final ToStringStyle MULTI_LINE_STYLE = new MultiLineToStringStyle();
",2,0,0,1,2,3,0,4,0,9,82,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,107,"    public static final ToStringStyle NO_FIELD_NAMES_STYLE = new NoFieldNameToStringStyle();
",2,0,0,1,2,3,0,4,0,9,88,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,119,"    public static final ToStringStyle SHORT_PREFIX_STYLE = new ShortPrefixToStringStyle();
",2,0,0,1,2,3,0,4,0,9,86,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,129,"    public static final ToStringStyle SIMPLE_STYLE = new SimpleToStringStyle();
",2,0,0,1,2,3,0,4,0,9,75,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,137,"    private static final ThreadLocal<WeakHashMap<Object, Object>> REGISTRY = new ThreadLocal<WeakHashMap<Object,Object>>();
",2,0,0,1,2,3,0,16,0,21,119,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1611,"        this.useClassName = useClassName;
",4,0,0,0,0,0,0,0,0,5,33,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1612,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1633,"        this.useShortClassName = useShortClassName;
",4,0,0,0,0,0,0,0,0,5,43,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1634,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1653,"        this.useIdentityHashCode = useIdentityHashCode;
",4,0,0,0,0,0,0,0,0,5,47,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1654,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1673,"        this.useFieldNames = useFieldNames;
",4,0,0,0,0,0,0,0,0,5,35,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1674,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1816,"        if (contentStart == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1819,"        this.contentStart = contentStart;
",4,0,0,0,0,0,0,0,0,5,33,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1820,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1842,"        if (contentEnd == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1845,"        this.contentEnd = contentEnd;
",4,0,0,0,0,0,0,0,0,5,29,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1846,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1894,"        if (fieldSeparator == null) {
",2,1,0,1,3,0,0,0,0,3,29,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1897,"        this.fieldSeparator = fieldSeparator;
",4,0,0,0,0,0,0,0,0,5,37,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1898,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1921,"        this.fieldSeparatorAtStart = fieldSeparatorAtStart;
",4,0,0,0,0,0,0,0,0,5,51,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1922,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2125,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2126,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2260,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2261,"            this.setContentStart(""["");
",0,0,0,1,3,0,2,0,0,3,26,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2262,"            this.setFieldSeparator(SystemUtils.LINE_SEPARATOR + ""  "");
",4,1,0,1,2,0,2,0,0,8,58,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2263,"            this.setFieldSeparatorAtStart(true);
",0,0,0,1,2,0,2,0,0,3,36,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2264,"            this.setContentEnd(SystemUtils.LINE_SEPARATOR + ""]"");
",4,1,0,1,3,0,2,0,0,8,53,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2265,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2158,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2159,"            this.setUseFieldNames(false);
",0,0,0,1,2,0,2,0,0,3,29,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2160,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2224,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2225,"            this.setUseClassName(false);
",0,0,0,1,2,0,2,0,0,3,28,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2226,"            this.setUseIdentityHashCode(false);
",0,0,0,1,2,0,2,0,0,3,35,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2227,"            this.setUseFieldNames(false);
",0,0,0,1,2,0,2,0,0,3,29,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2228,"            this.setContentStart("""");
",0,0,0,1,2,0,2,0,0,3,25,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2229,"            this.setContentEnd("""");
",0,0,0,1,2,0,2,0,0,3,23,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2230,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,513,"            } else if (value instanceof byte[]) {
",2,0,0,2,6,0,0,0,0,2,37,12,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,520,"            } else if (value instanceof char[]) {
",2,0,0,2,6,0,0,0,0,2,37,13,1,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,215,"        if (object == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,218,"        buffer.append(object.getClass().getName())
",0,0,0,3,6,0,10,0,0,10,42,7,1,0,1
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,221,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,471,"           appendCyclicObject(buffer, fieldName, value);
",0,0,0,1,2,0,8,0,0,8,45,7,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,472,"           return;
",0,0,0,0,0,0,0,0,0,0,7,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,580,"       ObjectUtils.identityToString(buffer, value);
",0,0,0,1,2,0,8,0,0,8,44,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,581,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,931,"                appendNullText(buffer, fieldName);
",0,0,0,1,2,0,6,0,0,6,34,9,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,527,"            } else if (value instanceof double[]) {
",2,0,0,2,6,0,0,0,0,2,39,14,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,534,"            } else if (value instanceof float[]) {
",2,0,0,2,6,0,0,0,0,2,38,15,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,541,"            } else if (value instanceof boolean[]) {
",2,0,0,2,6,0,0,0,0,2,40,16,1,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,341,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,342,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,57,"    public static final Null NULL = new Null();
",2,0,0,1,2,3,0,4,0,9,43,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,548,"            } else if (value.getClass().isArray()) {
",0,0,0,3,8,0,6,0,0,6,40,17,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,556,"                    if (detail) {
",2,0,0,1,3,0,0,0,0,2,13,18,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,557,"                        appendDetail(buffer, fieldName, value);
",0,0,0,1,2,0,8,0,0,8,39,21,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,593,"        buffer.append(value);
",0,0,0,1,2,0,6,0,0,6,21,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,594,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1501,"        buffer.append(nullText);
",0,0,0,1,2,0,6,0,0,6,24,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1502,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,"        if (array != null){
",2,1,0,1,3,0,0,0,0,3,19,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);
",2,0,0,4,8,0,6,4,0,12,49,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,"        return newArray;
",2,0,0,0,0,0,0,0,0,2,16,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,"        if (!Character.isDigit(lastChar)) {
",0,0,0,2,5,0,6,0,0,7,35,4,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,9,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,"                            return createLong(numeric);
",0,0,0,1,2,0,4,0,0,4,27,12,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,"        for (int i = str.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,45,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,"            if (str.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,27,6,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,"        return Float.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,26,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,"        return Double.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,27,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,"        return Integer.decode(str);
",0,0,0,1,2,0,6,0,0,6,27,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,"        return new BigInteger(str);
",2,0,0,1,2,0,0,2,0,4,27,5,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,"        return new BigDecimal(str);
",2,0,0,1,2,0,0,2,0,4,27,5,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,"        return Long.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,25,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,"        for (int i = 0; i < str.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,40,4,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,"            if (!Character.isDigit(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,11,40,6,1,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,"        return str == null || str.length() == 0;
",2,3,0,1,2,0,4,0,0,9,40,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,"        if (str == null || (strLen = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,50,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,"            if ((Character.isWhitespace(str.charAt(i)) == false)) {
",0,1,0,4,9,0,10,0,0,12,55,7,1,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");
",0,0,0,1,2,0,0,2,0,3,72,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,"                        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,"                        return createBigInteger(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,"                    } catch (NumberFormatException e) {
",2,0,0,1,4,0,0,2,0,4,35,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,"                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,66,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,"                        return d;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,"                return createBigDecimal(str);
",0,0,0,1,2,0,4,0,0,4,29,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,"        return str.length() > 0;
",0,1,0,1,2,0,4,0,0,5,24,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1313,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,"        char[] chars = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,33,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1317,"        int sz = chars.length;
",6,0,0,0,0,0,0,0,0,6,22,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,"        boolean hasExp = false;
",2,0,0,0,0,0,0,0,0,3,23,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,"        boolean hasDecPoint = false;
",2,0,0,0,0,0,0,0,0,3,28,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,"        boolean allowSigns = false;
",2,0,0,0,0,0,0,0,0,3,27,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,"        boolean foundDigit = false;
",2,0,0,0,0,0,0,0,0,3,27,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,"        int start = (chars[0] == '-') ? 1 : 0;
",2,1,1,2,4,0,0,0,0,6,38,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1324,"        if (sz > start + 1) {
",4,2,0,1,3,0,0,0,0,6,21,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,"            if (chars[start] == '0' && chars[start + 1] == 'x') {
",2,4,1,3,7,0,0,0,0,14,53,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,"                int i = start + 2;
",4,1,0,0,0,0,0,0,0,5,18,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,"                if (i == sz) {
",4,1,0,1,3,0,0,0,0,5,14,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,"                for (; i < chars.length; i++) {
",8,1,0,1,3,0,0,0,0,10,31,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,"                    if ((chars[i] < '0' || chars[i] > '9')
",0,3,1,3,7,0,0,0,0,13,38,13,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1335,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1338,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords
",2,0,0,0,0,0,0,0,0,3,65,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,"        int i = start;
",4,0,0,0,0,0,0,0,0,4,14,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,"        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {
",12,6,0,2,5,0,0,0,0,19,61,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,"                foundDigit = true;
",2,0,0,0,0,0,0,0,0,4,18,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1351,"            } else if (chars[i] == '.') {
",0,1,1,2,6,0,0,0,0,6,29,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,"                if (hasDecPoint || hasExp) {
",4,1,0,1,3,0,0,0,0,5,28,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,"                hasDecPoint = true;
",2,0,0,0,0,0,0,0,0,4,19,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,"            } else if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,8,0,0,0,0,13,48,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,"                if (hasExp) {
",2,0,0,1,3,0,0,0,0,2,13,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,"                if (!foundDigit) {
",2,0,0,1,3,0,0,0,0,3,18,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,"                hasExp = true;
",2,0,0,0,0,0,0,0,0,4,14,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,"                allowSigns = true;
",2,0,0,0,0,0,0,0,0,4,18,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,"            } else if (chars[i] == '+' || chars[i] == '-') {
",0,3,1,3,8,0,0,0,0,13,48,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,"                if (!allowSigns) {
",2,0,0,1,3,0,0,0,0,3,18,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,13,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,"                foundDigit = false; // we need a digit after the E
",2,0,0,0,0,0,0,0,0,4,50,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1375,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,"        if (i < chars.length) {
",6,1,0,1,3,0,0,0,0,7,23,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1382,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,"            if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,7,0,0,0,0,13,41,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1386,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,"            if (!allowSigns
",2,0,0,0,1,0,0,0,0,3,15,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,"                return foundDigit;
",2,0,0,0,0,0,0,0,0,2,18,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,"            if (chars[i] == 'l'
",0,1,1,1,3,0,0,0,0,6,19,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,"                return foundDigit && !hasExp;
",4,1,0,0,0,0,0,0,0,6,29,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.33333,0,0
