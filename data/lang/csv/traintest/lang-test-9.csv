dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());
",0,0,0,3,6,0,10,0,0,10,60,5,1.00000,1,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,904,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");
",2,0,0,1,2,3,2,0,0,8,60,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,914,"    public static final boolean IS_OS_HP_UX = getOSMatches(""HP-UX"");
",2,0,0,1,2,3,2,0,0,8,64,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,924,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");
",2,0,0,1,2,3,2,0,0,8,62,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,934,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");
",2,1,0,2,4,3,4,0,0,12,89,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,944,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");
",2,0,0,1,2,3,2,0,0,8,60,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,954,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");
",2,0,0,1,2,3,2,0,0,8,69,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,964,"    public static final boolean IS_OS_OS2 = getOSMatches(""OS/2"");
",2,0,0,1,2,3,2,0,0,8,61,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,974,"    public static final boolean IS_OS_SOLARIS = getOSMatches(""Solaris"");
",2,0,0,1,2,3,2,0,0,8,68,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,984,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");
",2,0,0,1,2,3,2,0,0,8,65,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,995,"    public static final boolean IS_OS_UNIX =
",2,0,0,0,0,3,0,0,0,5,40,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1007,"    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);
",2,0,0,1,2,3,4,0,0,9,81,2,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1017,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");
",2,0,0,1,2,3,4,0,0,10,93,2,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1027,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");
",4,1,0,1,2,3,2,0,0,12,98,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1038,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");
",4,1,0,1,2,3,2,0,0,12,98,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1049,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");
",2,0,0,1,2,3,4,0,0,10,91,2,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1060,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" NT"");
",4,1,0,1,2,3,2,0,0,11,92,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1071,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");
",2,0,0,1,2,3,4,0,0,10,91,2,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1101,"        return JAVA_VERSION_FLOAT;
",2,0,0,0,0,0,0,0,0,2,26,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1119,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1120,"            return 0f;
",0,0,0,0,0,0,0,0,0,0,10,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);
",2,0,0,1,2,0,4,2,0,8,50,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1123,"        if (JAVA_VERSION_TRIMMED.length() >= 5) {
",0,1,0,2,5,0,4,0,0,5,41,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1124,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);
",4,1,0,1,2,0,4,0,0,10,49,6,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1127,"            return Float.parseFloat(str);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1128,"        } catch (Exception ex) {
",2,0,0,1,4,0,0,2,0,4,24,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1129,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1148,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1149,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1151,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);
",2,0,0,1,2,0,4,2,0,8,50,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1152,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);
",4,1,0,1,2,0,4,0,0,10,49,4,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1153,"        if (JAVA_VERSION_TRIMMED.length() >= 5) {
",0,1,0,2,5,0,4,0,0,5,41,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1154,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);
",4,1,0,1,2,0,4,0,0,10,49,6,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";
",4,1,0,0,0,0,0,0,0,7,16,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1159,"            return Integer.parseInt(str);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1160,"        } catch (Exception ex) {
",2,0,0,1,4,0,0,2,0,4,24,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1161,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1171,"        if (JAVA_VERSION != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,"            for (int i = 0; i < JAVA_VERSION.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,49,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,"                char ch = JAVA_VERSION.charAt(i);
",2,0,0,1,2,0,6,0,0,8,33,9,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,"                if (ch >= '0' && ch <= '9') {
",4,3,0,1,3,0,0,0,0,9,29,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,"                    return JAVA_VERSION.substring(i);
",0,0,0,1,2,0,6,0,0,6,33,11,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1179,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1189,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1190,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1192,"        return JAVA_VERSION_TRIMMED.startsWith(versionPrefix);
",0,0,0,1,2,0,6,0,0,6,54,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1202,"        if (OS_NAME == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1203,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1205,"        return OS_NAME.startsWith(osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,40,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1216,"        if (OS_NAME == null || OS_VERSION == null) {
",4,3,0,1,3,0,0,0,0,7,44,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1217,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1219,"        return OS_NAME.startsWith(osNamePrefix) && OS_VERSION.startsWith(osVersionPrefix);
",0,1,0,2,4,0,12,0,0,13,82,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1235,"            return System.getProperty(property);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00000,0,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1236,"        } catch (SecurityException ex) {
",2,0,0,1,4,0,0,2,0,4,32,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1238,"            System.err.println(
",4,0,0,0,1,0,2,0,0,6,19,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1242,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1260,"        return JAVA_VERSION_FLOAT >= requiredVersion;
",4,1,0,0,0,0,0,0,0,5,45,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1278,"        return JAVA_VERSION_INT >= requiredVersion;
",4,1,0,0,0,0,0,0,0,5,43,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1292,"        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;
",6,1,0,2,4,0,6,0,0,14,93,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1305,"        return new File(System.getProperty(JAVA_HOME_KEY));
",0,0,0,2,4,0,6,2,0,8,51,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1319,"        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));
",0,0,0,2,4,0,6,2,0,8,56,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1333,"        return new File(System.getProperty(USER_DIR_KEY));
",0,0,0,2,4,0,6,2,0,8,50,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1347,"        return new File(System.getProperty(USER_HOME_KEY));
",0,0,0,2,4,0,6,2,0,8,51,5,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,63,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,64,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,"    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());
",2,0,0,2,4,3,4,4,0,13,90,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,"    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());
",2,0,0,2,4,3,4,4,0,13,91,2,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,"        List list = Arrays.asList(Locale.getAvailableLocales());
",2,0,0,2,4,0,8,2,0,12,56,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,"        cAvailableLocaleList = Collections.unmodifiableList(list);
",2,0,0,1,2,0,6,0,0,9,58,4,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,53,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,95,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,96,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,98,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,"        if (len != 2 && len != 5 && len < 7) {
",6,5,0,1,3,0,0,0,0,11,38,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,7,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,102,"        char ch0 = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,25,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,103,"        char ch1 = str.charAt(1);
",2,0,0,1,2,0,4,0,0,6,25,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,104,"        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {
",8,7,0,1,3,0,0,0,0,19,55,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,7,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,107,"        if (len == 2) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");
",2,0,0,1,2,0,0,2,0,5,27,7,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,110,"            if (str.charAt(2) != '_') {
",0,1,0,2,5,0,4,0,0,6,27,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,9,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,113,"            char ch3 = str.charAt(3);
",2,0,0,1,2,0,4,0,0,6,25,7,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,114,"            char ch4 = str.charAt(4);
",2,0,0,1,2,0,4,0,0,6,25,7,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,"            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {
",8,7,0,1,3,0,0,0,0,19,55,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,9,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,118,"            if (len == 5) {
",2,1,0,1,3,0,0,0,0,3,15,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));
",0,0,0,3,6,0,8,2,0,10,60,9,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,121,"                if (str.charAt(5) != '_') {
",0,1,0,2,5,0,4,0,0,6,27,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,11,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
",0,0,0,4,8,0,12,2,0,14,78,9,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,143,"        return localeLookupList(locale, locale);
",0,0,0,1,2,0,6,0,0,6,40,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,165,"        List list = new ArrayList(4);
",2,0,0,1,2,0,0,4,0,6,29,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,166,"        if (locale != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,167,"            list.add(locale);
",0,0,0,1,2,0,6,0,0,6,17,7,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,168,"            if (locale.getVariant().length() > 0) {
",0,1,0,3,7,0,6,0,0,7,39,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));
",0,0,0,4,8,0,12,2,0,14,64,9,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,171,"            if (locale.getCountry().length() > 0) {
",0,1,0,3,7,0,6,0,0,7,39,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,172,"                list.add(new Locale(locale.getLanguage(), """"));
",0,0,0,3,6,0,8,2,0,11,47,9,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,174,"            if (list.contains(defaultLocale) == false) {
",0,1,0,2,5,0,6,0,0,8,44,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,175,"                list.add(defaultLocale);
",0,0,0,1,2,0,6,0,0,6,24,9,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,178,"        return Collections.unmodifiableList(list);
",0,0,0,1,2,0,6,0,0,6,42,5,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,192,"        return cAvailableLocaleList;
",2,0,0,0,0,0,0,0,0,2,28,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,"        Set set = cAvailableLocaleSet;
",4,0,0,0,0,0,0,2,0,6,30,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,207,"        if (set == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,208,"            set = new HashSet(availableLocaleList());
",2,0,0,2,4,0,2,2,0,7,41,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,209,"            set = Collections.unmodifiableSet(set);
",2,0,0,1,2,0,6,0,0,9,39,6,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,210,"            cAvailableLocaleSet = set;
",4,0,0,0,0,0,0,0,0,5,26,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,212,"        return set;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,237,"        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd
",2,0,0,2,4,0,6,4,0,12,66,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,238,"        if (langs == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,239,"            if (countryCode != null) {
",2,1,0,1,3,0,0,0,0,3,26,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,"                langs = new ArrayList();
",2,0,0,1,2,0,0,2,0,5,24,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,"                List locales = availableLocaleList();
",2,0,0,1,2,0,2,2,0,6,37,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,242,"                for (int i = 0; i < locales.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,42,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,"                    Locale locale = (Locale) locales.get(i);
",2,0,0,2,4,0,6,4,0,12,40,10,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,244,"                    if (countryCode.equals(locale.getCountry()) &&
",0,1,0,2,5,0,8,0,0,9,46,10,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,246,"                        langs.add(locale);
",0,0,0,1,2,0,6,0,0,6,18,13,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,249,"                langs = Collections.unmodifiableList(langs);
",2,0,0,1,2,0,6,0,0,9,44,8,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,250,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,"                langs = Collections.EMPTY_LIST;
",6,0,0,0,0,0,0,0,0,7,31,8,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd
",0,0,0,1,2,0,8,0,0,8,53,7,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,255,"        return langs;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,269,"        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd
",2,0,0,2,4,0,6,4,0,12,72,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,270,"        if (countries == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,271,"            if (languageCode != null) {
",2,1,0,1,3,0,0,0,0,3,27,6,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,272,"                countries = new ArrayList();
",2,0,0,1,2,0,0,2,0,5,28,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,273,"                List locales = availableLocaleList();
",2,0,0,1,2,0,2,2,0,6,37,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,274,"                for (int i = 0; i < locales.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,42,8,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,275,"                    Locale locale = (Locale) locales.get(i);
",2,0,0,2,4,0,6,4,0,12,40,10,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,276,"                    if (languageCode.equals(locale.getLanguage()) &&
",0,2,0,2,5,0,8,0,0,10,48,10,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,279,"                        countries.add(locale);
",0,0,0,1,2,0,6,0,0,6,22,13,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,282,"                countries = Collections.unmodifiableList(countries);
",2,0,0,1,2,0,6,0,0,9,52,8,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,283,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,284,"                countries = Collections.EMPTY_LIST;
",6,0,0,0,0,0,0,0,0,7,35,8,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd
",0,0,0,1,2,0,8,0,0,8,59,7,0.00000,0,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,288,"        return countries;
",2,0,0,0,0,0,0,0,0,2,17,4,0.00000,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,"        if (width > 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.50000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,"            ensureCapacity(size + width);
",4,1,0,1,2,0,2,0,0,7,29,7,0.50000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,"            String str = (obj == null ? getNullText() : obj.toString());
",4,1,0,3,6,0,6,2,0,14,60,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,"            int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,7,0.50000,0,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,"            if (strLen >= width) {
",4,1,0,1,3,0,0,0,0,5,22,6,0.50000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,"        for (int i = 0; i < thisBuf.length; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,"            if (thisBuf[i] == ch) {
",2,1,1,2,5,0,0,0,0,7,23,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,"        startIndex = (startIndex < 0 ? 0 : startIndex);
",6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,"        if (str == null || startIndex >= size) {
",6,3,0,1,3,0,0,0,0,9,40,4,0.57143,0,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,"        if (strLen == 1) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,"        if (strLen == 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,"        if (strLen > size) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,"        for (int i = startIndex; i < len; i++) {
",10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,"            for (int j = 0; j < strLen; j++) {
",8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,"                if (str.charAt(j) != thisBuf[i + j]) {
",4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,"                    continue outer;
",2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,"            return i;
",2,0,0,0,0,0,0,0,0,2,9,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,"                    if (entityName.length() == 1) {
",0,1,0,2,5,0,4,0,0,5,31,11,0.50000,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,"                        char charAt1 = entityName.charAt(1);
",2,0,0,1,2,0,4,0,0,6,36,14,0.50000,0,1
defect4j,lang,org/apache/commons/lang/Entities,62,845,"                            if (charAt1 == 'x' || charAt1=='X') {
",4,3,0,1,3,0,0,0,0,9,37,15,0.50000,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,"                                entityValue = Integer.parseInt(entityName.substring(1));
",2,0,0,2,4,0,8,0,0,11,56,17,0.50000,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,"                        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,853,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());
",0,0,0,2,4,0,12,0,0,13,81,5,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {
",0,0,0,2,5,0,8,0,0,8,46,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,"                months += 12 * years;
",4,1,0,0,0,0,0,0,0,6,21,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,"                years = 0;
",2,0,0,0,0,0,0,0,0,3,10,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,"            hours += 24 * days;
",4,1,0,0,0,0,0,0,0,6,19,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,"            days = 0;
",2,0,0,0,0,0,0,0,0,3,9,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,"            minutes += 60 * hours;
",4,1,0,0,0,0,0,0,0,6,22,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,"            hours = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,"            seconds += 60 * minutes;
",4,1,0,0,0,0,0,0,0,6,24,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,"            minutes = 0;
",2,0,0,0,0,0,0,0,0,3,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,"            milliseconds += 1000 * seconds;
",4,1,0,0,0,0,0,0,0,6,31,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,"            seconds = 0;
",2,0,0,0,0,0,0,0,0,3,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,"        return iValue - ((ValuedEnum) other).iValue;
",6,1,0,2,4,0,0,2,0,9,44,4,0.25000,0,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,1.00000,0,0
