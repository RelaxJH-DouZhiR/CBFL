dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,"            final int hexDigits = str.length() - pfxLen;
",4,1,0,1,2,1,4,0,0,10,44,6,0.33333,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,605,"        } catch (final NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,1,0,2,0,5,52,6,0.00000,1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,"            final CharSequence result = lookupMap.get(subSeq);
",2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,95,"                pos += Character.charCount(Character.codePointAt(input, pos));
",2,0,0,2,4,0,12,0,0,15,62,8,0.03333,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,"        return new BigDecimal(str);
",2,0,0,1,2,1,0,2,0,4,27,5,0.50000,1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,"            if (zone.useDaylightTime()
",0,0,0,1,3,0,4,0,0,4,26,7,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,144,"        if(currentStrategy.addRegex(this, regex)) {
",0,0,0,2,5,0,6,0,0,6,43,5,0.03604,1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,314,"            wasWhite= false;
",2,0,0,0,0,0,0,0,0,4,16,6,0.03810,1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,"        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {
",2,2,0,3,7,0,10,0,0,14,64,4,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,89,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04348,1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,"        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
",2,2,1,7,14,0,8,4,0,25,133,4,0.25000,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,"                return foundDigit && !hasExp;
",4,1,0,0,0,1,0,0,0,6,29,8,0.00000,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,"        Calendar c = new GregorianCalendar(mTimeZone);
",4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,"            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
",6,2,0,2,4,1,0,0,0,8,47,6,0.50000,1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,"        getRegistry().add(new IDKey(value));
",2,0,0,3,6,0,4,2,0,8,36,5,0.14286,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,"            classes[i] = array[i].getClass();
",0,0,1,3,6,0,2,0,0,11,33,6,0.00000,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,164,"        return m.containsKey(value);
",0,0,0,1,2,1,6,0,0,6,28,5,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,"            return (T[]) new Object[] { null };
",0,0,0,4,8,1,0,4,0,4,35,8,0.00000,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,"        return joinedArray;
",2,0,0,0,0,1,0,0,0,2,19,4,0.33333,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,872,"            calendar = (Calendar) calendar.clone();
",2,0,0,2,4,0,4,2,0,9,39,6,0.00000,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,"            int greater = replacementList[i].length() - searchList[i].length();
",2,1,1,4,8,0,4,0,0,15,67,7,1.00000,1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());
",0,0,0,3,6,1,10,0,0,10,60,5,1.00000,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,"            int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,7,0.25000,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,382,"        } else if (lhs.getClass() != rhs.getClass()) {
",0,1,0,3,8,0,8,0,0,9,46,5,0.00000,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,466,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
",2,0,0,2,4,0,10,0,0,12,66,5,0.00000,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,652,"        if (field == Calendar.MINUTE) {
",6,1,0,1,3,0,0,0,0,7,31,6,0.00000,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,"            char ch4 = str.charAt(4);
",2,0,0,1,2,0,4,0,0,6,25,7,0.50000,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,119,"        this.runningState = STATE_STOPPED;
",4,0,0,0,0,0,0,0,0,5,34,4,0.25000,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,"        return cAvailableLocaleSet.contains(locale);
",0,0,0,1,2,1,6,0,0,6,44,5,0.00000,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);
",0,0,0,1,2,0,10,0,0,10,38,9,0.50000,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1730,"        for (int i = startIndex; i < thisBuf.length; i++) {
",12,1,0,1,3,0,0,0,0,14,51,4,0.00000,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,"        int len = thisBuf.length - strLen;
",8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1
defect4j,lang,org/apache/commons/lang/Entities,62,926,"                            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,"                pfxLen += pfx.length();
",2,0,0,1,2,0,4,0,0,7,23,8,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,"            if (hexDigits > 16) { // too many for Long
",2,1,0,1,3,0,0,0,0,3,42,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,"            if (hexDigits > 8) { // too many for an int
",2,1,0,1,3,0,0,0,0,3,43,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,"        return Integer.decode(str);
",0,0,0,1,2,1,6,0,0,6,27,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.11111,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};
",2,0,0,2,4,1,0,2,0,11,68,4,0.11111,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,"        int pfxLen = 0;
",2,0,0,0,0,0,0,0,0,2,15,5,0.11111,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460,"        for(final String pfx : hex_prefixes) {
",4,0,0,1,3,1,0,2,0,7,38,4,0.11111,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,"            if (str.startsWith(pfx)) {
",0,0,0,2,5,0,6,0,0,6,26,7,0.11111,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466,"        if (pfxLen > 0) { // we have a hex number
",2,1,0,1,3,0,0,0,0,3,41,4,0.11111,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,257,"        if (cs == null || (strLen = cs.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,48,4,0.10000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,260,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.10000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,261,"            if (Character.isWhitespace(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,52,6,0.10000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,262,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.10000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,181,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");
",2,0,0,4,8,3,4,2,0,12,94,2,0.09091,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,34,"    public static final Long LONG_ZERO = Long.valueOf(0L);
",2,0,0,1,2,3,4,2,0,11,54,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,36,"    public static final Long LONG_ONE = Long.valueOf(1L);
",2,0,0,1,2,3,4,2,0,11,53,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,38,"    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);
",2,0,0,1,2,3,4,2,0,12,60,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,40,"    public static final Integer INTEGER_ZERO = Integer.valueOf(0);
",2,0,0,1,2,3,4,2,0,11,62,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,42,"    public static final Integer INTEGER_ONE = Integer.valueOf(1);
",2,0,0,1,2,3,4,2,0,11,61,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,44,"    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);
",2,0,0,1,2,3,4,2,0,12,68,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,46,"    public static final Short SHORT_ZERO = Short.valueOf((short) 0);
",2,0,0,2,4,3,4,2,0,11,64,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,48,"    public static final Short SHORT_ONE = Short.valueOf((short) 1);
",2,0,0,2,4,3,4,2,0,11,63,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,50,"    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);
",2,0,0,2,4,3,4,2,0,12,70,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,52,"    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);
",2,0,0,2,4,3,4,2,0,11,60,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,54,"    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);
",2,0,0,2,4,3,4,2,0,11,59,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,56,"    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);
",2,0,0,2,4,3,4,2,0,12,66,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,58,"    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);
",2,0,0,1,2,3,4,2,0,11,62,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,60,"    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);
",2,0,0,1,2,3,4,2,0,11,61,2,0.01149,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,573,"            exp = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,"                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,595,"                    return f;
",2,0,0,0,0,1,0,0,0,2,9,8,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,492,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,496,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,497,"            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.
",2,0,0,1,2,0,4,0,0,7,128,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,570,"        if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,571,"            exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,575,"        if (dec == null && exp == null) { // no decimal point and no exponent
",4,3,0,1,3,0,0,0,0,7,69,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,591,"        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,1,8,0,0,12,61,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,593,"                final Float f = createFloat(str);
",2,0,0,1,2,1,4,2,0,9,33,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,488,"            if (expPos > -1) { // there is an exponent
",2,1,0,1,3,0,0,0,0,4,42,6,0.20000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,489,"                if (expPos < decPos || expPos > str.length()) { // prevents double exponent causing IOOBE
",6,3,0,2,5,0,4,0,0,13,89,8,0.20000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,509,"        if (!Character.isDigit(lastChar) && lastChar != '.') {
",2,2,0,2,5,0,6,0,0,12,54,4,0.16667,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,621,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,624,"        for (int i = str.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,45,4,0.16667,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,625,"            if (str.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,27,6,0.16667,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,626,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.16667,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,643,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,646,"        return Float.valueOf(str);
",0,0,0,1,2,1,6,0,0,6,26,5,0.16667,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,451,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,454,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};
",2,0,0,2,4,1,0,2,0,11,68,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,459,"        int pfxLen = 0;
",2,0,0,0,0,0,0,0,0,2,15,5,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,460,"        for(final String pfx : hex_prefixes) {
",4,0,0,1,3,1,0,2,0,7,38,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,461,"            if (str.startsWith(pfx)) {
",0,0,0,2,5,0,6,0,0,6,26,7,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,466,"        if (pfxLen > 0) { // we have a hex number
",2,1,0,1,3,0,0,0,0,3,41,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,476,"        final char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,1,8,0,0,12,51,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,480,"        final int decPos = str.indexOf('.');
",2,0,0,1,2,1,4,0,0,8,36,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,481,"        final int expPos = str.indexOf('e') + str.indexOf('E') + 1; // assumes both not present
",2,1,0,2,4,1,8,0,0,14,87,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,485,"        int numDecimals = 0; // Check required precision (LANG-693)
",2,0,0,1,2,0,0,0,0,2,59,5,0.12500,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,486,"        if (decPos > -1) { // there is a decimal point
",2,1,0,1,3,0,0,0,0,4,46,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/StringUtils,3,257,"        if (cs == null || (strLen = cs.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,48,4,0.11111,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);
",6,1,0,1,2,1,6,2,0,16,64,6,0.04167,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,556,"        return ESCAPE_CSV.translate(input);
",0,0,0,1,2,1,6,0,0,6,35,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,156,"            if(index != 0) {
",2,1,0,1,3,0,0,0,0,3,16,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {
",0,0,0,3,7,0,10,0,0,10,67,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,161,"                out.write(input.toString());
",0,0,0,2,4,0,8,0,0,8,28,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,167,"            return input.length();
",0,0,0,1,2,1,4,0,0,4,22,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1737,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1740,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1741,"        int csLast = csLen - 1;
",4,1,0,0,0,0,0,0,0,5,23,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1742,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1743,"        int searchLast = searchLen - 1;
",4,1,0,0,0,0,0,0,0,5,31,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1744,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1745,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1746,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1747,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1763,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,268,"    static class CsvUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,58,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,272,"        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
",2,0,0,1,2,3,6,2,0,13,70,3,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,273,"        private static final char[] CSV_SEARCH_CHARS = 
",2,0,0,1,2,3,0,0,0,5,46,3,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,108,"        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];
",6,1,0,2,4,0,0,4,0,11,87,4,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,109,"        newArray[0] = this;
",0,0,1,1,2,0,0,0,0,3,19,4,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);
",4,0,0,1,2,0,8,0,0,12,66,5,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,111,"        return new AggregateTranslator(newArray);
",2,0,0,1,2,1,0,2,0,4,41,5,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,52,"    public static final CharSequenceTranslator ESCAPE_JAVA = 
",2,0,0,0,0,3,0,2,0,7,56,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,72,"    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = 
",2,0,0,0,0,3,0,2,0,7,62,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,94,"    public static final CharSequenceTranslator ESCAPE_XML = 
",2,0,0,0,0,3,0,2,0,7,55,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,109,"    public static final CharSequenceTranslator ESCAPE_HTML3 = 
",2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,124,"    public static final CharSequenceTranslator ESCAPE_HTML4 = 
",2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,140,"    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();
",2,0,0,1,2,3,0,4,0,9,73,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,183,"    public static final CharSequenceTranslator UNESCAPE_JAVA = 
",2,0,0,0,0,3,0,2,0,7,58,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,206,"    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;
",4,0,0,0,0,3,0,2,0,9,79,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,217,"    public static final CharSequenceTranslator UNESCAPE_HTML3 = 
",2,0,0,0,0,3,0,2,0,7,59,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,233,"    public static final CharSequenceTranslator UNESCAPE_HTML4 = 
",2,0,0,0,0,3,0,2,0,7,59,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,250,"    public static final CharSequenceTranslator UNESCAPE_XML = 
",2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,266,"    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();
",2,0,0,1,2,3,0,4,0,9,77,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,40,"    public AggregateTranslator(CharSequenceTranslator... translators) {
",4,0,0,1,3,1,0,2,0,7,67,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,41,"        this.translators = ArrayUtils.clone(translators);
",2,0,0,1,2,0,6,0,0,9,49,4,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,42,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,145,"    static class CsvEscaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,56,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,149,"        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
",2,0,0,1,2,3,6,2,0,13,70,3,0.04167,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,150,"        private static final char[] CSV_SEARCH_CHARS = 
",2,0,0,1,2,3,0,0,0,5,46,3,0.04167,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,320,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.04167,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,323,"        return array.clone();
",0,0,0,1,2,1,4,0,0,4,21,5,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,35,"    private static final String[][] ISO8859_1_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,52,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,139,"    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,78,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,148,"    private static final String[][] HTML40_EXTENDED_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,350,"    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,90,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,359,"    private static final String[][] BASIC_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,48,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,371,"    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,70,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,378,"    private static final String[][] APOS_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,47,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,387,"    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,68,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,396,"    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,409,"    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,90,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,34,"    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,80,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,138,"    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,84,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,147,"    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,92,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,349,"    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); }
",2,0,0,5,10,3,4,2,0,10,96,2,0.04167,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,"    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);
",2,0,0,1,2,3,6,2,0,13,114,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,461,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =
",2,0,0,0,0,3,0,2,0,7,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");
",2,0,0,1,2,3,2,2,0,10,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));
",0,0,0,2,4,0,12,0,0,13,64,8,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1140,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1238,"            if (this == obj) {
",2,1,0,1,3,0,0,0,0,3,18,5,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,"            if (obj instanceof TimeZoneDisplayKey) {
",2,0,0,1,3,0,0,2,0,4,40,6,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,"                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;
",4,0,0,1,2,0,0,4,0,8,51,7,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1243,"                return
",0,0,0,0,0,1,0,0,0,0,6,3,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,"            } else if (value < 100) {
",2,1,0,1,4,0,0,0,0,3,25,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,"                buffer.append((char)(value / 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,"                buffer.append((char)(value % 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1216,"                           boolean daylight, int style, Locale locale) {
",6,0,0,0,2,0,0,2,0,8,45,4,0.80000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1217,"            mTimeZone = timeZone;
",4,0,0,0,0,0,0,0,0,5,21,5,0.80000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1218,"            if (daylight) {
",2,0,0,1,3,0,0,0,0,2,15,5,0.80000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,"        return parsePattern;
",2,0,0,0,0,1,0,0,0,2,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,260,"        return date;
",2,0,0,0,0,1,0,0,0,2,12,4,0.10526,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,732,"            cal.set(field, modify(Integer.parseInt(value)));
",0,0,0,3,6,0,14,0,0,14,48,6,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,733,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,741,"            return iValue;
",2,0,0,0,0,1,0,0,0,2,14,5,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);
",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,283,"        cal.clear();
",0,0,0,1,2,0,4,0,0,4,12,5,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,285,"        for(int i=0; i<strategies.length;) {
",8,1,0,1,3,0,0,0,0,9,36,4,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,286,"            Strategy strategy= strategies[i++];
",4,0,1,1,2,0,0,2,0,9,35,6,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,287,"            strategy.setCalendar(this, cal, matcher.group(i));
",0,0,0,2,4,0,12,0,0,12,50,7,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,288,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,289,"        pos.setIndex(offset+matcher.end());
",2,1,0,2,4,0,8,0,0,11,35,5,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,290,"        return cal.getTime();
",0,0,0,1,2,1,4,0,0,4,21,5,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,"        return parsePattern;
",2,0,0,0,0,1,0,0,0,2,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,"            KeyValue[] textKeyValues= parser.getDisplayNames(field);
",2,0,0,2,4,0,6,2,0,10,56,5,0.20000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);
",4,0,0,2,4,0,8,2,0,15,93,6,0.20000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,"            if(idx<0) {
",2,1,0,1,3,0,0,0,0,3,11,5,0.20000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);
",2,0,1,2,4,0,6,0,0,12,41,6,0.20000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,697,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.20000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,"            return iValue-1;
",2,1,0,0,0,1,0,0,0,3,16,8,0.13793,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,250,"        Date date= parse(source, new ParsePosition(0));
",2,0,0,2,4,0,4,4,0,10,47,4,0.10526,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,251,"        if(date==null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.10526,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,260,"        return date;
",2,0,0,0,0,1,0,0,0,2,12,4,0.10526,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,741,"            cal.set(field, modify(Integer.parseInt(value)));
",0,0,0,3,6,0,14,0,0,14,48,6,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,742,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,276,"        int offset= pos.getIndex();
",2,0,0,1,2,0,4,0,0,6,27,5,0.10256,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,277,"        Matcher matcher= parsePattern.matcher(source.substring(offset));
",2,0,0,2,4,0,10,2,0,14,64,4,0.10256,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,"                ch = (char) (random.nextInt(gap) + start);
",4,1,0,3,6,0,6,0,0,12,42,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,"                ch = chars[random.nextInt(gap) + start];
",4,1,1,2,4,0,6,0,0,14,40,8,1,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);
",4,0,0,1,2,0,0,0,0,4,18,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,"        if (cs1 == cs2) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.06250,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.06250,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,"        if (cs1 == null || cs2 == null) {
",4,3,0,1,3,0,0,0,0,7,33,4,0.06250,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,"            return cs1.equals(cs2);
",0,0,0,1,2,1,6,0,0,6,23,5,0.06250,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,148,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");
",2,0,0,1,2,3,4,2,0,12,72,2,0.00321,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,707,"    private static class InitStripAccents {
",2,0,0,0,1,2,0,0,0,4,39,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,711,"        private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$
",2,0,0,2,4,3,4,2,0,12,108,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,716,"        private static final Pattern java6Pattern = sunPattern;
",4,0,0,0,0,3,0,2,0,9,55,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,720,"            Object _java6NormalizerFormNFD = null;
",2,0,0,0,0,0,0,2,0,4,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,721,"            Method _java6NormalizeMethod = null;
",2,0,0,0,0,0,0,2,0,4,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,722,"            Method _sunDecomposeMethod = null;
",2,0,0,0,0,0,0,2,0,4,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,723,"            Throwable _java6Exception = null;
",2,0,0,0,0,0,0,2,0,4,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,724,"            Throwable _sunException = null;
",2,0,0,0,0,0,0,2,0,4,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,728,"                Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader()
",2,0,0,2,4,0,6,2,0,10,77,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,730,"                _java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$
",2,0,0,2,4,0,6,0,0,10,85,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,731,"                Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()
",2,0,0,2,4,0,6,2,0,10,73,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,733,"                _java6NormalizeMethod = normalizerClass.getMethod(""normalize"",//$NON-NLS-1$
",2,0,0,0,1,0,4,0,0,8,75,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,747,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,735,"            } catch (Exception e1) {
",2,0,0,1,4,0,0,2,0,4,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,737,"                _java6Exception = e1;
",4,0,0,0,0,0,0,0,0,5,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,740,"                    Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()
",2,0,0,2,4,0,6,2,0,10,73,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,742,"                    _sunDecomposeMethod = normalizerClass.getMethod(""decompose"",//$NON-NLS-1$
",2,0,0,0,1,0,4,0,0,8,73,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,746,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,744,"                } catch (Exception e2) {
",2,0,0,1,4,0,0,2,0,4,24,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,745,"                    _sunException = e2;
",4,0,0,0,0,0,0,0,0,5,19,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,750,"            java6Exception = _java6Exception;
",4,0,0,0,0,0,0,0,0,5,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,"            return typeVarAssigns;
",2,0,0,0,0,1,0,0,0,2,22,6,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,548,"            return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,69,7,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);
",2,0,0,2,4,1,6,2,0,10,78,7,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {
",0,0,0,2,5,0,6,0,0,7,34,4,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,658,"        if (cls.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,24,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,671,"        HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()
",4,1,0,1,2,0,0,12,0,18,112,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,331,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,"    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);
",2,0,0,1,2,3,6,2,0,13,114,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =
",2,0,0,0,0,3,0,2,0,7,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,521,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,560,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,564,"                    return createLong(str);
",0,0,0,1,2,1,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,572,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,574,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,575,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,"                        return f;
",2,0,0,0,0,1,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,445,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,448,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,451,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,461,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,465,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,466,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,468,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,480,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,486,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,488,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,490,"        if (!Character.isDigit(lastChar) && lastChar != '.') {
",2,2,0,2,5,0,6,0,0,12,54,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,"        return ESCAPE_XML.translate(input);
",0,0,0,1,2,1,6,0,0,6,35,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.07692,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,"        for (CharSequenceTranslator translator : translators) {
",4,0,0,1,3,0,0,2,0,6,55,4,0.06667,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,52,"            int consumed = translator.translate(input, index, out);
",2,0,0,1,2,0,10,0,0,12,55,7,0.06667,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,53,"            if(consumed != 0) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.06667,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,78,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.06667,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,65,"        int max = longest;
",4,0,0,0,0,0,0,0,0,4,18,5,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,66,"        if (index + longest > input.length()) {
",4,2,0,2,5,0,4,0,0,10,39,4,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,70,"        for (int i = max; i >= shortest; i--) {
",10,1,0,1,3,0,0,0,0,12,39,4,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,71,"            CharSequence subSeq = input.subSequence(index, index + i);
",6,1,0,1,2,0,6,2,0,15,58,6,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,72,"            CharSequence result = lookupMap.get(subSeq);
",2,0,0,1,2,0,6,2,0,10,44,6,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,73,"            if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.06250,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,46,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,50,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,54,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,58,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,62,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,66,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,70,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,74,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,78,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,82,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,86,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,90,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,94,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);
",10,0,0,1,2,0,0,4,0,14,77,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,"        String value = cTimeZoneDisplayCache.get(key);
",2,0,0,1,2,0,6,2,0,10,46,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);
",2,0,0,1,2,0,10,0,0,13,51,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);
",2,0,0,1,2,0,8,2,0,12,61,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,415,"            if (prior != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,419,"        return value;
",2,0,0,0,0,1,0,0,0,2,13,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,"                if (tokenLen >= 4) {
",2,1,0,1,3,0,0,0,0,3,20,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);
",10,0,0,1,2,0,0,2,0,13,64,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,560,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,"            int start = index + 2;
",4,1,0,0,0,0,0,0,0,5,22,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,1,6,0,0,10,47,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,"        int noOfItems = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,40,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,"        if (noOfItems <= 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3295,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,"        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
",2,2,1,6,12,0,4,4,0,21,116,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3300,"        for (int i = startIndex; i < endIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,"            if (i > startIndex) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,"            if (array[i] != null) {
",0,1,1,2,5,0,0,0,0,5,23,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3305,"                buf.append(array[i]);
",0,0,1,2,4,0,4,0,0,8,21,9,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3308,"        return buf.toString();
",0,0,0,1,2,1,4,0,0,4,22,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3230,"        return join(elements, null);
",0,0,0,1,2,1,4,0,0,5,28,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3336,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3380,"            return EMPTY;
",2,0,0,0,0,1,0,0,0,2,13,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3335,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3338,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,1,6,0,0,10,47,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3369,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3372,"        if (separator == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3373,"            separator = EMPTY;
",4,0,0,0,0,0,0,0,0,5,18,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3378,"        int noOfItems = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,40,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3379,"        if (noOfItems <= 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");
",2,0,0,1,2,3,4,2,0,12,73,2,0.00926,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,"    private static final int[][] fields = {
",2,0,0,2,5,3,0,0,0,5,39,2,0.00926,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,"            this.endFinal = endFinal;
",4,0,0,0,0,0,0,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,"            spot = startFinal;
",4,0,0,0,0,0,0,0,0,5,18,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);
",4,0,0,1,2,0,4,0,0,9,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");
",0,0,0,1,2,0,0,2,0,3,66,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,"            numerator/=2; denominator/=2;
",4,0,0,0,0,0,0,0,0,6,29,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,"            if (numerator==Integer.MIN_VALUE ||
",6,2,0,0,1,0,0,0,0,8,35,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");
",0,0,0,1,2,0,0,2,0,3,56,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,"            numerator = -numerator;
",4,0,0,0,0,0,0,0,0,6,23,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');
",2,0,0,1,2,3,0,4,0,10,69,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,"    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');
",2,0,0,1,2,3,0,4,0,10,68,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,"    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');
",2,0,0,1,2,3,0,4,0,10,69,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());
",2,0,0,2,4,3,2,4,0,12,94,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,"    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();
",2,0,0,1,2,3,0,4,0,9,65,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,"    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');
",2,0,0,1,2,3,0,4,0,10,77,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,"                if (expPos < decPos || expPos > str.length()) {
",6,3,0,2,5,0,4,0,0,13,47,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,"                        return createBigDecimal(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,"                    return createLong(str);
",0,0,0,1,2,1,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,"                return createBigInteger(str);
",0,0,0,1,2,1,4,0,0,4,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,"                        return f;
",2,0,0,0,0,1,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,240,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,"            buffer.append(mValues[calendar.get(mField)]);
",0,0,1,3,6,0,10,0,0,12,45,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,"            buffer.append(mValue);
",0,0,0,1,2,0,6,0,0,6,22,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,821,"        c.setTime(date);
",0,0,0,1,2,0,6,0,0,6,16,5,0.03333,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();
",2,0,0,3,6,1,6,2,0,10,70,5,0.03333,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,"        StringLiteral(String value) {
",4,0,0,1,3,0,0,2,0,6,29,3,0.02857,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,"            mValue = value;
",4,0,0,0,0,0,0,0,0,5,15,5,0.02857,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,"            return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,"                if (expPos < decPos) {
",4,1,0,1,3,0,0,0,0,5,22,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,"                            return f;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,"                            return d;
",2,0,0,0,0,1,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,"                        return createBigDecimal(numeric);
",0,0,0,1,2,1,4,0,0,4,33,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,"                    return createInteger(str);
",0,0,0,1,2,1,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,"                    return createLong(str);
",0,0,0,1,2,1,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,"                return createBigInteger(str);
",0,0,0,1,2,1,4,0,0,4,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,"                        return f;
",2,0,0,0,0,1,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
",2,0,0,3,6,0,14,0,0,17,77,10,0.50000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,"            return ArrayUtils.EMPTY_INT_ARRAY;
",4,0,0,0,0,1,0,0,0,4,34,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,0.00485,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,"                        return false;
",0,0,0,0,0,1,0,0,0,1,13,10,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,"        if (cs == null || invalidChars == null) {
",4,3,0,1,3,0,0,0,0,7,41,4,0.44444,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());
",0,0,0,2,4,1,8,0,0,8,52,5,0.44444,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.40000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.40000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.40000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.40000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1378,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.40000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,0.40000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.40000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,"                        return i;
",2,0,0,0,0,1,0,0,0,2,9,10,0.40000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,"        return cs == null || cs.length() == 0;
",2,3,0,1,2,1,4,0,0,9,38,4,0.37113,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1689,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1462,"                        return true;
",0,0,0,0,0,1,0,0,0,1,12,12,0.30769,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1444,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1447,"        int csLength = cs.length();
",2,0,0,1,2,0,4,0,0,6,27,5,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1448,"        int searchLength = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,38,5,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1449,"        int csLast = csLength - 1;
",4,1,0,0,0,0,0,0,0,5,26,5,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1450,"        int searchLast = searchLength - 1;
",4,1,0,0,0,0,0,0,0,5,34,5,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1451,"        for (int i = 0; i < csLength; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1452,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1453,"            for (int j = 0; j < searchLength; j++) {
",8,1,0,1,3,0,0,0,0,10,40,6,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1454,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,"                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {
",20,7,0,1,3,0,0,0,0,27,111,10,0.28571,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1467,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.28571,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,56,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,60,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,64,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,68,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,72,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,76,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,80,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,84,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,88,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,92,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.10684,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,"		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,"		int csLength = cs.length();
",2,0,0,1,2,0,4,0,0,6,27,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,"		int searchLength = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,38,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,"		for (int i = 0; i < csLength; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,"			char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,"			for (int j = 0; j < searchLength; j++) {
",8,1,0,1,3,0,0,0,0,10,40,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,"				if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,"						return true;
",0,0,0,0,0,1,0,0,0,1,12,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,"        if (searchChars == null) {
",2,1,0,1,3,0,0,0,0,3,26,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());
",0,0,0,2,4,1,8,0,0,8,50,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.30769,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.30769,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,"        return cs == null || cs.length() == 0;
",2,3,0,1,2,1,4,0,0,9,38,4,0.04396,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,56,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,60,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,68,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,100,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,104,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,112,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,120,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,0.01762,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,170,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,171,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,212,"        return !StringUtils.isEmpty(cs);
",0,0,0,1,2,1,6,0,0,7,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,232,"        if (cs == null || (strLen = cs.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,233,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,235,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,236,"            if ((Character.isWhitespace(cs.charAt(i)) == false)) {
",0,1,0,4,9,0,10,0,0,12,54,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,237,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,240,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,260,"        return !StringUtils.isBlank(cs);
",0,0,0,1,2,1,6,0,0,7,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,289,"        return str == null ? null : str.trim();
",2,1,0,1,2,1,4,0,0,7,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);
",0,0,0,1,2,1,4,0,0,6,61,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,"            return new HashSet<IDKey>();
",0,0,0,1,2,1,0,4,0,4,28,11,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,"        return REGISTRY.get();
",0,0,0,1,2,1,4,0,0,4,22,5,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,"        return getRegistry().contains(new IDKey(value));
",2,0,0,3,6,1,4,2,0,8,48,5,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,"        if (isRegistered(object)) {
",0,0,0,2,5,0,4,0,0,4,27,5,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,"            register(object);
",0,0,0,1,2,0,4,0,0,4,17,7,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,"            Field[] fields = clazz.getDeclaredFields();
",2,0,0,2,4,0,4,2,0,8,43,6,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);
",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,"            for (Field field : fields) {
",4,0,0,1,3,0,0,2,0,6,28,6,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())
",0,0,0,2,5,0,10,0,0,11,56,11,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,"                        Object fieldValue = field.get(object);
",2,0,0,1,2,0,6,2,0,10,38,12,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,"                        builder.append(fieldValue);
",0,0,0,1,2,0,6,0,0,6,27,13,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,"            unregister(object);
",0,0,0,1,2,0,4,0,0,4,19,7,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,"        Class<?> clazz = object.getClass();
",2,0,0,1,2,0,4,2,0,8,35,4,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);
",0,0,0,1,2,0,12,0,0,12,72,5,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,"        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {
",4,3,0,2,5,0,4,0,0,11,68,4,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,"            clazz = clazz.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,30,6,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);
",0,0,0,1,2,0,12,0,0,12,72,7,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,"        return builder.toHashCode();
",0,0,0,1,2,1,4,0,0,4,28,5,0.14286,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.14286,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,"    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);
",2,0,0,1,2,3,6,2,0,13,86,2,0.01220,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,"    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);
",2,0,0,1,2,3,6,2,0,13,94,2,0.01220,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();
",2,0,0,1,2,3,0,12,0,17,101,2,0.01220,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);
",4,0,0,1,2,0,4,2,0,10,53,5,0.01220,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);
",4,0,0,1,2,0,4,2,0,10,47,5,0.01220,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);
",4,0,0,1,2,0,4,2,0,10,57,5,0.01220,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);
",4,0,0,1,2,0,4,2,0,10,49,5,0.01220,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,"        return ReflectionToStringBuilder.toString(object);
",0,0,0,1,2,1,6,0,0,6,50,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);
",0,0,0,1,2,1,4,0,0,7,50,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);
",6,0,0,1,2,0,0,0,0,6,29,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,"        this.setUpToClass(reflectUpToClass);
",0,0,0,1,2,0,4,0,0,4,36,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,"        this.setAppendTransients(outputTransients);
",0,0,0,1,2,0,4,0,0,4,43,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,"        this.setAppendStatics(outputStatics);
",0,0,0,1,2,0,4,0,0,4,37,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)
",10,0,0,1,2,1,0,2,0,13,108,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,"        this.appendStatics = appendStatics;
",4,0,0,0,0,0,0,0,0,5,35,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,"        this.appendTransients = appendTransients;
",4,0,0,0,0,0,0,0,0,5,41,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,923,"        buffer.append(arrayStart);
",0,0,0,1,2,0,6,0,0,6,26,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,924,"        int length = Array.getLength(array);
",2,0,0,1,2,0,6,0,0,8,36,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,925,"        for (int i = 0; i < length; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,926,"            Object item = Array.get(array, i);
",2,0,0,1,2,0,8,2,0,12,34,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,927,"            if (i > 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,"        if (array != null){
",2,1,0,1,3,0,0,0,0,3,19,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);
",2,0,0,4,8,0,6,4,0,12,49,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,"        return newArray;
",2,0,0,0,0,1,0,0,0,2,16,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);
",0,0,0,1,2,1,6,0,0,6,51,5,0.12500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,"        if (array != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.10000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,66,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,70,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,74,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,78,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,82,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,86,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,90,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,94,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,98,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,102,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.00303,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,"        if (!Character.isDigit(lastChar)) {
",0,0,0,2,5,0,6,0,0,7,35,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,"                            return createLong(numeric);
",0,0,0,1,2,1,4,0,0,4,27,12,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,"        for (int i = str.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,45,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,"            if (str.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,27,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,"        return Float.valueOf(str);
",0,0,0,1,2,1,6,0,0,6,26,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,"        return Double.valueOf(str);
",0,0,0,1,2,1,6,0,0,6,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,"        return Integer.decode(str);
",0,0,0,1,2,1,6,0,0,6,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,"        return new BigInteger(str);
",2,0,0,1,2,1,0,2,0,4,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,"        final Class<?> type1 = array1.getClass().getComponentType();
",2,0,0,2,4,1,6,2,0,11,60,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.00319,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);
",0,0,0,1,2,1,6,0,0,7,44,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,"                for (int i = mSize; --i >= 2; ) {
",6,1,0,1,3,0,0,0,0,8,33,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,"                    buffer.append('0');
",0,0,0,1,2,0,4,0,0,5,19,10,0.50000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,"                buffer.append((char)(value / 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,"                buffer.append((char)(value % 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);
",4,1,0,2,4,0,8,0,0,13,51,6,0.03333,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1424,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,"            buffer.append((char)(value / 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,"            buffer.append((char)(value % 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1432,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,"        if (text == null || text.length() == 0 || searchList == null || 
",4,8,0,1,3,0,4,0,0,16,63,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,"            return text;
",2,0,0,0,0,1,0,0,0,2,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,"        if (timeToLive < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,"        int searchLength = searchList.length;
",6,0,0,0,0,0,0,0,0,6,37,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,"        int replacementLength = replacementList.length;
",6,0,0,0,0,0,0,0,0,6,47,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,"        if (searchLength != replacementLength) {
",4,1,0,1,3,0,0,0,0,5,40,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,"        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
",2,0,1,2,4,0,0,0,0,4,64,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,"        int textIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,"        int replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,3,22,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,"        int tempIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,"        for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,"            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || 
",0,4,1,2,5,0,0,0,0,12,60,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,"            tempIndex = text.indexOf(searchList[i]);
",2,0,1,2,4,0,4,0,0,11,40,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,"            if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,"                noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,"                if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,"                    textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,"                    replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,"        if (textIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,"            return text;
",2,0,0,0,0,1,0,0,0,2,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,"        int increase = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,1.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,"        return str.indexOf(searchStr) >= 0;
",0,1,0,1,2,1,6,0,0,7,35,4,0.50000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.33333,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,168,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,192,"        return str == null || str.length() == 0;
",2,3,0,1,2,1,4,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,210,"        return !StringUtils.isEmpty(str);
",0,0,0,1,2,1,6,0,0,7,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,230,"        if (str == null || (strLen = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,231,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,233,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,234,"            if ((Character.isWhitespace(str.charAt(i)) == false)) {
",0,1,0,4,9,0,10,0,0,12,55,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,235,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,238,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,258,"        return !StringUtils.isBlank(str);
",0,0,0,1,2,1,6,0,0,7,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,287,"        return str == null ? null : str.trim();
",2,1,0,1,2,1,4,0,0,7,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,313,"        String ts = trim(str);
",2,0,0,1,2,0,4,2,0,8,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,421,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,"        if (!Character.isDigit(lastChar)) {
",0,0,0,2,5,0,6,0,0,7,35,4,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,441,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,10,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,457,"                            return createLong(numeric);
",0,0,0,1,2,1,4,0,0,4,27,12,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,"        for (int i = str.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,45,4,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,"            if (str.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,27,6,0.50000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.50000,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,185,"        return str == null || str.length() == 0;
",2,3,0,1,2,1,4,0,0,9,40,4,0.33333,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,"        if (width > 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,"            ensureCapacity(size + width);
",4,1,0,1,2,0,2,0,0,7,29,7,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,"            String str = (obj == null ? getNullText() : obj.toString());
",4,1,0,3,6,0,6,2,0,14,60,6,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,"            int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,7,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,"            if (strLen >= width) {
",4,1,0,1,3,0,0,0,0,5,22,6,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,107,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00800,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,"        if (initialCapacity <= 0) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00800,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,"        buffer = new char[initialCapacity];
",2,0,1,1,2,0,0,0,0,5,35,4,0.00800,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,112,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00800,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,"        if (capacity > buffer.length) {
",6,1,0,1,3,0,0,0,0,7,31,4,0.00581,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,"        return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00581,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,241,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,118,"    private StrMatcher delimMatcher = StrMatcher.splitMatcher();
",2,0,0,1,2,1,4,2,0,9,60,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,120,"    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();
",2,0,0,1,2,1,4,2,0,9,59,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,122,"    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();
",2,0,0,1,2,1,4,2,0,9,61,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,124,"    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();
",2,0,0,1,2,1,4,2,0,9,61,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,127,"    private boolean emptyAsNull = false;
",2,0,0,0,0,1,0,0,0,4,36,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,"        for (int i = 0; i < thisBuf.length; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,"            if (thisBuf[i] == ch) {
",2,1,1,2,5,0,0,0,0,7,23,6,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,"        int len = (str == null ? 0 : str.length());
",4,1,0,2,4,0,4,0,0,9,43,5,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,"        if (len > 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);
",2,0,0,1,2,0,4,0,0,6,28,7,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,"            if (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);
",4,1,0,1,2,0,6,0,0,11,36,9,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1209,"        return this;
",0,0,0,0,0,1,0,0,0,0,12,3,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,"        startIndex = (startIndex < 0 ? 0 : startIndex);
",6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,"        if (str == null || startIndex >= size) {
",6,3,0,1,3,0,0,0,0,9,40,4,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,"        if (strLen == 1) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,"        if (strLen == 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,"        if (strLen > size) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,"        int len = size - strLen + 1;
",6,2,0,0,0,0,0,0,0,8,28,5,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,"        for (int i = startIndex; i < len; i++) {
",10,1,0,1,3,0,0,0,0,12,40,5,0.11111,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,"        startIndex = (startIndex < 0 ? 0 : startIndex);
",6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,"        if (str == null || startIndex >= size) {
",6,3,0,1,3,0,0,0,0,9,40,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,"        if (strLen == 1) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,"        if (strLen == 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,"        if (strLen > size) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,"        for (int i = startIndex; i < len; i++) {
",10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,"            for (int j = 0; j < strLen; j++) {
",8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,"                if (str.charAt(j) != thisBuf[i + j]) {
",4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,"                    continue outer;
",2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,"            return i;
",2,0,0,0,0,1,0,0,0,2,9,7,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,"        int len = (str == null ? 0 : str.length());
",4,1,0,2,4,0,4,0,0,9,43,5,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,"        if (len > 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);
",2,0,0,1,2,0,4,0,0,6,28,7,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,"            while (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);
",4,1,0,1,2,0,6,0,0,11,36,9,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);
",2,0,0,1,2,0,6,0,0,9,28,8,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,"                    if (entityName.length() == 1) {
",0,1,0,2,5,0,4,0,0,5,31,11,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,"                        char charAt1 = entityName.charAt(1);
",2,0,0,1,2,0,4,0,0,6,36,14,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,"                            if (charAt1 == 'x' || charAt1=='X') {
",4,3,0,1,3,0,0,0,0,9,37,15,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,"                                entityValue = Integer.parseInt(entityName.substring(1));
",2,0,0,2,4,0,8,0,0,11,56,17,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,"                        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,853,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());
",0,0,0,2,4,1,12,0,0,13,81,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {
",0,0,0,2,5,0,8,0,0,8,46,7,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,"                months += 12 * years;
",4,1,0,0,0,0,0,0,0,6,21,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,"                years = 0;
",2,0,0,0,0,0,0,0,0,3,10,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,"            hours += 24 * days;
",4,1,0,0,0,0,0,0,0,6,19,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,"            days = 0;
",2,0,0,0,0,0,0,0,0,3,9,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,"            minutes += 60 * hours;
",4,1,0,0,0,0,0,0,0,6,22,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,"            hours = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,"            seconds += 60 * minutes;
",4,1,0,0,0,0,0,0,0,6,24,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,"            minutes = 0;
",2,0,0,0,0,0,0,0,0,3,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,"            milliseconds += 1000 * seconds;
",4,1,0,0,0,0,0,0,0,6,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,"            seconds = 0;
",2,0,0,0,0,0,0,0,0,3,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,"        long millis = endMillis - startMillis;
",6,1,0,0,0,0,0,0,0,7,38,5,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,"        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {
",6,2,0,1,3,0,0,0,0,8,45,4,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,"        Token[] tokens = lexx(format);
",2,0,0,2,4,0,4,2,0,8,30,4,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,"        Calendar start = Calendar.getInstance(timezone);
",2,0,0,1,2,0,6,2,0,10,48,4,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,"        start.setTime(new Date(startMillis));
",2,0,0,2,4,0,4,2,0,8,37,5,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,"        Calendar end = Calendar.getInstance(timezone);
",2,0,0,1,2,0,6,2,0,10,46,4,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,"        end.setTime(new Date(endMillis));
",2,0,0,2,4,0,4,2,0,8,33,5,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,"        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);
",10,1,0,2,4,0,8,0,0,19,83,5,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,"        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);
",10,1,0,2,4,0,8,0,0,19,68,5,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,"        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);
",10,1,0,2,4,0,8,0,0,19,68,5,0.50000,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,"        return iValue - ((ValuedEnum) other).iValue;
",6,1,0,2,4,1,0,2,0,9,44,4,0.25000,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,"        super(name);
",2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,"        iValue = value;
",4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05263,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,"        return getClass();
",0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,"        iName = name;
",4,0,0,0,0,0,0,0,0,5,13,4,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,"        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();
",2,2,0,3,6,0,8,0,0,13,64,4,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,"                ok = true;
",2,0,0,0,0,0,0,0,0,4,10,8,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,340,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,349,"        Entry entry = (Entry) cEnumClasses.get(enumClass);
",2,0,0,2,4,0,6,4,0,12,50,4,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,"        if (entry == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,"            entry = createEntry(enumClass);
",2,0,0,1,2,0,4,0,0,7,31,6,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,352,"            cEnumClasses.put(enumClass, entry);
",0,0,0,1,2,0,8,0,0,8,35,7,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,"        if (entry.map.containsKey(name)) {
",4,0,0,2,5,0,4,0,0,8,34,5,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);
",4,0,0,1,2,0,4,0,0,8,26,5,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,"        entry.list.add(this);
",4,0,0,1,2,0,2,0,0,6,21,5,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,359,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,"        Entry entry = new Entry();
",2,0,0,1,2,0,0,4,0,6,26,4,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,"        Class cls = enumClass.getSuperclass();
",2,0,0,1,2,0,4,2,0,8,38,4,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,"        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {
",6,5,0,1,3,0,0,4,0,15,69,4,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,"        return entry;
",2,0,0,0,0,1,0,0,0,2,13,4,0.01587,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,"          super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.01587,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,"        gval.setTime(date);
",0,0,0,1,2,0,6,0,0,6,19,5,1.00000,0
