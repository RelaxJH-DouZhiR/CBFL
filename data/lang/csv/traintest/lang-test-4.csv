dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,408,"        return sb.toString();
",0,0,0,1,2,0,4,0,0,4,21,5,0.25000,0,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,418,"        int len = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,419,"        char[] buffer = pattern.toCharArray();
",2,0,0,2,4,0,4,0,0,6,38,5,0.25000,0,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,421,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());
",2,0,0,3,6,0,12,0,0,15,64,6,0.25000,0,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,422,"            pos.setIndex(pos.getIndex() + len);
",2,1,0,2,4,0,8,0,0,11,35,7,0.25000,0,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,423,"        } while (len > 0 && pos.getIndex() < pattern.length());
",2,3,0,3,7,0,8,0,0,13,55,4,0.25000,0,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,424,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,433,"        pos.setIndex(pos.getIndex() + 1);
",0,1,0,2,4,0,8,0,0,9,33,5,0.25000,0,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,434,"        return pos;
",2,0,0,0,0,0,0,0,0,2,11,4,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,495,"        if (coll == null || coll.size() == 0) {
",2,3,0,2,5,0,4,0,0,9,39,4,0.25000,0,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,498,"        for (Iterator<?> iter = coll.iterator(); iter.hasNext();) {
",2,0,0,3,7,0,8,2,0,12,59,4,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,499,"            if (iter.next() != null) {
",0,1,0,2,5,0,4,0,0,5,26,6,0.25000,0,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,500,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,176,"        if (expression == false) {
",2,1,0,1,3,0,0,0,0,4,26,4,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,179,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,"            return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,7,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,"                if (expPos < decPos || expPos > str.length()) {
",6,3,0,2,5,0,4,0,0,13,47,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,"                            return f;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,"                            return d;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,"                        return createBigDecimal(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,"                    return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,11,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,"                    return createLong(str);
",0,0,0,1,2,0,4,0,0,4,23,11,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,"                return createBigInteger(str);
",0,0,0,1,2,0,4,0,0,4,29,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,"                        return f;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,240,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,30,"    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,80,2,0.05000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,"            buffer.append(mValues[calendar.get(mField)]);
",0,0,1,3,6,0,10,0,0,12,45,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,"            buffer.append(mValue);
",0,0,0,1,2,0,6,0,0,6,22,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,"            return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,7,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,"                if (expPos < decPos) {
",4,1,0,1,3,0,0,0,0,5,22,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,"                            return f;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,"                            return d;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,"                        return createBigDecimal(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,"                    return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,11,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,"                    return createLong(str);
",0,0,0,1,2,0,4,0,0,4,23,11,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,"                return createBigInteger(str);
",0,0,0,1,2,0,4,0,0,4,29,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,"                        return f;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
",2,0,0,3,6,0,14,0,0,17,77,10,0.50000,0,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,"                out.write(entityValue);
",0,0,0,1,2,0,6,0,0,6,23,7,0.50000,0,1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,"            return ArrayUtils.EMPTY_INT_ARRAY;
",4,0,0,0,0,0,0,0,0,4,34,7,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,1,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,1,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,10,1,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,1,0,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,"		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,"		int csLength = cs.length();
",2,0,0,1,2,0,4,0,0,6,27,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,"		int searchLength = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,38,5,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,"		for (int i = 0; i < csLength; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,"			char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1.00000,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,"			for (int j = 0; j < searchLength; j++) {
",8,1,0,1,3,0,0,0,0,10,40,6,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,"				if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,"						return true;
",0,0,0,0,0,0,0,0,0,1,12,10,1.00000,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);
",0,0,0,1,2,0,4,0,0,6,61,4,0.33333,0,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,0.02500,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,"        return ReflectionToStringBuilder.toString(object);
",0,0,0,1,2,0,6,0,0,6,50,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);
",0,0,0,1,2,0,4,0,0,7,50,4,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);
",6,0,0,1,2,0,0,0,0,6,29,4,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,"        this.setUpToClass(reflectUpToClass);
",0,0,0,1,2,0,4,0,0,4,36,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,"        this.setAppendTransients(outputTransients);
",0,0,0,1,2,0,4,0,0,4,43,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,"        this.setAppendStatics(outputStatics);
",0,0,0,1,2,0,4,0,0,4,37,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)
",10,0,0,1,2,0,0,2,0,13,108,5,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,"        this.appendStatics = appendStatics;
",4,0,0,0,0,0,0,0,0,5,35,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,"        this.appendTransients = appendTransients;
",4,0,0,0,0,0,0,0,0,5,41,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,923,"        buffer.append(arrayStart);
",0,0,0,1,2,0,6,0,0,6,26,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,924,"        int length = Array.getLength(array);
",2,0,0,1,2,0,6,0,0,8,36,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,925,"        for (int i = 0; i < length; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,926,"            Object item = Array.get(array, i);
",2,0,0,1,2,0,8,2,0,12,34,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,927,"            if (i > 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,930,"            if (item == null) {
",2,1,0,1,3,0,0,0,0,3,19,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,934,"                appendInternal(buffer, fieldName, item, arrayContentDetail);
",0,0,0,1,2,0,10,0,0,10,60,9,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,937,"        buffer.append(arrayEnd);
",0,0,0,1,2,0,6,0,0,6,24,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,938,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,527,"            this.reflectionAppendArray(this.getObject());
",0,0,0,2,4,0,4,0,0,4,45,7,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,528,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,622,"        this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);
",0,0,0,3,6,0,8,0,0,8,81,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,623,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,683,"        this.upToClass = clazz;
",4,0,0,0,0,0,0,0,0,5,23,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,684,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,677,"        if (clazz != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1045,"        return style;
",2,0,0,0,0,0,0,0,0,2,13,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,701,"            clazz = clazz.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,30,6,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,702,"            this.appendFieldsIn(clazz);
",0,0,0,1,2,0,4,0,0,4,27,7,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,928,"                buffer.append(arraySeparator);
",0,0,0,1,2,0,6,0,0,6,30,9,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,526,"        if (clazz.isArray()) {
",0,0,0,2,5,0,4,0,0,4,22,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,530,"        Field[] fields = clazz.getDeclaredFields();
",2,0,0,2,4,0,4,2,0,8,43,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,531,"        AccessibleObject.setAccessible(fields, true);
",0,0,0,1,2,0,6,0,0,7,45,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,532,"        for (Field field : fields) {
",4,0,0,1,3,0,0,2,0,6,28,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,549,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,566,"        return this.upToClass;
",2,0,0,0,0,0,0,0,0,2,22,5,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,698,"        Class<?> clazz = this.getObject().getClass();
",2,0,0,2,4,0,4,2,0,8,45,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,699,"        this.appendFieldsIn(clazz);
",0,0,0,1,2,0,4,0,0,4,27,5,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,700,"        while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {
",2,3,0,3,7,0,6,0,0,11,71,4,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,704,"        return super.toString();
",2,0,0,1,2,0,0,0,0,2,24,5,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,695,"        if (this.getObject() == null) {
",0,1,0,2,5,0,2,0,0,3,31,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,372,"    private boolean appendStatics = false;
",2,0,0,0,0,1,0,0,0,4,38,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,377,"    private boolean appendTransients = false;
",2,0,0,0,0,1,0,0,0,4,41,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,387,"    private Class<?> upToClass = null;
",2,0,0,0,0,1,0,2,0,5,34,2,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,413,"                    match = false;
",2,0,0,0,0,0,0,0,0,4,14,10,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,414,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1455,"                buffer.append(object.getClass().getName());
",0,0,0,3,6,0,10,0,0,10,43,9,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1468,"            register(object);
",0,0,0,1,2,0,4,0,0,4,17,7,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1469,"            buffer.append('@');
",0,0,0,1,2,0,4,0,0,5,19,7,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1470,"            buffer.append(Integer.toHexString(System.identityHashCode(object)));
",0,0,0,3,6,0,14,0,0,14,68,7,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,148,"        return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();
",0,1,0,3,6,0,12,4,0,17,88,5,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,163,"        Map<Object, Object> m = getRegistry();
",2,0,0,1,2,0,2,6,0,10,38,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,469,"        if (isRegistered(value)
",0,0,0,1,3,0,4,0,0,4,23,6,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1451,"            register(object);
",0,0,0,1,2,0,4,0,0,4,17,7,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1452,"            if (useShortClassName) {
",2,0,0,1,3,0,0,0,0,2,24,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,256,"            style = getDefaultStyle();
",2,0,0,1,2,0,2,0,0,5,26,6,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,120,"        return defaultStyle;
",2,0,0,0,0,0,0,0,0,2,20,4,1,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,208,"                    m.remove(value);
",0,0,0,1,2,0,6,0,0,6,16,11,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,209,"                    if (m.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,18,11,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,210,"                        REGISTRY.remove();
",0,0,0,1,2,0,4,0,0,4,18,13,1,0,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,410,"            boolean match = true;
",2,0,0,0,0,0,0,0,0,3,21,7,1,0,0
