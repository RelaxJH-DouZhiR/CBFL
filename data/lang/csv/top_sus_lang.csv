dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,"                pfxLen += pfx.length();
",2,0,0,1,2,0,4,0,0,7,23,8,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,"            final int hexDigits = str.length() - pfxLen;
",4,1,0,1,2,1,4,0,0,10,44,6,0.33333,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,"            if (hexDigits > 16) { // too many for Long
",2,1,0,1,3,0,0,0,0,3,42,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,"            if (hexDigits > 8) { // too many for an int
",2,1,0,1,3,0,0,0,0,3,43,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,"            return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);
",6,1,0,1,2,1,6,2,0,16,64,6,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,"            final CharSequence result = lookupMap.get(subSeq);
",2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78,"            if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.04167,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,83,"        return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.04167,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,556,"        return ESCAPE_CSV.translate(input);
",0,0,0,1,2,0,6,0,0,6,35,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,"    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);
",2,0,0,1,2,3,6,2,0,13,114,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,461,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =
",2,0,0,0,0,3,0,2,0,7,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");
",2,0,0,1,2,3,2,2,0,10,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?
",2,1,0,1,2,3,2,2,0,12,85,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,772,"    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);
",2,0,0,1,2,3,4,2,0,11,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,790,"    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");
",2,0,0,1,2,3,2,2,0,10,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");
",2,0,0,1,2,3,2,0,0,8,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");
",2,0,0,1,2,3,2,0,0,8,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");
",2,0,0,1,2,3,2,0,0,8,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");
",2,1,0,2,4,3,4,0,0,12,97,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");
",2,0,0,1,2,3,2,0,0,8,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");
",2,0,0,1,2,3,2,0,0,8,65,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");
",2,0,0,1,2,3,2,0,0,8,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");
",2,0,0,1,2,3,2,0,0,8,69,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1086,"    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX
",12,1,0,0,0,3,0,0,0,16,111,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1099,"    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);
",2,0,0,1,2,3,4,0,0,9,85,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");
",2,0,0,1,2,3,4,0,0,10,93,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");
",2,0,0,1,2,3,4,0,0,10,93,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");
",4,1,0,1,2,3,2,0,0,12,110,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");
",4,1,0,1,2,3,2,0,0,12,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");
",4,1,0,1,2,3,2,0,0,12,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");
",2,0,0,1,2,3,4,0,0,10,91,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");
",4,1,0,1,2,3,2,0,0,11,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");
",2,0,0,1,2,3,4,0,0,10,91,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");
",2,0,0,1,2,3,4,0,0,10,94,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");
",2,0,0,1,2,3,4,0,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1236,"    public static final boolean IS_OS_WINDOWS_8 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.2"");
",2,0,0,1,2,3,4,0,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1277,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);
",0,0,0,1,2,0,6,0,0,6,69,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1288,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);
",0,0,0,1,2,0,10,0,0,10,69,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1298,"        return isOSNameMatch(OS_NAME, osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,44,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1316,"            return System.getProperty(property);
",0,0,0,1,2,0,6,0,0,6,36,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1383,"        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);
",0,0,0,1,2,0,6,0,0,6,67,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1399,"        if (version == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1402,"        return version.startsWith(versionPrefix);
",0,0,0,1,2,0,6,0,0,6,41,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1418,"        if (osName == null || osVersion == null) {
",4,3,0,1,3,0,0,0,0,7,42,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1421,"        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);
",0,1,0,2,4,0,12,0,0,13,80,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1435,"        if (osName == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1438,"        return osName.startsWith(osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,39,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,89,"    JavaVersion(final float value, final String name) {
",6,0,0,1,3,2,0,2,0,10,51,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,90,"        this.value = value;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,91,"        this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,92,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,32,"    JAVA_0_9(1.5f, ""0.9""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,37,"    JAVA_1_1(1.1f, ""1.1""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,42,"    JAVA_1_2(1.2f, ""1.2""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,47,"    JAVA_1_3(1.3f, ""1.3""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,52,"    JAVA_1_4(1.4f, ""1.4""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,57,"    JAVA_1_5(1.5f, ""1.5""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,62,"    JAVA_1_6(1.6f, ""1.6""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,67,"    JAVA_1_7(1.7f, ""1.7""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,72,"    JAVA_1_8(1.8f, ""1.8"");
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,"public enum JavaVersion {
",2,0,0,0,1,1,0,0,0,3,25,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,105,"        return this.value >= requiredVersion.value;
",6,1,0,0,0,0,0,0,0,7,43,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {
",0,0,0,2,5,0,4,0,0,5,24,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,138,"        } else if (""1.3"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,144,"        } else if (""1.6"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,146,"        } else if (""1.7"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,147,"            return JAVA_1_7;
",2,0,0,0,0,0,0,0,0,2,16,13,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,447,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,453,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,456,"            int hexDigits = str.length() - 2; // drop 0x
",2,1,0,1,2,0,4,0,0,7,44,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -
",0,0,0,2,5,0,4,0,0,5,36,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,460,"            if (hexDigits > 8) { // too many for an int
",2,1,0,1,3,0,0,0,0,3,43,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,463,"            return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,474,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,475,"                if (expPos < decPos || expPos > str.length()) {
",6,3,0,2,5,0,4,0,0,13,47,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,480,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,482,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,485,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,522,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,525,"                            return f;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,535,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,536,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,537,"                            return d;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,"                        return createBigDecimal(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,558,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,563,"                    return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,568,"                    return createLong(str);
",0,0,0,1,2,0,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,569,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,572,"                return createBigInteger(str);
",0,0,0,1,2,0,4,0,0,4,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,578,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,580,"                        return f;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,586,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,"            if (zone.useDaylightTime()
",0,0,0,1,3,0,4,0,0,4,26,7,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));
",0,0,0,2,4,0,12,0,0,13,64,8,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1140,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1238,"            if (this == obj) {
",2,1,0,1,3,0,0,0,0,3,18,5,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,"            if (obj instanceof TimeZoneDisplayKey) {
",2,0,0,1,3,0,0,2,0,4,40,6,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,"                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;
",4,0,0,1,2,0,0,4,0,8,51,7,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1243,"                return
",0,0,0,0,0,0,0,0,0,0,6,3,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,"            } else if (value < 100) {
",2,1,0,1,4,0,0,0,0,3,25,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,"                buffer.append((char)(value / 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,"                buffer.append((char)(value % 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,"        return parsePattern;
",2,0,0,0,0,0,0,0,0,2,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,"        return parsePattern;
",2,0,0,0,0,0,0,0,0,2,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,"                ch = (char) (random.nextInt(gap) + start);
",4,1,0,3,6,0,6,0,0,12,42,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,"                ch = chars[random.nextInt(gap) + start];
",4,1,1,2,4,0,6,0,0,14,40,8,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,225,"        if (count == 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,227,"        } else if (count < 0) {
",2,1,0,1,4,0,0,0,0,3,23,5,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,231,"        if (start == 0 && end == 0) {
",4,3,0,1,3,0,0,0,0,7,29,4,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,"                if (!letters && !numbers) {
",4,1,0,1,3,0,0,0,0,7,27,6,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,233,"                    end = Integer.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,7,24,8,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,"        char[] buffer = new char[count];
",2,0,1,2,4,0,0,0,0,4,32,5,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,241,"        int gap = end - start;
",6,1,0,0,0,0,0,0,0,7,22,5,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,243,"        while (count-- != 0) {
",2,1,0,1,3,0,0,0,0,4,22,4,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,245,"            if (chars == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,43,"    private static final Random RANDOM = new Random();
",2,0,0,1,2,3,0,4,0,9,50,2,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,228,"            throw new IllegalArgumentException(""Requested random string length "" + count + "" is less than 0."");
",2,1,0,1,2,0,0,2,0,7,99,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);
",4,0,0,1,2,0,0,0,0,4,18,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,76,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,"        if (cs1 == cs2) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.06250,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.06250,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,"        if (cs1 == null || cs2 == null) {
",4,3,0,1,3,0,0,0,0,7,33,4,0.06250,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,"            return cs1.equals(cs2);
",0,0,0,1,2,0,6,0,0,6,23,5,0.06250,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,"            return typeVarAssigns;
",2,0,0,0,0,0,0,0,0,2,22,6,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,548,"            return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);
",2,0,0,2,4,0,6,2,0,10,69,7,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);
",2,0,0,2,4,0,6,2,0,10,78,7,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {
",0,0,0,2,5,0,6,0,0,7,34,4,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,658,"        if (cls.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,24,5,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,671,"        HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()
",4,1,0,1,2,0,0,12,0,18,112,4,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,"        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {
",2,2,0,3,7,0,10,0,0,14,64,4,1,1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,331,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,"    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);
",2,0,0,1,2,3,6,2,0,13,114,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =
",2,0,0,0,0,3,0,2,0,7,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");
",2,0,0,1,2,3,2,2,0,10,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");
",2,0,0,1,2,3,2,2,0,10,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?
",2,1,0,1,2,3,2,2,0,12,85,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,772,"    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);
",2,0,0,1,2,3,4,2,0,11,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,790,"    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");
",2,0,0,1,2,3,2,2,0,10,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");
",2,0,0,1,2,3,2,2,0,10,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");
",2,0,0,1,2,3,2,0,0,8,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");
",2,0,0,1,2,3,2,0,0,8,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");
",2,0,0,1,2,3,2,0,0,8,66,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");
",2,1,0,2,4,3,4,0,0,12,97,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");
",2,0,0,1,2,3,2,0,0,8,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");
",2,0,0,1,2,3,2,0,0,8,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");
",2,0,0,1,2,3,2,0,0,8,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");
",2,0,0,1,2,3,2,0,0,8,65,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");
",2,0,0,1,2,3,2,0,0,8,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");
",2,0,0,1,2,3,2,0,0,8,69,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1086,"    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX
",12,1,0,0,0,3,0,0,0,16,111,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1099,"    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);
",2,0,0,1,2,3,4,0,0,9,85,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");
",2,0,0,1,2,3,4,0,0,10,93,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");
",2,0,0,1,2,3,4,0,0,10,93,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");
",4,1,0,1,2,3,2,0,0,12,110,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");
",4,1,0,1,2,3,2,0,0,12,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");
",4,1,0,1,2,3,2,0,0,12,98,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");
",2,0,0,1,2,3,4,0,0,10,91,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");
",4,1,0,1,2,3,2,0,0,11,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");
",2,0,0,1,2,3,4,0,0,10,91,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");
",2,0,0,1,2,3,4,0,0,10,94,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");
",2,0,0,1,2,3,4,0,0,10,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1265,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);
",0,0,0,1,2,0,6,0,0,6,69,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1276,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);
",0,0,0,1,2,0,10,0,0,10,69,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1286,"        return isOSNameMatch(OS_NAME, osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,44,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1304,"            return System.getProperty(property);
",0,0,0,1,2,0,6,0,0,6,36,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1371,"        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);
",0,0,0,1,2,0,6,0,0,6,67,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1387,"        if (version == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1390,"        return version.startsWith(versionPrefix);
",0,0,0,1,2,0,6,0,0,6,41,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1406,"        if (osName == null || osVersion == null) {
",4,3,0,1,3,0,0,0,0,7,42,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1409,"        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);
",0,1,0,2,4,0,12,0,0,13,80,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1423,"        if (osName == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1426,"        return osName.startsWith(osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,39,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,89,"    JavaVersion(final float value, final String name) {
",6,0,0,1,3,2,0,2,0,10,51,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,90,"        this.value = value;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,91,"        this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,92,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,32,"    JAVA_0_9(1.5f, ""0.9""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,37,"    JAVA_1_1(1.1f, ""1.1""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,42,"    JAVA_1_2(1.2f, ""1.2""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,47,"    JAVA_1_3(1.3f, ""1.3""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,52,"    JAVA_1_4(1.4f, ""1.4""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,57,"    JAVA_1_5(1.5f, ""1.5""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,62,"    JAVA_1_6(1.6f, ""1.6""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,67,"    JAVA_1_7(1.7f, ""1.7""),
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,72,"    JAVA_1_8(1.8f, ""1.8"");
",2,0,0,1,2,0,0,0,0,3,22,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,27,"public enum JavaVersion {
",2,0,0,0,1,1,0,0,0,3,25,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,105,"        return this.value >= requiredVersion.value;
",6,1,0,0,0,0,0,0,0,7,43,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,132,"        if (""0.9"".equals(nom)) {
",0,0,0,2,5,0,4,0,0,5,24,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,134,"        } else if (""1.1"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,136,"        } else if (""1.2"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,138,"        } else if (""1.3"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,140,"        } else if (""1.4"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,142,"        } else if (""1.5"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,144,"        } else if (""1.6"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,146,"        } else if (""1.7"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,147,"            return JAVA_1_7;
",2,0,0,0,0,0,0,0,0,2,16,13,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,52,"    public static final CharSequenceTranslator ESCAPE_JAVA = 
",2,0,0,0,0,3,0,2,0,7,56,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,72,"    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = 
",2,0,0,0,0,3,0,2,0,7,62,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,94,"    public static final CharSequenceTranslator ESCAPE_XML = 
",2,0,0,0,0,3,0,2,0,7,55,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,109,"    public static final CharSequenceTranslator ESCAPE_HTML3 = 
",2,0,0,0,0,3,0,2,0,7,57,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,124,"    public static final CharSequenceTranslator ESCAPE_HTML4 = 
",2,0,0,0,0,3,0,2,0,7,57,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,140,"    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();
",2,0,0,1,2,3,0,4,0,9,73,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,183,"    public static final CharSequenceTranslator UNESCAPE_JAVA = 
",2,0,0,0,0,3,0,2,0,7,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,206,"    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;
",4,0,0,0,0,3,0,2,0,9,79,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,217,"    public static final CharSequenceTranslator UNESCAPE_HTML3 = 
",2,0,0,0,0,3,0,2,0,7,59,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,233,"    public static final CharSequenceTranslator UNESCAPE_HTML4 = 
",2,0,0,0,0,3,0,2,0,7,59,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,250,"    public static final CharSequenceTranslator UNESCAPE_XML = 
",2,0,0,0,0,3,0,2,0,7,57,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,266,"    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();
",2,0,0,1,2,3,0,4,0,9,77,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,433,"        return ESCAPE_HTML4.translate(input);
",0,0,0,1,2,0,6,0,0,6,37,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,32,"public abstract class CharSequenceTranslator {
",2,0,0,0,1,2,0,0,0,4,46,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,54,"        if (input == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,58,"            StringWriter writer = new StringWriter(input.length() * 2);
",2,1,0,2,4,0,4,4,0,11,59,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,59,"            translate(input, writer);
",0,0,0,1,2,0,6,0,0,6,25,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,60,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,76,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,79,"        if (input == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,82,"        int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,83,"        int len = input.length();
",2,0,0,1,2,0,4,0,0,6,25,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,84,"        while (pos < len) {
",4,1,0,1,3,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,85,"            int consumed = translate(input, pos, out);
",2,0,0,1,2,0,8,0,0,10,42,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,86,"            if (consumed == 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,87,"                char[] c = Character.toChars(Character.codePointAt(input, pos));
",2,0,0,3,6,0,12,0,0,14,64,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,88,"                out.write(c);
",0,0,0,1,2,0,6,0,0,6,13,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,89,"                pos+= c.length;
",6,0,0,0,0,0,0,0,0,7,15,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,90,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,94,"            for (int pt = 0; pt < consumed; pt++) {
",8,1,0,1,3,0,0,0,0,10,39,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,95,"                pos += Character.charCount(Character.codePointAt(input, pos));
",2,0,0,2,4,0,12,0,0,15,62,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,97,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,108,"        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];
",6,1,0,2,4,0,0,4,0,11,87,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,109,"        newArray[0] = this;
",0,0,1,1,2,0,0,0,0,3,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);
",4,0,0,1,2,0,8,0,0,12,66,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,111,"        return new AggregateTranslator(newArray);
",2,0,0,1,2,0,0,2,0,4,41,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,40,"    public AggregateTranslator(CharSequenceTranslator... translators) {
",4,0,0,1,3,1,0,2,0,7,67,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,41,"        this.translators = ArrayUtils.clone(translators);
",2,0,0,1,2,0,6,0,0,9,49,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,42,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,51,"        for (CharSequenceTranslator translator : translators) {
",4,0,0,1,3,0,0,2,0,6,55,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,52,"            int consumed = translator.translate(input, index, out);
",2,0,0,1,2,0,10,0,0,12,55,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,53,"            if(consumed != 0) {
",2,1,0,1,3,0,0,0,0,3,19,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,54,"                return consumed;
",2,0,0,0,0,0,0,0,0,2,16,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,57,"        return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,145,"    static class CsvEscaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,56,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,149,"        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
",2,0,0,1,2,3,6,2,0,13,70,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,150,"        private static final char[] CSV_SEARCH_CHARS = 
",2,0,0,1,2,3,0,0,0,5,46,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,268,"    static class CsvUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,272,"        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
",2,0,0,1,2,3,6,2,0,13,70,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,273,"        private static final char[] CSV_SEARCH_CHARS = 
",2,0,0,1,2,3,0,0,0,5,46,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,53,"    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);
",2,0,0,1,2,3,6,2,0,13,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,63,"    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);
",2,0,0,1,2,3,6,2,0,13,94,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,68,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();
",2,0,0,1,2,3,0,12,0,17,101,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,70,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);
",4,0,0,1,2,0,4,2,0,10,53,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,71,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);
",4,0,0,1,2,0,4,2,0,10,47,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,72,"         primitiveWrapperMap.put(Character.TYPE, Character.class);
",4,0,0,1,2,0,4,2,0,10,57,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,73,"         primitiveWrapperMap.put(Short.TYPE, Short.class);
",4,0,0,1,2,0,4,2,0,10,49,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,74,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);
",4,0,0,1,2,0,4,2,0,10,53,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,75,"         primitiveWrapperMap.put(Long.TYPE, Long.class);
",4,0,0,1,2,0,4,2,0,10,47,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,76,"         primitiveWrapperMap.put(Double.TYPE, Double.class);
",4,0,0,1,2,0,4,2,0,10,51,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,77,"         primitiveWrapperMap.put(Float.TYPE, Float.class);
",4,0,0,1,2,0,4,2,0,10,49,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,78,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);
",8,0,0,1,2,0,4,0,0,12,46,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,84,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();
",2,0,0,1,2,3,0,12,0,17,101,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,86,"        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {
",2,0,0,2,5,0,4,2,0,8,62,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,87,"            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);
",2,0,0,1,2,0,6,2,0,10,64,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,88,"            if (!primitiveClass.equals(wrapperClass)) {
",0,0,0,2,5,0,6,0,0,7,43,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,89,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);
",0,0,0,1,2,0,8,0,0,8,54,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,91,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,97,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();
",2,0,0,1,2,3,0,12,0,17,89,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,102,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();
",2,0,0,1,2,3,0,12,0,17,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,119,"        addAbbreviation(""int"", ""I"");
",0,0,0,1,2,0,2,0,0,4,28,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,120,"        addAbbreviation(""boolean"", ""Z"");
",0,0,0,1,2,0,2,0,0,4,32,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,121,"        addAbbreviation(""float"", ""F"");
",0,0,0,1,2,0,2,0,0,4,30,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,122,"        addAbbreviation(""long"", ""J"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,123,"        addAbbreviation(""short"", ""S"");
",0,0,0,1,2,0,2,0,0,4,30,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,124,"        addAbbreviation(""byte"", ""B"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,125,"        addAbbreviation(""double"", ""D"");
",0,0,0,1,2,0,2,0,0,4,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,126,"        addAbbreviation(""char"", ""C"");
",0,0,0,1,2,0,2,0,0,4,29,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,127,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,111,"        abbreviationMap.put(primitive, abbreviation);
",0,0,0,1,2,0,8,0,0,8,45,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,112,"        reverseAbbreviationMap.put(abbreviation, primitive);
",0,0,0,1,2,0,8,0,0,8,52,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,113,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,589,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));
",4,0,0,2,4,0,10,0,0,14,90,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,620,"        if (toClass == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,624,"        if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,628,"        if (autoboxing) {
",2,0,0,1,3,0,0,0,0,2,17,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,629,"            if (cls.isPrimitive() && !toClass.isPrimitive()) {
",0,1,0,3,7,0,8,0,0,10,50,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,630,"                cls = primitiveToWrapper(cls);
",2,0,0,1,2,0,4,0,0,7,30,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,631,"                if (cls == null) {
",2,1,0,1,3,0,0,0,0,3,18,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,635,"            if (toClass.isPrimitive() && !cls.isPrimitive()) {
",0,1,0,3,7,0,8,0,0,10,50,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,642,"        if (cls.equals(toClass)) {
",0,0,0,2,5,0,6,0,0,6,26,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,645,"        if (cls.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,24,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,689,"        return toClass.isAssignableFrom(cls);
",0,0,0,1,2,0,6,0,0,6,37,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,705,"        Class<?> convertedClass = cls;
",4,0,0,0,0,0,0,2,0,6,30,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,706,"        if (cls != null && cls.isPrimitive()) {
",2,2,0,2,5,0,4,0,0,8,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,707,"            convertedClass = primitiveWrapperMap.get(cls);
",2,0,0,1,2,0,6,0,0,9,46,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,709,"        return convertedClass;
",2,0,0,0,0,0,0,0,0,2,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,49,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,53,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,57,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,61,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,65,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,69,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,73,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,77,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,81,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,85,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,89,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,93,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,97,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,101,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,105,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,109,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,113,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,117,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,121,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,320,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,323,"        return array.clone();
",0,0,0,1,2,0,4,0,0,4,21,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,65,"        return isAssignable(type, toType, null);
",0,0,0,1,2,0,6,0,0,7,40,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,79,"        if (toType == null || toType instanceof Class<?>) {
",4,2,0,1,3,0,0,2,0,8,51,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,80,"            return isAssignable(type, (Class<?>) toType);
",2,0,0,2,4,0,4,2,0,8,45,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,88,"            return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);
",2,0,0,2,4,0,6,2,0,10,69,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,113,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,115,"            return toClass == null || !toClass.isPrimitive();
",2,2,0,1,2,0,4,0,0,9,49,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,120,"        if (toClass == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,121,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,125,"        if (toClass.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,27,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,126,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,129,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,131,"            return ClassUtils.isAssignable((Class<?>) type, toClass);
",2,0,0,2,4,0,6,2,0,10,57,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,134,"        if (type instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,40,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,136,"            return isAssignable(getRawType((ParameterizedType) type), toClass);
",2,0,0,3,6,0,6,2,0,10,67,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,140,"        if (type instanceof TypeVariable<?>) {
",2,0,0,1,3,0,0,2,0,4,38,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,154,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,155,"            return toClass.equals(Object.class)
",0,0,0,1,2,0,4,2,0,6,35,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,193,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,211,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,262,"        if (type == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,268,"        if (toGenericArrayType == null) {
",2,1,0,1,3,0,0,0,0,3,33,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,273,"        if (toGenericArrayType.equals(type)) {
",0,0,0,2,5,0,6,0,0,6,38,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,274,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,277,"        Type toComponentType = toGenericArrayType.getGenericComponentType();
",2,0,0,1,2,0,4,2,0,8,68,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,279,"        if (type instanceof Class<?>) {
",2,0,0,1,3,0,0,2,0,4,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,280,"            Class<?> cls = (Class<?>) type;
",4,0,0,1,2,0,0,4,0,8,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,283,"            return cls.isArray()
",0,0,0,1,2,0,4,0,0,4,20,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,287,"        if (type instanceof GenericArrayType) {
",2,0,0,1,3,0,0,2,0,4,39,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,289,"            return isAssignable(((GenericArrayType) type).getGenericComponentType(),
",2,0,0,3,7,0,4,2,0,8,72,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,357,"            WildcardType wildcardType = (WildcardType) type;
",4,0,0,1,2,0,0,4,0,8,48,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,358,"            Type[] upperBounds = getImplicitUpperBounds(wildcardType);
",2,0,0,2,4,0,4,2,0,8,58,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,359,"            Type[] lowerBounds = getImplicitLowerBounds(wildcardType);
",2,0,0,2,4,0,4,2,0,8,58,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,361,"            for (Type toBound : toUpperBounds) {
",4,0,0,1,3,0,0,2,0,6,36,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,364,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);
",2,0,0,1,2,0,6,0,0,9,59,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,369,"                for (Type bound : upperBounds) {
",4,0,0,1,3,0,0,2,0,6,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,370,"                    if (!isAssignable(bound, toBound, typeVarAssigns)) {
",0,0,0,2,5,0,8,0,0,9,52,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,371,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,376,"            for (Type toBound : toLowerBounds) {
",4,0,0,1,3,0,0,2,0,6,36,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,379,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);
",2,0,0,1,2,0,6,0,0,9,59,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,384,"                for (Type bound : lowerBounds) {
",4,0,0,1,3,0,0,2,0,6,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,385,"                    if (!isAssignable(toBound, bound, typeVarAssigns)) {
",0,0,0,2,5,0,8,0,0,9,52,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,386,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,391,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,399,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,408,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,600,"        Class<?> cls = getRawType(parameterizedType);
",2,0,0,1,2,0,4,2,0,8,45,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,603,"        if (!isAssignable(cls, toClass)) {
",0,0,0,2,5,0,6,0,0,7,34,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,607,"        Type ownerType = parameterizedType.getOwnerType();
",2,0,0,1,2,0,4,2,0,8,50,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,610,"        if (ownerType instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,45,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,617,"            typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()
",4,1,0,1,2,0,0,6,0,13,81,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,622,"        Type[] typeArgs = parameterizedType.getActualTypeArguments();
",2,0,0,2,4,0,4,2,0,8,61,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,624,"        TypeVariable<?>[] typeParams = cls.getTypeParameters();
",2,0,0,2,4,0,4,2,0,8,55,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,627,"        for (int i = 0; i < typeParams.length; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,628,"            Type typeArg = typeArgs[i];
",2,0,1,1,2,0,0,2,0,8,27,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,629,"            typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns
",0,0,1,2,5,0,12,0,0,16,86,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,633,"        if (toClass.equals(cls)) {
",0,0,0,2,5,0,6,0,0,6,26,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,635,"            return typeVarAssigns;
",2,0,0,0,0,0,0,0,0,2,22,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,660,"            if (toClass.isPrimitive()) {
",0,0,0,2,5,0,4,0,0,4,28,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,667,"            cls = ClassUtils.primitiveToWrapper(cls);
",2,0,0,1,2,0,6,0,0,9,41,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,799,"        if (superClass.isInterface()) {
",0,0,0,2,5,0,4,0,0,4,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,801,"            Type[] interfaceTypes = cls.getGenericInterfaces();
",2,0,0,2,4,0,4,2,0,8,51,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,803,"            Type genericInterface = null;
",2,0,0,0,0,0,0,2,0,4,29,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,806,"            for (Type midType : interfaceTypes) {
",4,0,0,1,3,0,0,2,0,6,37,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,807,"                Class<?> midClass = null;
",2,0,0,0,0,0,0,2,0,4,25,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,809,"                if (midType instanceof ParameterizedType) {
",2,0,0,1,3,0,0,2,0,4,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,810,"                    midClass = getRawType((ParameterizedType) midType);
",4,0,0,2,4,0,2,2,0,9,51,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,820,"                if (isAssignable(midClass, superClass)
",0,0,0,1,3,0,6,0,0,6,38,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,822,"                    genericInterface = midType;
",4,0,0,0,0,0,0,0,0,5,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,827,"            if (genericInterface != null) {
",2,1,0,1,3,0,0,0,0,3,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,828,"                return genericInterface;
",2,0,0,0,0,0,0,0,0,2,24,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,986,"        Type rawType = parameterizedType.getRawType();
",2,0,0,1,2,0,4,2,0,8,46,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,993,"        if (!(rawType instanceof Class<?>)) {
",2,0,0,2,5,0,0,2,0,5,37,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,997,"        return (Class<?>) rawType;
",2,0,0,1,2,0,0,2,0,4,26,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,40,"    public LookupTranslator(CharSequence[]... lookup) {
",4,0,0,2,5,1,0,2,0,7,51,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();
",2,0,0,1,2,0,0,6,0,9,54,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,42,"        int _shortest = Integer.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,34,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,43,"        int _longest = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,44,"        if (lookup != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,45,"            for (CharSequence[] seq : lookup) {
",4,0,0,2,5,0,0,2,0,6,35,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,46,"                this.lookupMap.put(seq[0], seq[1]);
",2,0,1,3,6,0,2,0,0,8,35,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,47,"                int sz = seq[0].length();
",2,0,1,2,4,0,2,0,0,6,25,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,48,"                if (sz < _shortest) {
",4,1,0,1,3,0,0,0,0,5,21,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,49,"                    _shortest = sz;
",4,0,0,0,0,0,0,0,0,5,15,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,51,"                if (sz > _longest) {
",4,1,0,1,3,0,0,0,0,5,20,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,52,"                    _longest = sz;
",4,0,0,0,0,0,0,0,0,5,14,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,56,"        shortest = _shortest;
",4,0,0,0,0,0,0,0,0,5,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,57,"        longest = _longest;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,65,"        int max = longest;
",4,0,0,0,0,0,0,0,0,4,18,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,66,"        if (index + longest > input.length()) {
",4,2,0,2,5,0,4,0,0,10,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,70,"        for (int i = max; i >= shortest; i--) {
",10,1,0,1,3,0,0,0,0,12,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,71,"            CharSequence subSeq = input.subSequence(index, index + i);
",6,1,0,1,2,0,6,2,0,15,58,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,72,"            CharSequence result = lookupMap.get(subSeq);
",2,0,0,1,2,0,6,2,0,10,44,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,73,"            if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,74,"                out.write(result.toString());
",0,0,0,2,4,0,8,0,0,8,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,75,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,78,"        return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,29,"public abstract class CodePointTranslator extends CharSequenceTranslator {
",2,0,0,0,1,2,0,2,0,6,74,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,56,"    public NumericEntityUnescaper(OPTION... options) {
",4,0,0,1,3,1,0,2,0,7,50,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,57,"        if(options.length > 0) {
",4,1,0,1,3,0,0,0,0,5,24,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,60,"            this.options = EnumSet.copyOf(Arrays.asList(new OPTION[] { OPTION.semiColonRequired }));
",6,0,0,4,8,0,8,2,0,17,88,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,62,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,35,"    public static enum OPTION { semiColonRequired, semiColonOptional, errorIfNoSemiColon }
",8,0,0,1,2,2,0,0,0,10,86,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,51,"    private UnicodeEscaper(int below, int above, boolean between) {
",8,0,0,1,3,1,0,0,0,9,63,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,52,"        this.below = below;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,53,"        this.above = above;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,54,"        this.between = between;
",4,0,0,0,0,0,0,0,0,5,23,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,55,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);
",4,0,0,1,2,0,0,2,0,7,62,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,34,"public class OctalUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,60,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,36,"    private static int OCTAL_MAX = 377;
",2,0,0,0,0,2,0,0,0,4,35,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,35,"    private static final String[][] ISO8859_1_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,52,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,139,"    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,78,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,148,"    private static final String[][] HTML40_EXTENDED_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,350,"    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,359,"    private static final String[][] BASIC_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,48,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,371,"    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,378,"    private static final String[][] APOS_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,47,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,387,"    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,68,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,396,"    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {
",2,0,0,2,5,3,0,2,0,7,58,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,409,"    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);
",2,0,0,3,6,3,4,2,0,11,90,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,34,"    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,80,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,138,"    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,84,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,147,"    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,349,"    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,358,"    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,72,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,370,"    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,76,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,377,"    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,70,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,386,"    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,74,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,395,"    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,92,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,408,"    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,96,2,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,417,"        String[][] newarray = new String[array.length][2];
",6,0,0,4,8,0,0,4,0,10,50,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,418,"        for(int i = 0; i<array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,419,"            newarray[i][0] = array[i][1];
",0,0,1,4,8,0,0,0,0,9,29,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,420,"            newarray[i][1] = array[i][0];
",0,0,1,4,8,0,0,0,0,9,29,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,422,"        return newarray;
",2,0,0,0,0,0,0,0,0,2,16,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,30,"public class UnicodeUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,62,1,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,"            return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,521,"                            return f;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,"                            return d;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,"                    return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,560,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,564,"                    return createLong(str);
",0,0,0,1,2,0,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,572,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,574,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,575,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,"                        return f;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,"        return ESCAPE_XML.translate(input);
",0,0,0,1,2,0,6,0,0,6,35,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);
",10,0,0,1,2,0,0,4,0,14,77,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,"        String value = cTimeZoneDisplayCache.get(key);
",2,0,0,1,2,0,6,2,0,10,46,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);
",2,0,0,1,2,0,10,0,0,13,51,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);
",2,0,0,1,2,0,8,2,0,12,61,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,415,"            if (prior != null) {
",2,1,0,1,3,0,0,0,0,3,20,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,419,"        return value;
",2,0,0,0,0,0,0,0,0,2,13,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,"                if (tokenLen >= 4) {
",2,1,0,1,3,0,0,0,0,3,20,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);
",10,0,0,1,2,0,0,2,0,13,64,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,560,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1240,"            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);
",4,1,0,2,4,0,8,0,0,13,52,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1241,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1247,"            buffer.append((char)(value / 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1248,"            buffer.append((char)(value % 10 + '0'));
",2,2,0,3,6,0,4,0,0,9,40,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1249,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1484,"                           boolean daylight, int style, Locale locale) {
",6,0,0,0,2,0,0,2,0,8,45,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1485,"            mTimeZone = timeZone;
",4,0,0,0,0,0,0,0,0,5,21,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1486,"            if (daylight) {
",2,0,0,1,3,0,0,0,0,2,15,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1487,"                style |= 0x80000000;
",2,0,0,0,0,0,0,0,0,3,20,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1489,"            mStyle = style;
",4,0,0,0,0,0,0,0,0,5,15,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1490,"            mLocale = locale;
",4,0,0,0,0,0,0,0,0,5,17,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1491,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1498,"            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();
",2,4,0,3,6,0,8,0,0,14,71,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1387,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {
",8,0,0,1,3,0,0,4,0,12,63,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1388,"            mTimeZone = timeZone;
",4,0,0,0,0,0,0,0,0,5,21,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1390,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);
",2,0,0,1,2,0,8,0,0,12,63,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1391,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);
",2,0,0,1,2,0,8,0,0,12,62,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1392,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1398,"            return Math.max(mStandard.length(), mDaylight.length());
",0,0,0,3,6,0,12,0,0,12,56,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,"            int start = index + 2;
",4,1,0,0,0,0,0,0,0,5,22,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,"            boolean isHex = false;
",2,0,0,0,0,0,0,0,0,3,22,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,"            char firstChar = input.charAt(start);
",2,0,0,1,2,0,6,0,0,8,37,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");
",2,0,0,1,2,3,4,2,0,12,73,2,0.00926,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,"    private static final int[][] fields = {
",2,0,0,2,5,3,0,0,0,5,39,2,0.00926,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");
",0,0,0,1,2,0,0,2,0,3,66,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,"            numerator/=2; denominator/=2;
",4,0,0,0,0,0,0,0,0,6,29,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,"            if (numerator==Integer.MIN_VALUE ||
",6,2,0,0,1,0,0,0,0,8,35,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");
",0,0,0,1,2,0,0,2,0,3,56,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,"            numerator = -numerator;
",4,0,0,0,0,0,0,0,0,6,23,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,231,"            denominator = -denominator;
",4,0,0,0,0,0,0,0,0,6,27,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,475,"        if (numerator == 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,476,"            return equals(ZERO) ? this : ZERO;
",2,0,0,1,2,0,4,0,0,6,34,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
",2,0,0,2,4,0,10,0,0,12,66,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,479,"        if (gcd == 1) {
",2,1,0,1,3,0,0,0,0,3,15,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,480,"            return this;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,482,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);
",8,2,0,1,2,0,4,0,0,14,64,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');
",2,0,0,1,2,3,0,4,0,10,69,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,"    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');
",2,0,0,1,2,3,0,4,0,10,68,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,"    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');
",2,0,0,1,2,3,0,4,0,10,69,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());
",2,0,0,2,4,3,2,4,0,12,94,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,"    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();
",2,0,0,1,2,3,0,4,0,9,65,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,"    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');
",2,0,0,1,2,3,0,4,0,10,77,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');
",2,0,0,1,2,3,0,4,0,10,76,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());
",2,0,0,2,4,3,2,4,0,12,88,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,70,"    private static final StrMatcher NONE_MATCHER = new NoMatcher();
",2,0,0,1,2,3,0,4,0,9,63,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,108,"        return SPLIT_MATCHER;
",2,0,0,0,0,0,0,0,0,2,21,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,267,"        return isMatch(buffer, pos, 0, buffer.length);
",4,0,0,1,2,0,6,0,0,10,46,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,417,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,418,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,389,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,390,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,318,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,319,"            this.ch = ch;
",4,0,0,0,0,0,0,0,0,5,13,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,320,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,284,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,285,"            this.chars = chars.clone();
",2,0,0,1,2,0,4,0,0,7,27,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,286,"            Arrays.sort(this.chars);
",2,0,0,1,2,0,4,0,0,6,24,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,287,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,300,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;
",0,1,1,2,4,0,6,0,0,11,60,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,151,"        ArrayList<Format> foundFormats = new ArrayList<Format>();
",2,0,0,1,2,0,0,8,0,10,57,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,152,"        ArrayList<String> foundDescriptions = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,62,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,153,"        StringBuilder stripCustom = new StringBuilder(pattern.length());
",2,0,0,2,4,0,4,4,0,10,64,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,155,"        ParsePosition pos = new ParsePosition(0);
",2,0,0,1,2,0,0,4,0,6,41,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,156,"        char[] c = pattern.toCharArray();
",2,0,0,2,4,0,4,0,0,6,33,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,157,"        int fmtCount = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,158,"        while (pos.getIndex() < pattern.length()) {
",0,1,0,3,7,0,8,0,0,9,43,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,159,"            switch (c[pos.getIndex()]) {
",0,0,1,3,7,0,4,0,0,6,28,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,164,"                fmtCount++;
",2,0,0,0,0,0,0,0,0,3,11,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,165,"                seekNonWs(pattern, pos);
",0,0,0,1,2,0,6,0,0,6,24,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,166,"                int start = pos.getIndex();
",2,0,0,1,2,0,4,0,0,6,27,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,167,"                int index = readArgumentIndex(pattern, next(pos));
",2,0,0,2,4,0,8,0,0,10,50,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,168,"                stripCustom.append(START_FE).append(index);
",0,0,0,2,4,0,10,0,0,10,43,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,169,"                seekNonWs(pattern, pos);
",0,0,0,1,2,0,6,0,0,6,24,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,170,"                Format format = null;
",2,0,0,0,0,0,0,2,0,4,21,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,171,"                String formatDescription = null;
",2,0,0,0,0,0,0,2,0,4,32,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,172,"                if (c[pos.getIndex()] == START_FMT) {
",2,1,1,3,7,0,4,0,0,9,37,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,173,"                    formatDescription = parseFormatDescription(pattern,
",2,0,0,0,1,0,4,0,0,7,51,9,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,175,"                    format = getFormat(formatDescription);
",2,0,0,1,2,0,4,0,0,7,38,9,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,176,"                    if (format == null) {
",2,1,0,1,3,0,0,0,0,3,21,9,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,180,"                foundFormats.add(format);
",0,0,0,1,2,0,6,0,0,6,25,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,181,"                foundDescriptions.add(format == null ? null : formatDescription);
",4,1,0,1,2,0,4,0,0,9,65,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,182,"                Validate.isTrue(foundFormats.size() == fmtCount);
",2,1,0,2,4,0,8,0,0,11,49,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,183,"                Validate.isTrue(foundDescriptions.size() == fmtCount);
",2,1,0,2,4,0,8,0,0,11,54,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,184,"                if (c[pos.getIndex()] != END_FE) {
",2,1,1,3,7,0,4,0,0,9,34,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,190,"                stripCustom.append(c[pos.getIndex()]);
",0,0,1,3,6,0,8,0,0,10,38,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,191,"                next(pos);
",0,0,0,1,2,0,4,0,0,4,10,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,194,"        super.applyPattern(stripCustom.toString());
",2,0,0,2,4,0,4,0,0,6,43,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,195,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);
",4,0,0,2,4,0,4,0,0,9,64,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,196,"        if (containsElements(foundFormats)) {
",0,0,0,2,5,0,4,0,0,4,37,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,197,"            Format[] origFormats = getFormats();
",2,0,0,2,4,0,2,2,0,6,36,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,200,"            int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,201,"            for (Iterator<Format> it = foundFormats.iterator(); it.hasNext(); i++) {
",4,0,0,3,7,0,8,4,0,17,72,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,202,"                Format f = it.next();
",2,0,0,1,2,0,4,2,0,8,21,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,203,"                if (f != null) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,204,"                    origFormats[i] = f;
",2,0,1,1,2,0,0,0,0,7,19,10,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,207,"            super.setFormats(origFormats);
",4,0,0,1,2,0,0,0,0,4,30,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,209,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,"        if (registry != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,"            String name = desc;
",4,0,0,0,0,0,0,2,0,6,19,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,279,"            String args = null;
",2,0,0,0,0,0,0,2,0,4,19,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,280,"            int i = desc.indexOf(START_FMT);
",2,0,0,1,2,0,6,0,0,8,32,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,281,"            if (i > 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,285,"            FormatFactory factory = registry.get(name);
",2,0,0,1,2,0,6,2,0,10,43,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,286,"            if (factory != null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,287,"                return factory.getFormat(name, args, getLocale());
",0,0,0,2,4,0,10,0,0,10,50,9,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,301,"        int start = pos.getIndex();
",2,0,0,1,2,0,4,0,0,6,27,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,302,"        seekNonWs(pattern, pos);
",0,0,0,1,2,0,6,0,0,6,24,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,303,"        StringBuffer result = new StringBuffer();
",2,0,0,1,2,0,0,4,0,6,41,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,304,"        boolean error = false;
",2,0,0,0,0,0,0,0,0,3,22,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,305,"        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {
",2,2,0,4,9,0,12,0,0,17,64,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,306,"            char c = pattern.charAt(pos.getIndex());
",2,0,0,2,4,0,8,0,0,10,40,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,307,"            if (Character.isWhitespace(c)) {
",0,0,0,2,5,0,6,0,0,6,32,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,315,"            if ((c == START_FMT || c == END_FE) && result.length() > 0) {
",8,5,0,3,7,0,4,0,0,17,61,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,317,"                    return Integer.parseInt(result.toString());
",0,0,0,2,4,0,8,0,0,8,43,11,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,323,"            error = !Character.isDigit(c);
",2,0,0,1,2,0,6,0,0,10,30,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,324,"            result.append(c);
",0,0,0,1,2,0,6,0,0,6,17,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,343,"        int start = pos.getIndex();
",2,0,0,1,2,0,4,0,0,6,27,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,344,"        seekNonWs(pattern, pos);
",0,0,0,1,2,0,6,0,0,6,24,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,345,"        int text = pos.getIndex();
",2,0,0,1,2,0,4,0,0,6,26,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,346,"        int depth = 1;
",2,0,0,0,0,0,0,0,0,2,14,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,347,"        for (; pos.getIndex() < pattern.length(); next(pos)) {
",0,1,0,4,9,0,12,0,0,13,54,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,348,"            switch (pattern.charAt(pos.getIndex())) {
",0,0,0,3,7,0,8,0,0,8,41,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,353,"                depth--;
",2,0,0,0,0,0,0,0,0,3,8,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,354,"                if (depth == 0) {
",2,1,0,1,3,0,0,0,0,3,17,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,355,"                    return pattern.substring(text, pos.getIndex());
",0,0,0,2,4,0,10,0,0,10,47,10,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,375,"        if (!containsElements(customPatterns)) {
",0,0,0,2,5,0,4,0,0,5,40,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,378,"        StringBuilder sb = new StringBuilder(pattern.length() * 2);
",2,1,0,2,4,0,4,4,0,11,59,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,379,"        ParsePosition pos = new ParsePosition(0);
",2,0,0,1,2,0,0,4,0,6,41,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,380,"        int fe = -1;
",2,0,0,0,0,0,0,0,0,3,12,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,381,"        int depth = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,382,"        while (pos.getIndex() < pattern.length()) {
",0,1,0,3,7,0,8,0,0,9,43,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,383,"            char c = pattern.charAt(pos.getIndex());
",2,0,0,2,4,0,8,0,0,10,40,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,384,"            switch (c) {
",2,0,0,1,3,0,0,0,0,2,12,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,389,"                depth++;
",2,0,0,0,0,0,0,0,0,3,8,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,390,"                if (depth == 1) {
",2,1,0,1,3,0,0,0,0,3,17,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,391,"                    fe++;
",2,0,0,0,0,0,0,0,0,3,5,9,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,392,"                    sb.append(START_FE).append(
",0,0,0,1,3,0,8,0,0,8,27,10,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,394,"                    String customPattern = customPatterns.get(fe);
",2,0,0,1,2,0,6,2,0,10,46,9,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,395,"                    if (customPattern != null) {
",2,1,0,1,3,0,0,0,0,3,28,9,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,396,"                        sb.append(START_FMT).append(customPattern);
",0,0,0,2,4,0,10,0,0,10,43,12,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,398,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,401,"                depth--;
",2,0,0,0,0,0,0,0,0,3,8,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,404,"                sb.append(c);
",0,0,0,1,2,0,6,0,0,6,13,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,405,"                next(pos);
",0,0,0,1,2,0,4,0,0,4,10,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,407,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,408,"        return sb.toString();
",0,0,0,1,2,0,4,0,0,4,21,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,418,"        int len = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,419,"        char[] buffer = pattern.toCharArray();
",2,0,0,2,4,0,4,0,0,6,38,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,421,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());
",2,0,0,3,6,0,12,0,0,15,64,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,422,"            pos.setIndex(pos.getIndex() + len);
",2,1,0,2,4,0,8,0,0,11,35,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,423,"        } while (len > 0 && pos.getIndex() < pattern.length());
",2,3,0,3,7,0,8,0,0,13,55,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,424,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,433,"        pos.setIndex(pos.getIndex() + 1);
",0,1,0,2,4,0,8,0,0,9,33,5,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,434,"        return pos;
",2,0,0,0,0,0,0,0,0,2,11,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,495,"        if (coll == null || coll.size() == 0) {
",2,3,0,2,5,0,4,0,0,9,39,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,498,"        for (Iterator<?> iter = coll.iterator(); iter.hasNext();) {
",2,0,0,3,7,0,8,2,0,12,59,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,499,"            if (iter.next() != null) {
",0,1,0,2,5,0,4,0,0,5,26,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,500,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.25000,0
defect4j,lang,org/apache/commons/lang3/Validate,23,176,"        if (expression == false) {
",2,1,0,1,3,0,0,0,0,4,26,4,0.25000,0
defect4j,lang,org/apache/commons/lang3/Validate,23,179,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,"            return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,"                if (expPos < decPos || expPos > str.length()) {
",6,3,0,2,5,0,4,0,0,13,47,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,"                            return f;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,"                            return d;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,"                        return createBigDecimal(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,"                    return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,"                    return createLong(str);
",0,0,0,1,2,0,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,"                return createBigInteger(str);
",0,0,0,1,2,0,4,0,0,4,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,"                        return f;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,240,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,30,"    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }
",2,0,0,5,10,2,4,2,0,10,80,2,0.05000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,"            buffer.append(mValues[calendar.get(mField)]);
",0,0,1,3,6,0,10,0,0,12,45,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,"            buffer.append(mValue);
",0,0,0,1,2,0,6,0,0,6,22,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,"            return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,"                if (expPos < decPos) {
",4,1,0,1,3,0,0,0,0,5,22,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,"                            return f;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,"                            return d;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,"                        return createBigDecimal(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,"                    return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,"                    return createLong(str);
",0,0,0,1,2,0,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,"                return createBigInteger(str);
",0,0,0,1,2,0,4,0,0,4,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,"                        return f;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
",2,0,0,3,6,0,14,0,0,17,77,10,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,"                out.write(entityValue);
",0,0,0,1,2,0,6,0,0,6,23,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,"            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
",6,2,0,2,4,0,0,0,0,8,47,6,0.50000,1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,"            return ArrayUtils.EMPTY_INT_ARRAY;
",4,0,0,0,0,0,0,0,0,4,34,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,10,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,"        if (array == null || array.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,"		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,"		int csLength = cs.length();
",2,0,0,1,2,0,4,0,0,6,27,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,"		int searchLength = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,38,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,"		for (int i = 0; i < csLength; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,"			char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,"			for (int j = 0; j < searchLength; j++) {
",8,1,0,1,3,0,0,0,0,10,40,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,"				if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,"						return true;
",0,0,0,0,0,0,0,0,0,1,12,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);
",0,0,0,1,2,0,4,0,0,6,61,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,"    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,"    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,"    public static final String[] EMPTY_STRING_ARRAY = new String[0];
",2,0,0,2,4,3,0,4,0,9,64,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,"    public static final long[] EMPTY_LONG_ARRAY = new long[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,"    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,"    public static final int[] EMPTY_INT_ARRAY = new int[0];
",2,0,0,2,4,3,0,0,0,5,55,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,"    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,"    public static final short[] EMPTY_SHORT_ARRAY = new short[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,"    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,"    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,"    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
",2,0,0,2,4,3,0,4,0,9,65,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,"    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
",2,0,0,2,4,3,0,0,0,5,64,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,"    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
",2,0,0,2,4,3,0,4,0,9,71,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,"    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
",2,0,0,2,4,3,0,0,0,5,61,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,"    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
",2,0,0,2,4,3,0,4,0,9,68,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,"    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
",2,0,0,2,4,3,0,0,0,5,67,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,"    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
",2,0,0,2,4,3,0,4,0,9,74,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,"    public static final char[] EMPTY_CHAR_ARRAY = new char[0];
",2,0,0,2,4,3,0,0,0,5,58,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,"    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
",2,0,0,2,4,3,0,4,0,9,80,2,0.02500,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,"        return ReflectionToStringBuilder.toString(object);
",0,0,0,1,2,0,6,0,0,6,50,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);
",0,0,0,1,2,0,4,0,0,7,50,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);
",6,0,0,1,2,0,0,0,0,6,29,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,"        this.setUpToClass(reflectUpToClass);
",0,0,0,1,2,0,4,0,0,4,36,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,"        this.setAppendTransients(outputTransients);
",0,0,0,1,2,0,4,0,0,4,43,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,"        this.setAppendStatics(outputStatics);
",0,0,0,1,2,0,4,0,0,4,37,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)
",10,0,0,1,2,0,0,2,0,13,108,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,"        this.appendStatics = appendStatics;
",4,0,0,0,0,0,0,0,0,5,35,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,"        this.appendTransients = appendTransients;
",4,0,0,0,0,0,0,0,0,5,41,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,923,"        buffer.append(arrayStart);
",0,0,0,1,2,0,6,0,0,6,26,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,924,"        int length = Array.getLength(array);
",2,0,0,1,2,0,6,0,0,8,36,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,925,"        for (int i = 0; i < length; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,926,"            Object item = Array.get(array, i);
",2,0,0,1,2,0,8,2,0,12,34,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,927,"            if (i > 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,930,"            if (item == null) {
",2,1,0,1,3,0,0,0,0,3,19,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,934,"                appendInternal(buffer, fieldName, item, arrayContentDetail);
",0,0,0,1,2,0,10,0,0,10,60,9,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,937,"        buffer.append(arrayEnd);
",0,0,0,1,2,0,6,0,0,6,24,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,938,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,527,"            this.reflectionAppendArray(this.getObject());
",0,0,0,2,4,0,4,0,0,4,45,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,528,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,622,"        this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);
",0,0,0,3,6,0,8,0,0,8,81,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,623,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,683,"        this.upToClass = clazz;
",4,0,0,0,0,0,0,0,0,5,23,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,684,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,677,"        if (clazz != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1045,"        return style;
",2,0,0,0,0,0,0,0,0,2,13,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,701,"            clazz = clazz.getSuperclass();
",2,0,0,1,2,0,4,0,0,7,30,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,702,"            this.appendFieldsIn(clazz);
",0,0,0,1,2,0,4,0,0,4,27,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,928,"                buffer.append(arraySeparator);
",0,0,0,1,2,0,6,0,0,6,30,9,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,526,"        if (clazz.isArray()) {
",0,0,0,2,5,0,4,0,0,4,22,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,530,"        Field[] fields = clazz.getDeclaredFields();
",2,0,0,2,4,0,4,2,0,8,43,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,531,"        AccessibleObject.setAccessible(fields, true);
",0,0,0,1,2,0,6,0,0,7,45,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,532,"        for (Field field : fields) {
",4,0,0,1,3,0,0,2,0,6,28,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,549,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,566,"        return this.upToClass;
",2,0,0,0,0,0,0,0,0,2,22,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,698,"        Class<?> clazz = this.getObject().getClass();
",2,0,0,2,4,0,4,2,0,8,45,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,699,"        this.appendFieldsIn(clazz);
",0,0,0,1,2,0,4,0,0,4,27,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,700,"        while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {
",2,3,0,3,7,0,6,0,0,11,71,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,704,"        return super.toString();
",2,0,0,1,2,0,0,0,0,2,24,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,695,"        if (this.getObject() == null) {
",0,1,0,2,5,0,2,0,0,3,31,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,372,"    private boolean appendStatics = false;
",2,0,0,0,0,1,0,0,0,4,38,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,377,"    private boolean appendTransients = false;
",2,0,0,0,0,1,0,0,0,4,41,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,387,"    private Class<?> upToClass = null;
",2,0,0,0,0,1,0,2,0,5,34,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,413,"                    match = false;
",2,0,0,0,0,0,0,0,0,4,14,10,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,414,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1455,"                buffer.append(object.getClass().getName());
",0,0,0,3,6,0,10,0,0,10,43,9,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1468,"            register(object);
",0,0,0,1,2,0,4,0,0,4,17,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1469,"            buffer.append('@');
",0,0,0,1,2,0,4,0,0,5,19,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1470,"            buffer.append(Integer.toHexString(System.identityHashCode(object)));
",0,0,0,3,6,0,14,0,0,14,68,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,148,"        return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();
",0,1,0,3,6,0,12,4,0,17,88,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,163,"        Map<Object, Object> m = getRegistry();
",2,0,0,1,2,0,2,6,0,10,38,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,164,"        return m.containsKey(value);
",0,0,0,1,2,0,6,0,0,6,28,5,1,1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,469,"        if (isRegistered(value)
",0,0,0,1,3,0,4,0,0,4,23,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1451,"            register(object);
",0,0,0,1,2,0,4,0,0,4,17,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1452,"            if (useShortClassName) {
",2,0,0,1,3,0,0,0,0,2,24,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,256,"            style = getDefaultStyle();
",2,0,0,1,2,0,2,0,0,5,26,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,120,"        return defaultStyle;
",2,0,0,0,0,0,0,0,0,2,20,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,208,"                    m.remove(value);
",0,0,0,1,2,0,6,0,0,6,16,11,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,209,"                    if (m.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,18,11,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,210,"                        REGISTRY.remove();
",0,0,0,1,2,0,4,0,0,4,18,13,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,410,"            boolean match = true;
",2,0,0,0,0,0,0,0,0,3,21,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,411,"            for (int i = 0; i < sepLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,412,"                if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {
",8,3,0,3,7,0,8,0,0,19,74,8,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,417,"            if (match) {
",2,0,0,1,3,0,0,0,0,2,12,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,203,"        if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,205,"            synchronized (ToStringStyle.class) {
",0,0,0,1,3,0,0,2,0,2,36,8,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,206,"                m = REGISTRY.get();
",2,0,0,1,2,0,4,0,0,7,19,8,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,207,"                if (m != null) {
",2,1,0,1,3,0,0,0,0,3,16,8,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,213,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,215,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,393,"        if (this.fieldSeparatorAtEnd == false) {
",2,1,0,1,3,0,0,0,0,4,40,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,394,"            removeLastFieldSeparator(buffer);
",0,0,0,1,2,0,4,0,0,4,33,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,396,"        appendContentEnd(buffer);
",0,0,0,1,2,0,4,0,0,4,25,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,397,"        unregister(object);
",0,0,0,1,2,0,4,0,0,4,19,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,398,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,407,"        int len = buffer.length();
",2,0,0,1,2,0,4,0,0,6,26,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,408,"        int sepLen = fieldSeparator.length();
",2,0,0,1,2,0,4,0,0,6,37,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,409,"        if (len > 0 && sepLen > 0 && len >= sepLen) {
",8,5,0,1,3,0,0,0,0,13,45,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,421,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1489,"        buffer.append(contentEnd);
",0,0,0,1,2,0,6,0,0,6,26,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1490,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1063,"            style.appendEnd(this.getStringBuffer(), this.getObject());
",0,0,0,3,6,0,8,0,0,8,58,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,177,"        if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,179,"            synchronized (ToStringStyle.class) {
",0,0,0,1,3,0,0,2,0,2,36,8,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,180,"                m = REGISTRY.get();
",2,0,0,1,2,0,4,0,0,7,19,8,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,181,"                if (m == null) {
",2,1,0,1,3,0,0,0,0,3,16,8,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,182,"                    m = new WeakHashMap<Object, Object>();
",2,0,0,1,2,0,0,6,0,9,38,10,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,183,"                    REGISTRY.set(m);
",0,0,0,1,2,0,6,0,0,6,16,11,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,185,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,186,"            m.put(value, null);
",0,0,0,1,2,0,6,0,0,6,19,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,188,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1033,"        return buffer;
",2,0,0,0,0,0,0,0,0,2,14,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1060,"        if (this.getObject() == null) {
",0,1,0,2,5,0,2,0,0,3,31,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1065,"        return this.getStringBuffer().toString();
",0,0,0,2,4,0,4,0,0,4,41,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,376,"            appendClassName(buffer, object);
",0,0,0,1,2,0,6,0,0,6,32,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,377,"            appendIdentityHashCode(buffer, object);
",0,0,0,1,2,0,6,0,0,6,39,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,378,"            appendContentStart(buffer);
",0,0,0,1,2,0,4,0,0,4,27,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,379,"            if (fieldSeparatorAtStart) {
",2,0,0,1,3,0,0,0,0,2,28,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1450,"        if (useClassName && object != null) {
",4,2,0,1,3,0,0,0,0,6,37,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1458,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1467,"        if (this.isUseIdentityHashCode() && object!=null) {
",2,2,0,2,5,0,2,0,0,6,51,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1472,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1480,"        buffer.append(contentStart);
",0,0,0,1,2,0,6,0,0,6,28,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1481,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1644,"        return useIdentityHashCode;
",2,0,0,0,0,0,0,0,0,2,27,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,475,"        register(value);
",0,0,0,1,2,0,4,0,0,4,16,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,478,"            if (value instanceof Collection<?>) {
",2,0,0,1,3,0,0,2,0,4,37,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,485,"            } else if (value instanceof Map<?, ?>) {
",2,0,0,1,4,0,0,2,0,4,40,8,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,492,"            } else if (value instanceof long[]) {
",2,0,0,2,6,0,0,0,0,2,37,9,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,563,"            unregister(value);
",0,0,0,1,2,0,4,0,0,4,18,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,564,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,565,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,375,"        if (object != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,383,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,254,"    public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {
",8,0,0,1,3,1,0,6,0,15,81,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,255,"        if (style == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,258,"        if (buffer == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,259,"            buffer = new StringBuffer(512);
",2,0,0,1,2,0,0,2,0,5,31,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,261,"        this.buffer = buffer;
",4,0,0,0,0,0,0,0,0,5,21,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,262,"        this.style = style;
",4,0,0,0,0,0,0,0,0,5,19,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,263,"        this.object = object;
",4,0,0,0,0,0,0,0,0,5,21,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,265,"        style.appendStart(buffer, object);
",0,0,0,1,2,0,8,0,0,8,34,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,266,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1024,"        return object;
",2,0,0,0,0,0,0,0,0,2,14,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,499,"            } else if (value instanceof int[]) {
",2,0,0,2,6,0,0,0,0,2,36,10,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,97,"    private static volatile ToStringStyle defaultStyle = ToStringStyle.DEFAULT_STYLE;
",6,0,0,0,0,3,0,2,0,11,81,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,506,"            } else if (value instanceof short[]) {
",2,0,0,2,6,0,0,0,0,2,38,11,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,291,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,307,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,360,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,377,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,394,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,411,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,428,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = 
",2,0,0,0,0,3,0,2,0,7,64,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,445,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,461,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,477,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,495,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,512,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,529,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,546,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,563,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,580,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,597,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,614,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,630,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,646,"    public static final String OS_NAME = getSystemProperty(""os.name"");
",2,0,0,1,2,3,2,2,0,10,66,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,662,"    public static final String OS_VERSION = getSystemProperty(""os.version"");
",2,0,0,1,2,3,2,2,0,10,72,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,679,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,698,"    public static final String USER_COUNTRY = 
",2,0,0,0,0,3,0,2,0,7,41,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,717,"    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);
",2,0,0,1,2,3,4,2,0,11,70,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,733,"    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,751,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");
",2,0,0,1,2,3,2,2,0,10,78,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,767,"    public static final String USER_NAME = getSystemProperty(""user.name"");
",2,0,0,1,2,3,2,2,0,10,70,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,784,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");
",2,0,0,1,2,3,2,2,0,10,78,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,798,"    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();
",2,0,0,1,2,3,2,2,0,9,74,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,818,"    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();
",2,0,0,1,2,3,2,0,0,7,71,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,833,"    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();
",2,0,0,1,2,3,2,0,0,7,65,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,846,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");
",2,0,0,1,2,3,2,0,0,8,71,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,854,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");
",2,0,0,1,2,3,2,0,0,8,71,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");
",2,0,0,1,2,3,2,0,0,8,71,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");
",2,0,0,1,2,3,2,0,0,8,71,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");
",2,0,0,1,2,3,2,0,0,8,71,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");
",2,0,0,1,2,3,2,0,0,8,71,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,896,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");
",2,0,0,1,2,3,2,0,0,8,71,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,914,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");
",2,0,0,1,2,3,2,0,0,8,60,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,924,"    public static final boolean IS_OS_HP_UX = getOSMatches(""HP-UX"");
",2,0,0,1,2,3,2,0,0,8,64,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,934,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");
",2,0,0,1,2,3,2,0,0,8,62,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,944,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");
",2,1,0,2,4,3,4,0,0,12,89,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,954,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");
",2,0,0,1,2,3,2,0,0,8,60,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,964,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");
",2,0,0,1,2,3,2,0,0,8,69,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,974,"    public static final boolean IS_OS_OS2 = getOSMatches(""OS/2"");
",2,0,0,1,2,3,2,0,0,8,61,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,984,"    public static final boolean IS_OS_SOLARIS = getOSMatches(""Solaris"");
",2,0,0,1,2,3,2,0,0,8,68,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,994,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");
",2,0,0,1,2,3,2,0,0,8,65,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1005,"    public static final boolean IS_OS_UNIX =
",2,0,0,0,0,3,0,0,0,5,40,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1017,"    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);
",2,0,0,1,2,3,4,0,0,9,81,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1027,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");
",2,0,0,1,2,3,4,0,0,10,93,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1037,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");
",4,1,0,1,2,3,2,0,0,12,98,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1048,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");
",4,1,0,1,2,3,2,0,0,12,98,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1059,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");
",2,0,0,1,2,3,4,0,0,10,91,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1070,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" NT"");
",4,1,0,1,2,3,2,0,0,11,92,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1081,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");
",2,0,0,1,2,3,4,0,0,10,91,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1092,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0""); 
",2,0,0,1,2,3,4,0,0,10,94,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1102,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1""); 
",2,0,0,1,2,3,4,0,0,10,90,2,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1133,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1136,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);
",2,0,0,1,2,0,4,2,0,8,50,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1137,"        if (JAVA_VERSION_TRIMMED.length() >= 5) {
",0,1,0,2,5,0,4,0,0,5,41,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1138,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);
",4,1,0,1,2,0,4,0,0,10,49,6,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1141,"            return Float.parseFloat(str);
",0,0,0,1,2,0,6,0,0,6,29,7,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1162,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1165,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);
",2,0,0,1,2,0,4,2,0,8,50,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1166,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);
",4,1,0,1,2,0,4,0,0,10,49,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1167,"        if (JAVA_VERSION_TRIMMED.length() >= 5) {
",0,1,0,2,5,0,4,0,0,5,41,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1168,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);
",4,1,0,1,2,0,4,0,0,10,49,6,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1173,"            return Integer.parseInt(str);
",0,0,0,1,2,0,6,0,0,6,29,7,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1185,"        if (JAVA_VERSION != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1186,"            for (int i = 0; i < JAVA_VERSION.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,49,6,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1187,"                char ch = JAVA_VERSION.charAt(i);
",2,0,0,1,2,0,6,0,0,8,33,9,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1188,"                if (ch >= '0' && ch <= '9') {
",4,3,0,1,3,0,0,0,0,9,29,8,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1189,"                    return JAVA_VERSION.substring(i);
",0,0,0,1,2,0,6,0,0,6,33,11,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1203,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1206,"        return JAVA_VERSION_TRIMMED.startsWith(versionPrefix);
",0,0,0,1,2,0,6,0,0,6,54,5,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1216,"        if (OS_NAME == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1219,"        return OS_NAME.startsWith(osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,40,5,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1230,"        if (OS_NAME == null || OS_VERSION == null) {
",4,3,0,1,3,0,0,0,0,7,44,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1233,"        return OS_NAME.startsWith(osNamePrefix) && OS_VERSION.startsWith(osVersionPrefix);
",0,1,0,2,4,0,12,0,0,13,82,4,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,34,1249,"            return System.getProperty(property);
",0,0,0,1,2,0,6,0,0,6,36,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2192,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2193,"            this.setUseShortClassName(true);
",0,0,0,1,2,0,2,0,0,3,32,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2194,"            this.setUseIdentityHashCode(false);
",0,0,0,1,2,0,2,0,0,3,35,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2195,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,324,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,220,"    private boolean useFieldNames = true;
",2,0,0,0,0,1,0,0,0,4,37,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,225,"    private boolean useClassName = true;
",2,0,0,0,0,1,0,0,0,4,36,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,230,"    private boolean useShortClassName = false;
",2,0,0,0,0,1,0,0,0,4,42,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,235,"    private boolean useIdentityHashCode = true;
",2,0,0,0,0,1,0,0,0,4,43,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,240,"    private String contentStart = ""["";
",2,0,0,0,1,1,0,2,0,6,34,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,245,"    private String contentEnd = ""]"";
",2,0,0,0,1,1,0,2,0,6,32,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,250,"    private String fieldNameValueSeparator = ""="";
",2,0,0,0,0,1,0,2,0,6,45,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,255,"    private boolean fieldSeparatorAtStart = false;
",2,0,0,0,0,1,0,0,0,4,46,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,260,"    private boolean fieldSeparatorAtEnd = false;
",2,0,0,0,0,1,0,0,0,4,44,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,265,"    private String fieldSeparator = "","";
",2,0,0,0,0,1,0,2,0,6,36,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,270,"    private String arrayStart = ""{"";
",2,0,0,0,1,1,0,2,0,6,32,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,275,"    private String arraySeparator = "","";
",2,0,0,0,0,1,0,2,0,6,36,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,280,"    private boolean arrayContentDetail = true;
",2,0,0,0,0,1,0,0,0,4,42,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,285,"    private String arrayEnd = ""}"";
",2,0,0,0,1,1,0,2,0,6,30,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,291,"    private boolean defaultFullDetail = true;
",2,0,0,0,0,1,0,0,0,4,41,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,296,"    private String nullText = ""<null>"";
",2,0,0,0,0,1,0,2,0,6,35,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,301,"    private String sizeStartText = ""<size="";
",2,0,0,0,0,1,0,2,0,6,40,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,306,"    private String sizeEndText = "">"";
",2,0,0,0,0,1,0,2,0,6,33,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,311,"    private String summaryObjectStartText = ""<"";
",2,0,0,0,0,1,0,2,0,6,44,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,316,"    private String summaryObjectEndText = "">"";
",2,0,0,0,0,1,0,2,0,6,42,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,325,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,82,"    public static final ToStringStyle DEFAULT_STYLE = new DefaultToStringStyle();
",2,0,0,1,2,3,0,4,0,9,77,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,96,"    public static final ToStringStyle MULTI_LINE_STYLE = new MultiLineToStringStyle();
",2,0,0,1,2,3,0,4,0,9,82,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,107,"    public static final ToStringStyle NO_FIELD_NAMES_STYLE = new NoFieldNameToStringStyle();
",2,0,0,1,2,3,0,4,0,9,88,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,119,"    public static final ToStringStyle SHORT_PREFIX_STYLE = new ShortPrefixToStringStyle();
",2,0,0,1,2,3,0,4,0,9,86,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,129,"    public static final ToStringStyle SIMPLE_STYLE = new SimpleToStringStyle();
",2,0,0,1,2,3,0,4,0,9,75,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,137,"    private static final ThreadLocal<WeakHashMap<Object, Object>> REGISTRY = new ThreadLocal<WeakHashMap<Object,Object>>();
",2,0,0,1,2,3,0,16,0,21,119,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1611,"        this.useClassName = useClassName;
",4,0,0,0,0,0,0,0,0,5,33,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1612,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1633,"        this.useShortClassName = useShortClassName;
",4,0,0,0,0,0,0,0,0,5,43,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1634,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1653,"        this.useIdentityHashCode = useIdentityHashCode;
",4,0,0,0,0,0,0,0,0,5,47,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1654,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1673,"        this.useFieldNames = useFieldNames;
",4,0,0,0,0,0,0,0,0,5,35,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1674,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1816,"        if (contentStart == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1819,"        this.contentStart = contentStart;
",4,0,0,0,0,0,0,0,0,5,33,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1820,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1842,"        if (contentEnd == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1845,"        this.contentEnd = contentEnd;
",4,0,0,0,0,0,0,0,0,5,29,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1846,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1894,"        if (fieldSeparator == null) {
",2,1,0,1,3,0,0,0,0,3,29,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1897,"        this.fieldSeparator = fieldSeparator;
",4,0,0,0,0,0,0,0,0,5,37,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1898,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1921,"        this.fieldSeparatorAtStart = fieldSeparatorAtStart;
",4,0,0,0,0,0,0,0,0,5,51,4,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1922,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2125,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2126,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2260,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2261,"            this.setContentStart(""["");
",0,0,0,1,3,0,2,0,0,3,26,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2262,"            this.setFieldSeparator(SystemUtils.LINE_SEPARATOR + ""  "");
",4,1,0,1,2,0,2,0,0,8,58,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2263,"            this.setFieldSeparatorAtStart(true);
",0,0,0,1,2,0,2,0,0,3,36,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2264,"            this.setContentEnd(SystemUtils.LINE_SEPARATOR + ""]"");
",4,1,0,1,3,0,2,0,0,8,53,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2265,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2158,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2159,"            this.setUseFieldNames(false);
",0,0,0,1,2,0,2,0,0,3,29,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2160,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2224,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2225,"            this.setUseClassName(false);
",0,0,0,1,2,0,2,0,0,3,28,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2226,"            this.setUseIdentityHashCode(false);
",0,0,0,1,2,0,2,0,0,3,35,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2227,"            this.setUseFieldNames(false);
",0,0,0,1,2,0,2,0,0,3,29,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2228,"            this.setContentStart("""");
",0,0,0,1,2,0,2,0,0,3,25,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2229,"            this.setContentEnd("""");
",0,0,0,1,2,0,2,0,0,3,23,6,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,2230,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,513,"            } else if (value instanceof byte[]) {
",2,0,0,2,6,0,0,0,0,2,37,12,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,520,"            } else if (value instanceof char[]) {
",2,0,0,2,6,0,0,0,0,2,37,13,1,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,215,"        if (object == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,218,"        buffer.append(object.getClass().getName())
",0,0,0,3,6,0,10,0,0,10,42,7,1,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,221,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,471,"           appendCyclicObject(buffer, fieldName, value);
",0,0,0,1,2,0,8,0,0,8,45,7,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,472,"           return;
",0,0,0,0,0,0,0,0,0,0,7,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,580,"       ObjectUtils.identityToString(buffer, value);
",0,0,0,1,2,0,8,0,0,8,44,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,581,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,931,"                appendNullText(buffer, fieldName);
",0,0,0,1,2,0,6,0,0,6,34,9,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,527,"            } else if (value instanceof double[]) {
",2,0,0,2,6,0,0,0,0,2,39,14,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,534,"            } else if (value instanceof float[]) {
",2,0,0,2,6,0,0,0,0,2,38,15,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,541,"            } else if (value instanceof boolean[]) {
",2,0,0,2,6,0,0,0,0,2,40,16,1,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,341,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,1,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,342,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,34,57,"    public static final Null NULL = new Null();
",2,0,0,1,2,3,0,4,0,9,43,2,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,548,"            } else if (value.getClass().isArray()) {
",0,0,0,3,8,0,6,0,0,6,40,17,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,556,"                    if (detail) {
",2,0,0,1,3,0,0,0,0,2,13,18,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,557,"                        appendDetail(buffer, fieldName, value);
",0,0,0,1,2,0,8,0,0,8,39,21,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,593,"        buffer.append(value);
",0,0,0,1,2,0,6,0,0,6,21,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,594,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1501,"        buffer.append(nullText);
",0,0,0,1,2,0,6,0,0,6,24,5,1,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1502,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,"        if (array != null){
",2,1,0,1,3,0,0,0,0,3,19,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);
",2,0,0,4,8,0,6,4,0,12,49,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,"        newArray[newArray.length - 1] = element;
",6,1,1,1,2,0,0,0,0,10,40,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,"        return newArray;
",2,0,0,0,0,0,0,0,0,2,16,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,"        if (!Character.isDigit(lastChar)) {
",0,0,0,2,5,0,6,0,0,7,35,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,"                            return createLong(numeric);
",0,0,0,1,2,0,4,0,0,4,27,12,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,"        for (int i = str.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,45,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,"            if (str.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,27,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,"        return Float.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,26,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,"        return Double.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,"        return Integer.decode(str);
",0,0,0,1,2,0,6,0,0,6,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,"        return new BigInteger(str);
",2,0,0,1,2,0,0,2,0,4,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,"        return new BigDecimal(str);
",2,0,0,1,2,0,0,2,0,4,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,"        return Long.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,25,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,"        for (int i = 0; i < str.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,40,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,"            if (!Character.isDigit(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,11,40,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,"        return str == null || str.length() == 0;
",2,3,0,1,2,0,4,0,0,9,40,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,"        if (str == null || (strLen = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,50,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,"            if ((Character.isWhitespace(str.charAt(i)) == false)) {
",0,1,0,4,9,0,10,0,0,12,55,7,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");
",0,0,0,1,2,0,0,2,0,3,72,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,"                        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,"                        return createBigInteger(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,"                    } catch (NumberFormatException e) {
",2,0,0,1,4,0,0,2,0,4,35,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,"                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,66,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,"                        return d;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,"                } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,"                return createBigDecimal(str);
",0,0,0,1,2,0,4,0,0,4,29,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,"        return str.length() > 0;
",0,1,0,1,2,0,4,0,0,5,24,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1313,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,"        char[] chars = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,33,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1317,"        int sz = chars.length;
",6,0,0,0,0,0,0,0,0,6,22,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,"        boolean hasExp = false;
",2,0,0,0,0,0,0,0,0,3,23,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,"        boolean hasDecPoint = false;
",2,0,0,0,0,0,0,0,0,3,28,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,"        boolean allowSigns = false;
",2,0,0,0,0,0,0,0,0,3,27,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,"        boolean foundDigit = false;
",2,0,0,0,0,0,0,0,0,3,27,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,"        int start = (chars[0] == '-') ? 1 : 0;
",2,1,1,2,4,0,0,0,0,6,38,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1324,"        if (sz > start + 1) {
",4,2,0,1,3,0,0,0,0,6,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,"            if (chars[start] == '0' && chars[start + 1] == 'x') {
",2,4,1,3,7,0,0,0,0,14,53,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,"                int i = start + 2;
",4,1,0,0,0,0,0,0,0,5,18,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,"                if (i == sz) {
",4,1,0,1,3,0,0,0,0,5,14,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,"                for (; i < chars.length; i++) {
",8,1,0,1,3,0,0,0,0,10,31,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,"                    if ((chars[i] < '0' || chars[i] > '9')
",0,3,1,3,7,0,0,0,0,13,38,13,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1335,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1338,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords
",2,0,0,0,0,0,0,0,0,3,65,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,"        int i = start;
",4,0,0,0,0,0,0,0,0,4,14,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,"        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {
",12,6,0,2,5,0,0,0,0,19,61,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,"                foundDigit = true;
",2,0,0,0,0,0,0,0,0,4,18,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1351,"            } else if (chars[i] == '.') {
",0,1,1,2,6,0,0,0,0,6,29,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,"                if (hasDecPoint || hasExp) {
",4,1,0,1,3,0,0,0,0,5,28,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,"                hasDecPoint = true;
",2,0,0,0,0,0,0,0,0,4,19,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,"            } else if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,8,0,0,0,0,13,48,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,"                if (hasExp) {
",2,0,0,1,3,0,0,0,0,2,13,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,"                if (!foundDigit) {
",2,0,0,1,3,0,0,0,0,3,18,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,"                hasExp = true;
",2,0,0,0,0,0,0,0,0,4,14,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,"                allowSigns = true;
",2,0,0,0,0,0,0,0,0,4,18,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,"            } else if (chars[i] == '+' || chars[i] == '-') {
",0,3,1,3,8,0,0,0,0,13,48,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,"                if (!allowSigns) {
",2,0,0,1,3,0,0,0,0,3,18,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,13,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,"                foundDigit = false; // we need a digit after the E
",2,0,0,0,0,0,0,0,0,4,50,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1375,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,"        if (i < chars.length) {
",6,1,0,1,3,0,0,0,0,7,23,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1382,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,"            if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,7,0,0,0,0,13,41,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1386,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,"            if (!allowSigns
",2,0,0,0,1,0,0,0,0,3,15,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,"                return foundDigit;
",2,0,0,0,0,0,0,0,0,2,18,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,"            if (chars[i] == 'l'
",0,1,1,1,3,0,0,0,0,6,19,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,"                return foundDigit && !hasExp;
",4,1,0,0,0,0,0,0,0,6,29,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,"        if (array1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,"        } else if (array2 == null) {
",2,1,0,1,4,0,0,0,0,3,28,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,"        final Class<?> type1 = array1.getClass().getComponentType();
",2,0,0,2,4,1,6,2,0,11,60,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);
",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
",8,0,0,1,2,0,8,0,0,16,71,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,"        return joinedArray;
",2,0,0,0,0,0,0,0,0,2,19,4,0.33333,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);
",0,0,0,1,2,0,6,0,0,7,44,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,"        if (text == null || text.length() == 0 || searchList == null || 
",4,8,0,1,3,0,4,0,0,16,63,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,"            return text;
",2,0,0,0,0,0,0,0,0,2,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,"        if (timeToLive < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,"        int searchLength = searchList.length;
",6,0,0,0,0,0,0,0,0,6,37,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,"        int replacementLength = replacementList.length;
",6,0,0,0,0,0,0,0,0,6,47,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,"        if (searchLength != replacementLength) {
",4,1,0,1,3,0,0,0,0,5,40,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,"        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
",2,0,1,2,4,0,0,0,0,4,64,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,"        int textIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,"        int replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,3,22,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,"        int tempIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,"        for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,"            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || 
",0,4,1,2,5,0,0,0,0,12,60,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,"            tempIndex = text.indexOf(searchList[i]);
",2,0,1,2,4,0,4,0,0,11,40,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,"            if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,"                noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,"                if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,"                    textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,"                    replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,"        if (textIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,"            return text;
",2,0,0,0,0,0,0,0,0,2,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,"        int increase = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,"        for (int i = 0; i < searchList.length; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,"            int greater = replacementList[i].length() - searchList[i].length();
",2,1,1,4,8,0,4,0,0,15,67,7,1.00000,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,"            if (greater > 0) {
",2,1,0,1,3,0,0,0,0,3,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);
",2,1,0,2,4,0,10,0,0,14,49,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,"        StringBuilder buf = new StringBuilder(text.length() + increase);
",4,1,0,2,4,0,4,4,0,13,64,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,"        while (textIndex != -1) {
",2,1,0,1,3,0,0,0,0,4,25,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,"            for (int i = start; i < textIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,41,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,"                buf.append(text.charAt(i));
",0,0,0,2,4,0,10,0,0,10,27,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,"            buf.append(replacementList[replaceIndex]);
",0,0,1,2,4,0,4,0,0,8,42,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,"            start = textIndex + searchList[replaceIndex].length();
",4,1,1,2,4,0,2,0,0,12,54,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,"            textIndex = -1;
",2,0,0,0,0,0,0,0,0,4,15,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,"            replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,"            tempIndex = -1;
",2,0,0,0,0,0,0,0,0,4,15,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,"            for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,"                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || 
",0,4,1,2,5,0,0,0,0,12,60,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);
",2,0,1,2,4,0,6,0,0,13,47,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,"                if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,"                    noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,"                    if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,"                        textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,"                        replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,"        int textLength = text.length();
",2,0,0,1,2,0,4,0,0,6,31,5,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,"        for (int i = start; i < textLength; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,"            buf.append(text.charAt(i));
",0,0,0,2,4,0,10,0,0,10,27,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,"        String result = buf.toString();
",2,0,0,1,2,0,4,2,0,8,31,4,1.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,"        if (!repeat) {
",2,0,0,1,3,0,0,0,0,3,14,4,1.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());
",0,0,0,3,6,0,10,0,0,10,60,5,1.00000,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,"            return StringUtils.EMPTY;
",4,0,0,0,0,0,0,0,0,4,25,7,1.00000,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,"            return StringUtils.EMPTY;
",4,0,0,0,0,0,0,0,0,4,25,7,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,"            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
",2,1,0,4,8,0,4,4,0,11,67,6,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);
",0,0,0,1,2,0,6,0,0,6,24,7,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,"        if (string == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);
",4,0,0,1,2,0,6,0,0,10,39,5,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");
",0,0,0,1,2,0,4,0,0,5,19,11,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));
",0,0,0,2,4,0,10,0,0,10,38,11,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,"                    writer.write(';');
",0,0,0,1,2,0,4,0,0,5,18,11,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,"            return super.name(value);
",4,0,0,1,2,0,0,0,0,4,25,6,0.50000,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);
",4,0,0,2,4,0,4,0,0,8,45,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,"        if (val == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,"        if (val.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,24,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.50000,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,"        char lastChar = val.charAt(val.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,"        int decPos = val.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,"        int expPos = val.indexOf('e') + val.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,"                mant = val;
",4,0,0,0,0,0,0,0,0,5,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,"        if (!Character.isDigit(lastChar)) {
",0,0,0,2,5,0,6,0,0,7,35,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,"            if (expPos > -1 && expPos < val.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,9,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,"        if (s == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,"        for (int i = s.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,43,4,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,"            if (s.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,25,6,0.50000,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.50000,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,"        return str == null ? EMPTY : str;
",6,1,0,0,0,0,0,0,0,7,33,5,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,"                            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,"                        out.write('/');
",0,0,0,1,2,0,4,0,0,5,15,13,1.00000,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,"        return nullText;
",2,0,0,0,0,0,0,0,0,2,16,4,1,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,"            return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.06667,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,"            if (numerator==Integer.MIN_VALUE ||
",6,2,0,0,1,0,0,0,0,8,35,6,0.25000,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,"            numerator = -numerator;
",4,0,0,0,0,0,0,0,0,6,23,6,0.25000,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,"            denominator = -denominator;
",4,0,0,0,0,0,0,0,0,6,27,6,0.25000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {
",6,0,0,1,3,1,0,4,0,11,39,3,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,"            mObj1 = obj1;
",4,0,0,0,0,0,0,0,0,5,13,5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,"            mObj2 = obj2;
",4,0,0,0,0,0,0,0,0,5,13,5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,"            return
",0,0,0,0,0,0,0,0,0,0,6,3,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,"            return new UnpaddedNumberField(field);
",2,0,0,1,2,0,0,2,0,4,38,6,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,"        return mLocale;
",2,0,0,0,0,0,0,0,0,2,15,4,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,"        UnpaddedNumberField(int field) {
",4,0,0,1,3,0,0,0,0,4,32,3,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,"            mField = field;
",4,0,0,0,0,0,0,0,0,5,15,5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,"        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);
",6,0,0,1,2,2,0,4,0,12,88,3,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,"            return 4;
",0,0,0,0,0,0,0,0,0,0,9,3,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);
",0,0,0,1,2,0,4,0,0,5,42,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,"                locale = Locale.getDefault();
",2,0,0,1,2,0,4,0,0,7,29,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);
",0,0,0,1,2,0,6,0,0,7,61,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);
",0,0,0,1,2,0,8,0,0,9,63,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
",6,0,0,3,6,0,0,8,0,14,70,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,"        if (timeZone != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,"        if (locale != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);
",6,0,0,1,2,0,0,2,0,9,28,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,"        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
",2,0,0,2,4,0,6,4,0,12,73,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,"        if (format == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,"            if (locale == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,"                locale = Locale.getDefault();
",2,0,0,1,2,0,4,0,0,7,29,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,
",2,0,0,1,3,0,8,4,0,14,100,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,"                String pattern = formatter.toPattern();
",2,0,0,1,2,0,4,2,0,8,39,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);
",2,0,0,1,2,0,8,0,0,11,48,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);
",0,0,0,1,2,0,8,0,0,8,40,9,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,"        return format;
",2,0,0,0,0,0,0,0,0,2,14,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,"                if (tokenLen >= 4) {
",2,1,0,1,3,0,0,0,0,3,20,7,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);
",12,0,0,1,2,0,0,2,0,15,81,9,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,"            if (this == obj) {
",2,1,0,1,3,0,0,0,0,3,18,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,"            if (!(obj instanceof Pair)) {
",2,0,0,2,5,0,0,2,0,5,29,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,"            Pair key = (Pair)obj;
",4,0,0,1,2,0,0,4,0,8,21,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,"            return
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {
",10,0,0,1,3,0,0,4,0,14,87,3,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,"            mTimeZone = timeZone;
",4,0,0,0,0,0,0,0,0,5,21,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,"            mTimeZoneForced = timeZoneForced;
",4,0,0,0,0,0,0,0,0,5,33,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,"            mLocale = locale;
",4,0,0,0,0,0,0,0,0,5,17,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,"            mStyle = style;
",4,0,0,0,0,0,0,0,0,5,15,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,"            if (timeZoneForced) {
",2,0,0,1,3,0,0,0,0,2,21,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1548,"                mStandard = null;
",2,0,0,0,0,0,0,0,0,3,17,7,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,"                mDaylight = null;
",2,0,0,0,0,0,0,0,0,3,17,7,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1551,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1557,"            if (mTimeZoneForced) {
",2,0,0,1,3,0,0,0,0,2,22,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1559,"            } else if (mStyle == TimeZone.SHORT) {
",6,1,0,1,4,0,0,0,0,7,38,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1560,"                return 4;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,"        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);
",8,0,0,2,4,0,4,0,0,12,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,"        return bool.booleanValue() ? true : false;
",0,0,0,1,2,0,4,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,"        return !isTrue(bool);
",0,0,0,1,2,0,4,0,0,5,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,"        return bool.booleanValue() ? false : true;
",0,0,0,1,2,0,4,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,"        return !isFalse(bool);
",0,0,0,1,2,0,4,0,0,5,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,"        return bool ? Boolean.TRUE : Boolean.FALSE;
",10,0,0,0,0,0,0,0,0,10,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,183,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,184,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,186,"        return bool.booleanValue() ? true : false;
",0,0,0,1,2,0,4,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,"            return valueIfNull;
",2,0,0,0,0,0,0,0,0,2,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,206,"        return bool.booleanValue() ? true : false;
",0,0,0,1,2,0,4,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,"        return value == 0 ? false : true;
",2,1,0,0,0,0,0,0,0,5,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,"        return value == 0 ? Boolean.FALSE : Boolean.TRUE;
",10,1,0,0,0,0,0,0,0,11,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,265,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,"        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;
",8,1,0,1,2,0,4,0,0,13,60,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,287,"        if (value == trueValue) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,288,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,"        } else if (value == falseValue) {
",4,1,0,1,4,0,0,0,0,5,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");
",0,0,0,1,2,0,0,2,0,3,87,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,"            if (trueValue == null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,318,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,"            } else if (falseValue == null) {
",2,1,0,1,4,0,0,0,0,3,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,9,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,"        } else if (value.equals(trueValue)) {
",0,0,0,2,6,0,6,0,0,6,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,323,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,"        } else if (value.equals(falseValue)) {
",0,0,0,2,6,0,6,0,0,6,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,325,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,328,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");
",0,0,0,1,2,0,0,2,0,3,87,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,348,"        if (value == trueValue) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,349,"            return Boolean.TRUE;
",4,0,0,0,0,0,0,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,350,"        } else if (value == falseValue) {
",4,1,0,1,4,0,0,0,0,5,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,351,"            return Boolean.FALSE;
",4,0,0,0,0,0,0,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,352,"        } else if (value == nullValue) {
",4,1,0,1,4,0,0,0,0,5,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,353,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,356,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");
",0,0,0,1,2,0,0,2,0,3,84,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,379,"        if (value == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,380,"            if (trueValue == null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,381,"                return Boolean.TRUE;
",4,0,0,0,0,0,0,0,0,4,20,9,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,382,"            } else if (falseValue == null) {
",2,1,0,1,4,0,0,0,0,3,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,383,"                return Boolean.FALSE;
",4,0,0,0,0,0,0,0,0,4,21,10,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,384,"            } else if (nullValue == null) {
",2,1,0,1,4,0,0,0,0,3,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,385,"                return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,387,"        } else if (value.equals(trueValue)) {
",0,0,0,2,6,0,6,0,0,6,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,388,"            return Boolean.TRUE;
",4,0,0,0,0,0,0,0,0,4,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,389,"        } else if (value.equals(falseValue)) {
",0,0,0,2,6,0,6,0,0,6,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,390,"            return Boolean.FALSE;
",4,0,0,0,0,0,0,0,0,4,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,391,"        } else if (value.equals(nullValue)) {
",0,0,0,2,6,0,6,0,0,6,37,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,392,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,395,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");
",0,0,0,1,2,0,0,2,0,3,84,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,413,"        return bool ? 1 : 0;
",2,0,0,0,0,0,0,0,0,2,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,429,"        return bool ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;
",10,0,0,0,0,0,0,0,0,10,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,447,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,448,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,450,"        return bool.booleanValue() ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;
",8,0,0,1,2,0,4,0,0,12,80,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,467,"        return bool ? trueValue : falseValue;
",6,0,0,0,0,0,0,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,486,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,487,"            return nullValue;
",2,0,0,0,0,0,0,0,0,2,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,489,"        return bool.booleanValue() ? trueValue : falseValue;
",4,0,0,1,2,0,4,0,0,8,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,508,"        return bool ? trueValue : falseValue;
",6,0,0,0,0,0,0,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,530,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,531,"            return nullValue;
",2,0,0,0,0,0,0,0,0,2,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,533,"        return bool.booleanValue() ? trueValue : falseValue;
",4,0,0,1,2,0,4,0,0,8,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,563,"        if (""true"".equalsIgnoreCase(str)) {
",0,0,0,2,5,0,4,0,0,5,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,564,"            return Boolean.TRUE;
",4,0,0,0,0,0,0,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,565,"        } else if (""false"".equalsIgnoreCase(str)) {
",0,0,0,2,6,0,4,0,0,5,43,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,566,"            return Boolean.FALSE;
",4,0,0,0,0,0,0,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,567,"        } else if (""on"".equalsIgnoreCase(str)) {
",0,0,0,2,6,0,4,0,0,5,40,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,568,"            return Boolean.TRUE;
",4,0,0,0,0,0,0,0,0,4,20,9,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,569,"        } else if (""off"".equalsIgnoreCase(str)) {
",0,0,0,2,6,0,4,0,0,5,41,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,570,"            return Boolean.FALSE;
",4,0,0,0,0,0,0,0,0,4,21,10,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,571,"        } else if (""yes"".equalsIgnoreCase(str)) {
",0,0,0,2,6,0,4,0,0,5,41,9,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,572,"            return Boolean.TRUE;
",4,0,0,0,0,0,0,0,0,4,20,11,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,573,"        } else if (""no"".equalsIgnoreCase(str)) {
",0,0,0,2,6,0,4,0,0,5,40,10,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,574,"            return Boolean.FALSE;
",4,0,0,0,0,0,0,0,0,4,21,12,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,577,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,603,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,604,"            if (trueString == null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,605,"                return Boolean.TRUE;
",4,0,0,0,0,0,0,0,0,4,20,9,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,606,"            } else if (falseString == null) {
",2,1,0,1,4,0,0,0,0,3,33,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,607,"                return Boolean.FALSE;
",4,0,0,0,0,0,0,0,0,4,21,10,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,608,"            } else if (nullString == null) {
",2,1,0,1,4,0,0,0,0,3,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,609,"                return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,611,"        } else if (str.equals(trueString)) {
",0,0,0,2,6,0,6,0,0,6,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,612,"            return Boolean.TRUE;
",4,0,0,0,0,0,0,0,0,4,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,613,"        } else if (str.equals(falseString)) {
",0,0,0,2,6,0,6,0,0,6,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,614,"            return Boolean.FALSE;
",4,0,0,0,0,0,0,0,0,4,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,615,"        } else if (str.equals(nullString)) {
",0,0,0,2,6,0,6,0,0,6,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,616,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,619,"        throw new IllegalArgumentException(""The String did not match any specified value"");
",0,0,0,1,2,0,0,2,0,3,83,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {
",2,1,0,1,3,0,0,0,0,4,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,"        switch (str.length()) {
",0,0,0,2,5,0,4,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,"                char ch0 = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,"                char ch1 = str.charAt(1);
",2,0,0,1,2,0,4,0,0,6,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,666,"                return 
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,"                char ch = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,"                if (ch == 'y') {
",2,1,0,1,3,0,0,0,0,4,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,673,"                    return 
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,677,"                if (ch == 'Y') {
",2,1,0,1,3,0,0,0,0,4,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,678,"                    return 
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,"                char ch = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,685,"                if (ch == 't') {
",2,1,0,1,3,0,0,0,0,4,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,686,"                    return 
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,"                if (ch == 'T') {
",2,1,0,1,3,0,0,0,0,4,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,692,"                    return 
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,732,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,733,"            if (trueString == null) {
",2,1,0,1,3,0,0,0,0,3,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,734,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,735,"            } else if (falseString == null) {
",2,1,0,1,4,0,0,0,0,3,33,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,736,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,9,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,738,"        } else if (str.equals(trueString)) {
",0,0,0,2,6,0,6,0,0,6,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,739,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,740,"        } else if (str.equals(falseString)) {
",0,0,0,2,6,0,6,0,0,6,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,741,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,744,"        throw new IllegalArgumentException(""The String did not match either specified value"");
",0,0,0,1,2,0,0,2,0,3,86,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,764,"        return toString(bool, ""true"", ""false"", null);
",0,0,0,1,2,0,4,0,0,7,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,782,"        return toString(bool, ""on"", ""off"", null);
",0,0,0,1,2,0,4,0,0,7,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,800,"        return toString(bool, ""yes"", ""no"", null);
",0,0,0,1,2,0,4,0,0,7,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,822,"        if (bool == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,823,"            return nullString;
",2,0,0,0,0,0,0,0,0,2,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,825,"        return bool.booleanValue() ? trueString : falseString;
",4,0,0,1,2,0,4,0,0,8,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,844,"        return toString(bool, ""true"", ""false"");
",0,0,0,1,2,0,4,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,861,"        return toString(bool, ""on"", ""off"");
",0,0,0,1,2,0,4,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,878,"        return toString(bool, ""yes"", ""no"");
",0,0,0,1,2,0,4,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,897,"        return bool ? trueString : falseString;
",6,0,0,0,0,0,0,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,918,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,919,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,920,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,921,"            throw new IllegalArgumentException(""Array is empty"");
",0,0,0,1,2,0,0,2,0,3,53,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,925,"        int trueCount = 0;
",2,0,0,0,0,0,0,0,0,2,18,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,926,"        for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,929,"            if (array[i]) {
",0,0,1,2,5,0,0,0,0,4,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,930,"                if (trueCount < 1) {
",2,1,0,1,3,0,0,0,0,3,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,931,"                    trueCount++;
",2,0,0,0,0,0,0,0,0,3,12,10,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,933,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,939,"        return trueCount == 1;
",2,1,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,958,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,959,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,960,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,961,"            throw new IllegalArgumentException(""Array is empty"");
",0,0,0,1,2,0,0,2,0,3,53,8,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,963,"        boolean[] primitive = null;
",2,0,0,1,2,0,0,0,0,2,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,965,"            primitive = ArrayUtils.toPrimitive(array);
",2,0,0,1,2,0,6,0,0,9,42,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,968,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,966,"        } catch (NullPointerException ex) {
",2,0,0,1,4,0,0,2,0,4,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,967,"            throw new IllegalArgumentException(""The array must not contain any null elements"");
",0,0,0,1,2,0,0,2,0,4,83,7,0.00000,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,969,"        return xor(primitive) ? Boolean.TRUE : Boolean.FALSE;
",8,0,0,1,2,0,4,0,0,12,53,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');
",0,0,0,1,2,0,4,0,0,5,15,13,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,"                        if (field == DateUtils.SEMI_MONTH) {
",6,1,0,1,3,0,0,0,0,7,36,12,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);
",0,0,1,3,6,0,4,0,0,8,25,15,1.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,9,1.00000,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,"        stopTime = System.currentTimeMillis();
",2,0,0,1,2,0,4,0,0,7,38,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,"        this.runningState = STATE_SUSPENDED;
",4,0,0,0,0,0,0,0,0,5,36,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,181,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);
",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.07692,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1083,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,291,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,360,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,377,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,394,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,411,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,428,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = 
",2,0,0,0,0,3,0,2,0,7,64,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,445,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,461,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,477,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,495,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,512,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,529,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,546,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,563,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,580,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,597,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,614,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,630,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,646,"    public static final String OS_NAME = getSystemProperty(""os.name"");
",2,0,0,1,2,3,2,2,0,10,66,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,662,"    public static final String OS_VERSION = getSystemProperty(""os.version"");
",2,0,0,1,2,3,2,2,0,10,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,679,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,698,"    public static final String USER_COUNTRY = 
",2,0,0,0,0,3,0,2,0,7,41,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,717,"    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);
",2,0,0,1,2,3,4,2,0,11,70,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,733,"    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,751,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,767,"    public static final String USER_NAME = getSystemProperty(""user.name"");
",2,0,0,1,2,3,2,2,0,10,70,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,784,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,798,"    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();
",2,0,0,1,2,3,2,2,0,9,74,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,818,"    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();
",2,0,0,1,2,3,2,0,0,7,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,833,"    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();
",2,0,0,1,2,3,2,0,0,7,65,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,846,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,854,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,904,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");
",2,0,0,1,2,3,2,0,0,8,60,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,914,"    public static final boolean IS_OS_HP_UX = getOSMatches(""HP-UX"");
",2,0,0,1,2,3,2,0,0,8,64,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,924,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");
",2,0,0,1,2,3,2,0,0,8,62,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,934,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");
",2,1,0,2,4,3,4,0,0,12,89,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,944,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");
",2,0,0,1,2,3,2,0,0,8,60,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,954,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");
",2,0,0,1,2,3,2,0,0,8,69,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,964,"    public static final boolean IS_OS_OS2 = getOSMatches(""OS/2"");
",2,0,0,1,2,3,2,0,0,8,61,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,974,"    public static final boolean IS_OS_SOLARIS = getOSMatches(""Solaris"");
",2,0,0,1,2,3,2,0,0,8,68,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,984,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");
",2,0,0,1,2,3,2,0,0,8,65,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,995,"    public static final boolean IS_OS_UNIX =
",2,0,0,0,0,3,0,0,0,5,40,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1007,"    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);
",2,0,0,1,2,3,4,0,0,9,81,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1017,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");
",2,0,0,1,2,3,4,0,0,10,93,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1027,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");
",4,1,0,1,2,3,2,0,0,12,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1038,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");
",4,1,0,1,2,3,2,0,0,12,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1049,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");
",2,0,0,1,2,3,4,0,0,10,91,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1060,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" NT"");
",4,1,0,1,2,3,2,0,0,11,92,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1071,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");
",2,0,0,1,2,3,4,0,0,10,91,2,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1101,"        return JAVA_VERSION_FLOAT;
",2,0,0,0,0,0,0,0,0,2,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1119,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1120,"            return 0f;
",0,0,0,0,0,0,0,0,0,0,10,3,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);
",2,0,0,1,2,0,4,2,0,8,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1123,"        if (JAVA_VERSION_TRIMMED.length() >= 5) {
",0,1,0,2,5,0,4,0,0,5,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1124,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);
",4,1,0,1,2,0,4,0,0,10,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1127,"            return Float.parseFloat(str);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1128,"        } catch (Exception ex) {
",2,0,0,1,4,0,0,2,0,4,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1129,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1148,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1149,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1151,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);
",2,0,0,1,2,0,4,2,0,8,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1152,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);
",4,1,0,1,2,0,4,0,0,10,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1153,"        if (JAVA_VERSION_TRIMMED.length() >= 5) {
",0,1,0,2,5,0,4,0,0,5,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1154,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);
",4,1,0,1,2,0,4,0,0,10,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";
",4,1,0,0,0,0,0,0,0,7,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1159,"            return Integer.parseInt(str);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1160,"        } catch (Exception ex) {
",2,0,0,1,4,0,0,2,0,4,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1161,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1171,"        if (JAVA_VERSION != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,"            for (int i = 0; i < JAVA_VERSION.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,"                char ch = JAVA_VERSION.charAt(i);
",2,0,0,1,2,0,6,0,0,8,33,9,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,"                if (ch >= '0' && ch <= '9') {
",4,3,0,1,3,0,0,0,0,9,29,8,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,"                    return JAVA_VERSION.substring(i);
",0,0,0,1,2,0,6,0,0,6,33,11,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1179,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1189,"        if (JAVA_VERSION_TRIMMED == null) {
",2,1,0,1,3,0,0,0,0,3,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1190,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1192,"        return JAVA_VERSION_TRIMMED.startsWith(versionPrefix);
",0,0,0,1,2,0,6,0,0,6,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1202,"        if (OS_NAME == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1203,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1205,"        return OS_NAME.startsWith(osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1216,"        if (OS_NAME == null || OS_VERSION == null) {
",4,3,0,1,3,0,0,0,0,7,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1217,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1219,"        return OS_NAME.startsWith(osNamePrefix) && OS_VERSION.startsWith(osVersionPrefix);
",0,1,0,2,4,0,12,0,0,13,82,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1235,"            return System.getProperty(property);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1236,"        } catch (SecurityException ex) {
",2,0,0,1,4,0,0,2,0,4,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1238,"            System.err.println(
",4,0,0,0,1,0,2,0,0,6,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1242,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1260,"        return JAVA_VERSION_FLOAT >= requiredVersion;
",4,1,0,0,0,0,0,0,0,5,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1278,"        return JAVA_VERSION_INT >= requiredVersion;
",4,1,0,0,0,0,0,0,0,5,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1292,"        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;
",6,1,0,2,4,0,6,0,0,14,93,5,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1305,"        return new File(System.getProperty(JAVA_HOME_KEY));
",0,0,0,2,4,0,6,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1319,"        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));
",0,0,0,2,4,0,6,2,0,8,56,5,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1333,"        return new File(System.getProperty(USER_DIR_KEY));
",0,0,0,2,4,0,6,2,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1347,"        return new File(System.getProperty(USER_HOME_KEY));
",0,0,0,2,4,0,6,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,63,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,64,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,"    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());
",2,0,0,2,4,3,4,4,0,13,90,2,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,"    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());
",2,0,0,2,4,3,4,4,0,13,91,2,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,"        List list = Arrays.asList(Locale.getAvailableLocales());
",2,0,0,2,4,0,8,2,0,12,56,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,"        cAvailableLocaleList = Collections.unmodifiableList(list);
",2,0,0,1,2,0,6,0,0,9,58,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,53,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,95,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,96,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,98,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,"        if (len != 2 && len != 5 && len < 7) {
",6,5,0,1,3,0,0,0,0,11,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,7,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,102,"        char ch0 = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,103,"        char ch1 = str.charAt(1);
",2,0,0,1,2,0,4,0,0,6,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,104,"        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {
",8,7,0,1,3,0,0,0,0,19,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,7,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,107,"        if (len == 2) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");
",2,0,0,1,2,0,0,2,0,5,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,110,"            if (str.charAt(2) != '_') {
",0,1,0,2,5,0,4,0,0,6,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,9,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,113,"            char ch3 = str.charAt(3);
",2,0,0,1,2,0,4,0,0,6,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,114,"            char ch4 = str.charAt(4);
",2,0,0,1,2,0,4,0,0,6,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,"            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {
",8,7,0,1,3,0,0,0,0,19,55,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,9,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,118,"            if (len == 5) {
",2,1,0,1,3,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));
",0,0,0,3,6,0,8,2,0,10,60,9,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,121,"                if (str.charAt(5) != '_') {
",0,1,0,2,5,0,4,0,0,6,27,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);
",2,1,0,1,2,0,0,2,0,6,68,11,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
",0,0,0,4,8,0,12,2,0,14,78,9,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,143,"        return localeLookupList(locale, locale);
",0,0,0,1,2,0,6,0,0,6,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,165,"        List list = new ArrayList(4);
",2,0,0,1,2,0,0,4,0,6,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,166,"        if (locale != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,167,"            list.add(locale);
",0,0,0,1,2,0,6,0,0,6,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,168,"            if (locale.getVariant().length() > 0) {
",0,1,0,3,7,0,6,0,0,7,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));
",0,0,0,4,8,0,12,2,0,14,64,9,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,171,"            if (locale.getCountry().length() > 0) {
",0,1,0,3,7,0,6,0,0,7,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,172,"                list.add(new Locale(locale.getLanguage(), """"));
",0,0,0,3,6,0,8,2,0,11,47,9,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,174,"            if (list.contains(defaultLocale) == false) {
",0,1,0,2,5,0,6,0,0,8,44,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,175,"                list.add(defaultLocale);
",0,0,0,1,2,0,6,0,0,6,24,9,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,178,"        return Collections.unmodifiableList(list);
",0,0,0,1,2,0,6,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,192,"        return cAvailableLocaleList;
",2,0,0,0,0,0,0,0,0,2,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,"        Set set = cAvailableLocaleSet;
",4,0,0,0,0,0,0,2,0,6,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,207,"        if (set == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,208,"            set = new HashSet(availableLocaleList());
",2,0,0,2,4,0,2,2,0,7,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,209,"            set = Collections.unmodifiableSet(set);
",2,0,0,1,2,0,6,0,0,9,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,210,"            cAvailableLocaleSet = set;
",4,0,0,0,0,0,0,0,0,5,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,212,"        return set;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,"        return cAvailableLocaleSet.contains(locale);
",0,0,0,1,2,0,6,0,0,6,44,5,0.00000,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,237,"        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd
",2,0,0,2,4,0,6,4,0,12,66,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,238,"        if (langs == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,239,"            if (countryCode != null) {
",2,1,0,1,3,0,0,0,0,3,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,"                langs = new ArrayList();
",2,0,0,1,2,0,0,2,0,5,24,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,"                List locales = availableLocaleList();
",2,0,0,1,2,0,2,2,0,6,37,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,242,"                for (int i = 0; i < locales.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,42,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,"                    Locale locale = (Locale) locales.get(i);
",2,0,0,2,4,0,6,4,0,12,40,10,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,244,"                    if (countryCode.equals(locale.getCountry()) &&
",0,1,0,2,5,0,8,0,0,9,46,10,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,246,"                        langs.add(locale);
",0,0,0,1,2,0,6,0,0,6,18,13,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,249,"                langs = Collections.unmodifiableList(langs);
",2,0,0,1,2,0,6,0,0,9,44,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,250,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,"                langs = Collections.EMPTY_LIST;
",6,0,0,0,0,0,0,0,0,7,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd
",0,0,0,1,2,0,8,0,0,8,53,7,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,255,"        return langs;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,269,"        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd
",2,0,0,2,4,0,6,4,0,12,72,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,270,"        if (countries == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,271,"            if (languageCode != null) {
",2,1,0,1,3,0,0,0,0,3,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,272,"                countries = new ArrayList();
",2,0,0,1,2,0,0,2,0,5,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,273,"                List locales = availableLocaleList();
",2,0,0,1,2,0,2,2,0,6,37,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,274,"                for (int i = 0; i < locales.size(); i++) {
",6,1,0,2,5,0,4,0,0,12,42,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,275,"                    Locale locale = (Locale) locales.get(i);
",2,0,0,2,4,0,6,4,0,12,40,10,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,276,"                    if (languageCode.equals(locale.getLanguage()) &&
",0,2,0,2,5,0,8,0,0,10,48,10,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,279,"                        countries.add(locale);
",0,0,0,1,2,0,6,0,0,6,22,13,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,282,"                countries = Collections.unmodifiableList(countries);
",2,0,0,1,2,0,6,0,0,9,52,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,283,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,284,"                countries = Collections.EMPTY_LIST;
",6,0,0,0,0,0,0,0,0,7,35,8,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd
",0,0,0,1,2,0,8,0,0,8,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,288,"        return countries;
",2,0,0,0,0,0,0,0,0,2,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,"        if (width > 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,"            ensureCapacity(size + width);
",4,1,0,1,2,0,2,0,0,7,29,7,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,"            String str = (obj == null ? getNullText() : obj.toString());
",4,1,0,3,6,0,6,2,0,14,60,6,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,"            int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,7,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,"            if (strLen >= width) {
",4,1,0,1,3,0,0,0,0,5,22,6,0.50000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);
",0,0,0,1,2,0,10,0,0,10,38,9,0.50000,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,"        for (int i = 0; i < thisBuf.length; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,"            if (thisBuf[i] == ch) {
",2,1,1,2,5,0,0,0,0,7,23,6,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,1.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,"        startIndex = (startIndex < 0 ? 0 : startIndex);
",6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,"        if (str == null || startIndex >= size) {
",6,3,0,1,3,0,0,0,0,9,40,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,"        if (strLen == 1) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,"        if (strLen == 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,"        if (strLen > size) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,"        int len = thisBuf.length - strLen;
",8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,"        for (int i = startIndex; i < len; i++) {
",10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,"            for (int j = 0; j < strLen; j++) {
",8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,"                if (str.charAt(j) != thisBuf[i + j]) {
",4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,"                    continue outer;
",2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,"            return i;
",2,0,0,0,0,0,0,0,0,2,9,7,0.57143,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,"                    if (entityName.length() == 1) {
",0,1,0,2,5,0,4,0,0,5,31,11,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,"                        char charAt1 = entityName.charAt(1);
",2,0,0,1,2,0,4,0,0,6,36,14,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,"                            if (charAt1 == 'x' || charAt1=='X') {
",4,3,0,1,3,0,0,0,0,9,37,15,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,"                                entityValue = Integer.parseInt(entityName.substring(1));
",2,0,0,2,4,0,8,0,0,11,56,17,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,"                        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,lang,org/apache/commons/lang/Entities,62,853,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());
",0,0,0,2,4,0,12,0,0,13,81,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {
",0,0,0,2,5,0,8,0,0,8,46,7,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,"                months += 12 * years;
",4,1,0,0,0,0,0,0,0,6,21,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,"                years = 0;
",2,0,0,0,0,0,0,0,0,3,10,8,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,"            hours += 24 * days;
",4,1,0,0,0,0,0,0,0,6,19,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,"            days = 0;
",2,0,0,0,0,0,0,0,0,3,9,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,"            minutes += 60 * hours;
",4,1,0,0,0,0,0,0,0,6,22,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,"            hours = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,"            seconds += 60 * minutes;
",4,1,0,0,0,0,0,0,0,6,24,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,"            minutes = 0;
",2,0,0,0,0,0,0,0,0,3,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,"            milliseconds += 1000 * seconds;
",4,1,0,0,0,0,0,0,0,6,31,6,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,"            seconds = 0;
",2,0,0,0,0,0,0,0,0,3,12,6,1.00000,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,"        return iValue - ((ValuedEnum) other).iValue;
",6,1,0,2,4,0,0,2,0,9,44,4,0.25000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,"        gval.setTime(date);
",0,0,0,1,2,0,6,0,0,6,19,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);
",0,0,0,1,2,0,6,0,0,7,27,5,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,"        return gval.getTime();
",0,0,0,1,2,0,4,0,0,4,22,5,1.00000,0
