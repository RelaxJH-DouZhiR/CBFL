dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,"                        if (field == DateUtils.SEMI_MONTH) {
",6,1,0,1,3,0,0,0,0,7,36,12,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);
",0,0,1,3,6,0,4,0,0,8,25,15,1.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,441,"        gval.setTime(date);
",0,0,0,1,2,0,6,0,0,6,19,5,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,442,"        modify(gval, field, true);
",0,0,0,1,2,0,6,0,0,7,26,5,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,443,"        return gval.getTime();
",0,0,0,1,2,1,4,0,0,4,22,5,0.50000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,"        if (val.get(Calendar.YEAR) > 280000000) {
",4,1,0,2,5,0,4,0,0,9,41,4,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,625,"        if (field == Calendar.MILLISECOND) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,"        Date date = val.getTime();
",2,0,0,1,2,0,4,2,0,8,26,4,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,636,"        long time = date.getTime();
",2,0,0,1,2,0,4,0,0,6,27,5,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,"        boolean done = false;
",2,0,0,0,0,0,0,0,0,3,21,5,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,640,"        int millisecs = val.get(Calendar.MILLISECOND);
",6,0,0,1,2,0,4,0,0,10,46,5,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,"        if (!round || millisecs < 500) {
",4,2,0,1,3,0,0,0,0,7,32,4,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,649,"        int seconds = val.get(Calendar.SECOND);
",6,0,0,1,2,0,4,0,0,10,39,5,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,"        if (!done && (!round || seconds < 30)) {
",6,3,0,2,5,0,0,0,0,11,40,4,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,"        int minutes = val.get(Calendar.MINUTE);
",6,0,0,1,2,0,4,0,0,10,39,5,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,659,"        if (!done && (!round || minutes < 30)) {
",6,3,0,2,5,0,0,0,0,11,40,4,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,660,"            time = time - (minutes * 60000L);
",6,2,0,1,2,0,0,0,0,9,33,6,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,664,"        if (date.getTime() != time) {
",2,1,0,2,5,0,4,0,0,7,29,4,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,665,"            date.setTime(time);
",0,0,0,1,2,0,6,0,0,6,19,7,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,666,"            val.setTime(date);
",0,0,0,1,2,0,6,0,0,6,18,7,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,670,"        boolean roundUp = false;
",2,0,0,0,0,0,0,0,0,3,24,5,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,671,"        for (int i = 0; i < fields.length; i++) {
",10,1,0,1,3,0,0,0,0,12,41,4,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,672,"            for (int j = 0; j < fields[i].length; j++) {
",8,1,1,2,5,0,0,0,0,14,44,6,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,673,"                if (fields[i][j] == field) {
",2,1,1,3,7,0,0,0,0,9,28,8,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,675,"                    if (round && roundUp) {
",4,1,0,1,3,0,0,0,0,5,23,10,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,692,"                    return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,696,"            int offset = 0;
",2,0,0,0,0,0,0,0,0,2,15,7,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,697,"            boolean offsetSet = false;
",2,0,0,0,0,0,0,0,0,3,26,7,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,699,"            switch (field) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,729,"            if (!offsetSet) {
",2,0,0,1,3,0,0,0,0,3,17,6,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,730,"                int min = val.getActualMinimum(fields[i][0]);
",2,0,1,3,6,0,4,0,0,10,45,9,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,731,"                int max = val.getActualMaximum(fields[i][0]);
",2,0,1,3,6,0,4,0,0,10,45,9,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,733,"                offset = val.get(fields[i][0]) - min;
",4,1,1,3,6,0,4,0,0,14,37,8,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,735,"                roundUp = offset > ((max - min) / 2);
",8,3,0,2,4,0,0,0,0,12,37,8,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,738,"            if (offset != 0) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,739,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);
",2,1,1,6,12,0,8,0,0,19,54,9,0.20000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,45,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");
",2,0,0,1,2,3,4,2,0,12,73,2,0.04762,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,73,"    private static final int[][] fields = {
",2,0,0,2,5,3,0,0,0,5,39,2,0.04762,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,124,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,125,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,142,"        if (date1 == null || date2 == null) {
",4,3,0,1,3,0,0,0,0,7,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,143,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,145,"        Calendar cal1 = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,146,"        cal1.setTime(date1);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,147,"        Calendar cal2 = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,148,"        cal2.setTime(date2);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,149,"        return isSameDay(cal1, cal2);
",0,0,0,1,2,1,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,166,"        if (cal1 == null || cal2 == null) {
",4,3,0,1,3,0,0,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,167,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,169,"        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
",8,3,0,2,5,1,8,0,0,19,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,187,"        if (date1 == null || date2 == null) {
",4,3,0,1,3,0,0,0,0,7,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,188,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,190,"        return date1.getTime() == date2.getTime();
",0,1,0,2,4,1,8,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,205,"        if (cal1 == null || cal2 == null) {
",4,3,0,1,3,0,0,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,206,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,208,"        return cal1.getTime().getTime() == cal2.getTime().getTime();
",0,1,0,4,8,1,12,0,0,13,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,225,"        if (cal1 == null || cal2 == null) {
",4,3,0,1,3,0,0,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,226,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,228,"        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
",8,8,0,2,5,1,8,0,0,24,75,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,253,"        if (str == null || parsePatterns == null) {
",4,3,0,1,3,0,0,0,0,7,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,254,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");
",0,0,0,1,2,0,0,2,0,4,73,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,257,"        SimpleDateFormat parser = null;
",2,0,0,0,0,0,0,2,0,4,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,258,"        ParsePosition pos = new ParsePosition(0);
",2,0,0,1,2,0,0,4,0,6,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,259,"        for (int i = 0; i < parsePatterns.length; i++) {
",10,1,0,1,3,0,0,0,0,12,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,260,"            if (i == 0) {
",2,1,0,1,3,0,0,0,0,3,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,261,"                parser = new SimpleDateFormat(parsePatterns[0]);
",2,0,1,2,4,0,0,2,0,7,48,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,263,"                parser.applyPattern(parsePatterns[i]);
",0,0,1,2,4,0,4,0,0,8,38,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,265,"            pos.setIndex(0);
",0,0,0,1,2,0,4,0,0,4,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,266,"            Date date = parser.parse(str, pos);
",2,0,0,1,2,0,8,2,0,12,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,267,"            if (date != null && pos.getIndex() == str.length()) {
",2,3,0,3,7,0,8,0,0,13,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,268,"                return date;
",2,0,0,0,0,1,0,0,0,2,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,271,"        throw new ParseException(""Unable to parse the date: "" + str, -1);
",2,1,0,1,2,0,0,2,0,7,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,285,"        return add(date, Calendar.YEAR, amount);
",4,0,0,1,2,1,6,0,0,10,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,299,"        return add(date, Calendar.MONTH, amount);
",4,0,0,1,2,1,6,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,313,"        return add(date, Calendar.WEEK_OF_YEAR, amount);
",4,0,0,1,2,1,6,0,0,10,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,327,"        return add(date, Calendar.DAY_OF_MONTH, amount);
",4,0,0,1,2,1,6,0,0,10,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,341,"        return add(date, Calendar.HOUR_OF_DAY, amount);
",4,0,0,1,2,1,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,355,"        return add(date, Calendar.MINUTE, amount);
",4,0,0,1,2,1,6,0,0,10,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,369,"        return add(date, Calendar.SECOND, amount);
",4,0,0,1,2,1,6,0,0,10,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,383,"        return add(date, Calendar.MILLISECOND, amount);
",4,0,0,1,2,1,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,398,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,399,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,401,"        Calendar c = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,402,"        c.setTime(date);
",0,0,0,1,2,0,6,0,0,6,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,403,"        c.add(calendarField, amount);
",0,0,0,1,2,0,8,0,0,8,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,404,"        return c.getTime();
",0,0,0,1,2,1,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,438,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,475,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,476,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,478,"        Calendar rounded = (Calendar) date.clone();
",2,0,0,2,4,0,4,4,0,10,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,479,"        modify(rounded, field, true);
",0,0,0,1,2,0,6,0,0,7,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,480,"        return rounded;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,514,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,515,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,517,"        if (date instanceof Date) {
",2,0,0,1,3,0,0,2,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,518,"            return round((Date) date, field);
",2,0,0,2,4,1,4,2,0,8,33,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,519,"        } else if (date instanceof Calendar) {
",2,0,0,1,4,0,0,2,0,4,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,520,"            return round((Calendar) date, field).getTime();
",2,0,0,3,6,1,6,2,0,10,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,522,"            throw new ClassCastException(""Could not round "" + date);
",2,1,0,1,2,0,0,2,0,6,56,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,544,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,545,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,547,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,548,"        gval.setTime(date);
",0,0,0,1,2,0,6,0,0,6,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,549,"        modify(gval, field, false);
",0,0,0,1,2,0,6,0,0,7,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,550,"        return gval.getTime();
",0,0,0,1,2,1,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,570,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,571,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,573,"        Calendar truncated = (Calendar) date.clone();
",2,0,0,2,4,0,4,4,0,10,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,574,"        modify(truncated, field, false);
",0,0,0,1,2,0,6,0,0,7,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,575,"        return truncated;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,599,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,600,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,602,"        if (date instanceof Date) {
",2,0,0,1,3,0,0,2,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,603,"            return truncate((Date) date, field);
",2,0,0,2,4,1,4,2,0,8,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,604,"        } else if (date instanceof Calendar) {
",2,0,0,1,4,0,0,2,0,4,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,605,"            return truncate((Calendar) date, field).getTime();
",2,0,0,3,6,1,6,2,0,10,50,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,607,"            throw new ClassCastException(""Could not truncate "" + date);
",2,1,0,1,2,0,0,2,0,6,59,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,622,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");
",0,0,0,1,2,0,0,2,0,3,84,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,626,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,642,"            time = time - millisecs;
",6,1,0,0,0,0,0,0,0,8,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,643,"        if (field == Calendar.SECOND) {
",6,1,0,1,3,0,0,0,0,7,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,644,"            done = true;
",2,0,0,0,0,0,0,0,0,4,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,651,"            time = time - (seconds * 1000L);
",6,2,0,1,2,0,0,0,0,9,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,652,"        if (field == Calendar.MINUTE) {
",6,1,0,1,3,0,0,0,0,7,31,6,0.00000,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,653,"            done = true;
",2,0,0,0,0,0,0,0,0,4,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,680,"                            if (val.get(Calendar.DATE) == 1) {
",4,1,0,2,5,0,4,0,0,9,34,14,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,681,"                                val.add(Calendar.DATE, 15);
",4,0,0,1,2,0,4,0,0,8,27,17,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,683,"                                val.add(Calendar.DATE, -15);
",4,0,0,1,2,0,4,0,0,9,28,17,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,684,"                                val.add(Calendar.MONTH, 1);
",4,0,0,1,2,0,4,0,0,8,27,17,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,701,"                    if (fields[i][0] == Calendar.DATE) {
",4,1,1,3,7,0,0,0,0,9,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,705,"                        offset = val.get(Calendar.DATE) - 1;
",6,1,0,1,2,0,4,0,0,12,36,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,708,"                        if (offset >= 15) {
",2,1,0,1,3,0,0,0,0,3,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,709,"                            offset -= 15;
",2,0,0,0,0,0,0,0,0,3,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,712,"                        roundUp = offset > 7;
",4,1,0,0,0,0,0,0,0,6,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,713,"                        offsetSet = true;
",2,0,0,0,0,0,0,0,0,4,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,717,"                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {
",4,1,1,3,7,0,0,0,0,9,43,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,720,"                        offset = val.get(Calendar.HOUR_OF_DAY);
",6,0,0,1,2,0,4,0,0,11,39,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,721,"                        if (offset >= 12) {
",2,1,0,1,3,0,0,0,0,3,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,722,"                            offset -= 12;
",2,0,0,0,0,0,0,0,0,3,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,724,"                        roundUp = offset > 6;
",4,1,0,0,0,0,0,0,0,6,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,725,"                        offsetSet = true;
",2,0,0,0,0,0,0,0,0,4,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,742,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");
",2,1,0,1,2,0,0,2,0,7,79,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,772,"        if (focus == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,773,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,775,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,776,"        gval.setTime(focus);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,777,"        return iterator(gval, rangeStyle);
",0,0,0,1,2,1,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,805,"        if (focus == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,806,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,808,"        Calendar start = null;
",2,0,0,0,0,0,0,2,0,4,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,809,"        Calendar end = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,810,"        int startCutoff = Calendar.SUNDAY;
",6,0,0,0,0,0,0,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,811,"        int endCutoff = Calendar.SATURDAY;
",6,0,0,0,0,0,0,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,812,"        switch (rangeStyle) {
",2,0,0,1,3,0,0,0,0,2,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,816,"                start = truncate(focus, Calendar.MONTH);
",6,0,0,1,2,0,4,0,0,11,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,818,"                end = (Calendar) start.clone();
",2,0,0,2,4,0,4,2,0,9,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,819,"                end.add(Calendar.MONTH, 1);
",4,0,0,1,2,0,4,0,0,8,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,820,"                end.add(Calendar.DATE, -1);
",4,0,0,1,2,0,4,0,0,9,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,822,"                if (rangeStyle == RANGE_MONTH_MONDAY) {
",4,1,0,1,3,0,0,0,0,5,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,823,"                    startCutoff = Calendar.MONDAY;
",6,0,0,0,0,0,0,0,0,7,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,824,"                    endCutoff = Calendar.SUNDAY;
",6,0,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,832,"                start = truncate(focus, Calendar.DATE);
",6,0,0,1,2,0,4,0,0,11,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,833,"                end = truncate(focus, Calendar.DATE);
",6,0,0,1,2,0,4,0,0,11,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,834,"                switch (rangeStyle) {
",2,0,0,1,3,0,0,0,0,2,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,837,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,839,"                        startCutoff = Calendar.MONDAY;
",6,0,0,0,0,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,840,"                        endCutoff = Calendar.SUNDAY;
",6,0,0,0,0,0,0,0,0,7,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,841,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,843,"                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);
",6,0,0,1,2,0,4,0,0,11,46,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,844,"                        endCutoff = startCutoff - 1;
",4,1,0,0,0,0,0,0,0,6,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,845,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,847,"                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;
",6,1,0,1,2,0,4,0,0,12,50,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,848,"                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;
",6,1,0,1,2,0,4,0,0,12,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,851,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,853,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");
",2,1,0,1,2,0,0,2,0,7,87,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,855,"        if (startCutoff < Calendar.SUNDAY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,856,"            startCutoff += 7;
",2,0,0,0,0,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,858,"        if (startCutoff > Calendar.SATURDAY) {
",6,1,0,1,3,0,0,0,0,7,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,859,"            startCutoff -= 7;
",2,0,0,0,0,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,861,"        if (endCutoff < Calendar.SUNDAY) {
",6,1,0,1,3,0,0,0,0,7,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,862,"            endCutoff += 7;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,864,"        if (endCutoff > Calendar.SATURDAY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,865,"            endCutoff -= 7;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,867,"        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {
",6,1,0,2,5,0,4,0,0,11,56,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,868,"            start.add(Calendar.DATE, -1);
",4,0,0,1,2,0,4,0,0,9,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,870,"        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {
",6,1,0,2,5,0,4,0,0,11,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,871,"            end.add(Calendar.DATE, 1);
",4,0,0,1,2,0,4,0,0,8,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,873,"        return new DateIterator(start, end);
",4,0,0,1,2,1,0,2,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,896,"        if (focus == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,897,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,899,"        if (focus instanceof Date) {
",2,0,0,1,3,0,0,2,0,4,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,900,"            return iterator((Date) focus, rangeStyle);
",2,0,0,2,4,1,4,2,0,8,42,7,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,901,"        } else if (focus instanceof Calendar) {
",2,0,0,1,4,0,0,2,0,4,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,902,"            return iterator((Calendar) focus, rangeStyle);
",2,0,0,2,4,1,4,2,0,8,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,904,"            throw new ClassCastException(""Could not iterate based on "" + focus);
",2,1,0,1,2,0,0,2,0,6,68,8,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,922,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,923,"            this.endFinal = endFinal;
",4,0,0,0,0,0,0,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,924,"            spot = startFinal;
",4,0,0,0,0,0,0,0,0,5,18,5,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,925,"            spot.add(Calendar.DATE, -1);
",4,0,0,1,2,0,4,0,0,9,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,926,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,934,"            return spot.before(endFinal);
",0,0,0,1,2,1,6,0,0,6,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,943,"            if (spot.equals(endFinal)) {
",0,0,0,2,5,0,6,0,0,6,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,944,"                throw new NoSuchElementException();
",0,0,0,1,2,0,0,2,0,2,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,946,"            spot.add(Calendar.DATE, 1);
",4,0,0,1,2,0,4,0,0,8,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,947,"            return spot.clone();
",0,0,0,1,2,1,4,0,0,4,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,957,"            throw new UnsupportedOperationException();
",0,0,0,1,2,0,0,2,0,2,42,7,0.00000,0
