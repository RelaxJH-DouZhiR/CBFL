dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,"            int start = index + 2;
",4,1,0,0,0,0,0,0,0,5,22,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,"            boolean isHex = false;
",2,0,0,0,0,0,0,0,0,3,22,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,"            char firstChar = input.charAt(start);
",2,0,0,1,2,0,6,0,0,8,37,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,82,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.57143,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,46,"                start++;
",2,0,0,0,0,0,0,0,0,3,8,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,47,"                isHex = true;
",2,0,0,0,0,0,0,0,0,4,13,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,38,"        int seqEnd = input.length();
",2,0,0,1,2,0,4,0,0,6,28,5,0.44444,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,40,"        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
",6,7,0,3,7,0,10,0,0,25,88,4,0.44444,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,89,"                out.write(Character.toChars(Character.codePointAt(input, i)));
",0,0,0,3,6,0,16,0,0,16,62,9,0.30769,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,54,"        if (input == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.22222,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,58,"            StringWriter writer = new StringWriter(input.length() * 2);
",2,1,0,2,4,0,4,4,0,11,59,6,0.22222,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,59,"            translate(input, writer);
",0,0,0,1,2,0,6,0,0,6,25,7,0.22222,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,76,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,79,"        if (input == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,82,"        int sz = Character.codePointCount(input, 0, input.length());
",2,0,0,2,4,0,10,0,0,12,60,5,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,83,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,86,"            int consumed = translate(input, i, out);
",2,0,0,1,2,0,8,0,0,10,40,7,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,88,"            if (consumed == 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,45,"            if(firstChar == 'x' || firstChar == 'X') {
",4,3,0,1,3,0,0,0,0,9,42,6,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,52,"            int end = start;
",4,0,0,0,0,0,0,0,0,4,16,7,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,54,"            while(input.charAt(end) != ';') 
",0,1,0,2,4,0,6,0,0,8,31,6,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,56,"                end++;
",2,0,0,0,0,0,0,0,0,3,6,8,0.20000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,32,"public abstract class CharSequenceTranslator {
",2,0,0,0,1,2,0,0,0,4,46,1,0.19048,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,31,"public class NumericEntityUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,68,1,0.19048,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,60,"            return writer.toString();
",0,0,0,1,2,1,4,0,0,4,25,7,0.05263,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,105,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,19,40,"    public AggregateTranslator(CharSequenceTranslator... translators) {
",4,0,0,1,3,1,0,2,0,7,67,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,19,41,"        this.translators = ArrayUtils.clone(translators);
",2,0,0,1,2,0,6,0,0,9,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,19,42,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,19,51,"        for (CharSequenceTranslator translator : translators) {
",4,0,0,1,3,0,0,2,0,6,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,19,52,"            int consumed = translator.translate(input, index, out);
",2,0,0,1,2,0,10,0,0,12,55,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,19,53,"            if(consumed != 0) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,19,54,"                return consumed;
",2,0,0,0,0,1,0,0,0,2,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,19,57,"        return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,55,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,61,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,63,"            throw new RuntimeException(ioe);
",2,0,0,1,2,0,0,2,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,77,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,80,"            return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,93,"                for (int j = 0; j < consumed; j++) {
",8,1,0,1,3,0,0,0,0,10,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,94,"                    if (i < sz - 2) {
",4,2,0,1,3,0,0,0,0,6,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,95,"                        i += Character.charCount(Character.codePointAt(input, i));
",2,0,0,2,4,0,12,0,0,15,58,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,98,"                        i++;
",2,0,0,0,0,0,0,0,0,3,4,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,102,"                i--;
",2,0,0,0,0,0,0,0,0,3,4,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,115,"        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];
",6,1,0,2,4,0,0,4,0,11,87,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,116,"        newArray[0] = this;
",0,0,1,1,2,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,117,"        System.arraycopy(translators, 0, newArray, 1, translators.length);
",4,0,0,1,2,0,8,0,0,12,66,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,118,"        return new AggregateTranslator(newArray);
",2,0,0,1,2,1,0,2,0,4,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,129,"        return Integer.toHexString(codepoint).toUpperCase(Locale.ENGLISH);
",4,0,0,2,4,1,8,0,0,12,66,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,61,"                if(isHex) {
",2,0,0,1,3,0,0,0,0,2,11,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,62,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
",2,0,0,3,6,0,14,0,0,17,77,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,64,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
",2,0,0,3,6,0,14,0,0,17,77,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,69,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,66,"            } catch(NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,67,"            System.err.println(""FAIL: "" + input.subSequence(start, end) + ""["" + start +""][""+ end +""]"");
",8,1,0,4,8,0,10,0,0,23,91,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,68,"                return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,71,"            if(entityValue > 0xFFFF) {
",2,1,0,1,3,0,0,0,0,3,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,72,"                char[] chrs = Character.toChars(entityValue);
",2,0,0,2,4,0,6,0,0,8,45,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,73,"                out.write(chrs[0]);
",0,0,1,2,4,0,4,0,0,6,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,74,"                out.write(chrs[1]);
",0,0,1,2,4,0,4,0,0,6,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,75,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,76,"                out.write(entityValue);
",0,0,0,1,2,0,6,0,0,6,23,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,80,"            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
",6,2,0,2,4,1,0,0,0,8,47,6,0.00000,0
