dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,"        return nullText;
",2,0,0,0,0,0,0,0,0,2,16,4,1.33333,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,"        if (width > 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.33333,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,"            ensureCapacity(size + width);
",4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,"            String str = (obj == null ? getNullText() : obj.toString());
",4,1,0,3,6,0,6,2,0,14,60,6,0.33333,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,"            int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,"        if (width > 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.25000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,"            ensureCapacity(size + width);
",4,1,0,1,2,0,2,0,0,7,29,7,0.25000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,"            String str = (obj == null ? getNullText() : obj.toString());
",4,1,0,3,6,0,6,2,0,14,60,6,0.25000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,"            int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,7,0.25000,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,"        this(CAPACITY);
",2,0,0,1,2,0,0,0,0,2,15,4,0.02837,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,99,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02837,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,107,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.02778,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,108,"        if (initialCapacity <= 0) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.02778,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,"        buffer = new char[initialCapacity];
",2,0,1,1,2,0,0,0,0,5,35,4,0.02778,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02778,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,216,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,217,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');
",2,0,0,1,2,3,0,4,0,10,69,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,41,"    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');
",2,0,0,1,2,3,0,4,0,10,68,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,45,"    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');
",2,0,0,1,2,3,0,4,0,10,69,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());
",2,0,0,2,4,3,2,4,0,12,94,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,54,"    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();
",2,0,0,1,2,3,0,4,0,9,65,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,58,"    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');
",2,0,0,1,2,3,0,4,0,10,77,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');
",2,0,0,1,2,3,0,4,0,10,76,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());
",2,0,0,2,4,3,2,4,0,12,88,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,70,"    private static final StrMatcher NONE_MATCHER = new NoMatcher();
",2,0,0,1,2,3,0,4,0,9,63,2,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,386,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,387,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,413,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,414,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,317,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,318,"            this.ch = ch;
",4,0,0,0,0,0,0,0,0,5,13,5,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,319,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,284,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,285,"            this.chars = (char[]) chars.clone();
",2,0,0,3,6,0,4,0,0,7,36,5,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,286,"            Arrays.sort(this.chars);
",2,0,0,1,2,0,4,0,0,6,24,6,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,287,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02484,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,228,"        if (capacity > buffer.length) {
",6,1,0,1,3,0,0,0,0,7,31,4,0.02094,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,233,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.02094,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,80,"        return COMMA_MATCHER;
",2,0,0,0,0,0,0,0,0,2,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,89,"        return TAB_MATCHER;
",2,0,0,0,0,0,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,98,"        return SPACE_MATCHER;
",2,0,0,0,0,0,0,0,0,2,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,108,"        return SPLIT_MATCHER;
",2,0,0,0,0,0,0,0,0,2,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,117,"        return TRIM_MATCHER;
",2,0,0,0,0,0,0,0,0,2,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,126,"        return SINGLE_QUOTE_MATCHER;
",2,0,0,0,0,0,0,0,0,2,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,135,"        return DOUBLE_QUOTE_MATCHER;
",2,0,0,0,0,0,0,0,0,2,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,144,"        return QUOTE_MATCHER;
",2,0,0,0,0,0,0,0,0,2,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,153,"        return NONE_MATCHER;
",2,0,0,0,0,0,0,0,0,2,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,163,"        return new CharMatcher(ch);
",2,0,0,1,2,0,0,2,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,173,"        if (chars == null || chars.length == 0) {
",6,3,0,1,3,0,0,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,174,"            return NONE_MATCHER;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,176,"        if (chars.length == 1) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,177,"            return new CharMatcher(chars[0]);
",0,0,1,2,4,0,0,2,0,4,33,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,179,"        return new CharSetMatcher(chars);
",2,0,0,1,2,0,0,2,0,4,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,189,"        if (chars == null || chars.length() == 0) {
",2,3,0,2,5,0,4,0,0,9,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,190,"            return NONE_MATCHER;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,192,"        if (chars.length() == 1) {
",0,1,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,193,"            return new CharMatcher(chars.charAt(0));
",0,0,0,2,4,0,4,2,0,6,40,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,195,"        return new CharSetMatcher(chars.toCharArray());
",0,0,0,2,4,0,4,2,0,6,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,205,"        if (str == null || str.length() == 0) {
",2,3,0,2,5,0,4,0,0,9,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,206,"            return NONE_MATCHER;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,208,"        return new StringMatcher(str);
",2,0,0,1,2,0,0,2,0,4,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,267,"        return isMatch(buffer, pos, 0, buffer.length);
",4,0,0,1,2,0,6,0,0,10,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2561,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2560,"        StrBuilderTokenizer() {
",2,0,0,1,3,0,0,0,0,2,23,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2562,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2566,"            if (chars == null) {
",2,1,0,1,3,0,0,0,0,3,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2567,"                return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());
",8,0,0,2,4,0,2,0,0,10,73,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2569,"                return super.tokenize(chars, offset, count);
",8,0,0,1,2,0,0,0,0,8,44,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2575,"            String str = super.getContent();
",4,0,0,1,2,0,0,2,0,6,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2576,"            if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2577,"                return StrBuilder.this.toString();
",2,0,0,1,2,0,2,0,0,4,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2579,"                return str;
",2,0,0,0,0,0,0,0,0,2,11,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,241,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,118,"    private StrMatcher delimMatcher = StrMatcher.splitMatcher();
",2,0,0,1,2,1,4,2,0,9,60,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,120,"    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();
",2,0,0,1,2,1,4,2,0,9,59,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,122,"    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();
",2,0,0,1,2,1,4,2,0,9,61,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,124,"    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();
",2,0,0,1,2,1,4,2,0,9,61,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,127,"    private boolean emptyAsNull = false;
",2,0,0,0,0,1,0,0,0,4,36,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,129,"    private boolean ignoreEmptyTokens = true;
",2,0,0,0,0,1,0,0,0,4,41,2,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,242,"        this.chars = null;
",2,0,0,0,0,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,243,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,252,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,253,"        if (input != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,254,"            chars = input.toCharArray();
",2,0,0,1,2,0,4,0,0,7,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,256,"            chars = null;
",2,0,0,0,0,0,0,0,0,3,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,258,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,267,"        this(input);
",2,0,0,1,2,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,268,"        setDelimiterChar(delim);
",0,0,0,1,2,0,4,0,0,4,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,269,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,278,"        this(input);
",2,0,0,1,2,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,279,"        setDelimiterString(delim);
",0,0,0,1,2,0,4,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,280,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,289,"        this(input);
",2,0,0,1,2,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,290,"        setDelimiterMatcher(delim);
",0,0,0,1,2,0,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,291,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,302,"        this(input, delim);
",4,0,0,1,2,0,0,0,0,4,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,303,"        setQuoteChar(quote);
",0,0,0,1,2,0,4,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,304,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,315,"        this(input, delim);
",4,0,0,1,2,0,0,0,0,4,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,316,"        setQuoteMatcher(quote);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,317,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,329,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,330,"        this.chars = input;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,331,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,343,"        this(input);
",2,0,0,1,2,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,344,"        setDelimiterChar(delim);
",0,0,0,1,2,0,4,0,0,4,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,345,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,357,"        this(input);
",2,0,0,1,2,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,358,"        setDelimiterString(delim);
",0,0,0,1,2,0,4,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,359,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,371,"        this(input);
",2,0,0,1,2,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,372,"        setDelimiterMatcher(delim);
",0,0,0,1,2,0,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,373,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,387,"        this(input, delim);
",4,0,0,1,2,0,0,0,0,4,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,388,"        setQuoteChar(quote);
",0,0,0,1,2,0,4,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,389,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,403,"        this(input, delim);
",4,0,0,1,2,0,0,0,0,4,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,404,"        setQuoteMatcher(quote);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,405,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,93,"        CSV_TOKENIZER_PROTOTYPE = new StrTokenizer();
",2,0,0,1,2,0,0,2,0,5,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,94,"        CSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.commaMatcher());
",0,0,0,2,4,0,8,0,0,8,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,95,"        CSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());
",0,0,0,2,4,0,8,0,0,8,73,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,96,"        CSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());
",0,0,0,2,4,0,8,0,0,8,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,97,"        CSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());
",0,0,0,2,4,0,8,0,0,8,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,98,"        CSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);
",0,0,0,1,2,0,4,0,0,5,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,99,"        CSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);
",0,0,0,1,2,0,4,0,0,5,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,101,"        TSV_TOKENIZER_PROTOTYPE = new StrTokenizer();
",2,0,0,1,2,0,0,2,0,5,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,102,"        TSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.tabMatcher());
",0,0,0,2,4,0,8,0,0,8,69,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,103,"        TSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());
",0,0,0,2,4,0,8,0,0,8,73,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,104,"        TSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());
",0,0,0,2,4,0,8,0,0,8,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,105,"        TSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());
",0,0,0,2,4,0,8,0,0,8,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,106,"        TSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);
",0,0,0,1,2,0,4,0,0,5,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,107,"        TSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);
",0,0,0,1,2,0,4,0,0,5,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,108,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,139,"        return (StrTokenizer) CSV_TOKENIZER_PROTOTYPE.clone();
",0,0,0,2,4,0,4,2,0,6,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,152,"        return getCSVClone();
",0,0,0,1,2,0,2,0,0,2,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,165,"        StrTokenizer tok = getCSVClone();
",2,0,0,1,2,0,2,2,0,6,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,166,"        tok.reset(input);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,167,"        return tok;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,180,"        StrTokenizer tok = getCSVClone();
",2,0,0,1,2,0,2,2,0,6,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,181,"        tok.reset(input);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,182,"        return tok;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,191,"        return (StrTokenizer) TSV_TOKENIZER_PROTOTYPE.clone();
",0,0,0,2,4,0,4,2,0,6,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,204,"        return getTSVClone();
",0,0,0,1,2,0,2,0,0,2,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,215,"        StrTokenizer tok = getTSVClone();
",2,0,0,1,2,0,2,2,0,6,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,216,"        tok.reset(input);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,217,"        return tok;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,228,"        StrTokenizer tok = getTSVClone();
",2,0,0,1,2,0,2,2,0,6,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,229,"        tok.reset(input);
",0,0,0,1,2,0,6,0,0,6,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,230,"        return tok;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,415,"        checkTokenized();
",0,0,0,1,2,0,2,0,0,2,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,416,"        return tokens.length;
",4,0,0,0,0,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,425,"        if (hasNext()) {
",0,0,0,2,5,0,2,0,0,2,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,426,"            return tokens[tokenPos++];
",2,0,1,1,2,0,0,0,0,5,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,428,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,437,"        if (hasPrevious()) {
",0,0,0,2,5,0,2,0,0,2,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,438,"            return tokens[--tokenPos];
",2,0,1,1,2,0,0,0,0,5,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,440,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,449,"        checkTokenized();
",0,0,0,1,2,0,2,0,0,2,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,450,"        return (String[]) tokens.clone();
",0,0,0,3,6,0,4,2,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,459,"        checkTokenized();
",0,0,0,1,2,0,2,0,0,2,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,460,"        List list = new ArrayList(tokens.length);
",6,0,0,1,2,0,0,4,0,10,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,461,"        for (int i = 0; i < tokens.length; i++) {
",10,1,0,1,3,0,0,0,0,12,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,462,"            list.add(tokens[i]);
",0,0,1,2,4,0,4,0,0,8,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,464,"        return list;
",2,0,0,0,0,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,475,"        tokenPos = 0;
",2,0,0,0,0,0,0,0,0,3,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,476,"        tokens = null;
",2,0,0,0,0,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,477,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,489,"        reset();
",0,0,0,1,2,0,2,0,0,2,8,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,490,"        if (input != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,491,"            this.chars = input.toCharArray();
",2,0,0,1,2,0,4,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,493,"            this.chars = null;
",2,0,0,0,0,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,495,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,510,"        reset();
",0,0,0,1,2,0,2,0,0,2,8,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,511,"        this.chars = input;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,512,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,523,"        checkTokenized();
",0,0,0,1,2,0,2,0,0,2,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,524,"        return tokenPos < tokens.length;
",6,1,0,0,0,0,0,0,0,7,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,533,"        if (hasNext()) {
",0,0,0,2,5,0,2,0,0,2,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,534,"            return tokens[tokenPos++];
",2,0,1,1,2,0,0,0,0,5,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,536,"        throw new NoSuchElementException();
",0,0,0,1,2,0,0,2,0,2,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,545,"        return tokenPos;
",2,0,0,0,0,0,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,554,"        checkTokenized();
",0,0,0,1,2,0,2,0,0,2,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,555,"        return tokenPos > 0;
",2,1,0,0,0,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,564,"        if (hasPrevious()) {
",0,0,0,2,5,0,2,0,0,2,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,565,"            return tokens[--tokenPos];
",2,0,1,1,2,0,0,0,0,5,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,567,"        throw new NoSuchElementException();
",0,0,0,1,2,0,0,2,0,2,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,576,"        return tokenPos - 1;
",2,1,0,0,0,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,585,"        throw new UnsupportedOperationException(""remove() is unsupported"");
",0,0,0,2,4,0,0,2,0,3,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,594,"        throw new UnsupportedOperationException(""set() is unsupported"");
",0,0,0,2,4,0,0,2,0,3,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,603,"        throw new UnsupportedOperationException(""add() is unsupported"");
",0,0,0,2,4,0,0,2,0,3,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,612,"        if (tokens == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,613,"            if (chars == null) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,615,"                List split = tokenize(null, 0, 0);
",2,0,0,1,2,0,2,2,0,7,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,616,"                tokens = (String[]) split.toArray(new String[split.size()]);
",2,0,0,5,10,0,8,4,0,15,60,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,617,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,618,"                List split = tokenize(chars, 0, chars.length);
",6,0,0,1,2,0,4,2,0,12,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,619,"                tokens = (String[]) split.toArray(new String[split.size()]);
",2,0,0,5,10,0,8,4,0,15,60,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,622,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,645,"        if (chars == null || count == 0) {
",4,3,0,1,3,0,0,0,0,7,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,646,"            return Collections.EMPTY_LIST;
",4,0,0,0,0,0,0,0,0,4,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,648,"        StrBuilder buf = new StrBuilder();
",2,0,0,1,2,0,0,4,0,6,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,649,"        List tokens = new ArrayList();
",2,0,0,1,2,0,0,4,0,6,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,650,"        int pos = offset;
",4,0,0,0,0,0,0,0,0,4,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,653,"        while (pos >= 0 && pos < count) {
",6,3,0,1,3,0,0,0,0,9,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,655,"            pos = readNextToken(chars, pos, count, buf, tokens);
",2,0,0,1,2,0,12,0,0,15,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,658,"            if (pos >= count) {
",4,1,0,1,3,0,0,0,0,5,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,659,"                addToken(tokens, """");
",0,0,0,1,2,0,4,0,0,5,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,662,"        return tokens;
",2,0,0,0,0,0,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,672,"        if (tok == null || tok.length() == 0) {
",2,3,0,2,5,0,4,0,0,9,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,673,"            if (isIgnoreEmptyTokens()) {
",0,0,0,2,5,0,2,0,0,2,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,674,"                return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,676,"            if (isEmptyTokenAsNull()) {
",0,0,0,2,5,0,2,0,0,2,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,677,"                tok = null;
",2,0,0,0,0,0,0,0,0,3,11,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,680,"        list.add(tok);
",0,0,0,1,2,0,6,0,0,6,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,681,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,697,"        while (start < len) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,698,"            int removeLen = Math.max(
",2,0,0,0,1,0,4,0,0,6,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,701,"            if (removeLen == 0 ||
",2,3,0,0,1,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,704,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,706,"            start += removeLen;
",4,0,0,0,0,0,0,0,0,5,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,707,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,710,"        if (start >= len) {
",4,1,0,1,3,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,711,"            addToken(tokens, """");
",0,0,0,1,2,0,4,0,0,5,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,712,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,716,"        int delimLen = getDelimiterMatcher().isMatch(chars, start, start, len);
",2,0,0,2,4,0,12,0,0,14,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,717,"        if (delimLen > 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,718,"            addToken(tokens, """");
",0,0,0,1,2,0,4,0,0,5,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,719,"            return start + delimLen;
",4,1,0,0,0,0,0,0,0,5,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,723,"        int quoteLen = getQuoteMatcher().isMatch(chars, start, start, len);
",2,0,0,2,4,0,12,0,0,14,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,724,"        if (quoteLen > 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,725,"            return readWithQuotes(chars, start + quoteLen, len, workArea, tokens, start, quoteLen);
",4,1,0,1,2,0,14,0,0,19,87,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,727,"        return readWithQuotes(chars, start, len, workArea, tokens, 0, 0);
",0,0,0,1,2,0,12,0,0,12,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,749,"        workArea.clear();
",0,0,0,1,2,0,4,0,0,4,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,750,"        int pos = start;
",4,0,0,0,0,0,0,0,0,4,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,751,"        boolean quoting = (quoteLen > 0);
",4,1,0,1,2,0,0,0,0,5,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,752,"        int trimStart = 0;
",2,0,0,0,0,0,0,0,0,2,18,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,754,"        while (pos < len) {
",4,1,0,1,3,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,758,"            if (quoting) {
",2,0,0,1,3,0,0,0,0,2,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,765,"                if (isQuote(chars, pos, len, quoteStart, quoteLen)) {
",0,0,0,2,5,0,12,0,0,12,53,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,766,"                    if (isQuote(chars, pos + quoteLen, len, quoteStart, quoteLen)) {
",4,1,0,2,5,0,10,0,0,15,64,11,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,768,"                        workArea.append(chars, pos, quoteLen);
",0,0,0,1,2,0,10,0,0,10,38,13,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,769,"                        pos += (quoteLen * 2);
",4,1,0,1,2,0,0,0,0,6,22,12,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,770,"                        trimStart = workArea.size();
",2,0,0,1,2,0,4,0,0,7,28,12,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,771,"                        continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,775,"                    quoting = false;
",2,0,0,0,0,0,0,0,0,4,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,776,"                    pos += quoteLen;
",4,0,0,0,0,0,0,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,777,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,781,"                workArea.append(chars[pos++]);
",2,0,1,2,4,0,4,0,0,9,30,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,782,"                trimStart = workArea.size();
",2,0,0,1,2,0,4,0,0,7,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,788,"                int delimLen = getDelimiterMatcher().isMatch(chars, pos, start, len);
",2,0,0,2,4,0,12,0,0,14,69,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,789,"                if (delimLen > 0) {
",2,1,0,1,3,0,0,0,0,3,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,791,"                    addToken(tokens, workArea.substring(0, trimStart));
",0,0,0,2,4,0,10,0,0,10,51,11,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,792,"                    return pos + delimLen;
",4,1,0,0,0,0,0,0,0,5,22,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,796,"                if (quoteLen > 0) {
",2,1,0,1,3,0,0,0,0,3,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,797,"                    if (isQuote(chars, pos, len, quoteStart, quoteLen)) {
",0,0,0,2,5,0,12,0,0,12,53,11,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,798,"                        quoting = true;
",2,0,0,0,0,0,0,0,0,4,15,12,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,799,"                        pos += quoteLen;
",4,0,0,0,0,0,0,0,0,5,16,12,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,800,"                        continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,805,"                int ignoredLen = getIgnoredMatcher().isMatch(chars, pos, start, len);
",2,0,0,2,4,0,12,0,0,14,69,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,806,"                if (ignoredLen > 0) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,807,"                    pos += ignoredLen;
",4,0,0,0,0,0,0,0,0,5,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,808,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,814,"                int trimmedLen = getTrimmerMatcher().isMatch(chars, pos, start, len);
",2,0,0,2,4,0,12,0,0,14,69,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,815,"                if (trimmedLen > 0) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,816,"                    workArea.append(chars, pos, trimmedLen);
",0,0,0,1,2,0,10,0,0,10,40,11,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,817,"                    pos += trimmedLen;
",4,0,0,0,0,0,0,0,0,5,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,818,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,822,"                workArea.append(chars[pos++]);
",2,0,1,2,4,0,4,0,0,9,30,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,823,"                trimStart = workArea.size();
",2,0,0,1,2,0,4,0,0,7,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,824,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,828,"        addToken(tokens, workArea.substring(0, trimStart));
",0,0,0,2,4,0,10,0,0,10,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,829,"        return -1;
",0,0,0,0,0,0,0,0,0,1,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,844,"        for (int i = 0; i < quoteLen; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,845,"            if ((pos + i) >= len || chars[pos + i] != chars[quoteStart + i]) {
",14,6,1,4,9,0,0,0,0,24,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,846,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,849,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,860,"        return this.delimMatcher;
",2,0,0,0,0,0,0,0,0,2,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,872,"        if (delim == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,873,"            this.delimMatcher = StrMatcher.noneMatcher();
",2,0,0,1,2,0,4,0,0,7,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,875,"            this.delimMatcher = delim;
",4,0,0,0,0,0,0,0,0,5,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,877,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,887,"        return setDelimiterMatcher(StrMatcher.charMatcher(delim));
",0,0,0,2,4,0,8,0,0,8,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,897,"        return setDelimiterMatcher(StrMatcher.stringMatcher(delim));
",0,0,0,2,4,0,8,0,0,8,60,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,912,"        return quoteMatcher;
",2,0,0,0,0,0,0,0,0,2,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,925,"        if (quote != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,926,"            this.quoteMatcher = quote;
",4,0,0,0,0,0,0,0,0,5,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,928,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,941,"        return setQuoteMatcher(StrMatcher.charMatcher(quote));
",0,0,0,2,4,0,8,0,0,8,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,956,"        return ignoredMatcher;
",2,0,0,0,0,0,0,0,0,2,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,969,"        if (ignored != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,970,"            this.ignoredMatcher = ignored;
",4,0,0,0,0,0,0,0,0,5,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,972,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,985,"        return setIgnoredMatcher(StrMatcher.charMatcher(ignored));
",0,0,0,2,4,0,8,0,0,8,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1000,"        return trimmerMatcher;
",2,0,0,0,0,0,0,0,0,2,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1013,"        if (trimmer != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1014,"            this.trimmerMatcher = trimmer;
",4,0,0,0,0,0,0,0,0,5,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1016,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1027,"        return this.emptyAsNull;
",2,0,0,0,0,0,0,0,0,2,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1038,"        this.emptyAsNull = emptyAsNull;
",4,0,0,0,0,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1039,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1050,"        return ignoreEmptyTokens;
",2,0,0,0,0,0,0,0,0,2,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1061,"        this.ignoreEmptyTokens = ignoreEmptyTokens;
",4,0,0,0,0,0,0,0,0,5,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1062,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1072,"        if (chars == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1073,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1075,"        return new String(chars);
",2,0,0,1,2,0,0,2,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1088,"            return cloneReset();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1089,"        } catch (CloneNotSupportedException ex) {
",2,0,0,1,4,0,0,2,0,4,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1090,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1103,"        StrTokenizer cloned = (StrTokenizer) super.clone();
",4,0,0,2,4,0,0,4,0,8,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1104,"        if (cloned.chars != null) {
",4,1,0,1,3,0,0,0,0,5,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1105,"            cloned.chars = (char[]) cloned.chars.clone();
",8,0,0,3,6,0,2,0,0,11,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1107,"        cloned.reset();
",0,0,0,1,2,0,4,0,0,4,15,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1108,"        return cloned;
",2,0,0,0,0,0,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1118,"        if (tokens == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1119,"            return ""StrTokenizer[not tokenized yet]"";
",0,0,0,1,2,0,0,0,0,1,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,1121,"        return ""StrTokenizer"" + getTokenList();
",0,1,0,1,2,0,2,0,0,4,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,109,"            initialCapacity = CAPACITY;
",4,0,0,0,0,0,0,0,0,5,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,121,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,122,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,123,"            buffer = new char[CAPACITY];
",2,0,1,1,2,0,0,0,0,5,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,125,"            buffer = new char[str.length() + CAPACITY];
",4,1,0,2,4,0,4,0,0,10,43,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,126,"            append(str);
",0,0,0,1,2,0,4,0,0,4,12,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,128,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,137,"        return newLine;
",2,0,0,0,0,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,147,"        this.newLine = newLine;
",4,0,0,0,0,0,0,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,148,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,168,"        if (nullText != null && nullText.length() == 0) {
",2,3,0,2,5,0,4,0,0,9,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,169,"            nullText = null;
",2,0,0,0,0,0,0,0,0,3,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,171,"        this.nullText = nullText;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,172,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,182,"        return size;
",2,0,0,0,0,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,194,"        if (length < 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,195,"            throw new StringIndexOutOfBoundsException(length);
",2,0,0,1,2,0,0,2,0,4,50,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,197,"        if (length < size) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,198,"            size = length;
",4,0,0,0,0,0,0,0,0,5,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,199,"        } else if (length > size) {
",4,1,0,1,4,0,0,0,0,5,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,200,"            ensureCapacity(length);
",0,0,0,1,2,0,4,0,0,4,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,201,"            int oldEnd = size;
",4,0,0,0,0,0,0,0,0,4,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,202,"            int newEnd = length;
",4,0,0,0,0,0,0,0,0,4,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,203,"            size = length;
",4,0,0,0,0,0,0,0,0,5,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,204,"            for (int i = oldEnd; i < newEnd; i++) {
",10,1,0,1,3,0,0,0,0,12,39,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,205,"                buffer[i] = '\0';
",0,0,1,1,2,0,0,0,0,6,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,208,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,218,"        return buffer.length;
",4,0,0,0,0,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,229,"            char[] old = buffer;
",4,0,0,1,2,0,0,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,230,"            buffer = new char[capacity];
",2,0,1,1,2,0,0,0,0,5,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,231,"            System.arraycopy(old, 0, buffer, 0, size);
",0,0,0,1,2,0,10,0,0,10,42,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,242,"        if (buffer.length > length()) {
",4,1,0,2,5,0,2,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,243,"            char[] old = buffer;
",4,0,0,1,2,0,0,0,0,4,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,244,"            buffer = new char[length()];
",2,0,0,2,4,0,2,0,0,5,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,245,"            System.arraycopy(old, 0, buffer, 0, size);
",0,0,0,1,2,0,10,0,0,10,42,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,247,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,260,"        return size;
",2,0,0,0,0,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,272,"        return size == 0;
",2,1,0,0,0,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,287,"        size = 0;
",2,0,0,0,0,0,0,0,0,3,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,288,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,302,"        if (index < 0 || index >= length()) {
",4,3,0,2,5,0,2,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,303,"            throw new StringIndexOutOfBoundsException(index);
",2,0,0,1,2,0,0,2,0,4,49,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,305,"        return buffer[index];
",0,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,319,"        if (index < 0 || index >= length()) {
",4,3,0,2,5,0,2,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,320,"            throw new StringIndexOutOfBoundsException(index);
",2,0,0,1,2,0,0,2,0,4,49,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,322,"        buffer[index] = ch;
",2,0,1,1,2,0,0,0,0,7,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,323,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,336,"        if (index < 0 || index >= size) {
",6,3,0,1,3,0,0,0,0,9,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,337,"            throw new StringIndexOutOfBoundsException(index);
",2,0,0,1,2,0,0,2,0,4,49,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,339,"        deleteImpl(index, index + 1, 1);
",2,1,0,1,2,0,4,0,0,7,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,340,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,350,"        if (size == 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,351,"            return ArrayUtils.EMPTY_CHAR_ARRAY;
",4,0,0,0,0,0,0,0,0,4,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,353,"        char chars[] = new char[size];
",2,0,1,2,4,0,0,0,0,4,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,354,"        System.arraycopy(buffer, 0, chars, 0, size);
",0,0,0,1,2,0,10,0,0,10,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,355,"        return chars;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,369,"        endIndex = validateRange(startIndex, endIndex);
",2,0,0,1,2,0,6,0,0,9,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,370,"        int len = endIndex - startIndex;
",6,1,0,0,0,0,0,0,0,7,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,371,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,372,"            return ArrayUtils.EMPTY_CHAR_ARRAY;
",4,0,0,0,0,0,0,0,0,4,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,374,"        char chars[] = new char[len];
",2,0,1,2,4,0,0,0,0,4,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,375,"        System.arraycopy(buffer, startIndex, chars, 0, len);
",0,0,0,1,2,0,12,0,0,12,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,376,"        return chars;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,386,"        int len = length();
",2,0,0,1,2,0,2,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,387,"        if (destination == null || destination.length < len) {
",8,3,0,1,3,0,0,0,0,11,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,388,"            destination = new char[len];
",2,0,1,1,2,0,0,0,0,5,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,390,"        System.arraycopy(buffer, 0, destination, 0, len);
",0,0,0,1,2,0,10,0,0,10,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,391,"        return destination;
",2,0,0,0,0,0,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,405,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,406,"            throw new StringIndexOutOfBoundsException(startIndex);
",2,0,0,1,2,0,0,2,0,4,54,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,408,"        if (endIndex < 0 || endIndex > length()) {
",4,3,0,2,5,0,2,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,409,"            throw new StringIndexOutOfBoundsException(endIndex);
",2,0,0,1,2,0,0,2,0,4,52,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,411,"        if (startIndex > endIndex) {
",4,1,0,1,3,0,0,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,412,"            throw new StringIndexOutOfBoundsException(""end < start"");
",0,0,0,1,2,0,0,2,0,3,57,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,414,"        System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);
",4,1,0,1,2,0,12,0,0,17,91,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,415,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,428,"        if (newLine == null)  {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,429,"            append(SystemUtils.LINE_SEPARATOR);
",4,0,0,1,2,0,2,0,0,6,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,430,"            return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,432,"        return append(newLine);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,441,"        if (nullText == null)  {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,442,"            return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,444,"        return append(nullText);
",0,0,0,1,2,0,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,455,"        if (obj == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,456,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,458,"        return append(obj.toString());        
",0,0,0,2,4,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,469,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,470,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,472,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,473,"        if (strLen > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,474,"            int len = length();
",2,0,0,1,2,0,2,0,0,4,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,475,"            ensureCapacity(len + strLen);
",4,1,0,1,2,0,2,0,0,7,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,476,"            str.getChars(0, strLen, buffer, len);
",0,0,0,1,2,0,10,0,0,10,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,477,"            size += strLen;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,479,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,492,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,493,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,495,"        if (startIndex < 0 || startIndex > str.length()) {
",4,3,0,2,5,0,4,0,0,11,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,496,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");
",0,0,0,1,2,0,0,2,0,3,70,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,498,"        if (length < 0 || (startIndex + length) > str.length()) {
",6,4,0,3,7,0,4,0,0,14,57,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,499,"            throw new StringIndexOutOfBoundsException(""length must be valid"");
",0,0,0,1,2,0,0,2,0,3,66,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,501,"        if (length > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,502,"            int len = length();
",2,0,0,1,2,0,2,0,0,4,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,503,"            ensureCapacity(len + length);
",4,1,0,1,2,0,2,0,0,7,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,504,"            str.getChars(startIndex, startIndex + length, buffer, len);
",4,1,0,1,2,0,10,0,0,15,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,505,"            size += length;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,507,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,518,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,519,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,521,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,522,"        if (strLen > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,523,"            int len = length();
",2,0,0,1,2,0,2,0,0,4,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,524,"            ensureCapacity(len + strLen);
",4,1,0,1,2,0,2,0,0,7,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,525,"            str.getChars(0, strLen, buffer, len);
",0,0,0,1,2,0,10,0,0,10,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,526,"            size += strLen;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,528,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,541,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,542,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,544,"        if (startIndex < 0 || startIndex > str.length()) {
",4,3,0,2,5,0,4,0,0,11,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,545,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");
",0,0,0,1,2,0,0,2,0,3,70,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,547,"        if (length < 0 || (startIndex + length) > str.length()) {
",6,4,0,3,7,0,4,0,0,14,57,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,548,"            throw new StringIndexOutOfBoundsException(""length must be valid"");
",0,0,0,1,2,0,0,2,0,3,66,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,550,"        if (length > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,551,"            int len = length();
",2,0,0,1,2,0,2,0,0,4,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,552,"            ensureCapacity(len + length);
",4,1,0,1,2,0,2,0,0,7,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,553,"            str.getChars(startIndex, startIndex + length, buffer, len);
",4,1,0,1,2,0,10,0,0,15,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,554,"            size += length;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,556,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,567,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,568,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,570,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,571,"        if (strLen > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,572,"            int len = length();
",2,0,0,1,2,0,2,0,0,4,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,573,"            ensureCapacity(len + strLen);
",4,1,0,1,2,0,2,0,0,7,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,574,"            System.arraycopy(str.buffer, 0, buffer, len, strLen);
",4,0,0,1,2,0,10,0,0,14,53,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,575,"            size += strLen;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,577,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,590,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,591,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,593,"        if (startIndex < 0 || startIndex > str.length()) {
",4,3,0,2,5,0,4,0,0,11,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,594,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");
",0,0,0,1,2,0,0,2,0,3,70,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,596,"        if (length < 0 || (startIndex + length) > str.length()) {
",6,4,0,3,7,0,4,0,0,14,57,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,597,"            throw new StringIndexOutOfBoundsException(""length must be valid"");
",0,0,0,1,2,0,0,2,0,3,66,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,599,"        if (length > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,600,"            int len = length();
",2,0,0,1,2,0,2,0,0,4,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,601,"            ensureCapacity(len + length);
",4,1,0,1,2,0,2,0,0,7,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,602,"            str.getChars(startIndex, startIndex + length, buffer, len);
",4,1,0,1,2,0,10,0,0,15,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,603,"            size += length;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,605,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,616,"        if (chars == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,617,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,619,"        int strLen = chars.length;
",6,0,0,0,0,0,0,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,620,"        if (strLen > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,621,"            int len = length();
",2,0,0,1,2,0,2,0,0,4,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,622,"            ensureCapacity(len + strLen);
",4,1,0,1,2,0,2,0,0,7,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,623,"            System.arraycopy(chars, 0, buffer, len, strLen);
",0,0,0,1,2,0,12,0,0,12,48,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,624,"            size += strLen;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,626,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,639,"        if (chars == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,640,"            return appendNull();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,642,"        if (startIndex < 0 || startIndex > chars.length) {
",8,3,0,1,3,0,0,0,0,11,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,643,"            throw new StringIndexOutOfBoundsException(""Invalid startIndex: "" + length);
",2,1,0,1,2,0,0,2,0,6,75,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,645,"        if (length < 0 || (startIndex + length) > chars.length) {
",10,4,0,2,5,0,0,0,0,14,57,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,646,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);
",2,1,0,1,2,0,0,2,0,6,71,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,648,"        if (length > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,649,"            int len = length();
",2,0,0,1,2,0,2,0,0,4,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,650,"            ensureCapacity(len + length);
",4,1,0,1,2,0,2,0,0,7,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,651,"            System.arraycopy(chars, startIndex, buffer, len, length);
",0,0,0,1,2,0,14,0,0,14,57,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,652,"            size += length;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,654,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,664,"        if (value) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,665,"            ensureCapacity(size + 4);
",2,1,0,1,2,0,2,0,0,5,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,666,"            buffer[size++] = 't';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,667,"            buffer[size++] = 'r';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,668,"            buffer[size++] = 'u';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,669,"            buffer[size++] = 'e';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,671,"            ensureCapacity(size + 5);
",2,1,0,1,2,0,2,0,0,5,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,672,"            buffer[size++] = 'f';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,673,"            buffer[size++] = 'a';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,674,"            buffer[size++] = 'l';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,675,"            buffer[size++] = 's';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,676,"            buffer[size++] = 'e';
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,678,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,688,"        int len = length();
",2,0,0,1,2,0,2,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,689,"        ensureCapacity(len + 1);
",2,1,0,1,2,0,2,0,0,5,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,690,"        buffer[size++] = ch;
",4,0,1,1,2,0,0,0,0,8,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,691,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,701,"        return append(String.valueOf(value));
",0,0,0,2,4,0,8,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,711,"        return append(String.valueOf(value));
",0,0,0,2,4,0,8,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,721,"        return append(String.valueOf(value));
",0,0,0,2,4,0,8,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,731,"        return append(String.valueOf(value));
",0,0,0,2,4,0,8,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,744,"        return append(obj).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,756,"        return append(str).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,770,"        return append(str, startIndex, length).appendNewLine();
",0,0,0,2,4,0,10,0,0,10,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,782,"        return append(str).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,796,"        return append(str, startIndex, length).appendNewLine();
",0,0,0,2,4,0,10,0,0,10,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,808,"        return append(str).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,822,"        return append(str, startIndex, length).appendNewLine();
",0,0,0,2,4,0,10,0,0,10,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,834,"        return append(chars).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,848,"        return append(chars, startIndex, length).appendNewLine();
",0,0,0,2,4,0,10,0,0,10,57,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,859,"        return append(value).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,870,"        return append(ch).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,881,"        return append(value).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,892,"        return append(value).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,903,"        return append(value).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,914,"        return append(value).appendNewLine();
",0,0,0,2,4,0,6,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,928,"        if (array != null && array.length > 0) {
",6,3,0,1,3,0,0,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,929,"            for (int i = 0; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,930,"                append(array[i]);
",0,0,1,2,4,0,2,0,0,6,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,933,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,946,"        if (coll != null && coll.size() > 0) {
",2,3,0,2,5,0,4,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,947,"            Iterator it = coll.iterator();
",2,0,0,1,2,0,4,2,0,8,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,948,"            while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,949,"                append(it.next());
",0,0,0,2,4,0,6,0,0,6,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,952,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,965,"        if (it != null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,966,"            while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,967,"                append(it.next());
",0,0,0,2,4,0,6,0,0,6,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,970,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,985,"        if (array != null && array.length > 0) {
",6,3,0,1,3,0,0,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,986,"            separator = (separator == null ? """" : separator);
",6,1,0,1,2,0,0,0,0,9,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,987,"            append(array[0]);
",0,0,1,2,4,0,2,0,0,4,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,988,"            for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,989,"                append(separator);
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,990,"                append(array[i]);
",0,0,1,2,4,0,2,0,0,6,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,993,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1007,"        if (coll != null && coll.size() > 0) {
",2,3,0,2,5,0,4,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1008,"            separator = (separator == null ? """" : separator);
",6,1,0,1,2,0,0,0,0,9,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1009,"            Iterator it = coll.iterator();
",2,0,0,1,2,0,4,2,0,8,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1010,"            while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1011,"                append(it.next());
",0,0,0,2,4,0,6,0,0,6,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1012,"                if (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1013,"                    append(separator);
",0,0,0,1,2,0,4,0,0,4,18,11,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1017,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1031,"        if (it != null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1032,"            separator = (separator == null ? """" : separator);
",6,1,0,1,2,0,0,0,0,9,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1033,"            while (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1034,"                append(it.next());
",0,0,0,2,4,0,6,0,0,6,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1035,"                if (it.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1036,"                    append(separator);
",0,0,0,1,2,0,4,0,0,4,18,11,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1040,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1065,"        if (separator != null && size() > 0) {
",2,3,0,2,5,0,2,0,0,8,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1066,"            append(separator);
",0,0,0,1,2,0,4,0,0,4,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1068,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1091,"        if (size() > 0) {
",0,1,0,2,5,0,2,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1092,"            append(separator);
",0,0,0,1,2,0,4,0,0,4,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1094,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1119,"        if (separator != null && loopIndex > 0) {
",4,3,0,1,3,0,0,0,0,7,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1120,"            append(separator);
",0,0,0,1,2,0,4,0,0,4,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1122,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1146,"        if (loopIndex > 0) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1147,"            append(separator);
",0,0,0,1,2,0,4,0,0,4,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1149,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1161,"        if (length >= 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1162,"            ensureCapacity(size + length);
",4,1,0,1,2,0,2,0,0,7,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1163,"            for (int i = 0; i < length; i++) {
",8,1,0,1,3,0,0,0,0,10,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1164,"                buffer[size++] = padChar;
",4,0,1,1,2,0,0,0,0,8,25,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1167,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1187,"            if (strLen >= width) {
",4,1,0,1,3,0,0,0,0,5,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1188,"                str.getChars(strLen - width, strLen, buffer, size);
",4,1,0,1,2,0,10,0,0,15,51,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1190,"                int padLen = width - strLen;
",6,1,0,0,0,0,0,0,0,7,28,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1191,"                for (int i = 0; i < padLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1192,"                    buffer[size + i] = padChar;
",6,1,1,1,2,0,0,0,0,10,27,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1194,"                str.getChars(0, strLen, buffer, size + padLen);
",4,1,0,1,2,0,8,0,0,13,47,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1196,"            size += width;
",4,0,0,0,0,0,0,0,0,5,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1198,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1212,"        return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);
",0,0,0,2,4,0,12,0,0,12,70,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1231,"            if (strLen >= width) {
",4,1,0,1,3,0,0,0,0,5,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1232,"                str.getChars(0, width, buffer, size);
",0,0,0,1,2,0,10,0,0,10,37,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1234,"                int padLen = width - strLen;
",6,1,0,0,0,0,0,0,0,7,28,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1235,"                str.getChars(0, strLen, buffer, size);
",0,0,0,1,2,0,10,0,0,10,38,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1236,"                for (int i = 0; i < padLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1237,"                    buffer[size + strLen + i] = padChar;
",8,1,1,1,2,0,0,0,0,12,36,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1240,"            size += width;
",4,0,0,0,0,0,0,0,0,5,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1242,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1256,"        return appendFixedWidthPadRight(String.valueOf(value), width, padChar);
",0,0,0,2,4,0,12,0,0,12,71,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1270,"        if (obj == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1271,"            return insert(index, nullText);
",0,0,0,1,2,0,6,0,0,7,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1273,"        return insert(index, obj.toString());
",0,0,0,2,4,0,8,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1286,"        validateIndex(index);
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1287,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1288,"            str = nullText;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1290,"        int strLen = (str == null ? 0 : str.length());
",4,1,0,2,4,0,4,0,0,9,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1291,"        if (strLen > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1292,"            int newSize = size + strLen;
",6,1,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1293,"            ensureCapacity(newSize);
",0,0,0,1,2,0,4,0,0,4,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1294,"            System.arraycopy(buffer, index, buffer, index + strLen, size - index);
",8,2,0,1,2,0,10,0,0,20,70,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1295,"            size = newSize;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1296,"            str.getChars(0, strLen, buffer, index);
",0,0,0,1,2,0,10,0,0,10,39,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1298,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1311,"        validateIndex(index);
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1312,"        if (chars == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1313,"            return insert(index, nullText);
",0,0,0,1,2,0,6,0,0,7,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1315,"        int len = chars.length;
",6,0,0,0,0,0,0,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1316,"        if (len > 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1317,"            ensureCapacity(size + len);
",4,1,0,1,2,0,2,0,0,7,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1318,"            System.arraycopy(buffer, index, buffer, index + len, size - index);
",8,2,0,1,2,0,10,0,0,20,67,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1319,"            System.arraycopy(chars, 0, buffer, index, len);
",0,0,0,1,2,0,12,0,0,12,47,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1320,"            size += len;
",4,0,0,0,0,0,0,0,0,5,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1322,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1337,"        validateIndex(index);
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1338,"        if (chars == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1339,"            return insert(index, nullText);
",0,0,0,1,2,0,6,0,0,7,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1341,"        if (offset < 0 || offset > chars.length) {
",8,3,0,1,3,0,0,0,0,11,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1342,"            throw new StringIndexOutOfBoundsException(""Invalid offset: "" + offset);
",2,1,0,1,2,0,0,2,0,6,71,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1344,"        if (length < 0 || offset + length > chars.length) {
",10,4,0,1,3,0,0,0,0,14,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1345,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);
",2,1,0,1,2,0,0,2,0,6,71,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1347,"        if (length > 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1348,"            ensureCapacity(size + length);
",4,1,0,1,2,0,2,0,0,7,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1349,"            System.arraycopy(buffer, index, buffer, index + length, size - index);
",8,2,0,1,2,0,10,0,0,20,70,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1350,"            System.arraycopy(chars, offset, buffer, index, length);
",0,0,0,1,2,0,14,0,0,14,55,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1351,"            size += length;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1353,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1365,"        validateIndex(index);
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1366,"        if (value) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1367,"            ensureCapacity(size + 4);
",2,1,0,1,2,0,2,0,0,5,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1368,"            System.arraycopy(buffer, index, buffer, index + 4, size - index);
",6,2,0,1,2,0,10,0,0,18,65,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1369,"            buffer[index++] = 't';
",2,0,1,1,2,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1370,"            buffer[index++] = 'r';
",2,0,1,1,2,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1371,"            buffer[index++] = 'u';
",2,0,1,1,2,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1372,"            buffer[index] = 'e';
",0,0,1,1,2,0,0,0,0,6,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1373,"            size += 4;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1375,"            ensureCapacity(size + 5);
",2,1,0,1,2,0,2,0,0,5,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1376,"            System.arraycopy(buffer, index, buffer, index + 5, size - index);
",6,2,0,1,2,0,10,0,0,18,65,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1377,"            buffer[index++] = 'f';
",2,0,1,1,2,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1378,"            buffer[index++] = 'a';
",2,0,1,1,2,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1379,"            buffer[index++] = 'l';
",2,0,1,1,2,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1380,"            buffer[index++] = 's';
",2,0,1,1,2,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1381,"            buffer[index] = 'e';
",0,0,1,1,2,0,0,0,0,6,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1382,"            size += 5;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1384,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1396,"        validateIndex(index);
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1397,"        ensureCapacity(size + 1);
",2,1,0,1,2,0,2,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1398,"        System.arraycopy(buffer, index, buffer, index + 1, size - index);
",6,2,0,1,2,0,10,0,0,18,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1399,"        buffer[index] = value;
",2,0,1,1,2,0,0,0,0,7,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1400,"        size++;
",2,0,0,0,0,0,0,0,0,3,7,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1401,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1413,"        return insert(index, String.valueOf(value));
",0,0,0,2,4,0,10,0,0,10,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1425,"        return insert(index, String.valueOf(value));
",0,0,0,2,4,0,10,0,0,10,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1437,"        return insert(index, String.valueOf(value));
",0,0,0,2,4,0,10,0,0,10,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1449,"        return insert(index, String.valueOf(value));
",0,0,0,2,4,0,10,0,0,10,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1462,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);
",4,1,0,1,2,0,12,0,0,17,72,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1463,"        size -= len;
",4,0,0,0,0,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1464,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1476,"        endIndex = validateRange(startIndex, endIndex);
",2,0,0,1,2,0,6,0,0,9,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1477,"        int len = endIndex - startIndex;
",6,1,0,0,0,0,0,0,0,7,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1478,"        if (len > 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1479,"            deleteImpl(startIndex, endIndex, len);
",0,0,0,1,2,0,8,0,0,8,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1481,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1492,"        for (int i = 0; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1493,"            if (buffer[i] == ch) {
",2,1,1,2,5,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1494,"                int start = i;
",4,0,0,0,0,0,0,0,0,4,14,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1495,"                while (++i < size) {
",4,1,0,1,3,0,0,0,0,6,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1496,"                    if (buffer[i] != ch) {
",2,1,1,2,5,0,0,0,0,7,22,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1497,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1500,"                int len = i - start;
",6,1,0,0,0,0,0,0,0,7,20,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1501,"                deleteImpl(start, i, len);
",0,0,0,1,2,0,8,0,0,8,26,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1502,"                i -= len;
",4,0,0,0,0,0,0,0,0,5,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1505,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1515,"        for (int i = 0; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1516,"            if (buffer[i] == ch) {
",2,1,1,2,5,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1517,"                deleteImpl(i, i + 1, 1);
",2,1,0,1,2,0,4,0,0,7,24,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1518,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1521,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1532,"        int len = (str == null ? 0 : str.length());
",4,1,0,2,4,0,4,0,0,9,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1533,"        if (len > 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1534,"            int index = indexOf(str, 0);
",2,0,0,1,2,0,4,0,0,6,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1535,"            while (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1536,"                deleteImpl(index, index + len, len);
",4,1,0,1,2,0,6,0,0,11,36,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1537,"                index = indexOf(str, index);
",2,0,0,1,2,0,6,0,0,9,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1540,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1550,"        int len = (str == null ? 0 : str.length());
",4,1,0,2,4,0,4,0,0,9,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1551,"        if (len > 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1552,"            int index = indexOf(str, 0);
",2,0,0,1,2,0,4,0,0,6,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1553,"            if (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1554,"                deleteImpl(index, index + len, len);
",4,1,0,1,2,0,6,0,0,11,36,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1557,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1572,"        return replace(matcher, null, 0, size, -1);
",0,0,0,1,2,0,6,0,0,8,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1586,"        return replace(matcher, null, 0, size, 1);
",0,0,0,1,2,0,6,0,0,7,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1601,"        int newSize = size - removeLen + insertLen;
",8,2,0,0,0,0,0,0,0,10,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1602,"        if (insertLen != removeLen) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1603,"            ensureCapacity(newSize);
",0,0,0,1,2,0,4,0,0,4,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1604,"            System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);
",8,2,0,1,2,0,10,0,0,20,84,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1605,"            size = newSize;
",4,0,0,0,0,0,0,0,0,5,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1607,"        if (insertLen > 0) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1608,"            insertStr.getChars(0, insertLen, buffer, startIndex);
",0,0,0,1,2,0,10,0,0,10,53,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1610,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1624,"        endIndex = validateRange(startIndex, endIndex);
",2,0,0,1,2,0,6,0,0,9,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1625,"        int insertLen = (replaceStr == null ? 0 : replaceStr.length());
",4,1,0,2,4,0,4,0,0,9,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1626,"        replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);
",4,1,0,1,2,0,10,0,0,15,80,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1627,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1640,"        if (search != replace) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1641,"            for (int i = 0; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1642,"                if (buffer[i] == search) {
",2,1,1,2,5,0,0,0,0,7,26,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1643,"                    buffer[i] = replace;
",2,0,1,1,2,0,0,0,0,7,20,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1647,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1659,"        if (search != replace) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1660,"            for (int i = 0; i < size; i++) {
",8,1,0,1,3,0,0,0,0,10,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1661,"                if (buffer[i] == search) {
",2,1,1,2,5,0,0,0,0,7,26,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1662,"                    buffer[i] = replace;
",2,0,1,1,2,0,0,0,0,7,20,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1663,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1667,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1679,"        int searchLen = (searchStr == null ? 0 : searchStr.length());
",4,1,0,2,4,0,4,0,0,9,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1680,"        if (searchLen > 0) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1681,"            int replaceLen = (replaceStr == null ? 0 : replaceStr.length());
",4,1,0,2,4,0,4,0,0,9,64,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1682,"            int index = indexOf(searchStr, 0);
",2,0,0,1,2,0,4,0,0,6,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1683,"            while (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1684,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);
",4,1,0,1,2,0,10,0,0,15,73,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1685,"                index = indexOf(searchStr, index + replaceLen);
",6,1,0,1,2,0,4,0,0,12,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1688,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1699,"        int searchLen = (searchStr == null ? 0 : searchStr.length());
",4,1,0,2,4,0,4,0,0,9,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1700,"        if (searchLen > 0) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1701,"            int index = indexOf(searchStr, 0);
",2,0,0,1,2,0,4,0,0,6,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1702,"            if (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1703,"                int replaceLen = (replaceStr == null ? 0 : replaceStr.length());
",4,1,0,2,4,0,4,0,0,9,64,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1704,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);
",4,1,0,1,2,0,10,0,0,15,73,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1707,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1723,"        return replace(matcher, replaceStr, 0, size, -1);
",0,0,0,1,2,0,8,0,0,9,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1738,"        return replace(matcher, replaceStr, 0, size, 1);
",0,0,0,1,2,0,8,0,0,8,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1761,"        endIndex = validateRange(startIndex, endIndex);
",2,0,0,1,2,0,6,0,0,9,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1762,"        return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);
",0,0,0,1,2,0,12,0,0,12,76,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1783,"        if (matcher == null || size == 0) {
",4,3,0,1,3,0,0,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1784,"            return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1786,"        int replaceLen = (replaceStr == null ? 0 : replaceStr.length());
",4,1,0,2,4,0,4,0,0,9,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1787,"        char[] buf = buffer;
",4,0,0,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1788,"        for (int i = from; i < to && replaceCount != 0; i++) {
",12,3,0,1,3,0,0,0,0,16,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1789,"            int removeLen = matcher.isMatch(buf, i, from, to);
",2,0,0,1,2,0,12,0,0,14,50,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1790,"            if (removeLen > 0) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1791,"                replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);
",4,1,0,1,2,0,10,0,0,15,65,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1792,"                to = to - removeLen + replaceLen;
",8,2,0,0,0,0,0,0,0,11,33,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1793,"                i = i + replaceLen - 1;
",6,2,0,0,0,0,0,0,0,9,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1794,"                if (replaceCount > 0) {
",2,1,0,1,3,0,0,0,0,3,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1795,"                    replaceCount--;
",2,0,0,0,0,0,0,0,0,3,15,10,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1799,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1809,"        if (size == 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1810,"            return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1813,"        int half = size / 2;
",4,1,0,0,0,0,0,0,0,5,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1814,"        char[] buf = buffer;
",4,0,0,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1815,"        for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {
",14,2,0,1,3,0,0,0,0,18,82,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1816,"            char swap = buf[leftIdx];
",2,0,1,1,2,0,0,0,0,6,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1817,"            buf[leftIdx] = buf[rightIdx];
",0,0,1,2,4,0,0,0,0,9,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1818,"            buf[rightIdx] = swap;
",2,0,1,1,2,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1820,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1831,"        if (size == 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1832,"            return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1834,"        int len = size;
",4,0,0,0,0,0,0,0,0,4,15,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1835,"        char[] buf = buffer;
",4,0,0,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1836,"        int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1837,"        while (pos < len && buf[pos] <= ' ') {
",4,3,1,2,5,0,0,0,0,12,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1838,"            pos++;
",2,0,0,0,0,0,0,0,0,3,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1840,"        while (pos < len && buf[len - 1] <= ' ') {
",6,4,1,2,5,0,0,0,0,13,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1841,"            len--;
",2,0,0,0,0,0,0,0,0,3,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1843,"        if (len < size) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1844,"            delete(len, size);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1846,"        if (pos > 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1847,"            delete(0, pos);
",0,0,0,1,2,0,4,0,0,4,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1849,"        return this;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1862,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1863,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1865,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1866,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1867,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1869,"        if (len > size) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1870,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1872,"        for (int i = 0; i < len; i++) {
",8,1,0,1,3,0,0,0,0,10,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1873,"            if (buffer[i] != str.charAt(i)) {
",0,1,1,3,7,0,6,0,0,11,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1874,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1877,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1889,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1890,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1892,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1893,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1894,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1896,"        if (len > size) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1897,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1899,"        int pos = size - len;
",6,1,0,0,0,0,0,0,0,7,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1900,"        for (int i = 0; i < len; i++,pos++) {
",10,1,0,1,3,0,0,0,0,13,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1901,"            if (buffer[pos] != str.charAt(i)) {
",0,1,1,3,7,0,6,0,0,11,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1902,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1905,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1917,"        return substring(start, size);
",0,0,0,1,2,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1934,"        endIndex = validateRange(startIndex, endIndex);
",2,0,0,1,2,0,6,0,0,9,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1935,"        return new String(buffer, startIndex, endIndex - startIndex);
",8,1,0,1,2,0,0,2,0,11,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1951,"        if (length <= 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1952,"            return """";
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1953,"        } else if (length >= size) {
",4,1,0,1,4,0,0,0,0,5,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1954,"            return new String(buffer, 0, size);
",4,0,0,1,2,0,0,2,0,6,35,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1956,"            return new String(buffer, 0, length);
",4,0,0,1,2,0,0,2,0,6,37,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1973,"        if (length <= 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1974,"            return """";
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1975,"        } else if (length >= size) {
",4,1,0,1,4,0,0,0,0,5,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1976,"            return new String(buffer, 0, size);
",4,0,0,1,2,0,0,2,0,6,35,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1978,"            return new String(buffer, size - length, length);
",8,1,0,1,2,0,0,2,0,11,49,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1999,"        if (index < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2000,"            index = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2002,"        if (length <= 0 || index >= size) {
",6,3,0,1,3,0,0,0,0,9,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2003,"            return """";
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2005,"        if (size <= index + length) {
",6,2,0,1,3,0,0,0,0,8,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2006,"            return new String(buffer, index, size - index);
",8,1,0,1,2,0,0,2,0,11,47,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2008,"            return new String(buffer, index, length);
",6,0,0,1,2,0,0,2,0,8,41,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2020,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2021,"        for (int i = 0; i < this.size; i++) {
",8,1,0,1,3,0,0,0,0,10,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2022,"            if (thisBuf[i] == ch) {
",2,1,1,2,5,0,0,0,0,7,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2023,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2026,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2036,"        return indexOf(str, 0) >= 0;
",0,1,0,1,2,0,4,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2051,"        return indexOf(matcher, 0) >= 0;
",0,1,0,1,2,0,4,0,0,5,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2062,"        return indexOf(ch, 0);
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2073,"        startIndex = (startIndex < 0 ? 0 : startIndex);
",6,1,0,1,2,0,0,0,0,8,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2074,"        if (startIndex >= size) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2075,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2077,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2078,"        for (int i = startIndex; i < size; i++) {
",10,1,0,1,3,0,0,0,0,12,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2079,"            if (thisBuf[i] == ch) {
",2,1,1,2,5,0,0,0,0,7,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2080,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2083,"        return -1;
",0,0,0,0,0,0,0,0,0,1,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2095,"        return indexOf(str, 0);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2109,"        startIndex = (startIndex < 0 ? 0 : startIndex);
",6,1,0,1,2,0,0,0,0,8,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2110,"        if (str == null || startIndex >= size) {
",6,3,0,1,3,0,0,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2111,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2113,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2114,"        if (strLen == 1) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2115,"            return indexOf(str.charAt(0), startIndex);
",0,0,0,2,4,0,8,0,0,8,42,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2117,"        if (strLen == 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2118,"            return startIndex;
",2,0,0,0,0,0,0,0,0,2,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2120,"        if (strLen > size) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2121,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2123,"        char[] thisBuf = buffer;
",4,0,0,1,2,0,0,0,0,4,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2124,"        int len = size - strLen + 1;
",6,2,0,0,0,0,0,0,0,8,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2126,"        for (int i = startIndex; i < len; i++) {
",10,1,0,1,3,0,0,0,0,12,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2127,"            for (int j = 0; j < strLen; j++) {
",8,1,0,1,3,0,0,0,0,10,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2128,"                if (str.charAt(j) != thisBuf[i + j]) {
",4,2,1,3,7,0,6,0,0,14,38,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2129,"                    continue outer;
",2,0,0,0,0,0,0,0,0,2,15,11,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2132,"            return i;
",2,0,0,0,0,0,0,0,0,2,9,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2134,"        return -1;
",0,0,0,0,0,0,0,0,0,1,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2148,"        return indexOf(matcher, 0);
",0,0,0,1,2,0,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2164,"        startIndex = (startIndex < 0 ? 0 : startIndex);
",6,1,0,1,2,0,0,0,0,8,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2165,"        if (matcher == null || startIndex >= size) {
",6,3,0,1,3,0,0,0,0,9,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2166,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2168,"        int len = size;
",4,0,0,0,0,0,0,0,0,4,15,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2169,"        char[] buf = buffer;
",4,0,0,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2170,"        for (int i = startIndex; i < len; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2171,"            if (matcher.isMatch(buf, i, startIndex, len) > 0) {
",0,1,0,2,5,0,12,0,0,13,51,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2172,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2175,"        return -1;
",0,0,0,0,0,0,0,0,0,1,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2186,"        return lastIndexOf(ch, size - 1);
",2,1,0,1,2,0,4,0,0,7,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2197,"        startIndex = (startIndex >= size ? size - 1 : startIndex);
",10,2,0,1,2,0,0,0,0,13,58,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2198,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2199,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2201,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2202,"            if (buffer[i] == ch) {
",2,1,1,2,5,0,0,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2203,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2206,"        return -1;
",0,0,0,0,0,0,0,0,0,1,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2218,"        return lastIndexOf(str, size - 1);
",2,1,0,1,2,0,4,0,0,7,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2232,"        startIndex = (startIndex >= size ? size - 1 : startIndex);
",10,2,0,1,2,0,0,0,0,13,58,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2233,"        if (str == null || startIndex < 0) {
",4,3,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2234,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2236,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2237,"        if (strLen > 0 && strLen <= size) {
",6,3,0,1,3,0,0,0,0,9,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2238,"            if (strLen == 1) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2239,"                return lastIndexOf(str.charAt(0), startIndex);
",0,0,0,2,4,0,8,0,0,8,46,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2243,"            for (int i = startIndex - strLen + 1; i >= 0; i--) {
",10,3,0,1,3,0,0,0,0,14,52,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2244,"                for (int j = 0; j < strLen; j++) {
",8,1,0,1,3,0,0,0,0,10,34,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2245,"                    if (str.charAt(j) != buffer[i + j]) {
",4,2,1,3,7,0,6,0,0,14,37,11,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2246,"                        continue outer;
",2,0,0,0,0,0,0,0,0,2,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2249,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2252,"        } else if (strLen == 0) {
",2,1,0,1,4,0,0,0,0,3,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2253,"            return startIndex;
",2,0,0,0,0,0,0,0,0,2,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2255,"        return -1;
",0,0,0,0,0,0,0,0,0,1,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2269,"        return lastIndexOf(matcher, size);
",0,0,0,1,2,0,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2285,"        startIndex = (startIndex >= size ? size - 1 : startIndex);
",10,2,0,1,2,0,0,0,0,13,58,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2286,"        if (matcher == null || startIndex < 0) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2287,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2289,"        char[] buf = buffer;
",4,0,0,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2290,"        int endIndex = startIndex + 1;
",4,1,0,0,0,0,0,0,0,5,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2291,"        for (int i = startIndex; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2292,"            if (matcher.isMatch(buf, i, 0, endIndex) > 0) {
",0,1,0,2,5,0,10,0,0,11,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2293,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2296,"        return -1;
",0,0,0,0,0,0,0,0,0,1,10,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2333,"        return new StrBuilderTokenizer();
",0,0,0,1,2,0,0,2,0,2,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2357,"        return new StrBuilderReader();
",0,0,0,1,2,0,0,2,0,2,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2382,"        return new StrBuilderWriter();
",0,0,0,1,2,0,0,2,0,2,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2424,"        if (this == other) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2425,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2427,"        if (this.size != other.size) {
",6,1,0,1,3,0,0,0,0,7,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2428,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2430,"        char thisBuf[] = this.buffer;
",4,0,0,1,2,0,0,0,0,4,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2431,"        char otherBuf[] = other.buffer;
",6,0,0,1,2,0,0,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2432,"        for (int i = size - 1; i >= 0; i--) {
",8,2,0,1,3,0,0,0,0,11,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2433,"            char c1 = thisBuf[i];
",2,0,1,1,2,0,0,0,0,6,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2434,"            char c2 = otherBuf[i];
",2,0,1,1,2,0,0,0,0,6,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2435,"            if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2)) {
",4,3,0,3,7,0,12,0,0,19,73,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2436,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2439,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2450,"        if (this == other) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2451,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2453,"        if (this.size != other.size) {
",6,1,0,1,3,0,0,0,0,7,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2454,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2456,"        char thisBuf[] = this.buffer;
",4,0,0,1,2,0,0,0,0,4,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2457,"        char otherBuf[] = other.buffer;
",6,0,0,1,2,0,0,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2458,"        for (int i = size - 1; i >= 0; i--) {
",8,2,0,1,3,0,0,0,0,11,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2459,"            if (thisBuf[i] != otherBuf[i]) {
",0,1,1,3,7,0,0,0,0,9,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2460,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2463,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2474,"        if (obj instanceof StrBuilder) {
",2,0,0,1,3,0,0,2,0,4,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2475,"            return equals((StrBuilder) obj);
",2,0,0,2,4,0,2,2,0,6,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2477,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2486,"        char buf[] = buffer;
",4,0,0,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2487,"        int hash = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2488,"        for (int i = size - 1; i >= 0; i--) {
",8,2,0,1,3,0,0,0,0,11,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2489,"            hash = 31 * hash + buf[i];
",4,2,1,1,2,0,0,0,0,11,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2491,"        return hash;
",2,0,0,0,0,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2505,"        return new String(buffer, 0, size);
",4,0,0,1,2,0,0,2,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2515,"        return new StringBuffer(size).append(buffer, 0, size);
",2,0,0,2,4,0,6,2,0,10,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2529,"        if (startIndex < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2530,"            throw new StringIndexOutOfBoundsException(startIndex);
",2,0,0,1,2,0,0,2,0,4,54,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2532,"        if (endIndex > size) {
",4,1,0,1,3,0,0,0,0,5,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2533,"            endIndex = size;
",4,0,0,0,0,0,0,0,0,5,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2535,"        if (startIndex > endIndex) {
",4,1,0,1,3,0,0,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2536,"            throw new StringIndexOutOfBoundsException(""end < start"");
",0,0,0,1,2,0,0,2,0,3,57,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2538,"        return endIndex;
",2,0,0,0,0,0,0,0,0,2,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2548,"        if (index < 0 || index > size) {
",6,3,0,1,3,0,0,0,0,9,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2549,"            throw new StringIndexOutOfBoundsException(index);
",2,0,0,1,2,0,0,2,0,4,49,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2551,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2673,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2672,"        StrBuilderWriter() {
",2,0,0,1,3,0,0,0,0,2,20,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2674,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2679,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2684,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2688,"            StrBuilder.this.append((char) c);
",4,0,0,2,4,0,2,0,0,6,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2689,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2693,"            StrBuilder.this.append(cbuf);
",2,0,0,1,2,0,4,0,0,6,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2694,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2698,"            StrBuilder.this.append(cbuf, off, len);
",2,0,0,1,2,0,8,0,0,10,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2699,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2703,"            StrBuilder.this.append(str);
",2,0,0,1,2,0,4,0,0,6,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2704,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2708,"            StrBuilder.this.append(str, off, len);
",2,0,0,1,2,0,8,0,0,10,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2709,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2596,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2595,"        StrBuilderReader() {
",2,0,0,1,3,0,0,0,0,2,20,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2597,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2602,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2606,"            if (ready() == false) {
",0,1,0,2,5,0,2,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2607,"                return -1;
",0,0,0,0,0,0,0,0,0,1,10,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2609,"            return StrBuilder.this.charAt(pos++);
",4,0,0,1,2,0,2,0,0,7,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2614,"            if (off < 0 || len < 0 || off > b.length ||
",10,7,0,0,1,0,0,0,0,17,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2616,"                throw new IndexOutOfBoundsException();
",0,0,0,1,2,0,0,2,0,2,38,9,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2618,"            if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2619,"                return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2621,"            if (pos >= StrBuilder.this.size()) {
",4,1,0,2,5,0,2,0,0,7,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2622,"                return -1;
",0,0,0,0,0,0,0,0,0,1,10,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2624,"            if (pos + len > size()) {
",4,2,0,2,5,0,2,0,0,8,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2625,"                len = StrBuilder.this.size() - pos;
",6,1,0,1,2,0,2,0,0,10,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2627,"            StrBuilder.this.getChars(pos, pos + len, b, off);
",6,1,0,1,2,0,8,0,0,15,49,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2628,"            pos += len;
",4,0,0,0,0,0,0,0,0,5,11,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2629,"            return len;
",2,0,0,0,0,0,0,0,0,2,11,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2634,"            if (pos + n > StrBuilder.this.size()) {
",6,2,0,2,5,0,2,0,0,10,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2635,"                n = StrBuilder.this.size() - pos;
",6,1,0,1,2,0,2,0,0,10,33,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2637,"            if (n < 0) {
",2,1,0,1,3,0,0,0,0,3,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2638,"                return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2640,"            pos += n;
",4,0,0,0,0,0,0,0,0,5,9,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2641,"            return n;
",2,0,0,0,0,0,0,0,0,2,9,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2646,"            return pos < StrBuilder.this.size();
",4,1,0,1,2,0,2,0,0,7,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2651,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2656,"            mark = pos;
",4,0,0,0,0,0,0,0,0,5,11,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2657,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2661,"            pos = mark;
",4,0,0,0,0,0,0,0,0,5,11,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2662,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,399,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,426,"            return buffer[pos] <= 32 ? 1 : 0;
",0,1,1,1,2,0,0,0,0,5,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,331,"            return ch == buffer[pos] ? 1 : 0;
",2,1,1,1,2,0,0,0,0,7,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,299,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;
",0,1,1,2,4,0,6,0,0,11,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,349,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,350,"            chars = str.toCharArray();
",2,0,0,1,2,0,4,0,0,7,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,351,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,363,"            int len = chars.length;
",6,0,0,0,0,0,0,0,0,6,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,364,"            if (pos + len > bufferEnd) {
",6,2,0,1,3,0,0,0,0,8,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,365,"                return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,367,"            for (int i = 0; i < chars.length; i++, pos++) {
",12,1,0,1,3,0,0,0,0,15,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,368,"                if (chars[i] != buffer[pos]) {
",0,1,1,3,7,0,0,0,0,9,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,369,"                    return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,372,"            return len;
",2,0,0,0,0,0,0,0,0,2,11,5,0.00000,0
