dataset,project,pPath,pId,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,if (hexDigits > 16) { // too many for Long,1,1,0,1,3,0,0,0,1,2,42,6,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,pfxLen += pfx.length();,1,0,0,1,2,0,2,0,0,4,23,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467, final int hexDigits = str.length() - pfxLen;,2,1,0,1,2,1,2,0,0,6,44,6,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474, return createInteger(str);,0,0,0,1,2,0,2,0,0,2,26,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,if (hexDigits > 8) { // too many for an int,1,1,0,1,3,0,0,0,1,2,43,6,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680, if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.741071428572166,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,return Integer.decode(str);,0,0,0,1,2,1,3,0,0,3,27,5,0.741071428572166,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460, for(final String pfx : hex_prefixes) {,2,0,0,1,3,1,0,1,0,4,38,4,0.309523809523705,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,if (str.startsWith(pfx)) {,0,0,0,2,5,0,3,0,1,3,26,7,0.309523809523705,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466, if (pfxLen > 0) { // we have a hex number,1,1,0,1,3,0,0,0,0,2,41,4,0.309523809523705,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,if (str == null) {,1,1,0,1,3,0,0,0,1,2,18,4,0.309523809523705,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454, if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,3,0,0,3,31,5,0.309523809523705,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,int pfxLen = 0;,1,0,0,0,0,0,0,0,0,1,15,5,0.309523809523705,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",1,0,0,2,4,1,0,1,0,9,68,4,0.309523809523705,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,261,if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,5,0,1,7,52,6,0.275000000000201,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,260,for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,1,6,34,4,0.275000000000201,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,262,return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.275000000000201,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,257,if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,0,2,0,1,8,48,4,0.275000000000201,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78, if (result != null) {,1,1,0,1,3,0,0,0,0,2,21,6,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"final CharSequence subSeq = input.subSequence(index, index + i);",3,1,0,1,2,1,3,1,0,9,64,6,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,final CharSequence result = lookupMap.get(subSeq);,1,0,0,1,2,1,3,1,0,6,50,6,1,1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,int max = longest;,2,0,0,0,0,0,0,0,0,2,18,5,0.7999999999976,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71, if (index + longest > input.length()) {,2,2,0,2,5,0,2,0,0,6,39,4,0.7999999999976,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,for (int i = max; i >= shortest; i--) {,5,1,0,1,3,0,0,0,1,7,39,4,0.7999999999976,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,99," throw new SerializationException(""ClassNotFoundException while reading cloned object data"", ex);",1,0,0,1,2,0,0,1,0,3,96,8,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,98, catch (ClassNotFoundException ex) {,1,0,0,1,3,0,0,1,0,2,35,6,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,267,catch (ClassNotFoundException ex) {,1,0,0,1,3,0,0,1,0,2,35,7,1,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,268,"return Class.forName(name, false, Thread.currentThread().getContextClassLoader());",0,0,0,3,6,1,6,0,0,7,82,9,1,1
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"super(msg, cause);",2,0,0,1,2,0,0,0,0,2,18,4,0.488372093023267,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,264,String name = desc.getName();,1,0,0,1,2,0,2,1,0,4,29,5,0.079069767441881,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,this.classLoader = classLoader;,2,0,0,0,0,0,0,0,0,3,31,5,0.079069767441881,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,T readObject = (T) in.readObject();,1,0,0,2,4,0,2,2,0,5,35,6,0.079069767441881,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,2,0,0,1,2,0,0,2,0,4,65,4,0.079069767441881,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,ClassLoaderAwareObjectInputStream in = null;,1,0,0,0,0,0,0,1,0,2,44,4,0.079069767441881,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,super(in);,1,0,0,1,2,0,0,0,0,1,10,5,0.079069767441881,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266," return Class.forName(name, false, classLoader);",0,0,0,1,2,0,4,0,0,5,47,8,0.079069767441881,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",2,0,0,3,6,0,3,1,0,7,85,6,0.079069767441881,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,return true;,0,0,0,0,0,1,0,0,0,1,12,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,return cs1.equals(cs2);,0,0,0,1,2,1,3,0,0,3,23,5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782, if (cs1 == cs2) {,2,1,0,1,3,0,0,0,0,3,17,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,if (cs1 == null || cs2 == null) {,2,3,0,1,3,0,0,0,1,5,33,4,1,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,262,(cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,4,8,0,2,5,0,4,0,0,16,68,5,1,1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,259,if (cal1 == null || cal2 == null) {,2,3,0,1,3,0,0,0,1,5,35,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,480,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,0,0,1,0,4,65,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,553,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,0,0,1,0,4,65,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,621,        return str.length() > 0;,0,1,0,1,2,0,2,0,0,3,24,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,521,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,0,0,1,0,4,65,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1379,                allowSigns = false;,1,0,0,0,0,0,0,0,0,3,19,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1373,                hasExp = true;,1,0,0,0,0,0,0,0,0,3,14,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1370,                if (!foundDigit) {,1,0,0,1,3,0,0,0,0,2,18,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1376,                if (!allowSigns) {,1,0,0,1,3,0,0,0,0,2,18,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1377,                    return false;,0,0,0,0,0,0,0,0,0,1,13,13,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1374,                allowSigns = true;,1,0,0,0,0,0,0,0,0,3,18,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1375,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,3,8,0,0,0,0,9,48,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,532,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1361,                    return false;,0,0,0,0,0,0,0,0,0,1,13,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1363,                hasDecPoint = true;,1,0,0,0,0,0,0,0,0,3,19,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1364,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,9,48,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1366,                if (hasExp) {,1,0,0,1,3,0,0,0,0,1,13,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1348,"        sz--; // don't want to loop to the last char, check it afterwords",1,0,0,0,0,0,0,0,0,2,65,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1354,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1355,                foundDigit = true;,1,0,0,0,0,0,0,0,0,3,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1350,        int i = start;,2,0,0,0,0,0,0,0,0,2,14,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,457,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,1,0,2,72,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1353,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,6,6,0,2,5,0,0,0,0,13,61,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,586,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1358,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,4,29,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1359,                if (hasDecPoint || hasExp) {,2,1,0,1,3,0,0,0,0,3,28,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1356,                allowSigns = false;,1,0,0,0,0,0,0,0,0,3,19,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,598,                return createBigDecimal(str);,0,0,0,1,2,0,2,0,0,2,29,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1342,                        return false;,0,0,0,0,0,0,0,0,0,1,13,12,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1345,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,594,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1334,                if (i == sz) {,2,1,0,1,3,0,0,0,0,3,14,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1332,            if (chars[start] == '0' && chars[start + 1] == 'x') {,1,4,1,3,7,0,0,0,0,10,53,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1333,                int i = start + 2;,2,1,0,0,0,0,0,0,0,3,18,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1330,        int start = (chars[0] == '-') ? 1 : 0;,1,1,1,2,4,0,0,0,0,4,38,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1331,        if (sz > start + 1) {,2,2,0,1,3,0,0,0,0,4,21,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1338,                for (; i < chars.length; i++) {,4,1,0,1,3,0,0,0,0,6,31,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1339,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,9,38,13,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,                return foundDigit && !hasExp;,2,1,0,0,0,0,0,0,0,4,29,8,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1401,                return foundDigit;,1,0,0,0,0,0,0,0,0,1,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1403,            if (!allowSigns,1,0,0,0,1,0,0,0,0,2,15,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1408,                return foundDigit;,1,0,0,0,0,0,0,0,0,1,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1410,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,4,19,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1325,        boolean hasExp = false;,1,0,0,0,0,0,0,0,0,2,23,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1324,        int sz = chars.length;,3,0,0,0,0,0,0,0,0,3,22,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1327,        boolean allowSigns = false;,1,0,0,0,0,0,0,0,0,2,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1326,        boolean hasDecPoint = false;,1,0,0,0,0,0,0,0,0,2,28,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1321,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1320,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,3,0,0,3,31,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1323,        char[] chars = str.toCharArray();,1,0,0,2,4,0,2,0,0,3,33,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1328,        boolean foundDigit = false;,1,0,0,0,0,0,0,0,0,2,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1416,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1391,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1393,                return false;,0,0,0,0,0,0,0,0,0,1,13,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1395,            if (chars[i] == '.') {,0,1,1,2,5,0,0,0,0,4,22,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1396,                if (hasDecPoint || hasExp) {,2,1,0,1,3,0,0,0,0,3,28,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,492,"                mant = str.substring(0, expPos);",1,0,0,1,2,0,3,0,0,5,32,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,543,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,548,                    } catch (NumberFormatException e) {,1,0,0,1,4,0,0,1,0,2,35,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1387,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1386,        if (i < chars.length) {,3,1,0,1,3,0,0,0,0,4,23,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1384,            i++;,1,0,0,0,0,0,0,0,0,2,4,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1382,                return false;,0,0,0,0,0,0,0,0,0,1,13,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1380,                foundDigit = false; // we need a digit after the E,1,0,0,0,0,0,0,0,0,3,50,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1389,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,0,6,32,8,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);",2,1,0,1,2,0,3,0,0,7,40,8,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,0,2,0,0,9,47,6,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,                            return f;,1,0,0,0,0,0,0,0,0,1,9,11,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,5,11,0,4,0,0,10,65,9,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,1,1,0,2,5,0,2,0,0,4,28,8,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",2,2,0,2,4,0,4,0,0,9,50,8,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,1,0,0,0,0,0,0,0,0,1,9,12,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,2,4,0,4,0,0,6,55,9,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,0,0,0,1,2,0,2,0,0,2,33,10,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,1,0,0,1,2,0,2,1,0,4,29,10,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,5,11,0,4,0,0,10,65,10,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,3,3,0,2,5,0,2,0,0,8,47,8,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,            if (expPos > -1) {,1,1,0,1,3,0,0,0,0,3,18,6,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,0,0,0,1,2,0,2,0,0,2,26,11,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",2,1,0,2,4,0,4,0,0,8,46,8,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",1,0,0,1,2,0,3,0,0,5,32,6,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,1,0,0,0,0,0,0,0,0,2,11,8,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,1,0,0,1,2,0,2,1,0,4,27,10,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,            return createInteger(str);,0,0,0,1,2,0,2,0,0,2,26,7,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,                return createBigInteger(str);,0,0,0,1,2,0,2,0,0,2,29,9,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,                    return createLong(str);,0,0,0,1,2,0,2,0,0,2,23,11,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,1,0,0,0,0,0,0,0,0,1,9,11,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,5,11,0,4,0,0,10,65,9,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,2,3,0,1,3,0,0,0,0,5,33,6,0.495495495495506,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,8,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,0,0,0,0,0,0,0,0,0,1,13,10,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,3,0,0,0,0,0,0,0,0,3,35,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,1,0,0,1,2,0,2,0,0,3,24,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,2,3,0,1,3,0,0,0,0,5,40,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,3,3,0,1,3,0,0,0,0,6,41,4,0.771739130434777,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.771739130434777,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,3,0,1,3,0,0,0,0,5,41,4,0.246376811593896,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,52,5,0.246376811593896,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,                        return i;,1,0,0,0,0,0,0,0,0,1,9,10,0.217391304347809,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,8,0.217391304347809,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,4,0.217391304347809,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,        int searchLen = searchChars.length;,3,0,0,0,0,0,0,0,0,3,35,5,0.217391304347809,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,        int csLen = cs.length();,1,0,0,1,2,0,2,0,0,3,24,5,0.217391304347809,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,6,0.217391304347809,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1378,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,0.217391304347809,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,5,0,0,6,53,4,0.217391304347809,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,1,3,0,1,2,0,2,0,0,6,38,4,0.198565665621069,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1689,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.173913043478025,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1462,                        return true;,0,0,0,0,0,0,0,0,0,1,12,12,0.157190635451286,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1444,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,5,0,0,6,53,4,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1447,        int csLength = cs.length();,1,0,0,1,2,0,2,0,0,3,27,5,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1449,        int csLast = csLength - 1;,2,1,0,0,0,0,0,0,0,3,26,5,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1454,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,8,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1450,        int searchLast = searchLength - 1;,2,1,0,0,0,0,0,0,0,3,34,5,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1467,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,10,7,0,1,3,0,0,0,0,17,111,10,0.142857142856937,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1452,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1453,            for (int j = 0; j < searchLength; j++) {,4,1,0,1,3,0,0,0,0,6,40,6,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1451,        for (int i = 0; i < csLength; i++) {,4,1,0,1,3,0,0,0,0,6,36,4,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1448,        int searchLength = searchChars.length;,3,0,0,0,0,0,0,0,0,3,38,5,0.142857142856937,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0.026198439242152,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1574,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,0,6,34,4,0.021739130434761,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1570,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,4,0,0,5,43,4,0.021739130434761,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1575,            char ch = str.charAt(i);,1,0,0,1,2,0,3,0,0,4,24,7,0.021739130434761,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1573,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,0.021739130434761,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1412,        if (isEmpty(cs) || isEmpty(searchChars)) {,0,1,0,3,7,0,4,0,0,5,42,4,0.021739130434761,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1577,                    return i;,1,0,0,0,0,0,0,0,0,1,9,8,0.021739130434761,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1415,"        return indexOfAny(cs, searchChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,49,5,0.021739130434761,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,0,1,0,2,5,0,3,0,0,4,34,6,0.021739130434761,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1501,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,50,5,0.015810276679826,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1498,        if (searchChars == null) {,1,1,0,1,3,0,0,0,0,2,26,4,0.015810276679826,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1542,            return i;,1,0,0,0,0,0,0,0,0,1,9,7,0.010869565217348,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1529,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,5,0,0,6,53,4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1538,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,9,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1533,        int searchLen = searchChars.length;,3,0,0,0,0,0,0,0,0,3,35,5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1532,        int csLen = cs.length();,1,0,0,1,2,0,2,0,0,3,24,5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1535,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1537,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,7,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1536,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,8,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1539,                        continue outer;,1,0,0,0,0,0,0,0,0,1,15,11,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,3,0,0,0,0,0,0,0,0,3,38,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,1,0,0,1,2,0,2,0,0,3,27,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,4,1,0,1,3,0,0,0,0,6,36,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,5,0,0,6,53,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,8,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,4,1,0,1,3,0,0,0,0,6,40,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,0,0,0,0,1,12,10,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,1,1,0,1,3,0,0,0,0,2,26,4,0.491031390134554,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,50,5,0.491031390134554,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,3,3,0,1,3,0,0,0,0,6,41,4,0.295274232493685,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.295274232493685,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,1,3,0,1,2,0,2,0,0,6,38,4,0.026807273444048,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,903,        if (array == null) {,1,1,0,1,3,0,0,0,0,2,20,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,2,1,0,1,4,0,0,0,0,3,31,5,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,2,0,0,0,0,0,0,0,0,2,36,8,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,3,0,0,2,4,0,0,2,0,5,45,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,909,        for (int i = 0; i < array.length; i++) {,5,1,0,1,3,0,0,0,0,7,40,4,1,1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,1,0,0,0,0,0,0,0,0,1,15,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,0,0,1,3,6,0,1,0,0,6,33,6,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0.00644171779142,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,3,0,6,0,10,101,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",1,0,0,1,2,3,0,6,0,10,89,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",2,0,0,1,2,0,2,1,0,5,47,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",2,0,0,1,2,0,2,1,0,5,51,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",2,0,0,1,2,0,2,1,0,5,49,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",1,0,0,1,2,3,0,6,0,10,96,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,0,0,1,2,0,2,1,0,5,53,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",2,0,0,1,2,0,2,1,0,5,57,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",2,0,0,1,2,0,2,1,0,5,47,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,3,0,6,0,10,101,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,0,8,86,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",4,0,0,1,2,0,2,0,0,6,46,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",2,0,0,1,2,0,2,1,0,5,53,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",2,0,0,1,2,0,2,1,0,5,49,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,1,0,0,3,28,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,1,0,0,3,32,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,1,0,0,3,30,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,1,0,0,3,29,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,1,0,0,3,29,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,3,0,0,4,43,6,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,1,0,0,1,2,0,3,1,0,5,64,6,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,1,0,0,2,5,0,2,1,0,4,62,4,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,4,0,0,4,52,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,4,0,0,4,45,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,4,0,0,4,54,9,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,1,0,0,3,30,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,0,8,94,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,1,0,0,3,29,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,1,0,0,3,31,5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3295,            type = Object.class;,1,0,0,0,0,0,0,1,0,3,20,7,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3292,        } else if (element != null) {,1,1,0,1,4,0,0,0,0,2,29,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,3,1,1,1,2,0,0,0,0,6,40,4,0.248861911987861,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,4,8,0,3,2,0,6,49,4,0.248861911987861,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,1,0,0,0,0,0,0,0,0,1,16,4,0.248861911987861,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,1,1,0,1,3,0,0,0,0,2,19,4,0.248861911987861,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,0,3,0,0,3,51,5,0.061077389984826,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.048558421851291,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,1,1,0,1,3,0,0,0,0,2,21,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,1,1,0,1,4,0,0,0,0,2,28,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,2,4,1,3,1,0,6,60,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,4,8,0,3,2,0,11,80,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,1,2,0,4,0,0,6,59,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,1,2,0,4,0,0,8,71,5,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,1,0,0,0,0,0,0,0,0,1,19,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,872,            calendar = (Calendar) calendar.clone();,1,0,0,2,4,0,2,1,0,5,39,6,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,642,"                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);",3,0,0,1,2,0,2,0,0,6,56,7,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,873,            calendar.setTimeZone(mTimeZone);,0,0,0,1,2,0,3,0,0,3,32,7,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,0,0,1,2,0,3,0,0,4,44,4,0.494252873563211,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.241379310344817,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,3,1,0,1,3,0,0,0,0,5,33,7,0.241379310344817,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,2,0,0,3,19,10,0.241379310344817,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.241379310344817,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,6,0.005363984674298,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",2,1,0,2,4,0,4,0,0,7,51,6,0.005363984674298,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,6,0.005363984674298,0
defect4j,lang,org/apache/commons/lang3/Validate,38,121,        if (expression == false) {,1,1,0,1,3,0,0,0,0,3,26,4,0.004310344827572,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1311,                    digits = Integer.toString(value).length();,1,0,0,2,4,0,4,0,0,6,42,9,0.004310344827572,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1310,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",1,1,0,1,2,0,3,0,0,7,77,10,0.004310344827572,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1356,                buffer.append((char)(value % 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1355,                buffer.append((char)(value / 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1354,            if (value < 100) {,1,1,0,1,3,0,0,0,0,2,18,5,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1292,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,5,0,0,5,39,6,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1299,            if (value < 100) {,1,1,0,1,3,0,0,0,0,2,18,5,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1347,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,5,0,0,5,39,6,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,2,0,0,0,0,0,0,0,0,4,23,12,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,832,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",1,0,0,3,6,0,3,1,0,5,73,5,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1098,            buffer.append(mValue);,0,0,0,1,2,0,3,0,0,3,22,6,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1313,                for (int i = mSize; --i >= digits; ) {,4,1,0,1,3,0,0,0,0,6,38,7,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,5,0,0,5,39,8,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,633,"                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",3,0,0,1,2,0,2,0,0,6,56,7,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,1,1,0,1,3,0,0,0,0,2,19,7,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,639,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",3,0,0,1,2,0,2,0,0,6,51,7,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,871,        if (mTimeZoneForced) {,1,0,0,1,3,0,0,0,0,1,22,4,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,1,2,0,3,0,0,3,33,5,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,3,5,0,2,5,0,2,0,0,11,54,10,0.003831417624492,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,636,"                rule = selectNumberRule(Calendar.MINUTE, tokenLen);",3,0,0,1,2,0,2,0,0,6,51,7,0.003380662609866,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,890,"            rules[i].appendTo(buf, calendar);",0,0,1,2,4,0,3,0,0,5,33,7,0.002955665024602,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,892,        return buf;,1,0,0,0,0,0,0,0,0,1,11,4,0.002955665024602,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,887,        Rule[] rules = mRules;,2,0,0,1,2,0,0,1,0,3,22,4,0.002955665024602,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,889,        for (int i = 0; i < len; i++) {,4,1,0,1,3,0,0,0,0,6,31,4,0.002955665024602,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,888,        int len = mRules.length;,3,0,0,0,0,0,0,0,0,3,24,5,0.002955665024602,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,627,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",3,0,0,1,2,0,2,0,0,6,57,7,0.00147362216325,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,549,            locale = Locale.getDefault();,1,0,0,1,2,0,2,0,0,4,29,6,0.001149425287342,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,621,                    rule = TwoDigitMonthField.INSTANCE;,3,0,0,0,0,0,0,0,0,4,35,11,0.000841042893154,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1403,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,1,0,0,1,2,2,0,2,0,5,68,3,0.000841042893154,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,618,                } else if (tokenLen == 3) {,1,1,0,1,4,0,0,0,0,2,27,8,0.000547345374905,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,620,                } else if (tokenLen == 2) {,1,1,0,1,4,0,0,0,0,2,27,9,0.000547345374905,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1278,            mSize = size;,2,0,0,0,0,0,0,0,0,3,13,5,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1272,"        PaddedNumberField(int field, int size) {",3,0,0,1,3,0,0,0,0,3,40,3,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1273,            if (size < 3) {,1,1,0,1,3,0,0,0,0,2,15,5,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1277,            mField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1332,        TwoDigitNumberField(int field) {,2,0,0,1,3,0,0,0,0,2,32,3,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,610,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",3,0,0,1,2,0,2,0,0,6,49,9,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,771,            return new TwoDigitNumberField(field);,1,0,0,1,2,0,0,1,0,2,38,6,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,773,"            return new PaddedNumberField(field, padding);",2,0,0,1,2,0,0,1,0,3,45,6,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1333,            mField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.000267308206354,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,586,        String[] AmPmStrings = symbols.getAmPmStrings();,1,0,0,2,4,0,2,1,0,4,48,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,584,        String[] weekdays = symbols.getWeekdays();,1,0,0,2,4,0,2,1,0,4,42,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,585,        String[] shortWeekdays = symbols.getShortWeekdays();,1,0,0,2,4,0,2,1,0,4,52,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,582,        String[] months = symbols.getMonths();,1,0,0,2,4,0,2,1,0,4,38,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,583,        String[] shortMonths = symbols.getShortMonths();,1,0,0,2,4,0,2,1,0,4,48,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,747,                    i--;,1,0,0,0,0,0,0,0,0,2,4,11,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,589,        int[] indexRef = new int[1];,1,0,0,2,4,0,0,0,0,1,28,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,579,        List<Rule> rules = new ArrayList<Rule>();,1,0,0,1,2,0,0,4,0,5,41,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,750,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,12,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,756,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,755,        indexRef[0] = i;,1,0,1,1,2,0,0,0,0,3,16,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,591,        for (int i = 0; i < length; i++) {,4,1,0,1,3,0,0,0,0,6,34,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,111,"    private static final Map<FastDateFormat, FastDateFormat> cInstanceCache = new HashMap<FastDateFormat, FastDateFormat>(7);",1,0,0,1,2,3,0,6,0,10,121,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,593,"            String token = parseToken(mPattern, indexRef);",1,0,0,1,2,0,3,1,0,5,46,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,592,            indexRef[0] = i;,1,0,1,1,2,0,0,0,0,3,16,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,594,            i = indexRef[0];,1,0,1,1,2,0,0,0,0,3,16,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,597,            if (tokenLen == 0) {,1,1,0,1,3,0,0,0,0,2,20,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,596,            int tokenLen = token.length();,1,0,0,1,2,0,2,0,0,3,30,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,616,                if (tokenLen >= 4) {,1,1,0,1,3,0,0,0,0,2,20,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,697,        return rules;,1,0,0,0,0,0,0,0,0,1,13,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,694,            rules.add(rule);,0,0,0,1,2,0,3,0,0,3,16,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,542,        if (timeZone == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,714,        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {,4,7,0,1,3,0,0,0,0,15,51,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,767,        switch (padding) {,1,0,0,1,3,0,0,0,0,1,18,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,218,"            cInstanceCache.put(format, format);  // this is OK!",0,0,0,1,2,0,4,0,0,4,51,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,216,            format = emptyFormat;,2,0,0,0,0,0,0,0,0,3,21,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,217,            format.init();  // convert shell format into usable one,0,0,0,1,2,0,2,0,0,2,55,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,214,        FastDateFormat format = cInstanceCache.get(emptyFormat);,1,0,0,1,2,0,3,1,0,5,56,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,215,        if (format == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,213,"        FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",4,0,0,1,2,0,0,2,0,6,75,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,604,            switch (c) {,1,0,0,1,3,0,0,0,0,1,12,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,602,            char c = token.charAt(0);,1,0,0,1,2,0,2,0,0,3,25,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,115,"    private static final Map<Object, String> cTimeZoneDisplayCache = new HashMap<Object, String>(7);",1,0,0,1,2,3,0,6,0,10,96,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,114,"    private static final Map<Object, FastDateFormat> cDateTimeInstanceCache = new HashMap<Object, FastDateFormat>(7);",1,0,0,1,2,3,0,6,0,10,113,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,609,                if (tokenLen >= 4) {,1,1,0,1,3,0,0,0,0,2,20,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,113,"    private static final Map<Object, FastDateFormat> cTimeInstanceCache = new HashMap<Object, FastDateFormat>(7);",1,0,0,1,2,3,0,6,0,10,109,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,112,"    private static final Map<Object, FastDateFormat> cDateInstanceCache = new HashMap<Object, FastDateFormat>(7);",1,0,0,1,2,3,0,6,0,10,109,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,566,        mMaxLengthEstimate = len;,2,0,0,0,0,0,0,0,0,3,25,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,561,        int len = 0;,1,0,0,0,0,0,0,0,0,1,12,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,562,        for (int i=mRules.length; --i >= 0; ) {,4,1,0,1,3,0,0,0,0,6,39,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,563,            len += mRules[i].estimateLength();,1,0,1,2,4,0,1,0,0,5,34,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,685,                    rule = new CharacterLiteral(sub.charAt(0));,1,0,0,2,4,0,2,1,0,5,43,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,684,                if (sub.length() == 1) {,0,1,0,2,5,0,2,0,0,3,24,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,683,                String sub = token.substring(1);,1,0,0,1,2,0,2,1,0,4,32,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,745,                } else if (!inLiteral &&,1,1,0,0,2,0,0,0,0,3,24,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,578,        DateFormatSymbols symbols = new DateFormatSymbols(mLocale);,2,0,0,1,2,0,0,2,0,4,59,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,588,        int length = mPattern.length();,1,0,0,1,2,0,2,0,0,3,31,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,708,        StringBuilder buf = new StringBuilder();,1,0,0,1,2,0,0,2,0,3,40,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,548,        if (locale == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1084,            mValue = value;,2,0,0,0,0,0,0,0,0,3,15,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1083,        CharacterLiteral(char value) {,2,0,0,1,3,0,0,0,0,2,30,3,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,541,        mTimeZoneForced = (timeZone != null);,2,1,0,1,2,0,0,0,0,4,37,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,545,        mTimeZone = timeZone;,2,0,0,0,0,0,0,0,0,3,21,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1008,        return total;,1,0,0,0,0,0,0,0,0,1,13,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1007,        total += (mLocaleForced ? 1 : 0);,2,0,0,1,2,0,0,0,0,3,33,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1006,        total += mLocale.hashCode();,1,0,0,1,2,0,2,0,0,4,28,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1005,        total += (mTimeZoneForced ? 1 : 0);,2,0,0,1,2,0,0,0,0,3,35,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1004,        total += mTimeZone.hashCode();,1,0,0,1,2,0,2,0,0,4,30,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1003,        total += mPattern.hashCode();,1,0,0,1,2,0,2,0,0,4,29,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1002,        int total = 0;,1,0,0,0,0,0,0,0,0,1,14,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,719,            while (i + 1 < length) {,2,2,0,1,3,0,0,0,0,4,24,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,717,            buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,536,        if (pattern == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,713,        char c = pattern.charAt(i);,1,0,0,1,2,0,3,0,0,4,27,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,711,        int length = pattern.length();,1,0,0,1,2,0,2,0,0,3,30,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,710,        int i = indexRef[0];,1,0,1,1,2,0,0,0,0,2,20,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,559,        mRules = rulesList.toArray(new Rule[rulesList.size()]);,1,0,0,3,6,0,4,1,0,7,55,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,558,        List<Rule> rulesList = parsePattern();,1,0,0,1,2,0,1,2,0,4,38,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,551,        mLocale = locale;,2,0,0,0,0,0,0,0,0,3,17,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,737,                if (c == '\'') {,1,1,0,1,3,0,0,0,0,3,16,8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,722,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,11,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,723,                    i++;,1,0,0,0,0,0,0,0,0,2,4,10,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,720,                char peek = pattern.charAt(i + 1);,2,1,0,1,2,0,2,0,0,5,34,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,721,                if (peek == c) {,2,1,0,1,3,0,0,0,0,3,16,8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,547,        mLocaleForced = (locale != null);,2,1,0,1,2,0,0,0,0,4,33,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,581,        String[] ERAs = symbols.getEras();,1,0,0,2,4,0,2,1,0,4,34,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,220,        return format;,1,0,0,0,0,0,0,0,0,1,14,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,735,                c = pattern.charAt(i);,1,0,0,1,2,0,3,0,0,5,22,8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,734,            for (; i < length; i++) {,3,1,0,1,3,0,0,0,0,5,25,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,539,        mPattern = pattern;,2,0,0,0,0,0,0,0,0,3,19,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,730,            buf.append('\'');,0,0,0,1,2,0,2,0,0,3,17,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,732,            boolean inLiteral = false;,1,0,0,0,0,0,0,0,0,2,26,7,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,2,3,0,1,3,0,0,0,0,5,39,4,1,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,0,5,0,0,5,60,5,1,1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,0,3,0,0,4,35,4,0.250000000000374,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,2,3,0,1,3,0,0,0,0,5,39,4,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,470,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",4,2,0,1,2,0,2,0,0,8,64,5,1,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,467,        if (gcd == 1) {,1,1,0,1,3,0,0,0,0,2,15,4,1,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,466,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",1,0,0,2,4,0,5,0,0,6,66,5,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,3,2,0,0,1,0,0,0,0,5,35,6,0.106382978723389,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,2,0,0,0,0,0,0,0,0,4,27,6,0.106382978723389,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,0,0,4,23,6,0.106382978723389,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,3,7,0,3,7,0,0,0,0,10,72,4,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,1,0,0,0,0,0,0,0,0,1,8,5,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,1,1,0,1,3,0,0,0,0,2,12,4,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,3,2,0,1,2,0,0,0,0,6,14,6,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,3,1,0,2,4,0,0,0,0,6,37,4,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,4,3,0,3,6,0,0,0,0,8,38,5,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,3,1,0,2,4,0,0,0,0,6,37,4,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,1,2,0,2,5,0,0,0,0,3,39,6,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,2,0,0,0,0,0,0,0,0,4,7,8,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,1,1,0,1,3,0,0,0,0,2,10,6,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,2,0,0,0,0,0,0,0,0,3,6,8,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,1,1,0,1,3,0,0,0,0,2,15,4,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,2,0,1,2,0,0,0,0,5,33,4,0.042553191489345,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,6,0,0,9,43,4,0.035460992907728,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,1,1,0,1,3,0,0,0,0,2,23,4,0.012765957446808,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,1,1,0,1,3,0,0,0,0,2,22,4,0.012765957446808,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",2,0,0,1,2,0,0,1,0,3,44,5,0.012765957446808,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,377,        return denominator;,1,0,0,0,0,0,0,0,0,1,19,4,0.00303951367777,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,368,        return numerator;,1,0,0,0,0,0,0,0,0,1,17,4,0.00303951367777,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,88,"    public static final Fraction THREE_FIFTHS = new Fraction(3, 5);",1,0,0,1,2,3,0,2,0,6,63,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,60,"    public static final Fraction ONE_THIRD = new Fraction(1, 3);",1,0,0,1,2,3,0,2,0,6,60,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,126,        this.numerator = numerator;,2,0,0,0,0,0,0,0,0,3,27,4,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,127,        this.denominator = denominator;,2,0,0,0,0,0,0,0,0,3,31,4,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,64,"    public static final Fraction TWO_THIRDS = new Fraction(2, 3);",1,0,0,1,2,3,0,2,0,6,61,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,68,"    public static final Fraction ONE_QUARTER = new Fraction(1, 4);",1,0,0,1,2,3,0,2,0,6,62,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,107,    private transient int hashCode = 0;,1,0,0,0,0,2,0,0,0,3,35,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,80,"    public static final Fraction ONE_FIFTH = new Fraction(1, 5);",1,0,0,1,2,3,0,2,0,6,60,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,48,"    public static final Fraction ZERO = new Fraction(0, 1);",1,0,0,1,2,3,0,2,0,6,55,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,76,"    public static final Fraction THREE_QUARTERS = new Fraction(3, 4);",1,0,0,1,2,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,52,"    public static final Fraction ONE = new Fraction(1, 1);",1,0,0,1,2,3,0,2,0,6,54,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,56,"    public static final Fraction ONE_HALF = new Fraction(1, 2);",1,0,0,1,2,3,0,2,0,6,59,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,72,"    public static final Fraction TWO_QUARTERS = new Fraction(2, 4);",1,0,0,1,2,3,0,2,0,6,63,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,84,"    public static final Fraction TWO_FIFTHS = new Fraction(2, 5);",1,0,0,1,2,3,0,2,0,6,61,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,115,    private transient String toProperString = null;,1,0,0,0,0,2,0,1,0,4,47,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,111,    private transient String toString = null;,1,0,0,0,0,2,0,1,0,4,41,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,92,"    public static final Fraction FOUR_FIFTHS = new Fraction(4, 5);",1,0,0,1,2,3,0,2,0,6,62,2,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,677,                if (ch == 'Y') {,1,1,0,1,3,0,0,0,0,3,16,6,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,685,                if (ch == 't') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,0,0,0,2,5,0,2,0,0,2,23,5,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,24,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",1,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,                char ch1 = str.charAt(1);,1,0,0,1,2,0,2,0,0,3,25,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,25,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,                char ch = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,24,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,1,0,0,1,2,0,3,0,0,5,58,4,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,1,0,0,2,4,0,4,1,0,6,56,4,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,3,2,2,0,8,90,2,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,3,2,2,0,8,91,2,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,        return cAvailableLocaleSet.contains(locale);,0,0,0,1,2,0,3,0,0,3,44,5,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,1,1,0,1,3,0,0,0,0,2,16,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",0,0,0,1,2,0,5,0,0,5,38,9,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,2,1,0,1,2,0,1,0,0,4,29,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,2,1,0,3,6,0,3,1,0,8,60,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,2,1,0,1,3,0,0,0,0,3,22,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,1,0,1,1,2,0,0,0,0,3,35,4,0.004423529411768,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,1,1,0,1,3,0,0,0,0,2,27,4,0.004423529411768,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,        if (capacity > buffer.length) {,3,1,0,1,3,0,0,0,0,4,31,4,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,1,1,1,2,5,0,0,0,0,4,23,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,5,1,0,1,3,0,0,0,0,7,42,4,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,1,1,0,1,3,0,0,0,0,2,14,4,0.497058823529413,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",1,0,0,1,2,0,2,0,0,3,28,7,0.497058823529413,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",2,1,0,1,2,0,3,0,0,6,36,9,0.497058823529413,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,0,2,0,0,5,43,5,0.497058823529413,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,1,1,0,1,3,0,0,0,0,2,17,6,0.497058823529413,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,1,1,0,1,3,0,0,0,0,2,18,4,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,0,0,0,0,7,40,5,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,4,1,0,1,3,0,0,0,0,6,34,7,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,2,1,0,1,3,0,0,0,0,3,20,4,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,3,7,0,3,0,0,8,38,9,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,3,2,0,0,0,0,0,0,0,5,28,5,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,3,3,0,1,3,0,0,0,0,6,40,4,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,0,5,47,4,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,1,0,0,0,0,0,0,0,0,1,15,11,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,1,0,0,0,0,0,0,0,0,1,9,7,0.105882352941068,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",2,1,0,1,2,0,6,0,0,9,72,5,0.061176470588272,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,2,0,0,0,0,0,0,0,0,3,12,4,0.061176470588272,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,126,            append(str);,0,0,0,1,2,0,2,0,0,2,12,7,0.008487394957973,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,122,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.008487394957973,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,2,1,0,2,4,0,2,0,0,6,43,6,0.008487394957973,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,5,0,0,5,37,7,0.002941176470591,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,475,            ensureCapacity(len + strLen);,2,1,0,1,2,0,1,0,0,4,29,7,0.002941176470591,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,474,            int len = length();,1,0,0,1,2,0,1,0,0,2,19,7,0.002941176470591,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,477,            size += strLen;,2,0,0,0,0,0,0,0,0,3,15,6,0.002941176470591,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,473,        if (strLen > 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.002864450127878,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,472,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,0.002864450127878,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,469,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.002864450127878,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,262,            Arrays.sort(this.chars);,1,0,0,1,2,0,2,0,0,3,24,6,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,261,            this.chars = (char[]) chars.clone();,1,0,0,3,6,0,2,0,0,4,36,5,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",1,0,0,2,4,3,1,2,0,8,88,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,1,0,0,1,2,3,0,2,0,6,65,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",1,0,0,1,2,3,0,2,0,7,69,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",1,0,0,2,4,3,1,2,0,8,94,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,294,            this.ch = ch;,2,0,0,0,0,0,0,0,0,3,13,5,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",1,0,0,1,2,3,0,2,0,7,76,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,1,0,0,1,2,3,0,2,0,7,69,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,1,0,0,1,2,3,0,2,0,7,68,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,1,0,0,1,2,3,0,2,0,6,63,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,1,0,0,1,2,3,0,2,0,7,77,2,0.00040441176471,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,228,        if (capacity > buffer.length) {,3,1,0,1,3,0,0,0,0,4,31,4,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,182,        return size;,1,0,0,0,0,0,0,0,0,1,12,4,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,0,0,0,0,7,40,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,2,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,3,7,0,3,0,0,8,38,9,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,4,1,0,0,0,0,0,0,0,5,34,5,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,3,3,0,1,3,0,0,0,0,6,40,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,0,5,47,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,1,0,0,0,0,0,0,0,0,1,15,11,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,1,0,0,0,0,0,0,0,0,1,9,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,4,1,0,1,3,0,0,0,0,6,34,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",1,0,0,1,2,0,2,0,0,3,28,7,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,1,1,0,1,3,0,0,0,0,2,17,6,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",2,1,0,1,2,0,3,0,0,6,36,9,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,0,2,0,0,5,43,5,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,1,1,0,1,3,0,0,0,0,2,14,4,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,1,1,0,1,3,0,0,0,0,2,20,6,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",1,0,0,1,2,0,2,0,0,3,28,7,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,1,1,0,1,3,0,0,0,0,2,14,4,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,0,2,0,0,5,43,5,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",1,0,0,1,2,0,3,0,0,5,28,8,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",2,1,0,1,2,0,3,0,0,6,36,9,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",0,0,0,1,2,0,2,0,0,2,23,5,0.869598765431407,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",2,1,0,1,2,0,6,0,0,9,72,5,0.518518518517511,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,2,0,0,0,0,0,0,0,0,3,12,4,0.518518518517511,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.064179375453821,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,2,1,0,2,4,0,2,0,0,6,43,6,0.064179375453821,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,126,            append(str);,0,0,0,1,2,0,2,0,0,2,12,7,0.064179375453821,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,475,            ensureCapacity(len + strLen);,2,1,0,1,2,0,1,0,0,4,29,7,0.021990740740668,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,1,0,0,1,2,0,1,0,0,2,19,7,0.021990740740668,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,477,            size += strLen;,2,0,0,0,0,0,0,0,0,3,15,6,0.021990740740668,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,5,0,0,5,37,7,0.021990740740668,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,473,        if (strLen > 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.021413744127518,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,472,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,0.021413744127518,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,469,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.021413744127518,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,262,            Arrays.sort(this.chars);,1,0,0,1,2,0,2,0,0,3,24,6,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,261,            this.chars = (char[]) chars.clone();,1,0,0,3,6,0,2,0,0,4,36,5,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,1,0,0,1,2,3,0,2,0,6,63,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,1,0,0,1,2,3,0,2,0,7,77,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,1,0,0,1,2,3,0,2,0,6,65,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",1,0,0,1,2,3,0,2,0,7,69,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",1,0,0,2,4,3,1,2,0,8,94,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,294,            this.ch = ch;,2,0,0,0,0,0,0,0,0,3,13,5,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",1,0,0,2,4,3,1,2,0,8,88,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,1,0,0,1,2,3,0,2,0,7,69,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,1,0,0,1,2,3,0,2,0,7,68,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",1,0,0,1,2,3,0,2,0,7,76,2,0.003008282544057,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,228,        if (capacity > buffer.length) {,3,1,0,1,3,0,0,0,0,4,31,4,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,182,        return size;,1,0,0,0,0,0,0,0,0,1,12,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,2,0,0,3,31,11,1,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,1,0,0,1,2,0,2,0,0,3,36,14,1,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,2,3,0,1,3,0,0,0,0,7,37,15,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,1,0,0,2,4,0,4,0,0,6,56,17,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,1,0,0,3,6,0,2,0,0,3,33,11,0.474358974359017,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,3,3,0,1,3,0,0,0,0,7,33,8,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,2,0,0,0,0,0,0,0,0,3,9,8,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,1,1,0,1,3,0,0,0,0,3,24,8,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,1,0,1,2,0,3,1,0,7,47,8,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,2,0,0,3,31,8,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,2,0,0,4,41,9,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,1,1,0,1,3,0,0,0,0,3,16,6,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,1,0,0,1,2,0,3,0,0,4,24,7,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,4,1,0,2,5,0,2,0,0,8,47,4,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,5,0,0,5,39,5,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,1,1,0,1,3,0,0,0,0,3,17,8,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",2,1,0,1,2,0,2,0,0,6,35,9,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",2,1,0,1,2,0,2,0,0,6,35,9,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,1,0,0,2,4,0,2,2,0,5,50,4,0.369230769230821,0
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,1,0,0,1,2,0,2,0,0,4,32,5,0.026590693257361,0
defect4j,lang,org/apache/commons/lang/Entities,62,815,        if (firstAmp < 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.026590693257361,0
defect4j,lang,org/apache/commons/lang/Entities,62,373,        HTML32.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,32,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,372,        HTML32 = new Entities();,1,0,0,1,2,0,0,1,0,3,24,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,374,        HTML32.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,3,0,0,3,36,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,53,    static final String[][] ISO8859_1_ARRAY = {,1,0,0,2,5,2,0,1,0,4,43,2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,379,        fillWithHtml40Entities(HTML40);,0,0,0,1,2,0,2,0,0,2,31,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,378,        HTML40 = new Entities();,1,0,0,1,2,0,0,1,0,3,24,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,133,        table = new Entry[initialCapacity];,1,0,1,1,2,0,0,1,0,4,35,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,132,        this.loadFactor = loadFactor;,2,0,0,0,0,0,0,0,0,3,29,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,134,        threshold = (int) (initialCapacity * loadFactor);,3,1,0,2,4,0,0,0,0,5,49,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,48,    private static final String[][] APOS_ARRAY = {,1,0,0,2,5,3,0,1,0,5,46,2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,41,    private static final String[][] BASIC_ARRAY = {,1,0,0,2,5,3,0,1,0,5,47,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,262,        Entry newMap[] = new Entry[newCapacity];,1,0,1,2,4,0,0,2,0,4,40,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,264,        threshold = (int) (newCapacity * loadFactor);,3,1,0,2,4,0,0,0,0,5,45,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,504,        private int LOOKUP_TABLE_SIZE = 256;,1,0,0,0,0,1,0,0,0,2,36,3,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,428,"            mapValueToName.put(value, name);",0,0,0,1,2,0,4,0,0,4,32,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,502,    static class LookupEntityMap extends PrimitiveEntityMap {,1,0,0,0,1,1,0,1,0,3,57,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,269,                Entry e = old;,2,0,0,0,0,0,0,1,0,3,14,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,268,            for (Entry old = oldMap[i]; old != null;) {,2,1,1,2,5,0,0,1,0,6,43,6,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,296,        Entry tab[] = table;,2,0,0,1,2,0,0,1,0,3,20,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,297,        int hash = key;,2,0,0,0,0,0,0,0,0,2,15,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,298,        int index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,0,0,0,0,6,45,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,299,        for (Entry e = tab[index]; e != null; e = e.next) {,5,1,1,2,5,0,0,1,0,10,51,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,693,    EntityMap map = new Entities.LookupEntityMap();,3,0,0,1,2,0,0,1,0,4,47,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,272,                int index = (e.hash & 0x7FFFFFFF) % newCapacity;,4,2,0,1,2,0,0,0,0,6,48,9,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,84,            this.hash = hash;,2,0,0,0,0,0,0,0,0,3,17,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,85,            this.key = key;,2,0,0,0,0,0,0,0,0,3,15,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,86,            this.value = value;,2,0,0,0,0,0,0,0,0,3,19,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,87,            this.next = next;,2,0,0,0,0,0,0,0,0,3,17,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",5,0,0,1,3,1,0,2,0,8,62,3,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,273,                e.next = newMap[index];,2,0,1,1,2,0,0,0,0,5,23,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,270,                old = old.next;,3,0,0,0,0,0,0,0,0,4,15,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,274,                newMap[index] = e;,1,0,1,1,2,0,0,0,0,4,18,8,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,388,        entities.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,34,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,389,        entities.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,3,0,0,3,38,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,261,        int newCapacity = oldCapacity * 2 + 1;,2,2,0,0,0,0,0,0,0,4,38,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,154,    static final String[][] HTML40_ARRAY = {,1,0,0,2,5,2,0,1,0,4,40,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,265,        table = newMap;,2,0,0,0,0,0,0,0,0,3,15,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,267,        for (int i = oldCapacity; i-- > 0;) {,3,1,0,1,3,0,0,0,0,5,37,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,427,"            mapNameToValue.put(name, new Integer(value));",1,0,0,2,4,0,3,1,0,5,45,6,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,125,        if (loadFactor <= 0) {,1,1,0,1,3,0,0,0,0,2,22,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,390,        entities.addEntities(HTML40_ARRAY);,0,0,0,1,2,0,3,0,0,3,35,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,421,        private IntHashMap mapValueToName = new IntHashMap();,1,0,0,1,2,1,0,2,0,4,53,3,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,420,        private Map mapNameToValue = new HashMap();,1,0,0,1,2,1,0,2,0,4,43,3,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,309,            rehash();,0,0,0,1,2,0,1,0,0,1,9,7,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,307,        if (count >= threshold) {,2,1,0,1,3,0,0,0,0,3,25,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,128,        if (initialCapacity == 0) {,1,1,0,1,3,0,0,0,0,2,27,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,300,            if (e.hash == hash) {,3,1,0,1,3,0,0,0,0,4,21,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,702,"            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));",0,0,1,6,12,0,3,0,0,7,66,7,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,701,        for (int i = 0; i < entityArray.length; ++i) {,5,1,0,1,3,0,0,0,0,7,46,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,258,        int oldCapacity = table.length;,3,0,0,0,0,0,0,0,0,3,31,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,259,        Entry oldMap[] = table;,2,0,0,1,2,0,0,1,0,3,23,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,39,class Entities {,1,0,0,0,1,0,0,0,0,1,16,1,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,318,        count++;,1,0,0,0,0,0,0,0,0,2,8,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,317,        tab[index] = e;,1,0,1,1,2,0,0,0,0,4,15,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,316,"        Entry e = new Entry(hash, key, value, tab[index]);",4,0,1,2,4,0,0,2,0,8,50,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,311,            tab = table;,2,0,0,0,0,0,0,0,0,3,12,6,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,312,            index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,0,0,0,0,7,41,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,366,        XML = new Entities();,1,0,0,1,2,0,0,1,0,3,21,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,367,        XML.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,29,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,368,        XML.addEntities(APOS_ARRAY);,0,0,0,1,2,0,3,0,0,3,28,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,419,    static class PrimitiveEntityMap implements EntityMap {,1,0,0,0,1,1,0,1,0,3,54,2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,713,"        map.add(name, value);",0,0,0,1,2,0,4,0,0,4,21,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,122,        if (initialCapacity < 0) {,1,1,0,1,3,0,0,0,0,2,26,4,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,437,            int newdiff = startValue - endValue;,3,1,0,0,0,0,0,0,0,4,36,7,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,439,            return newdiff;,1,0,0,0,0,0,0,0,0,1,15,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,306,            days += 31;,1,0,0,0,0,0,0,0,0,2,11,6,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,312,            months -= 1;,1,0,0,0,0,0,0,0,0,2,12,6,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,315,            months += 12;,1,0,0,0,0,0,0,0,0,2,13,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,316,            years -= 1;,1,0,0,0,0,0,0,0,0,2,11,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,438,"            end.add( field, newdiff );",0,0,0,1,2,0,4,0,0,4,26,7,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,2,1,0,0,0,0,0,0,0,4,19,6,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,1,0,0,0,0,0,0,0,0,2,9,6,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,2,1,0,0,0,0,0,0,0,4,22,6,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,1,0,0,0,0,0,0,0,0,2,10,6,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,1,0,0,0,0,0,0,0,0,2,12,6,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,2,1,0,0,0,0,0,0,0,4,31,6,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,1,0,0,0,0,0,0,0,0,2,12,6,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,2,1,0,0,0,0,0,0,0,4,24,6,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,1,0,0,0,0,0,0,0,0,2,10,8,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,2,1,0,0,0,0,0,0,0,4,21,8,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,4,0,0,4,46,7,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,0,6,0,0,7,81,5,0.476190476190473,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,3,1,0,0,0,0,0,0,0,4,38,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,3,2,0,1,3,0,0,0,0,5,45,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,1,1,0,1,3,0,0,0,0,2,21,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,1,1,0,1,3,0,0,0,0,2,21,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,5,1,0,2,4,0,4,0,0,10,62,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,5,1,0,2,4,0,4,0,0,10,65,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,5,1,0,2,4,0,4,0,0,10,77,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,5,1,0,2,4,0,4,0,0,10,76,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,5,1,0,2,4,0,4,0,0,10,68,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,5,1,0,2,4,0,4,0,0,10,68,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,5,1,0,2,4,0,4,0,0,10,83,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",3,0,0,1,2,0,4,0,0,8,66,4,0.21428571428571,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",3,0,0,1,2,0,4,0,0,8,67,4,0.21428571428571,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",3,0,0,1,2,0,4,0,0,8,66,4,0.21428571428571,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",3,0,0,1,2,0,4,0,0,8,63,4,0.21428571428571,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",3,0,0,1,2,0,4,0,0,8,60,4,0.21428571428571,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,1,1,0,1,3,0,0,0,0,2,26,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",1,1,0,1,2,0,3,0,0,6,34,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,2,1,0,1,3,0,0,0,0,3,28,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,1,1,0,1,3,0,0,0,0,2,20,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",3,0,0,1,2,0,4,0,0,8,66,4,0.21428571428571,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,1,0,0,1,2,0,3,0,0,4,30,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,1,0,0,1,2,0,3,0,0,4,34,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,0,10,0,0,10,96,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",3,0,0,1,2,0,4,0,0,8,81,4,0.21428571428571,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,1,0,0,1,2,0,3,1,0,5,46,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,1,0,0,2,4,0,2,1,0,4,33,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,1,0,0,1,2,0,3,1,0,5,48,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,1,0,0,2,4,0,2,1,0,4,37,5,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,1,0,0,2,4,0,2,1,0,4,30,4,0.21428571428571,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",1,0,0,2,5,0,9,0,0,11,96,12,0.083333333333328,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,1,0,0,0,0,0,0,0,0,3,26,11,0.083333333333328,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,2,0,0,0,0,0,0,0,0,4,29,6,0.057142857142852,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3870,            return str; // returns original String when possible,1,0,0,0,0,0,0,0,0,1,52,6,0.027210884353662,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.027210884353662,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3869,        if (pads <= 0) {,1,1,0,1,3,0,0,0,0,2,16,4,0.027210884353662,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3868,        int pads = size - str.length();,2,1,0,1,2,0,2,0,0,5,31,5,0.027210884353662,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,0,0,0,0,0,0,0,0,0,1,13,5,0.027210884353662,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,503,                    previous.increment();,0,0,0,1,2,0,2,0,0,2,21,11,0.017857142857138,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,566,            count++;,1,0,0,0,0,0,0,0,0,2,8,5,0.017857142857138,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,528,            int sz = tokens.length;,3,0,0,0,0,0,0,0,0,3,23,6,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,529,            for (int i = 0; i < sz; i++) {,4,1,0,1,3,0,0,0,0,6,30,5,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,430,        return buffer.toString();,0,0,0,1,2,0,2,0,0,2,25,5,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,531,                    return true;,0,0,0,0,0,0,0,0,0,1,12,9,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,386,            int count = token.getCount();,1,0,0,1,2,0,2,0,0,3,29,7,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,387,            if (value instanceof StringBuffer) {,1,0,0,1,3,0,0,1,0,2,36,7,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,384,            Token token = tokens[i];,1,0,1,1,2,0,0,1,0,4,24,6,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,385,            Object value = token.getValue();,1,0,0,1,2,0,2,1,0,4,32,6,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,382,        int sz = tokens.length;,3,0,0,0,0,0,0,0,0,3,23,5,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,383,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,0,0,0,0,6,30,4,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,380,        StringBuffer buffer = new StringBuffer();,1,0,0,1,2,0,0,2,0,3,41,4,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,381,        boolean lastOutputSeconds = false;,1,0,0,0,0,0,0,0,0,2,34,5,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,390,                if (value == y) {,2,1,0,1,3,0,0,0,0,3,17,8,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,394,                } else if (value == M) {,2,1,0,1,4,0,0,0,0,3,24,9,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,530,                if (tokens[i].getValue() == value) {,1,1,1,3,7,0,1,0,0,5,36,7,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,575,            return count;,1,0,0,0,0,0,0,0,0,1,13,5,0.010582010581947,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,584,            return value;,1,0,0,0,0,0,0,0,0,1,13,5,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,469,            if(inLiteral && ch != '\'') {,2,2,0,1,3,0,0,0,0,5,29,6,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,468,            char ch = array[i];,1,0,1,1,2,0,0,0,0,3,19,7,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,467,        for(int i=0; i<sz; i++) {,4,1,0,1,3,0,0,0,0,6,25,4,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,466,        int sz = array.length;,3,0,0,0,0,0,0,0,0,3,22,5,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,465,        Token previous = null;,1,0,0,0,0,0,0,1,0,2,22,4,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,464,        StringBuffer buffer = null;,1,0,0,0,0,0,0,1,0,2,27,4,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,463,        boolean inLiteral = false;,1,0,0,0,0,0,0,0,0,2,26,5,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,461,        java.util.ArrayList list = new java.util.ArrayList(array.length);,9,0,0,1,2,0,0,0,0,9,65,4,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,460,        char[] array = format.toCharArray();,1,0,0,2,4,0,2,0,0,3,36,5,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,501,            if(value != null) {,1,1,0,1,3,0,0,0,0,2,19,6,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,502,                if(previous != null && previous.getValue() == value) {,2,3,0,2,5,0,2,0,0,7,54,8,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,505,                    Token token = new Token(value);,2,0,0,1,2,0,0,2,0,4,31,10,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,506,                    list.add(token); ,0,0,0,1,2,0,3,0,0,3,16,11,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,507,                    previous = token;,2,0,0,0,0,0,0,0,0,3,17,10,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,509,                buffer = null; ,1,0,0,0,0,0,0,0,0,2,14,8,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,512,        return (Token[]) list.toArray( new Token[0] );,0,0,0,4,8,0,2,2,0,4,46,5,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,545,        Token(Object value) {,2,0,0,1,3,0,0,1,0,3,21,3,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,546,            this.value = value;,2,0,0,0,0,0,0,0,0,3,19,5,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,547,            this.count = 1;,1,0,0,0,0,0,0,0,0,2,15,5,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,474,            switch(ch) {,1,0,0,1,3,0,0,0,0,1,12,6,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,473,            Object value = null;,1,0,0,0,0,0,0,1,0,2,20,6,0.0047619047619,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,450,"    static final Object s = ""s"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,451,"    static final Object S = ""S"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,445,"    static final Object y = ""y"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,447,"    static final Object d = ""d"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,446,"    static final Object M = ""M"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,449,"    static final Object m = ""m"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,448,"    static final Object H = ""H"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
