dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,math,org/apache/commons/math/complex/Complex,96,277,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,1.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,280,"        return 37 * (17 * MathUtils.hash(imaginary) + 
",0,3,0,1,3,1,6,0,0,9,45,4,1.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,363,"        return createComplex(real * rhs.real - imaginary * rhs.imaginary,
",12,3,0,0,1,1,2,0,0,17,65,5,0.05263,0
defect4j,math,org/apache/commons/math/complex/Complex,96,358,"        if (Double.isInfinite(real) || Double.isInfinite(imaginary) ||
",0,1,0,2,5,0,12,0,0,13,62,4,0.04348,0
defect4j,math,org/apache/commons/math/complex/Complex,96,258,"                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); 
",2,3,0,8,16,0,28,0,0,34,179,11,0.03448,1
defect4j,math,org/apache/commons/math/complex/Complex,96,355,"        if (isNaN() || rhs.isNaN()) {
",0,1,0,3,7,0,6,0,0,7,29,4,0.03448,0
defect4j,math,org/apache/commons/math/complex/Complex,96,255,"                if (rhs.isNaN()) {
",0,0,0,2,5,0,4,0,0,4,18,10,0.03125,0
defect4j,math,org/apache/commons/math/complex/Complex,96,263,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03125,0
defect4j,math,org/apache/commons/math/complex/Complex,96,254,"                Complex rhs = (Complex)other;
",4,0,0,1,2,0,0,4,0,8,29,9,0.03030,0
defect4j,math,org/apache/commons/math/complex/Complex,96,250,"        } else if (other == null) {
",2,1,0,1,4,0,0,0,0,3,27,5,0.02941,0
defect4j,math,org/apache/commons/math/complex/Complex,96,248,"        if (this == other) { 
",2,1,0,1,3,0,0,0,0,3,20,4,0.02703,0
defect4j,math,org/apache/commons/math/complex/Complex,96,266,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.02703,0
defect4j,math,org/apache/commons/math/complex/Complex,96,872,"        return new Complex(real, imaginary);
",4,0,0,1,2,1,0,2,0,6,36,5,0.01639,0
defect4j,math,org/apache/commons/math/complex/Complex,96,310,"        return Double.isNaN(real) || Double.isNaN(imaginary);        
",0,1,0,2,4,1,12,0,0,13,53,4,0.00909,0
defect4j,math,org/apache/commons/math/complex/Complex,96,299,"        return real;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00870,0
defect4j,math,org/apache/commons/math/complex/Complex,96,76,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,77,"        this.real = real;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,78,"        this.imaginary = imaginary;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,79,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,45,"    public static final Complex I = new Complex(0.0, 1.0);
",2,0,0,1,2,3,0,4,0,9,54,2,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,48,"    public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
",10,0,0,1,2,3,0,4,0,17,70,2,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,51,"    public static final Complex INF = new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
",10,0,0,1,2,3,0,4,0,17,98,2,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,54,"    public static final Complex ONE = new Complex(1.0, 0.0);
",2,0,0,1,2,3,0,4,0,9,56,2,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,57,"    public static final Complex ZERO = new Complex(0.0, 0.0);
",2,0,0,1,2,3,0,4,0,9,57,2,0.00676,0
defect4j,math,org/apache/commons/math/complex/Complex,96,92,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,93,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,96,"        if (isInfinite()) {
",0,0,0,2,5,0,2,0,0,2,19,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,97,"            return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,100,"        if (Math.abs(real) < Math.abs(imaginary)) {
",0,1,0,3,7,0,12,0,0,13,43,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,101,"            if (imaginary == 0.0) {
",2,1,0,1,3,0,0,0,0,3,23,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,102,"                return Math.abs(real);
",0,0,0,1,2,1,6,0,0,6,22,9,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,104,"            double q = real / imaginary;
",6,1,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,105,"            return (Math.abs(imaginary) * Math.sqrt(1 + q*q));
",4,3,0,3,6,1,10,0,0,17,50,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,107,"            if (real == 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,108,"                return Math.abs(imaginary);
",0,0,0,1,2,1,6,0,0,6,27,9,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,110,"            double q = imaginary / real;
",6,1,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,111,"            return (Math.abs(real) * Math.sqrt(1 + q*q));
",4,3,0,3,6,1,10,0,0,17,45,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,133,"        return createComplex(real + rhs.getReal(),
",2,1,0,1,3,1,6,0,0,9,42,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,152,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,153,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,155,"        return createComplex(real, -imaginary);
",2,0,0,1,2,1,4,0,0,7,39,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,194,"        if (isNaN() || rhs.isNaN()) {
",0,1,0,3,7,0,6,0,0,7,29,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,195,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,198,"        double c = rhs.getReal();
",2,0,0,1,2,0,4,0,0,6,25,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,199,"        double d = rhs.getImaginary();
",2,0,0,1,2,0,4,0,0,6,30,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,200,"        if (c == 0.0 && d == 0.0) {
",4,3,0,1,3,0,0,0,0,7,27,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,201,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,204,"        if (rhs.isInfinite() && !isInfinite()) {
",0,1,0,3,7,0,6,0,0,8,40,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,205,"            return ZERO;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,208,"        if (Math.abs(c) < Math.abs(d)) {
",0,1,0,3,7,0,12,0,0,13,32,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,209,"            if (d == 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,210,"                return createComplex(real/c, imaginary/c);
",8,2,0,1,2,1,2,0,0,12,42,9,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,212,"            double q = c / d;
",6,1,0,0,0,0,0,0,0,7,17,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,213,"            double denominator = c * q + d;
",8,2,0,0,0,0,0,0,0,10,31,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,214,"            return createComplex((real * q + imaginary) / denominator,
",8,3,0,1,3,1,2,0,0,13,58,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,217,"            if (c == 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,218,"                return createComplex(imaginary/d, -real/c);
",8,2,0,1,2,1,2,0,0,13,43,9,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,220,"            double q = d / c;
",6,1,0,0,0,0,0,0,0,7,17,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,221,"            double denominator = d * q + c;
",8,2,0,0,0,0,0,0,0,10,31,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,222,"            return createComplex((imaginary * q + real) / denominator,
",8,3,0,1,3,1,2,0,0,13,58,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,249,"            ret = true;
",2,0,0,0,0,0,0,0,0,4,11,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,251,"            ret = false;
",2,0,0,0,0,0,0,0,0,4,12,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,256,"                    ret = this.isNaN();
",2,0,0,1,2,0,2,0,0,5,19,11,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,260,"            } catch (ClassCastException ex) {
",2,0,0,1,4,0,0,2,0,4,33,9,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,262,"                ret = false;
",2,0,0,0,0,0,0,0,0,4,12,10,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,278,"            return 7;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,290,"        return imaginary;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,323,"        return !isNaN() && 
",0,1,0,1,2,1,2,0,0,4,18,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,356,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,361,"            return INF;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,376,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,377,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,380,"        return createComplex(-real, -imaginary);
",4,0,0,1,2,1,2,0,0,8,40,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,402,"        if (isNaN() || rhs.isNaN()) {
",0,1,0,3,7,0,6,0,0,7,29,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,403,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,406,"        return createComplex(real - rhs.getReal(),
",2,1,0,1,3,1,6,0,0,9,42,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,425,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,426,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,429,"        return this.add(this.sqrt1z().multiply(Complex.I)).log()
",4,0,0,4,8,1,8,0,0,12,56,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,448,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,449,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,452,"        return sqrt1z().add(this.multiply(Complex.I)).log()
",4,0,0,4,8,1,8,0,0,12,51,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,471,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,472,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,475,"        return this.add(Complex.I).divide(Complex.I.subtract(this)).log()
",8,0,0,4,8,1,8,0,0,16,65,6,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,506,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,507,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,510,"        return createComplex(Math.cos(real) * MathUtils.cosh(imaginary),
",0,1,0,2,5,1,14,0,0,15,64,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,540,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,541,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,544,"        return createComplex(MathUtils.cosh(real) * Math.cos(imaginary),
",0,1,0,2,5,1,14,0,0,15,64,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,575,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,576,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,579,"        double expReal = Math.exp(real);
",2,0,0,1,2,0,6,0,0,8,32,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,580,"        return createComplex(expReal *  Math.cos(imaginary), expReal * Math.sin(imaginary));
",4,2,0,3,6,1,14,0,0,20,84,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,613,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,614,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,617,"        return createComplex(Math.log(abs()),
",0,0,0,2,5,1,8,0,0,8,37,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,639,"        if (x == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,640,"            throw new NullPointerException();
",0,0,0,1,2,0,0,2,0,2,33,8,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,642,"        return this.log().multiply(x).exp();
",0,0,0,3,6,1,8,0,0,8,36,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,672,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,673,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,676,"        return createComplex(Math.sin(real) * MathUtils.cosh(imaginary),
",0,1,0,2,5,1,14,0,0,15,64,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,706,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,707,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,710,"        return createComplex(MathUtils.sinh(real) * Math.cos(imaginary),
",0,1,0,2,5,1,14,0,0,15,64,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,748,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,749,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,752,"        if (real == 0.0 && imaginary == 0.0) {
",4,3,0,1,3,0,0,0,0,7,38,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,753,"            return createComplex(0.0, 0.0);
",0,0,0,1,2,1,2,0,0,2,31,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,756,"        double t = Math.sqrt((Math.abs(real) + abs()) / 2.0);
",2,2,0,4,8,0,12,0,0,16,53,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,757,"        if (real >= 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,758,"            return createComplex(t, imaginary / (2.0 * t));
",4,2,0,2,4,1,4,0,0,10,47,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,760,"            return createComplex(Math.abs(imaginary) / (2.0 * t),
",2,2,0,2,5,1,8,0,0,12,53,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,784,"        return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
",0,0,0,4,8,1,8,0,0,8,68,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,814,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,815,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,818,"        double real2 = 2.0 * real;
",4,1,0,0,0,0,0,0,0,5,26,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,819,"        double imaginary2 = 2.0 * imaginary;
",4,1,0,0,0,0,0,0,0,5,36,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,820,"        double d = Math.cos(real2) + MathUtils.cosh(imaginary2);
",2,1,0,2,4,0,12,0,0,15,56,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,822,"        return createComplex(Math.sin(real2) / d, MathUtils.sinh(imaginary2) / d);
",4,2,0,3,6,1,14,0,0,20,74,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,852,"        if (isNaN()) {
",0,0,0,2,5,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,853,"            return Complex.NaN;
",4,0,0,0,0,1,0,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,856,"        double real2 = 2.0 * real;
",4,1,0,0,0,0,0,0,0,5,26,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,857,"        double imaginary2 = 2.0 * imaginary;
",4,1,0,0,0,0,0,0,0,5,36,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,858,"        double d = MathUtils.cosh(real2) + Math.cos(imaginary2);
",2,1,0,2,4,0,12,0,0,15,56,5,0.00000,0
defect4j,math,org/apache/commons/math/complex/Complex,96,860,"        return createComplex(MathUtils.sinh(real2) / d, Math.sin(imaginary2) / d);
",4,2,0,3,6,1,14,0,0,20,74,5,0.00000,0
