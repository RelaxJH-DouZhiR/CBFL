dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,180,"                loop     = false;
",2,0,0,0,0,0,0,0,0,4,17,12,1.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,300,"                  loop     = false;
",2,0,0,0,0,0,0,0,0,4,17,14,1.00000,1
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,150,"    if ((initialStepSize < minStep) || (initialStepSize > maxStep)) {
",8,3,0,3,7,0,0,0,0,11,65,4,0.50000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,153,"      initialStep = initialStepSize;
",4,0,0,0,0,0,0,0,0,5,30,6,0.50000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,155,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,211,"      return forward ? initialStep : -initialStep;
",6,0,0,0,0,1,0,0,0,7,44,7,0.50000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,292,"          filteredH = maxStep;
",4,0,0,0,0,0,0,0,0,5,20,6,0.33333,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,335,"                x1 = x1 + 0.5 * tolerance;
",6,2,0,0,0,0,0,0,0,9,26,9,0.28571,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,107,"      System.arraycopy(currentState,      0, interpolatedState,       0, currentState.length);
",4,0,0,1,2,0,8,0,0,12,88,5,0.18182,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,108,"      System.arraycopy(currentDerivative, 0, interpolatedDerivatives, 0, currentDerivative.length);
",4,0,0,1,2,0,8,0,0,12,93,5,0.18182,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,109,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.18182,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,107,"  protected AbstractStepInterpolator(final double[] y, final boolean forward) {
",6,0,0,2,5,3,0,0,0,9,77,2,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,109,"    previousTime      = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,110,"    currentTime       = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,111,"    h                 = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,112,"    interpolatedTime  = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,114,"    currentState            = y;
",4,0,0,0,0,0,0,0,0,5,28,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,115,"    interpolatedState       = new double[y.length];
",6,0,0,1,2,0,0,0,0,7,47,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,116,"    interpolatedDerivatives = new double[y.length];
",6,0,0,1,2,0,0,0,0,7,47,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,118,"    finalized         = false;
",2,0,0,0,0,0,0,0,0,4,26,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,119,"    this.forward      = forward;
",4,0,0,0,0,0,0,0,0,5,28,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,120,"    this.dirtyState   = true;
",2,0,0,0,0,0,0,0,0,4,25,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,122,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,72,"    super(y, forward);
",4,0,0,1,2,0,0,0,0,4,18,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,73,"    currentDerivative = yDot;
",4,0,0,0,0,0,0,0,0,5,25,4,0.17391,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,74,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.17391,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,128,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.16000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,109,"        return states.isEmpty();
",0,0,0,1,2,1,4,0,0,4,24,5,0.16000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,123,"      interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward);
",8,1,1,2,4,0,0,2,0,14,75,6,0.08333,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,217,"      interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward);
",8,1,1,2,4,0,0,2,0,14,75,6,0.08333,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,71,"    super(""classical Runge-Kutta"", STATIC_C, STATIC_A, STATIC_B,
",6,0,0,0,1,0,0,0,0,7,60,4,0.07692,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,73,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,49,"  private static final double[] STATIC_C = {
",2,0,0,1,3,3,0,0,0,5,42,2,0.07692,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,54,"  private static final double[][] STATIC_A = {
",2,0,0,2,5,3,0,0,0,5,44,2,0.07692,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,61,"  private static final double[] STATIC_B = {
",2,0,0,1,3,3,0,0,0,5,42,2,0.07692,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,64,"    public ClassicalRungeKuttaStepInterpolator() {
",2,0,0,1,3,1,0,0,0,3,46,2,0.07692,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.07692,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,336,"            } else if (dx <= 0.0) {
",2,1,0,1,4,0,0,0,0,3,23,8,0.06897,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,337,"                x1 = x1 - 0.5 * tolerance;
",6,2,0,0,0,0,0,0,0,9,26,10,0.06897,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,285,"                setResult(x1, i);
",0,0,0,1,2,0,6,0,0,6,17,9,0.06349,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,286,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.06349,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,314,"                    p = -p;
",4,0,0,0,0,0,0,0,0,6,7,10,0.06349,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,334,"            } else if (dx > 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,7,0.06349,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,312,"                    p1 = -p1;
",4,0,0,0,0,0,0,0,0,6,9,10,0.05970,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,341,"                x2 = x0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.05479,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,342,"                y2 = y0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.05479,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,343,"                delta = x1 - x0;
",6,1,0,0,0,0,0,0,0,8,16,8,0.05479,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,344,"                oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,8,0.05479,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,334,"        if (nextAction == EventHandler.RESET_STATE) {
",6,1,0,1,3,0,0,0,0,7,45,4,0.05063,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,337,"        pendingEvent      = false;
",2,0,0,0,0,0,0,0,0,4,26,4,0.05063,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,338,"        pendingEventTime  = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.05063,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,340,"        return (nextAction == EventHandler.RESET_STATE) ||
",6,2,0,1,2,1,0,0,0,8,50,4,0.05063,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,262,"            return STOP;
",2,0,0,0,0,1,0,0,0,2,12,5,0.04819,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,267,"                x0 = x1;
",4,0,0,0,0,0,0,0,0,5,8,8,0.04706,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,268,"                x1 = x2;
",4,0,0,0,0,0,0,0,0,5,8,8,0.04706,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,269,"                x2 = x0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.04706,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,270,"                y0 = y1;
",4,0,0,0,0,0,0,0,0,5,8,8,0.04706,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,271,"                y1 = y2;
",4,0,0,0,0,0,0,0,0,5,8,8,0.04706,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,272,"                y2 = y0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.04706,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,281,"            double dx = x2 - x1;
",6,1,0,0,0,0,0,0,0,7,20,7,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,282,"            double tolerance =
",2,0,0,0,0,0,0,0,0,2,18,7,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,284,"            if (Math.abs(dx) <= tolerance) {
",2,1,0,2,5,0,6,0,0,9,32,6,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,288,"            if ((Math.abs(oldDelta) < tolerance) ||
",2,2,0,2,5,0,6,0,0,10,39,6,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,294,"                double r3 = y1 / y0;
",6,1,0,0,0,0,0,0,0,7,20,9,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,300,"                if (x0 == x2) {
",4,1,0,1,3,0,0,0,0,5,15,8,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,302,"                    p = dx * r3;
",6,1,0,0,0,0,0,0,0,8,12,10,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,303,"                    p1 = 1.0 - r3;
",4,1,0,0,0,0,0,0,0,6,14,10,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,311,"                if (p > 0.0) {
",2,1,0,1,3,0,0,0,0,3,14,8,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,316,"                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
",10,6,0,1,3,0,4,0,0,20,58,8,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,324,"                    oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,10,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,325,"                    delta = p / p1;
",6,1,0,0,0,0,0,0,0,8,15,10,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,329,"            x0 = x1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,330,"            y0 = y1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,332,"            if (Math.abs(delta) > tolerance) {
",2,1,0,2,5,0,6,0,0,9,34,6,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,339,"            y1 = f.value(x1);
",2,0,0,1,2,0,6,0,0,9,17,6,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,340,"            if ((y1 > 0) == (y2 > 0)) {
",4,3,0,3,7,0,0,0,0,7,27,6,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,346,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.04651,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,347,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04651,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,230,"                    if ((Math.abs(root - ta) <= convergence) &&
",6,3,0,2,5,0,4,0,0,13,43,10,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,235,"                    } else if (Double.isNaN(previousEventTime) ||
",0,1,0,1,4,0,6,0,0,7,45,11,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,237,"                        pendingEventTime = root;
",4,0,0,0,0,0,0,0,0,5,24,13,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,238,"                        if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
",8,3,0,3,7,0,4,0,0,15,71,13,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,247,"                        pendingEvent = true;
",2,0,0,0,0,0,0,0,0,4,20,13,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,248,"                        return true;
",0,0,0,0,0,1,0,0,0,1,12,13,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,282,"        return pendingEventTime;
",2,0,0,0,0,1,0,0,0,2,24,4,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,301,"            previousEventTime = t;
",4,0,0,0,0,0,0,0,0,5,22,6,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,302,"            g0Positive        = increasing;
",4,0,0,0,0,0,0,0,0,5,31,6,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,303,"            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
",6,1,0,2,4,0,8,0,0,17,73,6,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,153,"                    if (first == null) {
",2,1,0,1,3,0,0,0,0,3,20,10,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,154,"                        first = state;
",4,0,0,0,0,0,0,0,0,5,14,12,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,187,"        return (first == null) ? Double.NaN : first.getEventTime();
",6,1,0,2,4,1,4,0,0,11,59,5,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,217,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.04598,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,234,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.04598,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,141,"        this.result         = newResult;
",4,0,0,0,0,0,0,0,0,5,32,4,0.04598,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,142,"        this.iterationCount = iterationCount;
",4,0,0,0,0,0,0,0,0,5,37,4,0.04598,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,143,"        this.resultComputed = true;
",2,0,0,0,0,0,0,0,0,4,27,4,0.04598,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,144,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04598,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,214,"                    final UnivariateRealFunction f = new UnivariateRealFunction() {
",2,0,0,1,3,1,0,4,0,7,63,10,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,217,"                                interpolator.setInterpolatedTime(t);
",0,0,0,1,2,0,6,0,0,6,36,19,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,218,"                                return handler.g(t, interpolator.getInterpolatedState());
",0,0,0,2,4,1,10,0,0,10,57,19,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,191,"                    if (ga * gb > 0) {
",4,2,0,1,3,0,0,0,0,6,18,10,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,212,"                    increasing = gb >= ga;
",6,1,0,0,0,0,0,0,0,8,22,10,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,214,"                    final UnivariateRealFunction f = new UnivariateRealFunction() {
",2,0,0,1,3,1,0,4,0,7,63,10,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,226,"                    final BrentSolver solver = new BrentSolver();
",2,0,0,1,2,1,0,4,0,7,45,10,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,227,"                    solver.setAbsoluteAccuracy(convergence);
",0,0,0,1,2,0,6,0,0,6,40,11,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,228,"                    solver.setMaximalIterationCount(maxIterationCount);
",0,0,0,1,2,0,6,0,0,6,51,11,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,229,"                    final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
",6,1,0,3,6,1,20,0,0,28,83,10,0.04545,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,42,"public class EventState {
",2,0,0,0,1,1,0,0,0,3,25,1,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,72,"        super(DEFAULT_MAXIMUM_ITERATIONS, DEFAULT_ABSOLUTE_ACCURACY);
",4,0,0,1,2,0,0,0,0,4,61,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,73,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,199,"        clearResult();
",0,0,0,1,2,0,2,0,0,2,14,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,200,"        verifyInterval(min, max);
",0,0,0,1,2,0,6,0,0,6,25,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,202,"        double ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,24,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,204,"        double yMin = f.value(min);
",2,0,0,1,2,0,6,0,0,8,27,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,205,"        double yMax = f.value(max);
",2,0,0,1,2,0,6,0,0,8,27,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,208,"        double sign = yMin * yMax;
",6,1,0,0,0,0,0,0,0,7,26,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,209,"        if (sign > 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,222,"        } else if (sign < 0){
",2,1,0,1,4,0,0,0,0,3,21,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,224,"            ret = solve(f, min, yMin, max, yMax, min, yMin);
",2,0,0,1,2,0,16,0,0,19,48,7,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,260,"        double delta = x1 - x0;
",6,1,0,0,0,0,0,0,0,7,23,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,261,"        double oldDelta = delta;
",4,0,0,0,0,0,0,0,0,4,24,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,263,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,264,"        while (i < maximalIterationCount) {
",4,1,0,1,3,0,0,0,0,5,35,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,265,"            if (Math.abs(y2) < Math.abs(y1)) {
",0,1,0,3,7,0,12,0,0,13,34,6,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,274,"            if (Math.abs(y1) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,44,6,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,41,"    protected boolean resultComputed = false;
",2,0,0,0,0,1,0,0,0,4,41,2,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,93,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
",4,0,0,1,2,0,0,0,0,4,61,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,94,"        this.defaultFunctionValueAccuracy = 1.0e-15;
",2,0,0,0,0,0,0,0,0,3,44,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,95,"        this.functionValueAccuracy = defaultFunctionValueAccuracy;
",4,0,0,0,0,0,0,0,0,5,58,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,96,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,165,"        this.iterationCount = 0;
",2,0,0,0,0,0,0,0,0,3,24,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,166,"        this.resultComputed = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,167,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,208,"        if (lower >= upper) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.04545,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,213,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,61,"                                      final double defaultAbsoluteAccuracy) {
",2,0,0,0,2,1,0,0,0,3,39,3,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,62,"        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,55,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,63,"        this.defaultRelativeAccuracy = 1.0e-14;
",2,0,0,0,0,0,0,0,0,3,39,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,64,"        this.absoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,48,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,65,"        this.relativeAccuracy = defaultRelativeAccuracy;
",4,0,0,0,0,0,0,0,0,5,48,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,66,"        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,65,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,67,"        this.maximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,58,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,68,"        this.iterationCount = 0;
",2,0,0,0,0,0,0,0,0,3,24,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,69,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,78,"        absoluteAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,28,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,79,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,93,"        maximalIterationCount = count;
",4,0,0,0,0,0,0,0,0,5,30,4,0.04545,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,94,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04545,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,267,"            return t - endTime;
",4,1,0,0,0,1,0,0,0,5,19,5,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,151,"        t0 = tStart;
",4,0,0,0,0,0,0,0,0,5,12,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,152,"        g0 = handler.g(tStart, yStart);
",2,0,0,1,2,0,8,0,0,11,31,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,153,"        g0Positive = g0 >= 0;
",4,1,0,0,0,0,0,0,0,6,21,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,154,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,172,"            forward = interpolator.isForward();
",2,0,0,1,2,0,4,0,0,7,35,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,173,"            final double t1 = interpolator.getCurrentTime();
",2,0,0,1,2,1,4,0,0,7,48,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,174,"            final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
",8,2,0,4,8,1,12,0,0,23,85,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,175,"            final double h  = (t1 - t0) / n;
",8,2,0,1,2,1,0,0,0,11,32,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,177,"            double ta = t0;
",4,0,0,0,0,0,0,0,0,4,15,7,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,178,"            double ga = g0;
",4,0,0,0,0,0,0,0,0,4,15,7,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,179,"            double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
",8,1,0,2,4,0,4,0,0,14,73,7,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,180,"            for (int i = 0; i < n; ++i) {
",8,1,0,1,3,0,0,0,0,10,29,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,183,"                tb += h;
",4,0,0,0,0,0,0,0,0,5,8,8,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,184,"                interpolator.setInterpolatedTime(tb);
",0,0,0,1,2,0,6,0,0,6,37,9,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,185,"                final double gb = handler.g(tb, interpolator.getInterpolatedState());
",2,0,0,2,4,1,10,0,0,13,69,8,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,188,"                if (g0Positive ^ (gb >= 0)) {
",4,2,0,2,5,0,0,0,0,6,29,8,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,253,"                    ta = tb;
",4,0,0,0,0,0,0,0,0,5,8,10,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,254,"                    ga = gb;
",4,0,0,0,0,0,0,0,0,5,8,10,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,260,"            pendingEvent     = false;
",2,0,0,0,0,0,0,0,0,4,25,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,261,"            pendingEventTime = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,30,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,262,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,296,"        t0 = t;
",4,0,0,0,0,0,0,0,0,5,7,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,297,"        g0 = handler.g(t, y);
",2,0,0,1,2,0,8,0,0,11,21,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,299,"        if (pendingEvent) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,305,"            g0Positive = g0 >= 0;
",4,1,0,0,0,0,0,0,0,6,21,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,306,"            nextAction = EventHandler.CONTINUE;
",6,0,0,0,0,0,0,0,0,7,35,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,308,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,315,"        return nextAction == EventHandler.STOP;
",6,1,0,0,0,1,0,0,0,7,39,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,330,"        if (! pendingEvent) {
",2,0,0,1,3,0,0,0,0,3,21,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,331,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,127,"            first = null;
",2,0,0,0,0,0,0,0,0,3,13,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,128,"            if (states.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,23,7,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,135,"            if (! initialized) {
",2,0,0,1,3,0,0,0,0,3,20,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,138,"                final double t0 = interpolator.getPreviousTime();
",2,0,0,1,2,1,4,0,0,7,49,8,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,139,"                interpolator.setInterpolatedTime(t0);
",0,0,0,1,2,0,6,0,0,6,37,9,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,140,"                final double [] y = interpolator.getInterpolatedState();
",2,0,0,2,4,1,4,0,0,7,56,8,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,141,"                for (EventState state : states) {
",4,0,0,1,3,0,0,2,0,6,33,8,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,142,"                    state.reinitializeBegin(t0, y);
",0,0,0,1,2,0,8,0,0,8,31,11,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,143,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,145,"                initialized = true;
",2,0,0,0,0,0,0,0,0,4,19,8,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,150,"            for (EventState state : states) {
",4,0,0,1,3,0,0,2,0,6,33,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,152,"                if (state.evaluateStep(interpolator)) {
",0,0,0,2,5,0,6,0,0,6,39,9,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,168,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,170,"            return first != null;
",2,1,0,0,0,1,0,0,0,3,21,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,202,"            for (EventState state : states) {
",4,0,0,1,3,0,0,2,0,6,33,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,203,"                state.stepAccepted(t, y);
",0,0,0,1,2,0,8,0,0,8,25,9,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,204,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,207,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,208,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,215,"        for (EventState state : states) {
",4,0,0,1,3,0,0,2,0,6,33,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,216,"            if (state.stop()) {
",0,0,0,2,5,0,4,0,0,4,19,7,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,219,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,220,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,235,"            boolean resetDerivatives = false;
",2,0,0,0,0,0,0,0,0,3,33,7,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,236,"            for (EventState state : states) {
",4,0,0,1,3,0,0,2,0,6,33,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,237,"                if (state.reset(t, y)) {
",0,0,0,2,5,0,8,0,0,8,24,9,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,240,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04396,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,241,"            return resetDerivatives;
",2,0,0,0,0,1,0,0,0,2,24,6,0.04396,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,251,"    return forward;
",2,0,0,0,0,1,0,0,0,2,15,4,0.04348,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,230,"    return previousTime;
",2,0,0,0,0,1,0,0,0,2,20,4,0.04301,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,235,"    return currentTime;
",2,0,0,0,0,1,0,0,0,2,19,4,0.04301,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,272,"      if (dirtyState) {
",2,0,0,1,3,0,0,0,0,2,17,4,0.04211,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,273,"          final double oneMinusThetaH = currentTime - interpolatedTime;
",6,1,0,0,0,1,0,0,0,8,61,6,0.04211,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,274,"          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
",10,3,0,2,4,1,0,0,0,14,61,6,0.04211,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,275,"          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
",0,0,0,1,2,0,6,0,0,6,62,7,0.04211,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,276,"          dirtyState = false;
",2,0,0,0,0,0,0,0,0,4,19,6,0.04211,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,279,"      return interpolatedState;
",2,0,0,0,0,1,0,0,0,2,25,4,0.04211,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,183,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04167,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,123,"        for (StepHandler handler : stepHandlers) {
",4,0,0,1,3,0,0,2,0,6,42,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,167,"        this.equations = equations;
",4,0,0,0,0,0,0,0,0,5,27,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,168,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,179,"        if (++evaluations > maxEvaluations) {
",4,1,0,1,3,0,0,0,0,6,37,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,182,"        equations.computeDerivatives(t, y, yDot);
",0,0,0,1,2,0,10,0,0,10,41,5,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,233,"        CombinedEventsManager newManager = new CombinedEventsManager();
",2,0,0,1,2,0,0,4,0,6,63,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,234,"        for (final EventState state : manager.getEventsStates()) {
",2,0,0,2,5,1,4,2,0,9,58,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,240,"        newManager.addEventHandler(new EndTimeChecker(endTime),
",2,0,0,1,3,0,4,2,0,8,55,5,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,244,"        return newManager;
",2,0,0,0,0,1,0,0,0,2,18,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,256,"        public EndTimeChecker(final double endTime) {
",4,0,0,1,3,2,0,0,0,6,45,3,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,257,"            this.endTime = endTime;
",4,0,0,0,0,0,0,0,0,5,23,5,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,258,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,95,"                      final double convergence, final int maxIterationCount) {
",4,0,0,0,2,2,0,0,0,6,56,3,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,96,"        this.handler           = handler;
",4,0,0,0,0,0,0,0,0,5,33,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,97,"        this.maxCheckInterval  = maxCheckInterval;
",4,0,0,0,0,0,0,0,0,5,42,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,98,"        this.convergence       = Math.abs(convergence);
",2,0,0,1,2,0,6,0,0,9,47,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,99,"        this.maxIterationCount = maxIterationCount;
",4,0,0,0,0,0,0,0,0,5,43,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,102,"        t0                = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,103,"        g0                = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,104,"        g0Positive        = true;
",2,0,0,0,0,0,0,0,0,4,25,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,105,"        pendingEvent      = false;
",2,0,0,0,0,0,0,0,0,4,26,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,106,"        pendingEventTime  = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,107,"        previousEventTime = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,108,"        increasing        = true;
",2,0,0,0,0,0,0,0,0,4,25,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,109,"        nextAction        = EventHandler.CONTINUE;
",6,0,0,0,0,0,0,0,0,7,42,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,111,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,71,"        states.add(new EventState(handler, maxCheckInterval,
",4,0,0,0,2,0,4,2,0,10,52,5,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,73,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04124,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,102,"        return states;
",2,0,0,0,0,1,0,0,0,2,14,4,0.04124,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,218,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04082,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,205,"        if (ode.getDimension() != y.length) {
",4,1,0,2,5,0,4,0,0,9,37,4,0.04000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,212,"        if (Math.abs(t - t0) <= 1.0e-12 * Math.max(Math.abs(t0), Math.abs(t))) {
",4,3,0,5,11,0,20,0,0,27,72,4,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,249,"    double error1 = 0;
",2,0,0,0,0,0,0,0,0,2,18,5,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,250,"    double error2 = 0;
",2,0,0,0,0,0,0,0,0,2,18,5,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,252,"    for (int j = 0; j < y0.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,253,"      final double errSum1 = E1_01 * yDotK[0][j]  + E1_06 * yDotK[5][j] +
",6,9,1,4,8,1,0,0,0,24,67,6,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,257,"      final double errSum2 = E2_01 * yDotK[0][j]  + E2_06 * yDotK[5][j] +
",6,9,1,4,8,1,0,0,0,24,67,6,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,262,"      final double yScale = Math.max(Math.abs(y0[j]), Math.abs(y1[j]));
",2,0,1,5,10,1,12,0,0,23,65,6,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,263,"      final double tol = (vecAbsoluteTolerance == null) ?
",4,1,0,1,2,1,0,0,0,6,51,6,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,266,"      final double ratio1  = errSum1 / tol;
",6,1,0,0,0,1,0,0,0,8,37,6,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,267,"      error1        += ratio1 * ratio1;
",6,1,0,0,0,0,0,0,0,8,33,6,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,268,"      final double ratio2  = errSum2 / tol;
",6,1,0,0,0,1,0,0,0,8,37,6,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,269,"      error2        += ratio2 * ratio2;
",6,1,0,0,0,0,0,0,0,8,33,6,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,272,"    double den = error1 + 0.01 * error2;
",6,2,0,0,0,0,0,0,0,8,36,5,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,273,"    if (den <= 0.0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.04000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,277,"    return Math.abs(h) * error1 / Math.sqrt(y0.length * den);
",8,3,0,2,4,1,10,0,0,21,57,4,0.04000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,211,"    previousTime = currentTime;
",4,0,0,0,0,0,0,0,0,5,27,4,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,212,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,219,"    currentTime = t;
",4,0,0,0,0,0,0,0,0,5,16,4,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,220,"    h           = currentTime - previousTime;
",6,1,0,0,0,0,0,0,0,8,41,4,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,221,"    setInterpolatedTime(t);
",0,0,0,1,2,0,4,0,0,4,23,5,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,224,"    finalized  = false;
",2,0,0,0,0,0,0,0,0,4,19,4,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,226,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,245,"      interpolatedTime = time;
",4,0,0,0,0,0,0,0,0,5,24,4,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,246,"      dirtyState       = true;
",2,0,0,0,0,0,0,0,0,4,24,4,0.03960,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,247,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03960,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,216,"    super(METHOD_NAME, true, STATIC_C, STATIC_A, STATIC_B,
",8,0,0,0,1,0,0,0,0,9,54,4,0.03846,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,219,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03846,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,198,"        if (ode.getDimension() != y0.length) {
",4,1,0,2,5,0,4,0,0,9,38,4,0.03704,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,64,"    public AbstractIntegrator(final String name) {
",4,0,0,1,3,2,0,2,0,8,46,2,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,65,"        this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,66,"        stepHandlers = new ArrayList<StepHandler>();
",2,0,0,1,2,0,0,4,0,7,44,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,67,"        stepStart = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,23,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,68,"        stepSize  = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,23,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,69,"        eventsHandlersManager = new CombinedEventsManager();
",2,0,0,1,2,0,0,2,0,5,52,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,70,"        setMaxEvaluations(-1);
",0,0,0,1,2,0,2,0,0,3,22,5,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,71,"        resetEvaluations();
",0,0,0,1,2,0,2,0,0,2,19,5,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,72,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,143,"        this.maxEvaluations = (maxEvaluations < 0) ? Integer.MAX_VALUE : maxEvaluations;
",10,1,0,1,2,0,0,0,0,12,80,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,144,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,159,"        evaluations = 0;
",2,0,0,0,0,0,0,0,0,3,16,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,160,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,52,"    public CombinedEventsManager() {
",2,0,0,1,3,1,0,0,0,3,32,2,0.03571,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,53,"        states      = new ArrayList<EventState>();
",2,0,0,1,2,0,0,4,0,7,42,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,54,"        first       = null;
",2,0,0,0,0,0,0,0,0,3,19,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,55,"        initialized = false;
",2,0,0,0,0,0,0,0,0,4,20,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,56,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,57,"    super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.03571,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,58,"    yDotK      = null;
",2,0,0,0,0,0,0,0,0,3,18,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,59,"    integrator = null;
",2,0,0,0,0,0,0,0,0,3,18,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,60,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,89,"  protected AbstractStepInterpolator() {
",2,0,0,1,3,1,0,0,0,3,38,2,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,90,"    previousTime            = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,37,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,91,"    currentTime             = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,37,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,92,"    h                       = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,37,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,93,"    interpolatedTime        = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,37,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,94,"    currentState            = null;
",2,0,0,0,0,0,0,0,0,3,31,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,95,"    interpolatedState       = null;
",2,0,0,0,0,0,0,0,0,3,31,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,96,"    interpolatedDerivatives = null;
",2,0,0,0,0,0,0,0,0,3,31,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,97,"    finalized               = false;
",2,0,0,0,0,0,0,0,0,4,32,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,98,"    this.forward            = true;
",2,0,0,0,0,0,0,0,0,4,31,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,99,"    this.dirtyState         = true;
",2,0,0,0,0,0,0,0,0,4,31,4,0.03571,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,100,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03571,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,152,"              sum += a[k-1][l] * yDotK[l][j];
",4,2,1,4,8,0,0,0,0,17,31,14,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,61,"  private static final double[] STATIC_C = {
",2,0,0,1,3,3,0,0,0,5,42,2,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,68,"  private static final double[][] STATIC_A = {
",2,0,0,2,5,3,0,0,0,5,44,2,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,135,"  private static final double[] STATIC_B = {
",2,0,0,1,3,3,0,0,0,5,42,2,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,241,"    return 8;
",0,0,0,0,0,1,0,0,0,0,9,3,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,232,"    super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,233,"    yDotKLast = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,234,"    v         = null;
",2,0,0,0,0,0,0,0,0,3,17,4,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,235,"    vectorsInitialized = false;
",2,0,0,0,0,0,0,0,0,4,27,4,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,236,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,181,"    private static final double[][] D = {
",2,0,0,2,5,3,0,0,0,5,37,2,0.03448,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,335,"        System.arraycopy(yDotK[stages - 1], 0, yDotK[0], 0, y0.length);
",6,1,1,3,6,0,4,0,0,15,63,9,0.03226,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,149,"          for (int j = 0; j < y0.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,37,10,0.02778,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,150,"            double sum = a[k-1][0] * yDotK[0][j];
",4,2,1,4,8,0,0,0,0,12,37,13,0.02778,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,151,"            for (int l = 1; l < k; ++l) {
",8,1,0,1,3,0,0,0,0,10,29,12,0.02778,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,154,"            yTmp[j] = y[j] + stepSize * sum;
",4,2,1,2,4,0,0,0,0,15,32,12,0.02778,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,157,"          computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);
",6,3,1,3,6,0,4,0,0,19,66,11,0.02778,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,165,"            sum    += b[l] * yDotK[l][j];
",2,1,1,3,6,0,0,0,0,14,29,12,0.02778,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,293,"              final double dt = manager.getEventTime() - stepStart;
",4,1,0,1,2,1,4,0,0,10,53,12,0.02632,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,294,"              if (Math.abs(dt) <= Math.ulp(stepStart)) {
",0,1,0,3,7,0,12,0,0,13,42,12,0.02632,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,303,"                  hNew = dt;
",4,0,0,0,0,0,0,0,0,5,10,14,0.02632,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,305,"          } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.02632,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,362,"    final double stopTime = stepStart;
",4,0,0,0,0,1,0,0,0,5,34,4,0.02632,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,363,"    resetInternalState();
",0,0,0,1,2,0,2,0,0,2,21,5,0.02632,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,364,"    return stopTime;
",2,0,0,0,0,1,0,0,0,2,16,4,0.02632,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,331,"      stepStart = nextStep;
",4,0,0,0,0,0,0,0,0,5,21,6,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,333,"      if (fsal) {
",2,0,0,1,3,0,0,0,0,2,11,6,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,338,"      if (manager.reset(stepStart, y) && ! lastStep) {
",2,1,0,2,5,0,8,0,0,12,48,6,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,344,"      if (! lastStep) {
",2,0,0,1,3,0,0,0,0,3,17,6,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,348,"          stepSize = filterStep(stepSize, forward, true);
",2,0,0,1,2,0,6,0,0,10,47,8,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,351,"        final double factor = Math.min(maxGrowth,
",2,0,0,0,1,1,6,0,0,9,41,8,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,354,"        final double  scaledH    = stepSize * factor;
",6,1,0,0,0,1,0,0,0,8,45,8,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,355,"        final double  nextT      = stepStart + scaledH;
",6,1,0,0,0,1,0,0,0,8,47,8,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,356,"        final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);
",12,2,0,2,4,1,0,0,0,15,65,8,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,357,"        hNew = filterStep(scaledH, forward, nextIsLast);
",2,0,0,1,2,0,8,0,0,11,48,8,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,360,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02500,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,101,"    setEquations(equations);
",0,0,0,1,2,0,4,0,0,4,24,5,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,102,"    resetEvaluations();
",0,0,0,1,2,0,2,0,0,2,19,5,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,103,"    final boolean forward = t > t0;
",6,1,0,0,0,1,0,0,0,8,31,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,106,"    final int stages = c.length + 1;
",6,1,0,0,0,1,0,0,0,8,32,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,107,"    if (y != y0) {
",4,1,0,1,3,0,0,0,0,5,14,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,108,"      System.arraycopy(y0, 0, y, 0, y0.length);
",4,0,0,1,2,0,8,0,0,12,41,7,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,110,"    final double[][] yDotK = new double[stages][];
",2,0,1,4,8,1,0,0,0,5,46,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,111,"    for (int i = 0; i < stages; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,112,"      yDotK [i] = new double[y0.length];
",4,0,1,2,4,0,0,0,0,9,34,6,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,114,"    final double[] yTmp = new double[y0.length];
",6,0,0,2,4,1,0,0,0,7,44,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,118,"    if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) {
",0,1,0,4,9,0,6,0,0,8,67,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,125,"    interpolator.storeTime(t0);
",0,0,0,1,2,0,6,0,0,6,27,5,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,128,"    stepStart = t0;
",4,0,0,0,0,0,0,0,0,5,15,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,129,"    stepSize  = forward ? step : -step;
",8,0,0,0,0,0,0,0,0,10,35,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,130,"    for (StepHandler handler : stepHandlers) {
",4,0,0,1,3,0,0,2,0,6,42,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,133,"    CombinedEventsManager manager = addEndTimeChecker(t0, t, eventsHandlersManager);
",2,0,0,1,2,0,8,2,0,12,80,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,134,"    boolean lastStep = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,137,"    while (!lastStep) {
",2,0,0,1,3,0,0,0,0,3,19,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,139,"      interpolator.shift();
",0,0,0,1,2,0,4,0,0,4,21,7,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,141,"      for (boolean loop = true; loop;) {
",4,0,0,1,3,0,0,0,0,5,34,6,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,144,"        computeDerivatives(stepStart, y, yDotK[0]);
",0,0,1,2,4,0,6,0,0,8,43,9,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,147,"        for (int k = 1; k < stages; ++k) {
",8,1,0,1,3,0,0,0,0,10,34,8,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,162,"        for (int j = 0; j < y0.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,37,8,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,163,"          double sum    = b[0] * yDotK[0][j];
",2,1,1,3,6,0,0,0,0,9,35,11,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,164,"          for (int l = 1; l < stages; ++l) {
",8,1,0,1,3,0,0,0,0,10,34,10,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,167,"          yTmp[j] = y[j] + stepSize * sum;
",4,2,1,2,4,0,0,0,0,15,32,10,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,171,"        interpolator.storeTime(stepStart + stepSize);
",4,1,0,1,2,0,4,0,0,9,45,9,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,172,"        if (manager.evaluateStep(interpolator)) {
",0,0,0,2,5,0,6,0,0,6,41,9,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,173,"            final double dt = manager.getEventTime() - stepStart;
",4,1,0,1,2,1,4,0,0,10,53,10,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,174,"            if (Math.abs(dt) <= Math.ulp(stepStart)) {
",0,1,0,3,7,0,12,0,0,13,42,10,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,183,"                stepSize = dt;
",4,0,0,0,0,0,0,0,0,5,14,12,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,185,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,186,"          loop = false;
",2,0,0,0,0,0,0,0,0,4,13,10,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,192,"      final double nextStep = stepStart + stepSize;
",6,1,0,0,0,1,0,0,0,8,45,6,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,193,"      System.arraycopy(yTmp, 0, y, 0, y0.length);
",4,0,0,1,2,0,8,0,0,12,43,7,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,194,"      manager.stepAccepted(nextStep, y);
",0,0,0,1,2,0,8,0,0,8,34,7,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,195,"      lastStep = manager.stop();
",2,0,0,1,2,0,4,0,0,7,26,6,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,198,"      interpolator.storeTime(nextStep);
",0,0,0,1,2,0,6,0,0,6,33,7,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,199,"      for (StepHandler handler : stepHandlers) {
",4,0,0,1,3,0,0,2,0,6,42,6,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,202,"      stepStart = nextStep;
",4,0,0,0,0,0,0,0,0,5,21,6,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,204,"      if (manager.reset(stepStart, y) && ! lastStep) {
",2,1,0,2,5,0,8,0,0,12,48,6,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,211,"      stepSize = forward ? step : -step;
",8,0,0,0,0,0,0,0,0,10,34,6,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,213,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,215,"    final double stopTime = stepStart;
",4,0,0,0,0,1,0,0,0,5,34,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,216,"    stepStart = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,23,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,217,"    stepSize  = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,23,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,218,"    return stopTime;
",2,0,0,0,0,1,0,0,0,2,16,4,0.02326,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,100,"    sanityChecks(equations, t0, y0, t, y);
",0,0,0,1,2,0,12,0,0,12,38,5,0.02083,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,247,"              for (int i = 0; i < scale.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,40,12,0.02041,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,248,"                scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * Math.abs(y[i]);
",4,2,1,3,6,0,4,0,0,19,74,14,0.02041,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,291,"      if (filteredH > maxStep) {
",4,1,0,1,3,0,0,0,0,5,26,4,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,293,"      } else if (filteredH < -maxStep) {
",4,1,0,1,4,0,0,0,0,6,34,5,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,297,"      return filteredH;
",2,0,0,0,0,1,0,0,0,2,17,4,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,205,"      System.arraycopy(y0, 0, y, 0, y0.length);
",4,0,0,1,2,0,8,0,0,12,41,7,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,291,"          interpolator.storeTime(stepStart + stepSize);
",4,1,0,1,2,0,4,0,0,9,45,11,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,292,"          if (manager.evaluateStep(interpolator)) {
",0,0,0,2,5,0,6,0,0,6,41,11,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,307,"            loop = false;
",2,0,0,0,0,0,0,0,0,4,13,12,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,321,"      final double nextStep = stepStart + stepSize;
",6,1,0,0,0,1,0,0,0,8,45,6,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,322,"      System.arraycopy(yTmp, 0, y, 0, y0.length);
",4,0,0,1,2,0,8,0,0,12,43,7,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,323,"      manager.stepAccepted(nextStep, y);
",0,0,0,1,2,0,8,0,0,8,34,7,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,324,"      lastStep = manager.stop();
",2,0,0,1,2,0,4,0,0,7,26,6,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,327,"      interpolator.storeTime(nextStep);
",0,0,0,1,2,0,6,0,0,6,33,7,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,328,"      for (StepHandler handler : stepHandlers) {
",4,0,0,1,3,0,0,2,0,6,42,6,0.02000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,86,"    super(name);
",2,0,0,1,2,0,0,0,0,2,12,4,0.01961,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,87,"    this.c          = c;
",4,0,0,0,0,0,0,0,0,5,20,4,0.01961,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,88,"    this.a          = a;
",4,0,0,0,0,0,0,0,0,5,20,4,0.01961,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,89,"    this.b          = b;
",4,0,0,0,0,0,0,0,0,5,20,4,0.01961,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,90,"    this.prototype  = prototype;
",4,0,0,0,0,0,0,0,0,5,28,4,0.01961,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,91,"    this.step       = Math.abs(step);
",2,0,0,1,2,0,6,0,0,9,33,4,0.01961,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,92,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01961,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,209,"    if (initialStep > 0) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,280,"      double filteredH = h;
",4,0,0,0,0,0,0,0,0,4,21,5,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,281,"      if (Math.abs(h) < minStep) {
",2,1,0,2,5,0,6,0,0,9,28,4,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,244,"        if (firstTime) {
",2,0,0,1,3,0,0,0,0,2,16,8,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,245,"          final double[] scale = new double[y0.length];
",6,0,0,2,4,1,0,0,0,7,45,10,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,246,"          if (vecAbsoluteTolerance == null) {
",2,1,0,1,3,0,0,0,0,3,35,10,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,255,"          hNew = initializeStep(equations, forward, getOrder(), scale,
",2,0,0,1,3,0,10,0,0,13,60,10,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,257,"          firstTime = false;
",2,0,0,0,0,0,0,0,0,4,18,10,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,260,"        stepSize = hNew;
",4,0,0,0,0,0,0,0,0,5,16,8,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,263,"        for (int k = 1; k < stages; ++k) {
",8,1,0,1,3,0,0,0,0,10,34,8,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,265,"          for (int j = 0; j < y0.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,37,10,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,266,"            double sum = a[k-1][0] * yDotK[0][j];
",4,2,1,4,8,0,0,0,0,12,37,13,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,267,"            for (int l = 1; l < k; ++l) {
",8,1,0,1,3,0,0,0,0,10,29,12,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,268,"              sum += a[k-1][l] * yDotK[l][j];
",4,2,1,4,8,0,0,0,0,17,31,14,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,270,"            yTmp[j] = y[j] + stepSize * sum;
",4,2,1,2,4,0,0,0,0,15,32,12,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,273,"          computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);
",6,3,1,3,6,0,4,0,0,19,66,11,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,278,"        for (int j = 0; j < y0.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,37,8,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,279,"          double sum    = b[0] * yDotK[0][j];
",2,1,1,3,6,0,0,0,0,9,35,11,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,280,"          for (int l = 1; l < stages; ++l) {
",8,1,0,1,3,0,0,0,0,10,34,10,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,281,"            sum    += b[l] * yDotK[l][j];
",2,1,1,3,6,0,0,0,0,14,29,12,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,283,"          yTmp[j] = y[j] + stepSize * sum;
",4,2,1,2,4,0,0,0,0,15,32,10,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,287,"        error = estimateError(yDotK, y, yTmp, stepSize);
",2,0,0,1,2,0,10,0,0,13,48,8,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,288,"        if (error <= 1.0) {
",2,1,0,1,3,0,0,0,0,3,19,8,0.01818,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,93,"    super(name);
",2,0,0,1,2,0,0,0,0,2,12,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,95,"    this.minStep     = Math.abs(minStep);
",2,0,0,1,2,0,6,0,0,9,37,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,96,"    this.maxStep     = Math.abs(maxStep);
",2,0,0,1,2,0,6,0,0,9,37,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,97,"    this.initialStep = -1.0;
",2,0,0,0,0,0,0,0,0,4,24,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,99,"    this.scalAbsoluteTolerance = scalAbsoluteTolerance;
",4,0,0,0,0,0,0,0,0,5,51,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,100,"    this.scalRelativeTolerance = scalRelativeTolerance;
",4,0,0,0,0,0,0,0,0,5,51,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,101,"    this.vecAbsoluteTolerance  = null;
",2,0,0,0,0,0,0,0,0,3,34,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,102,"    this.vecRelativeTolerance  = null;
",2,0,0,0,0,0,0,0,0,3,34,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,104,"    resetInternalState();
",0,0,0,1,2,0,2,0,0,2,21,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,106,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,187,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,116,"    super(name, minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);
",10,0,0,1,2,0,0,0,0,10,76,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,118,"    this.fsal      = fsal;
",4,0,0,0,0,0,0,0,0,5,22,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,119,"    this.c         = c;
",4,0,0,0,0,0,0,0,0,5,19,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,120,"    this.a         = a;
",4,0,0,0,0,0,0,0,0,5,19,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,121,"    this.b         = b;
",4,0,0,0,0,0,0,0,0,5,19,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,122,"    this.prototype = prototype;
",4,0,0,0,0,0,0,0,0,5,27,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,124,"    exp = -1.0 / getOrder();
",2,1,0,1,2,0,2,0,0,7,24,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,127,"    setSafety(0.9);
",0,0,0,1,2,0,2,0,0,2,15,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,128,"    setMinReduction(0.2);
",0,0,0,1,2,0,2,0,0,2,21,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,129,"    setMaxGrowth(10.0);
",0,0,0,1,2,0,2,0,0,2,19,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,131,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,198,"    setEquations(equations);
",0,0,0,1,2,0,4,0,0,4,24,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,199,"    resetEvaluations();
",0,0,0,1,2,0,2,0,0,2,19,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,200,"    final boolean forward = t > t0;
",6,1,0,0,0,1,0,0,0,8,31,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,203,"    final int stages = c.length + 1;
",6,1,0,0,0,1,0,0,0,8,32,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,204,"    if (y != y0) {
",4,1,0,1,3,0,0,0,0,5,14,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,207,"    final double[][] yDotK = new double[stages][y0.length];
",6,0,1,4,8,1,0,0,0,9,55,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,208,"    final double[] yTmp = new double[y0.length];
",6,0,0,2,4,1,0,0,0,7,44,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,212,"    if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) {
",0,1,0,4,9,0,6,0,0,8,67,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,219,"    interpolator.storeTime(t0);
",0,0,0,1,2,0,6,0,0,6,27,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,222,"    stepStart         = t0;
",4,0,0,0,0,0,0,0,0,5,23,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,223,"    double  hNew      = 0;
",2,0,0,0,0,0,0,0,0,2,22,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,224,"    boolean firstTime = true;
",2,0,0,0,0,0,0,0,0,3,25,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,225,"    for (StepHandler handler : stepHandlers) {
",4,0,0,1,3,0,0,2,0,6,42,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,228,"    CombinedEventsManager manager = addEndTimeChecker(t0, t, eventsHandlersManager);
",2,0,0,1,2,0,8,2,0,12,80,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,229,"    boolean lastStep = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,232,"    while (!lastStep) {
",2,0,0,1,3,0,0,0,0,3,19,4,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,234,"      interpolator.shift();
",0,0,0,1,2,0,4,0,0,4,21,7,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,236,"      double error = 0;
",2,0,0,0,0,0,0,0,0,2,17,7,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,237,"      for (boolean loop = true; loop;) {
",4,0,0,1,3,0,0,0,0,5,34,6,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,239,"        if (firstTime || !fsal) {
",4,1,0,1,3,0,0,0,0,6,25,8,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,241,"          computeDerivatives(stepStart, y, yDotK[0]);
",0,0,1,2,4,0,6,0,0,8,43,11,0.01786,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,173,"      if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != y0.length)) {
",10,3,0,3,7,0,0,0,0,13,83,4,0.01754,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,180,"      if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != y0.length)) {
",10,3,0,3,7,0,0,0,0,13,83,4,0.01754,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,197,"    sanityChecks(equations, t0, y0, t, y);
",0,0,0,1,2,0,12,0,0,12,38,5,0.01667,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,171,"      super.sanityChecks(equations, t0, y0, t, y);
",12,0,0,1,2,0,0,0,0,12,44,5,0.01613,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,315,"    stepStart = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,23,4,0.01587,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,316,"    stepSize  = Math.sqrt(minStep * maxStep);
",6,1,0,1,2,0,4,0,0,12,41,4,0.01587,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,317,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01587,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,187,"    this.safety = safety;
",4,0,0,0,0,0,0,0,0,5,21,4,0.01587,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,188,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01587,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,379,"    this.minReduction = minReduction;
",4,0,0,0,0,0,0,0,0,5,33,4,0.01587,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,380,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01587,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,393,"    this.maxGrowth = maxGrowth;
",4,0,0,0,0,0,0,0,0,5,27,4,0.01587,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,394,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01587,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,71,43,"        super(""Maximal number of evaluations ({0}) exceeded"", maxEvaluations);
",2,0,0,3,6,0,0,0,0,3,70,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,71,44,"        this.maxEvaluations = maxEvaluations;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,71,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,71,56,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,71,57,"        this.maxEvaluations = maxEvaluations;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,71,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxEvaluationsExceededException,71,64,"        return maxEvaluations;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,71,34,"        super(""Convergence failed"");
",0,0,0,1,2,0,0,0,0,1,28,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,71,35,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,71,45,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,71,46,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,71,53,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,71,54,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,71,65,"        super(cause, pattern, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,71,66,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,55,"    public MathException() {
",2,0,0,1,3,1,0,0,0,3,24,2,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,56,"        this.pattern   = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,57,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,67,"    public MathException(String pattern, Object ... arguments) {
",6,0,0,1,3,1,0,4,0,11,60,2,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,68,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,69,"      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
",4,1,0,3,6,0,4,2,0,12,73,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,70,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,80,"        super(rootCause);
",2,0,0,1,2,0,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,81,"        this.pattern   = getMessage();
",2,0,0,1,2,0,2,0,0,5,30,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,82,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,83,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,96,"      super(rootCause);
",2,0,0,1,2,0,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,97,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,98,"      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
",4,1,0,3,6,0,4,2,0,12,73,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,99,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,110,"            ResourceBundle bundle =
",2,0,0,0,0,0,0,2,0,4,23,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,112,"            if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
",0,0,0,5,11,0,12,0,0,12,68,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,114,"                return bundle.getString(s);
",0,0,0,1,2,1,6,0,0,6,27,9,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,119,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,117,"        } catch (MissingResourceException mre) {
",2,0,0,1,4,0,0,2,0,4,40,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,123,"        return s;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,133,"        return pattern;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,142,"        return arguments.clone();
",0,0,0,1,2,1,4,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,153,"        return (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);
",4,1,0,4,8,1,10,2,0,20,104,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,159,"        return getMessage(Locale.US);
",4,0,0,1,2,1,2,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,165,"        return getMessage(Locale.getDefault());
",0,0,0,2,4,1,6,0,0,6,39,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,173,"        printStackTrace(System.err);
",4,0,0,1,2,0,2,0,0,6,28,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,174,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,183,"        synchronized (out) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,184,"            PrintWriter pw = new PrintWriter(out, false);
",4,0,0,1,2,0,0,4,0,9,45,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,185,"            printStackTrace(pw);
",0,0,0,1,2,0,4,0,0,4,20,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,187,"            pw.flush();
",0,0,0,1,2,0,4,0,0,4,11,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,188,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,71,189,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,77,"        this(null);
",0,0,0,1,2,0,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,78,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,82,"        return name;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,87,"        stepHandlers.add(handler);
",0,0,0,1,2,0,6,0,0,6,26,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,88,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,92,"        return Collections.unmodifiableCollection(stepHandlers);
",0,0,0,1,2,1,6,0,0,6,56,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,97,"        stepHandlers.clear();
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,105,"        eventsHandlersManager.addEventHandler(function, maxCheckInterval,
",0,0,0,0,1,0,8,0,0,8,65,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,107,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,111,"        return eventsHandlersManager.getEventsHandlers();
",0,0,0,1,2,1,4,0,0,4,49,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,116,"        eventsHandlersManager.clearEventsHandlers();
",0,0,0,1,2,0,4,0,0,4,44,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,117,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,124,"            if (handler.requiresDenseOutput()) {
",0,0,0,2,5,0,4,0,0,4,36,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,125,"                return true;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,127,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,133,"        return stepStart;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,138,"        return stepSize;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,148,"        return maxEvaluations;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,153,"        return evaluations;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,180,"            throw new DerivativeException(new MaxEvaluationsExceededException(maxEvaluations));
",2,0,0,2,4,0,0,4,0,6,83,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,199,"            throw new IntegratorException(
",0,0,0,0,1,0,0,2,0,2,30,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,206,"            throw new IntegratorException(
",0,0,0,0,1,0,0,2,0,2,30,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,213,"            throw new IntegratorException(
",0,0,0,0,1,0,0,2,0,2,30,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,235,"            newManager.addEventHandler(state.getEventHandler(),
",0,0,0,1,3,0,8,0,0,8,51,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,239,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/AbstractIntegrator,71,272,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventException,71,39,"        super(specifier, parts);
",4,0,0,1,2,0,0,0,0,4,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventException,71,40,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventException,71,47,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventException,71,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,219,"                            } catch (DerivativeException e) {
",2,0,0,1,4,0,0,2,0,4,33,18,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,220,"                                throw new FunctionEvaluationException(e, t);
",4,0,0,1,2,0,0,2,0,6,44,20,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,221,"                            } catch (EventException e) {
",2,0,0,1,4,0,0,2,0,4,28,18,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,222,"                                throw new FunctionEvaluationException(e, t);
",4,0,0,1,2,0,0,2,0,6,44,20,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,117,"        return handler;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,124,"        return maxCheckInterval;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,131,"        return convergence;
",2,0,0,0,0,1,0,0,0,2,19,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,138,"        return maxIterationCount;
",2,0,0,0,0,1,0,0,0,2,25,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,199,"                        final double epsilon = (forward ? 0.25 : -0.25) * convergence;
",6,1,0,1,2,1,0,0,0,9,62,12,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,200,"                        for (int k = 0; (k < 4) && (ga * gb > 0); ++k) {
",10,4,0,3,7,0,0,0,0,15,48,12,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,201,"                            ta += epsilon;
",4,0,0,0,0,0,0,0,0,5,14,14,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,202,"                            interpolator.setInterpolatedTime(ta);
",0,0,0,1,2,0,6,0,0,6,37,15,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,203,"                            ga = handler.g(ta, interpolator.getInterpolatedState());
",2,0,0,2,4,0,10,0,0,13,56,14,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,205,"                        if (ga * gb > 0) {
",4,2,0,1,3,0,0,0,0,6,18,12,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,207,"                            throw MathRuntimeException.createInternalError(null);
",0,0,0,1,2,0,4,0,0,4,53,15,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,233,"                        ta = tb;
",4,0,0,0,0,0,0,0,0,5,8,12,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,234,"                        ga = gb;
",4,0,0,0,0,0,0,0,0,5,8,12,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,243,"                            return false;
",0,0,0,0,0,1,0,0,0,1,13,15,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,251,"                } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,264,"        } catch (FunctionEvaluationException e) {
",2,0,0,1,4,0,0,2,0,4,41,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,265,"            final Throwable cause = e.getCause();
",2,0,0,1,2,1,4,2,0,9,37,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,266,"            if ((cause != null) && (cause instanceof DerivativeException)) {
",4,2,0,3,7,0,0,2,0,8,64,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,267,"                throw (DerivativeException) cause;
",2,0,0,1,2,0,0,2,0,4,34,10,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,268,"            } else if ((cause != null) && (cause instanceof EventException)) {
",4,2,0,3,8,0,0,2,0,8,66,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,269,"                throw (EventException) cause;
",2,0,0,1,2,0,0,2,0,4,29,11,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,271,"            throw new EventException(e);
",2,0,0,1,2,0,0,2,0,4,28,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/EventState,71,335,"            handler.resetState(t, y);
",0,0,0,1,2,0,8,0,0,8,25,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/DerivativeException,71,41,"    super(specifier, parts);
",4,0,0,1,2,0,0,0,0,4,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/DerivativeException,71,42,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/DerivativeException,71,48,"    super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/DerivativeException,71,49,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,48,"        super(FAILED_EVALUATION_MESSAGE, argument);
",4,0,0,1,2,0,0,0,0,4,43,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,49,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,50,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,60,"        super(FAILED_EVALUATION_MESSAGE, new ArrayRealVector(argument));
",4,0,0,2,4,0,0,2,0,6,64,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,61,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,62,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,74,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,75,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,76,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,88,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,89,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,90,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,100,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,101,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,102,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,112,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,113,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,114,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,128,"        super(cause, pattern, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,129,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,130,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,144,"        super(cause, pattern, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,145,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,146,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,71,154,"        return argument.clone();
",0,0,0,1,2,1,4,0,0,4,24,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,82,"        final List<EventHandler> list = new ArrayList<EventHandler>();
",2,0,0,1,2,1,0,8,0,11,62,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,83,"        for (EventState state : states) {
",4,0,0,1,3,0,0,2,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,84,"            list.add(state.getEventHandler());
",0,0,0,2,4,0,8,0,0,8,34,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,85,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,86,"        return Collections.unmodifiableCollection(list);
",0,0,0,1,2,1,6,0,0,6,48,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,94,"        states.clear();
",0,0,0,1,2,0,4,0,0,4,15,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,95,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,132,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,156,"                        if (interpolator.isForward()) {
",0,0,0,2,5,0,4,0,0,4,31,13,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,157,"                            if (state.getEventTime() < first.getEventTime()) {
",0,1,0,3,7,0,8,0,0,9,50,14,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,158,"                                first = state;
",4,0,0,0,0,0,0,0,0,5,14,16,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,161,"                            if (state.getEventTime() > first.getEventTime()) {
",0,1,0,3,7,0,8,0,0,9,50,14,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,162,"                                first = state;
",4,0,0,0,0,0,0,0,0,5,14,16,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,172,"        } catch (EventException se) {
",2,0,0,1,4,0,0,2,0,4,29,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,173,"            throw new IntegratorException(se);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,174,"        } catch (ConvergenceException ce) {
",2,0,0,1,4,0,0,2,0,4,35,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,175,"            throw new IntegratorException(ce);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,205,"        } catch (EventException se) {
",2,0,0,1,4,0,0,2,0,4,29,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,206,"            throw new IntegratorException(se);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,238,"                    resetDerivatives = true;
",2,0,0,0,0,0,0,0,0,4,24,10,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,242,"        } catch (EventException se) {
",2,0,0,1,4,0,0,2,0,4,29,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/events/CombinedEventsManager,71,243,"            throw new IntegratorException(se);
",2,0,0,1,2,0,0,2,0,4,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/IntegratorException,71,40,"    super(specifier, parts);
",4,0,0,1,2,0,0,0,0,4,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/IntegratorException,71,41,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/IntegratorException,71,48,"    super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/IntegratorException,71,49,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,119,"      final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy();
",2,0,0,2,4,1,4,4,0,11,85,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,120,"      rki.reinitialize(this, yTmp, yDotK, forward);
",0,0,0,1,2,0,10,0,0,10,45,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,121,"      interpolator = rki;
",4,0,0,0,0,0,0,0,0,5,19,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,122,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,131,"        handler.reset();
",0,0,0,1,2,0,4,0,0,4,16,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,132,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,200,"          handler.handleStep(interpolator, lastStep);
",0,0,0,1,2,0,8,0,0,8,43,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,201,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,207,"        computeDerivatives(stepStart, y, yDotK[0]);
",0,0,1,2,4,0,6,0,0,8,43,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,123,"    super(name);
",2,0,0,1,2,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,125,"    this.minStep     = minStep;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,126,"    this.maxStep     = maxStep;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,127,"    this.initialStep = -1.0;
",2,0,0,0,0,0,0,0,0,4,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,129,"    this.scalAbsoluteTolerance = 0;
",2,0,0,0,0,0,0,0,0,3,31,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,130,"    this.scalRelativeTolerance = 0;
",2,0,0,0,0,0,0,0,0,3,31,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,131,"    this.vecAbsoluteTolerance  = vecAbsoluteTolerance.clone();
",2,0,0,1,2,0,4,0,0,7,58,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,132,"    this.vecRelativeTolerance  = vecRelativeTolerance.clone();
",2,0,0,1,2,0,4,0,0,7,58,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,134,"    resetInternalState();
",0,0,0,1,2,0,2,0,0,2,21,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,136,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,151,"      initialStep = -1.0;
",2,0,0,0,0,0,0,0,0,4,19,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,174,"          throw new IntegratorException(
",0,0,0,0,1,0,0,2,0,2,30,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,181,"          throw new IntegratorException(
",0,0,0,0,1,0,0,2,0,2,30,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,217,"    double yOnScale2 = 0;
",2,0,0,0,0,0,0,0,0,2,21,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,218,"    double yDotOnScale2 = 0;
",2,0,0,0,0,0,0,0,0,2,24,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,219,"    for (int j = 0; j < y0.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,220,"      ratio         = y0[j] / scale[j];
",2,1,1,2,4,0,0,0,0,12,33,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,221,"      yOnScale2    += ratio * ratio;
",6,1,0,0,0,0,0,0,0,8,30,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,222,"      ratio         = yDot0[j] / scale[j];
",2,1,1,2,4,0,0,0,0,12,36,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,223,"      yDotOnScale2 += ratio * ratio;
",6,1,0,0,0,0,0,0,0,8,30,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,226,"    double h = ((yOnScale2 < 1.0e-10) || (yDotOnScale2 < 1.0e-10)) ?
",6,3,0,3,6,0,0,0,0,9,64,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,228,"    if (! forward) {
",2,0,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,229,"      h = -h;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,233,"    for (int j = 0; j < y0.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,234,"      y1[j] = y0[j] + h * yDot0[j];
",2,2,1,3,6,0,0,0,0,17,29,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,236,"    computeDerivatives(t0 + h, y1, yDot1);
",4,1,0,1,2,0,6,0,0,11,38,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,239,"    double yDDotOnScale = 0;
",2,0,0,0,0,0,0,0,0,2,24,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,240,"    for (int j = 0; j < y0.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,241,"      ratio         = (yDot1[j] - yDot0[j]) / scale[j];
",2,2,1,4,8,0,0,0,0,17,49,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,242,"      yDDotOnScale += ratio * ratio;
",6,1,0,0,0,0,0,0,0,8,30,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,244,"    yDDotOnScale = Math.sqrt(yDDotOnScale) / h;
",4,1,0,1,2,0,6,0,0,12,43,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,248,"    final double maxInv2 = Math.max(Math.sqrt(yDotOnScale2), yDDotOnScale);
",2,0,0,2,4,1,12,0,0,15,71,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,249,"    final double h1 = (maxInv2 < 1.0e-15) ?
",4,1,0,1,2,1,0,0,0,6,39,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,252,"    h = Math.min(100.0 * Math.abs(h), h1);
",2,1,0,2,4,0,12,0,0,16,38,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,253,"    h = Math.max(h, 1.0e-12 * Math.abs(t0));  // avoids cancellation when computing t1 - t0
",2,1,0,2,4,0,12,0,0,16,87,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,254,"    if (h < getMinStep()) {
",2,1,0,2,5,0,2,0,0,5,23,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,255,"      h = getMinStep();
",2,0,0,1,2,0,2,0,0,5,17,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,257,"    if (h > getMaxStep()) {
",2,1,0,2,5,0,2,0,0,5,23,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,258,"      h = getMaxStep();
",2,0,0,1,2,0,2,0,0,5,17,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,260,"    if (! forward) {
",2,0,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,261,"      h = -h;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,264,"    return h;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,282,"          if (acceptSmall) {
",2,0,0,1,3,0,0,0,0,2,18,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,283,"              filteredH = forward ? minStep : -minStep;
",8,0,0,0,0,0,0,0,0,10,41,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,285,"              throw new IntegratorException(
",0,0,0,0,1,0,0,2,0,2,30,10,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,294,"          filteredH = -maxStep;
",4,0,0,0,0,0,0,0,0,6,21,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,310,"    return stepStart;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,323,"    return minStep;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,330,"    return maxStep;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,81,"    super(interpolator);
",2,0,0,1,2,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,83,"    if (interpolator.currentState != null) {
",4,1,0,1,3,0,0,0,0,5,40,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,84,"      final int dimension = currentState.length;
",6,0,0,0,0,1,0,0,0,7,42,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,86,"      yDotK = new double[interpolator.yDotK.length][];
",8,0,0,2,4,0,0,0,0,9,48,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,87,"      for (int k = 0; k < interpolator.yDotK.length; ++k) {
",12,1,0,1,3,0,0,0,0,14,53,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,88,"        yDotK[k] = new double[dimension];
",0,0,1,2,4,0,0,0,0,7,33,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,89,"        System.arraycopy(interpolator.yDotK[k], 0,
",4,0,1,1,3,0,4,0,0,10,42,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,93,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,94,"      yDotK = null;
",2,0,0,0,0,0,0,0,0,3,13,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,99,"    integrator = null;
",2,0,0,0,0,0,0,0,0,3,18,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,101,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,126,"    reinitialize(y, forward);
",0,0,0,1,2,0,6,0,0,6,25,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,127,"    this.yDotK = yDotArray;
",4,0,0,0,0,0,0,0,0,5,23,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,128,"    this.integrator = rkIntegrator;
",4,0,0,0,0,0,0,0,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,129,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,137,"    writeBaseExternal(out);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,140,"    final int n = (currentState == null) ? -1 : currentState.length;
",8,1,0,1,2,1,0,0,0,11,64,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,141,"    final int kMax = (yDotK == null) ? -1 : yDotK.length;
",8,1,0,1,2,1,0,0,0,11,53,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,142,"    out.writeInt(kMax);
",0,0,0,1,2,0,6,0,0,6,19,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,143,"    for (int k = 0; k < kMax; ++k) {
",8,1,0,1,3,0,0,0,0,10,32,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,144,"      for (int i = 0; i < n; ++i) {
",8,1,0,1,3,0,0,0,0,10,29,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,145,"        out.writeDouble(yDotK[k][i]);
",0,0,1,3,6,0,4,0,0,10,29,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,151,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,159,"    final double t = readBaseExternal(in);
",2,0,0,1,2,1,4,0,0,7,38,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,162,"    final int n = (currentState == null) ? -1 : currentState.length;
",8,1,0,1,2,1,0,0,0,11,64,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,163,"    final int kMax = in.readInt();
",2,0,0,1,2,1,4,0,0,7,30,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,164,"    yDotK = (kMax < 0) ? null : new double[kMax][];
",4,1,1,3,6,0,0,0,0,8,47,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,165,"    for (int k = 0; k < kMax; ++k) {
",8,1,0,1,3,0,0,0,0,10,32,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,166,"      yDotK[k] = (n < 0) ? null : new double[n];
",2,1,1,3,6,0,0,0,0,10,42,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,167,"      for (int i = 0; i < n; ++i) {
",8,1,0,1,3,0,0,0,0,10,29,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,168,"        yDotK[k][i] = in.readDouble();
",0,0,1,3,6,0,4,0,0,11,30,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,172,"    integrator = null;
",2,0,0,0,0,0,0,0,0,3,18,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,174,"    if (currentState != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,176,"        setInterpolatedTime(t);
",0,0,0,1,2,0,4,0,0,4,23,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,178,"        interpolatedTime = t;
",4,0,0,0,0,0,0,0,0,5,21,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,181,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,141,"  protected AbstractStepInterpolator(final AbstractStepInterpolator interpolator) {
",4,0,0,1,3,2,0,2,0,8,81,2,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,143,"    previousTime      = interpolator.previousTime;
",6,0,0,0,0,0,0,0,0,7,46,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,144,"    currentTime       = interpolator.currentTime;
",6,0,0,0,0,0,0,0,0,7,45,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,145,"    h                 = interpolator.h;
",6,0,0,0,0,0,0,0,0,7,35,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,146,"    interpolatedTime  = interpolator.interpolatedTime;
",6,0,0,0,0,0,0,0,0,7,50,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,148,"    if (interpolator.currentState != null) {
",4,1,0,1,3,0,0,0,0,5,40,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,149,"      currentState            = interpolator.currentState.clone();
",6,0,0,1,2,0,2,0,0,9,60,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,150,"      interpolatedState       = interpolator.interpolatedState.clone();
",6,0,0,1,2,0,2,0,0,9,65,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,151,"      interpolatedDerivatives = interpolator.interpolatedDerivatives.clone();
",6,0,0,1,2,0,2,0,0,9,71,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,153,"      currentState            = null;
",2,0,0,0,0,0,0,0,0,3,31,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,154,"      interpolatedState       = null;
",2,0,0,0,0,0,0,0,0,3,31,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,155,"      interpolatedDerivatives = null;
",2,0,0,0,0,0,0,0,0,3,31,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,158,"    finalized  = interpolator.finalized;
",6,0,0,0,0,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,159,"    forward    = interpolator.forward;
",6,0,0,0,0,0,0,0,0,7,34,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,160,"    dirtyState = interpolator.dirtyState;
",6,0,0,0,0,0,0,0,0,7,37,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,162,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,171,"    previousTime      = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,172,"    currentTime       = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,173,"    h                 = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,174,"    interpolatedTime  = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,31,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,176,"    currentState            = y;
",4,0,0,0,0,0,0,0,0,5,28,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,177,"    interpolatedState       = new double[y.length];
",6,0,0,1,2,0,0,0,0,7,47,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,178,"    interpolatedDerivatives = new double[y.length];
",6,0,0,1,2,0,0,0,0,7,47,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,180,"    finalized         = false;
",2,0,0,0,0,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,181,"    this.forward      = isForward;
",4,0,0,0,0,0,0,0,0,5,30,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,182,"    this.dirtyState   = true;
",2,0,0,0,0,0,0,0,0,4,25,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,184,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,190,"     finalizeStep();
",0,0,0,1,2,0,2,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,193,"     return doCopy();
",0,0,0,1,2,1,2,0,0,2,16,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,240,"    return interpolatedTime;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,287,"      if (dirtyState) {
",2,0,0,1,3,0,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,288,"          final double oneMinusThetaH = currentTime - interpolatedTime;
",6,1,0,0,0,1,0,0,0,8,61,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,289,"          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
",10,3,0,2,4,1,0,0,0,14,61,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,290,"          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
",0,0,0,1,2,0,6,0,0,6,62,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,291,"          dirtyState = false;
",2,0,0,0,0,0,0,0,0,4,19,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,294,"      return interpolatedDerivatives;
",2,0,0,0,0,1,0,0,0,2,31,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,341,"    if (! finalized) {
",2,0,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,342,"      doFinalize();
",0,0,0,1,2,0,2,0,0,2,13,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,343,"      finalized = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,345,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,355,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,374,"    if (currentState == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,375,"        out.writeInt(-1);
",0,0,0,1,2,0,4,0,0,5,17,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,377,"        out.writeInt(currentState.length);
",4,0,0,1,2,0,4,0,0,8,34,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,379,"    out.writeDouble(previousTime);
",0,0,0,1,2,0,6,0,0,6,30,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,380,"    out.writeDouble(currentTime);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,381,"    out.writeDouble(h);
",0,0,0,1,2,0,6,0,0,6,19,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,382,"    out.writeBoolean(forward);
",0,0,0,1,2,0,6,0,0,6,26,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,384,"    if (currentState != null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,385,"        for (int i = 0; i < currentState.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,47,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,386,"            out.writeDouble(currentState[i]);
",0,0,1,2,4,0,4,0,0,8,33,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,390,"    out.writeDouble(interpolatedTime);
",0,0,0,1,2,0,6,0,0,6,34,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,397,"      finalizeStep();
",0,0,0,1,2,0,2,0,0,2,15,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,400,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,398,"    } catch (DerivativeException e) {
",2,0,0,1,4,0,0,2,0,4,33,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,399,"      throw MathRuntimeException.createIOException(e);
",0,0,0,1,2,0,6,0,0,6,48,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,402,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,416,"    final int dimension = in.readInt();
",2,0,0,1,2,1,4,0,0,7,35,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,417,"    previousTime  = in.readDouble();
",2,0,0,1,2,0,4,0,0,7,32,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,418,"    currentTime   = in.readDouble();
",2,0,0,1,2,0,4,0,0,7,32,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,419,"    h             = in.readDouble();
",2,0,0,1,2,0,4,0,0,7,32,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,420,"    forward       = in.readBoolean();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,421,"    dirtyState    = true;
",2,0,0,0,0,0,0,0,0,4,21,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,423,"    if (dimension < 0) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,424,"        currentState = null;
",2,0,0,0,0,0,0,0,0,3,20,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,426,"        currentState  = new double[dimension];
",2,0,1,1,2,0,0,0,0,5,38,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,427,"        for (int i = 0; i < currentState.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,47,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,428,"            currentState[i] = in.readDouble();
",0,0,1,2,4,0,4,0,0,9,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,433,"    interpolatedTime        = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,37,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,434,"    interpolatedState       = (dimension < 0) ? null : new double[dimension];
",4,1,1,2,4,0,0,0,0,8,73,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,435,"    interpolatedDerivatives = (dimension < 0) ? null : new double[dimension];
",4,1,1,2,4,0,0,0,0,8,73,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,437,"    finalized = true;
",2,0,0,0,0,0,0,0,0,4,17,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,439,"    return in.readDouble();
",0,0,0,1,2,1,4,0,0,4,23,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,60,"    super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,61,"    currentDerivative = null;
",2,0,0,0,0,0,0,0,0,3,25,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,62,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,82,"    super(interpolator);
",2,0,0,1,2,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,83,"    currentDerivative = interpolator.currentDerivative.clone();
",6,0,0,1,2,0,2,0,0,9,59,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,84,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,91,"    return new DummyStepInterpolator(this);
",0,0,0,1,2,1,0,2,0,2,39,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,120,"    writeBaseExternal(out);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,122,"    if (currentDerivative != null) {
",2,1,0,1,3,0,0,0,0,3,32,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,123,"        for (int i = 0; i < currentDerivative.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,52,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,124,"            out.writeDouble(currentDerivative[i]);
",0,0,1,2,4,0,4,0,0,8,38,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,128,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,139,"    final double t = readBaseExternal(in);
",2,0,0,1,2,1,4,0,0,7,38,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,141,"    if (currentState == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,142,"        currentDerivative = null;
",2,0,0,0,0,0,0,0,0,3,25,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,144,"        currentDerivative  = new double[currentState.length];
",6,0,0,1,2,0,0,0,0,7,53,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,145,"        for (int i = 0; i < currentDerivative.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,52,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,146,"            currentDerivative[i] = in.readDouble();
",0,0,1,2,4,0,4,0,0,9,39,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,151,"    setInterpolatedTime(t);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,153,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,73,"        super(interpolator);
",2,0,0,1,2,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,74,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,79,"        return new ClassicalRungeKuttaStepInterpolator(this);
",0,0,0,1,2,1,0,2,0,2,53,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,88,"        final double fourTheta      = 4 * theta;
",4,1,0,0,0,1,0,0,0,6,40,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,89,"        final double oneMinusTheta  = 1 - theta;
",4,1,0,0,0,1,0,0,0,6,40,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,90,"        final double oneMinus2Theta = 1 - 2 * theta;
",4,2,0,0,0,1,0,0,0,7,44,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,91,"        final double s             = oneMinusThetaH / 6.0;
",4,1,0,0,0,1,0,0,0,6,50,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,92,"        final double coeff1        = s * ((-fourTheta + 5) * theta - 1);
",8,4,0,2,4,1,0,0,0,14,64,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,93,"        final double coeff23       = s * (( fourTheta - 2) * theta - 2);
",8,4,0,2,4,1,0,0,0,13,64,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,94,"        final double coeff4        = s * ((-fourTheta - 1) * theta - 1);
",8,4,0,2,4,1,0,0,0,14,64,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,95,"        final double coeffDot1     = oneMinusTheta * oneMinus2Theta;
",6,1,0,0,0,1,0,0,0,8,60,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,96,"        final double coeffDot23    = 2 * theta * oneMinusTheta;
",6,1,0,0,0,1,0,0,0,8,55,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,97,"        final double coeffDot4     = -theta * oneMinus2Theta;
",6,1,0,0,0,1,0,0,0,9,53,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,98,"        for (int i = 0; i < interpolatedState.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,52,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,99,"            final double yDot1  = yDotK[0][i];
",2,0,1,2,4,1,0,0,0,7,34,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,100,"            final double yDot23 = yDotK[1][i] + yDotK[2][i];
",2,1,1,4,8,1,0,0,0,12,48,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,101,"            final double yDot4  = yDotK[3][i];
",2,0,1,2,4,1,0,0,0,7,34,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,102,"            interpolatedState[i] =
",0,0,1,1,2,0,0,0,0,5,22,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,104,"            interpolatedDerivatives[i] =
",0,0,1,1,2,0,0,0,0,5,28,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,108,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,154,"    super(name, minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);
",10,0,0,1,2,0,0,0,0,10,74,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,156,"    this.fsal      = fsal;
",4,0,0,0,0,0,0,0,0,5,22,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,157,"    this.c         = c;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,158,"    this.a         = a;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,159,"    this.b         = b;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,160,"    this.prototype = prototype;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,162,"    exp = -1.0 / getOrder();
",2,1,0,1,2,0,2,0,0,7,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,165,"    setSafety(0.9);
",0,0,0,1,2,0,2,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,166,"    setMinReduction(0.2);
",0,0,0,1,2,0,2,0,0,2,21,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,167,"    setMaxGrowth(10.0);
",0,0,0,1,2,0,2,0,0,2,19,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,169,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,180,"    return safety;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,213,"      final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy();
",2,0,0,2,4,1,4,4,0,11,85,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,214,"      rki.reinitialize(this, yTmp, yDotK, forward);
",0,0,0,1,2,0,10,0,0,10,45,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,215,"      interpolator = rki;
",4,0,0,0,0,0,0,0,0,5,19,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,216,"    } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,226,"        handler.reset();
",0,0,0,1,2,0,4,0,0,4,16,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,227,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,251,"              for (int i = 0; i < scale.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,40,12,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,252,"                scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * Math.abs(y[i]);
",0,2,1,5,10,0,4,0,0,23,78,14,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,312,"          final double factor =
",2,0,0,0,0,1,0,0,0,3,21,10,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,315,"          hNew = filterStep(stepSize * factor, forward, false);
",6,1,0,1,2,0,4,0,0,13,53,10,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,316,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,329,"          handler.handleStep(interpolator, lastStep);
",0,0,0,1,2,0,8,0,0,8,43,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,330,"      }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,341,"        computeDerivatives(stepStart, y, yDotK[0]);
",0,0,1,2,4,0,6,0,0,8,43,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,372,"    return minReduction;
",2,0,0,0,0,1,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,386,"    return maxGrowth;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,233,"    super(METHOD_NAME, true, STATIC_C, STATIC_A, STATIC_B,
",8,0,0,0,1,0,0,0,0,9,54,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,236,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,274,"      den = 1.0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,245,"    super(interpolator);
",2,0,0,1,2,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,247,"    if (interpolator.currentState == null) {
",4,1,0,1,3,0,0,0,0,5,40,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,249,"      yDotKLast = null;
",2,0,0,0,0,0,0,0,0,3,17,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,250,"      v         = null;
",2,0,0,0,0,0,0,0,0,3,17,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,251,"      vectorsInitialized = false;
",2,0,0,0,0,0,0,0,0,4,27,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,255,"      final int dimension = interpolator.currentState.length;
",8,0,0,0,0,1,0,0,0,9,55,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,257,"      yDotKLast    = new double[3][];
",2,0,0,2,4,0,0,0,0,3,31,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,258,"      for (int k = 0; k < yDotKLast.length; ++k) {
",10,1,0,1,3,0,0,0,0,12,44,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,259,"        yDotKLast[k] = new double[dimension];
",0,0,1,2,4,0,0,0,0,7,37,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,260,"        System.arraycopy(interpolator.yDotKLast[k], 0, yDotKLast[k], 0,
",4,0,1,2,5,0,4,0,0,14,63,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,264,"      v = new double[7][];
",2,0,0,2,4,0,0,0,0,3,20,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,265,"      for (int k = 0; k < v.length; ++k) {
",10,1,0,1,3,0,0,0,0,12,36,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,266,"        v[k] = new double[dimension];
",0,0,1,2,4,0,0,0,0,7,29,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,267,"        System.arraycopy(interpolator.v[k], 0, v[k], 0, dimension);
",4,0,1,3,6,0,6,0,0,16,59,9,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,270,"      vectorsInitialized = interpolator.vectorsInitialized;
",6,0,0,0,0,0,0,0,0,7,53,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,274,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,279,"    return new DormandPrince853StepInterpolator(this);
",0,0,0,1,2,1,0,2,0,2,50,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,287,"    super.reinitialize(integrator, y, yDotK, forward);
",10,0,0,1,2,0,0,0,0,10,50,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,289,"    final int dimension = currentState.length;
",6,0,0,0,0,1,0,0,0,7,42,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,291,"    yDotKLast = new double[3][];
",2,0,0,2,4,0,0,0,0,3,28,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,292,"    for (int k = 0; k < yDotKLast.length; ++k) {
",10,1,0,1,3,0,0,0,0,12,44,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,293,"      yDotKLast[k] = new double[dimension];
",0,0,1,2,4,0,0,0,0,7,37,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,296,"    v = new double[7][];
",2,0,0,2,4,0,0,0,0,3,20,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,297,"    for (int k = 0; k < v.length; ++k) {
",10,1,0,1,3,0,0,0,0,12,36,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,298,"      v[k]  = new double[dimension];
",0,0,1,2,4,0,0,0,0,7,30,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,301,"    vectorsInitialized = false;
",2,0,0,0,0,0,0,0,0,4,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,303,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,308,"    super.storeTime(t);
",4,0,0,1,2,0,0,0,0,4,19,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,309,"    vectorsInitialized = false;
",2,0,0,0,0,0,0,0,0,4,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,310,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,318,"    if (! vectorsInitialized) {
",2,0,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,320,"      if (v == null) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,321,"        v = new double[7][];
",2,0,0,2,4,0,0,0,0,3,20,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,322,"        for (int k = 0; k < 7; ++k) {
",6,1,0,1,3,0,0,0,0,8,29,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,323,"          v[k] = new double[interpolatedState.length];
",4,0,1,2,4,0,0,0,0,9,44,10,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,328,"      finalizeStep();
",0,0,0,1,2,0,2,0,0,2,15,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,331,"      for (int i = 0; i < interpolatedState.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,52,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,332,"          final double yDot1  = yDotK[0][i];
",2,0,1,2,4,1,0,0,0,7,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,333,"          final double yDot6  = yDotK[5][i];
",2,0,1,2,4,1,0,0,0,7,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,334,"          final double yDot7  = yDotK[6][i];
",2,0,1,2,4,1,0,0,0,7,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,335,"          final double yDot8  = yDotK[7][i];
",2,0,1,2,4,1,0,0,0,7,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,336,"          final double yDot9  = yDotK[8][i];
",2,0,1,2,4,1,0,0,0,7,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,337,"          final double yDot10 = yDotK[9][i];
",2,0,1,2,4,1,0,0,0,7,34,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,338,"          final double yDot11 = yDotK[10][i];
",2,0,1,2,4,1,0,0,0,7,35,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,339,"          final double yDot12 = yDotK[11][i];
",2,0,1,2,4,1,0,0,0,7,35,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,340,"          final double yDot13 = yDotK[12][i];
",2,0,1,2,4,1,0,0,0,7,35,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,341,"          final double yDot14 = yDotKLast[0][i];
",2,0,1,2,4,1,0,0,0,7,38,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,342,"          final double yDot15 = yDotKLast[1][i];
",2,0,1,2,4,1,0,0,0,7,38,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,343,"          final double yDot16 = yDotKLast[2][i];
",2,0,1,2,4,1,0,0,0,7,38,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,344,"          v[0][i] = B_01 * yDot1  + B_06 * yDot6 + B_07 * yDot7 +
",12,10,1,2,4,0,0,0,0,27,55,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,347,"          v[1][i] = yDot1 - v[0][i];
",2,1,1,4,8,0,0,0,0,12,26,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,348,"          v[2][i] = v[0][i] - v[1][i] - yDotK[12][i];
",0,1,1,8,16,0,0,0,0,18,43,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,349,"          for (int k = 0; k < D.length; ++k) {
",10,1,0,1,3,0,0,0,0,12,36,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,350,"              v[k+3][i] = D[k][0] * yDot1  + D[k][1]  * yDot6  + D[k][2]  * yDot7  +
",8,15,1,8,16,0,0,0,0,40,70,10,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,357,"      vectorsInitialized = true;
",2,0,0,0,0,0,0,0,0,4,26,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,361,"    final double eta      = 1 - theta;
",4,1,0,0,0,1,0,0,0,6,34,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,362,"    final double twoTheta = 2 * theta;
",4,1,0,0,0,1,0,0,0,6,34,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,363,"    final double theta2   = theta * theta;
",6,1,0,0,0,1,0,0,0,8,38,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,364,"    final double dot1 = 1 - twoTheta;
",4,1,0,0,0,1,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,365,"    final double dot2 = theta * (2 - 3 * theta);
",6,3,0,1,2,1,0,0,0,10,44,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,366,"    final double dot3 = twoTheta * (1 + theta * (twoTheta -3));
",8,4,0,2,4,1,0,0,0,13,59,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,367,"    final double dot4 = theta2 * (3 + theta * (5 * theta - 8));
",8,5,0,2,4,1,0,0,0,14,59,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,368,"    final double dot5 = theta2 * (3 + theta * (-12 + theta * (15 - 6 * theta)));
",10,7,0,3,6,1,0,0,0,19,76,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,369,"    final double dot6 = theta2 * theta * (4 + theta * (-15 + theta * (18 - 7 * theta)));
",12,7,0,3,6,1,0,0,0,21,84,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,371,"    for (int i = 0; i < interpolatedState.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,52,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,372,"      interpolatedState[i] = currentState[i] -
",0,1,1,2,4,0,0,0,0,10,40,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,380,"      interpolatedDerivatives[i] =  v[0][i] + dot1 * v[1][i] + dot2 * v[2][i] +
",4,8,1,7,14,0,0,0,0,29,73,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,385,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,392,"    if (currentState == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,394,"      return;
",0,0,0,0,0,1,0,0,0,0,7,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,398,"    final double[] yTmp = new double[currentState.length];
",6,0,0,2,4,1,0,0,0,7,54,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,401,"    for (int j = 0; j < currentState.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,47,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,402,"      s = K14_01 * yDotK[0][j]  + K14_06 * yDotK[5][j]  + K14_07 * yDotK[6][j] +
",8,11,1,6,12,0,0,0,0,32,74,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,405,"      yTmp[j] = currentState[j] + h * s;
",4,2,1,2,4,0,0,0,0,15,34,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,407,"    integrator.computeDerivatives(previousTime + C14 * h, yTmp, yDotKLast[0]);
",6,2,1,2,4,0,6,0,0,16,74,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,410,"    for (int j = 0; j < currentState.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,47,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,411,"     s = K15_01 * yDotK[0][j]  + K15_06 * yDotK[5][j]  + K15_07 * yDotK[6][j] +
",8,12,1,6,12,0,0,0,0,33,74,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,415,"     yTmp[j] = currentState[j] + h * s;
",4,2,1,2,4,0,0,0,0,15,34,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,417,"    integrator.computeDerivatives(previousTime + C15 * h, yTmp, yDotKLast[1]);
",6,2,1,2,4,0,6,0,0,16,74,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,420,"    for (int j = 0; j < currentState.length; ++j) {
",10,1,0,1,3,0,0,0,0,12,47,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,421,"      s = K16_01 * yDotK[0][j]  + K16_06 * yDotK[5][j]  + K16_07 * yDotK[6][j] +
",8,13,1,6,12,0,0,0,0,34,74,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,425,"      yTmp[j] = currentState[j] + h * s;
",4,2,1,2,4,0,0,0,0,15,34,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,427,"    integrator.computeDerivatives(previousTime + C16 * h, yTmp, yDotKLast[2]);
",6,2,1,2,4,0,6,0,0,16,74,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,429,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,438,"      finalizeStep();
",0,0,0,1,2,0,2,0,0,2,15,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,441,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,439,"    } catch (DerivativeException e) {
",2,0,0,1,4,0,0,2,0,4,33,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,440,"      throw MathRuntimeException.createIOException(e);
",0,0,0,1,2,0,6,0,0,6,48,8,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,442,"    final int dimension = (currentState == null) ? -1 : currentState.length;
",8,1,0,1,2,1,0,0,0,11,72,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,443,"    out.writeInt(dimension);
",0,0,0,1,2,0,6,0,0,6,24,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,444,"    for (int i = 0; i < dimension; ++i) {
",8,1,0,1,3,0,0,0,0,10,37,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,445,"      out.writeDouble(yDotKLast[0][i]);
",0,0,1,3,6,0,4,0,0,8,33,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,446,"      out.writeDouble(yDotKLast[1][i]);
",0,0,1,3,6,0,4,0,0,8,33,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,447,"      out.writeDouble(yDotKLast[2][i]);
",0,0,1,3,6,0,4,0,0,8,33,7,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,451,"    super.writeExternal(out);
",4,0,0,1,2,0,0,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,453,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,461,"    yDotKLast = new double[3][];
",2,0,0,2,4,0,0,0,0,3,28,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,462,"    final int dimension = in.readInt();
",2,0,0,1,2,1,4,0,0,7,35,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,463,"    yDotKLast[0] = (dimension < 0) ? null : new double[dimension];
",2,1,1,3,6,0,0,0,0,8,62,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,464,"    yDotKLast[1] = (dimension < 0) ? null : new double[dimension];
",2,1,1,3,6,0,0,0,0,8,62,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,465,"    yDotKLast[2] = (dimension < 0) ? null : new double[dimension];
",2,1,1,3,6,0,0,0,0,8,62,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,467,"    for (int i = 0; i < dimension; ++i) {
",8,1,0,1,3,0,0,0,0,10,37,4,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,468,"      yDotKLast[0][i] = in.readDouble();
",0,0,1,3,6,0,4,0,0,9,34,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,469,"      yDotKLast[1][i] = in.readDouble();
",0,0,1,3,6,0,4,0,0,9,34,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,470,"      yDotKLast[2][i] = in.readDouble();
",0,0,1,3,6,0,4,0,0,9,34,6,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,474,"    super.readExternal(in);
",4,0,0,1,2,0,0,0,0,4,23,5,0.00000,0
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,476,"  }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,71,43,"        super(""Maximal number of iterations ({0}) exceeded"", maxIterations);
",2,0,0,3,6,0,0,0,0,3,68,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,71,44,"        this.maxIterations = maxIterations;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,71,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,71,56,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,71,57,"        this.maxIterations = maxIterations;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,71,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,71,64,"        return maxIterations;
",2,0,0,0,0,1,0,0,0,2,21,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,65,"        super(f, DEFAULT_MAXIMUM_ITERATIONS, DEFAULT_ABSOLUTE_ACCURACY);
",6,0,0,1,2,0,0,0,0,6,64,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,66,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,82,"        super(DEFAULT_MAXIMUM_ITERATIONS, absoluteAccuracy);
",4,0,0,1,2,0,0,0,0,4,52,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,83,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,93,"        super(maximumIterations, absoluteAccuracy);
",4,0,0,1,2,0,0,0,0,4,43,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,94,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,100,"        return solve(f, min, max);
",0,0,0,1,2,1,8,0,0,8,26,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,107,"        return solve(f, min, max, initial);
",0,0,0,1,2,1,10,0,0,10,35,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,134,"        clearResult();
",0,0,0,1,2,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,135,"        if ((initial < min) || (initial > max)) {
",8,3,0,3,7,0,0,0,0,11,41,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,136,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,142,"        double yInitial = f.value(initial);
",2,0,0,1,2,0,6,0,0,8,35,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,143,"        if (Math.abs(yInitial) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,50,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,144,"            setResult(initial, 0);
",0,0,0,1,2,0,4,0,0,4,22,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,145,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,149,"        double yMin = f.value(min);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,150,"        if (Math.abs(yMin) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,151,"            setResult(min, 0);
",0,0,0,1,2,0,4,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,152,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,156,"        if (yInitial * yMin < 0) {
",4,2,0,1,3,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,157,"            return solve(f, min, yMin, initial, yInitial, min, yMin);
",0,0,0,1,2,1,16,0,0,16,57,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,161,"        double yMax = f.value(max);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,162,"        if (Math.abs(yMax) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,163,"            setResult(max, 0);
",0,0,0,1,2,0,4,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,164,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,168,"        if (yInitial * yMax < 0) {
",4,2,0,1,3,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,169,"            return solve(f, initial, yInitial, max, yMax, initial, yInitial);
",0,0,0,1,2,1,16,0,0,16,65,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,172,"        throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,211,"            if (Math.abs(yMin) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,212,"                setResult(min, 0);
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,213,"                ret = min;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,214,"            } else if (Math.abs(yMax) <= functionValueAccuracy) {
",2,1,0,2,6,0,6,0,0,9,53,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,215,"                setResult(max, 0);
",0,0,0,1,2,0,4,0,0,4,18,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,216,"                ret = max;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,219,"                throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,227,"            if (yMin == 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,228,"                ret = min;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,230,"                ret = max;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,278,"                setResult(x1, i);
",0,0,0,1,2,0,6,0,0,6,17,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,279,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,291,"                delta = 0.5 * dx;
",4,1,0,0,0,0,0,0,0,6,17,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,292,"                oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,306,"                    double r1 = y0 / y2;
",6,1,0,0,0,0,0,0,0,7,20,11,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,307,"                    double r2 = y1 / y2;
",6,1,0,0,0,0,0,0,0,7,20,11,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,308,"                    p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
",18,7,0,4,8,0,0,0,0,26,56,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,309,"                    p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
",8,4,0,3,6,0,0,0,0,13,42,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,321,"                    delta = 0.5 * dx;
",4,1,0,0,0,0,0,0,0,6,17,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,322,"                    oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,333,"                x1 = x1 + delta;
",6,1,0,0,0,0,0,0,0,8,16,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,71,348,"        throw new MaxIterationsExceededException(maximalIterationCount);
",2,0,0,1,2,0,0,2,0,4,64,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,74,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
",4,0,0,1,2,0,0,0,0,4,61,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,75,"        if (f == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,76,"            throw MathRuntimeException.createIllegalArgumentException(""function to solve cannot be null"");
",0,0,0,1,2,0,4,0,0,5,94,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,78,"        this.f = f;
",4,0,0,0,0,0,0,0,0,5,11,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,79,"        this.defaultFunctionValueAccuracy = 1.0e-15;
",2,0,0,0,0,0,0,0,0,3,44,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,80,"        this.functionValueAccuracy = defaultFunctionValueAccuracy;
",4,0,0,0,0,0,0,0,0,5,58,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,81,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,102,"        if (!resultComputed) {
",2,0,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,103,"            throw MathRuntimeException.createIllegalStateException(""no result available"");
",0,0,0,1,2,0,4,0,0,5,78,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,105,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,109,"        checkResultComputed();
",0,0,0,1,2,0,2,0,0,2,22,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,110,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,115,"        checkResultComputed();
",0,0,0,1,2,0,2,0,0,2,22,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,116,"        return functionValue;
",2,0,0,0,0,1,0,0,0,2,21,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,121,"        functionValueAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,33,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,122,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,126,"        return functionValueAccuracy;
",2,0,0,0,0,1,0,0,0,2,29,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,131,"        functionValueAccuracy = defaultFunctionValueAccuracy;
",4,0,0,0,0,0,0,0,0,5,53,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,132,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,155,"        this.result         = x;
",4,0,0,0,0,0,0,0,0,5,24,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,156,"        this.functionValue  = fx;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,157,"        this.iterationCount = iterationCount;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,158,"        this.resultComputed = true;
",2,0,0,0,0,0,0,0,0,4,27,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,159,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,182,"        final double f1 = function.value(lower);
",2,0,0,1,2,1,6,0,0,9,40,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,183,"        final double f2 = function.value(upper);
",2,0,0,1,2,1,6,0,0,9,40,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,184,"        return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);
",8,7,0,2,4,1,0,0,0,15,48,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,196,"        return (start < mid) && (mid < end);
",8,3,0,2,4,1,0,0,0,11,36,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,209,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,225,"        if (!isSequence(lower, initial, upper)) {
",0,0,0,2,5,0,8,0,0,9,41,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,226,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,230,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,247,"        verifyInterval(lower, upper);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,248,"        if (!isBracketing(lower, upper, function)) {
",0,0,0,2,5,0,8,0,0,9,44,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,249,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,254,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,73,"        return iterationCount;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,83,"        return absoluteAccuracy;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,88,"        absoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,43,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,89,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,98,"        return maximalIterationCount;
",2,0,0,0,0,1,0,0,0,2,29,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,103,"        maximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,53,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,104,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,108,"        relativeAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,28,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,109,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,113,"        return relativeAccuracy;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,118,"        relativeAccuracy = defaultRelativeAccuracy;
",4,0,0,0,0,0,0,0,0,5,43,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,71,119,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
