dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,math,org/apache/commons/math/special/Gamma,104,200,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,8,0,0,12,67,5,0.16667,0
defect4j,math,org/apache/commons/math/special/Gamma,104,243,"            ContinuedFraction cf = new ContinuedFraction() {
",2,0,0,1,3,0,0,4,0,6,48,8,0.04000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,248,"                    return ((2.0 * n) + 1.0) - a + x;
",6,4,0,2,4,1,0,0,0,10,33,14,0.04000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,252,"                    return n * (a - n);
",6,2,0,1,2,1,0,0,0,8,19,14,0.04000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,237,"        } else if (x < a || a < 1.0) {
",6,3,0,1,4,0,0,0,0,9,30,6,0.04000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,243,"            ContinuedFraction cf = new ContinuedFraction() {
",2,0,0,1,3,0,0,4,0,6,48,8,0.04000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,256,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,51,8,0.04000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,257,"            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;
",8,4,0,4,8,0,14,0,0,28,59,8,0.04000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,235,"        } else if (x == 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,5,0.03846,0
defect4j,math,org/apache/commons/math/special/Gamma,104,120,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,8,0,0,12,67,5,0.03704,0
defect4j,math,org/apache/commons/math/special/Gamma,104,168,"            double n = 0.0; // current element index
",2,0,0,0,0,0,0,0,0,2,40,9,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,169,"            double an = 1.0 / a; // n-th element in the series
",4,1,0,0,0,0,0,0,0,5,50,9,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,170,"            double sum = an; // partial sum
",4,0,0,0,0,0,0,0,0,4,31,9,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,171,"            while (Math.abs(an) > epsilon && n < maxIterations) {
",6,3,0,2,5,0,6,0,0,15,53,8,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,173,"                n = n + 1.0;
",4,1,0,0,0,0,0,0,0,6,12,10,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,174,"                an = an * (x / (a + n));
",10,3,0,2,4,0,0,0,0,14,24,10,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,177,"                sum = sum + an;
",6,1,0,0,0,0,0,0,0,8,15,10,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,179,"            if (n >= maxIterations) {
",4,1,0,1,3,0,0,0,0,5,25,8,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,182,"                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
",8,4,0,4,8,0,14,0,0,28,59,10,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,233,"        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
",4,3,0,5,11,0,12,0,0,19,68,4,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,260,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.03226,0
defect4j,math,org/apache/commons/math/special/Gamma,104,162,"        } else if (a >= 1.0 && x > a) {
",6,3,0,1,4,0,0,0,0,9,31,6,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,104,160,"        } else if (x == 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,5,0.02564,0
defect4j,math,org/apache/commons/math/special/Gamma,104,158,"        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
",4,3,0,5,11,0,12,0,0,19,68,4,0.02273,0
defect4j,math,org/apache/commons/math/special/Gamma,104,186,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.02273,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,51,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,52,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,133,"        double p0 = 1.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,134,"        double p1 = getA(0, x);
",2,0,0,1,2,0,4,0,0,6,23,5,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,135,"        double q0 = 0.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,136,"        double q1 = 1.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,137,"        double c = p1 / q1;
",6,1,0,0,0,0,0,0,0,7,19,5,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,138,"        int n = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,139,"        double relativeError = Double.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,40,5,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,140,"        while (n < maxIterations && relativeError > epsilon) {
",8,3,0,1,3,0,0,0,0,11,54,4,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,141,"            ++n;
",2,0,0,0,0,0,0,0,0,3,4,6,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,142,"            double a = getA(n, x);
",2,0,0,1,2,0,6,0,0,8,22,7,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,143,"            double b = getB(n, x);
",2,0,0,1,2,0,6,0,0,8,22,7,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,144,"            double p2 = a * p1 + b * p0;
",10,3,0,0,0,0,0,0,0,13,28,7,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,145,"            double q2 = a * q1 + b * q0;
",10,3,0,0,0,0,0,0,0,13,28,7,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,146,"            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {
",0,1,0,3,7,0,12,0,0,13,53,6,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,161,"            double r = p2 / q2;
",6,1,0,0,0,0,0,0,0,7,19,7,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,162,"            relativeError = Math.abs(r / c - 1.0);
",6,2,0,1,2,0,4,0,0,13,38,6,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,165,"            c = p2 / q2;
",6,1,0,0,0,0,0,0,0,8,12,6,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,166,"            p0 = p1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,167,"            p1 = p2;
",4,0,0,0,0,0,0,0,0,5,8,6,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,168,"            q0 = q1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,169,"            q1 = q2;
",4,0,0,0,0,0,0,0,0,5,8,6,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,170,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,172,"        if (n >= maxIterations) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.01515,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,178,"        return c;
",2,0,0,0,0,1,0,0,0,2,9,4,0.01515,0
defect4j,math,org/apache/commons/math/special/Gamma,104,93,"            double g = 607.0 / 128.0;
",2,1,0,0,0,0,0,0,0,3,25,7,0.01250,0
defect4j,math,org/apache/commons/math/special/Gamma,104,95,"            double sum = 0.0;
",2,0,0,0,0,0,0,0,0,2,17,7,0.01250,0
defect4j,math,org/apache/commons/math/special/Gamma,104,96,"            for (int i = lanczos.length - 1; i > 0; --i) {
",10,2,0,1,3,0,0,0,0,13,46,6,0.01250,0
defect4j,math,org/apache/commons/math/special/Gamma,104,97,"                sum = sum + (lanczos[i] / (x + i));
",8,3,1,3,6,0,0,0,0,16,35,8,0.01250,0
defect4j,math,org/apache/commons/math/special/Gamma,104,99,"            sum = sum + lanczos[0];
",4,1,1,1,2,0,0,0,0,8,23,6,0.01250,0
defect4j,math,org/apache/commons/math/special/Gamma,104,101,"            double tmp = x + g + .5;
",6,1,0,0,0,0,0,0,0,7,24,7,0.01250,0
defect4j,math,org/apache/commons/math/special/Gamma,104,102,"            ret = ((x + .5) * Math.log(tmp)) - tmp +
",6,5,0,3,6,0,6,0,0,18,40,6,0.01250,0
defect4j,math,org/apache/commons/math/special/Gamma,104,90,"        if (Double.isNaN(x) || (x <= 0.0)) {
",2,2,0,3,7,0,6,0,0,10,36,4,0.01205,0
defect4j,math,org/apache/commons/math/special/Gamma,104,106,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.01205,0
defect4j,math,org/apache/commons/math/special/Gamma,104,40,"    private static double[] lanczos =
",2,0,0,1,2,2,0,0,0,4,33,2,0.01111,0
defect4j,math,org/apache/commons/math/special/Gamma,104,60,"    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);
",6,2,0,1,2,3,4,0,0,15,74,2,0.01111,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,36,"        super(""Maximal number of iterations ({0}) exceeded"",
",0,0,0,2,5,0,0,0,0,1,52,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,38,"        this.maxIterations = maxIterations;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,39,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,50,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,51,"        this.maxIterations = maxIterations;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,52,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,104,58,"        return maxIterations;
",2,0,0,0,0,1,0,0,0,2,21,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,34,"        super(""Convergence failed"", new Object[0]);
",0,0,0,2,4,0,0,2,0,3,43,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,35,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,44,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,52,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,53,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,63,"        super(pattern, arguments, cause);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,64,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,77,"        super(msg, rootCause);
",4,0,0,1,2,0,0,0,0,4,22,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,78,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,89,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,104,90,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,123,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,124,"        this.pattern   = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,125,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,126,"        this.rootCause = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,127,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,137,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,138,"        this.pattern   = msg;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,139,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,140,"        this.rootCause = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,141,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,151,"      super(buildMessage(pattern, arguments, Locale.US));
",4,0,0,2,4,0,6,0,0,10,51,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,152,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,153,"      this.arguments = arguments;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,154,"      this.rootCause = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,155,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,165,"        super((rootCause == null ? null : rootCause.getMessage()));
",2,1,0,3,6,0,4,0,0,8,59,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,166,"        this.pattern   = getMessage();
",2,0,0,1,2,0,2,0,0,5,30,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,167,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,168,"        this.rootCause = rootCause;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,181,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,182,"        this.pattern   = msg;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,183,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,184,"        this.rootCause = rootCause;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,185,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,197,"      super(buildMessage(pattern, arguments, Locale.US));
",4,0,0,2,4,0,6,0,0,10,51,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,198,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,199,"      this.arguments = arguments;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,200,"      this.rootCause = rootCause;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,201,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,47,"        boolean flag = false;
",2,0,0,0,0,0,0,0,0,3,21,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,49,"            Throwable.class.getDeclaredMethod(""getCause"", new Class[0]);
",0,0,0,2,4,0,2,4,0,7,60,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,50,"            flag = true;
",2,0,0,0,0,0,0,0,0,4,12,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,53,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,51,"        } catch (NoSuchMethodException ex) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,52,"            flag = false;
",2,0,0,0,0,0,0,0,0,4,13,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,54,"        JDK_SUPPORTS_NESTED = flag;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,57,"    private static ResourceBundle cachedResources = null;
",2,0,0,0,0,2,0,2,0,6,53,2,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,83,"            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {
",2,2,0,5,11,0,8,0,0,13,82,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,85,"                cachedResources =
",2,0,0,0,0,0,0,0,0,3,17,8,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,89,"            if (cachedResources.getLocale().getLanguage().equals(locale.getLanguage())) {
",0,0,0,5,11,0,12,0,0,12,77,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,91,"                return cachedResources.getString(s);
",0,0,0,1,2,1,6,0,0,6,36,9,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,96,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,94,"        } catch (MissingResourceException mre) {
",2,0,0,1,4,0,0,2,0,4,40,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,100,"        return s;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,113,"        MessageFormat mf = new MessageFormat(translate(pattern, locale));
",2,0,0,2,4,0,6,4,0,12,65,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,114,"        mf.setLocale(locale);
",0,0,0,1,2,0,6,0,0,6,21,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,115,"        return mf.format(arguments);        
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,208,"        return pattern;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,216,"        return arguments;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,226,"        return (pattern == null) ? null : buildMessage(pattern, arguments, locale);
",2,1,0,2,4,1,8,0,0,12,75,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,235,"        return rootCause;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,242,"        printStackTrace(System.err);
",4,0,0,1,2,0,2,0,0,6,28,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,243,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,251,"        synchronized (out) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,252,"            PrintWriter pw = new PrintWriter(out, false);
",4,0,0,1,2,0,0,4,0,9,45,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,253,"            printStackTrace(pw);
",0,0,0,1,2,0,4,0,0,4,20,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,255,"            pw.flush();
",0,0,0,1,2,0,4,0,0,4,11,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,256,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,257,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,265,"        synchronized (out) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,266,"            super.printStackTrace(out);
",4,0,0,1,2,0,0,0,0,4,27,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,267,"            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {
",4,3,0,1,3,0,0,0,0,8,56,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,268,"                out.print(""Caused by: "");
",0,0,0,1,2,0,4,0,0,5,25,9,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,269,"                rootCause.printStackTrace(out);
",0,0,0,1,2,0,6,0,0,6,31,9,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,271,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,104,272,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,79,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,55,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,90,"        return evaluate(x, epsilon, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,47,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,101,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);
",0,0,0,1,2,1,8,0,0,8,51,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,148,"                if (a != 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,8,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,149,"                    p2 = p1 + (b / a * p0);
",10,3,0,1,2,0,0,0,0,14,23,10,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,150,"                    q2 = q1 + (b / a * q0);
",10,3,0,1,2,0,0,0,0,14,23,10,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,151,"                } else if (b != 0) {
",2,1,0,1,4,0,0,0,0,3,20,9,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,152,"                    p2 = (a / b * p1) + p0;
",10,3,0,1,2,0,0,0,0,14,23,11,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,153,"                    q2 = (a / b * q1) + q0;
",10,3,0,1,2,0,0,0,0,14,23,11,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,156,"                    throw new ConvergenceException(
",0,0,0,0,1,0,0,2,0,2,31,13,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,104,173,"            throw new MaxIterationsExceededException(maxIterations,
",2,0,0,0,1,0,0,2,0,4,55,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,67,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,68,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,91,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,159,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,161,"            ret = 0.0;
",2,0,0,0,0,0,0,0,0,3,10,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,165,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,60,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,180,"                throw new MaxIterationsExceededException(maxIterations);
",2,0,0,1,2,0,0,2,0,4,56,11,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,234,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,236,"            ret = 1.0;
",2,0,0,0,0,0,0,0,0,3,10,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,104,240,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,60,8,0.00000,0
