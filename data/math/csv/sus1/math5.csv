dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,math,org/apache/commons/math3/complex/Complex,5,304,"        if (real == 0.0 && imaginary == 0.0) {
",4,3,0,1,3,0,0,0,0,7,38,4,0.25000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,300,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.20000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,348,"                return (real == c.real) && (imaginary == c.imaginary);
",12,3,0,2,4,1,0,0,0,15,54,8,0.02439,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,344,"            Complex c = (Complex)other;
",4,0,0,1,2,0,0,4,0,8,27,6,0.02273,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,345,"            if (c.isNaN) {
",4,0,0,1,3,0,0,0,0,4,14,7,0.02273,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,343,"        if (other instanceof Complex){
",2,0,0,1,3,0,0,2,0,4,30,5,0.02174,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,340,"        if (this == other) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.01613,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,98,"    public Complex(double real, double imaginary) {
",6,0,0,1,3,1,0,0,0,7,47,2,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,99,"        this.real = real;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,100,"        this.imaginary = imaginary;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,102,"        isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
",2,1,0,2,4,0,12,0,0,16,54,4,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,103,"        isInfinite = !isNaN &&
",4,1,0,0,0,0,0,0,0,7,22,4,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,105,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,59,"    public static final Complex I = new Complex(0.0, 1.0);
",2,0,0,1,2,3,0,4,0,9,54,2,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,62,"    public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
",10,0,0,1,2,3,0,4,0,17,70,2,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,65,"    public static final Complex INF = new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
",10,0,0,1,2,3,0,4,0,17,98,2,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,67,"    public static final Complex ONE = new Complex(1.0, 0.0);
",2,0,0,1,2,3,0,4,0,9,56,2,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,69,"    public static final Complex ZERO = new Complex(0.0, 0.0);
",2,0,0,1,2,3,0,4,0,9,57,2,0.00469,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,89,"        this(real, 0.0);
",2,0,0,1,2,0,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,90,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,116,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,117,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,119,"        if (isInfinite()) {
",0,0,0,2,5,0,2,0,0,2,19,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,120,"            return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,122,"        if (FastMath.abs(real) < FastMath.abs(imaginary)) {
",0,1,0,3,7,0,12,0,0,13,51,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,123,"            if (imaginary == 0.0) {
",2,1,0,1,3,0,0,0,0,3,23,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,124,"                return FastMath.abs(real);
",0,0,0,1,2,1,6,0,0,6,26,9,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,126,"            double q = real / imaginary;
",6,1,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,127,"            return FastMath.abs(imaginary) * FastMath.sqrt(1 + q * q);
",4,3,0,2,4,1,10,0,0,17,58,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,129,"            if (real == 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,130,"                return FastMath.abs(imaginary);
",0,0,0,1,2,1,6,0,0,6,31,9,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,132,"            double q = imaginary / real;
",6,1,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,133,"            return FastMath.abs(real) * FastMath.sqrt(1 + q * q);
",4,3,0,2,4,1,10,0,0,17,53,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,157,"        MathUtils.checkNotNull(addend);
",0,0,0,1,2,0,6,0,0,6,31,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,158,"        if (isNaN || addend.isNaN) {
",6,1,0,1,3,0,0,0,0,7,28,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,159,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,162,"        return createComplex(real + addend.getReal(),
",2,1,0,1,3,1,6,0,0,9,45,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,175,"        if (isNaN || Double.isNaN(addend)) {
",2,1,0,2,5,0,6,0,0,9,36,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,176,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,179,"        return createComplex(real + addend, imaginary);
",4,1,0,1,2,1,4,0,0,9,47,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,197,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,198,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,201,"        return createComplex(real, -imaginary);
",2,0,0,1,2,1,4,0,0,7,39,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,248,"        MathUtils.checkNotNull(divisor);
",0,0,0,1,2,0,6,0,0,6,32,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,249,"        if (isNaN || divisor.isNaN) {
",6,1,0,1,3,0,0,0,0,7,29,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,250,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,253,"        final double c = divisor.getReal();
",2,0,0,1,2,1,4,0,0,7,35,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,254,"        final double d = divisor.getImaginary();
",2,0,0,1,2,1,4,0,0,7,40,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,255,"        if (c == 0.0 && d == 0.0) {
",4,3,0,1,3,0,0,0,0,7,27,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,256,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,259,"        if (divisor.isInfinite() && !isInfinite()) {
",0,1,0,3,7,0,6,0,0,8,44,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,260,"            return ZERO;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,263,"        if (FastMath.abs(c) < FastMath.abs(d)) {
",0,1,0,3,7,0,12,0,0,13,40,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,264,"            double q = c / d;
",6,1,0,0,0,0,0,0,0,7,17,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,265,"            double denominator = c * q + d;
",8,2,0,0,0,0,0,0,0,10,31,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,266,"            return createComplex((real * q + imaginary) / denominator,
",8,3,0,1,3,1,2,0,0,13,58,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,269,"            double q = d / c;
",6,1,0,0,0,0,0,0,0,7,17,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,270,"            double denominator = d * q + c;
",8,2,0,0,0,0,0,0,0,10,31,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,271,"            return createComplex((imaginary * q + real) / denominator,
",8,3,0,1,3,1,2,0,0,13,58,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,285,"        if (isNaN || Double.isNaN(divisor)) {
",2,1,0,2,5,0,6,0,0,9,37,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,286,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,288,"        if (divisor == 0d) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,289,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,291,"        if (Double.isInfinite(divisor)) {
",0,0,0,2,5,0,6,0,0,6,33,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,292,"            return !isInfinite() ? ZERO : NaN;
",4,0,0,1,2,1,2,0,0,7,34,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,294,"        return createComplex(real / divisor,
",4,1,0,0,1,1,2,0,0,7,36,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,301,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,305,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,1
defect4j,math,org/apache/commons/math3/complex/Complex,5,308,"        if (isInfinite) {
",2,0,0,1,3,0,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,309,"            return ZERO;
",2,0,0,0,0,1,0,0,0,2,12,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,312,"        if (FastMath.abs(real) < FastMath.abs(imaginary)) {
",0,1,0,3,7,0,12,0,0,13,51,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,313,"            double q = real / imaginary;
",6,1,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,314,"            double scale = 1. / (real * q + imaginary);
",8,3,0,1,2,0,0,0,0,11,43,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,315,"            return createComplex(scale * q, -scale);
",6,1,0,1,2,1,2,0,0,10,40,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,317,"            double q = imaginary / real;
",6,1,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,318,"            double scale = 1. / (imaginary * q + real);
",8,3,0,1,2,0,0,0,0,11,43,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,319,"            return createComplex(scale, -scale * q);
",4,1,0,1,2,1,4,0,0,10,40,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,341,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,346,"                return isNaN;
",2,0,0,0,0,1,0,0,0,2,13,8,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,351,"        return false;
",0,0,0,0,0,1,0,0,0,1,13,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,363,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,364,"            return 7;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,366,"        return 37 * (17 * MathUtils.hash(imaginary) +
",0,3,0,1,3,1,6,0,0,9,45,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,376,"        return imaginary;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,385,"        return real;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,396,"        return isNaN;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,409,"        return isInfinite;
",2,0,0,0,0,1,0,0,0,2,18,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,438,"        MathUtils.checkNotNull(factor);
",0,0,0,1,2,0,6,0,0,6,31,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,439,"        if (isNaN || factor.isNaN) {
",6,1,0,1,3,0,0,0,0,7,28,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,440,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,442,"        if (Double.isInfinite(real) ||
",0,1,0,1,3,0,6,0,0,7,30,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,447,"            return INF;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,449,"        return createComplex(real * factor.real - imaginary * factor.imaginary,
",12,3,0,0,1,1,2,0,0,17,71,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,462,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,463,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,465,"        if (Double.isInfinite(real) ||
",0,1,0,1,3,0,6,0,0,7,30,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,467,"            return INF;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,469,"        return createComplex(real * factor, imaginary * factor);
",8,2,0,1,2,1,2,0,0,12,56,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,481,"        if (isNaN || Double.isNaN(factor)) {
",2,1,0,2,5,0,6,0,0,9,36,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,482,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,484,"        if (Double.isInfinite(real) ||
",0,1,0,1,3,0,6,0,0,7,30,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,488,"            return INF;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,490,"        return createComplex(real * factor, imaginary * factor);
",8,2,0,1,2,1,2,0,0,12,56,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,501,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,502,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,505,"        return createComplex(-real, -imaginary);
",4,0,0,1,2,1,2,0,0,8,40,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,528,"        MathUtils.checkNotNull(subtrahend);
",0,0,0,1,2,0,6,0,0,6,35,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,529,"        if (isNaN || subtrahend.isNaN) {
",6,1,0,1,3,0,0,0,0,7,32,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,530,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,533,"        return createComplex(real - subtrahend.getReal(),
",2,1,0,1,3,1,6,0,0,9,49,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,546,"        if (isNaN || Double.isNaN(subtrahend)) {
",2,1,0,2,5,0,6,0,0,9,40,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,547,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,549,"        return createComplex(real - subtrahend, imaginary);
",4,1,0,1,2,1,4,0,0,9,51,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,569,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,570,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,573,"        return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());
",0,0,0,6,12,1,16,0,0,16,70,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,593,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,594,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,597,"        return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());
",0,0,0,6,12,1,16,0,0,16,65,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,617,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,618,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,621,"        return this.add(I).divide(I.subtract(this)).log()
",0,0,0,4,8,1,12,0,0,12,49,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,658,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,659,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,662,"        return createComplex(FastMath.cos(real) * FastMath.cosh(imaginary),
",0,1,0,2,5,1,14,0,0,15,67,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,698,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,699,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,702,"        return createComplex(FastMath.cosh(real) * FastMath.cos(imaginary),
",0,1,0,2,5,1,14,0,0,15,67,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,739,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,740,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,743,"        double expReal = FastMath.exp(real);
",2,0,0,1,2,0,6,0,0,8,36,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,744,"        return createComplex(expReal *  FastMath.cos(imaginary),
",2,1,0,1,3,1,8,0,0,11,56,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,784,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,785,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,788,"        return createComplex(FastMath.log(abs()),
",0,0,0,2,5,1,8,0,0,8,41,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,814,"        MathUtils.checkNotNull(x);
",0,0,0,1,2,0,6,0,0,6,26,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,815,"        return this.log().multiply(x).exp();
",0,0,0,3,6,1,8,0,0,8,36,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,826,"        return this.log().multiply(x).exp();
",0,0,0,3,6,1,8,0,0,8,36,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,862,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,863,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,866,"        return createComplex(FastMath.sin(real) * FastMath.cosh(imaginary),
",0,1,0,2,5,1,14,0,0,15,67,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,902,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,903,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,906,"        return createComplex(FastMath.sinh(real) * FastMath.cos(imaginary),
",0,1,0,2,5,1,14,0,0,15,67,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,945,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,946,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,949,"        if (real == 0.0 && imaginary == 0.0) {
",4,3,0,1,3,0,0,0,0,7,38,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,950,"            return createComplex(0.0, 0.0);
",0,0,0,1,2,1,2,0,0,2,31,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,953,"        double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
",2,2,0,4,8,0,12,0,0,16,61,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,954,"        if (real >= 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,955,"            return createComplex(t, imaginary / (2.0 * t));
",4,2,0,2,4,1,4,0,0,10,47,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,957,"            return createComplex(FastMath.abs(imaginary) / (2.0 * t),
",2,2,0,2,5,1,8,0,0,12,57,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,980,"        return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
",0,0,0,4,8,1,8,0,0,8,68,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1016,"        if (isNaN || Double.isInfinite(real)) {
",2,1,0,2,5,0,6,0,0,9,39,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1017,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1019,"        if (imaginary > 20.0) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1020,"            return createComplex(0.0, 1.0);
",0,0,0,1,2,1,2,0,0,2,31,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1022,"        if (imaginary < -20.0) {
",2,1,0,1,3,0,0,0,0,4,24,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1023,"            return createComplex(0.0, -1.0);
",0,0,0,1,2,1,2,0,0,3,32,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1026,"        double real2 = 2.0 * real;
",4,1,0,0,0,0,0,0,0,5,26,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1027,"        double imaginary2 = 2.0 * imaginary;
",4,1,0,0,0,0,0,0,0,5,36,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1028,"        double d = FastMath.cos(real2) + FastMath.cosh(imaginary2);
",2,1,0,2,4,0,12,0,0,15,59,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1030,"        return createComplex(FastMath.sin(real2) / d,
",2,1,0,1,3,1,8,0,0,11,45,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1067,"        if (isNaN || Double.isInfinite(imaginary)) {
",2,1,0,2,5,0,6,0,0,9,44,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1068,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1070,"        if (real > 20.0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1071,"            return createComplex(1.0, 0.0);
",0,0,0,1,2,1,2,0,0,2,31,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1073,"        if (real < -20.0) {
",2,1,0,1,3,0,0,0,0,4,19,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1074,"            return createComplex(-1.0, 0.0);
",0,0,0,1,2,1,2,0,0,3,32,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1076,"        double real2 = 2.0 * real;
",4,1,0,0,0,0,0,0,0,5,26,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1077,"        double imaginary2 = 2.0 * imaginary;
",4,1,0,0,0,0,0,0,0,5,36,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1078,"        double d = FastMath.cosh(real2) + FastMath.cos(imaginary2);
",2,1,0,2,4,0,12,0,0,15,59,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1080,"        return createComplex(FastMath.sinh(real2) / d,
",2,1,0,1,3,1,8,0,0,11,46,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1104,"        return FastMath.atan2(getImaginary(), getReal());
",0,0,0,3,6,1,8,0,0,8,49,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1131,"        if (n <= 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1132,"            throw new NotPositiveException(LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,
",4,0,0,0,1,0,0,2,0,6,87,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1136,"        final List<Complex> result = new ArrayList<Complex>();
",2,0,0,1,2,1,0,8,0,11,54,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1138,"        if (isNaN) {
",2,0,0,1,3,0,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1139,"            result.add(NaN);
",0,0,0,1,2,0,6,0,0,6,16,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1140,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1142,"        if (isInfinite()) {
",0,0,0,2,5,0,2,0,0,2,19,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1143,"            result.add(INF);
",0,0,0,1,2,0,6,0,0,6,16,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1144,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1148,"        final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);
",4,1,0,2,4,1,6,0,0,12,57,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1151,"        final double nthPhi = getArgument() / n;
",4,1,0,1,2,1,2,0,0,8,40,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1152,"        final double slice = 2 * FastMath.PI / n;
",8,2,0,0,0,1,0,0,0,11,41,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1153,"        double innerPart = nthPhi;
",4,0,0,0,0,0,0,0,0,4,26,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1154,"        for (int k = 0; k < n ; k++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1156,"            final double realPart = nthRootOfAbs *  FastMath.cos(innerPart);
",4,1,0,1,2,1,6,0,0,12,64,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1157,"            final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);
",4,1,0,1,2,1,6,0,0,12,69,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1158,"            result.add(createComplex(realPart, imaginaryPart));
",0,0,0,2,4,0,10,0,0,10,51,7,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1159,"            innerPart += slice;
",4,0,0,0,0,0,0,0,0,5,19,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1162,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1176,"        return new Complex(realPart, imaginaryPart);
",4,0,0,1,2,1,0,2,0,6,44,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1188,"        if (Double.isNaN(realPart) ||
",0,1,0,1,3,0,6,0,0,7,29,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1190,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1192,"        return new Complex(realPart, imaginaryPart);
",4,0,0,1,2,1,0,2,0,6,44,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1202,"        if (Double.isNaN(realPart)) {
",0,0,0,2,5,0,6,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1203,"            return NaN;
",2,0,0,0,0,1,0,0,0,2,11,6,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1205,"        return new Complex(realPart);
",2,0,0,1,2,1,0,2,0,4,29,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1217,"        return createComplex(real, imaginary);
",0,0,0,1,2,1,6,0,0,6,38,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1222,"        return ComplexField.getInstance();
",0,0,0,1,2,1,4,0,0,4,34,5,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,1228,"        return ""("" + real + "", "" + imaginary + "")"";
",4,1,0,1,2,1,0,0,0,8,43,4,0.00000,0
defect4j,math,org/apache/commons/math3/complex/Complex,5,57,"public class Complex implements FieldElement<Complex>, Serializable  {
",2,0,0,0,1,1,0,6,0,9,70,1,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NotPositiveException,5,37,"        super(value, 0, true);
",2,0,0,1,2,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NotPositiveException,5,38,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NotPositiveException,5,47,"        super(specific, value, 0, true);
",4,0,0,1,2,0,0,0,0,5,32,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NotPositiveException,5,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,50,"        this(boundIsAllowed ?
",2,0,0,0,1,0,0,0,0,2,21,5,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,54,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,68,"        super(specific, wrong, min);
",6,0,0,1,2,0,0,0,0,6,28,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,70,"        this.min = min;
",4,0,0,0,0,0,0,0,0,5,15,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,71,"        this.boundIsAllowed = boundIsAllowed;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,72,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,78,"        return boundIsAllowed;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NumberIsTooSmallException,5,85,"        return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalNumberException,5,46,"        super(pattern, wrong, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalNumberException,5,47,"        argument = wrong;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalNumberException,5,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalNumberException,5,54,"        return argument;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,44,"                                        Object ... args) {
",2,0,0,0,2,0,0,2,0,4,18,3,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,45,"        context = new ExceptionContext(this);
",2,0,0,1,2,0,0,2,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,46,"        context.addMessage(pattern, args);
",0,0,0,1,2,0,8,0,0,8,34,5,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,47,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,51,"        return context;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,57,"        return context.getMessage();
",0,0,0,1,2,1,4,0,0,4,28,5,0.00000,0
defect4j,math,org/apache/commons/math3/exception/MathIllegalArgumentException,5,63,"        return context.getLocalizedMessage();
",0,0,0,1,2,1,4,0,0,4,37,5,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NullArgumentException,5,41,"        this(LocalizedFormats.NULL_NOT_ALLOWED);
",4,0,0,1,2,0,0,0,0,4,40,5,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NullArgumentException,5,42,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NullArgumentException,5,50,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math3/exception/NullArgumentException,5,51,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
