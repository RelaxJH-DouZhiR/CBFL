dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,math,org/apache/commons/math/MathException,85,106,"      super(buildMessage(Locale.US, pattern, arguments));
",4,0,0,2,4,0,6,0,0,10,51,5,1.00000,0
defect4j,math,org/apache/commons/math/MathException,85,107,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,1.00000,0
defect4j,math,org/apache/commons/math/MathException,85,108,"      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
",4,1,0,3,6,0,4,2,0,12,73,4,1.00000,0
defect4j,math,org/apache/commons/math/MathException,85,109,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/MathException,85,60,"            ResourceBundle bundle =
",2,0,0,0,0,0,0,2,0,4,23,6,1.00000,0
defect4j,math,org/apache/commons/math/MathException,85,67,"        } catch (MissingResourceException mre) {
",2,0,0,1,4,0,0,2,0,4,40,6,1.00000,0
defect4j,math,org/apache/commons/math/MathException,85,73,"        return s;
",2,0,0,0,0,1,0,0,0,2,9,4,1.00000,0
defect4j,math,org/apache/commons/math/MathException,85,85,"        return (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        
",4,1,0,4,8,1,10,2,0,20,104,5,1.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,43,"        super(""Maximal number of iterations ({0}) exceeded"", maxIterations);
",2,0,0,3,6,0,0,0,0,3,68,4,1.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,44,"        this.maxIterations = maxIterations;
",4,0,0,0,0,0,0,0,0,5,35,4,1.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,45,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,1.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,46,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,128,"        } catch (MaxIterationsExceededException ex) {
",2,0,0,1,4,0,0,2,0,4,45,6,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,129,"            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
",6,3,0,2,5,0,0,0,0,9,65,7,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,131,"            } else if (x > (mean + 20 * standardDeviation)) {
",6,3,0,2,6,0,0,0,0,9,49,8,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,132,"                return 1.0d;
",0,0,0,0,0,1,0,0,0,0,12,3,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,178,"        if (p < .5) {
",2,1,0,1,3,0,0,0,0,3,13,4,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,181,"            ret = getMean();
",2,0,0,1,2,0,2,0,0,5,16,6,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,184,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,200,"        if (p < .5) {
",2,1,0,1,3,0,0,0,0,3,13,4,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,203,"            ret = Double.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,7,23,6,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,206,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,221,"        if (p < .5) {
",2,1,0,1,3,0,0,0,0,3,13,4,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,223,"        } else if (p > .5) {
",2,1,0,1,4,0,0,0,0,3,20,5,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,224,"            ret = getMean() + getStandardDeviation();
",2,1,0,2,4,0,4,0,0,8,41,7,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,229,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,1.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,181,"                throw new MaxIterationsExceededException(maxIterations);
",2,0,0,1,2,0,0,2,0,4,56,11,1.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,162,"        return super.inverseCumulativeProbability(p);
",4,0,0,1,2,1,0,0,0,4,45,5,0.50000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,156,"        if (p == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.33333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,159,"        if (p == 1) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.33333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,72,"        return mean;
",2,0,0,0,0,1,0,0,0,2,12,4,0.16667,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,88,"        return standardDeviation;
",2,0,0,0,0,1,0,0,0,2,25,4,0.16667,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,126,"            return 0.5 * (1.0 + Erf.erf((x - mean) /
",4,4,0,1,4,1,4,0,0,12,40,6,0.14286,0
defect4j,math,org/apache/commons/math/special/Erf,85,51,"        double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
",6,1,0,1,2,0,4,0,0,11,65,5,0.14286,0
defect4j,math,org/apache/commons/math/special/Erf,85,52,"        if (x < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.14286,0
defect4j,math,org/apache/commons/math/special/Erf,85,55,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.14286,0
defect4j,math,org/apache/commons/math/special/Gamma,85,162,"            ret = 0.0;
",2,0,0,0,0,0,0,0,0,3,10,7,0.14286,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,54,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,43,"    private double mean = 0;
",2,0,0,0,0,1,0,0,0,3,24,2,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,46,"    private double standardDeviation = 1;
",2,0,0,0,0,1,0,0,0,3,37,2,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,55,"        setMean(mean);
",0,0,0,1,2,0,4,0,0,4,14,5,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,56,"        setStandardDeviation(sd);
",0,0,0,1,2,0,4,0,0,4,25,5,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,57,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,40,"    private static final double SQRT2PI = Math.sqrt(2 * Math.PI);
",6,1,0,1,2,3,4,0,0,14,61,2,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,80,"        this.mean = mean;
",4,0,0,0,0,0,0,0,0,5,17,4,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,81,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,97,"        if (sd <= 0.0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,102,"        standardDeviation = sd;
",4,0,0,0,0,0,0,0,0,5,23,4,0.08333,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,103,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.08333,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,69,"        UnivariateRealFunction rootFindingFunction =
",2,0,0,0,0,0,0,2,0,4,44,4,0.06667,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,81,"        double lowerBound = getDomainLowerBound(p);
",2,0,0,1,2,0,4,0,0,6,43,5,0.06667,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,82,"        double upperBound = getDomainUpperBound(p);
",2,0,0,1,2,0,4,0,0,6,43,5,0.06667,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,83,"        double[] bracket = null;
",2,0,0,1,2,0,0,0,0,2,24,5,0.06667,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,85,"            bracket = UnivariateRealSolverUtils.bracket(
",2,0,0,0,1,0,4,0,0,7,44,6,0.06667,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,70,"            new UnivariateRealFunction() {
",0,0,0,1,3,0,0,2,0,2,30,7,0.06667,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,73,"                    return cumulativeProbability(x) - p;
",2,1,0,1,2,1,4,0,0,7,36,12,0.06667,0
defect4j,math,org/apache/commons/math/special/Gamma,85,159,"        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
",4,3,0,5,11,0,12,0,0,19,68,4,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,161,"        } else if (x == 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,5,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,163,"        } else if (a >= 1.0 && x > a) {
",6,3,0,1,4,0,0,0,0,9,31,6,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,169,"            double n = 0.0; // current element index
",2,0,0,0,0,0,0,0,0,2,40,9,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,170,"            double an = 1.0 / a; // n-th element in the series
",4,1,0,0,0,0,0,0,0,5,50,9,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,171,"            double sum = an; // partial sum
",4,0,0,0,0,0,0,0,0,4,31,9,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,172,"            while (Math.abs(an) > epsilon && n < maxIterations) {
",6,3,0,2,5,0,6,0,0,15,53,8,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,174,"                n = n + 1.0;
",4,1,0,0,0,0,0,0,0,6,12,10,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,175,"                an = an * (x / (a + n));
",10,3,0,2,4,0,0,0,0,14,24,10,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,178,"                sum = sum + an;
",6,1,0,0,0,0,0,0,0,8,15,10,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,180,"            if (n >= maxIterations) {
",4,1,0,1,3,0,0,0,0,5,25,8,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,183,"                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
",8,4,0,4,8,0,14,0,0,28,59,10,0.06250,0
defect4j,math,org/apache/commons/math/special/Gamma,85,187,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,182,"        double a = initial;
",4,0,0,0,0,0,0,0,0,4,19,5,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,183,"        double b = initial;
",4,0,0,0,0,0,0,0,0,4,19,5,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,186,"        int numIterations = 0 ;
",2,0,0,0,0,0,0,0,0,2,23,5,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,189,"            a = Math.max(a - 1.0, lowerBound);
",4,1,0,1,2,0,6,0,0,12,34,6,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,190,"            b = Math.min(b + 1.0, upperBound);
",4,1,0,1,2,0,6,0,0,12,34,6,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,191,"            fa = function.value(a);
",2,0,0,1,2,0,6,0,0,9,23,6,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,193,"            fb = function.value(b);
",2,0,0,1,2,0,6,0,0,9,23,6,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,194,"            numIterations++ ;
",2,0,0,0,0,0,0,0,0,3,17,6,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,195,"        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
",8,4,0,2,6,0,0,0,0,12,66,4,0.06250,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,198,"        if (fa * fb >= 0.0 ) {
",4,2,0,1,3,0,0,0,0,6,22,4,0.06250,1
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,127,"        return bracket( function, initial, lowerBound, upperBound,
",0,0,0,0,1,1,10,0,0,10,58,5,0.05882,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,170,"        if (function == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.05882,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,173,"        if (maximumIterations <= 0)  {
",2,1,0,1,3,0,0,0,0,3,30,4,0.05882,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,177,"        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
",12,5,0,1,3,0,0,0,0,17,79,4,0.05882,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,62,"        if (p < 0.0 || p > 1.0) {
",4,3,0,1,3,0,0,0,0,7,25,4,0.05000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,41,"    private static final double[] lanczos =
",2,0,0,1,2,3,0,0,0,5,39,2,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,61,"    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);
",6,2,0,1,2,3,4,0,0,15,74,2,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,91,"        if (Double.isNaN(x) || (x <= 0.0)) {
",2,2,0,3,7,0,6,0,0,10,36,4,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,94,"            double g = 607.0 / 128.0;
",2,1,0,0,0,0,0,0,0,3,25,7,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,96,"            double sum = 0.0;
",2,0,0,0,0,0,0,0,0,2,17,7,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,97,"            for (int i = lanczos.length - 1; i > 0; --i) {
",10,2,0,1,3,0,0,0,0,13,46,6,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,98,"                sum = sum + (lanczos[i] / (x + i));
",8,3,1,3,6,0,0,0,0,16,35,8,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,100,"            sum = sum + lanczos[0];
",4,1,1,1,2,0,0,0,0,8,23,6,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,102,"            double tmp = x + g + .5;
",6,1,0,0,0,0,0,0,0,7,24,7,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,103,"            ret = ((x + .5) * Math.log(tmp)) - tmp +
",6,5,0,3,6,0,6,0,0,18,40,6,0.02703,0
defect4j,math,org/apache/commons/math/special/Gamma,85,107,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.02703,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,46,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.01587,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,47,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01587,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,39,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.01587,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,40,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01587,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,44,"        super(""evaluation failed for argument = {0}"", argument);
",2,0,0,2,4,0,0,0,0,3,56,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,45,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,46,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,56,"        super(""evaluation failed for argument = {0}"", new ArrayRealVector(argument));
",2,0,0,3,6,0,0,2,0,5,77,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,57,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,70,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,71,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,72,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,84,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,85,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,86,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,96,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,97,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,108,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,109,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,110,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,124,"        super(cause, pattern, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,125,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,126,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,140,"        super(cause, pattern, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,141,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,142,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,85,150,"        return argument.clone();
",0,0,0,1,2,1,4,0,0,4,24,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,93,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,94,"        this.pattern   = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,95,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,96,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,119,"        super(rootCause);
",2,0,0,1,2,0,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,120,"        this.pattern   = getMessage();
",2,0,0,1,2,0,2,0,0,5,30,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,121,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,122,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,135,"      super(buildMessage(Locale.US, pattern, arguments), rootCause);
",6,0,0,2,4,0,6,0,0,12,62,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,136,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,137,"      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
",4,1,0,3,6,0,4,2,0,12,73,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,138,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,62,"            if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
",0,0,0,5,11,0,12,0,0,12,68,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,64,"                return bundle.getString(s);
",0,0,0,1,2,1,6,0,0,6,27,9,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,69,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,146,"        return pattern;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,155,"        return arguments.clone();
",0,0,0,1,2,1,4,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,166,"        return buildMessage(locale, pattern, arguments);
",0,0,0,1,2,1,8,0,0,8,48,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,172,"        return getMessage(Locale.getDefault());
",0,0,0,2,4,1,6,0,0,6,39,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,180,"        printStackTrace(System.err);
",4,0,0,1,2,0,2,0,0,6,28,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,181,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,190,"        synchronized (out) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,191,"            PrintWriter pw = new PrintWriter(out, false);
",4,0,0,1,2,0,0,4,0,9,45,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,192,"            printStackTrace(pw);
",0,0,0,1,2,0,4,0,0,4,20,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,194,"            pw.flush();
",0,0,0,1,2,0,4,0,0,4,11,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,195,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,85,196,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,56,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,57,"        this.maxIterations = maxIterations;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,85,64,"        return maxIterations;
",2,0,0,0,0,1,0,0,0,2,21,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,34,"        super(""Convergence failed"");
",0,0,0,1,2,0,0,0,0,1,28,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,35,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,53,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,54,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,65,"        super(cause, pattern, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,85,66,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,64,"        this(0.0, 1.0);
",0,0,0,1,2,0,0,0,0,0,15,3,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,98,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,112,"        double x0 = x - getMean();
",4,1,0,1,2,0,2,0,0,7,26,5,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,113,"        return Math.exp(-x0 * x0 / (2 * getStandardDeviation() * getStandardDeviation())) / (getStandardDeviation() * SQRT2PI);
",6,5,0,6,12,1,10,0,0,22,119,4,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,130,"                return 0.0d;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,134,"                throw ex;
",2,0,0,0,0,0,0,0,0,2,9,10,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,157,"            return Double.NEGATIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,160,"            return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,179,"            ret = -Double.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,8,24,6,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,201,"            ret = getMean();
",2,0,0,1,2,0,2,0,0,5,16,6,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,222,"            ret = getMean() - getStandardDeviation();
",2,1,0,2,4,0,4,0,0,8,41,6,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,226,"            ret = getMean();
",2,0,0,1,2,0,2,0,0,5,16,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/NormalDistributionImpl,85,33,"public class NormalDistributionImpl extends AbstractContinuousDistribution 
",2,0,0,0,0,1,0,2,0,5,74,1,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,63,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,105,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,88,"        }  catch (ConvergenceException ex) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,97,"            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
",0,1,0,3,7,0,10,0,0,11,61,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,98,"                return lowerBound;
",2,0,0,0,0,1,0,0,0,2,18,9,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,100,"            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
",0,1,0,3,7,0,10,0,0,11,61,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,101,"                return upperBound;
",2,0,0,0,0,1,0,0,0,2,18,9,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,104,"            throw new MathException(ex);
",2,0,0,1,2,0,0,2,0,4,28,8,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,108,"        double root = UnivariateRealSolverUtils.solve(rootFindingFunction,
",2,0,0,0,1,0,6,0,0,8,66,5,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,110,"        return root;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,61,"        if (x0 > x1) {
",4,1,0,1,3,0,0,0,0,5,14,4,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,62,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,85,66,"        return cumulativeProbability(x1) - cumulativeProbability(x0);
",0,1,0,2,4,1,8,0,0,9,61,4,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,74,"                } catch (MathException ex) {
",2,0,0,1,4,0,0,2,0,4,28,12,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,85,75,"                    throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
",4,0,0,3,6,0,8,2,0,14,81,14,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,46,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,47,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,74,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,55,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,85,"        return evaluate(x, epsilon, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,47,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,96,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);
",0,0,0,1,2,1,8,0,0,8,51,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,128,"        double p0 = 1.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,129,"        double p1 = getA(0, x);
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,130,"        double q0 = 0.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,131,"        double q1 = 1.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,132,"        double c = p1 / q1;
",6,1,0,0,0,0,0,0,0,7,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,133,"        int n = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,134,"        double relativeError = Double.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,40,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,135,"        while (n < maxIterations && relativeError > epsilon) {
",8,3,0,1,3,0,0,0,0,11,54,4,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,136,"            ++n;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,137,"            double a = getA(n, x);
",2,0,0,1,2,0,6,0,0,8,22,7,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,138,"            double b = getB(n, x);
",2,0,0,1,2,0,6,0,0,8,22,7,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,139,"            double p2 = a * p1 + b * p0;
",10,3,0,0,0,0,0,0,0,13,28,7,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,140,"            double q2 = a * q1 + b * q0;
",10,3,0,0,0,0,0,0,0,13,28,7,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,141,"            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {
",0,1,0,3,7,0,12,0,0,13,53,6,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,143,"                if (a != 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,8,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,144,"                    p2 = p1 + (b / a * p0);
",10,3,0,1,2,0,0,0,0,14,23,10,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,145,"                    q2 = q1 + (b / a * q0);
",10,3,0,1,2,0,0,0,0,14,23,10,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,146,"                } else if (b != 0) {
",2,1,0,1,4,0,0,0,0,3,20,9,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,147,"                    p2 = (a / b * p1) + p0;
",10,3,0,1,2,0,0,0,0,14,23,11,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,148,"                    q2 = (a / b * q1) + q0;
",10,3,0,1,2,0,0,0,0,14,23,11,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,151,"                    throw new ConvergenceException(
",0,0,0,0,1,0,0,2,0,2,31,13,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,156,"            double r = p2 / q2;
",6,1,0,0,0,0,0,0,0,7,19,7,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,157,"            relativeError = Math.abs(r / c - 1.0);
",6,2,0,1,2,0,4,0,0,13,38,6,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,160,"            c = p2 / q2;
",6,1,0,0,0,0,0,0,0,8,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,161,"            p0 = p1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,162,"            p1 = p2;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,163,"            q0 = q1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,164,"            q1 = q2;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,165,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,167,"        if (n >= maxIterations) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,168,"            throw new MaxIterationsExceededException(maxIterations,
",2,0,0,0,1,0,0,2,0,4,55,7,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,85,173,"        return c;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Erf,85,33,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Erf,85,34,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Erf,85,53,"            ret = -ret;
",4,0,0,0,0,0,0,0,0,6,11,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,244,"            ContinuedFraction cf = new ContinuedFraction() {
",2,0,0,1,3,0,0,4,0,6,48,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,248,"                    return ((2.0 * n) + 1.0) - a + x;
",6,4,0,2,4,1,0,0,0,10,33,14,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,253,"                    return n * (a - n);
",6,2,0,1,2,1,0,0,0,8,19,14,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,68,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,69,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,92,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,121,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,8,0,0,12,67,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,160,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,166,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,60,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,201,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,8,0,0,12,67,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,234,"        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
",4,3,0,5,11,0,12,0,0,19,68,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,235,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,236,"        } else if (x == 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,237,"            ret = 1.0;
",2,0,0,0,0,0,0,0,0,3,10,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,238,"        } else if (x < a || a < 1.0) {
",6,3,0,1,4,0,0,0,0,9,30,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,241,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,60,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,244,"            ContinuedFraction cf = new ContinuedFraction() {
",2,0,0,1,3,0,0,4,0,6,48,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,257,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,51,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,258,"            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;
",8,4,0,4,8,0,14,0,0,28,59,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,261,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,292,"        if (x > 0 && x <= S_LIMIT) {
",6,3,0,1,3,0,0,0,0,9,28,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,295,"            return -GAMMA - 1 / x;
",4,2,0,0,0,1,0,0,0,7,22,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,298,"        if (x >= C_LIMIT) {
",4,1,0,1,3,0,0,0,0,5,19,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,300,"            double inv = 1 / (x * x);
",6,2,0,1,2,0,0,0,0,8,25,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,304,"            return Math.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));
",8,10,0,4,8,1,6,0,0,24,82,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,307,"        return digamma(x + 1) - 1 / x;
",4,3,0,1,2,1,2,0,0,9,30,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,321,"        if (x > 0 && x <= S_LIMIT) {
",6,3,0,1,3,0,0,0,0,9,28,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,322,"            return 1 / (x * x);
",4,2,0,1,2,1,0,0,0,6,19,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,325,"        if (x >= C_LIMIT) {
",4,1,0,1,3,0,0,0,0,5,19,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,326,"            double inv = 1 / (x * x);
",6,2,0,1,2,0,0,0,0,8,25,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,331,"            return 1 / x + inv / 2 + inv / x * (1.0 / 6 - inv * (1.0 / 30 + inv / 42));
",12,12,0,2,4,1,0,0,0,24,75,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,85,334,"        return trigamma(x + 1) + 1 / (x * x);
",6,4,0,2,4,1,2,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,32,"    public UnivariateRealSolverFactoryImpl() {
",2,0,0,1,3,1,0,0,0,3,42,2,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,33,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,38,"        return newBrentSolver();
",0,0,0,1,2,1,2,0,0,2,24,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,44,"        return new BisectionSolver();
",0,0,0,1,2,1,0,2,0,2,29,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,50,"        return new BrentSolver();
",0,0,0,1,2,1,0,2,0,2,25,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,56,"        return new NewtonSolver();
",0,0,0,1,2,1,0,2,0,2,26,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactoryImpl,85,62,"        return new SecantSolver();
",0,0,0,1,2,1,0,2,0,2,26,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,44,"    protected UnivariateRealSolverFactory() {
",2,0,0,1,3,1,0,0,0,3,41,2,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverFactory,85,52,"        return new UnivariateRealSolverFactoryImpl();
",0,0,0,1,2,1,0,2,0,2,45,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,49,"        super(f, 100, 1E-6);
",2,0,0,1,2,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,50,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,56,"        super(100, 1E-6);
",0,0,0,1,2,0,0,0,0,0,17,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,57,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,63,"        return solve(f, min, max);
",0,0,0,1,2,1,8,0,0,8,26,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,70,"        return solve(f, min, max, initial);
",0,0,0,1,2,1,10,0,0,10,35,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,97,"        clearResult();
",0,0,0,1,2,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,98,"        verifySequence(min, initial, max);
",0,0,0,1,2,0,8,0,0,8,34,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,101,"        double yInitial = f.value(initial);
",2,0,0,1,2,0,6,0,0,8,35,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,102,"        if (Math.abs(yInitial) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,50,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,103,"            setResult(initial, 0);
",0,0,0,1,2,0,4,0,0,4,22,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,104,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,108,"        double yMin = f.value(min);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,109,"        if (Math.abs(yMin) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,110,"            setResult(yMin, 0);
",0,0,0,1,2,0,4,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,111,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,115,"        if (yInitial * yMin < 0) {
",4,2,0,1,3,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,116,"            return solve(f, min, yMin, initial, yInitial, min, yMin);
",0,0,0,1,2,1,16,0,0,16,57,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,120,"        double yMax = f.value(max);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,121,"        if (Math.abs(yMax) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,122,"            setResult(yMax, 0);
",0,0,0,1,2,0,4,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,123,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,127,"        if (yInitial * yMax < 0) {
",4,2,0,1,3,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,128,"            return solve(f, initial, yInitial, max, yMax, initial, yInitial);
",0,0,0,1,2,1,16,0,0,16,65,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,132,"        return solve(f, min, yMin, max, yMax, initial, yInitial);
",0,0,0,1,2,1,16,0,0,16,57,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,158,"        clearResult();
",0,0,0,1,2,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,159,"        verifyInterval(min, max);
",0,0,0,1,2,0,6,0,0,6,25,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,161,"        double ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,24,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,163,"        double yMin = f.value(min);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,164,"        double yMax = f.value(max);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,167,"        double sign = yMin * yMax;
",6,1,0,0,0,0,0,0,0,7,26,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,168,"        if (sign > 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,170,"            if (Math.abs(yMin) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,171,"                setResult(min, 0);
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,172,"                ret = min;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,173,"            } else if (Math.abs(yMax) <= functionValueAccuracy) {
",2,1,0,2,6,0,6,0,0,9,53,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,174,"                setResult(max, 0);
",0,0,0,1,2,0,4,0,0,4,18,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,175,"                ret = max;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,178,"                throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,183,"        } else if (sign < 0){
",2,1,0,1,4,0,0,0,0,3,21,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,185,"            ret = solve(f, min, yMin, max, yMax, min, yMin);
",2,0,0,1,2,0,16,0,0,19,48,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,188,"            if (yMin == 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,189,"                ret = min;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,191,"                ret = max;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,195,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,221,"        double delta = x1 - x0;
",6,1,0,0,0,0,0,0,0,7,23,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,222,"        double oldDelta = delta;
",4,0,0,0,0,0,0,0,0,4,24,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,224,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,225,"        while (i < maximalIterationCount) {
",4,1,0,1,3,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,226,"            if (Math.abs(y2) < Math.abs(y1)) {
",0,1,0,3,7,0,12,0,0,13,34,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,228,"                x0 = x1;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,229,"                x1 = x2;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,230,"                x2 = x0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,231,"                y0 = y1;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,232,"                y1 = y2;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,233,"                y2 = y0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,235,"            if (Math.abs(y1) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,44,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,239,"                setResult(x1, i);
",0,0,0,1,2,0,6,0,0,6,17,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,240,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,242,"            double dx = (x2 - x1);
",6,1,0,1,2,0,0,0,0,7,22,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,243,"            double tolerance =
",2,0,0,0,0,0,0,0,0,2,18,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,245,"            if (Math.abs(dx) <= tolerance) {
",2,1,0,2,5,0,6,0,0,9,32,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,246,"                setResult(x1, i);
",0,0,0,1,2,0,6,0,0,6,17,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,247,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,249,"            if ((Math.abs(oldDelta) < tolerance) ||
",2,2,0,2,5,0,6,0,0,10,39,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,252,"                delta = 0.5 * dx;
",4,1,0,0,0,0,0,0,0,6,17,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,253,"                oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,255,"                double r3 = y1 / y0;
",6,1,0,0,0,0,0,0,0,7,20,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,261,"                if (x0 == x2) {
",4,1,0,1,3,0,0,0,0,5,15,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,263,"                    p = dx * r3;
",6,1,0,0,0,0,0,0,0,8,12,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,264,"                    p1 = 1.0 - r3;
",4,1,0,0,0,0,0,0,0,6,14,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,267,"                    double r1 = y0 / y2;
",6,1,0,0,0,0,0,0,0,7,20,11,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,268,"                    double r2 = y1 / y2;
",6,1,0,0,0,0,0,0,0,7,20,11,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,269,"                    p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
",18,7,0,4,8,0,0,0,0,26,56,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,270,"                    p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
",8,4,0,3,6,0,0,0,0,13,42,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,272,"                if (p > 0.0) {
",2,1,0,1,3,0,0,0,0,3,14,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,273,"                    p1 = -p1;
",4,0,0,0,0,0,0,0,0,6,9,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,275,"                    p = -p;
",4,0,0,0,0,0,0,0,0,6,7,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,277,"                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
",10,6,0,1,3,0,4,0,0,20,58,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,282,"                    delta = 0.5 * dx;
",4,1,0,0,0,0,0,0,0,6,17,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,283,"                    oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,285,"                    oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,286,"                    delta = p / p1;
",6,1,0,0,0,0,0,0,0,8,15,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,290,"            x0 = x1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,291,"            y0 = y1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,293,"            if (Math.abs(delta) > tolerance) {
",2,1,0,2,5,0,6,0,0,9,34,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,294,"                x1 = x1 + delta;
",6,1,0,0,0,0,0,0,0,8,16,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,295,"            } else if (dx > 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,296,"                x1 = x1 + 0.5 * tolerance;
",6,2,0,0,0,0,0,0,0,9,26,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,297,"            } else if (dx <= 0.0) {
",2,1,0,1,4,0,0,0,0,3,23,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,298,"                x1 = x1 - 0.5 * tolerance;
",6,2,0,0,0,0,0,0,0,9,26,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,300,"            y1 = f.value(x1);
",2,0,0,1,2,0,6,0,0,9,17,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,301,"            if ((y1 > 0) == (y2 > 0)) {
",4,3,0,3,7,0,0,0,0,7,27,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,302,"                x2 = x0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,303,"                y2 = y0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,304,"                delta = x1 - x0;
",6,1,0,0,0,0,0,0,0,8,16,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,305,"                oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,307,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,308,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,85,309,"        throw new MaxIterationsExceededException(maximalIterationCount);
",2,0,0,1,2,0,0,2,0,4,64,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,74,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
",4,0,0,1,2,0,0,0,0,4,61,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,41,"    protected boolean resultComputed = false;
",2,0,0,0,0,1,0,0,0,4,41,2,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,75,"        if (f == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,76,"            throw MathRuntimeException.createIllegalArgumentException(""function to solve cannot be null"");
",0,0,0,1,2,0,4,0,0,5,94,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,78,"        this.f = f;
",4,0,0,0,0,0,0,0,0,5,11,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,79,"        this.defaultFunctionValueAccuracy = 1.0e-15;
",2,0,0,0,0,0,0,0,0,3,44,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,80,"        this.functionValueAccuracy = defaultFunctionValueAccuracy;
",4,0,0,0,0,0,0,0,0,5,58,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,81,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,93,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
",4,0,0,1,2,0,0,0,0,4,61,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,94,"        this.defaultFunctionValueAccuracy = 1.0e-15;
",2,0,0,0,0,0,0,0,0,3,44,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,95,"        this.functionValueAccuracy = defaultFunctionValueAccuracy;
",4,0,0,0,0,0,0,0,0,5,58,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,96,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,102,"        if (!resultComputed) {
",2,0,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,103,"            throw MathRuntimeException.createIllegalStateException(""no result available"");
",0,0,0,1,2,0,4,0,0,5,78,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,105,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,109,"        checkResultComputed();
",0,0,0,1,2,0,2,0,0,2,22,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,110,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,115,"        checkResultComputed();
",0,0,0,1,2,0,2,0,0,2,22,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,116,"        return functionValue;
",2,0,0,0,0,1,0,0,0,2,21,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,121,"        functionValueAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,33,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,122,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,126,"        return functionValueAccuracy;
",2,0,0,0,0,1,0,0,0,2,29,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,131,"        functionValueAccuracy = defaultFunctionValueAccuracy;
",4,0,0,0,0,0,0,0,0,5,53,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,132,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,141,"        this.result         = result;
",4,0,0,0,0,0,0,0,0,5,29,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,142,"        this.iterationCount = iterationCount;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,143,"        this.resultComputed = true;
",2,0,0,0,0,0,0,0,0,4,27,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,144,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,155,"        this.result         = x;
",4,0,0,0,0,0,0,0,0,5,24,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,156,"        this.functionValue  = fx;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,157,"        this.iterationCount = iterationCount;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,158,"        this.resultComputed = true;
",2,0,0,0,0,0,0,0,0,4,27,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,159,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,165,"        this.iterationCount = 0;
",2,0,0,0,0,0,0,0,0,3,24,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,166,"        this.resultComputed = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,167,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,182,"        final double f1 = f.value(lower);
",2,0,0,1,2,1,6,0,0,9,33,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,183,"        final double f2 = f.value(upper);
",2,0,0,1,2,1,6,0,0,9,33,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,184,"        return ((f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0));
",8,7,0,3,6,1,0,0,0,15,50,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,196,"        return (start < mid) && (mid < end);
",8,3,0,2,4,1,0,0,0,11,36,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,208,"        if (lower >= upper) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,209,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,213,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,225,"        if (!isSequence(lower, initial, upper)) {
",0,0,0,2,5,0,8,0,0,9,41,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,226,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,230,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,247,"        verifyInterval(lower, upper);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,248,"        if (!isBracketing(lower, upper, f)) {
",0,0,0,2,5,0,8,0,0,9,37,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,249,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,85,254,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,61,"                                      final double defaultAbsoluteAccuracy) {
",2,0,0,0,2,1,0,0,0,3,39,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,62,"        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,55,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,63,"        this.defaultRelativeAccuracy = 1.0e-14;
",2,0,0,0,0,0,0,0,0,3,39,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,64,"        this.absoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,48,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,65,"        this.relativeAccuracy = defaultRelativeAccuracy;
",4,0,0,0,0,0,0,0,0,5,48,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,66,"        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,65,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,67,"        this.maximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,58,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,68,"        this.iterationCount = 0;
",2,0,0,0,0,0,0,0,0,3,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,69,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,73,"        return iterationCount;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,78,"        absoluteAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,28,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,79,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,83,"        return absoluteAccuracy;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,88,"        absoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,43,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,89,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,93,"        maximalIterationCount = count;
",4,0,0,0,0,0,0,0,0,5,30,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,94,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,98,"        return maximalIterationCount;
",2,0,0,0,0,1,0,0,0,2,29,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,103,"        maximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,53,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,104,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,108,"        relativeAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,28,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,109,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,113,"        return relativeAccuracy;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,118,"        relativeAccuracy = defaultRelativeAccuracy;
",4,0,0,0,0,0,0,0,0,5,43,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,85,119,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,235,"    private static class LazyHolder {
",2,0,0,0,1,2,0,0,0,4,33,2,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,237,"        private static final UnivariateRealSolverFactory FACTORY =
",2,0,0,0,0,3,0,2,0,7,58,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,34,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,35,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,53,"        setup(f);
",0,0,0,1,2,0,4,0,0,4,9,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,54,"        return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
",4,0,0,2,4,1,10,0,0,14,62,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,77,"        setup(f);
",0,0,0,1,2,0,4,0,0,4,9,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,78,"        UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
",6,0,0,1,2,0,2,2,0,10,68,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,79,"        solver.setAbsoluteAccuracy(absoluteAccuracy);
",0,0,0,1,2,0,6,0,0,6,45,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,80,"        return solver.solve(f, x0, x1);
",0,0,0,1,2,1,10,0,0,10,31,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,171,"            throw MathRuntimeException.createIllegalArgumentException(""function is null"");
",0,0,0,1,2,0,4,0,0,5,78,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,174,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,178,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,199,"            throw new ConvergenceException(
",0,0,0,0,1,0,0,2,0,2,31,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,207,"        return new double[]{a, b};
",4,0,0,2,4,1,0,0,0,4,26,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,218,"        return (a + b) * .5;
",4,2,0,1,2,1,0,0,0,6,20,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,227,"        if (f == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,228,"            throw MathRuntimeException.createIllegalArgumentException(""function is null"");
",0,0,0,1,2,0,4,0,0,5,78,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils,85,230,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
