dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,math,org/apache/commons/math/util/FastMath,62,35,"    private static final double EXP_INT_TABLE_A[] = new double[1500];
",2,0,0,2,4,3,0,0,0,5,65,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,40,"    private static final double EXP_INT_TABLE_B[] = new double[1500];
",2,0,0,2,4,3,0,0,0,5,65,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,45,"    private static final double EXP_FRAC_TABLE_A[] = new double[1025];
",2,0,0,2,4,3,0,0,0,5,66,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,50,"    private static final double EXP_FRAC_TABLE_B[] = new double[1025];
",2,0,0,2,4,3,0,0,0,5,66,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,53,"    private static final double FACT[] = new double[20];
",2,0,0,2,4,3,0,0,0,5,52,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,56,"    private static final double LN_MANT[][] = new double[1024][];
",2,0,0,4,8,3,0,0,0,5,61,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,65,"    private static final double LN_SPLIT_COEF[][] = {
",2,0,0,2,5,3,0,0,0,5,49,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,85,"    private static final double LN_QUICK_COEF[][] = {
",2,0,0,2,5,3,0,0,0,5,49,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,98,"    private static final double LN_HI_PREC_COEF[][] = {
",2,0,0,2,5,3,0,0,0,5,51,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,108,"    private static final double SINE_TABLE_A[] = new double[14];
",2,0,0,2,4,3,0,0,0,5,60,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,111,"    private static final double SINE_TABLE_B[] = new double[14];
",2,0,0,2,4,3,0,0,0,5,60,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,114,"    private static final double COSINE_TABLE_A[] = new double[14];
",2,0,0,2,4,3,0,0,0,5,62,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,117,"    private static final double COSINE_TABLE_B[] = new double[14];
",2,0,0,2,4,3,0,0,0,5,62,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,120,"    private static final double TANGENT_TABLE_A[] = new double[14];
",2,0,0,2,4,3,0,0,0,5,63,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,123,"    private static final double TANGENT_TABLE_B[] = new double[14];
",2,0,0,2,4,3,0,0,0,5,63,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,126,"    private static long RECIP_2PI[] = new long[] {
",2,0,0,2,5,2,0,0,0,4,46,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,147,"    private static long PI_O_4_BITS[] = new long[] {
",2,0,0,2,5,2,0,0,0,4,48,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,155,"    private static final double EIGHTHES[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};
",2,0,0,2,4,3,0,0,0,5,127,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,158,"    private static final double CBRTTWO[] = { 0.6299605249474366,
",2,0,0,1,3,3,0,0,0,5,61,2,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,169,"        FACT[0] = 1.0;
",0,0,1,1,2,0,0,0,0,3,14,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,170,"        for (i = 1; i < 20; i++) {
",6,1,0,1,3,0,0,0,0,9,26,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,171,"            FACT[i] = FACT[i-1] * i;
",4,2,1,2,4,0,0,0,0,13,24,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,174,"        double tmp[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,29,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,175,"        double recip[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,31,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,178,"        for (i = 0; i < 750; i++) {
",6,1,0,1,3,0,0,0,0,9,27,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,179,"            expint(i, tmp);
",0,0,0,1,2,0,6,0,0,6,15,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,180,"            EXP_INT_TABLE_A[i+750] = tmp[0];
",2,1,1,2,4,0,0,0,0,8,32,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,181,"            EXP_INT_TABLE_B[i+750] = tmp[1];
",2,1,1,2,4,0,0,0,0,8,32,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,183,"            if (i != 0) {
",2,1,0,1,3,0,0,0,0,3,13,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,185,"                splitReciprocal(tmp, recip);
",0,0,0,1,2,0,6,0,0,6,28,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,186,"                EXP_INT_TABLE_A[750-i] = recip[0];
",2,1,1,2,4,0,0,0,0,8,34,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,187,"                EXP_INT_TABLE_B[750-i] = recip[1];
",2,1,1,2,4,0,0,0,0,8,34,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,192,"        for (i = 0; i < 1025; i++) {
",6,1,0,1,3,0,0,0,0,9,28,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,193,"            slowexp(i/1024.0, tmp);
",2,1,0,1,2,0,4,0,0,7,23,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,194,"            EXP_FRAC_TABLE_A[i] = tmp[0];
",0,0,1,2,4,0,0,0,0,7,29,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,195,"            EXP_FRAC_TABLE_B[i] = tmp[1];
",0,0,1,2,4,0,0,0,0,7,29,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,199,"        for (i = 0; i < 1024; i++) {
",6,1,0,1,3,0,0,0,0,9,28,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,200,"            double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );
",4,2,0,4,8,0,4,0,0,10,79,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,201,"            LN_MANT[i] = slowLog(d);
",0,0,1,2,4,0,4,0,0,9,24,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,205,"        buildSinCosTables();
",0,0,0,1,2,0,2,0,0,2,20,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,206,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,219,"        return Math.sqrt(a);
",0,0,0,1,2,1,6,0,0,6,20,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,680,"        final double xs[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,681,"        final double ys[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,682,"        final double facts[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,37,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,683,"        final double as[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,684,"        split(x, xs);
",0,0,0,1,2,0,6,0,0,6,13,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,685,"        ys[0] = ys[1] = 0.0;
",0,0,1,2,4,0,0,0,0,6,20,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,687,"        for (int i = 19; i >= 0; i--) {
",6,1,0,1,3,0,0,0,0,8,31,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,688,"            splitMult(xs, ys, as);
",0,0,0,1,2,0,8,0,0,8,22,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,689,"            ys[0] = as[0];
",0,0,1,2,4,0,0,0,0,5,14,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,690,"            ys[1] = as[1];
",0,0,1,2,4,0,0,0,0,5,14,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,692,"            split(FACT[i], as);
",0,0,1,2,4,0,4,0,0,8,19,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,693,"            splitReciprocal(as, facts);
",0,0,0,1,2,0,6,0,0,6,27,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,695,"            splitAdd(ys, facts, as);
",0,0,0,1,2,0,8,0,0,8,24,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,696,"            ys[0] = as[0];
",0,0,1,2,4,0,0,0,0,5,14,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,697,"            ys[1] = as[1];
",0,0,1,2,4,0,0,0,0,5,14,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,700,"        if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,701,"            result[0] = ys[0];
",0,0,1,2,4,0,0,0,0,5,18,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,702,"            result[1] = ys[1];
",0,0,1,2,4,0,0,0,0,5,18,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,705,"        return ys[0] + ys[1];
",0,1,1,2,4,1,0,0,0,5,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,714,"        if (d < 8e298 && d > -8e298) {
",4,3,0,1,3,0,0,0,0,8,30,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,715,"            final double a = d * 1073741824.0;
",4,1,0,0,0,1,0,0,0,6,34,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,716,"            split[0] = (d + a) - a;
",6,2,1,2,4,0,0,0,0,11,23,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,717,"            split[1] = d - split[0];
",2,1,1,2,4,0,0,0,0,8,24,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,718,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,723,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,730,"        final double c = a[0] + a[1];
",2,1,1,2,4,1,0,0,0,8,29,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,731,"        final double d = -(c - a[0] - a[1]);
",4,1,1,3,6,1,0,0,0,11,36,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,733,"        if (c < 8e298 && c > -8e298) {
",4,3,0,1,3,0,0,0,0,8,30,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,734,"            double z = c * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,28,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,735,"            a[0] = (c + z) - z;
",6,2,1,2,4,0,0,0,0,11,19,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,736,"            a[1] = c - a[0] + d;
",4,2,1,2,4,0,0,0,0,11,20,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,737,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,738,"            double z = c * 9.31322574615478515625E-10;
",4,1,0,0,0,0,0,0,0,5,42,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,739,"            a[0] = (c + z - c) * 1073741824.0;
",6,3,1,2,4,0,0,0,0,12,34,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,740,"            a[1] = c - a[0] + d;
",4,2,1,2,4,0,0,0,0,11,20,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,742,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,750,"        ans[0] = a[0] * b[0];
",0,1,1,3,6,0,0,0,0,8,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,751,"        ans[1] = a[0] * b[1] + a[1] * b[0] + a[1] * b[1];
",0,5,1,7,14,0,0,0,0,20,49,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,754,"        resplit(ans);
",0,0,0,1,2,0,4,0,0,4,13,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,755,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,763,"        ans[0] = a[0] + b[0];
",0,1,1,3,6,0,0,0,0,8,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,764,"        ans[1] = a[1] + b[1];
",0,1,1,3,6,0,0,0,0,8,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,766,"        resplit(ans);
",0,0,0,1,2,0,4,0,0,4,13,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,767,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,788,"        final double b = 1.0/4194304.0;
",2,1,0,0,0,1,0,0,0,4,31,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,789,"        final double a = 1.0 - b;
",4,1,0,0,0,1,0,0,0,6,25,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,791,"        if (in[0] == 0.0) {
",0,1,1,2,5,0,0,0,0,3,19,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,796,"        result[0] = a / in[0];
",2,1,1,2,4,0,0,0,0,8,22,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,797,"        result[1] = (b*in[0]-a*in[1]) / (in[0]*in[0] + in[0]*in[1]);
",4,7,1,9,18,0,0,0,0,26,60,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,799,"        if (result[1] != result[1]) { // can happen if result[1] is NAN
",0,1,1,4,9,0,0,0,0,5,63,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,800,"            result[1] = 0.0;
",0,0,1,1,2,0,0,0,0,3,16,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,804,"        resplit(result);
",0,0,0,1,2,0,4,0,0,4,16,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,806,"        for (int i = 0; i < 2; i++) {
",6,1,0,1,3,0,0,0,0,8,29,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,808,"            double err = 1.0 - result[0] * in[0] - result[0] * in[1] -
",2,6,1,4,8,0,0,0,0,16,58,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,811,"            err = err * (result[0] + result[1]);
",4,2,1,3,6,0,0,0,0,11,36,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,813,"            result[1] += err;
",2,0,1,1,2,0,0,0,0,5,17,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,815,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,823,"        final double xs[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,824,"        final double ys[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,825,"        final double zs[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,828,"        split(a[0], xs);
",0,0,1,2,4,0,4,0,0,6,16,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,829,"        split(b[0], ys);
",0,0,1,2,4,0,4,0,0,6,16,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,830,"        splitMult(xs, ys, zs);
",0,0,0,1,2,0,8,0,0,8,22,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,832,"        result[0] = zs[0];
",0,0,1,2,4,0,0,0,0,5,18,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,833,"        result[1] = zs[1];
",0,0,1,2,4,0,0,0,0,5,18,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,836,"        split(b[1], ys);
",0,0,1,2,4,0,4,0,0,6,16,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,837,"        splitMult(xs, ys, zs);
",0,0,0,1,2,0,8,0,0,8,22,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,839,"        double tmp = result[0] + zs[0];
",2,1,1,2,4,0,0,0,0,7,31,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,840,"        result[1] = result[1] - (tmp - result[0] - zs[0]);
",2,2,1,5,10,0,0,0,0,13,50,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,841,"        result[0] = tmp;
",2,0,1,1,2,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,842,"        tmp = result[0] + zs[1];
",2,1,1,2,4,0,0,0,0,8,24,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,843,"        result[1] = result[1] - (tmp - result[0] - zs[1]);
",2,2,1,5,10,0,0,0,0,13,50,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,844,"        result[0] = tmp;
",2,0,1,1,2,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,847,"        split(a[1], xs);
",0,0,1,2,4,0,4,0,0,6,16,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,848,"        split(b[0], ys);
",0,0,1,2,4,0,4,0,0,6,16,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,849,"        splitMult(xs, ys, zs);
",0,0,0,1,2,0,8,0,0,8,22,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,851,"        tmp = result[0] + zs[0];
",2,1,1,2,4,0,0,0,0,8,24,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,852,"        result[1] = result[1] - (tmp - result[0] - zs[0]);
",2,2,1,5,10,0,0,0,0,13,50,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,853,"        result[0] = tmp;
",2,0,1,1,2,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,854,"        tmp = result[0] + zs[1];
",2,1,1,2,4,0,0,0,0,8,24,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,855,"        result[1] = result[1] - (tmp - result[0] - zs[1]);
",2,2,1,5,10,0,0,0,0,13,50,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,856,"        result[0] = tmp;
",2,0,1,1,2,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,859,"        split(a[1], xs);
",0,0,1,2,4,0,4,0,0,6,16,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,860,"        split(b[1], ys);
",0,0,1,2,4,0,4,0,0,6,16,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,861,"        splitMult(xs, ys, zs);
",0,0,0,1,2,0,8,0,0,8,22,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,863,"        tmp = result[0] + zs[0];
",2,1,1,2,4,0,0,0,0,8,24,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,864,"        result[1] = result[1] - (tmp - result[0] - zs[0]);
",2,2,1,5,10,0,0,0,0,13,50,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,865,"        result[0] = tmp;
",2,0,1,1,2,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,866,"        tmp = result[0] + zs[1];
",2,1,1,2,4,0,0,0,0,8,24,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,867,"        result[1] = result[1] - (tmp - result[0] - zs[1]);
",2,2,1,5,10,0,0,0,0,13,50,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,868,"        result[0] = tmp;
",2,0,1,1,2,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,869,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,878,"        final double xs[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,879,"        final double as[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,880,"        final double ys[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,889,"        xs[0] = 2.718281828459045;
",0,0,1,1,2,0,0,0,0,3,26,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,890,"        xs[1] = 1.4456468917292502E-16;
",0,0,1,1,2,0,0,0,0,3,31,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,892,"        split(1.0, ys);
",0,0,0,1,2,0,4,0,0,4,15,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,894,"        while (p > 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,895,"            if ((p & 1) != 0) {
",2,2,0,2,5,0,0,0,0,4,19,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,896,"                quadMult(ys, xs, as);
",0,0,0,1,2,0,8,0,0,8,21,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,897,"                ys[0] = as[0]; ys[1] = as[1];
",0,0,1,4,8,0,0,0,0,10,29,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,900,"            quadMult(xs, xs, as);
",0,0,0,1,2,0,8,0,0,8,21,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,901,"            xs[0] = as[0]; xs[1] = as[1];
",0,0,1,4,8,0,0,0,0,10,29,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,903,"            p >>= 1;
",2,0,0,0,0,0,0,0,0,3,8,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,906,"        if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,907,"            result[0] = ys[0];
",0,0,1,2,4,0,0,0,0,5,18,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,908,"            result[1] = ys[1];
",0,0,1,2,4,0,0,0,0,5,18,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,910,"            resplit(result);
",0,0,0,1,2,0,4,0,0,4,16,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,913,"        return ys[0] + ys[1];
",0,1,1,2,4,1,0,0,0,5,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1396,"        double x[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,27,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1397,"        double x2[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,28,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1398,"        double y[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,27,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1399,"        double a[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,27,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1401,"        split(xi, x);
",0,0,0,1,2,0,6,0,0,6,13,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1404,"        x[0] += 1.0;
",0,0,1,1,2,0,0,0,0,3,12,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1405,"        resplit(x);
",0,0,0,1,2,0,4,0,0,4,11,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1406,"        splitReciprocal(x, a);
",0,0,0,1,2,0,6,0,0,6,22,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1407,"        x[0] -= 2.0;
",0,0,1,1,2,0,0,0,0,3,12,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1408,"        resplit(x);
",0,0,0,1,2,0,4,0,0,4,11,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1409,"        splitMult(x, a, y);
",0,0,0,1,2,0,8,0,0,8,19,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1410,"        x[0] = y[0];
",0,0,1,2,4,0,0,0,0,5,12,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1411,"        x[1] = y[1];
",0,0,1,2,4,0,0,0,0,5,12,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1414,"        splitMult(x, x, x2);
",0,0,0,1,2,0,8,0,0,8,20,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1420,"        y[0] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][0];
",4,1,1,3,6,0,0,0,0,10,48,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1421,"        y[1] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][1];
",4,1,1,3,6,0,0,0,0,10,48,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1423,"        for (int i = LN_SPLIT_COEF.length-2; i >= 0; i--) {
",10,2,0,1,3,0,0,0,0,13,51,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1424,"            splitMult(y, x2, a);
",0,0,0,1,2,0,8,0,0,8,20,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1425,"            y[0] = a[0];
",0,0,1,2,4,0,0,0,0,5,12,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1426,"            y[1] = a[1];
",0,0,1,2,4,0,0,0,0,5,12,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1427,"            splitAdd(y, LN_SPLIT_COEF[i], a);
",0,0,1,2,4,0,6,0,0,10,33,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1428,"            y[0] = a[0];
",0,0,1,2,4,0,0,0,0,5,12,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1429,"            y[1] = a[1];
",0,0,1,2,4,0,0,0,0,5,12,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1432,"        splitMult(y, x, a);
",0,0,0,1,2,0,8,0,0,8,19,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1433,"        y[0] = a[0];
",0,0,1,2,4,0,0,0,0,5,12,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1434,"        y[1] = a[1];
",0,0,1,2,4,0,0,0,0,5,12,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1436,"        return y;
",2,0,0,0,0,1,0,0,0,2,9,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1446,"        final double xs[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1447,"        final double ys[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1448,"        final double facts[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,37,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1449,"        final double as[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1450,"        split(x, xs);
",0,0,0,1,2,0,6,0,0,6,13,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1451,"        ys[0] = ys[1] = 0.0;
",0,0,1,2,4,0,0,0,0,6,20,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1453,"        for (int i = 19; i >= 0; i--) {
",6,1,0,1,3,0,0,0,0,8,31,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1454,"            splitMult(xs, ys, as);
",0,0,0,1,2,0,8,0,0,8,22,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1455,"            ys[0] = as[0]; ys[1] = as[1];
",0,0,1,4,8,0,0,0,0,10,29,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1457,"            if ( (i & 1) == 0) {
",2,2,0,2,5,0,0,0,0,4,20,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1458,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1461,"            split(FACT[i], as);
",0,0,1,2,4,0,4,0,0,8,19,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1462,"            splitReciprocal(as, facts);
",0,0,0,1,2,0,6,0,0,6,27,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1464,"            if ( (i & 2) != 0 ) {
",2,2,0,2,5,0,0,0,0,4,21,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1465,"                facts[0] = -facts[0];
",0,0,1,2,4,0,0,0,0,6,21,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1466,"                facts[1] = -facts[1];
",0,0,1,2,4,0,0,0,0,6,21,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1469,"            splitAdd(ys, facts, as);
",0,0,0,1,2,0,8,0,0,8,24,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1470,"            ys[0] = as[0]; ys[1] = as[1];
",0,0,1,4,8,0,0,0,0,10,29,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1473,"        if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1474,"            result[0] = ys[0];
",0,0,1,2,4,0,0,0,0,5,18,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1475,"            result[1] = ys[1];
",0,0,1,2,4,0,0,0,0,5,18,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1478,"        return ys[0] + ys[1];
",0,1,1,2,4,1,0,0,0,5,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1489,"        final double xs[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1490,"        final double ys[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1491,"        final double facts[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,37,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1492,"        final double as[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,34,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1493,"        split(x, xs);
",0,0,0,1,2,0,6,0,0,6,13,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1494,"        ys[0] = ys[1] = 0.0;
",0,0,1,2,4,0,0,0,0,6,20,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1496,"        for (int i = 19; i >= 0; i--) {
",6,1,0,1,3,0,0,0,0,8,31,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1497,"            splitMult(xs, ys, as);
",0,0,0,1,2,0,8,0,0,8,22,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1498,"            ys[0] = as[0]; ys[1] = as[1];
",0,0,1,4,8,0,0,0,0,10,29,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1500,"            if ( (i & 1) != 0) {
",2,2,0,2,5,0,0,0,0,4,20,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1501,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1504,"            split(FACT[i], as);
",0,0,1,2,4,0,4,0,0,8,19,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1505,"            splitReciprocal(as, facts);
",0,0,0,1,2,0,6,0,0,6,27,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1507,"            if ( (i & 2) != 0 ) {
",2,2,0,2,5,0,0,0,0,4,21,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1508,"                facts[0] = -facts[0];
",0,0,1,2,4,0,0,0,0,6,21,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1509,"                facts[1] = -facts[1];
",0,0,1,2,4,0,0,0,0,6,21,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1512,"            splitAdd(ys, facts, as);
",0,0,0,1,2,0,8,0,0,8,24,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1513,"            ys[0] = as[0]; ys[1] = as[1];
",0,0,1,4,8,0,0,0,0,10,29,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1516,"        if (result != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1517,"            result[0] = ys[0];
",0,0,1,2,4,0,0,0,0,5,18,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1518,"            result[1] = ys[1];
",0,0,1,2,4,0,0,0,0,5,18,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1521,"        return ys[0] + ys[1];
",0,1,1,2,4,1,0,0,0,5,21,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1527,"        final double result[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,38,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1530,"        for (int i = 0; i < 7; i++) {
",6,1,0,1,3,0,0,0,0,8,29,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1531,"            double x = i / 8.0;
",4,1,0,0,0,0,0,0,0,5,19,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1533,"            slowSin(x, result);
",0,0,0,1,2,0,6,0,0,6,19,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1534,"            SINE_TABLE_A[i] = result[0];
",0,0,1,2,4,0,0,0,0,7,28,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1535,"            SINE_TABLE_B[i] = result[1];
",0,0,1,2,4,0,0,0,0,7,28,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1537,"            slowCos(x, result);
",0,0,0,1,2,0,6,0,0,6,19,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1538,"            COSINE_TABLE_A[i] = result[0];
",0,0,1,2,4,0,0,0,0,7,30,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1539,"            COSINE_TABLE_B[i] = result[1];
",0,0,1,2,4,0,0,0,0,7,30,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1543,"        for (int i = 7; i < 14; i++) {
",6,1,0,1,3,0,0,0,0,8,30,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1544,"            double xs[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,28,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1545,"            double ys[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,28,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1546,"            double as[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,28,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1547,"            double bs[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,28,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1548,"            double temps[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,31,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1550,"            if ( (i & 1) == 0) {
",2,2,0,2,5,0,0,0,0,4,20,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1552,"                xs[0] = SINE_TABLE_A[i/2];
",2,1,1,2,4,0,0,0,0,8,26,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1553,"                xs[1] = SINE_TABLE_B[i/2];
",2,1,1,2,4,0,0,0,0,8,26,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1554,"                ys[0] = COSINE_TABLE_A[i/2];
",2,1,1,2,4,0,0,0,0,8,28,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1555,"                ys[1] = COSINE_TABLE_B[i/2];
",2,1,1,2,4,0,0,0,0,8,28,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1558,"                splitMult(xs, ys, result);
",0,0,0,1,2,0,8,0,0,8,26,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1559,"                SINE_TABLE_A[i] = result[0] * 2.0;
",0,1,1,2,4,0,0,0,0,8,34,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1560,"                SINE_TABLE_B[i] = result[1] * 2.0;
",0,1,1,2,4,0,0,0,0,8,34,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1563,"                splitMult(ys, ys, as);
",0,0,0,1,2,0,8,0,0,8,22,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1564,"                splitMult(xs, xs, temps);
",0,0,0,1,2,0,8,0,0,8,25,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1565,"                temps[0] = -temps[0];
",0,0,1,2,4,0,0,0,0,6,21,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1566,"                temps[1] = -temps[1];
",0,0,1,2,4,0,0,0,0,6,21,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1567,"                splitAdd(as, temps, result);
",0,0,0,1,2,0,8,0,0,8,28,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1568,"                COSINE_TABLE_A[i] = result[0];
",0,0,1,2,4,0,0,0,0,7,30,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1569,"                COSINE_TABLE_B[i] = result[1];
",0,0,1,2,4,0,0,0,0,7,30,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1571,"                xs[0] = SINE_TABLE_A[i/2];
",2,1,1,2,4,0,0,0,0,8,26,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1572,"                xs[1] = SINE_TABLE_B[i/2];
",2,1,1,2,4,0,0,0,0,8,26,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1573,"                ys[0] = COSINE_TABLE_A[i/2];
",2,1,1,2,4,0,0,0,0,8,28,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1574,"                ys[1] = COSINE_TABLE_B[i/2];
",2,1,1,2,4,0,0,0,0,8,28,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1575,"                as[0] = SINE_TABLE_A[i/2+1];
",2,2,1,2,4,0,0,0,0,9,28,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1576,"                as[1] = SINE_TABLE_B[i/2+1];
",2,2,1,2,4,0,0,0,0,9,28,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1577,"                bs[0] = COSINE_TABLE_A[i/2+1];
",2,2,1,2,4,0,0,0,0,9,30,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1578,"                bs[1] = COSINE_TABLE_B[i/2+1];
",2,2,1,2,4,0,0,0,0,9,30,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1581,"                splitMult(xs, bs, temps);
",0,0,0,1,2,0,8,0,0,8,25,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1582,"                splitMult(ys, as, result);
",0,0,0,1,2,0,8,0,0,8,26,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1583,"                splitAdd(result, temps, result);
",0,0,0,1,2,0,8,0,0,8,32,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1584,"                SINE_TABLE_A[i] = result[0];
",0,0,1,2,4,0,0,0,0,7,28,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1585,"                SINE_TABLE_B[i] = result[1];
",0,0,1,2,4,0,0,0,0,7,28,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1588,"                splitMult(ys, bs, result);
",0,0,0,1,2,0,8,0,0,8,26,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1589,"                splitMult(xs, as, temps);
",0,0,0,1,2,0,8,0,0,8,25,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1590,"                temps[0] = -temps[0];
",0,0,1,2,4,0,0,0,0,6,21,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1591,"                temps[1] = -temps[1];
",0,0,1,2,4,0,0,0,0,6,21,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1592,"                splitAdd(result, temps, result);
",0,0,0,1,2,0,8,0,0,8,32,9,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1593,"                COSINE_TABLE_A[i] = result[0];
",0,0,1,2,4,0,0,0,0,7,30,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1594,"                COSINE_TABLE_B[i] = result[1];
",0,0,1,2,4,0,0,0,0,7,30,8,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1599,"        for (int i = 0; i < 14; i++) {
",6,1,0,1,3,0,0,0,0,8,30,4,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1600,"            double xs[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,28,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1601,"            double ys[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,28,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1602,"            double as[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,28,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1604,"            as[0] = COSINE_TABLE_A[i];
",0,0,1,2,4,0,0,0,0,7,26,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1605,"            as[1] = COSINE_TABLE_B[i];
",0,0,1,2,4,0,0,0,0,7,26,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1607,"            splitReciprocal(as, ys);
",0,0,0,1,2,0,6,0,0,6,24,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1609,"            xs[0] = SINE_TABLE_A[i];
",0,0,1,2,4,0,0,0,0,7,24,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1610,"            xs[1] = SINE_TABLE_B[i];
",0,0,1,2,4,0,0,0,0,7,24,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1612,"            splitMult(xs, ys, as);
",0,0,0,1,2,0,8,0,0,8,22,7,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1614,"            TANGENT_TABLE_A[i] = as[0];
",0,0,1,2,4,0,0,0,0,7,27,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1615,"            TANGENT_TABLE_B[i] = as[1];
",0,0,1,2,4,0,0,0,0,7,27,6,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1618,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3016,"        return (x < 0l) ? -x : x;
",6,1,0,1,2,1,0,0,0,8,25,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3034,"        return (x < 0.0) ? -x : x;
",6,1,0,1,2,1,0,0,0,8,26,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3044,"        return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1));
",2,2,0,3,6,1,12,0,0,16,72,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3224,"        return (a <= b) ? a : (Double.isNaN(a + b) ? Double.NaN : b);
",16,2,0,3,6,1,4,0,0,22,61,5,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3260,"        return (a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a);
",16,2,0,3,6,1,4,0,0,22,61,5,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,28,"public class Incrementor {
",2,0,0,0,1,1,0,0,0,3,26,1,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,44,"        maximalCount = max;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,53,"        return maximalCount;
",2,0,0,0,0,1,0,0,0,2,20,4,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,62,"        return count;
",2,0,0,0,0,1,0,0,0,2,13,4,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,84,"        if (++count > maximalCount) {
",4,1,0,1,3,0,0,0,0,6,29,4,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,87,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,93,"        count = 0;
",2,0,0,0,0,0,0,0,0,3,10,4,1.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,94,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,33,"public final class MathUtils {
",2,0,0,0,1,2,0,0,0,4,30,1,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,75,"    private static final long[] FACTORIALS = new long[] {
",2,0,0,2,5,3,0,0,0,5,53,2,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,417,"        return equals(x, y, 1);
",0,0,0,1,2,1,6,0,0,6,23,5,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,479,"        assert maxUlps > 0 && maxUlps < NAN_GAP;
",6,3,0,0,0,0,0,0,0,9,40,4,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,481,"        long xInt = Double.doubleToLongBits(x);
",2,0,0,1,2,0,6,0,0,8,39,5,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,482,"        long yInt = Double.doubleToLongBits(y);
",2,0,0,1,2,0,6,0,0,8,39,5,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,485,"        if (xInt < 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,486,"            xInt = SGN_MASK - xInt;
",6,1,0,0,0,0,0,0,0,8,23,6,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,488,"        if (yInt < 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,489,"            yInt = SGN_MASK - yInt;
",6,1,0,0,0,0,0,0,0,8,23,6,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,492,"        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;
",8,2,0,1,2,1,4,0,0,15,61,4,1.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,494,"        return isEqual && !Double.isNaN(x) && !Double.isNaN(y);
",2,1,0,2,4,1,12,0,0,17,55,4,1.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,28,"public class JDKRandomGenerator extends Random implements RandomGenerator {
",2,0,0,0,1,1,0,4,0,7,75,1,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,191,"        Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
",0,0,0,1,4,0,6,4,0,10,68,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,194,"                    if (o1 == null) {
",2,1,0,1,3,0,0,0,0,3,17,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,196,"                    } else if (o2 == null) {
",2,1,0,1,4,0,0,0,0,3,24,11,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,199,"                    final double v1 = o1.getValue();
",2,0,0,1,2,1,4,0,0,7,32,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,200,"                    final double v2 = o2.getValue();
",2,0,0,1,2,1,4,0,0,7,32,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,201,"                    return (goal == GoalType.MINIMIZE) ?
",6,1,0,1,2,1,0,0,0,7,36,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,72,"                                             final RandomGenerator generator) {
",2,0,0,0,2,1,0,2,0,5,34,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,73,"        this.optimizer = optimizer;
",4,0,0,0,0,0,0,0,0,5,27,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,74,"        this.starts = starts;
",4,0,0,0,0,0,0,0,0,5,21,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,75,"        this.generator = generator;
",4,0,0,0,0,0,0,0,0,5,27,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,76,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,146,"        return optimize(f, goal, min, max, 0);
",0,0,0,1,2,1,10,0,0,10,38,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,154,"        optima = new UnivariateRealPointValuePair[starts];
",2,0,1,1,2,0,0,2,0,7,50,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,155,"        totalEvaluations = 0;
",2,0,0,0,0,0,0,0,0,3,21,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,158,"        for (int i = 0; i < starts; ++i) {
",8,1,0,1,3,0,0,0,0,10,34,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,160,"                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
",12,4,0,3,6,1,4,0,0,21,82,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,161,"                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
",12,4,0,3,6,1,4,0,0,21,82,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,162,"                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
",0,0,1,4,8,0,24,0,0,29,100,8,1.00000,1
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,167,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,169,"            final int usedEvaluations = optimizer.getEvaluations();
",2,0,0,1,2,1,4,0,0,7,55,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,170,"            optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
",2,1,0,2,4,0,8,0,0,11,77,7,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,171,"            totalEvaluations += usedEvaluations;
",4,0,0,0,0,0,0,0,0,5,36,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,174,"        sortPairs(goal);
",0,0,0,1,2,0,4,0,0,4,16,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,176,"        if (optima[0] == null) {
",0,1,1,2,5,0,0,0,0,3,24,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,182,"        return optima[0];
",0,0,1,1,2,1,0,0,0,2,17,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,191,"        Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
",0,0,0,1,4,0,6,4,0,10,68,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,205,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,45,"                                        final double value) {
",2,0,0,0,2,1,0,0,0,3,21,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,46,"        this.point = point;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,47,"        this.value = value;
",4,0,0,0,0,0,0,0,0,5,19,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,56,"        return point;
",2,0,0,0,0,1,0,0,0,2,13,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,65,"        return value;
",2,0,0,0,0,1,0,0,0,2,13,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,36,"public abstract class AbstractUnivariateRealOptimizer
",2,0,0,0,0,2,0,0,0,4,53,1,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,41,"    private final Incrementor evaluations = new Incrementor();
",2,0,0,1,2,2,0,4,0,8,58,2,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,55,"        evaluations.setMaximalCount(maxEvaluations);
",0,0,0,1,2,0,6,0,0,6,44,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,56,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,60,"        return evaluations.getMaximalCount();
",0,0,0,1,2,1,4,0,0,4,37,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,65,"        return evaluations.getCount();
",0,0,0,1,2,1,4,0,0,4,30,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,72,"        return goal;
",2,0,0,0,0,1,0,0,0,2,12,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,78,"        return searchMin;
",2,0,0,0,0,1,0,0,0,2,17,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,84,"        return searchMax;
",2,0,0,0,0,1,0,0,0,2,17,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,90,"        return searchStart;
",2,0,0,0,0,1,0,0,0,2,19,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,106,"            evaluations.incrementCount();
",0,0,0,1,2,0,4,0,0,4,29,7,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,109,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,110,"        return function.value(point);
",0,0,0,1,2,1,6,0,0,6,29,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,120,"        if (f == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,123,"        if (goalType == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,128,"        searchMin = min;
",4,0,0,0,0,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,129,"        searchMax = max;
",4,0,0,0,0,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,130,"        searchStart = startValue;
",4,0,0,0,0,0,0,0,0,5,25,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,131,"        goal = goalType;
",4,0,0,0,0,0,0,0,0,5,16,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,132,"        function = f;
",4,0,0,0,0,0,0,0,0,5,13,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,133,"        evaluations.resetCount();
",0,0,0,1,2,0,4,0,0,4,25,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,136,"        return doOptimize();
",0,0,0,1,2,1,2,0,0,2,20,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,144,"        return optimize(f, goalType, min, max, min + 0.5 * (max - min));
",6,3,0,2,4,1,10,0,0,19,64,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,158,"        return checker;
",2,0,0,0,0,1,0,0,0,2,15,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/GoalType,62,27,"public enum GoalType implements Serializable {
",2,0,0,0,1,1,0,2,0,5,46,1,1.00000,0
defect4j,math,org/apache/commons/math/optimization/GoalType,62,30,"    MAXIMIZE,
",2,0,0,0,0,0,0,0,0,2,9,2,1.00000,0
defect4j,math,org/apache/commons/math/optimization/GoalType,62,33,"    MINIMIZE
",2,0,0,0,0,0,0,0,0,2,8,2,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,76,"                          double abs) {
",2,0,0,0,2,0,0,0,0,2,13,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,77,"        if (rel < MIN_RELATIVE_TOLERANCE) {
",4,1,0,1,3,0,0,0,0,5,35,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,80,"        if (abs <= 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,83,"        relativeThreshold = rel;
",4,0,0,0,0,0,0,0,0,5,24,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,84,"        absoluteThreshold = abs;
",4,0,0,0,0,0,0,0,0,5,24,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,85,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,47,"    private static final double GOLDEN_SECTION = 0.5 * (3 - FastMath.sqrt(5));
",2,2,0,2,4,3,4,0,0,11,74,2,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,51,"    private static final double MIN_RELATIVE_TOLERANCE = 2 * FastMath.ulp(1d);
",2,1,0,1,2,3,4,0,0,10,74,2,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,90,"        final boolean isMinim = getGoalType() == GoalType.MINIMIZE;
",6,1,0,1,2,1,2,0,0,10,59,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,91,"        final double lo = getMin();
",2,0,0,1,2,1,2,0,0,5,27,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,92,"        final double mid = getStartValue();
",2,0,0,1,2,1,2,0,0,5,35,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,93,"        final double hi = getMax();
",2,0,0,1,2,1,2,0,0,5,27,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,96,"        final ConvergenceChecker<UnivariateRealPointValuePair> checker
",2,0,0,0,0,1,0,4,0,7,62,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,101,"        if (lo < hi) {
",4,1,0,1,3,0,0,0,0,5,14,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,102,"            a = lo;
",4,0,0,0,0,0,0,0,0,5,7,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,103,"            b = hi;
",4,0,0,0,0,0,0,0,0,5,7,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,109,"        double x = mid;
",4,0,0,0,0,0,0,0,0,4,15,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,110,"        double v = x;
",4,0,0,0,0,0,0,0,0,4,13,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,111,"        double w = x;
",4,0,0,0,0,0,0,0,0,4,13,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,112,"        double d = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,113,"        double e = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,114,"        double fx = computeObjectiveValue(x);
",2,0,0,1,2,0,4,0,0,6,37,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,115,"        if (!isMinim) {
",2,0,0,1,3,0,0,0,0,3,15,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,118,"        double fv = fx;
",4,0,0,0,0,0,0,0,0,4,15,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,119,"        double fw = fx;
",4,0,0,0,0,0,0,0,0,4,15,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,121,"        UnivariateRealPointValuePair previous = null;
",2,0,0,0,0,0,0,2,0,4,45,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,122,"        UnivariateRealPointValuePair current
",2,0,0,0,0,0,0,2,0,4,36,4,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,125,"        int iter = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,127,"            final double m = 0.5 * (a + b);
",6,2,0,1,2,1,0,0,0,9,31,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,128,"            final double tol1 = relativeThreshold * FastMath.abs(x) + absoluteThreshold;
",6,2,0,1,2,1,6,0,0,15,76,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,129,"            final double tol2 = 2 * tol1;
",4,1,0,0,0,1,0,0,0,6,29,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,132,"            final boolean stop = FastMath.abs(x - m) <= tol2 - 0.5 * (b - a);
",12,5,0,2,4,1,4,0,0,22,65,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,133,"            if (!stop) {
",2,0,0,1,3,0,0,0,0,3,12,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,134,"                double p = 0;
",2,0,0,0,0,0,0,0,0,2,13,9,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,135,"                double q = 0;
",2,0,0,0,0,0,0,0,0,2,13,9,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,136,"                double r = 0;
",2,0,0,0,0,0,0,0,0,2,13,9,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,137,"                double u = 0;
",2,0,0,0,0,0,0,0,0,2,13,9,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,139,"                if (FastMath.abs(e) > tol1) { // Fit parabola.
",2,1,0,2,5,0,6,0,0,9,46,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,140,"                    r = (x - w) * (fx - fv);
",10,3,0,2,4,0,0,0,0,14,24,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,141,"                    q = (x - v) * (fx - fw);
",10,3,0,2,4,0,0,0,0,14,24,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,142,"                    p = (x - v) * q - (x - w) * r;
",14,5,0,2,4,0,0,0,0,20,30,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,143,"                    q = 2 * (q - r);
",6,2,0,1,2,0,0,0,0,9,16,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,145,"                    if (q > 0) {
",2,1,0,1,3,0,0,0,0,3,12,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,146,"                        p = -p;
",4,0,0,0,0,0,0,0,0,6,7,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,148,"                        q = -q;
",4,0,0,0,0,0,0,0,0,6,7,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,151,"                    r = e;
",4,0,0,0,0,0,0,0,0,5,6,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,152,"                    e = d;
",4,0,0,0,0,0,0,0,0,5,6,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,154,"                    if (p > q * (a - x) &&
",8,5,0,1,3,0,0,0,0,13,22,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,158,"                        d = p / q;
",6,1,0,0,0,0,0,0,0,8,10,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,159,"                        u = x + d;
",6,1,0,0,0,0,0,0,0,8,10,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,162,"                        if (u - a < tol2 || b - u < tol2) {
",12,5,0,1,3,0,0,0,0,17,35,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,163,"                            if (x <= m) {
",4,1,0,1,3,0,0,0,0,5,13,14,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,164,"                                d = tol1;
",4,0,0,0,0,0,0,0,0,5,9,16,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,171,"                        if (x < m) {
",4,1,0,1,3,0,0,0,0,5,12,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,172,"                            e = b - x;
",6,1,0,0,0,0,0,0,0,8,10,14,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,174,"                            e = a - x;
",6,1,0,0,0,0,0,0,0,8,10,14,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,176,"                        d = GOLDEN_SECTION * e;
",6,1,0,0,0,0,0,0,0,8,23,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,180,"                    if (x < m) {
",4,1,0,1,3,0,0,0,0,5,12,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,183,"                        e = a - x;
",6,1,0,0,0,0,0,0,0,8,10,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,185,"                    d = GOLDEN_SECTION * e;
",6,1,0,0,0,0,0,0,0,8,23,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,189,"                if (FastMath.abs(d) < tol1) {
",2,1,0,2,5,0,6,0,0,9,29,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,190,"                    if (d >= 0) {
",2,1,0,1,3,0,0,0,0,3,13,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,191,"                        u = x + tol1;
",6,1,0,0,0,0,0,0,0,8,13,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,193,"                        u = x - tol1;
",6,1,0,0,0,0,0,0,0,8,13,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,196,"                    u = x + d;
",6,1,0,0,0,0,0,0,0,8,10,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,199,"                double fu = computeObjectiveValue(u);
",2,0,0,1,2,0,4,0,0,6,37,9,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,200,"                if (!isMinim) {
",2,0,0,1,3,0,0,0,0,3,15,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,205,"                if (fu <= fx) {
",4,1,0,1,3,0,0,0,0,5,15,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,206,"                    if (u < x) {
",4,1,0,1,3,0,0,0,0,5,12,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,207,"                        b = x;
",4,0,0,0,0,0,0,0,0,5,6,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,209,"                        a = x;
",4,0,0,0,0,0,0,0,0,5,6,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,211,"                    v = w;
",4,0,0,0,0,0,0,0,0,5,6,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,212,"                    fv = fw;
",4,0,0,0,0,0,0,0,0,5,8,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,213,"                    w = x;
",4,0,0,0,0,0,0,0,0,5,6,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,214,"                    fw = fx;
",4,0,0,0,0,0,0,0,0,5,8,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,215,"                    x = u;
",4,0,0,0,0,0,0,0,0,5,6,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,216,"                    fx = fu;
",4,0,0,0,0,0,0,0,0,5,8,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,218,"                    if (u < x) {
",4,1,0,1,3,0,0,0,0,5,12,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,219,"                        a = u;
",4,0,0,0,0,0,0,0,0,5,6,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,221,"                        b = u;
",4,0,0,0,0,0,0,0,0,5,6,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,223,"                    if (fu <= fw ||
",4,2,0,0,1,0,0,0,0,6,15,10,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,225,"                        v = w;
",4,0,0,0,0,0,0,0,0,5,6,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,226,"                        fv = fw;
",4,0,0,0,0,0,0,0,0,5,8,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,227,"                        w = u;
",4,0,0,0,0,0,0,0,0,5,6,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,228,"                        fw = fu;
",4,0,0,0,0,0,0,0,0,5,8,12,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,229,"                    } else if (fu <= fv ||
",4,3,0,0,2,0,0,0,0,7,22,11,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,232,"                        v = u;
",4,0,0,0,0,0,0,0,0,5,6,13,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,233,"                        fv = fu;
",4,0,0,0,0,0,0,0,0,5,8,13,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,237,"                previous = current;
",4,0,0,0,0,0,0,0,0,5,19,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,238,"                current = new UnivariateRealPointValuePair(x, isMinim ? fx : -fx);
",10,0,0,1,2,0,0,2,0,14,66,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,241,"                if (checker != null) {
",2,1,0,1,3,0,0,0,0,3,22,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,246,"            } else { // Default termination (Brent's criterion).
",0,0,0,1,4,0,0,0,0,0,52,3,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,247,"                return current;
",2,0,0,0,0,1,0,0,0,2,15,8,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,249,"            ++iter;
",2,0,0,0,0,0,0,0,0,3,7,6,1.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,250,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,211,"    private FastMath() {
",2,0,0,1,3,1,0,0,0,3,20,2,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,212,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,227,"        return 0.5 * (FastMath.exp(a) + FastMath.exp(-a));
",2,2,0,3,6,1,10,0,0,15,50,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,236,"        boolean negative = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,237,"        if (a < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,238,"            negative = true;
",2,0,0,0,0,0,0,0,0,4,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,239,"            a = -a;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,243,"        if (a > 0.3) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,244,"            absSinh = 0.5 * (FastMath.exp(a) - FastMath.exp(-a));
",4,2,0,3,6,0,10,0,0,18,53,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,246,"            final double a2 = a * a;
",6,1,0,0,0,1,0,0,0,8,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,247,"            if (a > 0.05) {
",2,1,0,1,3,0,0,0,0,3,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,248,"                absSinh = a * (1 + a2 * (1 + a2  * (1 + a2 * (1 + a2 * (1 + a2 / 110) / 72) / 42) / 20) / 6);
",14,15,0,5,10,0,0,0,0,30,93,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,250,"                absSinh = a * (1 + a2 * (1 + a2  * (1 + a2 / 42) / 20) / 6);
",10,9,0,3,6,0,0,0,0,20,60,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,254,"        return negative ? -absSinh : absSinh;
",6,0,0,0,0,1,0,0,0,7,37,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,264,"        boolean negative = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,265,"        if (a < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,266,"            negative = true;
",2,0,0,0,0,0,0,0,0,4,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,267,"            a = -a;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,271,"        if (a > 0.074) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,272,"            final double twoA = 2 * a;
",4,1,0,0,0,1,0,0,0,6,26,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,273,"            absTanh = FastMath.expm1(twoA) / (FastMath.exp(twoA) + 1);
",2,2,0,3,6,0,12,0,0,17,58,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,274,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,275,"            final double a2 = a * a;
",6,1,0,0,0,1,0,0,0,8,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,276,"            if (a > 0.016) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,277,"                absTanh = a * (1 - a2 * (1 - a2 * (2 - a2 * (17 - a2 * (62 - a2 * 1382 / 55 ) / 9) / 21) / 5) / 3);
",14,16,0,5,10,0,0,0,0,31,99,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,279,"                absTanh = a * (1 - a2 * (1 - a2 * (2 - a2 * 17 / 21) / 5) / 3);
",10,10,0,3,6,0,0,0,0,21,63,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,283,"        return negative ? -absTanh : absTanh;
",6,0,0,0,0,1,0,0,0,7,37,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,292,"        return FastMath.log(a + FastMath.sqrt(a * a - 1));
",6,3,0,2,4,1,8,0,0,17,50,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,301,"        boolean negative = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,302,"        if (a < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,303,"            negative = true;
",2,0,0,0,0,0,0,0,0,4,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,304,"            a = -a;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,308,"        if (a > 0.167) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,309,"            absAsinh = FastMath.log(FastMath.sqrt(a * a + 1) + a);
",8,3,0,2,4,0,8,0,0,20,54,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,311,"            final double a2 = a * a;
",6,1,0,0,0,1,0,0,0,8,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,312,"            if (a > 0.097) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,313,"                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0 - a2 * (1.0 / 15.0 - a2 * (1.0 / 17.0) * 15.0 / 16.0) * 13.0 / 14.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);
",20,33,0,9,18,0,0,0,0,54,264,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,314,"            } else if (a > 0.036) {
",2,1,0,1,4,0,0,0,0,3,23,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,315,"                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);
",16,25,0,7,14,0,0,0,0,42,196,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,316,"            } else if (a > 0.0036) {
",2,1,0,1,4,0,0,0,0,3,24,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,317,"                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);
",12,17,0,5,10,0,0,0,0,30,129,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,319,"                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0) * 3.0 / 4.0) / 2.0);
",8,9,0,3,6,0,0,0,0,18,71,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,323,"        return negative ? -absAsinh : absAsinh;
",6,0,0,0,0,1,0,0,0,7,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,333,"        boolean negative = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,334,"        if (a < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,335,"            negative = true;
",2,0,0,0,0,0,0,0,0,4,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,336,"            a = -a;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,340,"        if (a > 0.15) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,341,"            absAtanh = 0.5 * FastMath.log((1 + a) / (1 - a));
",6,4,0,3,6,0,4,0,0,15,49,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,343,"            final double a2 = a * a;
",6,1,0,0,0,1,0,0,0,8,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,344,"            if (a > 0.087) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,345,"                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0 + a2 * (1.0 / 15.0 + a2 * (1.0 / 17.0)))))))));
",20,25,0,9,18,0,0,0,0,46,175,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,346,"            } else if (a > 0.031) {
",2,1,0,1,4,0,0,0,0,3,23,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,347,"                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0 + a2 * (1.0 / 11.0 + a2 * (1.0 / 13.0)))))));
",16,19,0,7,14,0,0,0,0,36,135,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,348,"            } else if (a > 0.003) {
",2,1,0,1,4,0,0,0,0,3,23,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,349,"                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0 + a2 * (1.0 / 7.0 + a2 * (1.0 / 9.0)))));
",12,13,0,5,10,0,0,0,0,26,95,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,351,"                absAtanh = a * (1 + a2 * (1.0 / 3.0 + a2 * (1.0 / 5.0)));
",8,7,0,3,6,0,0,0,0,16,57,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,355,"        return negative ? -absAtanh : absAtanh;
",6,0,0,0,0,1,0,0,0,7,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,365,"        return (a < 0.0) ? -1.0 : ((a > 0.0) ? 1.0 : (Double.isNaN(a) ? Double.NaN : 0.0));
",8,2,0,5,10,1,6,0,0,17,83,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,373,"        return nextAfter(a, Double.POSITIVE_INFINITY);
",4,0,0,1,2,1,4,0,0,8,46,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,380,"        return Math.random();
",0,0,0,1,2,1,4,0,0,4,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,404,"        return exp(x, 0.0, null);
",0,0,0,1,2,1,4,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,423,"        if (x < 0.0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,424,"            intVal = (int) -x;
",4,0,0,1,2,0,0,0,0,6,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,426,"            if (intVal > 746) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,427,"                if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,428,"                    hiPrec[0] = 0.0;
",0,0,1,1,2,0,0,0,0,3,16,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,429,"                    hiPrec[1] = 0.0;
",0,0,1,1,2,0,0,0,0,3,16,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,431,"                return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,434,"            if (intVal > 709) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,436,"                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;
",4,2,0,1,2,1,6,0,0,13,79,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,437,"                if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,438,"                    hiPrec[0] /= 285040095144011776.0;
",0,0,1,1,2,0,0,0,0,3,34,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,439,"                    hiPrec[1] /= 285040095144011776.0;
",0,0,1,1,2,0,0,0,0,3,34,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,441,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,444,"            if (intVal == 709) {
",2,1,0,1,3,0,0,0,0,3,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,446,"                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;
",4,2,0,1,2,1,6,0,0,13,79,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,447,"                if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,448,"                    hiPrec[0] /= 4.455505956692756620;
",0,0,1,1,2,0,0,0,0,3,34,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,449,"                    hiPrec[1] /= 4.455505956692756620;
",0,0,1,1,2,0,0,0,0,3,34,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,451,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,454,"            intVal++;
",2,0,0,0,0,0,0,0,0,3,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,456,"            intPartA = EXP_INT_TABLE_A[750-intVal];
",4,1,1,1,2,0,0,0,0,8,39,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,457,"            intPartB = EXP_INT_TABLE_B[750-intVal];
",4,1,1,1,2,0,0,0,0,8,39,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,459,"            intVal = -intVal;
",4,0,0,0,0,0,0,0,0,6,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,461,"            intVal = (int) x;
",4,0,0,1,2,0,0,0,0,5,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,463,"            if (intVal > 709) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,464,"                if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,465,"                    hiPrec[0] = Double.POSITIVE_INFINITY;
",4,0,1,1,2,0,0,0,0,7,37,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,466,"                    hiPrec[1] = 0.0;
",0,0,1,1,2,0,0,0,0,3,16,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,468,"                return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,471,"            intPartA = EXP_INT_TABLE_A[750+intVal];
",4,1,1,1,2,0,0,0,0,8,39,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,472,"            intPartB = EXP_INT_TABLE_B[750+intVal];
",4,1,1,1,2,0,0,0,0,8,39,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,479,"        final int intFrac = (int) ((x - intVal) * 1024.0);
",6,2,0,3,6,1,0,0,0,9,50,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,480,"        final double fracPartA = EXP_FRAC_TABLE_A[intFrac];
",2,0,1,1,2,1,0,0,0,7,51,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,481,"        final double fracPartB = EXP_FRAC_TABLE_B[intFrac];
",2,0,1,1,2,1,0,0,0,7,51,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,487,"        final double epsilon = x - (intVal + intFrac / 1024.0);
",8,3,0,1,2,1,0,0,0,12,55,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,496,"        double z = 0.04168701738764507;
",2,0,0,0,0,0,0,0,0,2,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,497,"        z = z * epsilon + 0.1666666505023083;
",6,2,0,0,0,0,0,0,0,9,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,498,"        z = z * epsilon + 0.5000000000042687;
",6,2,0,0,0,0,0,0,0,9,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,499,"        z = z * epsilon + 1.0;
",6,2,0,0,0,0,0,0,0,9,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,500,"        z = z * epsilon + -3.940510424527919E-20;
",6,2,0,0,0,0,0,0,0,10,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,507,"        double tempA = intPartA * fracPartA;
",6,1,0,0,0,0,0,0,0,7,36,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,508,"        double tempB = intPartA * fracPartB + intPartB * fracPartA + intPartB * fracPartB;
",14,5,0,0,0,0,0,0,0,19,82,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,514,"        final double tempC = tempB + tempA;
",6,1,0,0,0,1,0,0,0,8,35,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,516,"        if (extra != 0.0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,517,"            result = tempC*extra*z + tempC*extra + tempC*z + tempB + tempA;
",20,7,0,0,0,0,0,0,0,28,63,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,519,"            result = tempC*z + tempB + tempA;
",10,3,0,0,0,0,0,0,0,14,33,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,522,"        if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,524,"            hiPrec[0] = tempA;
",2,0,1,1,2,0,0,0,0,5,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,525,"            hiPrec[1] = tempC*extra*z + tempC*extra + tempC*z + tempB;
",16,6,1,1,2,0,0,0,0,25,58,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,528,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,536,"        if (x != x || x == 0.0) { // NaN or zero
",6,3,0,1,3,0,0,0,0,9,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,537,"            return x;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,540,"        if (x <= -1.0 || x >= 1.0) {
",4,3,0,1,3,0,0,0,0,8,28,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,543,"            double hiPrec[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,32,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,544,"            exp(x, 0.0, hiPrec);
",0,0,0,1,2,0,6,0,0,6,20,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,545,"            if (x > 0.0) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,546,"                return -1.0 + hiPrec[0] + hiPrec[1];
",0,1,1,2,4,1,0,0,0,6,36,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,548,"                final double ra = -1.0 + hiPrec[0];
",2,1,1,1,2,1,0,0,0,7,35,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,549,"                double rb = -(ra + 1.0 - hiPrec[0]);
",4,2,1,2,4,0,0,0,0,9,36,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,550,"                rb += hiPrec[1];
",2,0,1,1,2,0,0,0,0,5,16,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,551,"                return ra + rb;
",4,1,0,0,0,1,0,0,0,5,15,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,558,"        boolean negative = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,560,"        if (x < 0.0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,561,"            x = -x;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,562,"            negative = true;
",2,0,0,0,0,0,0,0,0,4,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,566,"            int intFrac = (int) (x * 1024.0);
",4,1,0,2,4,0,0,0,0,5,33,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,567,"            double tempA = EXP_FRAC_TABLE_A[intFrac] - 1.0;
",2,1,1,1,2,0,0,0,0,7,47,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,568,"            double tempB = EXP_FRAC_TABLE_B[intFrac];
",2,0,1,1,2,0,0,0,0,6,41,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,570,"            double temp = tempA + tempB;
",6,1,0,0,0,0,0,0,0,7,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,571,"            tempB = -(temp - tempA - tempB);
",8,1,0,1,2,0,0,0,0,11,32,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,572,"            tempA = temp;
",4,0,0,0,0,0,0,0,0,5,13,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,574,"            temp = tempA * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,575,"            baseA = tempA + temp - temp;
",8,2,0,0,0,0,0,0,0,11,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,576,"            baseB = tempB + (tempA - baseA);
",8,2,0,1,2,0,0,0,0,11,32,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,578,"            epsilon = x - intFrac/1024.0;
",6,2,0,0,0,0,0,0,0,9,29,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,583,"        double zb = 0.008336750013465571;
",2,0,0,0,0,0,0,0,0,2,33,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,584,"        zb = zb * epsilon + 0.041666663879186654;
",6,2,0,0,0,0,0,0,0,9,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,585,"        zb = zb * epsilon + 0.16666666666745392;
",6,2,0,0,0,0,0,0,0,9,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,586,"        zb = zb * epsilon + 0.49999999999999994;
",6,2,0,0,0,0,0,0,0,9,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,587,"        zb = zb * epsilon;
",6,1,0,0,0,0,0,0,0,8,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,588,"        zb = zb * epsilon;
",6,1,0,0,0,0,0,0,0,8,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,590,"        double za = epsilon;
",4,0,0,0,0,0,0,0,0,4,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,591,"        double temp = za + zb;
",6,1,0,0,0,0,0,0,0,7,22,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,592,"        zb = -(temp - za - zb);
",8,1,0,1,2,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,593,"        za = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,595,"        temp = za * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,596,"        temp = za + temp - temp;
",8,2,0,0,0,0,0,0,0,11,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,597,"        zb += za - temp;
",6,1,0,0,0,0,0,0,0,8,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,598,"        za = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,601,"        double ya = za * baseA;
",6,1,0,0,0,0,0,0,0,7,23,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,603,"        temp = ya + za * baseB;
",8,2,0,0,0,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,604,"        double yb = -(temp - ya - za * baseB);
",10,2,0,1,2,0,0,0,0,13,38,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,605,"        ya = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,607,"        temp = ya + zb * baseA;
",8,2,0,0,0,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,608,"        yb += -(temp - ya - zb * baseA);
",10,2,0,1,2,0,0,0,0,14,32,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,609,"        ya = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,611,"        temp = ya + zb * baseB;
",8,2,0,0,0,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,612,"        yb += -(temp - ya - zb*baseB);
",10,2,0,1,2,0,0,0,0,14,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,613,"        ya = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,617,"        temp = ya + baseA;
",6,1,0,0,0,0,0,0,0,8,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,618,"        yb += -(temp - baseA - ya);
",8,1,0,1,2,0,0,0,0,11,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,619,"        ya = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,621,"        temp = ya + za;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,623,"        yb += -(temp - ya - za);
",8,1,0,1,2,0,0,0,0,11,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,624,"        ya = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,626,"        temp = ya + baseB;
",6,1,0,0,0,0,0,0,0,8,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,628,"        yb += -(temp - ya - baseB);
",8,1,0,1,2,0,0,0,0,11,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,629,"        ya = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,631,"        temp = ya + zb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,633,"        yb += -(temp - ya - zb);
",8,1,0,1,2,0,0,0,0,11,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,634,"        ya = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,636,"        if (negative) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,638,"            double denom = 1.0 + ya;
",4,1,0,0,0,0,0,0,0,5,24,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,639,"            double denomr = 1.0 / denom;
",4,1,0,0,0,0,0,0,0,5,28,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,640,"            double denomb = -(denom - 1.0 - ya) + yb;
",8,2,0,1,2,0,0,0,0,11,41,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,641,"            double ratio = ya * denomr;
",6,1,0,0,0,0,0,0,0,7,27,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,642,"            temp = ratio * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,643,"            final double ra = ratio + temp - temp;
",8,2,0,0,0,1,0,0,0,11,38,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,644,"            double rb = ratio - ra;
",6,1,0,0,0,0,0,0,0,7,23,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,646,"            temp = denom * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,647,"            za = denom + temp - temp;
",8,2,0,0,0,0,0,0,0,11,25,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,648,"            zb = denom - za;
",6,1,0,0,0,0,0,0,0,8,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,650,"            rb += (ya - za * ra - za * rb - zb * ra - zb * rb) * denomr;
",22,9,0,1,2,0,0,0,0,32,60,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,661,"            rb += yb * denomr;                      // numerator
",6,1,0,0,0,0,0,0,0,8,52,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,662,"            rb += -ya * denomb * denomr * denomr;   // denominator
",10,1,0,0,0,0,0,0,0,13,54,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,665,"            ya = -ra;
",4,0,0,0,0,0,0,0,0,6,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,666,"            yb = -rb;
",4,0,0,0,0,0,0,0,0,6,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,669,"        return ya + yb;
",4,1,0,0,0,1,0,0,0,5,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,719,"            final double a = d * 9.31322574615478515625E-10;
",4,1,0,0,0,1,0,0,0,6,48,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,720,"            split[0] = (d + a - d) * 1073741824.0;
",6,3,1,2,4,0,0,0,0,12,38,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,721,"            split[1] = d - split[0];
",2,1,1,2,4,0,0,0,0,8,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,792,"            in[0] = in[1];
",0,0,1,2,4,0,0,0,0,5,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,793,"            in[1] = 0.0;
",0,0,1,1,2,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,924,"        return log(x, null);
",0,0,0,1,2,1,4,0,0,5,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,934,"        long bits = Double.doubleToLongBits(x);
",2,0,0,1,2,0,6,0,0,8,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,937,"        if ((bits & 0x8000000000000000L) != 0 || x != x) {
",6,4,0,2,5,0,0,0,0,10,50,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,938,"            if (x != 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,939,"                if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,940,"                    hiPrec[0] = Double.NaN;
",4,0,1,1,2,0,0,0,0,7,23,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,943,"                return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,948,"        if (x == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,949,"            if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,950,"                hiPrec[0] = Double.POSITIVE_INFINITY;
",4,0,1,1,2,0,0,0,0,7,37,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,953,"            return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,957,"        int exp = (int)(bits >> 52)-1023;
",4,2,0,2,4,0,0,0,0,6,33,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,959,"        if ((bits & 0x7ff0000000000000L) == 0) {
",2,2,0,2,5,0,0,0,0,4,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,961,"            if (x == 0) {
",2,1,0,1,3,0,0,0,0,3,13,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,963,"                if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,964,"                    hiPrec[0] = Double.NEGATIVE_INFINITY;
",4,0,1,1,2,0,0,0,0,7,37,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,967,"                return Double.NEGATIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,971,"            bits <<= 1;
",2,0,0,0,0,0,0,0,0,3,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,972,"            while ( (bits & 0x0010000000000000L) == 0) {
",2,2,0,2,5,0,0,0,0,4,44,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,973,"                exp--;
",2,0,0,0,0,0,0,0,0,3,6,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,974,"                bits <<= 1;
",2,0,0,0,0,0,0,0,0,3,11,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,979,"        if (exp == -1 || exp == 0) {
",4,3,0,1,3,0,0,0,0,8,28,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,980,"            if (x < 1.01 && x > 0.99 && hiPrec == null) {
",6,5,0,1,3,0,0,0,0,11,45,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,985,"                double xa = x - 1.0;
",4,1,0,0,0,0,0,0,0,5,20,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,986,"                double xb = xa - x + 1.0;
",6,2,0,0,0,0,0,0,0,8,25,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,987,"                double tmp = xa * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,31,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,988,"                double aa = xa + tmp - tmp;
",8,2,0,0,0,0,0,0,0,10,27,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,989,"                double ab = xa - aa;
",6,1,0,0,0,0,0,0,0,7,20,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,990,"                xa = aa;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,991,"                xb = ab;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,993,"                double ya = LN_QUICK_COEF[LN_QUICK_COEF.length-1][0];
",6,1,1,2,4,0,0,0,0,9,53,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,994,"                double yb = LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];
",6,1,1,2,4,0,0,0,0,9,53,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,996,"                for (int i = LN_QUICK_COEF.length - 2; i >= 0; i--) {
",10,2,0,1,3,0,0,0,0,13,53,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,998,"                    aa = ya * xa;
",6,1,0,0,0,0,0,0,0,8,13,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,999,"                    ab = ya * xb + yb * xa + yb * xb;
",14,5,0,0,0,0,0,0,0,20,33,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1001,"                    tmp = aa * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1002,"                    ya = aa + tmp - tmp;
",8,2,0,0,0,0,0,0,0,11,20,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1003,"                    yb = aa - ya + ab;
",8,2,0,0,0,0,0,0,0,11,18,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1006,"                    aa = ya + LN_QUICK_COEF[i][0];
",4,1,1,2,4,0,0,0,0,10,30,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1007,"                    ab = yb + LN_QUICK_COEF[i][1];
",4,1,1,2,4,0,0,0,0,10,30,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1009,"                    tmp = aa * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1010,"                    ya = aa + tmp - tmp;
",8,2,0,0,0,0,0,0,0,11,20,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1011,"                    yb = aa - ya + ab;
",8,2,0,0,0,0,0,0,0,11,18,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1015,"                aa = ya * xa;
",6,1,0,0,0,0,0,0,0,8,13,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1016,"                ab = ya * xb + yb * xa + yb * xb;
",14,5,0,0,0,0,0,0,0,20,33,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1018,"                tmp = aa * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1019,"                ya = aa + tmp - tmp;
",8,2,0,0,0,0,0,0,0,11,20,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1020,"                yb = aa - ya + ab;
",8,2,0,0,0,0,0,0,0,11,18,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1022,"                return ya + yb;
",4,1,0,0,0,1,0,0,0,5,15,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1027,"        double lnm[] = LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];
",4,2,1,5,10,0,0,0,0,8,66,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1038,"        double epsilon = (double)(bits & 0x3ffffffffffL) / (4503599627370496.0 + (bits & 0x000ffc0000000000L));
",6,4,0,4,8,0,0,0,0,10,103,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1040,"        double lnza = 0.0;
",2,0,0,0,0,0,0,0,0,2,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1041,"        double lnzb = 0.0;
",2,0,0,0,0,0,0,0,0,2,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1043,"        if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1045,"            double tmp = epsilon * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,36,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1046,"            double aa = epsilon + tmp - tmp;
",8,2,0,0,0,0,0,0,0,10,32,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1047,"            double ab = epsilon - aa;
",6,1,0,0,0,0,0,0,0,7,25,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1048,"            double xa = aa;
",4,0,0,0,0,0,0,0,0,4,15,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1049,"            double xb = ab;
",4,0,0,0,0,0,0,0,0,4,15,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1052,"            double numer = (double)(bits & 0x3ffffffffffL);
",4,1,0,2,4,0,0,0,0,5,47,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1053,"            double denom = 4503599627370496.0 + (bits & 0x000ffc0000000000L);
",4,2,0,1,2,0,0,0,0,6,65,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1054,"            aa = numer - xa*denom - xb * denom;
",12,4,0,0,0,0,0,0,0,17,35,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1055,"            xb += aa / denom;
",6,1,0,0,0,0,0,0,0,8,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1058,"            double ya = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][0];
",6,1,1,2,4,0,0,0,0,9,57,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1059,"            double yb = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][1];
",6,1,1,2,4,0,0,0,0,9,57,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1061,"            for (int i = LN_HI_PREC_COEF.length - 2; i >= 0; i--) {
",10,2,0,1,3,0,0,0,0,13,55,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1063,"                aa = ya * xa;
",6,1,0,0,0,0,0,0,0,8,13,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1064,"                ab = ya * xb + yb * xa + yb * xb;
",14,5,0,0,0,0,0,0,0,20,33,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1066,"                tmp = aa * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1067,"                ya = aa + tmp - tmp;
",8,2,0,0,0,0,0,0,0,11,20,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1068,"                yb = aa - ya + ab;
",8,2,0,0,0,0,0,0,0,11,18,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1071,"                aa = ya + LN_HI_PREC_COEF[i][0];
",4,1,1,2,4,0,0,0,0,10,32,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1072,"                ab = yb + LN_HI_PREC_COEF[i][1];
",4,1,1,2,4,0,0,0,0,10,32,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1074,"                tmp = aa * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1075,"                ya = aa + tmp - tmp;
",8,2,0,0,0,0,0,0,0,11,20,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1076,"                yb = aa - ya + ab;
",8,2,0,0,0,0,0,0,0,11,18,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1080,"            aa = ya * xa;
",6,1,0,0,0,0,0,0,0,8,13,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1081,"            ab = ya * xb + yb * xa + yb * xb;
",14,5,0,0,0,0,0,0,0,20,33,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1089,"            lnza = aa + ab;
",6,1,0,0,0,0,0,0,0,8,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1090,"            lnzb = -(lnza - aa - ab);
",8,1,0,1,2,0,0,0,0,11,25,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1091,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1094,"            lnza = -0.16624882440418567;
",2,0,0,0,0,0,0,0,0,4,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1095,"            lnza = lnza * epsilon + 0.19999954120254515;
",6,2,0,0,0,0,0,0,0,9,44,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1096,"            lnza = lnza * epsilon + -0.2499999997677497;
",6,2,0,0,0,0,0,0,0,10,44,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1097,"            lnza = lnza * epsilon + 0.3333333333332802;
",6,2,0,0,0,0,0,0,0,9,43,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1098,"            lnza = lnza * epsilon + -0.5;
",6,2,0,0,0,0,0,0,0,10,29,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1099,"            lnza = lnza * epsilon + 1.0;
",6,2,0,0,0,0,0,0,0,9,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1100,"            lnza = lnza * epsilon;
",6,1,0,0,0,0,0,0,0,8,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1117,"        double a = LN_2_A*exp;
",6,1,0,0,0,0,0,0,0,7,22,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1118,"        double b = 0.0;
",2,0,0,0,0,0,0,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1119,"        double c = a+lnm[0];
",4,1,1,1,2,0,0,0,0,7,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1120,"        double d = -(c-a-lnm[0]);
",6,1,1,2,4,0,0,0,0,10,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1121,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1122,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1124,"        c = a + lnza;
",6,1,0,0,0,0,0,0,0,8,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1125,"        d = -(c - a - lnza);
",8,1,0,1,2,0,0,0,0,11,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1126,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1127,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1129,"        c = a + LN_2_B*exp;
",8,2,0,0,0,0,0,0,0,11,19,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1130,"        d = -(c - a - LN_2_B*exp);
",10,2,0,1,2,0,0,0,0,14,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1131,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1132,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1134,"        c = a + lnm[1];
",4,1,1,1,2,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1135,"        d = -(c - a - lnm[1]);
",6,1,1,2,4,0,0,0,0,11,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1136,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1137,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1139,"        c = a + lnzb;
",6,1,0,0,0,0,0,0,0,8,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1140,"        d = -(c - a - lnzb);
",8,1,0,1,2,0,0,0,0,11,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1141,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1142,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1144,"        if (hiPrec != null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1145,"            hiPrec[0] = a;
",2,0,1,1,2,0,0,0,0,5,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1146,"            hiPrec[1] = b;
",2,0,1,1,2,0,0,0,0,5,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1149,"        return a + b;
",4,1,0,0,0,1,0,0,0,5,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1157,"        double xpa = 1.0 + x;
",4,1,0,0,0,0,0,0,0,5,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1158,"        double xpb = -(xpa - 1.0 - x);
",6,1,0,1,2,0,0,0,0,8,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1160,"        if (x == -1) {
",2,1,0,1,3,0,0,0,0,4,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1161,"            return x/0.0;   // -Infinity
",2,1,0,0,0,1,0,0,0,3,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1164,"        if (x > 0 && 1/x == 0) { // x = Infinity
",4,4,0,1,3,0,0,0,0,8,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1165,"            return x;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1168,"        if (x>1e-6 || x<-1e-6) {
",4,3,0,1,3,0,0,0,0,8,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1169,"            double hiPrec[] = new double[2];
",2,0,0,2,4,0,0,0,0,2,32,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1171,"            log(xpa, hiPrec);
",0,0,0,1,2,0,6,0,0,6,17,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1175,"            double fx1 = xpb/xpa;
",6,1,0,0,0,0,0,0,0,7,21,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1177,"            double epsilon = 0.5 * fx1 + 1.0;
",4,2,0,0,0,0,0,0,0,6,33,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1178,"            epsilon = epsilon * fx1;
",6,1,0,0,0,0,0,0,0,8,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1180,"            return epsilon + hiPrec[1] + hiPrec[0];
",2,1,1,2,4,1,0,0,0,7,39,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1184,"        double y = x * 0.333333333333333 - 0.5;
",4,2,0,0,0,0,0,0,0,6,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1185,"        y = y * x + 1.0;
",6,2,0,0,0,0,0,0,0,9,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1186,"        y = y * x;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1188,"        return y;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1196,"        final double hiPrec[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1198,"        log(x, hiPrec);
",0,0,0,1,2,0,6,0,0,6,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1200,"        final double tmp = hiPrec[0] * 1073741824.0;
",2,1,1,1,2,1,0,0,0,6,44,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1201,"        final double lna = hiPrec[0] + tmp - tmp;
",6,2,1,1,2,1,0,0,0,11,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1202,"        final double lnb = hiPrec[0] - lna + hiPrec[1];
",4,2,1,2,4,1,0,0,0,11,47,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1204,"        final double rln10a = 0.4342944622039795;
",2,0,0,0,0,1,0,0,0,3,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1205,"        final double rln10b = 1.9699272335463627E-8;
",2,0,0,0,0,1,0,0,0,3,44,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1207,"        return rln10b * lnb + rln10b * lna + rln10a * lnb + rln10a * lna;
",16,7,0,0,0,1,0,0,0,23,65,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1218,"        final double lns[] = new double[2];
",2,0,0,2,4,1,0,0,0,3,35,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1220,"        if (y == 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1221,"            return 1.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1224,"        if (x != x) { // X is NaN
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1225,"            return x;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1229,"        if (x == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1230,"            long bits = Double.doubleToLongBits(x);
",2,0,0,1,2,0,6,0,0,8,39,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1231,"            if ((bits & 0x8000000000000000L) != 0) {
",2,2,0,2,5,0,0,0,0,4,40,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1233,"                long yi = (long) y;
",4,0,0,1,2,0,0,0,0,4,19,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1235,"                if (y < 0 && y == yi && (yi & 1) == 1) {
",8,6,0,2,5,0,0,0,0,14,40,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1236,"                    return Double.NEGATIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,11,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1239,"                if (y < 0 && y == yi && (yi & 1) == 1) {
",8,6,0,2,5,0,0,0,0,14,40,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1240,"                    return -0.0;
",0,0,0,0,0,1,0,0,0,1,12,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1243,"                if (y > 0 && y == yi && (yi & 1) == 1) {
",8,6,0,2,5,0,0,0,0,14,40,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1244,"                    return -0.0;
",0,0,0,0,0,1,0,0,0,1,12,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1248,"            if (y < 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1249,"                return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1251,"            if (y > 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1252,"                return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1255,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1258,"        if (x == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1259,"            if (y != y) { // y is NaN
",4,1,0,1,3,0,0,0,0,5,25,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1260,"                return y;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1262,"            if (y < 0.0) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1263,"                return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1265,"                return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1269,"        if (y == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1270,"            if (x * x == 1.0)
",4,2,0,1,2,0,0,0,0,6,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1271,"              return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1273,"            if (x * x > 1.0) {
",4,2,0,1,3,0,0,0,0,6,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1274,"                return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1276,"                return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1280,"        if (x == Double.NEGATIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1281,"            if (y != y) { // y is NaN
",4,1,0,1,3,0,0,0,0,5,25,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1282,"                return y;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1285,"            if (y < 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1286,"                long yi = (long) y;
",4,0,0,1,2,0,0,0,0,4,19,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1287,"                if (y == yi && (yi & 1) == 1) {
",6,4,0,2,5,0,0,0,0,10,31,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1288,"                    return -0.0;
",0,0,0,0,0,1,0,0,0,1,12,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1291,"                return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1294,"            if (y > 0)  {
",2,1,0,1,3,0,0,0,0,3,13,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1295,"                long yi = (long) y;
",4,0,0,1,2,0,0,0,0,4,19,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1296,"                if (y == yi && (yi & 1) == 1) {
",6,4,0,2,5,0,0,0,0,10,31,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1297,"                    return Double.NEGATIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,11,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1300,"                return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1304,"        if (y == Double.NEGATIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1306,"            if (x * x == 1.0) {
",4,2,0,1,3,0,0,0,0,6,19,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1307,"                return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1310,"            if (x * x < 1.0) {
",4,2,0,1,3,0,0,0,0,6,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1311,"                return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1313,"                return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1318,"        if (x < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1320,"            if (y >= 4503599627370496.0 || y <= -4503599627370496.0) {
",4,3,0,1,3,0,0,0,0,8,58,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1321,"                return pow(-x, y);
",2,0,0,1,2,1,4,0,0,7,18,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1324,"            if (y == (long) y) {
",4,1,0,2,5,0,0,0,0,5,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1326,"                return ((long)y & 1) == 0 ? pow(-x, y) : -pow(-x, y);
",6,2,0,4,8,1,8,0,0,19,53,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1328,"                return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1335,"        if (y < 8e298 && y > -8e298) {
",4,3,0,1,3,0,0,0,0,8,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1336,"            double tmp1 = y * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,31,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1337,"            ya = y + tmp1 - tmp1;
",8,2,0,0,0,0,0,0,0,11,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1338,"            yb = y - ya;
",6,1,0,0,0,0,0,0,0,8,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1339,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1340,"            double tmp1 = y * 9.31322574615478515625E-10;
",4,1,0,0,0,0,0,0,0,5,45,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1341,"            double tmp2 = tmp1 * 9.31322574615478515625E-10;
",4,1,0,0,0,0,0,0,0,5,48,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1342,"            ya = (tmp1 + tmp2 - tmp1) * 1073741824.0 * 1073741824.0;
",8,3,0,1,2,0,0,0,0,12,56,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1343,"            yb = y - ya;
",6,1,0,0,0,0,0,0,0,8,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1347,"        log(x, lns);
",0,0,0,1,2,0,6,0,0,6,12,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1348,"        double lna = lns[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1349,"        double lnb = lns[1];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1352,"        double tmp1 = lna * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,33,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1353,"        double tmp2 = lna + tmp1 - tmp1;
",8,2,0,0,0,0,0,0,0,10,32,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1354,"        lnb += lna - tmp2;
",6,1,0,0,0,0,0,0,0,8,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1355,"        lna = tmp2;
",4,0,0,0,0,0,0,0,0,5,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1358,"        final double aa = lna * ya;
",6,1,0,0,0,1,0,0,0,8,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1359,"        final double ab = lna * yb + lnb * ya + lnb * yb;
",14,5,0,0,0,1,0,0,0,20,49,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1361,"        lna = aa+ab;
",6,1,0,0,0,0,0,0,0,8,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1362,"        lnb = -(lna - aa - ab);
",8,1,0,1,2,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1364,"        double z = 1.0 / 120.0;
",2,1,0,0,0,0,0,0,0,3,23,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1365,"        z = z * lnb + (1.0 / 24.0);
",6,3,0,1,2,0,0,0,0,10,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1366,"        z = z * lnb + (1.0 / 6.0);
",6,3,0,1,2,0,0,0,0,10,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1367,"        z = z * lnb + 0.5;
",6,2,0,0,0,0,0,0,0,9,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1368,"        z = z * lnb + 1.0;
",6,2,0,0,0,0,0,0,0,9,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1369,"        z = z * lnb;
",6,1,0,0,0,0,0,0,0,8,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1371,"        final double result = exp(lna, z, null);
",2,0,0,1,2,1,6,0,0,10,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1373,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1628,"        double x2 = x*x;
",6,1,0,0,0,0,0,0,0,7,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1630,"        double p = 2.7553817452272217E-6;
",2,0,0,0,0,0,0,0,0,2,33,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1631,"        p = p * x2 + -1.9841269659586505E-4;
",6,2,0,0,0,0,0,0,0,10,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1632,"        p = p * x2 + 0.008333333333329196;
",6,2,0,0,0,0,0,0,0,9,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1633,"        p = p * x2 + -0.16666666666666666;
",6,2,0,0,0,0,0,0,0,10,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1636,"        p = p * x2 * x;
",8,1,0,0,0,0,0,0,0,10,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1638,"        return p;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1648,"        double x2 = x*x;
",6,1,0,0,0,0,0,0,0,7,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1650,"        double p = 2.479773539153719E-5;
",2,0,0,0,0,0,0,0,0,2,32,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1651,"        p = p * x2 + -0.0013888888689039883;
",6,2,0,0,0,0,0,0,0,10,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1652,"        p = p * x2 + 0.041666666666621166;
",6,2,0,0,0,0,0,0,0,9,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1653,"        p = p * x2 + -0.49999999999999994;
",6,2,0,0,0,0,0,0,0,10,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1654,"        p *= x2;
",4,0,0,0,0,0,0,0,0,5,8,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1656,"        return p;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1667,"        int idx = (int) ((xa * 8.0) + 0.5);
",4,2,0,3,6,0,0,0,0,6,35,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1668,"        final double epsilon = xa - EIGHTHES[idx]; //idx*0.125;
",4,1,1,1,2,1,0,0,0,10,55,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1671,"        final double sintA = SINE_TABLE_A[idx];
",2,0,1,1,2,1,0,0,0,7,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1672,"        final double sintB = SINE_TABLE_B[idx];
",2,0,1,1,2,1,0,0,0,7,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1673,"        final double costA = COSINE_TABLE_A[idx];
",2,0,1,1,2,1,0,0,0,7,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1674,"        final double costB = COSINE_TABLE_B[idx];
",2,0,1,1,2,1,0,0,0,7,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1677,"        double sinEpsA = epsilon;
",4,0,0,0,0,0,0,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1678,"        double sinEpsB = polySine(epsilon);
",2,0,0,1,2,0,4,0,0,6,35,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1679,"        final double cosEpsA = 1.0;
",2,0,0,0,0,1,0,0,0,3,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1680,"        final double cosEpsB = polyCosine(epsilon);
",2,0,0,1,2,1,4,0,0,7,43,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1683,"        final double temp = sinEpsA * 1073741824.0;
",4,1,0,0,0,1,0,0,0,6,43,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1684,"        double temp2 = (sinEpsA + temp) - temp;
",8,2,0,1,2,0,0,0,0,10,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1685,"        sinEpsB +=  sinEpsA - temp2;
",6,1,0,0,0,0,0,0,0,8,28,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1686,"        sinEpsA = temp2;
",4,0,0,0,0,0,0,0,0,5,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1712,"        double a = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1713,"        double b = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1715,"        double t = sintA;
",4,0,0,0,0,0,0,0,0,4,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1716,"        double c = a + t;
",6,1,0,0,0,0,0,0,0,7,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1717,"        double d = -(c - a - t);
",8,1,0,1,2,0,0,0,0,10,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1718,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1719,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1721,"        t = costA * sinEpsA;
",6,1,0,0,0,0,0,0,0,8,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1722,"        c = a + t;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1723,"        d = -(c - a - t);
",8,1,0,1,2,0,0,0,0,11,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1724,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1725,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1727,"        b = b + sintA * cosEpsB + costA * sinEpsB;
",12,4,0,0,0,0,0,0,0,17,42,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1742,"        b = b + sintB + costB * sinEpsA + sintB * cosEpsB + costB * sinEpsB;
",18,6,0,0,0,0,0,0,0,25,68,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1769,"        if (xb != 0.0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1770,"            t = ((costA + costB) * (cosEpsA + cosEpsB) -
",10,5,0,2,5,0,0,0,0,16,44,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1772,"            c = a + t;
",6,1,0,0,0,0,0,0,0,8,10,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1773,"            d = -(c - a - t);
",8,1,0,1,2,0,0,0,0,11,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1774,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1775,"            b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1778,"        result = a + b;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1780,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1791,"        final double pi2a = 1.5707963267948966;
",2,0,0,0,0,1,0,0,0,3,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1792,"        final double pi2b = 6.123233995736766E-17;
",2,0,0,0,0,1,0,0,0,3,42,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1794,"        final double a = pi2a - xa;
",6,1,0,0,0,1,0,0,0,8,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1795,"        double b = -(a - pi2a + xa);
",8,2,0,1,2,0,0,0,0,11,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1796,"        b += pi2b - xb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1798,"        return sinQ(a, b);
",0,0,0,1,2,1,6,0,0,6,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1811,"        int idx = (int) ((xa * 8.0) + 0.5);
",4,2,0,3,6,0,0,0,0,6,35,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1812,"        final double epsilon = xa - EIGHTHES[idx]; //idx*0.125;
",4,1,1,1,2,1,0,0,0,10,55,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1815,"        final double sintA = SINE_TABLE_A[idx];
",2,0,1,1,2,1,0,0,0,7,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1816,"        final double sintB = SINE_TABLE_B[idx];
",2,0,1,1,2,1,0,0,0,7,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1817,"        final double costA = COSINE_TABLE_A[idx];
",2,0,1,1,2,1,0,0,0,7,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1818,"        final double costB = COSINE_TABLE_B[idx];
",2,0,1,1,2,1,0,0,0,7,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1821,"        double sinEpsA = epsilon;
",4,0,0,0,0,0,0,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1822,"        double sinEpsB = polySine(epsilon);
",2,0,0,1,2,0,4,0,0,6,35,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1823,"        final double cosEpsA = 1.0;
",2,0,0,0,0,1,0,0,0,3,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1824,"        final double cosEpsB = polyCosine(epsilon);
",2,0,0,1,2,1,4,0,0,7,43,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1827,"        double temp = sinEpsA * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,37,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1828,"        double temp2 = (sinEpsA + temp) - temp;
",8,2,0,1,2,0,0,0,0,10,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1829,"        sinEpsB +=  sinEpsA - temp2;
",6,1,0,0,0,0,0,0,0,8,28,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1830,"        sinEpsA = temp2;
",4,0,0,0,0,0,0,0,0,5,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1855,"        double a = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1856,"        double b = 0;
",2,0,0,0,0,0,0,0,0,2,13,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1859,"        double t = sintA;
",4,0,0,0,0,0,0,0,0,4,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1860,"        double c = a + t;
",6,1,0,0,0,0,0,0,0,7,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1861,"        double d = -(c - a - t);
",8,1,0,1,2,0,0,0,0,10,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1862,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1863,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1865,"        t = costA*sinEpsA;
",6,1,0,0,0,0,0,0,0,8,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1866,"        c = a + t;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1867,"        d = -(c - a - t);
",8,1,0,1,2,0,0,0,0,11,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1868,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1869,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1871,"        b = b + sintA*cosEpsB + costA*sinEpsB;
",12,4,0,0,0,0,0,0,0,17,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1872,"        b = b + sintB + costB*sinEpsA + sintB*cosEpsB + costB*sinEpsB;
",18,6,0,0,0,0,0,0,0,25,62,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1874,"        double sina = a + b;
",6,1,0,0,0,0,0,0,0,7,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1875,"        double sinb = -(sina - a - b);
",8,1,0,1,2,0,0,0,0,10,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1879,"        a = b = c = d = 0.0;
",8,0,0,0,0,0,0,0,0,12,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1881,"        t = costA*cosEpsA;
",6,1,0,0,0,0,0,0,0,8,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1882,"        c = a + t;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1883,"        d = -(c - a - t);
",8,1,0,1,2,0,0,0,0,11,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1884,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1885,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1887,"        t = -sintA*sinEpsA;
",6,1,0,0,0,0,0,0,0,9,19,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1888,"        c = a + t;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1889,"        d = -(c - a - t);
",8,1,0,1,2,0,0,0,0,11,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1890,"        a = c;
",4,0,0,0,0,0,0,0,0,5,6,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1891,"        b = b + d;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1893,"        b = b + costB*cosEpsA + costA*cosEpsB + costB*cosEpsB;
",16,6,0,0,0,0,0,0,0,23,54,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1894,"        b = b - (sintB*sinEpsA + sintA*sinEpsB + sintB*sinEpsB);
",16,6,0,1,2,0,0,0,0,23,56,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1896,"        double cosa = a + b;
",6,1,0,0,0,0,0,0,0,7,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1897,"        double cosb = -(cosa - a - b);
",8,1,0,1,2,0,0,0,0,10,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1899,"        if (cotanFlag) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1901,"            tmp = cosa; cosa = sina; sina = tmp;
",12,0,0,0,0,0,0,0,0,15,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1902,"            tmp = cosb; cosb = sinb; sinb = tmp;
",12,0,0,0,0,0,0,0,0,15,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1916,"        double est = sina/cosa;
",6,1,0,0,0,0,0,0,0,7,23,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1919,"        temp = est * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1920,"        double esta = (est + temp) - temp;
",8,2,0,1,2,0,0,0,0,10,34,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1921,"        double estb =  est - esta;
",6,1,0,0,0,0,0,0,0,7,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1923,"        temp = cosa * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1924,"        double cosaa = (cosa + temp) - temp;
",8,2,0,1,2,0,0,0,0,10,36,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1925,"        double cosab =  cosa - cosaa;
",6,1,0,0,0,0,0,0,0,7,29,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1928,"        double err = (sina - esta*cosaa - esta*cosab - estb*cosaa - estb*cosab)/cosa;  // Correction for division rounding
",22,9,0,1,2,0,0,0,0,31,114,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1929,"        err += sinb/cosa;                     // Change in est due to sinb
",6,1,0,0,0,0,0,0,0,8,66,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1930,"        err += -sina * cosb / cosa / cosa;    // Change in est due to cosb
",10,3,0,0,0,0,0,0,0,15,66,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1932,"        if (xb != 0.0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1935,"            double xbadj = xb + est*est*xb;
",10,2,0,0,0,0,0,0,0,12,31,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1936,"            if (cotanFlag) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1937,"                xbadj = -xbadj;
",4,0,0,0,0,0,0,0,0,6,15,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1940,"            err += xbadj;
",4,0,0,0,0,0,0,0,0,5,13,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1943,"        return est+err;
",4,1,0,0,0,1,0,0,0,5,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1960,"        long inbits = Double.doubleToLongBits(x);
",2,0,0,1,2,0,6,0,0,8,41,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1961,"        int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
",4,3,0,3,6,0,0,0,0,7,53,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1964,"        inbits &= 0x000fffffffffffffL;
",2,0,0,0,0,0,0,0,0,3,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1965,"        inbits |= 0x0010000000000000L;
",2,0,0,0,0,0,0,0,0,3,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1968,"        exponent++;
",2,0,0,0,0,0,0,0,0,3,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1969,"        inbits <<= 11;
",2,0,0,0,0,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1975,"        int idx = exponent >> 6;
",4,1,0,0,0,0,0,0,0,5,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1976,"        int shift = exponent - (idx << 6);
",6,2,0,1,2,0,0,0,0,8,34,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1978,"        if (shift != 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1979,"            shpi0 = (idx == 0) ? 0 : (RECIP_2PI[idx-1] << shift);
",8,3,1,3,6,0,0,0,0,14,53,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1980,"            shpi0 |= RECIP_2PI[idx] >>> (64-shift);
",4,2,1,2,4,0,0,0,0,11,39,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1981,"            shpiA = (RECIP_2PI[idx] << shift) | (RECIP_2PI[idx+1] >>> (64-shift));
",8,5,1,5,10,0,0,0,0,20,70,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1982,"            shpiB = (RECIP_2PI[idx+1] << shift) | (RECIP_2PI[idx+2] >>> (64-shift));
",10,6,1,5,10,0,0,0,0,21,72,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1984,"            shpi0 = (idx == 0) ? 0 : RECIP_2PI[idx-1];
",6,2,1,2,4,0,0,0,0,11,42,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1985,"            shpiA = RECIP_2PI[idx];
",2,0,1,1,2,0,0,0,0,7,23,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1986,"            shpiB = RECIP_2PI[idx+1];
",4,1,1,1,2,0,0,0,0,8,25,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1990,"        long a = inbits >>> 32;
",4,1,0,0,0,0,0,0,0,5,23,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1991,"        long b = inbits & 0xffffffffL;
",4,1,0,0,0,0,0,0,0,5,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1993,"        long c = shpiA >>> 32;
",4,1,0,0,0,0,0,0,0,5,22,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1994,"        long d = shpiA & 0xffffffffL;
",4,1,0,0,0,0,0,0,0,5,29,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1996,"        long ac = a * c;
",6,1,0,0,0,0,0,0,0,7,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1997,"        long bd = b * d;
",6,1,0,0,0,0,0,0,0,7,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1998,"        long bc = b * c;
",6,1,0,0,0,0,0,0,0,7,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1999,"        long ad = a * d;
",6,1,0,0,0,0,0,0,0,7,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2001,"        long prodB = bd + (ad << 32);
",6,2,0,1,2,0,0,0,0,8,29,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2002,"        long prodA = ac + (ad >>> 32);
",6,2,0,1,2,0,0,0,0,8,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2004,"        boolean bita = (bd & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,6,47,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2005,"        boolean bitb = (ad & 0x80000000L ) != 0;
",4,2,0,1,2,0,0,0,0,6,40,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2006,"        boolean bitsum = (prodB & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,6,52,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2009,"        if ( (bita && bitb) ||
",4,2,0,1,3,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2011,"            prodA++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2014,"        bita = (prodB & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,42,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2015,"        bitb = (bc & 0x80000000L ) != 0;
",4,2,0,1,2,0,0,0,0,7,32,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2017,"        prodB = prodB + (bc << 32);
",6,2,0,1,2,0,0,0,0,9,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2018,"        prodA = prodA + (bc >>> 32);
",6,2,0,1,2,0,0,0,0,9,28,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2020,"        bitsum = (prodB & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,44,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2023,"        if ( (bita && bitb) ||
",4,2,0,1,3,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2025,"            prodA++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2029,"        c = shpiB >>> 32;
",4,1,0,0,0,0,0,0,0,6,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2030,"        d = shpiB & 0xffffffffL;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2031,"        ac = a * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2032,"        bc = b * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2033,"        ad = a * d;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2036,"        ac = ac + ((bc + ad) >>> 32);
",8,3,0,2,4,0,0,0,0,12,29,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2038,"        bita = (prodB & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,42,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2039,"        bitb = (ac & 0x8000000000000000L ) != 0;
",4,2,0,1,2,0,0,0,0,7,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2040,"        prodB += ac;
",4,0,0,0,0,0,0,0,0,5,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2041,"        bitsum = (prodB & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,44,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2043,"        if ( (bita && bitb) ||
",4,2,0,1,3,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2045,"            prodA++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2049,"        c = shpi0 >>> 32;
",4,1,0,0,0,0,0,0,0,6,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2050,"        d = shpi0 & 0xffffffffL;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2052,"        bd = b * d;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2053,"        bc = b * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2054,"        ad = a * d;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2056,"        prodA += bd + ((bc + ad) << 32);
",8,3,0,2,4,0,0,0,0,12,32,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2068,"        int intPart = (int)(prodA >>> 62);
",4,1,0,2,4,0,0,0,0,5,34,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2071,"        prodA <<= 2;
",2,0,0,0,0,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2072,"        prodA |= prodB >>> 62;
",4,1,0,0,0,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2073,"        prodB <<= 2;
",2,0,0,0,0,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2076,"        a = prodA >>> 32;
",4,1,0,0,0,0,0,0,0,6,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2077,"        b = prodA & 0xffffffffL;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2079,"        c = PI_O_4_BITS[0] >>> 32;
",2,1,1,1,2,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2080,"        d = PI_O_4_BITS[0] & 0xffffffffL;
",2,1,1,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2082,"        ac = a * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2083,"        bd = b * d;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2084,"        bc = b * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2085,"        ad = a * d;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2087,"        long prod2B = bd + (ad << 32);
",6,2,0,1,2,0,0,0,0,8,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2088,"        long prod2A = ac + (ad >>> 32);
",6,2,0,1,2,0,0,0,0,8,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2090,"        bita = (bd & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2091,"        bitb = (ad & 0x80000000L ) != 0;
",4,2,0,1,2,0,0,0,0,7,32,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2092,"        bitsum = (prod2B & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,45,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2095,"        if ( (bita && bitb) ||
",4,2,0,1,3,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2097,"            prod2A++;
",2,0,0,0,0,0,0,0,0,3,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2100,"        bita = (prod2B & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,43,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2101,"        bitb = (bc & 0x80000000L ) != 0;
",4,2,0,1,2,0,0,0,0,7,32,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2103,"        prod2B = prod2B + (bc << 32);
",6,2,0,1,2,0,0,0,0,9,29,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2104,"        prod2A = prod2A + (bc >>> 32);
",6,2,0,1,2,0,0,0,0,9,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2106,"        bitsum = (prod2B & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,45,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2109,"        if ( (bita && bitb) ||
",4,2,0,1,3,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2111,"            prod2A++;
",2,0,0,0,0,0,0,0,0,3,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2115,"        c = PI_O_4_BITS[1] >>> 32;
",2,1,1,1,2,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2116,"        d = PI_O_4_BITS[1] & 0xffffffffL;
",2,1,1,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2117,"        ac = a * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2118,"        bc = b * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2119,"        ad = a * d;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2122,"        ac = ac + ((bc + ad) >>> 32);
",8,3,0,2,4,0,0,0,0,12,29,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2124,"        bita = (prod2B & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,43,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2125,"        bitb = (ac & 0x8000000000000000L ) != 0;
",4,2,0,1,2,0,0,0,0,7,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2126,"        prod2B += ac;
",4,0,0,0,0,0,0,0,0,5,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2127,"        bitsum = (prod2B & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,45,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2129,"        if ( (bita && bitb) ||
",4,2,0,1,3,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2131,"            prod2A++;
",2,0,0,0,0,0,0,0,0,3,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2135,"        a = prodB >>> 32;
",4,1,0,0,0,0,0,0,0,6,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2136,"        b = prodB & 0xffffffffL;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2137,"        c = PI_O_4_BITS[0] >>> 32;
",2,1,1,1,2,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2138,"        d = PI_O_4_BITS[0] & 0xffffffffL;
",2,1,1,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2139,"        ac = a * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2140,"        bc = b * c;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2141,"        ad = a * d;
",6,1,0,0,0,0,0,0,0,8,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2144,"        ac = ac + ((bc + ad) >>> 32);
",8,3,0,2,4,0,0,0,0,12,29,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2146,"        bita = (prod2B & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,43,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2147,"        bitb = (ac & 0x8000000000000000L ) != 0;
",4,2,0,1,2,0,0,0,0,7,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2148,"        prod2B += ac;
",4,0,0,0,0,0,0,0,0,5,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2149,"        bitsum = (prod2B & 0x8000000000000000L) != 0;
",4,2,0,1,2,0,0,0,0,7,45,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2151,"        if ( (bita && bitb) ||
",4,2,0,1,3,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2153,"            prod2A++;
",2,0,0,0,0,0,0,0,0,3,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2157,"        double tmpA = (prod2A >>> 12) / 4503599627370496.0;  // High order 52 bits
",4,2,0,1,2,0,0,0,0,6,74,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2158,"        double tmpB = (((prod2A & 0xfffL) << 40) + (prod2B >>> 24)) / 4503599627370496.0 / 4503599627370496.0; // Low bits
",6,5,0,4,8,0,0,0,0,11,114,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2160,"        double sumA = tmpA + tmpB;
",6,1,0,0,0,0,0,0,0,7,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2161,"        double sumB = -(sumA - tmpA - tmpB);
",8,1,0,1,2,0,0,0,0,10,36,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2164,"        result[0] = intPart;
",2,0,1,1,2,0,0,0,0,5,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2165,"        result[1] = sumA * 2.0;
",2,1,1,1,2,0,0,0,0,6,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2166,"        result[2] = sumB * 2.0;
",2,1,1,1,2,0,0,0,0,6,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2167,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2175,"        boolean negative = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2176,"        int quadrant = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2178,"        double xb = 0.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2181,"        xa = x;
",4,0,0,0,0,0,0,0,0,5,7,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2182,"        if (x < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2183,"            negative = true;
",2,0,0,0,0,0,0,0,0,4,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2184,"            xa = -xa;
",4,0,0,0,0,0,0,0,0,6,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2188,"        if (xa == 0.0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2189,"            long bits = Double.doubleToLongBits(x);
",2,0,0,1,2,0,6,0,0,8,39,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2190,"            if (bits < 0) {
",2,1,0,1,3,0,0,0,0,3,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2191,"                return -0.0;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2193,"            return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2196,"        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
",10,3,0,1,3,0,0,0,0,13,49,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2197,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2201,"        if (xa > 3294198.0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2205,"            double reduceResults[] = new double[3];
",2,0,0,2,4,0,0,0,0,2,39,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2206,"            reducePayneHanek(xa, reduceResults);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2207,"            quadrant = ((int) reduceResults[0]) & 3;
",2,1,1,3,6,0,0,0,0,6,40,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2208,"            xa = reduceResults[1];
",2,0,1,1,2,0,0,0,0,5,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2209,"            xb = reduceResults[2];
",2,0,1,1,2,0,0,0,0,5,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2210,"        } else if (xa > 1.5707963267948966) {
",2,1,0,1,4,0,0,0,0,3,37,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2215,"            int k = (int)(xa * 0.6366197723675814);
",4,1,0,2,4,0,0,0,0,5,39,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2221,"                double a = -k * 1.570796251296997;
",4,1,0,0,0,0,0,0,0,6,34,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2222,"                remA = xa + a;
",6,1,0,0,0,0,0,0,0,8,14,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2223,"                remB = -(remA - xa - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2225,"                a = -k * 7.549789948768648E-8;
",4,1,0,0,0,0,0,0,0,7,30,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2226,"                double b = remA;
",4,0,0,0,0,0,0,0,0,4,16,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2227,"                remA = a + b;
",6,1,0,0,0,0,0,0,0,8,13,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2228,"                remB += -(remA - b - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2230,"                a = -k * 6.123233995736766E-17;
",4,1,0,0,0,0,0,0,0,7,31,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2231,"                b = remA;
",4,0,0,0,0,0,0,0,0,5,9,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2232,"                remA = a + b;
",6,1,0,0,0,0,0,0,0,8,13,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2233,"                remB += -(remA - b - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2235,"                if (remA > 0.0)
",2,1,0,1,2,0,0,0,0,3,15,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2236,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2241,"                k--;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2242,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2243,"            quadrant = k & 3;
",4,1,0,0,0,0,0,0,0,6,17,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2244,"            xa = remA;
",4,0,0,0,0,0,0,0,0,5,10,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2245,"            xb = remB;
",4,0,0,0,0,0,0,0,0,5,10,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2248,"        if (negative) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2249,"            quadrant ^= 2;  // Flip bit 1
",2,0,0,0,0,0,0,0,0,3,29,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2252,"        switch (quadrant) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2254,"                return sinQ(xa, xb);
",0,0,0,1,2,1,6,0,0,6,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2256,"                return cosQ(xa, xb);
",0,0,0,1,2,1,6,0,0,6,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2258,"                return -sinQ(xa, xb);
",0,0,0,1,2,1,6,0,0,7,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2260,"                return -cosQ(xa, xb);
",0,0,0,1,2,1,6,0,0,7,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2262,"                return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2272,"        int quadrant = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2275,"        double xa = x;
",4,0,0,0,0,0,0,0,0,4,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2276,"        if (x < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2277,"            xa = -xa;
",4,0,0,0,0,0,0,0,0,6,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2280,"        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
",10,3,0,1,3,0,0,0,0,13,49,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2281,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2285,"        double xb = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2286,"        if (xa > 3294198.0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2290,"            double reduceResults[] = new double[3];
",2,0,0,2,4,0,0,0,0,2,39,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2291,"            reducePayneHanek(xa, reduceResults);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2292,"            quadrant = ((int) reduceResults[0]) & 3;
",2,1,1,3,6,0,0,0,0,6,40,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2293,"            xa = reduceResults[1];
",2,0,1,1,2,0,0,0,0,5,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2294,"            xb = reduceResults[2];
",2,0,1,1,2,0,0,0,0,5,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2295,"        } else if (xa > 1.5707963267948966) {
",2,1,0,1,4,0,0,0,0,3,37,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2300,"            int k = (int)(xa * 0.6366197723675814);
",4,1,0,2,4,0,0,0,0,5,39,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2306,"                double a = -k * 1.570796251296997;
",4,1,0,0,0,0,0,0,0,6,34,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2307,"                remA = xa + a;
",6,1,0,0,0,0,0,0,0,8,14,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2308,"                remB = -(remA - xa - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2310,"                a = -k * 7.549789948768648E-8;
",4,1,0,0,0,0,0,0,0,7,30,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2311,"                double b = remA;
",4,0,0,0,0,0,0,0,0,4,16,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2312,"                remA = a + b;
",6,1,0,0,0,0,0,0,0,8,13,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2313,"                remB += -(remA - b - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2315,"                a = -k * 6.123233995736766E-17;
",4,1,0,0,0,0,0,0,0,7,31,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2316,"                b = remA;
",4,0,0,0,0,0,0,0,0,5,9,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2317,"                remA = a + b;
",6,1,0,0,0,0,0,0,0,8,13,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2318,"                remB += -(remA - b - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2320,"                if (remA > 0.0)
",2,1,0,1,2,0,0,0,0,3,15,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2321,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2326,"                k--;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2327,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2328,"            quadrant = k & 3;
",4,1,0,0,0,0,0,0,0,6,17,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2329,"            xa = remA;
",4,0,0,0,0,0,0,0,0,5,10,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2330,"            xb = remB;
",4,0,0,0,0,0,0,0,0,5,10,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2336,"        switch (quadrant) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2338,"                return cosQ(xa, xb);
",0,0,0,1,2,1,6,0,0,6,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2340,"                return -sinQ(xa, xb);
",0,0,0,1,2,1,6,0,0,7,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2342,"                return -cosQ(xa, xb);
",0,0,0,1,2,1,6,0,0,7,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2344,"                return sinQ(xa, xb);
",0,0,0,1,2,1,6,0,0,6,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2346,"                return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2356,"        boolean negative = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2357,"        int quadrant = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2360,"        double xa = x;
",4,0,0,0,0,0,0,0,0,4,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2361,"        if (x < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2362,"            negative = true;
",2,0,0,0,0,0,0,0,0,4,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2363,"            xa = -xa;
",4,0,0,0,0,0,0,0,0,6,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2367,"        if (xa == 0.0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2368,"            long bits = Double.doubleToLongBits(x);
",2,0,0,1,2,0,6,0,0,8,39,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2369,"            if (bits < 0) {
",2,1,0,1,3,0,0,0,0,3,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2370,"                return -0.0;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2372,"            return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2375,"        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
",10,3,0,1,3,0,0,0,0,13,49,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2376,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2380,"        double xb = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2381,"        if (xa > 3294198.0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2385,"            double reduceResults[] = new double[3];
",2,0,0,2,4,0,0,0,0,2,39,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2386,"            reducePayneHanek(xa, reduceResults);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2387,"            quadrant = ((int) reduceResults[0]) & 3;
",2,1,1,3,6,0,0,0,0,6,40,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2388,"            xa = reduceResults[1];
",2,0,1,1,2,0,0,0,0,5,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2389,"            xb = reduceResults[2];
",2,0,1,1,2,0,0,0,0,5,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2390,"        } else if (xa > 1.5707963267948966) {
",2,1,0,1,4,0,0,0,0,3,37,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2395,"            int k = (int)(xa * 0.6366197723675814);
",4,1,0,2,4,0,0,0,0,5,39,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2401,"                double a = -k * 1.570796251296997;
",4,1,0,0,0,0,0,0,0,6,34,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2402,"                remA = xa + a;
",6,1,0,0,0,0,0,0,0,8,14,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2403,"                remB = -(remA - xa - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2405,"                a = -k * 7.549789948768648E-8;
",4,1,0,0,0,0,0,0,0,7,30,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2406,"                double b = remA;
",4,0,0,0,0,0,0,0,0,4,16,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2407,"                remA = a + b;
",6,1,0,0,0,0,0,0,0,8,13,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2408,"                remB += -(remA - b - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2410,"                a = -k * 6.123233995736766E-17;
",4,1,0,0,0,0,0,0,0,7,31,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2411,"                b = remA;
",4,0,0,0,0,0,0,0,0,5,9,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2412,"                remA = a + b;
",6,1,0,0,0,0,0,0,0,8,13,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2413,"                remB += -(remA - b - a);
",8,1,0,1,2,0,0,0,0,11,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2415,"                if (remA > 0.0)
",2,1,0,1,2,0,0,0,0,3,15,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2416,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2421,"                k--;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2422,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2423,"            quadrant = k & 3;
",4,1,0,0,0,0,0,0,0,6,17,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2424,"            xa = remA;
",4,0,0,0,0,0,0,0,0,5,10,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2425,"            xb = remB;
",4,0,0,0,0,0,0,0,0,5,10,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2428,"        if (xa > 1.5) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2430,"            final double pi2a = 1.5707963267948966;
",2,0,0,0,0,1,0,0,0,3,39,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2431,"            final double pi2b = 6.123233995736766E-17;
",2,0,0,0,0,1,0,0,0,3,42,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2433,"            final double a = pi2a - xa;
",6,1,0,0,0,1,0,0,0,8,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2434,"            double b = -(a - pi2a + xa);
",8,2,0,1,2,0,0,0,0,11,28,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2435,"            b += pi2b - xb;
",6,1,0,0,0,0,0,0,0,8,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2437,"            xa = a + b;
",6,1,0,0,0,0,0,0,0,8,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2438,"            xb = -(xa - a - b);
",8,1,0,1,2,0,0,0,0,11,19,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2439,"            quadrant ^= 1;
",2,0,0,0,0,0,0,0,0,3,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2440,"            negative ^= true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2444,"        if ((quadrant & 1) == 0) {
",2,2,0,2,5,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2445,"            result = tanQ(xa, xb, false);
",2,0,0,1,2,0,6,0,0,10,29,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2447,"            result = -tanQ(xa, xb, true);
",2,0,0,1,2,0,6,0,0,11,29,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2450,"        if (negative) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2451,"            result = -result;
",4,0,0,0,0,0,0,0,0,6,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2454,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2463,"        return atan(x, 0.0, false);
",0,0,0,1,2,1,4,0,0,5,27,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2473,"        boolean negate = false;
",2,0,0,0,0,0,0,0,0,3,23,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2476,"        if (xa < 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2478,"            xa = -xa;
",4,0,0,0,0,0,0,0,0,6,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2479,"            xb = -xb;
",4,0,0,0,0,0,0,0,0,6,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2480,"            negate = true;
",2,0,0,0,0,0,0,0,0,4,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2483,"        if (xa > 1.633123935319537E16) { // Very large input
",2,1,0,1,3,0,0,0,0,3,52,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2484,"            return (negate ^ leftPlane) ? (-Math.PI/2.0) : (Math.PI/2.0);
",12,3,0,3,6,1,0,0,0,16,61,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2488,"        if (xa < 1.0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2489,"            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);
",8,4,0,4,8,0,0,0,0,14,65,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2491,"            double temp = 1.0/xa;
",4,1,0,0,0,0,0,0,0,5,21,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2492,"            idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);
",8,4,0,4,8,0,0,0,0,15,74,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2494,"        double epsA = xa - TANGENT_TABLE_A[idx];
",4,1,1,1,2,0,0,0,0,9,40,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2495,"        double epsB = -(epsA - xa + TANGENT_TABLE_A[idx]);
",6,2,1,2,4,0,0,0,0,13,50,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2496,"        epsB += xb - TANGENT_TABLE_B[idx];
",4,1,1,1,2,0,0,0,0,10,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2498,"        double temp = epsA + epsB;
",6,1,0,0,0,0,0,0,0,7,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2499,"        epsB = -(temp - epsA - epsB);
",8,1,0,1,2,0,0,0,0,11,29,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2500,"        epsA = temp;
",4,0,0,0,0,0,0,0,0,5,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2503,"        temp = xa * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2504,"        double ya = xa + temp - temp;
",8,2,0,0,0,0,0,0,0,10,29,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2505,"        double yb = xb + xa - ya;
",8,2,0,0,0,0,0,0,0,10,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2506,"        xa = ya;
",4,0,0,0,0,0,0,0,0,5,8,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2507,"        xb += yb;
",4,0,0,0,0,0,0,0,0,5,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2510,"        if (idx == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2513,"            double denom = 1.0 / (1.0 + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));
",6,5,1,5,10,0,0,0,0,19,87,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2515,"            ya = epsA * denom;
",6,1,0,0,0,0,0,0,0,8,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2516,"            yb = epsB * denom;
",6,1,0,0,0,0,0,0,0,8,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2517,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2518,"            double temp2 = xa * TANGENT_TABLE_A[idx];
",4,1,1,1,2,0,0,0,0,9,41,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2519,"            double za = 1.0 + temp2;
",4,1,0,0,0,0,0,0,0,5,24,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2520,"            double zb = -(za - 1.0 - temp2);
",6,1,0,1,2,0,0,0,0,8,32,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2521,"            temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
",6,3,1,2,4,0,0,0,0,18,62,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2522,"            temp = za + temp2;
",6,1,0,0,0,0,0,0,0,8,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2523,"            zb += -(temp - za - temp2);
",8,1,0,1,2,0,0,0,0,11,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2524,"            za = temp;
",4,0,0,0,0,0,0,0,0,5,10,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2526,"            zb += xb * TANGENT_TABLE_B[idx];
",4,1,1,1,2,0,0,0,0,10,32,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2527,"            ya = epsA / za;
",6,1,0,0,0,0,0,0,0,8,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2529,"            temp = ya * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,25,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2530,"            final double yaa = (ya + temp) - temp;
",8,2,0,1,2,1,0,0,0,11,38,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2531,"            final double yab = ya - yaa;
",6,1,0,0,0,1,0,0,0,8,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2533,"            temp = za * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,25,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2534,"            final double zaa = (za + temp) - temp;
",8,2,0,1,2,1,0,0,0,11,38,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2535,"            final double zab = za - zaa;
",6,1,0,0,0,1,0,0,0,8,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2538,"            yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
",22,9,0,1,2,0,0,0,0,32,65,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2540,"            yb += -epsA * zb / za / za;
",10,3,0,0,0,0,0,0,0,15,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2541,"            yb += epsB / za;
",6,1,0,0,0,0,0,0,0,8,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2545,"        epsA = ya;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2546,"        epsB = yb;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2549,"        double epsA2 = epsA*epsA;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2560,"        yb = 0.07490822288864472;
",2,0,0,0,0,0,0,0,0,3,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2561,"        yb = yb * epsA2 + -0.09088450866185192;
",6,2,0,0,0,0,0,0,0,10,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2562,"        yb = yb * epsA2 + 0.11111095942313305;
",6,2,0,0,0,0,0,0,0,9,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2563,"        yb = yb * epsA2 + -0.1428571423679182;
",6,2,0,0,0,0,0,0,0,10,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2564,"        yb = yb * epsA2 + 0.19999999999923582;
",6,2,0,0,0,0,0,0,0,9,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2565,"        yb = yb * epsA2 + -0.33333333333333287;
",6,2,0,0,0,0,0,0,0,10,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2566,"        yb = yb * epsA2 * epsA;
",8,1,0,0,0,0,0,0,0,10,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2569,"        ya = epsA;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2571,"        temp = ya + yb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2572,"        yb = -(temp - ya - yb);
",8,1,0,1,2,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2573,"        ya = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2576,"        yb += epsB / (1.0 + epsA * epsA);
",8,3,0,1,2,0,0,0,0,12,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2582,"        double za = EIGHTHES[idx] + ya;
",4,1,1,1,2,0,0,0,0,9,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2583,"        double zb = -(za - EIGHTHES[idx] - ya);
",6,1,1,2,4,0,0,0,0,12,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2584,"        temp = za + yb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2585,"        zb += -(temp - za - yb);
",8,1,0,1,2,0,0,0,0,11,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2586,"        za = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2588,"        result = za + zb;
",6,1,0,0,0,0,0,0,0,8,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2589,"        resultb = -(result - za - zb);
",8,1,0,1,2,0,0,0,0,11,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2591,"        if (leftPlane) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2593,"            final double pia = 1.5707963267948966*2.0;
",2,1,0,0,0,1,0,0,0,4,42,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2594,"            final double pib = 6.123233995736766E-17*2.0;
",2,1,0,0,0,1,0,0,0,4,45,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2596,"            za = pia - result;
",6,1,0,0,0,0,0,0,0,8,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2597,"            zb = -(za - pia + result);
",8,2,0,1,2,0,0,0,0,12,26,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2598,"            zb += pib - resultb;
",6,1,0,0,0,0,0,0,0,8,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2600,"            result = za + zb;
",6,1,0,0,0,0,0,0,0,8,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2601,"            resultb = -(result - za - zb);
",8,1,0,1,2,0,0,0,0,11,30,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2605,"        if (negate ^ leftPlane) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2606,"            result = -result;
",4,0,0,0,0,0,0,0,0,6,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2609,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2619,"        if (x !=x || y != y) {
",8,3,0,1,3,0,0,0,0,11,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2620,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2623,"        if (y == 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2624,"            double result = x*y;
",6,1,0,0,0,0,0,0,0,7,20,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2625,"            double invx = 1.0/x;
",4,1,0,0,0,0,0,0,0,5,20,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2626,"            double invy = 1.0/y;
",4,1,0,0,0,0,0,0,0,5,20,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2628,"            if (invx == 0.0) { // X is infinite
",2,1,0,1,3,0,0,0,0,3,35,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2629,"                if (x > 0) {
",2,1,0,1,3,0,0,0,0,3,12,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2630,"                    return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2632,"                    return Math.PI;
",4,0,0,0,0,1,0,0,0,4,15,11,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2636,"            if (result != result) { // y must be infinite
",4,1,0,1,3,0,0,0,0,5,45,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2637,"                return x/y;
",4,1,0,0,0,1,0,0,0,5,11,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2640,"            if (x < 0.0 || invx < 0.0) {
",4,3,0,1,3,0,0,0,0,7,28,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2641,"                if (y < 0.0 || invy < 0.0) {
",4,3,0,1,3,0,0,0,0,7,28,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2642,"                    return -Math.PI;
",4,0,0,0,0,1,0,0,0,5,16,10,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2644,"                    return Math.PI;
",4,0,0,0,0,1,0,0,0,4,15,11,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2647,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2651,"        if (y == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2652,"            if (x == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2653,"                return Math.PI/4.0;
",4,1,0,0,0,1,0,0,0,5,19,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2656,"            if (x == Double.NEGATIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2657,"                return Math.PI*3.0/4.0;
",4,2,0,0,0,1,0,0,0,6,23,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2660,"            return Math.PI/2.0;
",4,1,0,0,0,1,0,0,0,5,19,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2663,"        if (y == Double.NEGATIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2664,"            if (x == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2665,"                return -Math.PI/4.0;
",4,1,0,0,0,1,0,0,0,6,20,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2668,"            if (x == Double.NEGATIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2669,"                return -Math.PI*3.0/4.0;
",4,2,0,0,0,1,0,0,0,7,24,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2672,"            return -Math.PI/2.0;
",4,1,0,0,0,1,0,0,0,6,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2675,"        if (x == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2676,"            if (y > 0.0 || 1/y > 0.0) {
",4,4,0,1,3,0,0,0,0,8,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2677,"                return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2680,"            if (y < 0.0 || 1/y < 0.0) {
",4,4,0,1,3,0,0,0,0,8,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2681,"                return -0.0;
",0,0,0,0,0,1,0,0,0,1,12,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2685,"        if (x == Double.NEGATIVE_INFINITY)
",6,1,0,1,2,0,0,0,0,7,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2687,"            if (y > 0.0 || 1/y > 0.0) {
",4,4,0,1,3,0,0,0,0,8,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2688,"                return Math.PI;
",4,0,0,0,0,1,0,0,0,4,15,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2691,"            if (y < 0.0 || 1/y < 0.0) {
",4,4,0,1,3,0,0,0,0,8,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2692,"                return -Math.PI;
",4,0,0,0,0,1,0,0,0,5,16,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2696,"        if (x == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2697,"            if (y > 0.0 || 1/y > 0.0) {
",4,4,0,1,3,0,0,0,0,8,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2698,"                return Math.PI/2.0;
",4,1,0,0,0,1,0,0,0,5,19,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2701,"            if (y < 0.0 || 1/y < 0.0) {
",4,4,0,1,3,0,0,0,0,8,27,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2702,"                return -Math.PI/2.0;
",4,1,0,0,0,1,0,0,0,6,20,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2706,"        if (x > 8e298 || x < -8e298) { // This would cause split of x to fail
",4,3,0,1,3,0,0,0,0,8,69,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2707,"            x *= 9.31322574615478515625E-10;
",2,0,0,0,0,0,0,0,0,3,32,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2708,"            y *= 9.31322574615478515625E-10;
",2,0,0,0,0,0,0,0,0,3,32,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2712,"        double temp = x * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2713,"        final double xa = x + temp - temp;
",8,2,0,0,0,1,0,0,0,11,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2714,"        final double xb = x - xa;
",6,1,0,0,0,1,0,0,0,8,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2717,"        final double r = y/x;
",6,1,0,0,0,1,0,0,0,8,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2718,"        temp = r * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2719,"        double ra = r + temp - temp;
",8,2,0,0,0,0,0,0,0,10,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2720,"        double rb = r - ra;
",6,1,0,0,0,0,0,0,0,7,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2722,"        rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
",22,9,0,1,2,0,0,0,0,32,54,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2724,"        temp = ra + rb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2725,"        rb = -(temp - ra - rb);
",8,1,0,1,2,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2726,"        ra = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2729,"        double result = atan(ra, rb, x < 0);
",4,1,0,1,2,0,6,0,0,11,36,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2731,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2739,"      if (x != x) {
",4,1,0,1,3,0,0,0,0,5,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2740,"          return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2743,"      if (x > 1.0 || x < -1.0) {
",4,3,0,1,3,0,0,0,0,8,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2744,"          return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2747,"      if (x == 1.0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2748,"          return Math.PI/2.0;
",4,1,0,0,0,1,0,0,0,5,19,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2751,"      if (x == -1.0) {
",2,1,0,1,3,0,0,0,0,4,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2752,"          return -Math.PI/2.0;
",4,1,0,0,0,1,0,0,0,6,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2758,"      double temp = x * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2759,"      final double xa = x + temp - temp;
",8,2,0,0,0,1,0,0,0,11,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2760,"      final double xb = x - xa;
",6,1,0,0,0,1,0,0,0,8,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2763,"      double ya = xa*xa;
",6,1,0,0,0,0,0,0,0,7,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2764,"      double yb = xa*xb*2.0 + xb*xb;
",10,3,0,0,0,0,0,0,0,13,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2767,"      ya = -ya;
",4,0,0,0,0,0,0,0,0,6,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2768,"      yb = -yb;
",4,0,0,0,0,0,0,0,0,6,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2770,"      double za = 1.0 + ya;
",4,1,0,0,0,0,0,0,0,5,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2771,"      double zb = -(za - 1.0 - ya);
",6,1,0,1,2,0,0,0,0,8,29,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2773,"      temp = za + yb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2774,"      zb += -(temp - za - yb);
",8,1,0,1,2,0,0,0,0,11,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2775,"      za = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2779,"      y = sqrt(za);
",2,0,0,1,2,0,4,0,0,7,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2780,"      temp = y * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2781,"      ya = y + temp - temp;
",8,2,0,0,0,0,0,0,0,11,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2782,"      yb = y - ya;
",6,1,0,0,0,0,0,0,0,8,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2785,"      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);
",18,8,0,2,4,0,0,0,0,27,47,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2788,"      double dx = zb / (2.0*y);
",6,2,0,1,2,0,0,0,0,8,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2791,"      double r = x/y;
",6,1,0,0,0,0,0,0,0,7,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2792,"      temp = r * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2793,"      double ra = r + temp - temp;
",8,2,0,0,0,0,0,0,0,10,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2794,"      double rb = r - ra;
",6,1,0,0,0,0,0,0,0,7,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2796,"      rb += (x - ra*ya - ra*yb - rb*ya - rb*yb) / y;  // Correct for rounding in division
",22,9,0,1,2,0,0,0,0,32,83,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2797,"      rb += -x * dx / y / y;  // Add in effect additional bits of sqrt.
",10,3,0,0,0,0,0,0,0,15,65,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2799,"      temp = ra + rb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2800,"      rb = -(temp - ra - rb);
",8,1,0,1,2,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2801,"      ra = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2803,"      return atan(ra, rb, false);
",0,0,0,1,2,1,6,0,0,7,27,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2811,"      if (x != x) {
",4,1,0,1,3,0,0,0,0,5,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2812,"          return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2815,"      if (x > 1.0 || x < -1.0) {
",4,3,0,1,3,0,0,0,0,8,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2816,"          return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2819,"      if (x == -1.0) {
",2,1,0,1,3,0,0,0,0,4,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2820,"          return Math.PI;
",4,0,0,0,0,1,0,0,0,4,15,7,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2823,"      if (x == 1.0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2824,"          return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2827,"      if (x == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2828,"          return Math.PI/2.0;
",4,1,0,0,0,1,0,0,0,5,19,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2834,"      double temp = x * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2835,"      final double xa = x + temp - temp;
",8,2,0,0,0,1,0,0,0,11,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2836,"      final double xb = x - xa;
",6,1,0,0,0,1,0,0,0,8,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2839,"      double ya = xa*xa;
",6,1,0,0,0,0,0,0,0,7,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2840,"      double yb = xa*xb*2.0 + xb*xb;
",10,3,0,0,0,0,0,0,0,13,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2843,"      ya = -ya;
",4,0,0,0,0,0,0,0,0,6,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2844,"      yb = -yb;
",4,0,0,0,0,0,0,0,0,6,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2846,"      double za = 1.0 + ya;
",4,1,0,0,0,0,0,0,0,5,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2847,"      double zb = -(za - 1.0 - ya);
",6,1,0,1,2,0,0,0,0,8,29,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2849,"      temp = za + yb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2850,"      zb += -(temp - za - yb);
",8,1,0,1,2,0,0,0,0,11,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2851,"      za = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2854,"      double y = sqrt(za);
",2,0,0,1,2,0,4,0,0,6,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2855,"      temp = y * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2856,"      ya = y + temp - temp;
",8,2,0,0,0,0,0,0,0,11,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2857,"      yb = y - ya;
",6,1,0,0,0,0,0,0,0,8,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2860,"      yb += (za - ya*ya - 2*ya*yb - yb*yb) / (2.0*y);
",18,8,0,2,4,0,0,0,0,27,47,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2863,"      yb += zb / (2.0*y);
",6,2,0,1,2,0,0,0,0,9,19,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2864,"      y = ya+yb;
",6,1,0,0,0,0,0,0,0,8,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2865,"      yb = -(y - ya - yb);
",8,1,0,1,2,0,0,0,0,11,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2868,"      double r = y/x;
",6,1,0,0,0,0,0,0,0,7,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2869,"      temp = r * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2870,"      double ra = r + temp - temp;
",8,2,0,0,0,0,0,0,0,10,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2871,"      double rb = r - ra;
",6,1,0,0,0,0,0,0,0,7,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2873,"      rb += (y - ra*xa - ra*xb - rb*xa - rb*xb) / x;  // Correct for rounding in division
",22,9,0,1,2,0,0,0,0,32,83,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2874,"      rb += yb / x;  // Add in effect additional bits of sqrt.
",6,1,0,0,0,0,0,0,0,8,56,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2876,"      temp = ra + rb;
",6,1,0,0,0,0,0,0,0,8,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2877,"      rb = -(temp - ra - rb);
",8,1,0,1,2,0,0,0,0,11,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2878,"      ra = temp;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2880,"      return atan(ra, rb, x<0);
",2,1,0,1,2,1,6,0,0,9,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2889,"      long inbits = Double.doubleToLongBits(x);
",2,0,0,1,2,0,6,0,0,8,41,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2890,"      int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
",4,3,0,3,6,0,0,0,0,7,53,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2891,"      boolean subnormal = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2893,"      if (exponent == -1023) {
",2,1,0,1,3,0,0,0,0,4,24,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2894,"          if (x == 0) {
",2,1,0,1,3,0,0,0,0,3,13,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2895,"              return x;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2899,"          subnormal = true;
",2,0,0,0,0,0,0,0,0,4,17,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2900,"          x *= 1.8014398509481984E16;  // 2^54
",2,0,0,0,0,0,0,0,0,3,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2901,"          inbits = Double.doubleToLongBits(x);
",2,0,0,1,2,0,6,0,0,9,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2902,"          exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
",4,3,0,3,6,0,0,0,0,8,49,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2905,"      if (exponent == 1024) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2907,"          return x;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2911,"      int exp3 = exponent / 3;
",4,1,0,0,0,0,0,0,0,5,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2914,"      double p2 = Double.longBitsToDouble((inbits & 0x8000000000000000L) | 
",4,2,0,1,3,0,4,0,0,10,68,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2918,"      final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);
",4,2,0,2,4,1,4,0,0,11,98,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2921,"      double est = -0.010714690733195933;
",2,0,0,0,0,0,0,0,0,3,35,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2922,"      est = est * mant + 0.0875862700108075;
",6,2,0,0,0,0,0,0,0,9,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2923,"      est = est * mant + -0.3058015757857271;
",6,2,0,0,0,0,0,0,0,10,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2924,"      est = est * mant + 0.7249995199969751;
",6,2,0,0,0,0,0,0,0,9,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2925,"      est = est * mant + 0.5039018405998233;
",6,2,0,0,0,0,0,0,0,9,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2927,"      est *= CBRTTWO[exponent % 3 + 2];
",4,2,1,1,2,0,0,0,0,9,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2932,"      final double xs = x / (p2*p2*p2); 
",10,2,0,1,2,1,0,0,0,13,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2933,"      est += (xs - est*est*est) / (3*est*est);
",14,4,0,2,4,0,0,0,0,19,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2934,"      est += (xs - est*est*est) / (3*est*est);
",14,4,0,2,4,0,0,0,0,19,40,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2937,"      double temp = est * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,33,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2938,"      double ya = est + temp - temp;
",8,2,0,0,0,0,0,0,0,10,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2939,"      double yb = est - ya;
",6,1,0,0,0,0,0,0,0,7,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2941,"      double za = ya * ya;
",6,1,0,0,0,0,0,0,0,7,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2942,"      double zb = ya * yb * 2.0 + yb * yb;
",10,3,0,0,0,0,0,0,0,13,36,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2943,"      temp = za * 1073741824.0;
",4,1,0,0,0,0,0,0,0,6,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2944,"      double temp2 = za + temp - temp;
",8,2,0,0,0,0,0,0,0,10,32,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2945,"      zb += (za - temp2);
",6,1,0,1,2,0,0,0,0,8,19,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2946,"      za = temp2;
",4,0,0,0,0,0,0,0,0,5,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2948,"      zb = za * yb + ya * zb + zb * yb;
",14,5,0,0,0,0,0,0,0,20,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2949,"      za = za * ya;
",6,1,0,0,0,0,0,0,0,8,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2951,"      double na = xs - za;
",6,1,0,0,0,0,0,0,0,7,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2952,"      double nb = -(na - xs + za);
",8,2,0,1,2,0,0,0,0,11,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2953,"      nb -= zb;
",4,0,0,0,0,0,0,0,0,5,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2955,"      est += (na+nb)/(3*est*est);
",10,3,0,2,4,0,0,0,0,14,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2958,"      est *= p2;
",4,0,0,0,0,0,0,0,0,5,10,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2960,"      if (subnormal) {
",2,0,0,1,3,0,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2961,"          est *= 3.814697265625E-6;  // 2^-18
",2,0,0,0,0,0,0,0,0,3,35,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2964,"      return est;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2974,"        final double facta = 0.01745329052209854;
",2,0,0,0,0,1,0,0,0,3,41,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2975,"        final double factb = 1.997844754509471E-9;
",2,0,0,0,0,1,0,0,0,3,42,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2977,"        double temp = x * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2978,"        double xa = x + temp - temp;
",8,2,0,0,0,0,0,0,0,10,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2979,"        double xb = x - xa;
",6,1,0,0,0,0,0,0,0,7,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2981,"        return xb * factb + xb * facta + xa * factb + xa * facta;
",16,7,0,0,0,1,0,0,0,23,57,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2991,"        final double facta = 57.2957763671875;
",2,0,0,0,0,1,0,0,0,3,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2992,"        final double factb = 3.145894820876798E-6;
",2,0,0,0,0,1,0,0,0,3,42,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2994,"        double temp = x * 1073741824.0;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2995,"        double xa = x + temp - temp;
",8,2,0,0,0,0,0,0,0,10,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2996,"        double xb = x - xa;
",6,1,0,0,0,0,0,0,0,7,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,2998,"        return xb * factb + xb * facta + xa * factb + xa * facta;
",16,7,0,0,0,1,0,0,0,23,57,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3007,"        return (x < 0) ? -x : x;
",6,1,0,1,2,1,0,0,0,8,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3025,"        return (x < 0.0f) ? -x : x;
",6,1,0,1,2,1,0,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3066,"        if (Double.isNaN(d) || Double.isInfinite(d)) {
",0,1,0,3,7,0,12,0,0,13,46,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3067,"            return d;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3068,"        } else if (d == 0) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3069,"            return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;
",10,1,0,1,2,1,0,0,0,12,62,8,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3075,"        long bits     = Double.doubleToLongBits(d);
",2,0,0,1,2,0,6,0,0,8,43,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3076,"        long sign     = bits & 0x8000000000000000L;
",4,1,0,0,0,0,0,0,0,5,43,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3077,"        long exponent = bits & 0x7ff0000000000000L;
",4,1,0,0,0,0,0,0,0,5,43,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3078,"        long mantissa = bits & 0x000fffffffffffffL;
",4,1,0,0,0,0,0,0,0,5,43,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3080,"        if (d * (direction - d) >= 0) {
",6,3,0,2,5,0,0,0,0,9,31,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3082,"            if (mantissa == 0x000fffffffffffffL) {
",2,1,0,1,3,0,0,0,0,3,38,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3083,"                return Double.longBitsToDouble(sign |
",2,1,0,0,1,1,4,0,0,7,37,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3086,"                return Double.longBitsToDouble(sign |
",2,1,0,0,1,1,4,0,0,7,37,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3091,"            if (mantissa == 0L) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3092,"                return Double.longBitsToDouble(sign |
",2,1,0,0,1,1,4,0,0,7,37,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3096,"                return Double.longBitsToDouble(sign |
",2,1,0,0,1,1,4,0,0,7,37,9,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3110,"        if (x != x) { // NaN
",4,1,0,1,3,0,0,0,0,5,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3111,"            return x;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3114,"        if (x >= 4503599627370496.0 || x <= -4503599627370496.0) {
",4,3,0,1,3,0,0,0,0,8,58,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3115,"            return x;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3118,"        y = (long) x;
",4,0,0,1,2,0,0,0,0,5,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3119,"        if (x < 0 && y != x) {
",6,3,0,1,3,0,0,0,0,9,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3120,"            y--;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3123,"        if (y == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3124,"            return x*y;
",4,1,0,0,0,1,0,0,0,5,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3127,"        return (double) y;
",2,0,0,1,2,1,0,0,0,2,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3137,"        if (x != x) { // NaN
",4,1,0,1,3,0,0,0,0,5,20,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3138,"            return x;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3141,"        y = floor(x);
",2,0,0,1,2,0,4,0,0,7,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3142,"        if (y == x) {
",4,1,0,1,3,0,0,0,0,5,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3143,"            return y;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3146,"        y += 1.0;
",2,0,0,0,0,0,0,0,0,3,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3148,"        if (y == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3149,"            return x*y;
",4,1,0,0,0,1,0,0,0,5,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3152,"        return y;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3160,"        double y = floor(x);
",2,0,0,1,2,0,4,0,0,6,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3161,"        double d = x - y;
",6,1,0,0,0,0,0,0,0,7,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3163,"        if (d > 0.5) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3164,"            return y+1.0;
",2,1,0,0,0,1,0,0,0,3,13,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3166,"        if (d < 0.5) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3167,"            return y;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3171,"        long z = (long) y;
",4,0,0,1,2,0,0,0,0,4,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3172,"        return (z & 1) == 0 ? y : y + 1.0;
",6,3,0,1,2,1,0,0,0,9,34,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3180,"        return (long) floor(x + 0.5);
",2,1,0,2,4,1,2,0,0,5,29,6,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3188,"        return Math.round(x);
",0,0,0,1,2,1,6,0,0,6,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3197,"        return (a <= b) ? a : b;
",8,1,0,1,2,1,0,0,0,9,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3206,"        return (a <= b) ? a : b;
",8,1,0,1,2,1,0,0,0,9,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3215,"        return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);
",16,2,0,3,6,1,4,0,0,22,59,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3233,"        return (a <= b) ? b : a;
",8,1,0,1,2,1,0,0,0,9,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3242,"        return (a <= b) ? b : a;
",8,1,0,1,2,1,0,0,0,9,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/FastMath,62,3251,"        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);
",16,2,0,3,6,1,4,0,0,22,59,5,0.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,73,"        for (int i = 0; i < value; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,74,"            incrementCount();
",0,0,0,1,2,0,2,0,0,2,17,7,0.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,76,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/Incrementor,62,85,"            throw new MaxCountExceededException(maximalCount);
",2,0,0,1,2,0,0,2,0,4,50,7,0.00000,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,43,"        this(null, max);
",2,0,0,1,2,0,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,44,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,53,"        super(specific,
",2,0,0,0,1,0,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,57,"        this.max = max;
",4,0,0,0,0,0,0,0,0,5,15,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,58,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,62,64,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,58,"                                     Object ... args) {
",2,0,0,0,2,0,0,2,0,4,18,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,59,"        this.specific = specific;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,60,"        this.general = general;
",4,0,0,0,0,0,0,0,0,5,23,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,61,"        arguments = ArgUtils.flatten(args);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,62,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,69,"        this(null, general, args);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,70,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,80,"        return MessageFactory.buildMessage(locale, specific, general, arguments);
",0,0,0,1,2,1,12,0,0,12,73,5,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,86,"        return getMessage(Locale.US);
",4,0,0,1,2,1,2,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,62,92,"        return getMessage(Locale.getDefault());
",0,0,0,2,4,1,6,0,0,6,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1806,"    public static enum OrderDirection {
",2,0,0,0,1,2,0,0,0,4,35,2,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1808,"        INCREASING,
",2,0,0,0,0,0,0,0,0,2,11,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1810,"        DECREASING
",2,0,0,0,0,0,0,0,0,2,10,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,88,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,89,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,102,"        long s = (long)x + (long)y;
",6,1,0,2,4,0,0,0,0,7,27,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,103,"        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {
",12,3,0,1,3,0,0,0,0,15,53,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,104,"            throw MathRuntimeException.createArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, x, y);
",4,0,0,1,2,0,8,0,0,12,98,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,106,"        return (int)s;
",2,0,0,1,2,1,0,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,120,"        return addAndCheck(a, b, LocalizedFormats.OVERFLOW_IN_ADDITION);
",4,0,0,1,2,1,6,0,0,10,64,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,136,"        if (a > b) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,138,"            ret = addAndCheck(b, a, pattern);
",2,0,0,1,2,0,8,0,0,11,33,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,142,"            if (a < 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,143,"                if (b < 0) {
",2,1,0,1,3,0,0,0,0,3,12,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,145,"                    if (Long.MIN_VALUE - b <= a) {
",8,2,0,1,3,0,0,0,0,10,30,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,146,"                        ret = a + b;
",6,1,0,0,0,0,0,0,0,8,12,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,148,"                        throw MathRuntimeException.createArithmeticException(pattern, a, b);
",0,0,0,1,2,0,10,0,0,10,68,13,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,152,"                    ret = a + b;
",6,1,0,0,0,0,0,0,0,8,12,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,159,"                if (a <= Long.MAX_VALUE - b) {
",8,2,0,1,3,0,0,0,0,10,30,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,160,"                    ret = a + b;
",6,1,0,0,0,0,0,0,0,8,12,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,162,"                    throw MathRuntimeException.createArithmeticException(pattern, a, b);
",0,0,0,1,2,0,10,0,0,10,68,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,166,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,195,"        checkBinomial(n, k);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,196,"        if ((n == k) || (k == 0)) {
",6,3,0,3,7,0,0,0,0,9,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,197,"            return 1;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,199,"        if ((k == 1) || (k == n - 1)) {
",6,4,0,3,7,0,0,0,0,10,31,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,200,"            return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,203,"        if (k > n / 2)
",4,2,0,1,2,0,0,0,0,6,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,204,"            return binomialCoefficient(n, n - k);
",4,1,0,1,2,1,4,0,0,9,37,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,211,"        long result = 1;
",2,0,0,0,0,0,0,0,0,2,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,212,"        if (n <= 61) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,214,"            int i = n - k + 1;
",6,2,0,0,0,0,0,0,0,8,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,215,"            for (int j = 1; j <= k; j++) {
",8,1,0,1,3,0,0,0,0,10,30,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,216,"                result = result * i / j;
",8,2,0,0,0,0,0,0,0,11,24,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,217,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,219,"        } else if (n <= 66) {
",2,1,0,1,4,0,0,0,0,3,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,222,"            int i = n - k + 1;
",6,2,0,0,0,0,0,0,0,8,18,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,223,"            for (int j = 1; j <= k; j++) {
",8,1,0,1,3,0,0,0,0,10,30,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,230,"                final long d = gcd(i, j);
",2,0,0,1,2,1,6,0,0,9,25,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,231,"                result = (result / (j / d)) * (i / d);
",12,4,0,3,6,0,0,0,0,17,38,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,232,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,234,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,238,"            int i = n - k + 1;
",6,2,0,0,0,0,0,0,0,8,18,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,239,"            for (int j = 1; j <= k; j++) {
",8,1,0,1,3,0,0,0,0,10,30,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,240,"                final long d = gcd(i, j);
",2,0,0,1,2,1,6,0,0,9,25,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,241,"                result = mulAndCheck(result / (j / d), i / d);
",12,3,0,2,4,0,2,0,0,18,46,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,242,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,245,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,271,"        checkBinomial(n, k);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,272,"        if ((n == k) || (k == 0)) {
",6,3,0,3,7,0,0,0,0,9,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,273,"            return 1d;
",0,0,0,0,0,1,0,0,0,0,10,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,275,"        if ((k == 1) || (k == n - 1)) {
",6,4,0,3,7,0,0,0,0,10,31,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,276,"            return n;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,278,"        if (k > n/2) {
",4,2,0,1,3,0,0,0,0,6,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,279,"            return binomialCoefficientDouble(n, n - k);
",4,1,0,1,2,1,4,0,0,9,43,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,281,"        if (n < 67) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,282,"            return binomialCoefficient(n,k);
",0,0,0,1,2,1,6,0,0,6,32,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,285,"        double result = 1d;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,286,"        for (int i = 1; i <= k; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,287,"             result *= (double)(n - k + i) / (double)i;
",10,3,0,3,6,0,0,0,0,14,42,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,290,"        return FastMath.floor(result + 0.5);
",2,1,0,1,2,1,4,0,0,7,36,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,312,"        checkBinomial(n, k);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,313,"        if ((n == k) || (k == 0)) {
",6,3,0,3,7,0,0,0,0,9,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,314,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,316,"        if ((k == 1) || (k == n - 1)) {
",6,4,0,3,7,0,0,0,0,10,31,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,317,"            return FastMath.log(n);
",0,0,0,1,2,1,6,0,0,6,23,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,324,"        if (n < 67) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,325,"            return FastMath.log(binomialCoefficient(n,k));
",0,0,0,2,4,1,10,0,0,10,46,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,332,"        if (n < 1030) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,333,"            return FastMath.log(binomialCoefficientDouble(n, k));
",0,0,0,2,4,1,10,0,0,10,53,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,336,"        if (k > n / 2) {
",4,2,0,1,3,0,0,0,0,6,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,337,"            return binomialCoefficientLog(n, n - k);
",4,1,0,1,2,1,4,0,0,9,40,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,343,"        double logSum = 0;
",2,0,0,0,0,0,0,0,0,2,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,346,"        for (int i = n - k + 1; i <= n; i++) {
",12,3,0,1,3,0,0,0,0,16,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,347,"            logSum += FastMath.log(i);
",2,0,0,1,2,0,6,0,0,9,26,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,351,"        for (int i = 2; i <= k; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,352,"            logSum -= FastMath.log(i);
",2,0,0,1,2,0,6,0,0,9,26,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,355,"        return logSum;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,366,"        if (n < k) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,367,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,371,"        if (n < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,372,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,376,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,389,"        if (equals(x, y, eps)) {
",0,0,0,2,5,0,8,0,0,8,24,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,390,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,391,"        } else if (x < y) {
",4,1,0,1,4,0,0,0,0,5,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,392,"          return -1;
",0,0,0,0,0,1,0,0,0,1,10,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,394,"        return 1;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,405,"        return (FastMath.exp(x) + FastMath.exp(-x)) / 2.0;
",2,2,0,3,6,1,10,0,0,15,50,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,429,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, 1);
",0,2,0,4,8,1,18,0,0,20,63,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,442,"        return equals(x, y, 1) || FastMath.abs(y - x) <= eps;
",6,3,0,2,4,1,10,0,0,19,53,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,456,"        return equalsIncludingNaN(x, y) || (FastMath.abs(y - x) <= eps);
",6,3,0,3,6,1,10,0,0,19,64,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,509,"        return (Double.isNaN(x) && Double.isNaN(y)) || equals(x, y, maxUlps);
",0,2,0,4,8,1,20,0,0,22,69,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,523,"        if ((x == null) || (y == null)) {
",4,3,0,3,7,0,0,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,524,"            return !((x == null) ^ (y == null));
",4,3,0,3,6,1,0,0,0,8,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,526,"        if (x.length != y.length) {
",8,1,0,1,3,0,0,0,0,9,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,527,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,529,"        for (int i = 0; i < x.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,530,"            if (!equals(x[i], y[i])) {
",0,0,1,4,9,0,2,0,0,11,26,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,531,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,534,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,548,"        if ((x == null) || (y == null)) {
",4,3,0,3,7,0,0,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,549,"            return !((x == null) ^ (y == null));
",4,3,0,3,6,1,0,0,0,8,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,551,"        if (x.length != y.length) {
",8,1,0,1,3,0,0,0,0,9,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,552,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,554,"        for (int i = 0; i < x.length; ++i) {
",10,1,0,1,3,0,0,0,0,12,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,555,"            if (!equalsIncludingNaN(x[i], y[i])) {
",0,0,1,4,9,0,2,0,0,11,38,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,556,"                return false;
",0,0,0,0,0,1,0,0,0,1,13,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,559,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,585,"        if (n < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,586,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,590,"        if (n > 20) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,591,"            throw new ArithmeticException(
",0,0,0,0,1,0,0,2,0,2,30,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,594,"        return FACTORIALS[n];
",0,0,1,1,2,1,0,0,0,4,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,618,"        if (n < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,619,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,623,"        if (n < 21) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,624,"            return factorial(n);
",0,0,0,1,2,1,4,0,0,4,20,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,626,"        return FastMath.floor(FastMath.exp(factorialLog(n)) + 0.5);
",0,1,0,3,6,1,12,0,0,13,59,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,643,"        if (n < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,644,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,648,"        if (n < 21) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,649,"            return FastMath.log(factorial(n));
",0,0,0,2,4,1,8,0,0,8,34,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,651,"        double logSum = 0;
",2,0,0,0,0,0,0,0,0,2,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,652,"        for (int i = 2; i <= n; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,653,"            logSum += FastMath.log(i);
",2,0,0,1,2,0,6,0,0,9,26,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,655,"        return logSum;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,688,"        int u = p;
",4,0,0,0,0,0,0,0,0,4,10,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,689,"        int v = q;
",4,0,0,0,0,0,0,0,0,4,10,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,690,"        if ((u == 0) || (v == 0)) {
",4,3,0,3,7,0,0,0,0,7,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,691,"            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
",12,3,0,3,7,0,0,0,0,15,59,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,692,"                throw MathRuntimeException.createArithmeticException(
",0,0,0,0,1,0,4,0,0,4,53,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,696,"            return FastMath.abs(u) + FastMath.abs(v);
",0,1,0,2,4,1,12,0,0,13,41,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,703,"        if (u > 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,704,"            u = -u;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,706,"        if (v > 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,707,"            v = -v;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,710,"        int k = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,711,"        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are
",6,7,0,3,7,0,0,0,0,13,69,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,713,"            u /= 2;
",2,0,0,0,0,0,0,0,0,3,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,714,"            v /= 2;
",2,0,0,0,0,0,0,0,0,3,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,715,"            k++; // cast out twos.
",2,0,0,0,0,0,0,0,0,3,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,717,"        if (k == 31) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,718,"            throw MathRuntimeException.createArithmeticException(
",0,0,0,0,1,0,4,0,0,4,53,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,724,"        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;
",8,3,0,3,6,0,0,0,0,12,46,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,730,"            while ((t & 1) == 0) { // while t is even..
",2,2,0,2,5,0,0,0,0,4,43,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,731,"                t /= 2; // cast out twos
",2,0,0,0,0,0,0,0,0,3,24,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,734,"            if (t > 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,735,"                u = -t;
",4,0,0,0,0,0,0,0,0,6,7,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,737,"                v = t;
",4,0,0,0,0,0,0,0,0,5,6,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,740,"            t = (v - u) / 2;
",6,2,0,1,2,0,0,0,0,9,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,743,"        } while (t != 0);
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,744,"        return -u * (1 << k); // gcd is u*2^k
",4,2,0,1,2,1,0,0,0,7,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,777,"        long u = p;
",4,0,0,0,0,0,0,0,0,4,11,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,778,"        long v = q;
",4,0,0,0,0,0,0,0,0,4,11,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,779,"        if ((u == 0) || (v == 0)) {
",4,3,0,3,7,0,0,0,0,7,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,780,"            if ((u == Long.MIN_VALUE) || (v == Long.MIN_VALUE)){
",12,3,0,3,7,0,0,0,0,15,52,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,781,"                throw MathRuntimeException.createArithmeticException(
",0,0,0,0,1,0,4,0,0,4,53,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,785,"            return FastMath.abs(u) + FastMath.abs(v);
",0,1,0,2,4,1,12,0,0,13,41,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,792,"        if (u > 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,793,"            u = -u;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,795,"        if (v > 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,796,"            v = -v;
",4,0,0,0,0,0,0,0,0,6,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,799,"        int k = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,800,"        while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { // while u and v are
",6,7,0,3,7,0,0,0,0,13,69,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,802,"            u /= 2;
",2,0,0,0,0,0,0,0,0,3,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,803,"            v /= 2;
",2,0,0,0,0,0,0,0,0,3,7,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,804,"            k++; // cast out twos.
",2,0,0,0,0,0,0,0,0,3,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,806,"        if (k == 63) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,807,"            throw MathRuntimeException.createArithmeticException(
",0,0,0,0,1,0,4,0,0,4,53,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,813,"        long t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;
",8,3,0,3,6,0,0,0,0,12,47,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,819,"            while ((t & 1) == 0) { // while t is even..
",2,2,0,2,5,0,0,0,0,4,43,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,820,"                t /= 2; // cast out twos
",2,0,0,0,0,0,0,0,0,3,24,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,823,"            if (t > 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,824,"                u = -t;
",4,0,0,0,0,0,0,0,0,6,7,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,826,"                v = t;
",4,0,0,0,0,0,0,0,0,5,6,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,829,"            t = (v - u) / 2;
",6,2,0,1,2,0,0,0,0,9,16,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,832,"        } while (t != 0);
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,833,"        return -u * (1L << k); // gcd is u*2^k
",4,2,0,1,2,1,0,0,0,7,38,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,843,"        return new Double(value).hashCode();
",2,0,0,2,4,1,2,2,0,6,36,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,854,"        return Arrays.hashCode(value);
",0,0,0,1,2,1,6,0,0,6,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,865,"        return (x >= ZB) ? PB : NB;
",8,1,0,1,2,1,0,0,0,9,27,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,877,"        if (Double.isNaN(x)) {
",0,0,0,2,5,0,6,0,0,6,22,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,878,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,880,"        return (x >= 0.0) ? 1.0 : -1.0;
",2,1,0,1,2,1,0,0,0,4,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,891,"        if (Float.isNaN(x)) {
",0,0,0,2,5,0,6,0,0,6,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,892,"            return Float.NaN;
",4,0,0,0,0,1,0,0,0,4,17,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,894,"        return (x >= 0.0F) ? 1.0F : -1.0F;
",2,1,0,1,2,1,0,0,0,4,34,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,904,"        return (x >= 0) ? 1 : -1;
",2,1,0,1,2,1,0,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,914,"        return (x >= 0L) ? 1L : -1L;
",2,1,0,1,2,1,0,0,0,4,28,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,925,"        return (x >= ZS) ? PS : NS;
",8,1,0,1,2,1,0,0,0,9,27,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,952,"        if (a==0 || b==0){
",4,3,0,1,3,0,0,0,0,7,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,953,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,955,"        int lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));
",4,1,0,3,6,0,14,0,0,19,54,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,956,"        if (lcm == Integer.MIN_VALUE) {
",6,1,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,957,"            throw MathRuntimeException.createArithmeticException(
",0,0,0,0,1,0,4,0,0,4,53,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,961,"        return lcm;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,987,"        if (a==0 || b==0){
",4,3,0,1,3,0,0,0,0,7,18,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,988,"            return 0;
",0,0,0,0,0,1,0,0,0,0,9,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,990,"        long lcm = FastMath.abs(mulAndCheck(a / gcd(a, b), b));
",4,1,0,3,6,0,14,0,0,19,55,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,991,"        if (lcm == Long.MIN_VALUE){
",6,1,0,1,3,0,0,0,0,7,27,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,992,"            throw MathRuntimeException.createArithmeticException(
",0,0,0,0,1,0,4,0,0,4,53,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,996,"        return lcm;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1016,"        return FastMath.log(x)/FastMath.log(base);
",0,1,0,2,4,1,12,0,0,13,42,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1030,"        long m = ((long)x) * ((long)y);
",6,1,0,4,8,0,0,0,0,7,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1031,"        if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {
",12,3,0,1,3,0,0,0,0,15,53,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1032,"            throw new ArithmeticException(""overflow: mul"");
",0,0,0,1,2,0,0,2,0,3,47,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1034,"        return (int)m;
",2,0,0,1,2,1,0,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1049,"        String msg = ""overflow: multiply"";
",2,0,0,0,0,0,0,2,0,5,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1050,"        if (a > b) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1052,"            ret = mulAndCheck(b, a);
",2,0,0,1,2,0,6,0,0,9,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1054,"            if (a < 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1055,"                if (b < 0) {
",2,1,0,1,3,0,0,0,0,3,12,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1057,"                    if (a >= Long.MAX_VALUE / b) {
",8,2,0,1,3,0,0,0,0,10,30,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1058,"                        ret = a * b;
",6,1,0,0,0,0,0,0,0,8,12,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1060,"                        throw new ArithmeticException(msg);
",2,0,0,1,2,0,0,2,0,4,35,13,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1062,"                } else if (b > 0) {
",2,1,0,1,4,0,0,0,0,3,19,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1064,"                    if (Long.MIN_VALUE / b <= a) {
",8,2,0,1,3,0,0,0,0,10,30,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1065,"                        ret = a * b;
",6,1,0,0,0,0,0,0,0,8,12,13,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1067,"                        throw new ArithmeticException(msg);
",2,0,0,1,2,0,0,2,0,4,35,14,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1072,"                    ret = 0;
",2,0,0,0,0,0,0,0,0,3,8,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1074,"            } else if (a > 0) {
",2,1,0,1,4,0,0,0,0,3,19,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1079,"                if (a <= Long.MAX_VALUE / b) {
",8,2,0,1,3,0,0,0,0,10,30,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1080,"                    ret = a * b;
",6,1,0,0,0,0,0,0,0,8,12,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1082,"                    throw new ArithmeticException(msg);
",2,0,0,1,2,0,0,2,0,4,35,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1086,"                ret = 0;
",2,0,0,0,0,0,0,0,0,3,8,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1089,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1104,"        if ((d == 0) || Double.isNaN(d) || Double.isInfinite(d)) {
",2,2,0,4,9,0,12,0,0,16,58,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1105,"            return d;
",2,0,0,0,0,1,0,0,0,2,9,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1109,"        final long bits     = Double.doubleToLongBits(d);
",2,0,0,1,2,1,6,0,0,9,49,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1110,"        final long exponent = bits & 0x7ff0000000000000L;
",4,1,0,0,0,1,0,0,0,6,49,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1111,"        final long rest     = bits & 0x800fffffffffffffL;
",4,1,0,0,0,1,0,0,0,6,49,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1114,"        final long newBits = rest | (exponent + (((long) scaleFactor) << 52));
",8,3,0,4,8,1,0,0,0,12,70,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1115,"        return Double.longBitsToDouble(newBits);
",0,0,0,1,2,1,6,0,0,6,40,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1139,"         return a - TWO_PI * FastMath.floor((a + FastMath.PI - center) / TWO_PI);
",14,5,0,2,4,1,4,0,0,23,72,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1165,"         if (Double.isInfinite(normalizedSum)) {
",0,0,0,2,5,0,6,0,0,6,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1166,"             throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1169,"         if (Double.isNaN(normalizedSum)) {
",0,0,0,2,5,0,6,0,0,6,34,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1170,"             throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1173,"         double sum = 0d;
",2,0,0,0,0,0,0,0,0,2,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1174,"         final int len = values.length;
",6,0,0,0,0,1,0,0,0,7,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1175,"         double[] out = new double[len];
",2,0,1,2,4,0,0,0,0,4,31,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1176,"         for (int i = 0; i < len; i++) {
",8,1,0,1,3,0,0,0,0,10,31,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1177,"             if (Double.isInfinite(values[i])) {
",0,0,1,3,7,0,4,0,0,8,35,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1178,"                 throw MathRuntimeException.createArithmeticException(
",0,0,0,0,1,0,4,0,0,4,53,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1181,"             if (!Double.isNaN(values[i])) {
",0,0,1,3,7,0,4,0,0,9,31,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1182,"                 sum += values[i];
",2,0,1,1,2,0,0,0,0,7,17,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1185,"         if (sum == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1186,"             throw MathRuntimeException.createArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);
",4,0,0,1,2,0,4,0,0,8,90,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1188,"         for (int i = 0; i < len; i++) {
",8,1,0,1,3,0,0,0,0,10,31,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1189,"             if (Double.isNaN(values[i])) {
",0,0,1,3,7,0,4,0,0,8,30,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1190,"                 out[i] = Double.NaN;
",4,0,1,1,2,0,0,0,0,9,20,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1192,"                 out[i] = values[i] * normalizedSum / sum;
",4,2,1,2,4,0,0,0,0,15,41,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1195,"         return out;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1208,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);
",4,0,0,1,2,1,6,0,0,10,49,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1225,"            return (new BigDecimal
",0,0,0,0,1,1,0,2,0,2,22,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1229,"        } catch (NumberFormatException ex) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1230,"            if (Double.isInfinite(x)) {
",0,0,0,2,5,0,6,0,0,6,27,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1231,"                return x;
",2,0,0,0,0,1,0,0,0,2,9,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1233,"                return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1248,"        return round(x, scale, BigDecimal.ROUND_HALF_UP);
",4,0,0,1,2,1,6,0,0,10,49,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1264,"        float sign = indicator(x);
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1265,"        float factor = (float)FastMath.pow(10.0f, scale) * sign;
",4,1,0,2,4,0,6,0,0,11,56,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1266,"        return (float)roundUnscaled(x * factor, sign, roundingMethod) / factor;
",6,2,0,2,4,1,6,0,0,14,71,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1283,"        switch (roundingMethod) {
",2,0,0,1,3,0,0,0,0,2,25,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1285,"            if (sign == -1) {
",2,1,0,1,3,0,0,0,0,4,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1286,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));
",6,0,0,2,4,0,10,0,0,17,82,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1288,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));
",6,0,0,2,4,0,10,0,0,17,81,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1290,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1292,"            unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));
",6,0,0,2,4,0,10,0,0,17,82,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1293,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1295,"            if (sign == -1) {
",2,1,0,1,3,0,0,0,0,4,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1296,"                unscaled = FastMath.ceil(FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY));
",6,0,0,2,4,0,10,0,0,17,81,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1298,"                unscaled = FastMath.floor(FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY));
",6,0,0,2,4,0,10,0,0,17,82,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1300,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1302,"            unscaled = FastMath.nextAfter(unscaled, Double.NEGATIVE_INFINITY);
",6,0,0,1,2,0,6,0,0,13,66,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1303,"            double fraction = unscaled - FastMath.floor(unscaled);
",4,1,0,1,2,0,6,0,0,11,54,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1304,"            if (fraction > 0.5) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1305,"                unscaled = FastMath.ceil(unscaled);
",2,0,0,1,2,0,6,0,0,9,35,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1307,"                unscaled = FastMath.floor(unscaled);
",2,0,0,1,2,0,6,0,0,9,36,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1309,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1312,"            double fraction = unscaled - FastMath.floor(unscaled);
",4,1,0,1,2,0,6,0,0,11,54,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1313,"            if (fraction > 0.5) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1314,"                unscaled = FastMath.ceil(unscaled);
",2,0,0,1,2,0,6,0,0,9,35,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1315,"            } else if (fraction < 0.5) {
",2,1,0,1,4,0,0,0,0,3,28,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1316,"                unscaled = FastMath.floor(unscaled);
",2,0,0,1,2,0,6,0,0,9,36,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1319,"                if (FastMath.floor(unscaled) / 2.0 == FastMath.floor(Math
",0,3,0,1,4,0,12,0,0,15,57,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1321,"                    unscaled = FastMath.floor(unscaled);
",2,0,0,1,2,0,6,0,0,9,36,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1323,"                    unscaled = FastMath.ceil(unscaled);
",2,0,0,1,2,0,6,0,0,9,35,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1326,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1329,"            unscaled = FastMath.nextAfter(unscaled, Double.POSITIVE_INFINITY);
",6,0,0,1,2,0,6,0,0,13,66,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1330,"            double fraction = unscaled - FastMath.floor(unscaled);
",4,1,0,1,2,0,6,0,0,11,54,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1331,"            if (fraction >= 0.5) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1332,"                unscaled = FastMath.ceil(unscaled);
",2,0,0,1,2,0,6,0,0,9,35,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1334,"                unscaled = FastMath.floor(unscaled);
",2,0,0,1,2,0,6,0,0,9,36,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1336,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1339,"            if (unscaled != FastMath.floor(unscaled)) {
",2,1,0,2,5,0,6,0,0,9,43,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1340,"                throw new ArithmeticException(""Inexact result from rounding"");
",0,0,0,1,2,0,0,2,0,3,62,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1344,"            unscaled = FastMath.ceil(FastMath.nextAfter(unscaled,  Double.POSITIVE_INFINITY));
",6,0,0,2,4,0,10,0,0,17,82,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1345,"            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1347,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1359,"        return unscaled;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1373,"        return (x == ZB) ? ZB : (x > ZB) ? PB : NB;
",14,2,0,2,4,1,0,0,0,16,43,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1389,"        if (Double.isNaN(x)) {
",0,0,0,2,5,0,6,0,0,6,22,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1390,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1392,"        return (x == 0.0) ? 0.0 : (x > 0.0) ? 1.0 : -1.0;
",4,2,0,2,4,1,0,0,0,7,49,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1407,"        if (Float.isNaN(x)) {
",0,0,0,2,5,0,6,0,0,6,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1408,"            return Float.NaN;
",4,0,0,0,0,1,0,0,0,4,17,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1410,"        return (x == 0.0F) ? 0.0F : (x > 0.0F) ? 1.0F : -1.0F;
",4,2,0,2,4,1,0,0,0,7,54,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1424,"        return (x == 0) ? 0 : (x > 0) ? 1 : -1;
",4,2,0,2,4,1,0,0,0,7,39,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1438,"        return (x == 0L) ? 0L : (x > 0L) ? 1L : -1L;
",4,2,0,2,4,1,0,0,0,7,44,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1453,"        return (x == ZS) ? ZS : (x > ZS) ? PS : NS;
",14,2,0,2,4,1,0,0,0,16,43,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1464,"        return (FastMath.exp(x) - FastMath.exp(-x)) / 2.0;
",2,2,0,3,6,1,10,0,0,15,50,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1478,"        long s = (long)x - (long)y;
",6,1,0,2,4,0,0,0,0,7,27,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1479,"        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {
",12,3,0,1,3,0,0,0,0,15,53,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1480,"            throw MathRuntimeException.createArithmeticException(LocalizedFormats.OVERFLOW_IN_SUBTRACTION, x, y);
",4,0,0,1,2,0,8,0,0,12,101,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1482,"        return (int)s;
",2,0,0,1,2,1,0,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1497,"        String msg = ""overflow: subtract"";
",2,0,0,0,0,0,0,2,0,5,34,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1498,"        if (b == Long.MIN_VALUE) {
",6,1,0,1,3,0,0,0,0,7,26,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1499,"            if (a < 0) {
",2,1,0,1,3,0,0,0,0,3,12,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1500,"                ret = a - b;
",6,1,0,0,0,0,0,0,0,8,12,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1502,"                throw new ArithmeticException(msg);
",2,0,0,1,2,0,0,2,0,4,35,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1506,"            ret = addAndCheck(a, -b, LocalizedFormats.OVERFLOW_IN_ADDITION);
",8,0,0,1,2,0,4,0,0,14,64,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1508,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1521,"        if (e < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1522,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1527,"        int result = 1;
",2,0,0,0,0,0,0,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1528,"        int k2p    = k;
",4,0,0,0,0,0,0,0,0,4,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1529,"        while (e != 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1530,"            if ((e & 0x1) != 0) {
",2,2,0,2,5,0,0,0,0,4,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1531,"                result *= k2p;
",4,0,0,0,0,0,0,0,0,5,14,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1533,"            k2p *= k2p;
",4,0,0,0,0,0,0,0,0,5,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1534,"            e = e >> 1;
",4,1,0,0,0,0,0,0,0,6,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1537,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1551,"        if (e < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1552,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1557,"        int result = 1;
",2,0,0,0,0,0,0,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1558,"        int k2p    = k;
",4,0,0,0,0,0,0,0,0,4,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1559,"        while (e != 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1560,"            if ((e & 0x1) != 0) {
",2,2,0,2,5,0,0,0,0,4,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1561,"                result *= k2p;
",4,0,0,0,0,0,0,0,0,5,14,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1563,"            k2p *= k2p;
",4,0,0,0,0,0,0,0,0,5,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1564,"            e = e >> 1;
",4,1,0,0,0,0,0,0,0,6,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1567,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1581,"        if (e < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1582,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1587,"        long result = 1l;
",2,0,0,0,0,0,0,0,0,2,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1588,"        long k2p    = k;
",4,0,0,0,0,0,0,0,0,4,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1589,"        while (e != 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1590,"            if ((e & 0x1) != 0) {
",2,2,0,2,5,0,0,0,0,4,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1591,"                result *= k2p;
",4,0,0,0,0,0,0,0,0,5,14,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1593,"            k2p *= k2p;
",4,0,0,0,0,0,0,0,0,5,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1594,"            e = e >> 1;
",4,1,0,0,0,0,0,0,0,6,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1597,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1611,"        if (e < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1612,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1617,"        long result = 1l;
",2,0,0,0,0,0,0,0,0,2,17,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1618,"        long k2p    = k;
",4,0,0,0,0,0,0,0,0,4,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1619,"        while (e != 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1620,"            if ((e & 0x1) != 0) {
",2,2,0,2,5,0,0,0,0,4,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1621,"                result *= k2p;
",4,0,0,0,0,0,0,0,0,5,14,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1623,"            k2p *= k2p;
",4,0,0,0,0,0,0,0,0,5,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1624,"            e = e >> 1;
",4,1,0,0,0,0,0,0,0,6,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1627,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1641,"        if (e < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1642,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1647,"        return k.pow(e);
",0,0,0,1,2,1,6,0,0,6,16,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1661,"        if (e < 0) {
",2,1,0,1,3,0,0,0,0,3,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1662,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1667,"        BigInteger result = BigInteger.ONE;
",6,0,0,0,0,0,0,2,0,8,35,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1668,"        BigInteger k2p    = k;
",4,0,0,0,0,0,0,2,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1669,"        while (e != 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1670,"            if ((e & 0x1) != 0) {
",2,2,0,2,5,0,0,0,0,4,21,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1671,"                result = result.multiply(k2p);
",2,0,0,1,2,0,6,0,0,9,30,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1673,"            k2p = k2p.multiply(k2p);
",2,0,0,1,2,0,6,0,0,9,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1674,"            e = e >> 1;
",4,1,0,0,0,0,0,0,0,6,11,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1677,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1691,"        if (e.compareTo(BigInteger.ZERO) < 0) {
",4,1,0,2,5,0,4,0,0,9,39,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1692,"            throw MathRuntimeException.createIllegalArgumentException(
",0,0,0,0,1,0,4,0,0,4,58,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1697,"        BigInteger result = BigInteger.ONE;
",6,0,0,0,0,0,0,2,0,8,35,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1698,"        BigInteger k2p    = k;
",4,0,0,0,0,0,0,2,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1699,"        while (!BigInteger.ZERO.equals(e)) {
",4,0,0,2,5,0,4,0,0,9,36,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1700,"            if (e.testBit(0)) {
",0,0,0,2,5,0,4,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1701,"                result = result.multiply(k2p);
",2,0,0,1,2,0,6,0,0,9,30,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1703,"            k2p = k2p.multiply(k2p);
",2,0,0,1,2,0,6,0,0,9,24,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1704,"            e = e.shiftRight(1);
",2,0,0,1,2,0,4,0,0,7,20,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1707,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1719,"        double sum = 0;
",2,0,0,0,0,0,0,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1720,"        for (int i = 0; i < p1.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1721,"            sum += FastMath.abs(p1[i] - p2[i]);
",2,1,1,3,6,0,4,0,0,16,35,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1723,"        return sum;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1734,"      int sum = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1735,"      for (int i = 0; i < p1.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1736,"          sum += FastMath.abs(p1[i] - p2[i]);
",2,1,1,3,6,0,4,0,0,16,35,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1738,"      return sum;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1749,"        double sum = 0;
",2,0,0,0,0,0,0,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1750,"        for (int i = 0; i < p1.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1751,"            final double dp = p1[i] - p2[i];
",2,1,1,2,4,1,0,0,0,12,32,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1752,"            sum += dp * dp;
",6,1,0,0,0,0,0,0,0,8,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1754,"        return FastMath.sqrt(sum);
",0,0,0,1,2,1,6,0,0,6,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1765,"      double sum = 0;
",2,0,0,0,0,0,0,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1766,"      for (int i = 0; i < p1.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1767,"          final double dp = p1[i] - p2[i];
",2,1,1,2,4,1,0,0,0,12,32,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1768,"          sum += dp * dp;
",6,1,0,0,0,0,0,0,0,8,15,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1770,"      return FastMath.sqrt(sum);
",0,0,0,1,2,1,6,0,0,6,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1781,"        double max = 0;
",2,0,0,0,0,0,0,0,0,2,15,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1782,"        for (int i = 0; i < p1.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1783,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));
",2,1,1,4,8,0,10,0,0,22,53,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1785,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1796,"        int max = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1797,"        for (int i = 0; i < p1.length; i++) {
",10,1,0,1,3,0,0,0,0,12,37,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1798,"            max = FastMath.max(max, FastMath.abs(p1[i] - p2[i]));
",2,1,1,4,8,0,10,0,0,22,53,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1800,"        return max;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1822,"        double previous = val[0];
",2,0,1,1,2,0,0,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1823,"        boolean ok = true;
",2,0,0,0,0,0,0,0,0,3,18,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1825,"        int max = val.length;
",6,0,0,0,0,0,0,0,0,6,21,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1826,"        for (int i = 1; i < max; i++) {
",8,1,0,1,3,0,0,0,0,10,31,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1827,"            switch (dir) {
",2,0,0,1,3,0,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1829,"                if (strict) {
",2,0,0,1,3,0,0,0,0,2,13,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1830,"                    if (val[i] <= previous) {
",2,1,1,2,5,0,0,0,0,7,25,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1831,"                        ok = false;
",2,0,0,0,0,0,0,0,0,4,11,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1834,"                    if (val[i] < previous) {
",2,1,1,2,5,0,0,0,0,7,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1835,"                        ok = false;
",2,0,0,0,0,0,0,0,0,4,11,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1840,"                if (strict) {
",2,0,0,1,3,0,0,0,0,2,13,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1841,"                    if (val[i] >= previous) {
",2,1,1,2,5,0,0,0,0,7,25,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1842,"                        ok = false;
",2,0,0,0,0,0,0,0,0,4,11,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1845,"                    if (val[i] > previous) {
",2,1,1,2,5,0,0,0,0,7,24,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1846,"                        ok = false;
",2,0,0,0,0,0,0,0,0,4,11,11,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1852,"                throw new IllegalArgumentException();
",0,0,0,1,2,0,0,2,0,2,37,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1855,"            if (!ok) {
",2,0,0,1,3,0,0,0,0,3,10,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1856,"                throw new NonMonotonousSequenceException(val[i], previous, i, dir, strict);
",8,0,1,2,4,0,0,2,0,14,75,9,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1858,"            previous = val[i];
",2,0,1,1,2,0,0,0,0,7,18,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1860,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1869,"        checkOrder(val, OrderDirection.INCREASING, true);
",4,0,0,1,2,0,4,0,0,9,49,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1870,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1932,"    double rdwarf = 3.834e-20;
",2,0,0,0,0,0,0,0,0,2,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1933,"    double rgiant = 1.304e+19;
",2,0,0,0,0,0,0,0,0,2,26,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1934,"    double s1=0.0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1935,"    double s2=0.0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1936,"    double s3=0.0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1937,"    double x1max = 0.0;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1938,"    double x3max = 0.0;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1939,"    double floatn = (double)v.length;
",6,0,0,1,2,0,0,0,0,6,33,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1940,"    double agiant = rgiant/floatn;
",6,1,0,0,0,0,0,0,0,7,30,5,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1941,"    for (int i=0;i<v.length;i++) {
",10,1,0,1,3,0,0,0,0,12,30,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1942,"        double xabs = Math.abs(v[i]);
",2,0,1,2,4,0,4,0,0,10,29,7,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1943,"        if (xabs<rdwarf || xabs>agiant) {
",8,3,0,1,3,0,0,0,0,11,33,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1944,"            if (xabs>rdwarf) {
",4,1,0,1,3,0,0,0,0,5,18,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1945,"                if (xabs>x1max) {
",4,1,0,1,3,0,0,0,0,5,17,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1946,"                    double r=x1max/xabs;
",6,1,0,0,0,0,0,0,0,7,20,13,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1947,"                    s1=1.0+s1*r*r;
",8,2,0,0,0,0,0,0,0,11,14,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1948,"                    x1max=xabs;
",4,0,0,0,0,0,0,0,0,5,11,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1949,"                } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1950,"                    double r=xabs/x1max;
",6,1,0,0,0,0,0,0,0,7,20,13,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1951,"                    s1+=r*r;
",6,1,0,0,0,0,0,0,0,8,8,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1952,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1954,"                if (xabs>x3max) {
",4,1,0,1,3,0,0,0,0,5,17,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1955,"                 double r=x3max/xabs;
",6,1,0,0,0,0,0,0,0,7,20,13,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1956,"                 s3=1.0+s3*r*r;
",8,2,0,0,0,0,0,0,0,11,14,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1957,"                 x3max=xabs;
",4,0,0,0,0,0,0,0,0,5,11,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1958,"                } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1959,"                    if (xabs!=0.0) {
",2,1,0,1,3,0,0,0,0,3,16,12,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1960,"                        double r=xabs/x3max;
",6,1,0,0,0,0,0,0,0,7,20,15,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1961,"                        s3+=r*r;
",6,1,0,0,0,0,0,0,0,8,8,14,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1962,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1966,"         s2+=xabs*xabs;
",6,1,0,0,0,0,0,0,0,8,14,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1970,"    if (s1!=0.0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1971,"        norm = x1max*Math.sqrt(s1+(s2/x1max)/x1max);
",12,4,0,2,4,0,4,0,0,21,44,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1973,"        if (s2==0.0) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1974,"            norm = x3max*Math.sqrt(s3);
",4,1,0,1,2,0,6,0,0,12,27,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1976,"            if (s2>=x3max) {
",4,1,0,1,3,0,0,0,0,5,16,8,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1977,"                norm = Math.sqrt(s2*(1.0+(x3max/s2)*(x3max*s3)));
",12,5,0,4,8,0,4,0,0,22,49,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1979,"                norm = Math.sqrt(x3max*((s2/x3max)+(x3max*s3)));
",12,4,0,4,8,0,4,0,0,21,48,10,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1983,"    return norm;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math/util/MathUtils,62,1827,"            switch (dir) {
",2,0,0,1,3,0,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,63,"        this(wrong, previous, index, MathUtils.OrderDirection.INCREASING, true);
",12,0,0,1,2,0,0,0,0,13,72,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,64,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,82,"        super(direction == MathUtils.OrderDirection.INCREASING ?
",8,1,0,0,1,0,0,0,0,9,56,5,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,91,"        this.direction = direction;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,92,"        this.strict = strict;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,93,"        this.index = index;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,94,"        this.previous = previous;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,95,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,101,"        return direction;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,107,"        return strict;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,115,"        return index;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NonMonotonousSequenceException,62,121,"        return previous;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,50,"        super(specific, general, wrong, arguments);
",8,0,0,1,2,0,0,0,0,8,43,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,51,"        argument = wrong;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,52,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,64,"        super(general, wrong, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,65,"        argument = wrong;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,66,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalNumberException,62,72,"        return argument;
",2,0,0,0,0,1,0,0,0,2,16,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,61,"                                           Object ... args) {
",2,0,0,0,2,0,0,2,0,4,18,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,62,"        this.specific = specific;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,63,"        this.general = general;
",4,0,0,0,0,0,0,0,0,5,23,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,64,"        arguments = ArgUtils.flatten(args);
",2,0,0,1,2,0,6,0,0,9,35,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,72,"        this(null, general, args);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,73,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,83,"        return MessageFactory.buildMessage(locale, specific, general, arguments);
",0,0,0,1,2,1,12,0,0,12,73,5,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,89,"        return getMessage(Locale.US);
",4,0,0,1,2,1,2,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math/exception/MathIllegalArgumentException,62,95,"        return getMessage(Locale.getDefault());
",0,0,0,2,4,1,6,0,0,6,39,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,57,"    public MathException() {
",2,0,0,1,3,1,0,0,0,3,24,2,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,58,"        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
",6,0,0,0,0,0,0,0,0,7,49,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,59,"        this.arguments = new Object[] { """" };
",2,0,0,2,4,0,0,2,0,6,37,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,60,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,72,"      this(new DummyLocalizable(pattern), arguments);
",4,0,0,2,4,0,0,2,0,6,47,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,73,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,83,"    public MathException(Localizable pattern, Object ... arguments) {
",6,0,0,1,3,1,0,4,0,11,65,2,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,84,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,85,"      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
",4,1,0,3,6,0,4,2,0,12,73,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,86,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,96,"        super(rootCause);
",2,0,0,1,2,0,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,97,"        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
",6,0,0,0,0,0,0,0,0,7,49,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,98,"        this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };
",4,1,0,4,8,0,4,2,0,13,84,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,99,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,114,"        this(rootCause, new DummyLocalizable(pattern), arguments);
",6,0,0,2,4,0,0,2,0,8,58,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,115,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,128,"      super(rootCause);
",2,0,0,1,2,0,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,129,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,130,"      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
",4,1,0,3,6,0,4,2,0,12,73,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,131,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,141,"        return pattern.getSourceString();
",0,0,0,1,2,1,4,0,0,4,33,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,150,"        return pattern;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,159,"        return arguments.clone();
",0,0,0,1,2,1,4,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,170,"        if (pattern != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,171,"            return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);
",2,0,0,3,6,1,10,2,0,14,87,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,173,"        return """";
",0,0,0,0,0,1,0,0,0,1,10,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,179,"        return getMessage(Locale.US);
",4,0,0,1,2,1,2,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,185,"        return getMessage(Locale.getDefault());
",0,0,0,2,4,1,6,0,0,6,39,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,193,"        printStackTrace(System.err);
",4,0,0,1,2,0,2,0,0,6,28,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,194,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,203,"        synchronized (out) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,204,"            PrintWriter pw = new PrintWriter(out, false);
",4,0,0,1,2,0,0,4,0,9,45,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,205,"            printStackTrace(pw);
",0,0,0,1,2,0,4,0,0,4,20,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,207,"            pw.flush();
",0,0,0,1,2,0,4,0,0,4,11,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,208,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,62,209,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,35,"        setSeed((long) seed);
",2,0,0,2,4,0,2,0,0,4,21,5,0.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,36,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,41,"        final long prime = 4294967291l;
",2,0,0,0,0,1,0,0,0,3,31,4,0.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,43,"        long combined = 0l;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,44,"        for (int s : seed) {
",4,0,0,1,3,0,0,0,0,4,20,4,0.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,45,"            combined = combined * prime + s;
",8,2,0,0,0,0,0,0,0,11,32,6,0.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,47,"        setSeed(combined);
",0,0,0,1,2,0,4,0,0,4,18,5,0.00000,0
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,47,"        super(LocalizedFormats.EVALUATION_FAILED, argument);
",6,0,0,1,2,0,0,0,0,6,52,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,48,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,49,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,59,"        super(LocalizedFormats.EVALUATION_FAILED, new ArrayRealVector(argument));
",6,0,0,2,4,0,0,2,0,8,73,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,60,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,73,"        this(argument, new DummyLocalizable(pattern), arguments);
",6,0,0,2,4,0,0,2,0,8,57,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,74,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,86,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,87,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,88,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,100,"        this(argument, new DummyLocalizable(pattern), arguments);
",6,0,0,2,4,0,0,2,0,8,57,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,101,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,113,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,114,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,115,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,125,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,126,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,127,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,137,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,138,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,139,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,153,"        this(cause, argument, new DummyLocalizable(pattern), arguments);
",8,0,0,2,4,0,0,2,0,10,64,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,154,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,168,"        super(cause, pattern, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,169,"        this.argument = new double[] { argument };
",4,0,0,2,4,0,0,0,0,5,42,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,170,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,184,"        this(cause, argument, new DummyLocalizable(pattern), arguments);
",8,0,0,2,4,0,0,2,0,10,64,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,185,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,199,"        super(cause, pattern, arguments);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,200,"        this.argument = argument.clone();
",2,0,0,1,2,0,4,0,0,7,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,201,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,62,209,"        return argument.clone();
",0,0,0,1,2,1,4,0,0,4,24,5,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,195,"                        return (o2 == null) ? 0 : 1;
",2,1,0,1,2,1,0,0,0,3,28,14,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,197,"                        return -1;
",0,0,0,0,0,1,0,0,0,1,10,13,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,82,"        optimizer.setConvergenceChecker(checker);
",0,0,0,1,2,0,6,0,0,6,41,5,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,83,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,89,"        return optimizer.getConvergenceChecker();
",0,0,0,1,2,1,4,0,0,4,41,5,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,94,"        return maxEvaluations;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,99,"        return totalEvaluations;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,104,"        this.maxEvaluations = maxEvaluations;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,105,"        optimizer.setMaxEvaluations(maxEvaluations);
",0,0,0,1,2,0,6,0,0,6,44,5,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,106,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,135,"        if (optima == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,136,"            throw new MathIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
",4,0,0,1,2,0,0,2,0,6,78,7,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,138,"        return optima.clone();
",0,0,0,1,2,1,4,0,0,4,22,5,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,163,"            } catch (FunctionEvaluationException fee) {
",2,0,0,1,4,0,0,2,0,4,43,8,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,164,"                optima[i] = null;
",0,0,1,1,2,0,0,0,0,5,17,9,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,165,"            } catch (ConvergenceException ce) {
",2,0,0,1,4,0,0,2,0,4,35,8,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,166,"                optima[i] = null;
",0,0,1,1,2,0,0,0,0,5,17,9,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,177,"            throw new ConvergenceException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,
",4,0,0,0,1,0,0,2,0,6,84,7,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,107,"        } catch (MaxCountExceededException e) {
",2,0,0,1,4,0,0,2,0,4,39,6,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,108,"            throw new TooManyEvaluationsException(e.getMax());
",0,0,0,2,4,0,4,2,0,6,50,8,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,121,"            throw new NullArgumentException();
",0,0,0,1,2,0,0,2,0,2,34,8,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,124,"            throw new NullArgumentException();
",0,0,0,1,2,0,0,2,0,2,34,8,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,151,"        checker = c;
",4,0,0,0,0,0,0,0,0,5,12,4,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,152,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,37,"        this(null);
",0,0,0,1,2,0,0,0,0,0,11,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,38,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,45,"        this(specific,
",2,0,0,0,1,0,0,0,0,2,14,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,48,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,57,"        super(specific,
",2,0,0,0,1,0,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/ConvergenceException,62,60,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,78,"            throw new NumberIsTooSmallException(rel, MIN_RELATIVE_TOLERANCE, true);
",4,0,0,1,2,0,0,2,0,7,71,7,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,81,"            throw new NotStrictlyPositiveException(abs);
",2,0,0,1,2,0,0,2,0,4,44,7,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,105,"            a = hi;
",4,0,0,0,0,0,0,0,0,5,7,6,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,106,"            b = lo;
",4,0,0,0,0,0,0,0,0,5,7,6,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,116,"            fx = -fx;
",4,0,0,0,0,0,0,0,0,6,9,6,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,166,"                                d = -tol1;
",4,0,0,0,0,0,0,0,0,6,10,16,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,181,"                        e = b - x;
",6,1,0,0,0,0,0,0,0,8,10,12,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,201,"                    fu = -fu;
",4,0,0,0,0,0,0,0,0,6,9,10,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,242,"                    if (checker.converged(iter, previous, current)) {
",0,0,0,2,5,0,10,0,0,10,49,11,0.00000,0
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,243,"                        return current;
",2,0,0,0,0,1,0,0,0,2,15,12,0.00000,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,62,41,"        super(LocalizedFormats.NULL_NOT_ALLOWED);
",4,0,0,1,2,0,0,0,0,4,41,5,0.00000,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,62,42,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,62,48,"        super(specific, LocalizedFormats.NULL_NOT_ALLOWED);
",6,0,0,1,2,0,0,0,0,6,51,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NullArgumentException,62,49,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,62,37,"        super(LocalizedFormats.EVALUATIONS, max);
",6,0,0,1,2,0,0,0,0,6,41,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,62,38,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,52,"        this(null, wrong, min, boundIsAllowed);
",6,0,0,1,2,0,0,0,0,6,39,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,53,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,67,"        super(specific,
",2,0,0,0,1,0,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,73,"        this.min = min;
",4,0,0,0,0,0,0,0,0,5,15,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,74,"        this.boundIsAllowed = boundIsAllowed;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,75,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,81,"        return boundIsAllowed;
",2,0,0,0,0,1,0,0,0,2,22,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,62,88,"        return min;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,62,38,"        super(value, 0, false);
",2,0,0,1,2,0,0,0,0,3,23,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,62,39,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,62,48,"        super(specific, value, 0, false);
",4,0,0,1,2,0,0,0,0,5,33,4,0.00000,0
defect4j,math,org/apache/commons/math/exception/NotStrictlyPositiveException,62,49,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
