dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,36,"    private static UnivariateRealSolverFactory factory = null;
",2,0,0,0,0,2,0,2,0,6,58,2,0.50000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,128,"        return bracket( function, initial, lowerBound, upperBound,
",0,0,0,0,1,1,10,0,0,10,58,5,0.50000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,171,"        if (function == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.50000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,174,"        if (maximumIterations <= 0)  {
",2,1,0,1,3,0,0,0,0,3,30,4,0.50000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,178,"        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
",12,5,0,1,3,0,0,0,0,17,79,4,0.50000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,119,"        return 0.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.50000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,132,"        return Double.MAX_VALUE;
",4,0,0,0,0,1,0,0,0,4,24,5,0.50000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,145,"        double d = getDenominatorDegreesOfFreedom();
",2,0,0,1,2,0,2,0,0,4,44,5,0.50000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,147,"            ret = d / (d - 2.0);
",6,2,0,1,2,0,0,0,0,9,20,4,0.50000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,148,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.50000,1
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,67,"        UnivariateRealFunction rootFindingFunction =
",2,0,0,0,0,0,0,2,0,4,44,4,0.50000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,80,"        double lowerBound = getDomainLowerBound(p);
",2,0,0,1,2,0,4,0,0,6,43,5,0.50000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,81,"        double upperBound = getDomainUpperBound(p);
",2,0,0,1,2,0,4,0,0,6,43,5,0.50000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,82,"        double[] bracket = null;
",2,0,0,1,2,0,0,0,0,2,24,5,0.50000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,84,"            bracket = UnivariateRealSolverUtils.bracket(
",2,0,0,0,1,0,4,0,0,7,44,6,0.50000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,68,"            new UnivariateRealFunction() {
",0,0,0,1,3,0,0,2,0,2,30,7,0.50000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,106,"        return super.inverseCumulativeProbability(p);
",4,0,0,1,2,1,0,0,0,4,45,5,0.33333,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,61,"        if (p < 0.0 || p > 1.0) {
",4,3,0,1,3,0,0,0,0,7,25,4,0.33333,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,100,"        if (p == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.25000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,103,"        if (p == 1) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.25000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,75,"            double n = getNumeratorDegreesOfFreedom();
",2,0,0,1,2,0,2,0,0,4,42,7,0.14286,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,76,"            double m = getDenominatorDegreesOfFreedom();
",2,0,0,1,2,0,2,0,0,4,44,7,0.14286,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,78,"            ret = Beta.regularizedBeta((n * x) / (m + n * x),
",12,4,0,2,5,0,4,0,0,21,49,6,0.14286,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,72,"        if (x <= 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.12500,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,82,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.12500,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,170,"        return numeratorDegreesOfFreedom;
",2,0,0,0,0,1,0,0,0,2,33,4,0.12500,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,192,"        return denominatorDegreesOfFreedom;
",2,0,0,0,0,1,0,0,0,2,35,4,0.12500,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,50,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,51,"        setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom);
",0,0,0,1,2,0,4,0,0,4,56,5,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,52,"        setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);
",0,0,0,1,2,0,4,0,0,4,60,5,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,53,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,158,"        if (degreesOfFreedom <= 0.0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,162,"        this.numeratorDegreesOfFreedom = degreesOfFreedom;
",4,0,0,0,0,0,0,0,0,5,50,4,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,163,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,180,"        if (degreesOfFreedom <= 0.0) {
",2,1,0,1,3,0,0,0,0,3,30,4,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,184,"        this.denominatorDegreesOfFreedom = degreesOfFreedom;
",4,0,0,0,0,0,0,0,0,5,52,4,0.09091,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,185,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.09091,0
defect4j,math,org/apache/commons/math/special/Beta,95,59,"        return regularizedBeta(x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,10,0,0,14,68,5,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,126,"        if (Double.isNaN(x) || Double.isNaN(a) || Double.isNaN(b) || (x < 0) ||
",2,2,0,4,9,0,18,0,0,22,71,4,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,130,"        } else if (x > (a + 1.0) / (a + b + 2.0)) {
",8,4,0,3,8,0,0,0,0,12,43,5,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,133,"            ContinuedFraction fraction = new ContinuedFraction() {
",2,0,0,1,3,0,0,4,0,6,54,7,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,156,"            ret = Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x)) -
",8,7,0,4,9,0,14,0,0,30,60,7,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,161,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,197,"        if (Double.isNaN(a) || Double.isNaN(b) || (a <= 0.0) || (b <= 0.0)) {
",4,3,0,5,11,0,12,0,0,19,69,4,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,200,"            ret = Gamma.logGamma(a) + Gamma.logGamma(b) -
",2,2,0,2,4,0,12,0,0,17,45,6,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,204,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,133,"            ContinuedFraction fraction = new ContinuedFraction() {
",2,0,0,1,3,0,0,4,0,6,54,7,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,140,"                    if (n % 2 == 0) { // even
",2,2,0,1,3,0,0,0,0,4,25,13,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,141,"                        m = n / 2.0;
",4,1,0,0,0,0,0,0,0,6,12,15,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,142,"                        ret = (m * (b - m) * x) /
",10,3,0,2,4,0,0,0,0,14,25,15,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,145,"                        m = (n - 1.0) / 2.0;
",4,2,0,1,2,0,0,0,0,7,20,15,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,146,"                        ret = -((a + m) * (a + b + m) * x) /
",14,4,0,3,6,0,0,0,0,20,36,15,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,149,"                    return ret;
",2,0,0,0,0,1,0,0,0,2,11,13,0.07692,0
defect4j,math,org/apache/commons/math/special/Beta,95,153,"                    return 1.0;
",0,0,0,0,0,1,0,0,0,0,11,3,0.07692,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,51,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,52,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,133,"        double p0 = 1.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,134,"        double p1 = getA(0, x);
",2,0,0,1,2,0,4,0,0,6,23,5,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,135,"        double q0 = 0.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,136,"        double q1 = 1.0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,137,"        double c = p1 / q1;
",6,1,0,0,0,0,0,0,0,7,19,5,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,138,"        int n = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,139,"        double relativeError = Double.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,40,5,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,140,"        while (n < maxIterations && relativeError > epsilon) {
",8,3,0,1,3,0,0,0,0,11,54,4,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,141,"            ++n;
",2,0,0,0,0,0,0,0,0,3,4,6,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,142,"            double a = getA(n, x);
",2,0,0,1,2,0,6,0,0,8,22,7,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,143,"            double b = getB(n, x);
",2,0,0,1,2,0,6,0,0,8,22,7,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,144,"            double p2 = a * p1 + b * p0;
",10,3,0,0,0,0,0,0,0,13,28,7,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,145,"            double q2 = a * q1 + b * q0;
",10,3,0,0,0,0,0,0,0,13,28,7,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,146,"            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {
",0,1,0,3,7,0,12,0,0,13,53,6,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,161,"            double r = p2 / q2;
",6,1,0,0,0,0,0,0,0,7,19,7,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,162,"            relativeError = Math.abs(r / c - 1.0);
",6,2,0,1,2,0,4,0,0,13,38,6,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,165,"            c = p2 / q2;
",6,1,0,0,0,0,0,0,0,8,12,6,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,166,"            p0 = p1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,167,"            p1 = p2;
",4,0,0,0,0,0,0,0,0,5,8,6,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,168,"            q0 = q1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,169,"            q1 = q2;
",4,0,0,0,0,0,0,0,0,5,8,6,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,170,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,172,"        if (n >= maxIterations) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.05882,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,178,"        return c;
",2,0,0,0,0,1,0,0,0,2,9,4,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,40,"    private static double[] lanczos =
",2,0,0,1,2,2,0,0,0,4,33,2,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,60,"    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);
",6,2,0,1,2,3,4,0,0,15,74,2,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,90,"        if (Double.isNaN(x) || (x <= 0.0)) {
",2,2,0,3,7,0,6,0,0,10,36,4,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,93,"            double g = 607.0 / 128.0;
",2,1,0,0,0,0,0,0,0,3,25,7,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,95,"            double sum = 0.0;
",2,0,0,0,0,0,0,0,0,2,17,7,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,96,"            for (int i = lanczos.length - 1; i > 0; --i) {
",10,2,0,1,3,0,0,0,0,13,46,6,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,97,"                sum = sum + (lanczos[i] / (x + i));
",8,3,1,3,6,0,0,0,0,16,35,8,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,99,"            sum = sum + lanczos[0];
",4,1,1,1,2,0,0,0,0,8,23,6,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,101,"            double tmp = x + g + .5;
",6,1,0,0,0,0,0,0,0,7,24,7,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,102,"            ret = ((x + .5) * Math.log(tmp)) - tmp +
",6,5,0,3,6,0,6,0,0,18,40,6,0.05882,0
defect4j,math,org/apache/commons/math/special/Gamma,95,106,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.05882,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,95,38,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.04762,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,95,39,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,45,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.04762,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,46,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04762,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,87,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,61,"    protected boolean resultComputed = false;
",2,0,0,0,0,1,0,0,0,4,41,2,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,89,"        if (f == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,90,"            throw new IllegalArgumentException(""function can not be null."");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,93,"        this.f = f;
",4,0,0,0,0,0,0,0,0,5,11,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,94,"        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,55,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,95,"        this.defaultRelativeAccuracy = 1E-14;
",2,0,0,0,0,0,0,0,0,3,37,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,96,"        this.defaultFunctionValueAccuracy = 1E-15;
",2,0,0,0,0,0,0,0,0,3,42,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,97,"        this.absoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,48,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,98,"        this.relativeAccuracy = defaultRelativeAccuracy;
",4,0,0,0,0,0,0,0,0,5,48,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,99,"        this.functionValueAccuracy = defaultFunctionValueAccuracy;
",4,0,0,0,0,0,0,0,0,5,58,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,100,"        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,65,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,101,"        this.maximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,58,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,102,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,111,"        if (resultComputed) {
",2,0,0,1,3,0,0,0,0,2,21,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,112,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,114,"            throw new IllegalStateException(""No result available"");
",0,0,0,1,2,0,0,2,0,3,55,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,126,"        if (resultComputed) {
",2,0,0,1,3,0,0,0,0,2,21,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,127,"            return iterationCount;
",2,0,0,0,0,1,0,0,0,2,22,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,129,"            throw new IllegalStateException(""No result available"");
",0,0,0,1,2,0,0,2,0,3,55,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,140,"        this.result = result;
",4,0,0,0,0,0,0,0,0,5,21,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,141,"        this.iterationCount = iterationCount;
",4,0,0,0,0,0,0,0,0,5,37,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,142,"        this.resultComputed = true;
",2,0,0,0,0,0,0,0,0,4,27,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,143,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,149,"        this.resultComputed = false;
",2,0,0,0,0,0,0,0,0,4,28,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,150,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,160,"        absoluteAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,28,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,161,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,169,"        return absoluteAccuracy;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,176,"        absoluteAccuracy = defaultAbsoluteAccuracy;
",4,0,0,0,0,0,0,0,0,5,43,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,177,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,185,"        maximalIterationCount = count;
",4,0,0,0,0,0,0,0,0,5,30,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,186,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,194,"        return maximalIterationCount;
",2,0,0,0,0,1,0,0,0,2,29,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,201,"        maximalIterationCount = defaultMaximalIterationCount;
",4,0,0,0,0,0,0,0,0,5,53,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,202,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,212,"        relativeAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,28,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,213,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,220,"        return relativeAccuracy;
",2,0,0,0,0,1,0,0,0,2,24,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,227,"        relativeAccuracy = defaultRelativeAccuracy;
",4,0,0,0,0,0,0,0,0,5,43,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,228,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,238,"        functionValueAccuracy = accuracy;
",4,0,0,0,0,0,0,0,0,5,33,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,239,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,246,"        return functionValueAccuracy;
",2,0,0,0,0,1,0,0,0,2,29,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,253,"        functionValueAccuracy = defaultFunctionValueAccuracy;
",4,0,0,0,0,0,0,0,0,5,53,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,254,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,269,"        double f1 = f.value(lower);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,270,"        double f2 = f.value(upper);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,271,"        return ((f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0));
",8,7,0,3,6,1,0,0,0,15,50,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,283,"        return (start < mid) && (mid < end);
",8,3,0,2,4,1,0,0,0,11,36,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,295,"        if (lower >= upper) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,296,"            throw new IllegalArgumentException
",0,0,0,0,0,0,0,2,0,2,34,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,300,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,312,"        if (!isSequence(lower, initial, upper)) {
",0,0,0,2,5,0,8,0,0,9,41,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,313,"            throw new IllegalArgumentException
",0,0,0,0,0,0,0,2,0,2,34,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,317,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,333,"        verifyInterval(lower, upper);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,334,"        if (!isBracketing(lower, upper, f)) {
",0,0,0,2,5,0,8,0,0,9,37,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,335,"            throw new IllegalArgumentException
",0,0,0,0,0,0,0,2,0,2,34,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,340,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,32,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,33,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,54,"        setup(f);
",0,0,0,1,2,0,4,0,0,4,9,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,55,"        return factory.newDefaultSolver(f).solve(x0, x1);
",0,0,0,2,4,1,12,0,0,12,49,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,78,"        setup(f);
",0,0,0,1,2,0,4,0,0,4,9,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,79,"        UnivariateRealSolver solver = factory.newDefaultSolver(f);
",2,0,0,1,2,0,6,2,0,10,58,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,80,"        solver.setAbsoluteAccuracy(absoluteAccuracy);
",0,0,0,1,2,0,6,0,0,6,45,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,81,"        return solver.solve(x0, x1);
",0,0,0,1,2,1,8,0,0,8,28,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,172,"            throw new IllegalArgumentException (""function is null."");
",0,0,0,1,2,0,0,2,0,4,57,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,175,"            throw new IllegalArgumentException
",0,0,0,0,0,0,0,2,0,2,34,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,179,"            throw new IllegalArgumentException
",0,0,0,0,0,0,0,2,0,2,34,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,183,"        double a = initial;
",4,0,0,0,0,0,0,0,0,4,19,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,184,"        double b = initial;
",4,0,0,0,0,0,0,0,0,4,19,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,187,"        int numIterations = 0 ;
",2,0,0,0,0,0,0,0,0,2,23,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,190,"            a = Math.max(a - 1.0, lowerBound);
",4,1,0,1,2,0,6,0,0,12,34,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,191,"            b = Math.min(b + 1.0, upperBound);
",4,1,0,1,2,0,6,0,0,12,34,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,192,"            fa = function.value(a);
",2,0,0,1,2,0,6,0,0,9,23,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,194,"            fb = function.value(b);
",2,0,0,1,2,0,6,0,0,9,23,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,195,"            numIterations++ ;
",2,0,0,0,0,0,0,0,0,3,17,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,196,"        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
",8,4,0,2,6,0,0,0,0,12,66,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,199,"        if (fa * fb >= 0.0 ) {
",4,2,0,1,3,0,0,0,0,6,22,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,200,"            throw new ConvergenceException
",0,0,0,0,0,0,0,2,0,2,30,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,207,"        return new double[]{a, b};
",4,0,0,2,4,1,0,0,0,4,26,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,218,"        return (a + b) * .5;
",4,2,0,1,2,1,0,0,0,6,20,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,230,"        if (f == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,231,"            throw new IllegalArgumentException(""function can not be null."");    
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,234,"        if (factory == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,235,"            factory = UnivariateRealSolverFactory.newInstance();
",2,0,0,1,2,0,4,0,0,7,52,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,237,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,95,34,"        super(""Convergence failed"", new Object[0]);
",0,0,0,2,4,0,0,2,0,3,43,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,95,35,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,95,45,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,95,46,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,95,53,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,95,54,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,95,65,"        super(pattern, arguments, cause);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/ConvergenceException,95,66,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,124,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,125,"        this.pattern   = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,126,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,127,"        this.rootCause = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,128,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,138,"      super(buildMessage(pattern, arguments, Locale.US));
",4,0,0,2,4,0,6,0,0,10,51,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,139,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,140,"      this.arguments = (Object[]) arguments.clone();
",2,0,0,3,6,0,4,2,0,9,46,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,141,"      this.rootCause = null;
",2,0,0,0,0,0,0,0,0,3,22,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,142,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,152,"        super((rootCause == null ? null : rootCause.getMessage()));
",2,1,0,3,6,0,4,0,0,8,59,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,153,"        this.pattern   = getMessage();
",2,0,0,1,2,0,2,0,0,5,30,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,154,"        this.arguments = new Object[0];
",2,0,0,1,2,0,0,2,0,5,31,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,155,"        this.rootCause = rootCause;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,156,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,169,"      super(buildMessage(pattern, arguments, Locale.US));
",4,0,0,2,4,0,6,0,0,10,51,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,170,"      this.pattern   = pattern;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,171,"      this.arguments = (Object[]) arguments.clone();
",2,0,0,3,6,0,4,2,0,9,46,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,172,"      this.rootCause = rootCause;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,173,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,47,"        boolean flag = false;
",2,0,0,0,0,0,0,0,0,3,21,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,49,"            Throwable.class.getDeclaredMethod(""getCause"", new Class[0]);
",0,0,0,2,4,0,2,4,0,7,60,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,50,"            flag = true;
",2,0,0,0,0,0,0,0,0,4,12,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,53,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,51,"        } catch (NoSuchMethodException ex) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,52,"            flag = false;
",2,0,0,0,0,0,0,0,0,4,13,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,54,"        JDK_SUPPORTS_NESTED = flag;
",4,0,0,0,0,0,0,0,0,5,27,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,58,"    private static ResourceBundle cachedResources = null;
",2,0,0,0,0,2,0,2,0,6,53,2,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,84,"            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {
",2,2,0,5,11,0,8,0,0,13,82,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,86,"                cachedResources =
",2,0,0,0,0,0,0,0,0,3,17,8,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,90,"            if (cachedResources.getLocale().getLanguage().equals(locale.getLanguage())) {
",0,0,0,5,11,0,12,0,0,12,77,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,92,"                return cachedResources.getString(s);
",0,0,0,1,2,1,6,0,0,6,36,9,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,97,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,95,"        } catch (MissingResourceException mre) {
",2,0,0,1,4,0,0,2,0,4,40,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,101,"        return s;
",2,0,0,0,0,1,0,0,0,2,9,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,114,"        MessageFormat mf = new MessageFormat(translate(pattern, locale));
",2,0,0,2,4,0,6,4,0,12,65,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,115,"        mf.setLocale(locale);
",0,0,0,1,2,0,6,0,0,6,21,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,116,"        return mf.format(arguments);        
",0,0,0,1,2,1,6,0,0,6,28,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,181,"        return pattern;
",2,0,0,0,0,1,0,0,0,2,15,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,190,"        return (Object[]) arguments.clone();
",0,0,0,3,6,1,4,2,0,6,36,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,201,"        return (pattern == null) ? null : buildMessage(pattern, arguments, locale);
",2,1,0,2,4,1,8,0,0,12,75,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,210,"        return rootCause;
",2,0,0,0,0,1,0,0,0,2,17,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,217,"        printStackTrace(System.err);
",4,0,0,1,2,0,2,0,0,6,28,5,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,218,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,226,"        synchronized (out) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,227,"            PrintWriter pw = new PrintWriter(out, false);
",4,0,0,1,2,0,0,4,0,9,45,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,228,"            printStackTrace(pw);
",0,0,0,1,2,0,4,0,0,4,20,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,230,"            pw.flush();
",0,0,0,1,2,0,4,0,0,4,11,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,231,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,232,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,240,"        synchronized (out) {
",2,0,0,1,3,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,241,"            super.printStackTrace(out);
",4,0,0,1,2,0,0,0,0,4,27,7,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,242,"            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {
",4,3,0,1,3,0,0,0,0,8,56,6,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,243,"                out.print(""Caused by: "");
",0,0,0,1,2,0,4,0,0,5,25,9,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,244,"                rootCause.printStackTrace(out);
",0,0,0,1,2,0,6,0,0,6,31,9,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,246,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MathException,95,247,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,42,"        super(""Evaluation failed for argument = {0}"",
",0,0,0,1,3,0,0,0,0,1,45,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,33,"    private double argument = Double.NaN;
",6,0,0,0,0,1,0,0,0,7,37,2,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,44,"        this.argument = argument;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,57,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,58,"        this.argument = argument;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,59,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,69,"        super(cause);
",2,0,0,1,2,0,0,0,0,2,13,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,70,"        this.argument = argument;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,71,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,85,"        super(pattern, arguments, cause);
",6,0,0,1,2,0,0,0,0,6,33,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,86,"        this.argument = argument;
",4,0,0,0,0,0,0,0,0,5,25,4,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,87,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/FunctionEvaluationException,95,95,"        return this.argument;
",2,0,0,0,0,1,0,0,0,2,21,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactory,95,44,"    protected UnivariateRealSolverFactory() {
",2,0,0,1,3,1,0,0,0,3,41,2,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactory,95,45,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactory,95,52,"        return new UnivariateRealSolverFactoryImpl();
",0,0,0,1,2,1,0,2,0,2,45,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,32,"    public UnivariateRealSolverFactoryImpl() {
",2,0,0,1,3,1,0,0,0,3,42,2,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,33,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,45,"        return newBrentSolver(f);
",0,0,0,1,2,1,4,0,0,4,25,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,55,"        return new BisectionSolver(f);
",2,0,0,1,2,1,0,2,0,4,30,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,65,"        return new BrentSolver(f);
",2,0,0,1,2,1,0,2,0,4,26,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,77,"        return new NewtonSolver(f);
",2,0,0,1,2,1,0,2,0,4,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,87,"        return new SecantSolver(f);
",2,0,0,1,2,1,0,2,0,4,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,42,"        super(f, 100, 1E-6);
",2,0,0,1,2,0,0,0,0,2,20,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,43,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,67,"        if (((initial - min) * (max -initial)) < 0) {
",8,4,0,4,9,0,0,0,0,12,45,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,68,"            throw new IllegalArgumentException(""Initial guess is not in search"" +
",0,2,0,0,1,0,0,2,0,5,69,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,74,"        double yInitial = f.value(initial);
",2,0,0,1,2,0,6,0,0,8,35,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,75,"        if (Math.abs(yInitial) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,50,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,76,"            setResult(initial, 0);
",0,0,0,1,2,0,4,0,0,4,22,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,77,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,81,"        double yMin = f.value(min);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,82,"        if (Math.abs(yMin) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,83,"            setResult(yMin, 0);
",0,0,0,1,2,0,4,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,84,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,88,"        if (yInitial * yMin < 0) {
",4,2,0,1,3,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,89,"            return solve(min, yMin, initial, yInitial, min, yMin);
",0,0,0,1,2,1,14,0,0,14,54,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,93,"        double yMax = f.value(max);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,94,"        if (Math.abs(yMax) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,95,"            setResult(yMax, 0);
",0,0,0,1,2,0,4,0,0,4,19,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,96,"            return result;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,100,"        if (yInitial * yMax < 0) {
",4,2,0,1,3,0,0,0,0,6,26,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,101,"            return solve(initial, yInitial, max, yMax, initial, yInitial);
",0,0,0,1,2,1,14,0,0,14,62,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,105,"        return solve(min, yMin, max, yMax, initial, yInitial);
",0,0,0,1,2,1,14,0,0,14,54,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,128,"        clearResult();
",0,0,0,1,2,0,2,0,0,2,14,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,129,"        verifyInterval(min, max);
",0,0,0,1,2,0,6,0,0,6,25,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,131,"        double ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,24,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,133,"        double yMin = f.value(min);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,134,"        double yMax = f.value(max);
",2,0,0,1,2,0,6,0,0,8,27,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,137,"        double sign = yMin * yMax;
",6,1,0,0,0,0,0,0,0,7,26,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,138,"        if (sign > 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,140,"            if (Math.abs(yMin) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,46,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,141,"                setResult(min, 0);
",0,0,0,1,2,0,4,0,0,4,18,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,142,"                ret = min;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,143,"            } else if (Math.abs(yMax) <= functionValueAccuracy) {
",2,1,0,2,6,0,6,0,0,9,53,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,144,"                setResult(max, 0);
",0,0,0,1,2,0,4,0,0,4,18,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,145,"                ret = max;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,148,"                throw new IllegalArgumentException
",0,0,0,0,0,0,0,2,0,2,34,11,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,153,"        } else if (sign < 0){
",2,1,0,1,4,0,0,0,0,3,21,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,155,"            ret = solve(min, yMin, max, yMax, min, yMin);
",2,0,0,1,2,0,14,0,0,17,45,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,158,"            if (yMin == 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,159,"                ret = min;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,161,"                ret = max;
",4,0,0,0,0,0,0,0,0,5,10,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,165,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,189,"        double delta = x1 - x0;
",6,1,0,0,0,0,0,0,0,7,23,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,190,"        double oldDelta = delta;
",4,0,0,0,0,0,0,0,0,4,24,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,192,"        int i = 0;
",2,0,0,0,0,0,0,0,0,2,10,5,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,193,"        while (i < maximalIterationCount) {
",4,1,0,1,3,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,194,"            if (Math.abs(y2) < Math.abs(y1)) {
",0,1,0,3,7,0,12,0,0,13,34,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,196,"                x0 = x1;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,197,"                x1 = x2;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,198,"                x2 = x0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,199,"                y0 = y1;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,200,"                y1 = y2;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,201,"                y2 = y0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,203,"            if (Math.abs(y1) <= functionValueAccuracy) {
",2,1,0,2,5,0,6,0,0,9,44,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,207,"                setResult(x1, i);
",0,0,0,1,2,0,6,0,0,6,17,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,208,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,210,"            double dx = (x2 - x1);
",6,1,0,1,2,0,0,0,0,7,22,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,211,"            double tolerance =
",2,0,0,0,0,0,0,0,0,2,18,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,213,"            if (Math.abs(dx) <= tolerance) {
",2,1,0,2,5,0,6,0,0,9,32,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,214,"                setResult(x1, i);
",0,0,0,1,2,0,6,0,0,6,17,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,215,"                return result;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,217,"            if ((Math.abs(oldDelta) < tolerance) ||
",2,2,0,2,5,0,6,0,0,10,39,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,220,"                delta = 0.5 * dx;
",4,1,0,0,0,0,0,0,0,6,17,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,221,"                oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,223,"                double r3 = y1 / y0;
",6,1,0,0,0,0,0,0,0,7,20,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,229,"                if (x0 == x2) {
",4,1,0,1,3,0,0,0,0,5,15,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,231,"                    p = dx * r3;
",6,1,0,0,0,0,0,0,0,8,12,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,232,"                    p1 = 1.0 - r3;
",4,1,0,0,0,0,0,0,0,6,14,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,235,"                    double r1 = y0 / y2;
",6,1,0,0,0,0,0,0,0,7,20,11,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,236,"                    double r2 = y1 / y2;
",6,1,0,0,0,0,0,0,0,7,20,11,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,237,"                    p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
",18,7,0,4,8,0,0,0,0,26,56,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,238,"                    p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
",8,4,0,3,6,0,0,0,0,13,42,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,240,"                if (p > 0.0) {
",2,1,0,1,3,0,0,0,0,3,14,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,241,"                    p1 = -p1;
",4,0,0,0,0,0,0,0,0,6,9,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,243,"                    p = -p;
",4,0,0,0,0,0,0,0,0,6,7,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,245,"                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
",10,6,0,1,3,0,4,0,0,20,58,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,250,"                    delta = 0.5 * dx;
",4,1,0,0,0,0,0,0,0,6,17,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,251,"                    oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,253,"                    oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,254,"                    delta = p / p1;
",6,1,0,0,0,0,0,0,0,8,15,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,258,"            x0 = x1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,259,"            y0 = y1;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,261,"            if (Math.abs(delta) > tolerance) {
",2,1,0,2,5,0,6,0,0,9,34,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,262,"                x1 = x1 + delta;
",6,1,0,0,0,0,0,0,0,8,16,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,263,"            } else if (dx > 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,7,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,264,"                x1 = x1 + 0.5 * tolerance;
",6,2,0,0,0,0,0,0,0,9,26,9,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,265,"            } else if (dx <= 0.0) {
",2,1,0,1,4,0,0,0,0,3,23,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,266,"                x1 = x1 - 0.5 * tolerance;
",6,2,0,0,0,0,0,0,0,9,26,10,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,268,"            y1 = f.value(x1);
",2,0,0,1,2,0,6,0,0,9,17,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,269,"            if ((y1 > 0) == (y2 > 0)) {
",4,3,0,3,7,0,0,0,0,7,27,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,270,"                x2 = x0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,271,"                y2 = y0;
",4,0,0,0,0,0,0,0,0,5,8,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,272,"                delta = x1 - x0;
",6,1,0,0,0,0,0,0,0,8,16,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,273,"                oldDelta = delta;
",4,0,0,0,0,0,0,0,0,5,17,8,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,275,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,276,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/analysis/BrentSolver,95,277,"        throw new MaxIterationsExceededException(maximalIterationCount);
",2,0,0,1,2,0,0,2,0,4,64,5,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,95,43,"        super(""Maximal number of iterations ({0}) exceeded"",
",0,0,0,2,5,0,0,0,0,1,52,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,95,45,"        this.maxIterations = maxIterations;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,95,46,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,95,57,"        super(pattern, arguments);
",4,0,0,1,2,0,0,0,0,4,26,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,95,58,"        this.maxIterations = maxIterations;
",4,0,0,0,0,0,0,0,0,5,35,4,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,95,59,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/MaxIterationsExceededException,95,65,"        return maxIterations;
",2,0,0,0,0,1,0,0,0,2,21,4,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,79,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,55,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,90,"        return evaluate(x, epsilon, Integer.MAX_VALUE);
",4,0,0,1,2,1,6,0,0,10,47,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,101,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);
",0,0,0,1,2,1,8,0,0,8,51,5,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,148,"                if (a != 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,8,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,149,"                    p2 = p1 + (b / a * p0);
",10,3,0,1,2,0,0,0,0,14,23,10,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,150,"                    q2 = q1 + (b / a * q0);
",10,3,0,1,2,0,0,0,0,14,23,10,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,151,"                } else if (b != 0) {
",2,1,0,1,4,0,0,0,0,3,20,9,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,152,"                    p2 = (a / b * p1) + p0;
",10,3,0,1,2,0,0,0,0,14,23,11,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,153,"                    q2 = (a / b * q1) + q0;
",10,3,0,1,2,0,0,0,0,14,23,11,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,156,"                    throw new ConvergenceException(
",0,0,0,0,1,0,0,2,0,2,31,13,0.00000,0
defect4j,math,org/apache/commons/math/util/ContinuedFraction,95,173,"            throw new MaxIterationsExceededException(maxIterations,
",2,0,0,0,1,0,0,2,0,4,55,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,95,60,"        if (x0 > x1) {
",4,1,0,1,3,0,0,0,0,5,14,4,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,95,61,"            throw new IllegalArgumentException
",0,0,0,0,0,0,0,2,0,2,34,8,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractDistribution,95,64,"        return cumulativeProbability(x1) - cumulativeProbability(x0);
",0,1,0,2,4,1,8,0,0,9,61,4,0.00000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,73,"            ret = 0.0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,101,"            return 0d;
",0,0,0,0,0,1,0,0,0,0,10,3,0.00000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,104,"            return Double.POSITIVE_INFINITY;
",4,0,0,0,0,1,0,0,0,4,32,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,159,"            throw new IllegalArgumentException(
",0,0,0,0,1,0,0,2,0,2,35,8,0.00000,0
defect4j,math,org/apache/commons/math/distribution/FDistributionImpl,95,181,"            throw new IllegalArgumentException(
",0,0,0,0,1,0,0,2,0,2,35,8,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,62,"            throw new IllegalArgumentException(""p must be between 0.0 and 1.0, inclusive."");
",0,0,0,1,2,0,0,2,0,3,80,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,104,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,87,"        }  catch (ConvergenceException ex) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,96,"            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
",0,1,0,3,7,0,10,0,0,11,61,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,97,"                return lowerBound;
",2,0,0,0,0,1,0,0,0,2,18,9,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,99,"            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
",0,1,0,3,7,0,10,0,0,11,61,7,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,100,"                return upperBound;
",2,0,0,0,0,1,0,0,0,2,18,9,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,103,"            throw new MathException(ex);
",2,0,0,1,2,0,0,2,0,4,28,8,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,107,"        double root = UnivariateRealSolverUtils.solve(rootFindingFunction,
",2,0,0,0,1,0,6,0,0,8,66,5,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,109,"        return root;
",2,0,0,0,0,1,0,0,0,2,12,4,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,72,"                    return cumulativeProbability(x) - p;
",2,1,0,1,2,1,4,0,0,7,36,12,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,73,"                } catch (MathException ex) {
",2,0,0,1,4,0,0,2,0,4,28,12,0.00000,0
defect4j,math,org/apache/commons/math/distribution/AbstractContinuousDistribution,95,74,"                    throw new FunctionEvaluationException(x, ex.getPattern(), ex.getArguments(), ex);
",4,0,0,3,6,0,8,2,0,14,81,14,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,67,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,68,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,91,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,120,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,8,0,0,12,67,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,158,"        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
",4,3,0,5,11,0,12,0,0,19,68,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,159,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,160,"        } else if (x == 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,161,"            ret = 0.0;
",2,0,0,0,0,0,0,0,0,3,10,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,162,"        } else if (a >= 1.0 && x > a) {
",6,3,0,1,4,0,0,0,0,9,31,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,165,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,60,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,168,"            double n = 0.0; // current element index
",2,0,0,0,0,0,0,0,0,2,40,9,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,169,"            double an = 1.0 / a; // n-th element in the series
",4,1,0,0,0,0,0,0,0,5,50,9,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,170,"            double sum = an; // partial sum
",4,0,0,0,0,0,0,0,0,4,31,9,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,171,"            while (Math.abs(an) > epsilon && n < maxIterations) {
",6,3,0,2,5,0,6,0,0,15,53,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,173,"                n = n + 1.0;
",4,1,0,0,0,0,0,0,0,6,12,10,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,174,"                an = an * (x / (a + n));
",10,3,0,2,4,0,0,0,0,14,24,10,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,177,"                sum = sum + an;
",6,1,0,0,0,0,0,0,0,8,15,10,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,179,"            if (n >= maxIterations) {
",4,1,0,1,3,0,0,0,0,5,25,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,180,"                throw new MaxIterationsExceededException(maxIterations);
",2,0,0,1,2,0,0,2,0,4,56,11,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,182,"                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
",8,4,0,4,8,0,14,0,0,28,59,10,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,186,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,200,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,8,0,0,12,67,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,233,"        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
",4,3,0,5,11,0,12,0,0,19,68,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,234,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,235,"        } else if (x == 0.0) {
",2,1,0,1,4,0,0,0,0,3,22,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,236,"            ret = 1.0;
",2,0,0,0,0,0,0,0,0,3,10,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,237,"        } else if (x < a || a < 1.0) {
",6,3,0,1,4,0,0,0,0,9,30,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,240,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,60,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,243,"            ContinuedFraction cf = new ContinuedFraction() {
",2,0,0,1,3,0,0,4,0,6,48,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,256,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);
",2,1,0,1,2,0,10,0,0,14,51,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,257,"            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;
",8,4,0,4,8,0,14,0,0,28,59,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,260,"        return ret;
",2,0,0,0,0,1,0,0,0,2,11,4,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,243,"            ContinuedFraction cf = new ContinuedFraction() {
",2,0,0,1,3,0,0,4,0,6,48,8,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,248,"                    return ((2.0 * n) + 1.0) - a + x;
",6,4,0,2,4,1,0,0,0,10,33,14,0.00000,0
defect4j,math,org/apache/commons/math/special/Gamma,95,252,"                    return n * (a - n);
",6,2,0,1,2,1,0,0,0,8,19,14,0.00000,0
defect4j,math,org/apache/commons/math/special/Beta,95,42,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Beta,95,43,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,math,org/apache/commons/math/special/Beta,95,79,"        return regularizedBeta(x, a, b, epsilon, Integer.MAX_VALUE);
",4,0,0,1,2,1,10,0,0,14,60,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Beta,95,95,"        return regularizedBeta(x, a, b, DEFAULT_EPSILON, maxIterations);
",0,0,0,1,2,1,12,0,0,12,64,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Beta,95,129,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
defect4j,math,org/apache/commons/math/special/Beta,95,131,"            ret = 1.0 - regularizedBeta(1.0 - x, b, a, epsilon, maxIterations);
",4,2,0,1,2,0,10,0,0,17,67,7,0.00000,0
defect4j,math,org/apache/commons/math/special/Beta,95,172,"        return logBeta(a, b, DEFAULT_EPSILON, Integer.MAX_VALUE);
",4,0,0,1,2,1,8,0,0,12,57,5,0.00000,0
defect4j,math,org/apache/commons/math/special/Beta,95,198,"            ret = Double.NaN;
",6,0,0,0,0,0,0,0,0,7,17,6,0.00000,0
