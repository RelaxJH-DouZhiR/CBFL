dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,predict
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,14,210,"        if (DateTimeUtils.isContiguous(partial)) {
",0,0,0,2,5,0,6,0,0,6,42,5,1,1,1
defect4j,time,org/joda/time/field/FieldUtils,15,138,"                return -val1;
",2,0,0,0,0,1,0,0,0,3,13,5,0.08333,1,0
defect4j,time,org/joda/time/base/BasePeriod,11,255,"        type = checkPeriodType(type);
",2,0,0,1,2,0,4,0,0,7,29,4,1.00000,0,1
defect4j,time,org/joda/time/base/BasePeriod,11,256,"        chrono = DateTimeUtils.getChronology(chrono);
",2,0,0,1,2,0,6,0,0,9,45,4,1.00000,0,1
defect4j,time,org/joda/time/base/BasePeriod,11,257,"        iType = type;
",4,0,0,0,0,0,0,0,0,5,13,4,1.00000,0,1
defect4j,time,org/joda/time/base/BasePeriod,11,258,"        iValues = chrono.get(this, duration);
",2,0,0,1,2,0,6,0,0,9,37,4,1.00000,0,1
defect4j,time,org/joda/time/base/BasePeriod,11,259,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,time,org/joda/time/base/BasePeriod,11,57,"    private static final ReadablePeriod DUMMY_PERIOD = new AbstractPeriod() {
",2,0,0,1,3,3,0,4,0,9,73,2,1.00000,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,308,"        return DateTimeUtils.getPeriodType(type);
",0,0,0,1,2,1,6,0,0,6,41,5,1.00000,0,0
defect4j,time,org/joda/time/base/BasePeriod,11,318,"        return iType;
",2,0,0,0,0,1,0,0,0,2,13,4,1.00000,0,0
defect4j,time,org/joda/time/Period,11,298,"        super(0L, null, null);
",0,0,0,1,2,0,0,0,0,1,22,3,1.00000,0,1
defect4j,time,org/joda/time/Period,11,299,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,time,org/joda/time/Period,11,490,"        super(startInstant, endInstant, type, chrono);
",8,0,0,1,2,0,0,0,0,8,46,4,1.00000,0,1
defect4j,time,org/joda/time/Period,11,491,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.00000,0,1
defect4j,time,org/joda/time/Period,11,65,"    public static final Period ZERO = new Period();
",2,0,0,1,2,3,0,4,0,9,47,2,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,243,"        if (minuendInstant < subtrahendInstant) {
",4,1,0,1,3,0,0,0,0,5,41,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,247,"        int minuendYear = iChronology.getYear(minuendInstant);
",2,0,0,1,2,0,6,0,0,8,54,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,248,"        int minuendMonth = iChronology.getMonthOfYear(minuendInstant, minuendYear);
",2,0,0,1,2,0,8,0,0,10,75,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,249,"        int subtrahendYear = iChronology.getYear(subtrahendInstant);
",2,0,0,1,2,0,6,0,0,8,60,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,250,"        int subtrahendMonth = iChronology.getMonthOfYear(subtrahendInstant, subtrahendYear);
",2,0,0,1,2,0,8,0,0,10,84,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,252,"        long difference = (minuendYear - subtrahendYear) * ((long) iMax) + minuendMonth - subtrahendMonth;
",12,4,0,3,6,0,0,0,0,16,98,5,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,256,"        int minuendDom = iChronology.getDayOfMonth
",2,0,0,0,0,0,4,0,0,6,42,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,258,"        if (minuendDom == iChronology.getDaysInYearMonth(minuendYear, minuendMonth)) {
",2,1,0,2,5,0,8,0,0,11,78,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,271,"        long minuendRem = minuendInstant
",4,0,0,0,0,0,0,0,0,4,32,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,273,"        long subtrahendRem = subtrahendInstant
",4,0,0,0,0,0,0,0,0,4,38,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,276,"        if (minuendRem < subtrahendRem) {
",4,1,0,1,3,0,0,0,0,5,33,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,11,280,"        return difference;
",2,0,0,0,0,1,0,0,0,2,18,4,1.00000,0,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,11,91,"        return FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant, subtrahendInstant));
",0,0,0,2,4,1,10,0,0,10,84,5,1.00000,0,0
defect4j,time,org/joda/time/field/BaseDateTimeField,11,253,"        return getDurationField().add(instant, value);
",0,0,0,2,4,1,8,0,0,8,46,5,1.00000,0,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,11,190,"            return ImpreciseDateTimeField.this
",2,0,0,0,0,1,0,0,0,2,34,7,1.00000,0,0
defect4j,time,org/joda/time/field/BaseDurationField,11,141,"        return FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant, subtrahendInstant));
",0,0,0,2,4,1,10,0,0,10,84,5,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicChronology,11,371,"        long millis = getYearMillis(year);
",2,0,0,1,2,0,4,0,0,6,34,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicChronology,11,372,"        millis += getTotalMillisByYearMonth(year, month);
",2,0,0,1,2,0,6,0,0,9,49,4,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicChronology,11,373,"        return millis;
",2,0,0,0,0,1,0,0,0,2,14,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicChronology,11,402,"            i2 = i2 - unitMillis + 1;
",6,2,0,0,0,0,0,0,0,9,25,6,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicChronology,11,410,"            year--;
",2,0,0,0,0,0,0,0,0,3,7,6,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicChronology,11,485,"        long yearStart = getYearMillis(year);
",2,0,0,1,2,0,4,0,0,6,37,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicChronology,11,486,"        return (int) ((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1;
",8,3,0,3,6,1,0,0,0,11,76,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicChronology,11,537,"            daysSince19700101 = (instant - (DateTimeConstants.MILLIS_PER_DAY - 1))
",8,2,0,2,4,0,0,0,0,11,70,6,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicChronology,11,539,"            if (daysSince19700101 < -3) {
",2,1,0,1,3,0,0,0,0,4,29,6,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicChronology,11,540,"                return 7 + (int) ((daysSince19700101 + 4) % 7);
",2,3,0,3,6,1,0,0,0,5,47,8,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicChronology,11,554,"            return (DateTimeConstants.MILLIS_PER_DAY - 1)
",4,1,0,1,2,1,0,0,0,5,45,8,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,134,"        return ((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28);
",4,3,0,3,6,1,4,0,0,11,69,6,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,148,"        int minuendYear = getYear(minuendInstant);
",2,0,0,1,2,0,4,0,0,6,42,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,149,"        int subtrahendYear = getYear(subtrahendInstant);
",2,0,0,1,2,0,4,0,0,6,48,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,152,"        long minuendRem = minuendInstant - getYearMillis(minuendYear);
",4,1,0,1,2,0,4,0,0,9,62,5,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,153,"        long subtrahendRem = subtrahendInstant - getYearMillis(subtrahendYear);
",4,1,0,1,2,0,4,0,0,9,71,5,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,156,"        if (subtrahendRem >= FEB_29) {
",4,1,0,1,3,0,0,0,0,5,30,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,157,"            if (isLeapYear(subtrahendYear)) {
",0,0,0,2,5,0,4,0,0,4,33,7,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,161,"            } else if (minuendRem >= FEB_29 && isLeapYear(minuendYear)) {
",4,2,0,2,6,0,4,0,0,10,61,7,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,166,"        int difference = minuendYear - subtrahendYear;
",6,1,0,0,0,0,0,0,0,7,46,5,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,167,"        if (minuendRem < subtrahendRem) {
",4,1,0,1,3,0,0,0,0,5,33,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,168,"            difference--;
",2,0,0,0,0,0,0,0,0,3,13,6,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,170,"        return difference;
",2,0,0,0,0,1,0,0,0,2,18,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,175,"        int thisYear = getYear(instant);
",2,0,0,1,2,0,4,0,0,6,32,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,176,"        int dayOfYear = getDayOfYear(instant, thisYear);
",2,0,0,1,2,0,6,0,0,8,48,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,177,"        int millisOfDay = getMillisOfDay(instant);
",2,0,0,1,2,0,4,0,0,6,42,5,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,179,"        if (dayOfYear > (31 + 28)) { // after Feb 28
",2,2,0,2,5,0,0,0,0,4,44,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,180,"            if (isLeapYear(thisYear)) {
",0,0,0,2,5,0,4,0,0,4,27,7,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,182,"                if (!isLeapYear(year)) {
",0,0,0,2,5,0,4,0,0,5,24,8,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,184,"                    dayOfYear--;
",2,0,0,0,0,0,0,0,0,3,12,10,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,188,"                if (isLeapYear(year)) {
",0,0,0,2,5,0,4,0,0,4,23,9,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,190,"                    dayOfYear++;
",2,0,0,0,0,0,0,0,0,3,12,10,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,195,"        instant = getYearMonthDayMillis(year, 1, dayOfYear);
",2,0,0,1,2,0,6,0,0,9,52,4,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,196,"        instant += millisOfDay;
",4,0,0,0,0,0,0,0,0,5,23,4,1.00000,0,1
defect4j,time,org/joda/time/chrono/BasicGJChronology,11,198,"        return instant;
",2,0,0,0,0,1,0,0,0,2,15,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,11,54,"        return iChronology.getYear(instant);
",0,0,0,1,2,1,6,0,0,6,36,5,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,11,58,"        if (years == 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,11,59,"            return instant;
",2,0,0,0,0,1,0,0,0,2,15,6,1.00000,0,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,11,61,"        int thisYear = get(instant);
",2,0,0,1,2,0,4,0,0,6,28,5,1.00000,0,1
