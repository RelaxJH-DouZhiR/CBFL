dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');
",0,0,0,1,2,0,4,0,0,5,15,13,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,1.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,223,"                        if (escapeSingleQuote) {
",2,0,0,1,3,0,0,0,0,2,24,12,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,"                        out.write('\'');
",0,0,0,1,2,0,4,0,0,5,16,13,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,227,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.50000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,"            StringWriter writer = new StringWriter(str.length() * 2);
",2,1,0,2,4,0,4,4,0,11,57,6,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,154,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);
",0,0,0,1,2,0,8,0,0,8,55,7,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,155,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,"        sz = str.length();
",2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,184,"            if (ch > 0xfff) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,186,"            } else if (ch > 0xff) {
",2,1,0,1,4,0,0,0,0,3,23,7,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,188,"            } else if (ch > 0x7f) {
",2,1,0,1,4,0,0,0,0,3,23,8,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,190,"            } else if (ch < 32) {
",2,1,0,1,4,0,0,0,0,3,21,9,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,221,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,11,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,"                        out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,13,0.33333,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,242,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.33333,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,60,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,47,"    protected NestableDelegate delegate = new NestableDelegate(this);
",2,0,0,1,2,1,0,4,0,7,65,2,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,53,"    private Throwable cause = null;
",2,0,0,0,0,1,0,2,0,5,31,2,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,61,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,70,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,71,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,81,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,82,"        this.cause = cause;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,83,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,94,"        super(msg);
",2,0,0,1,2,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,95,"        this.cause = cause;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,96,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,102,"        return cause;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,113,"        if (super.getMessage() != null) {
",2,1,0,2,5,0,0,0,0,3,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,114,"            return super.getMessage();
",2,0,0,1,2,0,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,115,"        } else if (cause != null) {
",2,1,0,1,4,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,116,"            return cause.toString();
",0,0,0,1,2,0,4,0,0,4,24,8,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,118,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,126,"        if (index == 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,127,"            return super.getMessage();
",2,0,0,1,2,0,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,129,"        return delegate.getMessage(index);
",0,0,0,1,2,0,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,136,"        return delegate.getMessages();
",0,0,0,1,2,0,4,0,0,4,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,143,"        return delegate.getThrowable(index);
",0,0,0,1,2,0,6,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,150,"        return delegate.getThrowableCount();
",0,0,0,1,2,0,4,0,0,4,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,157,"        return delegate.getThrowables();
",0,0,0,1,2,0,4,0,0,4,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,164,"        return delegate.indexOfThrowable(type, 0);
",0,0,0,1,2,0,6,0,0,6,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,171,"        return delegate.indexOfThrowable(type, fromIndex);
",0,0,0,1,2,0,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,178,"        delegate.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,179,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,185,"        delegate.printStackTrace(out);
",0,0,0,1,2,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,186,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,192,"        delegate.printStackTrace(out);
",0,0,0,1,2,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,193,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,199,"        super.printStackTrace(out);
",4,0,0,1,2,0,0,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,200,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,54,"      super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,55,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,81,"        return escapeJavaStyleString(str, false);
",0,0,0,1,2,0,4,0,0,5,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,97,"        escapeJavaStyleString(out, str, false);
",0,0,0,1,2,0,6,0,0,7,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,122,"        return escapeJavaStyleString(str, true);
",0,0,0,1,2,0,4,0,0,5,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,138,"        escapeJavaStyleString(out, str, true);
",0,0,0,1,2,0,6,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,139,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,156,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,158,"            ioe.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,159,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,176,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,185,"                out.write(""\\u"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,187,"                out.write(""\\u0"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,189,"                out.write(""\\u00"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,29,11,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,191,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,193,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,194,"                        out.write('b');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,195,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,197,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,198,"                        out.write('n');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,199,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,201,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,202,"                        out.write('t');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,203,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,205,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,206,"                        out.write('f');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,207,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,209,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,210,"                        out.write('r');
",0,0,0,1,2,0,4,0,0,5,15,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,211,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,213,"                        if (ch > 0xf) {
",2,1,0,1,3,0,0,0,0,3,15,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,214,"                            out.write(""\\u00"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,29,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,216,"                            out.write(""\\u000"" + hex(ch));
",0,1,0,2,4,0,8,0,0,10,30,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,218,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,224,"                          out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,15,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,233,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,234,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,235,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,252,"        return Integer.toHexString(ch).toUpperCase();
",0,0,0,2,4,0,8,0,0,8,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,265,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,266,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,269,"            StringWriter writer = new StringWriter(str.length());
",2,0,0,2,4,0,4,4,0,10,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,270,"            unescapeJava(writer, str);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,271,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,272,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,274,"            ioe.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,275,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,295,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,296,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,298,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,299,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,301,"        int sz = str.length();
",2,0,0,1,2,0,4,0,0,6,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,302,"        StringBuffer unicode = new StringBuffer(4);
",2,0,0,1,2,0,0,4,0,6,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,303,"        boolean hadSlash = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,304,"        boolean inUnicode = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,305,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,306,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,307,"            if (inUnicode) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,310,"                unicode.append(ch);
",0,0,0,1,2,0,6,0,0,6,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,311,"                if (unicode.length() == 4) {
",0,1,0,2,5,0,4,0,0,5,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,315,"                        int value = Integer.parseInt(unicode.toString(), 16);
",2,0,0,2,4,0,8,0,0,10,53,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,316,"                        out.write((char) value);
",2,0,0,2,4,0,4,0,0,6,24,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,317,"                        unicode.setLength(0);
",0,0,0,1,2,0,4,0,0,4,21,13,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,318,"                        inUnicode = false;
",2,0,0,0,0,0,0,0,0,4,18,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,319,"                        hadSlash = false;
",2,0,0,0,0,0,0,0,0,4,17,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,322,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,320,"                    } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,12,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,321,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);
",4,1,0,1,2,0,0,2,0,8,85,14,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,326,"            if (hadSlash) {
",2,0,0,1,3,0,0,0,0,2,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,328,"                hadSlash = false;
",2,0,0,0,0,0,0,0,0,4,17,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,329,"                switch (ch) {
",2,0,0,1,3,0,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,331,"                        out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,332,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,334,"                        out.write('\'');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,335,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,337,"                        out.write('""');
",0,0,0,1,2,0,4,0,0,5,15,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,338,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,340,"                        out.write('\r');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,341,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,343,"                        out.write('\f');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,344,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,346,"                        out.write('\t');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,347,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,349,"                        out.write('\n');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,350,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,352,"                        out.write('\b');
",0,0,0,1,2,0,4,0,0,5,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,353,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,357,"                            inUnicode = true;
",2,0,0,0,0,0,0,0,0,4,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,358,"                            break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,361,"                        out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,10,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,362,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,365,"            } else if (ch == '\\') {
",2,1,0,1,4,0,0,0,0,4,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,366,"                hadSlash = true;
",2,0,0,0,0,0,0,0,0,4,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,367,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,369,"            out.write(ch);
",0,0,0,1,2,0,6,0,0,6,14,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,371,"        if (hadSlash) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,374,"            out.write('\\');
",0,0,0,1,2,0,4,0,0,5,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,376,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,390,"        return unescapeJava(str);
",0,0,0,1,2,0,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,410,"        unescapeJava(out, str);
",0,0,0,1,2,0,6,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,411,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,442,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,443,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,446,"            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
",2,1,0,4,8,0,4,4,0,11,67,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,447,"            escapeHtml(writer, str);
",0,0,0,1,2,0,6,0,0,6,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,448,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,449,"        } catch (IOException e) {
",2,0,0,1,4,0,0,2,0,4,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,452,"            e.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,453,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,487,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,488,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,490,"        if (string == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,491,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,493,"        Entities.HTML40.escape(writer, string);
",4,0,0,1,2,0,6,0,0,10,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,494,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,514,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,515,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,518,"            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
",2,1,0,4,8,0,4,4,0,11,67,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,519,"            unescapeHtml(writer, str);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,520,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,521,"        } catch (IOException e) {
",2,0,0,1,4,0,0,2,0,4,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,524,"            e.printStackTrace();
",0,0,0,1,2,0,4,0,0,4,20,8,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,525,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,548,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,549,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,551,"        if (string == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,552,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,554,"        Entities.HTML40.unescape(writer, string);
",4,0,0,1,2,0,6,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,555,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,578,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,579,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,581,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,582,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,584,"        Entities.XML.escape(writer, str);
",4,0,0,1,2,0,6,0,0,10,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,585,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,605,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,606,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,608,"        return Entities.XML.escape(str);
",4,0,0,1,2,0,4,0,0,8,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,630,"        if (writer == null ) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,631,"            throw new IllegalArgumentException (""The Writer must not be null."");
",0,0,0,1,2,0,0,2,0,4,68,6,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,633,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,634,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,636,"        Entities.XML.unescape(writer, str);
",4,0,0,1,2,0,6,0,0,10,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,637,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,655,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,656,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,658,"        return Entities.XML.unescape(str);
",4,0,0,1,2,0,4,0,0,8,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,681,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,682,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,684,"        return StringUtils.replace(str, ""'"", ""''"");
",0,0,0,1,2,0,6,0,0,8,43,5,0.00000,0
