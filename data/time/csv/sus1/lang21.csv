dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");
",2,0,0,1,2,3,4,2,0,12,73,2,0.00926,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,"    private static final int[][] fields = {
",2,0,0,2,5,3,0,0,0,5,39,2,0.00926,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,"            super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,"            this.endFinal = endFinal;
",4,0,0,0,0,0,0,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,"            spot = startFinal;
",4,0,0,0,0,0,0,0,0,5,18,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);
",4,0,0,1,2,0,4,0,0,9,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1836,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1844,"            return spot.before(endFinal);
",0,0,0,1,2,0,6,0,0,6,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1853,"            if (spot.equals(endFinal)) {
",0,0,0,2,5,0,6,0,0,6,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1854,"                throw new NoSuchElementException();
",0,0,0,1,2,0,0,2,0,2,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1856,"            spot.add(Calendar.DATE, 1);
",4,0,0,1,2,0,4,0,0,8,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1857,"            return (Calendar) spot.clone();
",0,0,0,2,4,0,4,2,0,6,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1867,"            throw new UnsupportedOperationException();
",0,0,0,1,2,0,0,2,0,2,42,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1821,"    static class DateIterator implements Iterator<Calendar> {
",2,0,0,0,1,1,0,4,0,7,57,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,158,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,159,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,176,"        if (date1 == null || date2 == null) {
",4,3,0,1,3,0,0,0,0,7,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,177,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,179,"        Calendar cal1 = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,180,"        cal1.setTime(date1);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,181,"        Calendar cal2 = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,182,"        cal2.setTime(date2);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,183,"        return isSameDay(cal1, cal2);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,200,"        if (cal1 == null || cal2 == null) {
",4,3,0,1,3,0,0,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,201,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,203,"        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
",8,3,0,2,5,0,8,0,0,19,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,221,"        if (date1 == null || date2 == null) {
",4,3,0,1,3,0,0,0,0,7,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,222,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,224,"        return date1.getTime() == date2.getTime();
",0,1,0,2,4,0,8,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,239,"        if (cal1 == null || cal2 == null) {
",4,3,0,1,3,0,0,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,240,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,242,"        return cal1.getTime().getTime() == cal2.getTime().getTime();
",0,1,0,4,8,0,12,0,0,13,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,259,"        if (cal1 == null || cal2 == null) {
",4,3,0,1,3,0,0,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,260,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,262,"        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
",8,8,0,2,5,0,8,0,0,24,75,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,288,"        return parseDateWithLeniency(str, parsePatterns, true);
",0,0,0,1,2,0,6,0,0,7,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,308,"        return parseDateWithLeniency(str, parsePatterns, false);
",0,0,0,1,2,0,6,0,0,7,56,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,328,"        if (str == null || parsePatterns == null) {
",4,3,0,1,3,0,0,0,0,7,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,329,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");
",0,0,0,1,2,0,0,2,0,4,73,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,332,"        SimpleDateFormat parser = new SimpleDateFormat();
",2,0,0,1,2,0,0,4,0,6,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,333,"        parser.setLenient(lenient);
",0,0,0,1,2,0,6,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,334,"        ParsePosition pos = new ParsePosition(0);
",2,0,0,1,2,0,0,4,0,6,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,335,"        for (int i = 0; i < parsePatterns.length; i++) {
",10,1,0,1,3,0,0,0,0,12,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,337,"            String pattern = parsePatterns[i];
",2,0,1,1,2,0,0,2,0,8,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,340,"            if (parsePatterns[i].endsWith(""ZZ"")) {
",0,0,1,3,7,0,2,0,0,7,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,341,"                pattern = pattern.substring(0, pattern.length() - 1);
",2,1,0,2,4,0,8,0,0,12,53,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,344,"            parser.applyPattern(pattern);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,345,"            pos.setIndex(0);
",0,0,0,1,2,0,4,0,0,4,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,347,"            String str2 = str;
",4,0,0,0,0,0,0,2,0,6,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,349,"            if (parsePatterns[i].endsWith(""ZZ"")) {
",0,0,1,3,7,0,2,0,0,7,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,350,"                str2 = str.replaceAll(""([-+][0-9][0-9]):([0-9][0-9])$"", ""$1$2""); 
",2,0,0,8,16,0,4,0,0,9,64,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,353,"            Date date = parser.parse(str2, pos);
",2,0,0,1,2,0,8,2,0,12,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,354,"            if (date != null && pos.getIndex() == str2.length()) {
",2,3,0,3,7,0,8,0,0,13,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,355,"                return date;
",2,0,0,0,0,0,0,0,0,2,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,358,"        throw new ParseException(""Unable to parse the date: "" + str, -1);
",2,1,0,1,2,0,0,2,0,7,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,372,"        return add(date, Calendar.YEAR, amount);
",4,0,0,1,2,0,6,0,0,10,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,386,"        return add(date, Calendar.MONTH, amount);
",4,0,0,1,2,0,6,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,400,"        return add(date, Calendar.WEEK_OF_YEAR, amount);
",4,0,0,1,2,0,6,0,0,10,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,414,"        return add(date, Calendar.DAY_OF_MONTH, amount);
",4,0,0,1,2,0,6,0,0,10,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,428,"        return add(date, Calendar.HOUR_OF_DAY, amount);
",4,0,0,1,2,0,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,442,"        return add(date, Calendar.MINUTE, amount);
",4,0,0,1,2,0,6,0,0,10,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,456,"        return add(date, Calendar.SECOND, amount);
",4,0,0,1,2,0,6,0,0,10,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,470,"        return add(date, Calendar.MILLISECOND, amount);
",4,0,0,1,2,0,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,485,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,486,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,488,"        Calendar c = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,489,"        c.setTime(date);
",0,0,0,1,2,0,6,0,0,6,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,490,"        c.add(calendarField, amount);
",0,0,0,1,2,0,8,0,0,8,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,491,"        return c.getTime();
",0,0,0,1,2,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,506,"        return set(date, Calendar.YEAR, amount);
",4,0,0,1,2,0,6,0,0,10,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,521,"        return set(date, Calendar.MONTH, amount);
",4,0,0,1,2,0,6,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,536,"        return set(date, Calendar.DAY_OF_MONTH, amount);
",4,0,0,1,2,0,6,0,0,10,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,552,"        return set(date, Calendar.HOUR_OF_DAY, amount);
",4,0,0,1,2,0,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,567,"        return set(date, Calendar.MINUTE, amount);
",4,0,0,1,2,0,6,0,0,10,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,582,"        return set(date, Calendar.SECOND, amount);
",4,0,0,1,2,0,6,0,0,10,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,597,"        return set(date, Calendar.MILLISECOND, amount);
",4,0,0,1,2,0,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,614,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,615,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,618,"        Calendar c = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,619,"        c.setLenient(false);
",0,0,0,1,2,0,4,0,0,5,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,620,"        c.setTime(date);
",0,0,0,1,2,0,6,0,0,6,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,621,"        c.set(calendarField, amount);
",0,0,0,1,2,0,8,0,0,8,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,622,"        return c.getTime();
",0,0,0,1,2,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,635,"        Calendar c = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,636,"        c.setTime(date);
",0,0,0,1,2,0,6,0,0,6,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,637,"        return c;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,670,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,671,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,673,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,674,"        gval.setTime(date);
",0,0,0,1,2,0,6,0,0,6,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,675,"        modify(gval, field, MODIFY_ROUND);
",0,0,0,1,2,0,8,0,0,8,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,676,"        return gval.getTime();
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,708,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,709,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,711,"        Calendar rounded = (Calendar) date.clone();
",2,0,0,2,4,0,4,4,0,10,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,712,"        modify(rounded, field, MODIFY_ROUND);
",0,0,0,1,2,0,8,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,713,"        return rounded;
",2,0,0,0,0,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,747,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,748,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,750,"        if (date instanceof Date) {
",2,0,0,1,3,0,0,2,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,751,"            return round((Date) date, field);
",2,0,0,2,4,0,4,2,0,8,33,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,752,"        } else if (date instanceof Calendar) {
",2,0,0,1,4,0,0,2,0,4,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,753,"            return round((Calendar) date, field).getTime();
",2,0,0,3,6,0,6,2,0,10,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,755,"            throw new ClassCastException(""Could not round "" + date);
",2,1,0,1,2,0,0,2,0,6,56,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,777,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,778,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,780,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,781,"        gval.setTime(date);
",0,0,0,1,2,0,6,0,0,6,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,782,"        modify(gval, field, MODIFY_TRUNCATE);
",0,0,0,1,2,0,8,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,783,"        return gval.getTime();
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,803,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,804,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,806,"        Calendar truncated = (Calendar) date.clone();
",2,0,0,2,4,0,4,4,0,10,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,807,"        modify(truncated, field, MODIFY_TRUNCATE);
",0,0,0,1,2,0,8,0,0,8,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,808,"        return truncated;
",2,0,0,0,0,0,0,0,0,2,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,832,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,833,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,835,"        if (date instanceof Date) {
",2,0,0,1,3,0,0,2,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,836,"            return truncate((Date) date, field);
",2,0,0,2,4,0,4,2,0,8,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,837,"        } else if (date instanceof Calendar) {
",2,0,0,1,4,0,0,2,0,4,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,838,"            return truncate((Calendar) date, field).getTime();
",2,0,0,3,6,0,6,2,0,10,50,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,840,"            throw new ClassCastException(""Could not truncate "" + date);
",2,1,0,1,2,0,0,2,0,6,59,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,863,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,864,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,866,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,867,"        gval.setTime(date);
",0,0,0,1,2,0,6,0,0,6,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,868,"        modify(gval, field, MODIFY_CEILING);
",0,0,0,1,2,0,8,0,0,8,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,869,"        return gval.getTime();
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,890,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,891,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,893,"        Calendar ceiled = (Calendar) date.clone();
",2,0,0,2,4,0,4,4,0,10,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,894,"        modify(ceiled, field, MODIFY_CEILING);
",0,0,0,1,2,0,8,0,0,8,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,895,"        return ceiled;
",2,0,0,0,0,0,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,920,"        if (date == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,921,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,923,"        if (date instanceof Date) {
",2,0,0,1,3,0,0,2,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,924,"            return ceiling((Date) date, field);
",2,0,0,2,4,0,4,2,0,8,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,925,"        } else if (date instanceof Calendar) {
",2,0,0,1,4,0,0,2,0,4,38,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,926,"            return ceiling((Calendar) date, field).getTime();
",2,0,0,3,6,0,6,2,0,10,49,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,928,"            throw new ClassCastException(""Could not find ceiling of for type: "" + date.getClass());
",0,1,0,2,4,0,4,2,0,8,87,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,942,"        if (val.get(Calendar.YEAR) > 280000000) {
",4,1,0,2,5,0,4,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,943,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");
",0,0,0,1,2,0,0,2,0,3,84,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,946,"        if (field == Calendar.MILLISECOND) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,947,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,956,"        Date date = val.getTime();
",2,0,0,1,2,0,4,2,0,8,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,957,"        long time = date.getTime();
",2,0,0,1,2,0,4,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,958,"        boolean done = false;
",2,0,0,0,0,0,0,0,0,3,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,961,"        int millisecs = val.get(Calendar.MILLISECOND);
",6,0,0,1,2,0,4,0,0,10,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,962,"        if (MODIFY_TRUNCATE == modType || millisecs < 500) {
",6,3,0,1,3,0,0,0,0,9,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,963,"            time = time - millisecs;
",6,1,0,0,0,0,0,0,0,8,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,965,"        if (field == Calendar.SECOND) {
",6,1,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,966,"            done = true;
",2,0,0,0,0,0,0,0,0,4,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,970,"        int seconds = val.get(Calendar.SECOND);
",6,0,0,1,2,0,4,0,0,10,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,971,"        if (!done && (MODIFY_TRUNCATE == modType || seconds < 30)) {
",8,4,0,2,5,0,0,0,0,13,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,972,"            time = time - (seconds * 1000L);
",6,2,0,1,2,0,0,0,0,9,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,974,"        if (field == Calendar.MINUTE) {
",6,1,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,975,"            done = true;
",2,0,0,0,0,0,0,0,0,4,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,979,"        int minutes = val.get(Calendar.MINUTE);
",6,0,0,1,2,0,4,0,0,10,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,980,"        if (!done && (MODIFY_TRUNCATE == modType || minutes < 30)) {
",8,4,0,2,5,0,0,0,0,13,60,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,981,"            time = time - (minutes * 60000L);
",6,2,0,1,2,0,0,0,0,9,33,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,985,"        if (date.getTime() != time) {
",2,1,0,2,5,0,4,0,0,7,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,986,"            date.setTime(time);
",0,0,0,1,2,0,6,0,0,6,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,987,"            val.setTime(date);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,991,"        boolean roundUp = false;
",2,0,0,0,0,0,0,0,0,3,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,992,"        for (int i = 0; i < fields.length; i++) {
",10,1,0,1,3,0,0,0,0,12,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,993,"            for (int j = 0; j < fields[i].length; j++) {
",8,1,1,2,5,0,0,0,0,14,44,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,994,"                if (fields[i][j] == field) {
",2,1,1,3,7,0,0,0,0,9,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,996,"                    if (modType == MODIFY_CEILING || (modType == MODIFY_ROUND && roundUp)) {
",10,4,0,2,5,0,0,0,0,14,72,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,997,"                        if (field == DateUtils.SEMI_MONTH) {
",6,1,0,1,3,0,0,0,0,7,36,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1001,"                            if (val.get(Calendar.DATE) == 1) {
",4,1,0,2,5,0,4,0,0,9,34,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1002,"                                val.add(Calendar.DATE, 15);
",4,0,0,1,2,0,4,0,0,8,27,17,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1004,"                                val.add(Calendar.DATE, -15);
",4,0,0,1,2,0,4,0,0,9,28,17,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1005,"                                val.add(Calendar.MONTH, 1);
",4,0,0,1,2,0,4,0,0,8,27,17,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1008,"                        } else if (field == Calendar.AM_PM) {
",6,1,0,1,4,0,0,0,0,7,37,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1012,"                            if (val.get(Calendar.HOUR_OF_DAY) == 0) {
",4,1,0,2,5,0,4,0,0,9,41,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1013,"                                val.add(Calendar.HOUR_OF_DAY, 12);
",4,0,0,1,2,0,4,0,0,8,34,18,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1015,"                                val.add(Calendar.HOUR_OF_DAY, -12);
",4,0,0,1,2,0,4,0,0,9,35,18,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1016,"                                val.add(Calendar.DATE, 1);
",4,0,0,1,2,0,4,0,0,8,26,18,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1022,"                            val.add(fields[i][0], 1);
",0,0,1,3,6,0,4,0,0,8,25,16,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1025,"                    return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1029,"            int offset = 0;
",2,0,0,0,0,0,0,0,0,2,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1030,"            boolean offsetSet = false;
",2,0,0,0,0,0,0,0,0,3,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1032,"            switch (field) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1034,"                    if (fields[i][0] == Calendar.DATE) {
",4,1,1,3,7,0,0,0,0,9,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1038,"                        offset = val.get(Calendar.DATE) - 1;
",6,1,0,1,2,0,4,0,0,12,36,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1041,"                        if (offset >= 15) {
",2,1,0,1,3,0,0,0,0,3,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1042,"                            offset -= 15;
",2,0,0,0,0,0,0,0,0,3,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1045,"                        roundUp = offset > 7;
",4,1,0,0,0,0,0,0,0,6,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1046,"                        offsetSet = true;
",2,0,0,0,0,0,0,0,0,4,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1050,"                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {
",4,1,1,3,7,0,0,0,0,9,43,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1053,"                        offset = val.get(Calendar.HOUR_OF_DAY);
",6,0,0,1,2,0,4,0,0,11,39,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1054,"                        if (offset >= 12) {
",2,1,0,1,3,0,0,0,0,3,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1055,"                            offset -= 12;
",2,0,0,0,0,0,0,0,0,3,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1057,"                        roundUp = offset >= 6;
",4,1,0,0,0,0,0,0,0,6,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1058,"                        offsetSet = true;
",2,0,0,0,0,0,0,0,0,4,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1062,"            if (!offsetSet) {
",2,0,0,1,3,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1063,"                int min = val.getActualMinimum(fields[i][0]);
",2,0,1,3,6,0,4,0,0,10,45,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1064,"                int max = val.getActualMaximum(fields[i][0]);
",2,0,1,3,6,0,4,0,0,10,45,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1066,"                offset = val.get(fields[i][0]) - min;
",4,1,1,3,6,0,4,0,0,14,37,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1068,"                roundUp = offset > ((max - min) / 2);
",8,3,0,2,4,0,0,0,0,12,37,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1071,"            if (offset != 0) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1072,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);
",2,1,1,6,12,0,8,0,0,19,54,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1075,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");
",2,1,0,1,2,0,0,2,0,7,79,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1105,"        if (focus == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1106,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1108,"        Calendar gval = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1109,"        gval.setTime(focus);
",0,0,0,1,2,0,6,0,0,6,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1110,"        return iterator(gval, rangeStyle);
",0,0,0,1,2,0,6,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1138,"        if (focus == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1139,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1141,"        Calendar start = null;
",2,0,0,0,0,0,0,2,0,4,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1142,"        Calendar end = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1143,"        int startCutoff = Calendar.SUNDAY;
",6,0,0,0,0,0,0,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1144,"        int endCutoff = Calendar.SATURDAY;
",6,0,0,0,0,0,0,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1145,"        switch (rangeStyle) {
",2,0,0,1,3,0,0,0,0,2,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1149,"                start = truncate(focus, Calendar.MONTH);
",6,0,0,1,2,0,4,0,0,11,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1151,"                end = (Calendar) start.clone();
",2,0,0,2,4,0,4,2,0,9,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1152,"                end.add(Calendar.MONTH, 1);
",4,0,0,1,2,0,4,0,0,8,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1153,"                end.add(Calendar.DATE, -1);
",4,0,0,1,2,0,4,0,0,9,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1155,"                if (rangeStyle == RANGE_MONTH_MONDAY) {
",4,1,0,1,3,0,0,0,0,5,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1156,"                    startCutoff = Calendar.MONDAY;
",6,0,0,0,0,0,0,0,0,7,30,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1157,"                    endCutoff = Calendar.SUNDAY;
",6,0,0,0,0,0,0,0,0,7,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1165,"                start = truncate(focus, Calendar.DATE);
",6,0,0,1,2,0,4,0,0,11,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1166,"                end = truncate(focus, Calendar.DATE);
",6,0,0,1,2,0,4,0,0,11,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1167,"                switch (rangeStyle) {
",2,0,0,1,3,0,0,0,0,2,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1170,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1172,"                        startCutoff = Calendar.MONDAY;
",6,0,0,0,0,0,0,0,0,7,30,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1173,"                        endCutoff = Calendar.SUNDAY;
",6,0,0,0,0,0,0,0,0,7,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1174,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1176,"                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);
",6,0,0,1,2,0,4,0,0,11,46,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1177,"                        endCutoff = startCutoff - 1;
",4,1,0,0,0,0,0,0,0,6,28,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1178,"                        break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1180,"                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;
",6,1,0,1,2,0,4,0,0,12,50,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1181,"                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;
",6,1,0,1,2,0,4,0,0,12,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1184,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1186,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");
",2,1,0,1,2,0,0,2,0,7,87,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1188,"        if (startCutoff < Calendar.SUNDAY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1189,"            startCutoff += 7;
",2,0,0,0,0,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1191,"        if (startCutoff > Calendar.SATURDAY) {
",6,1,0,1,3,0,0,0,0,7,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1192,"            startCutoff -= 7;
",2,0,0,0,0,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1194,"        if (endCutoff < Calendar.SUNDAY) {
",6,1,0,1,3,0,0,0,0,7,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1195,"            endCutoff += 7;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1197,"        if (endCutoff > Calendar.SATURDAY) {
",6,1,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1198,"            endCutoff -= 7;
",2,0,0,0,0,0,0,0,0,3,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1200,"        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {
",6,1,0,2,5,0,4,0,0,11,56,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1201,"            start.add(Calendar.DATE, -1);
",4,0,0,1,2,0,4,0,0,9,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1203,"        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {
",6,1,0,2,5,0,4,0,0,11,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1204,"            end.add(Calendar.DATE, 1);
",4,0,0,1,2,0,4,0,0,8,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1206,"        return new DateIterator(start, end);
",4,0,0,1,2,0,0,2,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1229,"        if (focus == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1230,"            throw new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,64,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1232,"        if (focus instanceof Date) {
",2,0,0,1,3,0,0,2,0,4,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1233,"            return iterator((Date) focus, rangeStyle);
",2,0,0,2,4,0,4,2,0,8,42,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1234,"        } else if (focus instanceof Calendar) {
",2,0,0,1,4,0,0,2,0,4,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1235,"            return iterator((Calendar) focus, rangeStyle);
",2,0,0,2,4,0,4,2,0,8,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1237,"            throw new ClassCastException(""Could not iterate based on "" + focus);
",2,1,0,1,2,0,0,2,0,6,68,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1275,"        return getFragment(date, fragment, Calendar.MILLISECOND);    
",4,0,0,1,2,0,6,0,0,10,57,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1315,"        return getFragment(date, fragment, Calendar.SECOND);
",4,0,0,1,2,0,6,0,0,10,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1355,"        return getFragment(date, fragment, Calendar.MINUTE);
",4,0,0,1,2,0,6,0,0,10,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1395,"        return getFragment(date, fragment, Calendar.HOUR_OF_DAY);
",4,0,0,1,2,0,6,0,0,10,57,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1435,"        return getFragment(date, fragment, Calendar.DAY_OF_YEAR);
",4,0,0,1,2,0,6,0,0,10,57,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1475,"    return getFragment(calendar, fragment, Calendar.MILLISECOND);
",4,0,0,1,2,0,6,0,0,10,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1514,"        return getFragment(calendar, fragment, Calendar.SECOND);
",4,0,0,1,2,0,6,0,0,10,56,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1554,"        return getFragment(calendar, fragment, Calendar.MINUTE);
",4,0,0,1,2,0,6,0,0,10,56,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1594,"        return getFragment(calendar, fragment, Calendar.HOUR_OF_DAY);
",4,0,0,1,2,0,6,0,0,10,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1636,"        return getFragment(calendar, fragment, Calendar.DAY_OF_YEAR);
",4,0,0,1,2,0,6,0,0,10,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1651,"        if(date == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1652,"            throw  new IllegalArgumentException(""The date must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1654,"        Calendar calendar = Calendar.getInstance();
",2,0,0,1,2,0,4,2,0,8,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1655,"        calendar.setTime(date);
",0,0,0,1,2,0,6,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1656,"        return getFragment(calendar, fragment, unit);
",0,0,0,1,2,0,8,0,0,8,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1671,"        if(calendar == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1672,"            throw  new IllegalArgumentException(""The date must not be null""); 
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1674,"        long millisPerUnit = getMillisPerUnit(unit);
",2,0,0,1,2,0,4,0,0,6,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1675,"        long result = 0;
",2,0,0,0,0,0,0,0,0,2,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1678,"        switch (fragment) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1680,"                result += (calendar.get(Calendar.DAY_OF_YEAR) * MILLIS_PER_DAY) / millisPerUnit;
",10,2,0,2,4,0,4,0,0,17,80,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1681,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1683,"                result += (calendar.get(Calendar.DAY_OF_MONTH) * MILLIS_PER_DAY) / millisPerUnit;
",10,2,0,2,4,0,4,0,0,17,81,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1687,"        switch (fragment) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1695,"                result += (calendar.get(Calendar.HOUR_OF_DAY) * MILLIS_PER_HOUR) / millisPerUnit;
",10,2,0,2,4,0,4,0,0,17,81,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1698,"                result += (calendar.get(Calendar.MINUTE) * MILLIS_PER_MINUTE) / millisPerUnit;
",10,2,0,2,4,0,4,0,0,17,78,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1701,"                result += (calendar.get(Calendar.SECOND) * MILLIS_PER_SECOND) / millisPerUnit;
",10,2,0,2,4,0,4,0,0,17,78,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1704,"                result += (calendar.get(Calendar.MILLISECOND) * 1) / millisPerUnit;
",8,2,0,2,4,0,4,0,0,15,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1705,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1706,"            case Calendar.MILLISECOND: break;//never useful
",4,0,0,0,0,0,0,0,0,4,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1707,"                default: throw new IllegalArgumentException(""The fragment "" + fragment + "" is not supported"");
",2,1,0,1,2,0,0,2,0,7,94,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1709,"        return result;
",2,0,0,0,0,0,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1726,"        return truncatedCompareTo(cal1, cal2, field) == 0;
",0,1,0,1,2,0,8,0,0,9,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1743,"        return truncatedCompareTo(date1, date2, field) == 0;
",0,1,0,1,2,0,8,0,0,9,52,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1761,"        Calendar truncatedCal1 = truncate(cal1, field);
",2,0,0,1,2,0,6,2,0,10,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1762,"        Calendar truncatedCal2 = truncate(cal2, field);
",2,0,0,1,2,0,6,2,0,10,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1763,"        return truncatedCal1.compareTo(truncatedCal2);
",0,0,0,1,2,0,6,0,0,6,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1781,"        Date truncatedDate1 = truncate(date1, field);
",2,0,0,1,2,0,6,2,0,10,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1782,"        Date truncatedDate2 = truncate(date2, field);
",2,0,0,1,2,0,6,2,0,10,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1783,"        return truncatedDate1.compareTo(truncatedDate2);
",0,0,0,1,2,0,6,0,0,6,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1795,"        long result = Long.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1796,"        switch (unit) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1799,"                result = MILLIS_PER_DAY;
",4,0,0,0,0,0,0,0,0,5,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1800,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1802,"                result = MILLIS_PER_HOUR;
",4,0,0,0,0,0,0,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1803,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1805,"                result = MILLIS_PER_MINUTE;
",4,0,0,0,0,0,0,0,0,5,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1806,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1808,"                result = MILLIS_PER_SECOND;
",4,0,0,0,0,0,0,0,0,5,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1809,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1811,"                result = 1;
",2,0,0,0,0,0,0,0,0,3,11,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1812,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1813,"            default: throw new IllegalArgumentException(""The unit "" + unit + "" cannot be represented is milleseconds"");
",2,1,0,1,2,0,0,2,0,7,107,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1815,"        return result;
",2,0,0,0,0,0,0,0,0,2,14,4,0.00000,0
