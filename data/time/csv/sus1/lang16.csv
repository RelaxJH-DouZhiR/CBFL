dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,"            return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,7,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,"                dec = str.substring(decPos + 1);
",4,1,0,1,2,0,4,0,0,10,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);
",2,0,0,1,2,0,6,0,0,9,32,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,"                if (expPos > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);
",2,0,0,1,2,0,6,0,0,9,32,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,"                        Float f = NumberUtils.createFloat(numeric);
",2,0,0,1,2,0,6,2,0,10,43,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,"                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,521,"                            return f;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,"                        Double d = NumberUtils.createDouble(numeric);
",2,0,0,1,2,0,6,2,0,10,45,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,"                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,"                            return d;
",2,0,0,0,0,0,0,0,0,2,9,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,"            if (dec == null && exp == null) {
",4,3,0,1,3,0,0,0,0,7,33,6,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,"                    return createInteger(str);
",0,0,0,1,2,0,4,0,0,4,26,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,560,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,564,"                    return createLong(str);
",0,0,0,1,2,0,4,0,0,4,23,11,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,572,"                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,9,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,574,"                    Float f = createFloat(str);
",2,0,0,1,2,0,4,2,0,8,27,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,575,"                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,65,10,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,"                        return f;
",2,0,0,0,0,0,0,0,0,2,9,12,1.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,445,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,448,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,451,"        if (str.startsWith(""--"")) {
",0,0,0,2,5,0,4,0,0,5,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {
",0,1,0,3,7,0,8,0,0,11,52,4,0.50000,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,461,"        char lastChar = str.charAt(str.length() - 1);
",2,1,0,2,4,0,8,0,0,11,45,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,465,"        int decPos = str.indexOf('.');
",2,0,0,1,2,0,4,0,0,7,30,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,466,"        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
",2,1,0,2,4,0,8,0,0,13,53,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,468,"        if (decPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,480,"            if (expPos > -1) {
",2,1,0,1,3,0,0,0,0,4,18,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,486,"                mant = str;
",4,0,0,0,0,0,0,0,0,5,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,488,"            dec = null;
",2,0,0,0,0,0,0,0,0,3,11,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,490,"        if (!Character.isDigit(lastChar) && lastChar != '.') {
",2,2,0,2,5,0,6,0,0,12,54,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,491,"            if (expPos > -1 && expPos < str.length() - 1) {
",4,4,0,2,5,0,4,0,0,13,47,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,494,"                exp = null;
",2,0,0,0,0,0,0,0,0,3,11,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,497,"            String numeric = str.substring(0, str.length() - 1);
",2,1,0,2,4,0,8,2,0,13,52,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,498,"            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
",2,1,0,2,4,0,8,0,0,11,55,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,499,"            switch (lastChar) {
",2,0,0,1,3,0,0,0,0,2,19,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,502,"                    if (dec == null
",2,1,0,0,1,0,0,0,0,3,15,9,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,506,"                            return createLong(numeric);
",0,0,0,1,2,0,4,0,0,4,27,12,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,605,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,608,"        for (int i = str.length() - 1; i >= 0; i--) {
",6,2,0,2,5,0,4,0,0,13,45,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,609,"            if (str.charAt(i) != '0') {
",0,1,0,2,5,0,6,0,0,8,27,6,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,610,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,627,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,630,"        return Float.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,26,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,643,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,646,"        return Double.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,660,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,664,"        return Integer.decode(str);
",0,0,0,1,2,0,6,0,0,6,27,5,0.50000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,677,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,680,"        return Long.valueOf(str);
",0,0,0,1,2,0,6,0,0,6,25,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1287,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1290,"        for (int i = 0; i < str.length(); i++) {
",6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1291,"            if (!Character.isDigit(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1295,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,183,"        return cs == null || cs.length() == 0;
",2,3,0,1,2,0,4,0,0,9,38,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,223,"        if (cs == null || (strLen = cs.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,48,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,226,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,227,"            if ((Character.isWhitespace(cs.charAt(i)) == false)) {
",0,1,0,4,9,0,10,0,0,12,54,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,228,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.33333,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");
",2,0,0,1,2,3,4,2,0,12,72,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,704,"    private static boolean sunAvailable = false;
",2,0,0,0,0,2,0,0,0,5,44,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,705,"    private static Method  sunDecomposeMethod = null;
",2,0,0,0,0,2,0,2,0,6,49,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$
",2,0,0,2,4,3,4,2,0,12,108,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,708,"    private static boolean java6Available = false;
",2,0,0,0,0,2,0,0,0,5,46,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,709,"    private static Method  java6NormalizeMethod = null;
",2,0,0,0,0,2,0,2,0,6,51,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,710,"    private static Object  java6NormalizerFormNFD = null;
",2,0,0,0,0,2,0,2,0,6,53,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,711,"    private static final Pattern java6Pattern = sunPattern;
",4,0,0,0,0,3,0,2,0,9,55,2,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,717,"            Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader()
",2,0,0,2,4,0,6,2,0,10,77,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$
",2,0,0,2,4,0,6,0,0,10,84,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,720,"            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()
",2,0,0,2,4,0,6,2,0,10,73,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,722,"            java6NormalizeMethod = normalizerClass.getMethod(""normalize"",
",2,0,0,0,1,0,4,0,0,8,61,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,724,"            java6Available = true;
",2,0,0,0,0,0,0,0,0,4,22,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,733,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,737,"            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()
",2,0,0,2,4,0,6,2,0,10,73,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,739,"            sunDecomposeMethod = normalizerClass.getMethod(""decompose"",
",2,0,0,0,1,0,4,0,0,8,59,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,744,"        } catch (NoSuchMethodException e) {
",2,0,0,1,4,0,0,2,0,4,35,6,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,745,"            sunAvailable = false;
",2,0,0,0,0,0,0,0,0,4,21,7,0.25000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,750,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.25000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,33,"    public static final Long LONG_ZERO = Long.valueOf(0L);
",2,0,0,1,2,3,4,2,0,11,54,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,35,"    public static final Long LONG_ONE = Long.valueOf(1L);
",2,0,0,1,2,3,4,2,0,11,53,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,37,"    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);
",2,0,0,1,2,3,4,2,0,12,60,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,39,"    public static final Integer INTEGER_ZERO = Integer.valueOf(0);
",2,0,0,1,2,3,4,2,0,11,62,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,41,"    public static final Integer INTEGER_ONE = Integer.valueOf(1);
",2,0,0,1,2,3,4,2,0,11,61,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,43,"    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);
",2,0,0,1,2,3,4,2,0,12,68,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,45,"    public static final Short SHORT_ZERO = Short.valueOf((short) 0);
",2,0,0,2,4,3,4,2,0,11,64,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,47,"    public static final Short SHORT_ONE = Short.valueOf((short) 1);
",2,0,0,2,4,3,4,2,0,11,63,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,49,"    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);
",2,0,0,2,4,3,4,2,0,12,70,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,51,"    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);
",2,0,0,2,4,3,4,2,0,11,60,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,53,"    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);
",2,0,0,2,4,3,4,2,0,11,59,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,55,"    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);
",2,0,0,2,4,3,4,2,0,12,66,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,57,"    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);
",2,0,0,1,2,3,4,2,0,11,62,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,59,"    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);
",2,0,0,1,2,3,4,2,0,11,61,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,61,"    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);
",2,0,0,1,2,3,4,2,0,12,68,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,63,"    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);
",2,0,0,1,2,3,4,2,0,11,59,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,65,"    public static final Float FLOAT_ONE = Float.valueOf(1.0f);
",2,0,0,1,2,3,4,2,0,11,58,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,67,"    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);
",2,0,0,1,2,3,4,2,0,12,65,2,0.01250,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1416,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1417,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");
",2,0,0,1,2,3,2,2,0,10,74,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");
",2,0,0,1,2,3,2,2,0,10,92,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");
",2,0,0,1,2,3,2,2,0,10,90,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");
",2,0,0,1,2,3,2,2,0,10,88,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");
",2,0,0,1,2,3,2,2,0,10,88,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,313,"    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,331,"    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);
",2,0,0,1,2,3,4,2,0,11,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");
",2,0,0,1,2,3,2,2,0,10,86,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");
",2,0,0,1,2,3,2,2,0,10,92,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");
",2,0,0,1,2,3,2,2,0,10,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,102,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");
",2,0,0,1,2,3,2,2,0,10,104,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,442,"    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);
",2,0,0,1,2,3,6,2,0,13,114,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,461,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =
",2,0,0,0,0,3,0,2,0,7,64,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");
",2,0,0,1,2,3,2,2,0,10,74,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");
",2,0,0,1,2,3,2,2,0,10,76,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");
",2,0,0,1,2,3,2,2,0,10,104,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");
",2,0,0,1,2,3,2,2,0,10,108,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");
",2,0,0,1,2,3,2,2,0,10,110,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");
",2,0,0,1,2,3,2,2,0,10,82,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");
",2,0,0,1,2,3,2,2,0,10,66,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");
",2,0,0,1,2,3,2,2,0,10,66,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");
",2,0,0,1,2,3,2,2,0,10,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");
",2,0,0,1,2,3,2,2,0,10,80,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?
",2,1,0,1,2,3,2,2,0,12,85,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,772,"    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);
",2,0,0,1,2,3,4,2,0,11,70,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,790,"    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);
",2,0,0,1,2,3,4,2,0,11,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");
",2,0,0,1,2,3,2,2,0,10,70,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");
",2,0,0,1,2,3,2,2,0,10,78,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");
",2,0,0,1,2,3,2,0,0,8,64,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");
",2,0,0,1,2,3,2,0,0,8,68,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");
",2,0,0,1,2,3,2,0,0,8,66,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");
",2,1,0,2,4,3,4,0,0,12,97,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");
",2,0,0,1,2,3,2,0,0,8,64,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");
",2,0,0,1,2,3,2,0,0,8,73,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");
",2,0,0,1,2,3,2,0,0,8,73,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");
",2,0,0,1,2,3,2,0,0,8,73,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");
",2,0,0,1,2,3,2,0,0,8,71,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");
",2,0,0,1,2,3,2,0,0,8,65,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");
",2,0,0,1,2,3,2,0,0,8,72,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");
",2,0,0,1,2,3,2,0,0,8,69,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1086,"    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX
",12,1,0,0,0,3,0,0,0,16,111,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1099,"    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);
",2,0,0,1,2,3,4,0,0,9,85,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");
",2,0,0,1,2,3,4,0,0,10,93,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1123,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");
",4,1,0,1,2,3,2,0,0,12,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1136,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");
",4,1,0,1,2,3,2,0,0,12,98,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1149,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");
",2,0,0,1,2,3,4,0,0,10,91,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1162,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");
",4,1,0,1,2,3,2,0,0,11,96,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1175,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");
",2,0,0,1,2,3,4,0,0,10,91,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1188,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");
",2,0,0,1,2,3,4,0,0,10,94,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1200,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");
",2,0,0,1,2,3,4,0,0,10,90,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1214,"        return new File(System.getProperty(JAVA_HOME_KEY));
",0,0,0,2,4,0,6,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1229,"        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));
",0,0,0,2,4,0,6,2,0,8,56,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1241,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);
",0,0,0,1,2,0,6,0,0,6,69,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1252,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);
",0,0,0,1,2,0,10,0,0,10,69,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1262,"        return isOSNameMatch(OS_NAME, osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1280,"            return System.getProperty(property);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1281,"        } catch (SecurityException ex) {
",2,0,0,1,4,0,0,2,0,4,32,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1283,"            System.err.println(""Caught a SecurityException reading the system property '"" + property
",6,1,0,0,1,0,2,0,0,10,88,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1285,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1301,"        return new File(System.getProperty(USER_DIR_KEY));
",0,0,0,2,4,0,6,2,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1316,"        return new File(System.getProperty(USER_HOME_KEY));
",0,0,0,2,4,0,6,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1328,"        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;
",6,1,0,2,4,0,6,0,0,14,93,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1347,"        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);
",0,0,0,1,2,0,6,0,0,6,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1363,"        if (version == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1364,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1366,"        return version.startsWith(versionPrefix);
",0,0,0,1,2,0,6,0,0,6,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1382,"        if (osName == null || osVersion == null) {
",4,3,0,1,3,0,0,0,0,7,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1383,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1385,"        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);
",0,1,0,2,4,0,12,0,0,13,80,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1399,"        if (osName == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1400,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1402,"        return osName.startsWith(osNamePrefix);
",0,0,0,1,2,0,6,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,89,"    JavaVersion(final float value, final String name) {
",6,0,0,1,3,2,0,2,0,10,51,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,90,"        this.value = value;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,91,"        this.name = name;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,92,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,32,"    JAVA_0_9(1.5f, ""0.9""),
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,37,"    JAVA_1_1(1.1f, ""1.1""),
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,42,"    JAVA_1_2(1.2f, ""1.2""),
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,47,"    JAVA_1_3(1.3f, ""1.3""),
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,52,"    JAVA_1_4(1.4f, ""1.4""),
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,57,"    JAVA_1_5(1.5f, ""1.5""),
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,62,"    JAVA_1_6(1.6f, ""1.6""),
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,67,"    JAVA_1_7(1.7f, ""1.7""),
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,72,"    JAVA_1_8(1.8f, ""1.8"");
",2,0,0,1,2,0,0,0,0,3,22,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,27,"public enum JavaVersion {
",2,0,0,0,1,1,0,0,0,3,25,1,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,105,"        return this.value >= requiredVersion.value;
",6,1,0,0,0,0,0,0,0,7,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,119,"        return get(nom);
",0,0,0,1,2,0,4,0,0,4,16,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,132,"        if (""0.9"".equals(nom)) {
",0,0,0,2,5,0,4,0,0,5,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,133,"            return JAVA_0_9;
",2,0,0,0,0,0,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,134,"        } else if (""1.1"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,135,"            return JAVA_1_1;
",2,0,0,0,0,0,0,0,0,2,16,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,136,"        } else if (""1.2"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,137,"            return JAVA_1_2;
",2,0,0,0,0,0,0,0,0,2,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,138,"        } else if (""1.3"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,139,"            return JAVA_1_3;
",2,0,0,0,0,0,0,0,0,2,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,140,"        } else if (""1.4"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,141,"            return JAVA_1_4;
",2,0,0,0,0,0,0,0,0,2,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,142,"        } else if (""1.5"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,143,"            return JAVA_1_5;
",2,0,0,0,0,0,0,0,0,2,16,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,144,"        } else if (""1.6"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,145,"            return JAVA_1_6;
",2,0,0,0,0,0,0,0,0,2,16,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,146,"        } else if (""1.7"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,147,"            return JAVA_1_7;
",2,0,0,0,0,0,0,0,0,2,16,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,148,"        } else if (""1.8"".equals(nom)) {
",0,0,0,2,6,0,4,0,0,5,31,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,149,"            return JAVA_1_8;
",2,0,0,0,0,0,0,0,0,2,16,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,151,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,16,165,"        return name;
",2,0,0,0,0,0,0,0,0,2,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,77,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,78,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,99,"        return toInt(str, 0);
",0,0,0,1,2,0,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,120,"        if(str == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,121,"            return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,124,"            return Integer.parseInt(str);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,125,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,126,"            return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,148,"        return toLong(str, 0L);
",0,0,0,1,2,0,4,0,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,169,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,170,"            return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,173,"            return Long.parseLong(str);
",0,0,0,1,2,0,6,0,0,6,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,174,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,175,"            return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,198,"        return toFloat(str, 0.0f);
",0,0,0,1,2,0,4,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,221,"      if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,222,"          return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,225,"          return Float.parseFloat(str);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,226,"      } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,227,"          return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,250,"        return toDouble(str, 0.0d);
",0,0,0,1,2,0,4,0,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,273,"      if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,274,"          return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,277,"          return Double.parseDouble(str);
",0,0,0,1,2,0,6,0,0,6,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,278,"      } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,279,"          return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,302,"        return toByte(str, (byte) 0);
",0,0,0,2,4,0,4,0,0,4,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,323,"        if(str == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,324,"            return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,327,"            return Byte.parseByte(str);
",0,0,0,1,2,0,6,0,0,6,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,328,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,329,"            return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,351,"        return toShort(str, (short) 0);
",0,0,0,2,4,0,4,0,0,4,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,372,"        if(str == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,373,"            return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,376,"            return Short.parseShort(str);
",0,0,0,1,2,0,6,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,377,"        } catch (NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,378,"            return defaultValue;
",2,0,0,0,0,0,0,0,0,2,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,446,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,449,"            throw new NumberFormatException(""A blank string is not a valid number"");
",0,0,0,1,2,0,0,2,0,3,72,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,456,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,471,"                if (expPos < decPos || expPos > str.length()) {
",6,3,0,2,5,0,4,0,0,13,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,472,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,474,"                dec = str.substring(decPos + 1, expPos);
",4,1,0,1,2,0,6,0,0,12,40,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,482,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,492,"                exp = str.substring(expPos + 1, str.length() - 1);
",4,2,0,2,4,0,8,0,0,15,50,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,507,"                        } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,510,"                        return createBigInteger(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,513,"                    throw new NumberFormatException(str + "" is not a valid number."");
",2,1,0,1,2,0,0,2,0,6,65,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,526,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,524,"                    } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,537,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,535,"                    } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,539,"                        return createBigDecimal(numeric);
",0,0,0,1,2,0,4,0,0,4,33,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,540,"                    } catch (NumberFormatException e) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,44,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,552,"                exp = str.substring(expPos + 1, str.length());
",4,1,0,2,4,0,8,0,0,14,46,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,565,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,568,"                return createBigInteger(str);
",0,0,0,1,2,0,4,0,0,4,29,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,580,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,578,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,582,"                    Double d = createDouble(str);
",2,0,0,1,2,0,4,2,0,8,29,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,583,"                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
",2,3,0,5,11,0,8,0,0,15,66,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,584,"                        return d;
",2,0,0,0,0,0,0,0,0,2,9,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,588,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,586,"                } catch (NumberFormatException nfe) { // NOPMD
",2,0,0,1,4,0,0,2,0,4,46,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,590,"                return createBigDecimal(str);
",0,0,0,1,2,0,4,0,0,4,29,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,606,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,613,"        return str.length() > 0;
",0,1,0,1,2,0,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,628,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,644,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,661,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,678,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,693,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,694,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,696,"        return new BigInteger(str);
",2,0,0,1,2,0,0,2,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,709,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,710,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,713,"        if (StringUtils.isBlank(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,714,"            throw new NumberFormatException(""A blank string is not a valid number"");
",0,0,0,1,2,0,0,2,0,3,72,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,716,"        return new BigDecimal(str);
",2,0,0,1,2,0,0,2,0,4,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,731,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,732,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,733,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,734,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,738,"        long min = array[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,739,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,740,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,741,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,745,"        return min;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,758,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,759,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,760,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,761,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,765,"        int min = array[0];
",2,0,1,1,2,0,0,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,766,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,767,"            if (array[j] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,768,"                min = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,772,"        return min;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,785,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,786,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,787,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,788,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,792,"        short min = array[0];
",2,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,793,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,794,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,795,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,799,"        return min;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,812,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,813,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,814,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,815,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,819,"        byte min = array[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,820,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,821,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,822,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,826,"        return min;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,840,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,841,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,842,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,843,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,847,"        double min = array[0];
",2,0,1,1,2,0,0,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,848,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,849,"            if (Double.isNaN(array[i])) {
",0,0,1,3,7,0,4,0,0,8,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,850,"                return Double.NaN;
",4,0,0,0,0,0,0,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,852,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,853,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,857,"        return min;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,871,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,872,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,873,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,874,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,878,"        float min = array[0];
",2,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,879,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,880,"            if (Float.isNaN(array[i])) {
",0,0,1,3,7,0,4,0,0,8,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,881,"                return Float.NaN;
",4,0,0,0,0,0,0,0,0,4,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,883,"            if (array[i] < min) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,884,"                min = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,888,"        return min;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,903,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,904,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,905,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,906,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,910,"        long max = array[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,911,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,912,"            if (array[j] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,913,"                max = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,917,"        return max;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,930,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,931,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,932,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,933,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,937,"        int max = array[0];
",2,0,1,1,2,0,0,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,938,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,939,"            if (array[j] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,940,"                max = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,944,"        return max;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,957,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,958,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,959,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,960,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,964,"        short max = array[0];
",2,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,965,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,966,"            if (array[i] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,967,"                max = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,971,"        return max;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,984,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,985,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,986,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,987,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,991,"        byte max = array[0];
",2,0,1,1,2,0,0,0,0,4,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,992,"        for (int i = 1; i < array.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,993,"            if (array[i] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,994,"                max = array[i];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,998,"        return max;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1012,"        if (array== null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1013,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1014,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1015,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1019,"        double max = array[0];
",2,0,1,1,2,0,0,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1020,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1021,"            if (Double.isNaN(array[j])) {
",0,0,1,3,7,0,4,0,0,8,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1022,"                return Double.NaN;
",4,0,0,0,0,0,0,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1024,"            if (array[j] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1025,"                max = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1029,"        return max;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1043,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1044,"            throw new IllegalArgumentException(""The Array must not be null"");
",0,0,0,1,2,0,0,2,0,4,65,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1045,"        } else if (array.length == 0) {
",4,1,0,1,4,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1046,"            throw new IllegalArgumentException(""Array cannot be empty."");
",0,0,0,1,2,0,0,2,0,3,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1050,"        float max = array[0];
",2,0,1,1,2,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1051,"        for (int j = 1; j < array.length; j++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1052,"            if (Float.isNaN(array[j])) {
",0,0,1,3,7,0,4,0,0,8,28,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1053,"                return Float.NaN;
",4,0,0,0,0,0,0,0,0,4,17,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1055,"            if (array[j] > max) {
",2,1,1,2,5,0,0,0,0,7,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1056,"                max = array[j];
",2,0,1,1,2,0,0,0,0,7,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1060,"        return max;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1074,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1075,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1077,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1078,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1080,"        return a;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1092,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1093,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1095,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1096,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1098,"        return a;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1110,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1111,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1113,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1114,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1116,"        return a;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1128,"        if (b < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1129,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1131,"        if (c < a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1132,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1134,"        return a;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1150,"        return Math.min(Math.min(a, b), c);
",0,0,0,2,4,0,14,0,0,14,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1166,"        return Math.min(Math.min(a, b), c);
",0,0,0,2,4,0,14,0,0,14,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1180,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1181,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1183,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1184,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1186,"        return a;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1198,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1199,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1201,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1202,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1204,"        return a;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1216,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1217,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1219,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1220,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1222,"        return a;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1234,"        if (b > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1235,"            a = b;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1237,"        if (c > a) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1238,"            a = c;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1240,"        return a;
",2,0,0,0,0,0,0,0,0,2,9,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1256,"        return Math.max(Math.max(a, b), c);
",0,0,0,2,4,0,14,0,0,14,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1272,"        return Math.max(Math.max(a, b), c);
",0,0,0,2,4,0,14,0,0,14,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1288,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1292,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1312,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1313,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1315,"        char[] chars = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1316,"        int sz = chars.length;
",6,0,0,0,0,0,0,0,0,6,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1317,"        boolean hasExp = false;
",2,0,0,0,0,0,0,0,0,3,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1318,"        boolean hasDecPoint = false;
",2,0,0,0,0,0,0,0,0,3,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1319,"        boolean allowSigns = false;
",2,0,0,0,0,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1320,"        boolean foundDigit = false;
",2,0,0,0,0,0,0,0,0,3,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1322,"        int start = (chars[0] == '-') ? 1 : 0;
",2,1,1,2,4,0,0,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1323,"        if (sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x') {
",6,7,1,3,7,0,0,0,0,21,71,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1324,"            int i = start + 2;
",4,1,0,0,0,0,0,0,0,5,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1325,"            if (i == sz) {
",4,1,0,1,3,0,0,0,0,5,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1326,"                return false; // str == ""0x""
",0,0,0,0,0,0,0,0,0,1,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1329,"            for (; i < chars.length; i++) {
",8,1,0,1,3,0,0,0,0,10,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1330,"                if ((chars[i] < '0' || chars[i] > '9')
",0,3,1,3,7,0,0,0,0,13,38,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1333,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1336,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1338,"        sz--; // don't want to loop to the last char, check it afterwords
",2,0,0,0,0,0,0,0,0,3,65,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1340,"        int i = start;
",4,0,0,0,0,0,0,0,0,4,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1343,"        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {
",12,6,0,2,5,0,0,0,0,19,61,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1344,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1345,"                foundDigit = true;
",2,0,0,0,0,0,0,0,0,4,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1346,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1348,"            } else if (chars[i] == '.') {
",0,1,1,2,6,0,0,0,0,6,29,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1349,"                if (hasDecPoint || hasExp) {
",4,1,0,1,3,0,0,0,0,5,28,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1351,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1353,"                hasDecPoint = true;
",2,0,0,0,0,0,0,0,0,4,19,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1354,"            } else if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,8,0,0,0,0,13,48,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1356,"                if (hasExp) {
",2,0,0,1,3,0,0,0,0,2,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1358,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1360,"                if (!foundDigit) {
",2,0,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1361,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1363,"                hasExp = true;
",2,0,0,0,0,0,0,0,0,4,14,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1364,"                allowSigns = true;
",2,0,0,0,0,0,0,0,0,4,18,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1365,"            } else if (chars[i] == '+' || chars[i] == '-') {
",0,3,1,3,8,0,0,0,0,13,48,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1366,"                if (!allowSigns) {
",2,0,0,1,3,0,0,0,0,3,18,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1367,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1369,"                allowSigns = false;
",2,0,0,0,0,0,0,0,0,4,19,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1370,"                foundDigit = false; // we need a digit after the E
",2,0,0,0,0,0,0,0,0,4,50,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1372,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1374,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1376,"        if (i < chars.length) {
",6,1,0,1,3,0,0,0,0,7,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1377,"            if (chars[i] >= '0' && chars[i] <= '9') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1379,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1381,"            if (chars[i] == 'e' || chars[i] == 'E') {
",0,3,1,3,7,0,0,0,0,13,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1383,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1385,"            if (chars[i] == '.') {
",0,1,1,2,5,0,0,0,0,6,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1386,"                if (hasDecPoint || hasExp) {
",4,1,0,1,3,0,0,0,0,5,28,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1388,"                    return false;
",0,0,0,0,0,0,0,0,0,1,13,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1391,"                return foundDigit;
",2,0,0,0,0,0,0,0,0,2,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1393,"            if (!allowSigns
",2,0,0,0,1,0,0,0,0,3,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1398,"                return foundDigit;
",2,0,0,0,0,0,0,0,0,2,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1400,"            if (chars[i] == 'l'
",0,1,1,1,3,0,0,0,0,6,19,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1403,"                return foundDigit && !hasExp && !hasDecPoint;
",6,1,0,0,0,0,0,0,0,9,45,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1406,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1410,"        return !allowSigns && foundDigit;
",4,1,0,0,0,0,0,0,0,6,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,158,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,159,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,725,"        } catch (ClassNotFoundException e) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,726,"            java6Available = false;
",2,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,727,"        } catch (NoSuchFieldException e) {
",2,0,0,1,4,0,0,2,0,4,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,728,"            java6Available = false;
",2,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,729,"        } catch (IllegalAccessException e) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,730,"            java6Available = false;
",2,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,731,"        } catch (NoSuchMethodException e) {
",2,0,0,1,4,0,0,2,0,4,35,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,732,"            java6Available = false;
",2,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,741,"            sunAvailable = true;
",2,0,0,0,0,0,0,0,0,4,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,749,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,742,"        } catch (ClassNotFoundException e) {
",2,0,0,1,4,0,0,2,0,4,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,743,"            sunAvailable = false;
",2,0,0,0,0,0,0,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,746,"        } catch (java.security.AccessControlException e) {
",8,0,0,1,4,0,0,0,0,8,50,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,748,"            sunAvailable = false;
",2,0,0,0,0,0,0,0,0,4,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,202,"        return !StringUtils.isEmpty(cs);
",0,0,0,1,2,0,6,0,0,7,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,224,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,231,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,252,"        return !StringUtils.isBlank(cs);
",0,0,0,1,2,0,6,0,0,7,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,281,"        return str == null ? null : str.trim();
",2,1,0,1,2,0,4,0,0,7,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,307,"        String ts = trim(str);
",2,0,0,1,2,0,4,2,0,8,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,308,"        return isEmpty(ts) ? null : ts;
",2,0,0,1,2,0,4,0,0,7,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,333,"        return str == null ? EMPTY : str.trim();
",4,1,0,1,2,0,4,0,0,9,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,361,"        return strip(str, null);
",0,0,0,1,2,0,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,388,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,389,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,391,"        str = strip(str, null);
",2,0,0,1,2,0,4,0,0,8,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,392,"        return str.length() == 0 ? null : str;
",2,1,0,1,2,0,4,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,418,"        return str == null ? EMPTY : strip(str, null);
",4,1,0,1,2,0,4,0,0,10,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,448,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,449,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,451,"        str = stripStart(str, stripChars);
",2,0,0,1,2,0,6,0,0,9,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,452,"        return stripEnd(str, stripChars);
",0,0,0,1,2,0,6,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,481,"        if (str == null || (strLen = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,482,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,484,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,485,"        if (stripChars == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,486,"            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {
",4,2,0,4,9,0,10,0,0,16,72,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,487,"                start++;
",2,0,0,0,0,0,0,0,0,3,8,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,489,"        } else if (stripChars.length() == 0) {
",0,1,0,2,6,0,4,0,0,5,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,490,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,492,"            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {
",6,3,0,5,11,0,10,0,0,19,89,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,493,"                start++;
",2,0,0,0,0,0,0,0,0,3,8,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,496,"        return str.substring(start);
",0,0,0,1,2,0,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,526,"        if (str == null || (end = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,527,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,530,"        if (stripChars == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,531,"            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {
",4,3,0,4,9,0,8,0,0,15,67,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,532,"                end--;
",2,0,0,0,0,0,0,0,0,3,6,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,534,"        } else if (stripChars.length() == 0) {
",0,1,0,2,6,0,4,0,0,5,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,535,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,537,"            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {
",6,4,0,5,11,0,8,0,0,18,84,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,538,"                end--;
",2,0,0,0,0,0,0,0,0,3,6,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,541,"        return str.substring(0, end);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,566,"        return stripAll(strs, null);
",0,0,0,1,2,0,4,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,596,"        if (strs == null || (strsLen = strs.length) == 0) {
",8,3,0,2,5,0,0,0,0,12,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,597,"            return strs;
",2,0,0,0,0,0,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,599,"        String[] newArr = new String[strsLen];
",2,0,1,2,4,0,0,4,0,8,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,600,"        for (int i = 0; i < strsLen; i++) {
",8,1,0,1,3,0,0,0,0,10,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,601,"            newArr[i] = strip(strs[i], stripChars);
",0,0,1,3,6,0,4,0,0,13,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,603,"        return newArr;
",2,0,0,0,0,0,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,628,"        if(input == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,629,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,632,"            String result = null;
",2,0,0,0,0,0,0,2,0,4,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,633,"            if (java6Available) {
",2,0,0,1,3,0,0,0,0,2,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,634,"                result = removeAccentsJava6(input);
",2,0,0,1,2,0,4,0,0,7,35,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,635,"            } else if (sunAvailable) {
",2,0,0,1,4,0,0,0,0,2,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,636,"                result = removeAccentsSUN(input);
",2,0,0,1,2,0,4,0,0,7,33,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,638,"                throw new UnsupportedOperationException(
",0,0,0,0,1,0,0,2,0,2,40,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,642,"            return result;
",2,0,0,0,0,0,0,0,0,2,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,643,"        } catch(IllegalArgumentException iae) {
",2,0,0,1,4,0,0,2,0,4,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,644,"            throw new RuntimeException(""IllegalArgumentException occurred"", iae);
",2,0,0,1,2,0,0,2,0,5,69,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,645,"        } catch(IllegalAccessException iae) {
",2,0,0,1,4,0,0,2,0,4,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,646,"            throw new RuntimeException(""IllegalAccessException occurred"", iae);
",2,0,0,1,2,0,0,2,0,5,67,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,647,"        } catch(InvocationTargetException ite) {
",2,0,0,1,4,0,0,2,0,4,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,648,"            throw new RuntimeException(""InvocationTargetException occurred"", ite);
",2,0,0,1,2,0,0,2,0,5,70,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,649,"        } catch(SecurityException se) {
",2,0,0,1,4,0,0,2,0,4,31,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,650,"            throw new RuntimeException(""SecurityException occurred"", se);
",2,0,0,1,2,0,0,2,0,5,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,670,"        if (!java6Available || java6NormalizerFormNFD == null) {
",4,2,0,1,3,0,0,0,0,7,56,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,671,"            throw new IllegalStateException(""java.text.Normalizer is not available"");
",0,0,0,1,2,0,0,2,0,3,73,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,674,"        result = (String) java6NormalizeMethod.invoke(null, new Object[] {text, java6NormalizerFormNFD});
",6,0,0,4,8,0,4,4,0,15,97,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,675,"        result = java6Pattern.matcher(result).replaceAll("""");//$NON-NLS-1$
",2,0,0,2,4,0,8,0,0,12,66,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,676,"        return result;
",2,0,0,0,0,0,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,694,"        if (! sunAvailable) {
",2,0,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,695,"            throw new IllegalStateException(""sun.text.Normalizer is not available"");
",0,0,0,1,2,0,0,2,0,3,72,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,698,"        result = (String) sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});
",8,0,0,5,10,0,8,4,0,21,106,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,699,"        result = sunPattern.matcher(result).replaceAll("""");//$NON-NLS-1$
",2,0,0,2,4,0,8,0,0,12,64,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,700,"        return result;
",2,0,0,0,0,0,0,0,0,2,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,776,"        return cs1 == null ? cs2 == null : cs1.equals(cs2);
",4,2,0,1,2,0,6,0,0,12,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,801,"        if (str1 == null || str2 == null) {
",4,3,0,1,3,0,0,0,0,7,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,802,"            return str1 == str2;
",4,1,0,0,0,0,0,0,0,5,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,804,"            return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));
",0,0,0,4,8,0,20,0,0,21,103,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,831,"        if (isEmpty(seq)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,832,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,834,"        return CharSequenceUtils.indexOf(seq, searchChar, 0);
",0,0,0,1,2,0,8,0,0,8,53,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,864,"        if (isEmpty(seq)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,865,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,867,"        return CharSequenceUtils.indexOf(seq, searchChar, startPos);
",0,0,0,1,2,0,10,0,0,10,60,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,895,"        if (seq == null || searchSeq == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,896,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,898,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0);
",0,0,0,1,2,0,8,0,0,8,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,935,"        if (seq == null || searchSeq == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,936,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,938,"        return CharSequenceUtils.indexOf(seq, searchSeq, startPos);
",0,0,0,1,2,0,10,0,0,10,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,976,"        return ordinalIndexOf(str, searchStr, ordinal, false);
",0,0,0,1,2,0,8,0,0,9,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,994,"        if (str == null || searchStr == null || ordinal <= 0) {
",6,5,0,1,3,0,0,0,0,11,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,995,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,997,"        if (searchStr.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,998,"            return lastIndex ? str.length() : 0;
",2,0,0,1,2,0,4,0,0,6,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1000,"        int found = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1001,"        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;
",6,0,0,1,2,0,4,0,0,10,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1003,"            if (lastIndex) {
",2,0,0,1,3,0,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1004,"                index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);
",4,1,0,1,2,0,8,0,0,14,65,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1006,"                index = CharSequenceUtils.indexOf(str, searchStr, index + 1);
",4,1,0,1,2,0,8,0,0,14,61,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1008,"            if (index < 0) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1009,"                return index;
",2,0,0,0,0,0,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1011,"            found++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1012,"        } while (found < ordinal);
",4,1,0,1,3,0,0,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1013,"        return index;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1042,"        return indexOfIgnoreCase(str, searchStr, 0);
",0,0,0,1,2,0,6,0,0,6,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1078,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1079,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1081,"        if (startPos < 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1082,"            startPos = 0;
",2,0,0,0,0,0,0,0,0,3,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1084,"        int endLimit = (str.length() - searchStr.length()) + 1;
",2,2,0,3,6,0,8,0,0,12,55,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1085,"        if (startPos > endLimit) {
",4,1,0,1,3,0,0,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1086,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1088,"        if (searchStr.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1089,"            return startPos;
",2,0,0,0,0,0,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1091,"        for (int i = startPos; i < endLimit; i++) {
",10,1,0,1,3,0,0,0,0,12,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1092,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {
",0,0,0,3,7,0,14,0,0,15,86,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1093,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1096,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1122,"        if (isEmpty(seq)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1123,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1125,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());
",0,0,0,2,4,0,12,0,0,12,68,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1157,"        if (isEmpty(seq)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1158,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1160,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);
",0,0,0,1,2,0,10,0,0,10,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1187,"        if (seq == null || searchSeq == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1188,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1190,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());
",0,0,0,2,4,0,12,0,0,12,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1228,"        return ordinalIndexOf(str, searchStr, ordinal, true);
",0,0,0,1,2,0,8,0,0,9,53,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1261,"        if (seq == null || searchSeq == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1262,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1264,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);
",0,0,0,1,2,0,10,0,0,10,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1291,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1292,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1294,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());
",0,0,0,2,4,0,10,0,0,10,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1327,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1328,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1330,"        if (startPos > (str.length() - searchStr.length())) {
",2,2,0,4,9,0,8,0,0,12,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1331,"            startPos = str.length() - searchStr.length();
",2,1,0,2,4,0,8,0,0,12,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1333,"        if (startPos < 0) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1334,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1336,"        if (searchStr.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1337,"            return startPos;
",2,0,0,0,0,0,0,0,0,2,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1340,"        for (int i = startPos; i >= 0; i--) {
",8,1,0,1,3,0,0,0,0,10,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1341,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {
",0,0,0,3,7,0,14,0,0,15,86,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1342,"                return i;
",2,0,0,0,0,0,0,0,0,2,9,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1345,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1371,"        if (isEmpty(seq)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1372,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1374,"        return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;
",0,1,0,1,2,0,8,0,0,9,58,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1400,"        if (seq == null || searchSeq == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1401,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1403,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0;
",0,1,0,1,2,0,8,0,0,9,57,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1431,"        if (str == null || searchStr == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1432,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1434,"        int len = searchStr.length();
",2,0,0,1,2,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1435,"        int max = str.length() - len;
",4,1,0,1,2,0,4,0,0,9,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1436,"        for (int i = 0; i <= max; i++) {
",8,1,0,1,3,0,0,0,0,10,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1437,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {
",0,0,0,2,5,0,12,0,0,13,71,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1438,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1441,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1454,"        if (isEmpty(seq)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1455,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1457,"        int strLen = seq.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1458,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1459,"            if (Character.isWhitespace(seq.charAt(i))) {
",0,0,0,3,7,0,10,0,0,10,44,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1460,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1463,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1492,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1493,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1495,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1496,"        int csLast = csLen - 1;
",4,1,0,0,0,0,0,0,0,5,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1497,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1498,"        int searchLast = searchLen - 1;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1499,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1500,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1501,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1502,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1503,"                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
",8,4,0,2,5,0,6,0,0,18,68,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1505,"                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
",4,3,1,3,7,0,4,0,0,13,45,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1506,"                            return i;
",2,0,0,0,0,0,0,0,0,2,9,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1509,"                        return i;
",2,0,0,0,0,0,0,0,0,2,9,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1514,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1541,"        if (isEmpty(cs) || isEmpty(searchChars)) {
",0,1,0,3,7,0,8,0,0,9,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1542,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1544,"        return indexOfAny(cs, searchChars.toCharArray());
",0,0,0,2,4,0,8,0,0,8,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1574,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1575,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1577,"        int csLength = cs.length();
",2,0,0,1,2,0,4,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1578,"        int searchLength = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1579,"        int csLast = csLength - 1;
",4,1,0,0,0,0,0,0,0,5,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1580,"        int searchLast = searchLength - 1;
",4,1,0,0,0,0,0,0,0,5,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1581,"        for (int i = 0; i < csLength; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1582,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1583,"            for (int j = 0; j < searchLength; j++) {
",8,1,0,1,3,0,0,0,0,10,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1584,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1585,"                    if (Character.isHighSurrogate(ch)) {
",0,0,0,2,5,0,6,0,0,6,36,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1586,"                        if (j == searchLast) {
",4,1,0,1,3,0,0,0,0,5,22,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1588,"                            return true;
",0,0,0,0,0,0,0,0,0,1,12,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1590,"                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
",8,5,1,3,7,0,4,0,0,19,59,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1591,"                            return true;
",0,0,0,0,0,0,0,0,0,1,12,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1595,"                        return true;
",0,0,0,0,0,0,0,0,0,1,12,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1600,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1632,"        if (searchChars == null) {
",2,1,0,1,3,0,0,0,0,3,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1633,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1635,"        return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));
",0,0,0,2,4,0,10,0,0,10,67,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1665,"        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
",0,1,0,3,7,0,10,0,0,11,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1666,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1668,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1669,"        int csLast = csLen - 1;
",4,1,0,0,0,0,0,0,0,5,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1670,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1671,"        int searchLast = searchLen - 1;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1673,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1674,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1675,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1676,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1677,"                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
",8,4,0,2,5,0,6,0,0,18,68,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1678,"                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
",4,3,1,3,7,0,4,0,0,13,45,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1679,"                            continue outer;
",2,0,0,0,0,0,0,0,0,2,15,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1686,"            return i;
",2,0,0,0,0,0,0,0,0,2,9,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1688,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1715,"        if (isEmpty(seq) || isEmpty(searchChars)) {
",0,1,0,3,7,0,8,0,0,9,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1716,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1718,"        int strLen = seq.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1719,"        for (int i = 0; i < strLen; i++) {
",8,1,0,1,3,0,0,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1720,"            char ch = seq.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1721,"            boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;
",2,1,0,1,2,0,8,0,0,11,69,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1722,"            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
",4,3,0,2,5,0,6,0,0,13,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1723,"                char ch2 = seq.charAt(i + 1);
",4,1,0,1,2,0,4,0,0,9,29,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1724,"                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {
",2,2,0,2,5,0,8,0,0,12,68,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1725,"                    return i;
",2,0,0,0,0,0,0,0,0,2,9,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1727,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1728,"                if (!chFound) {
",2,0,0,1,3,0,0,0,0,3,15,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1729,"                    return i;
",2,0,0,0,0,0,0,0,0,2,9,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1733,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1762,"        if (valid == null || cs == null) {
",4,3,0,1,3,0,0,0,0,7,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1763,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1765,"        if (cs.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1766,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1768,"        if (valid.length == 0) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1769,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1771,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;
",2,1,0,1,2,0,6,0,0,9,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1798,"        if (cs == null || validChars == null) {
",4,3,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1799,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1801,"        return containsOnly(cs, validChars.toCharArray());
",0,0,0,2,4,0,8,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1830,"        if (cs == null || searchChars == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1831,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1833,"        int csLen = cs.length();
",2,0,0,1,2,0,4,0,0,6,24,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1834,"        int csLast = csLen - 1;
",4,1,0,0,0,0,0,0,0,5,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1835,"        int searchLen = searchChars.length;
",6,0,0,0,0,0,0,0,0,6,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1836,"        int searchLast = searchLen - 1;
",4,1,0,0,0,0,0,0,0,5,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1837,"        for (int i = 0; i < csLen; i++) {
",8,1,0,1,3,0,0,0,0,10,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1838,"            char ch = cs.charAt(i);
",2,0,0,1,2,0,6,0,0,8,23,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1839,"            for (int j = 0; j < searchLen; j++) {
",8,1,0,1,3,0,0,0,0,10,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1840,"                if (searchChars[j] == ch) {
",2,1,1,2,5,0,0,0,0,7,27,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1841,"                    if (Character.isHighSurrogate(ch)) {
",0,0,0,2,5,0,6,0,0,6,36,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1842,"                        if (j == searchLast) {
",4,1,0,1,3,0,0,0,0,5,22,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1844,"                            return false;
",0,0,0,0,0,0,0,0,0,1,13,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1846,"                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
",8,5,1,3,7,0,4,0,0,19,59,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1847,"                            return false;
",0,0,0,0,0,0,0,0,0,1,13,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1851,"                        return false;
",0,0,0,0,0,0,0,0,0,1,13,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1856,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1883,"        if (cs == null || invalidChars == null) {
",4,3,0,1,3,0,0,0,0,7,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1884,"            return true;
",0,0,0,0,0,0,0,0,0,1,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1886,"        return containsNone(cs, invalidChars.toCharArray());
",0,0,0,2,4,0,8,0,0,8,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1919,"        if (str == null || searchStrs == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1920,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1922,"        int sz = searchStrs.length;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1925,"        int ret = Integer.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1927,"        int tmp = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1928,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1929,"            CharSequence search = searchStrs[i];
",2,0,1,1,2,0,0,2,0,8,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1930,"            if (search == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1931,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1933,"            tmp = CharSequenceUtils.indexOf(str, search, 0);
",2,0,0,1,2,0,8,0,0,11,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1934,"            if (tmp == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1935,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1938,"            if (tmp < ret) {
",4,1,0,1,3,0,0,0,0,5,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1939,"                ret = tmp;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1943,"        return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;
",10,1,0,1,2,0,0,0,0,11,58,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1973,"        if (str == null || searchStrs == null) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1974,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1976,"        int sz = searchStrs.length;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1977,"        int ret = INDEX_NOT_FOUND;
",4,0,0,0,0,0,0,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1978,"        int tmp = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1979,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1980,"            CharSequence search = searchStrs[i];
",2,0,1,1,2,0,0,2,0,8,36,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1981,"            if (search == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1982,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1984,"            tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());
",2,0,0,2,4,0,12,0,0,15,63,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1985,"            if (tmp > ret) {
",4,1,0,1,3,0,0,0,0,5,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1986,"                ret = tmp;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,1989,"        return ret;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2019,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2020,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2024,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2025,"            start = str.length() + start; // remember start is negative
",4,1,0,1,2,0,4,0,0,10,59,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2028,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2029,"            start = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2031,"        if (start > str.length()) {
",2,1,0,2,5,0,4,0,0,7,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2032,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2035,"        return str.substring(start);
",0,0,0,1,2,0,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2074,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2075,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2079,"        if (end < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2080,"            end = str.length() + end; // remember end is negative
",4,1,0,1,2,0,4,0,0,10,53,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2082,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2083,"            start = str.length() + start; // remember start is negative
",4,1,0,1,2,0,4,0,0,10,59,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2087,"        if (end > str.length()) {
",2,1,0,2,5,0,4,0,0,7,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2088,"            end = str.length();
",2,0,0,1,2,0,4,0,0,7,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2092,"        if (start > end) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2093,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2096,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2097,"            start = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2099,"        if (end < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2100,"            end = 0;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2103,"        return str.substring(start, end);
",0,0,0,1,2,0,8,0,0,8,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2129,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2130,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2132,"        if (len < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2133,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2135,"        if (str.length() <= len) {
",2,1,0,2,5,0,4,0,0,7,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2136,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2138,"        return str.substring(0, len);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2162,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2163,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2165,"        if (len < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2166,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2168,"        if (str.length() <= len) {
",2,1,0,2,5,0,4,0,0,7,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2169,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2171,"        return str.substring(str.length() - len);
",2,1,0,2,4,0,8,0,0,11,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2200,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2201,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2203,"        if (len < 0 || pos > str.length()) {
",4,3,0,2,5,0,4,0,0,11,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2204,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2206,"        if (pos < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2207,"            pos = 0;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2209,"        if (str.length() <= (pos + len)) {
",4,2,0,3,7,0,4,0,0,10,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2210,"            return str.substring(pos);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2212,"        return str.substring(pos, pos + len);
",4,1,0,1,2,0,6,0,0,11,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2245,"        if (isEmpty(str) || separator == null) {
",2,2,0,2,5,0,4,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2246,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2248,"        if (separator.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2249,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2251,"        int pos = str.indexOf(separator);
",2,0,0,1,2,0,6,0,0,8,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2252,"        if (pos == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2253,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2255,"        return str.substring(0, pos);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2287,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2288,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2290,"        if (separator == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2291,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2293,"        int pos = str.indexOf(separator);
",2,0,0,1,2,0,6,0,0,8,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2294,"        if (pos == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2295,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2297,"        return str.substring(pos + separator.length());
",2,1,0,2,4,0,8,0,0,11,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2328,"        if (isEmpty(str) || isEmpty(separator)) {
",0,1,0,3,7,0,8,0,0,9,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2329,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2331,"        int pos = str.lastIndexOf(separator);
",2,0,0,1,2,0,6,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2332,"        if (pos == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2333,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2335,"        return str.substring(0, pos);
",0,0,0,1,2,0,6,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2368,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2369,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2371,"        if (isEmpty(separator)) {
",0,0,0,2,5,0,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2372,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2374,"        int pos = str.lastIndexOf(separator);
",2,0,0,1,2,0,6,0,0,8,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2375,"        if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length())) {
",6,4,0,4,9,0,8,0,0,18,75,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2376,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2378,"        return str.substring(pos + separator.length());
",2,1,0,2,4,0,8,0,0,11,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2405,"        return substringBetween(str, tag, tag);
",0,0,0,1,2,0,8,0,0,8,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2436,"        if (str == null || open == null || close == null) {
",6,5,0,1,3,0,0,0,0,11,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2437,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2439,"        int start = str.indexOf(open);
",2,0,0,1,2,0,6,0,0,8,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2440,"        if (start != INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2441,"            int end = str.indexOf(close, start + open.length());
",4,1,0,2,4,0,10,0,0,15,52,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2442,"            if (end != INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2443,"                return str.substring(start + open.length(), end);
",2,1,0,2,4,0,10,0,0,13,49,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2446,"        return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2472,"        if (str == null || isEmpty(open) || isEmpty(close)) {
",2,3,0,3,7,0,8,0,0,15,53,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2473,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2475,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2476,"        if (strLen == 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2477,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,0,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2479,"        int closeLen = close.length();
",2,0,0,1,2,0,4,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2480,"        int openLen = open.length();
",2,0,0,1,2,0,4,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2481,"        List<String> list = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2482,"        int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2483,"        while (pos < (strLen - closeLen)) {
",6,2,0,2,5,0,0,0,0,8,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2484,"            int start = str.indexOf(open, pos);
",2,0,0,1,2,0,8,0,0,10,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2485,"            if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2486,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2488,"            start += openLen;
",4,0,0,0,0,0,0,0,0,5,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2489,"            int end = str.indexOf(close, start);
",2,0,0,1,2,0,8,0,0,10,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2490,"            if (end < 0) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2491,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2493,"            list.add(str.substring(start, end));
",0,0,0,2,4,0,12,0,0,12,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2494,"            pos = end + closeLen;
",6,1,0,0,0,0,0,0,0,8,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2495,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2496,"        if (list.isEmpty()) {
",0,0,0,2,5,0,4,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2497,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2499,"        return list.toArray(new String [list.size()]);
",0,0,0,3,6,0,8,2,0,10,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2530,"        return split(str, null, -1);
",0,0,0,1,2,0,4,0,0,6,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2558,"        return splitWorker(str, separatorChar, false);
",0,0,0,1,2,0,6,0,0,7,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2587,"        return splitWorker(str, separatorChars, -1, false);
",0,0,0,1,2,0,6,0,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2621,"        return splitWorker(str, separatorChars, max, false);
",0,0,0,1,2,0,8,0,0,9,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2648,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;
",0,0,0,1,2,0,6,0,0,8,65,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2679,"        return splitByWholeSeparatorWorker(str, separator, max, false);
",0,0,0,1,2,0,8,0,0,9,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2708,"        return splitByWholeSeparatorWorker(str, separator, -1, true);
",0,0,0,1,2,0,6,0,0,8,61,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2741,"        return splitByWholeSeparatorWorker(str, separator, max, true);
",0,0,0,1,2,0,8,0,0,9,62,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2760,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2761,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2764,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2766,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2767,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,0,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2770,"        if ((separator == null) || (EMPTY.equals(separator))) {
",2,2,0,4,9,0,6,0,0,10,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2772,"            return splitWorker(str, null, max, preserveAllTokens);
",0,0,0,1,2,0,8,0,0,9,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2775,"        int separatorLength = separator.length();
",2,0,0,1,2,0,4,0,0,6,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2777,"        ArrayList<String> substrings = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2778,"        int numberOfSubstrings = 0;
",2,0,0,0,0,0,0,0,0,2,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2779,"        int beg = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2780,"        int end = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2781,"        while (end < len) {
",4,1,0,1,3,0,0,0,0,5,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2782,"            end = str.indexOf(separator, beg);
",2,0,0,1,2,0,8,0,0,11,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2784,"            if (end > -1) {
",2,1,0,1,3,0,0,0,0,4,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2785,"                if (end > beg) {
",4,1,0,1,3,0,0,0,0,5,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2786,"                    numberOfSubstrings += 1;
",2,0,0,0,0,0,0,0,0,3,24,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2788,"                    if (numberOfSubstrings == max) {
",4,1,0,1,3,0,0,0,0,5,32,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2789,"                        end = len;
",4,0,0,0,0,0,0,0,0,5,10,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2790,"                        substrings.add(str.substring(beg));
",0,0,0,2,4,0,10,0,0,10,35,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2794,"                        substrings.add(str.substring(beg, end));
",0,0,0,2,4,0,12,0,0,12,40,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2799,"                        beg = end + separatorLength;
",6,1,0,0,0,0,0,0,0,8,28,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2803,"                    if (preserveAllTokens) {
",2,0,0,1,3,0,0,0,0,2,24,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2804,"                        numberOfSubstrings += 1;
",2,0,0,0,0,0,0,0,0,3,24,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2805,"                        if (numberOfSubstrings == max) {
",4,1,0,1,3,0,0,0,0,5,32,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2806,"                            end = len;
",4,0,0,0,0,0,0,0,0,5,10,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2807,"                            substrings.add(str.substring(beg));
",0,0,0,2,4,0,10,0,0,10,35,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2809,"                            substrings.add(EMPTY);
",0,0,0,1,2,0,6,0,0,6,22,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2812,"                    beg = end + separatorLength;
",6,1,0,0,0,0,0,0,0,8,28,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2816,"                substrings.add(str.substring(beg));
",0,0,0,2,4,0,10,0,0,10,35,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2817,"                end = len;
",4,0,0,0,0,0,0,0,0,5,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2821,"        return substrings.toArray(new String[substrings.size()]);
",0,0,0,3,6,0,8,2,0,10,57,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2850,"        return splitWorker(str, null, -1, true);
",0,0,0,1,2,0,4,0,0,7,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2886,"        return splitWorker(str, separatorChar, true);
",0,0,0,1,2,0,6,0,0,7,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2904,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2905,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2907,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2908,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2909,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,0,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2911,"        List<String> list = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2912,"        int i = 0, start = 0;
",4,0,0,0,0,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2913,"        boolean match = false;
",2,0,0,0,0,0,0,0,0,3,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2914,"        boolean lastMatch = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2915,"        while (i < len) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2916,"            if (str.charAt(i) == separatorChar) {
",2,1,0,2,5,0,6,0,0,9,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2917,"                if (match || preserveAllTokens) {
",4,1,0,1,3,0,0,0,0,5,33,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2918,"                    list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2919,"                    match = false;
",2,0,0,0,0,0,0,0,0,4,14,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2920,"                    lastMatch = true;
",2,0,0,0,0,0,0,0,0,4,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2922,"                start = ++i;
",4,0,0,0,0,0,0,0,0,6,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2923,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2925,"            lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2926,"            match = true;
",2,0,0,0,0,0,0,0,0,4,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2927,"            i++;
",2,0,0,0,0,0,0,0,0,3,4,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2929,"        if (match || (preserveAllTokens && lastMatch)) {
",6,2,0,2,5,0,0,0,0,8,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2930,"            list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2932,"        return list.toArray(new String[list.size()]);
",0,0,0,3,6,0,8,2,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,2969,"        return splitWorker(str, separatorChars, -1, true);
",0,0,0,1,2,0,6,0,0,8,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3009,"        return splitWorker(str, separatorChars, max, true);
",0,0,0,1,2,0,8,0,0,9,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3031,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3032,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3034,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3035,"        if (len == 0) {
",2,1,0,1,3,0,0,0,0,3,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3036,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,0,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3038,"        List<String> list = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3039,"        int sizePlus1 = 1;
",2,0,0,0,0,0,0,0,0,2,18,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3040,"        int i = 0, start = 0;
",4,0,0,0,0,0,0,0,0,4,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3041,"        boolean match = false;
",2,0,0,0,0,0,0,0,0,3,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3042,"        boolean lastMatch = false;
",2,0,0,0,0,0,0,0,0,3,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3043,"        if (separatorChars == null) {
",2,1,0,1,3,0,0,0,0,3,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3045,"            while (i < len) {
",4,1,0,1,3,0,0,0,0,5,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3046,"                if (Character.isWhitespace(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,10,44,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3047,"                    if (match || preserveAllTokens) {
",4,1,0,1,3,0,0,0,0,5,33,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3048,"                        lastMatch = true;
",2,0,0,0,0,0,0,0,0,4,17,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3049,"                        if (sizePlus1++ == max) {
",4,1,0,1,3,0,0,0,0,6,25,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3050,"                            i = len;
",4,0,0,0,0,0,0,0,0,5,8,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3051,"                            lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3053,"                        list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3054,"                        match = false;
",2,0,0,0,0,0,0,0,0,4,14,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3056,"                    start = ++i;
",4,0,0,0,0,0,0,0,0,6,12,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3057,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3059,"                lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3060,"                match = true;
",2,0,0,0,0,0,0,0,0,4,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3061,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3063,"        } else if (separatorChars.length() == 1) {
",0,1,0,2,6,0,4,0,0,5,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3065,"            char sep = separatorChars.charAt(0);
",2,0,0,1,2,0,4,0,0,6,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3066,"            while (i < len) {
",4,1,0,1,3,0,0,0,0,5,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3067,"                if (str.charAt(i) == sep) {
",2,1,0,2,5,0,6,0,0,9,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3068,"                    if (match || preserveAllTokens) {
",4,1,0,1,3,0,0,0,0,5,33,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3069,"                        lastMatch = true;
",2,0,0,0,0,0,0,0,0,4,17,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3070,"                        if (sizePlus1++ == max) {
",4,1,0,1,3,0,0,0,0,6,25,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3071,"                            i = len;
",4,0,0,0,0,0,0,0,0,5,8,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3072,"                            lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3074,"                        list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3075,"                        match = false;
",2,0,0,0,0,0,0,0,0,4,14,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3077,"                    start = ++i;
",4,0,0,0,0,0,0,0,0,6,12,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3078,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3080,"                lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3081,"                match = true;
",2,0,0,0,0,0,0,0,0,4,13,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3082,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3084,"        } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3086,"            while (i < len) {
",4,1,0,1,3,0,0,0,0,5,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3087,"                if (separatorChars.indexOf(str.charAt(i)) >= 0) {
",0,1,0,3,7,0,10,0,0,11,49,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3088,"                    if (match || preserveAllTokens) {
",4,1,0,1,3,0,0,0,0,5,33,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3089,"                        lastMatch = true;
",2,0,0,0,0,0,0,0,0,4,17,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3090,"                        if (sizePlus1++ == max) {
",4,1,0,1,3,0,0,0,0,6,25,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3091,"                            i = len;
",4,0,0,0,0,0,0,0,0,5,8,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3092,"                            lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,15,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3094,"                        list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,14,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3095,"                        match = false;
",2,0,0,0,0,0,0,0,0,4,14,13,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3097,"                    start = ++i;
",4,0,0,0,0,0,0,0,0,6,12,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3098,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3100,"                lastMatch = false;
",2,0,0,0,0,0,0,0,0,4,18,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3101,"                match = true;
",2,0,0,0,0,0,0,0,0,4,13,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3102,"                i++;
",2,0,0,0,0,0,0,0,0,3,4,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3105,"        if (match || (preserveAllTokens && lastMatch)) {
",6,2,0,2,5,0,0,0,0,8,48,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3106,"            list.add(str.substring(start, i));
",0,0,0,2,4,0,12,0,0,12,34,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3108,"        return list.toArray(new String[list.size()]);
",0,0,0,3,6,0,8,2,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3131,"        return splitByCharacterType(str, false);
",0,0,0,1,2,0,4,0,0,5,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3159,"        return splitByCharacterType(str, true);
",0,0,0,1,2,0,4,0,0,5,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3177,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3178,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3180,"        if (str.length() == 0) {
",0,1,0,2,5,0,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3181,"            return ArrayUtils.EMPTY_STRING_ARRAY;
",4,0,0,0,0,0,0,0,0,4,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3183,"        char[] c = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3184,"        List<String> list = new ArrayList<String>();
",2,0,0,1,2,0,0,8,0,10,44,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3185,"        int tokenStart = 0;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3186,"        int currentType = Character.getType(c[tokenStart]);
",2,0,1,2,4,0,4,0,0,10,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3187,"        for (int pos = tokenStart + 1; pos < c.length; pos++) {
",12,2,0,1,3,0,0,0,0,15,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3188,"            int type = Character.getType(c[pos]);
",2,0,1,2,4,0,4,0,0,10,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3189,"            if (type == currentType) {
",4,1,0,1,3,0,0,0,0,5,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3190,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3192,"            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {
",14,4,0,1,3,0,0,0,0,18,99,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3193,"                int newTokenStart = pos - 1;
",4,1,0,0,0,0,0,0,0,5,28,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3194,"                if (newTokenStart != tokenStart) {
",4,1,0,1,3,0,0,0,0,5,34,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3195,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));
",8,1,0,2,4,0,4,2,0,15,64,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3196,"                    tokenStart = newTokenStart;
",4,0,0,0,0,0,0,0,0,5,27,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3198,"            } else {
",0,0,0,0,2,0,0,0,0,0,8,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3199,"                list.add(new String(c, tokenStart, pos - tokenStart));
",8,1,0,2,4,0,4,2,0,15,54,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3200,"                tokenStart = pos;
",4,0,0,0,0,0,0,0,0,5,17,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3202,"            currentType = type;
",4,0,0,0,0,0,0,0,0,5,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3204,"        list.add(new String(c, tokenStart, c.length - tokenStart));
",10,1,0,2,4,0,4,2,0,17,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3205,"        return list.toArray(new String[list.size()]);
",0,0,0,3,6,0,8,2,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3233,"        return join(elements, null);
",0,0,0,1,2,0,4,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3259,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3260,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3263,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,0,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3293,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3294,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3296,"        int noOfItems = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3297,"        if (noOfItems <= 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3298,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3301,"        StringBuilder buf = new StringBuilder(noOfItems * 16);
",4,1,0,1,2,0,0,4,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3303,"        for (int i = startIndex; i < endIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3304,"            if (i > startIndex) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3305,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3307,"            if (array[i] != null) {
",0,1,1,2,5,0,0,0,0,5,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3308,"                buf.append(array[i]);
",0,0,1,2,4,0,4,0,0,8,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3311,"        return buf.toString();
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3338,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3339,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3341,"        return join(array, separator, 0, array.length);
",4,0,0,1,2,0,6,0,0,10,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3372,"        if (array == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3373,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3375,"        if (separator == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3376,"            separator = EMPTY;
",4,0,0,0,0,0,0,0,0,5,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3381,"        int noOfItems = (endIndex - startIndex);
",6,1,0,1,2,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3382,"        if (noOfItems <= 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3383,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3386,"        StringBuilder buf = new StringBuilder(noOfItems * 16);
",4,1,0,1,2,0,0,4,0,9,54,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3388,"        for (int i = startIndex; i < endIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3389,"            if (i > startIndex) {
",4,1,0,1,3,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3390,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3392,"            if (array[i] != null) {
",0,1,1,2,5,0,0,0,0,5,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3393,"                buf.append(array[i]);
",0,0,1,2,4,0,4,0,0,8,21,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3396,"        return buf.toString();
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3416,"        if (iterator == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3417,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3419,"        if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3420,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3422,"        Object first = iterator.next();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3423,"        if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3424,"            return ObjectUtils.toString(first);
",0,0,0,1,2,0,6,0,0,6,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3428,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small
",2,0,0,1,2,0,0,4,0,6,85,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3429,"        if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3430,"            buf.append(first);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3433,"        while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3434,"            buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3435,"            Object obj = iterator.next();
",2,0,0,1,2,0,4,2,0,8,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3436,"            if (obj != null) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3437,"                buf.append(obj);
",0,0,0,1,2,0,6,0,0,6,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3439,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3441,"        return buf.toString();
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3460,"        if (iterator == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3461,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3463,"        if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3464,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3466,"        Object first = iterator.next();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3467,"        if (!iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,5,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3468,"            return ObjectUtils.toString(first);
",0,0,0,1,2,0,6,0,0,6,35,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3472,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small
",2,0,0,1,2,0,0,4,0,6,85,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3473,"        if (first != null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3474,"            buf.append(first);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3477,"        while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3478,"            if (separator != null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3479,"                buf.append(separator);
",0,0,0,1,2,0,6,0,0,6,22,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3481,"            Object obj = iterator.next();
",2,0,0,1,2,0,4,2,0,8,29,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3482,"            if (obj != null) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3483,"                buf.append(obj);
",0,0,0,1,2,0,6,0,0,6,16,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3485,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3486,"        return buf.toString();
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3504,"        if (iterable == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3505,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3507,"        return join(iterable.iterator(), separator);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3525,"        if (iterable == null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3526,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3528,"        return join(iterable.iterator(), separator);
",0,0,0,2,4,0,8,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3548,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3549,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3551,"        int sz = str.length();
",2,0,0,1,2,0,4,0,0,6,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3552,"        char[] chs = new char[sz];
",2,0,1,2,4,0,0,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3553,"        int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3554,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3555,"            if (!Character.isWhitespace(str.charAt(i))) {
",0,0,0,3,7,0,10,0,0,11,45,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3556,"                chs[count++] = str.charAt(i);
",2,0,1,2,4,0,6,0,0,12,29,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3559,"        if (count == sz) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3560,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3562,"        return new String(chs, 0, count);
",4,0,0,1,2,0,0,2,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3592,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3593,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3595,"        if (str.startsWith(remove)){
",0,0,0,2,5,0,6,0,0,6,28,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3596,"            return str.substring(remove.length());
",0,0,0,2,4,0,8,0,0,8,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3598,"        return str;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3627,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3628,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3630,"        if (startsWithIgnoreCase(str, remove)) {
",0,0,0,2,5,0,6,0,0,6,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3631,"            return str.substring(remove.length());
",0,0,0,2,4,0,8,0,0,8,38,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3633,"        return str;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3661,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3662,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3664,"        if (str.endsWith(remove)) {
",0,0,0,2,5,0,6,0,0,6,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3665,"            return str.substring(0, str.length() - remove.length());
",0,1,0,3,6,0,12,0,0,13,56,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3667,"        return str;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3697,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3698,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3700,"        if (endsWithIgnoreCase(str, remove)) {
",0,0,0,2,5,0,6,0,0,6,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3701,"            return str.substring(0, str.length() - remove.length());
",0,1,0,3,6,0,12,0,0,13,56,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3703,"        return str;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3730,"        if (isEmpty(str) || isEmpty(remove)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3731,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3733,"        return replace(str, remove, EMPTY, -1);
",0,0,0,1,2,0,8,0,0,9,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3756,"        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {
",2,2,0,3,7,0,10,0,0,14,61,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3757,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3759,"        char[] chars = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3760,"        int pos = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3761,"        for (int i = 0; i < chars.length; i++) {
",10,1,0,1,3,0,0,0,0,12,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3762,"            if (chars[i] != remove) {
",2,1,1,2,5,0,0,0,0,7,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3763,"                chars[pos++] = chars[i];
",2,0,1,2,4,0,0,0,0,10,24,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3766,"        return new String(chars, 0, pos);
",4,0,0,1,2,0,0,2,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3795,"        return replace(text, searchString, replacement, 1);
",0,0,0,1,2,0,8,0,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3822,"        return replace(text, searchString, replacement, -1);
",0,0,0,1,2,0,8,0,0,9,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3854,"        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {
",4,4,0,3,7,0,8,0,0,18,80,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3855,"            return text;
",2,0,0,0,0,0,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3857,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3858,"        int end = text.indexOf(searchString, start);
",2,0,0,1,2,0,8,0,0,10,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3859,"        if (end == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3860,"            return text;
",2,0,0,0,0,0,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3862,"        int replLength = searchString.length();
",2,0,0,1,2,0,4,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3863,"        int increase = replacement.length() - replLength;
",4,1,0,1,2,0,4,0,0,9,49,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3864,"        increase = (increase < 0 ? 0 : increase);
",6,1,0,1,2,0,0,0,0,8,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3865,"        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));
",8,2,0,2,4,0,0,0,0,11,51,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3866,"        StringBuilder buf = new StringBuilder(text.length() + increase);
",4,1,0,2,4,0,4,4,0,13,64,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3867,"        while (end != INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3868,"            buf.append(text.substring(start, end)).append(replacement);
",0,0,0,3,6,0,16,0,0,16,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3869,"            start = end + replLength;
",6,1,0,0,0,0,0,0,0,8,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3870,"            if (--max == 0) {
",2,1,0,1,3,0,0,0,0,4,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3871,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3873,"            end = text.indexOf(searchString, start);
",2,0,0,1,2,0,8,0,0,11,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3875,"        buf.append(text.substring(start));
",0,0,0,2,4,0,10,0,0,10,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3876,"        return buf.toString();
",0,0,0,1,2,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3919,"        return replaceEach(text, searchList, replacementList, false, 0);
",0,0,0,1,2,0,8,0,0,9,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3969,"        int timeToLive = searchList == null ? 0 : searchList.length;
",8,1,0,0,0,0,0,0,0,9,60,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,3970,"        return replaceEach(text, searchList, replacementList, true, timeToLive);
",0,0,0,1,2,0,10,0,0,11,72,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4027,"        if (text == null || text.length() == 0 || searchList == null ||
",4,8,0,1,3,0,4,0,0,16,63,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4029,"            return text;
",2,0,0,0,0,0,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4033,"        if (timeToLive < 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4034,"            throw new IllegalStateException(""Aborting to protect against StackOverflowError - "" +
",0,1,0,0,1,0,0,2,0,4,85,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4038,"        int searchLength = searchList.length;
",6,0,0,0,0,0,0,0,0,6,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4039,"        int replacementLength = replacementList.length;
",6,0,0,0,0,0,0,0,0,6,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4042,"        if (searchLength != replacementLength) {
",4,1,0,1,3,0,0,0,0,5,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4043,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: ""
",0,0,0,0,1,0,0,2,0,3,83,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4050,"        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
",2,0,1,2,4,0,0,0,0,4,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4053,"        int textIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4054,"        int replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,3,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4055,"        int tempIndex = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4059,"        for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4060,"            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
",0,4,1,2,5,0,0,0,0,12,60,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4062,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4064,"            tempIndex = text.indexOf(searchList[i]);
",2,0,1,2,4,0,4,0,0,11,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4067,"            if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4068,"                noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4070,"                if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4071,"                    textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4072,"                    replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4079,"        if (textIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4080,"            return text;
",2,0,0,0,0,0,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4083,"        int start = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4086,"        int increase = 0;
",2,0,0,0,0,0,0,0,0,2,17,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4089,"        for (int i = 0; i < searchList.length; i++) {
",10,1,0,1,3,0,0,0,0,12,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4090,"            if (searchList[i] == null || replacementList[i] == null) {
",0,3,1,3,7,0,0,0,0,11,58,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4091,"                continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4093,"            int greater = replacementList[i].length() - searchList[i].length();
",2,1,1,4,8,0,4,0,0,15,67,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4094,"            if (greater > 0) {
",2,1,0,1,3,0,0,0,0,3,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4095,"                increase += 3 * greater; // assume 3 matches
",4,1,0,0,0,0,0,0,0,6,44,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4099,"        increase = Math.min(increase, text.length() / 5);
",2,1,0,2,4,0,10,0,0,14,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4101,"        StringBuilder buf = new StringBuilder(text.length() + increase);
",4,1,0,2,4,0,4,4,0,13,64,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4103,"        while (textIndex != -1) {
",2,1,0,1,3,0,0,0,0,4,25,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4105,"            for (int i = start; i < textIndex; i++) {
",10,1,0,1,3,0,0,0,0,12,41,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4106,"                buf.append(text.charAt(i));
",0,0,0,2,4,0,10,0,0,10,27,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4108,"            buf.append(replacementList[replaceIndex]);
",0,0,1,2,4,0,4,0,0,8,42,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4110,"            start = textIndex + searchList[replaceIndex].length();
",4,1,1,2,4,0,2,0,0,12,54,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4112,"            textIndex = -1;
",2,0,0,0,0,0,0,0,0,4,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4113,"            replaceIndex = -1;
",2,0,0,0,0,0,0,0,0,4,18,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4114,"            tempIndex = -1;
",2,0,0,0,0,0,0,0,0,4,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4117,"            for (int i = 0; i < searchLength; i++) {
",8,1,0,1,3,0,0,0,0,10,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4118,"                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
",0,4,1,2,5,0,0,0,0,12,60,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4120,"                    continue;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4122,"                tempIndex = text.indexOf(searchList[i], start);
",2,0,1,2,4,0,6,0,0,13,47,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4125,"                if (tempIndex == -1) {
",2,1,0,1,3,0,0,0,0,4,22,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4126,"                    noMoreMatchesForReplIndex[i] = true;
",0,0,1,1,2,0,0,0,0,6,36,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4128,"                    if (textIndex == -1 || tempIndex < textIndex) {
",6,3,0,1,3,0,0,0,0,10,47,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4129,"                        textIndex = tempIndex;
",4,0,0,0,0,0,0,0,0,5,22,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4130,"                        replaceIndex = i;
",4,0,0,0,0,0,0,0,0,5,17,12,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4137,"        int textLength = text.length();
",2,0,0,1,2,0,4,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4138,"        for (int i = start; i < textLength; i++) {
",10,1,0,1,3,0,0,0,0,12,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4139,"            buf.append(text.charAt(i));
",0,0,0,2,4,0,10,0,0,10,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4141,"        String result = buf.toString();
",2,0,0,1,2,0,4,2,0,8,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4142,"        if (!repeat) {
",2,0,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4143,"            return result;
",2,0,0,0,0,0,0,0,0,2,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4146,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);
",2,1,0,1,2,0,10,0,0,13,80,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4172,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4173,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4175,"        return str.replace(searchChar, replaceChar);
",0,0,0,1,2,0,8,0,0,8,44,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4215,"        if (isEmpty(str) || isEmpty(searchChars)) {
",0,1,0,3,7,0,8,0,0,9,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4216,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4218,"        if (replaceChars == null) {
",2,1,0,1,3,0,0,0,0,3,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4219,"            replaceChars = EMPTY;
",4,0,0,0,0,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4221,"        boolean modified = false;
",2,0,0,0,0,0,0,0,0,3,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4222,"        int replaceCharsLength = replaceChars.length();
",2,0,0,1,2,0,4,0,0,6,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4223,"        int strLength = str.length();
",2,0,0,1,2,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4224,"        StringBuilder buf = new StringBuilder(strLength);
",4,0,0,1,2,0,0,4,0,8,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4225,"        for (int i = 0; i < strLength; i++) {
",8,1,0,1,3,0,0,0,0,10,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4226,"            char ch = str.charAt(i);
",2,0,0,1,2,0,6,0,0,8,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4227,"            int index = searchChars.indexOf(ch);
",2,0,0,1,2,0,6,0,0,8,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4228,"            if (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,17,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4229,"                modified = true;
",2,0,0,0,0,0,0,0,0,4,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4230,"                if (index < replaceCharsLength) {
",4,1,0,1,3,0,0,0,0,5,33,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4231,"                    buf.append(replaceChars.charAt(index));
",0,0,0,2,4,0,10,0,0,10,39,11,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4234,"                buf.append(ch);
",0,0,0,1,2,0,6,0,0,6,15,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4237,"        if (modified) {
",2,0,0,1,3,0,0,0,0,2,15,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4238,"            return buf.toString();
",0,0,0,1,2,0,4,0,0,4,22,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4240,"        return str;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4275,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4276,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4278,"        if (overlay == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4279,"            overlay = EMPTY;
",4,0,0,0,0,0,0,0,0,5,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4281,"        int len = str.length();
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4282,"        if (start < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4283,"            start = 0;
",2,0,0,0,0,0,0,0,0,3,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4285,"        if (start > len) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4286,"            start = len;
",4,0,0,0,0,0,0,0,0,5,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4288,"        if (end < 0) {
",2,1,0,1,3,0,0,0,0,3,14,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4289,"            end = 0;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4291,"        if (end > len) {
",4,1,0,1,3,0,0,0,0,5,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4292,"            end = len;
",4,0,0,0,0,0,0,0,0,5,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4294,"        if (start > end) {
",4,1,0,1,3,0,0,0,0,5,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4295,"            int temp = start;
",4,0,0,0,0,0,0,0,0,4,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4296,"            start = end;
",4,0,0,0,0,0,0,0,0,5,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4297,"            end = temp;
",4,0,0,0,0,0,0,0,0,5,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4299,"        return new StringBuilder(len + start - end + overlay.length() + 1)
",6,4,0,2,4,0,4,2,0,16,66,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4334,"        if (isEmpty(str)) {
",0,0,0,2,5,0,4,0,0,4,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4335,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4338,"        if (str.length() == 1) {
",0,1,0,2,5,0,4,0,0,5,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4339,"            char ch = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,24,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4340,"            if (ch == CharUtils.CR || ch == CharUtils.LF) {
",12,3,0,1,3,0,0,0,0,15,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4341,"                return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4343,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4346,"        int lastIdx = str.length() - 1;
",2,1,0,1,2,0,4,0,0,7,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4347,"        char last = str.charAt(lastIdx);
",2,0,0,1,2,0,6,0,0,8,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4349,"        if (last == CharUtils.LF) {
",6,1,0,1,3,0,0,0,0,7,27,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4350,"            if (str.charAt(lastIdx - 1) == CharUtils.CR) {
",6,2,0,2,5,0,4,0,0,12,46,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4351,"                lastIdx--;
",2,0,0,0,0,0,0,0,0,3,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4353,"        } else if (last != CharUtils.CR) {
",6,1,0,1,4,0,0,0,0,7,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4354,"            lastIdx++;
",2,0,0,0,0,0,0,0,0,3,10,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4356,"        return str.substring(0, lastIdx);
",0,0,0,1,2,0,6,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4386,"        if (isEmpty(str) || separator == null) {
",2,2,0,2,5,0,4,0,0,9,40,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4387,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4389,"        if (str.endsWith(separator)) {
",0,0,0,2,5,0,6,0,0,6,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4390,"            return str.substring(0, str.length() - separator.length());
",0,1,0,3,6,0,12,0,0,13,59,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4392,"        return str;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4421,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4422,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4424,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4425,"        if (strLen < 2) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4426,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4428,"        int lastIdx = strLen - 1;
",4,1,0,0,0,0,0,0,0,5,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4429,"        String ret = str.substring(0, lastIdx);
",2,0,0,1,2,0,6,2,0,10,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4430,"        char last = str.charAt(lastIdx);
",2,0,0,1,2,0,6,0,0,8,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4431,"        if (last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR) {
",12,4,0,2,5,0,4,0,0,20,70,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4432,"            return ret.substring(0, lastIdx - 1);
",2,1,0,1,2,0,4,0,0,7,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4434,"        return ret;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4463,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4464,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4466,"        if (repeat <= 0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4467,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4469,"        int inputLength = str.length();
",2,0,0,1,2,0,4,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4470,"        if (repeat == 1 || inputLength == 0) {
",4,3,0,1,3,0,0,0,0,7,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4471,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4473,"        if (inputLength == 1 && repeat <= PAD_LIMIT) {
",6,3,0,1,3,0,0,0,0,9,46,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4474,"            return repeat(str.charAt(0), repeat);
",0,0,0,2,4,0,8,0,0,8,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4477,"        int outputLength = inputLength * repeat;
",6,1,0,0,0,0,0,0,0,7,40,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4478,"        switch (inputLength) {
",2,0,0,1,3,0,0,0,0,2,22,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4480,"                return repeat(str.charAt(0), repeat);
",0,0,0,2,4,0,8,0,0,8,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4482,"                char ch0 = str.charAt(0);
",2,0,0,1,2,0,4,0,0,6,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4483,"                char ch1 = str.charAt(1);
",2,0,0,1,2,0,4,0,0,6,25,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4484,"                char[] output2 = new char[outputLength];
",2,0,1,2,4,0,0,0,0,4,40,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4485,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {
",10,3,0,1,3,0,0,0,0,15,48,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4486,"                    output2[i] = ch0;
",2,0,1,1,2,0,0,0,0,7,17,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4487,"                    output2[i + 1] = ch1;
",4,1,1,1,2,0,0,0,0,8,21,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4489,"                return new String(output2);
",2,0,0,1,2,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4491,"                StringBuilder buf = new StringBuilder(outputLength);
",4,0,0,1,2,0,0,4,0,8,52,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4492,"                for (int i = 0; i < repeat; i++) {
",8,1,0,1,3,0,0,0,0,10,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4493,"                    buf.append(str);
",0,0,0,1,2,0,6,0,0,6,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4495,"                return buf.toString();
",0,0,0,1,2,0,4,0,0,4,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4520,"        if(str == null || separator == null) {
",4,3,0,1,3,0,0,0,0,7,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4521,"            return repeat(str, repeat);
",0,0,0,1,2,0,6,0,0,6,27,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4524,"            String result = repeat(str + separator, repeat);
",6,1,0,1,2,0,4,2,0,13,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4525,"            return removeEnd(result, separator);
",0,0,0,1,2,0,6,0,0,6,36,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4552,"        char[] buf = new char[repeat];
",2,0,1,2,4,0,0,0,0,4,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4553,"        for (int i = repeat - 1; i >= 0; i--) {
",8,2,0,1,3,0,0,0,0,11,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4554,"            buf[i] = ch;
",2,0,1,1,2,0,0,0,0,7,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4556,"        return new String(buf);
",2,0,0,1,2,0,0,2,0,4,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4579,"        return rightPad(str, size, ' ');
",0,0,0,1,2,0,6,0,0,7,32,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4604,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4605,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4607,"        int pads = size - str.length();
",4,1,0,1,2,0,4,0,0,9,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4608,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4609,"            return str; // returns original String when possible
",2,0,0,0,0,0,0,0,0,2,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4611,"        if (pads > PAD_LIMIT) {
",4,1,0,1,3,0,0,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4612,"            return rightPad(str, size, String.valueOf(padChar));
",0,0,0,2,4,0,12,0,0,12,52,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4614,"        return str.concat(repeat(padChar, pads));
",0,0,0,2,4,0,10,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4641,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4642,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4644,"        if (isEmpty(padStr)) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4645,"            padStr = "" "";
",2,0,0,0,0,0,0,0,0,4,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4647,"        int padLen = padStr.length();
",2,0,0,1,2,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4648,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4649,"        int pads = size - strLen;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4650,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4651,"            return str; // returns original String when possible
",2,0,0,0,0,0,0,0,0,2,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4653,"        if (padLen == 1 && pads <= PAD_LIMIT) {
",6,3,0,1,3,0,0,0,0,9,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4654,"            return rightPad(str, size, padStr.charAt(0));
",0,0,0,2,4,0,10,0,0,10,45,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4657,"        if (pads == padLen) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4658,"            return str.concat(padStr);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4659,"        } else if (pads < padLen) {
",4,1,0,1,4,0,0,0,0,5,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4660,"            return str.concat(padStr.substring(0, pads));
",0,0,0,2,4,0,10,0,0,10,45,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4662,"            char[] padding = new char[pads];
",2,0,1,2,4,0,0,0,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4663,"            char[] padChars = padStr.toCharArray();
",2,0,0,2,4,0,4,0,0,6,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4664,"            for (int i = 0; i < pads; i++) {
",8,1,0,1,3,0,0,0,0,10,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4665,"                padding[i] = padChars[i % padLen];
",4,1,1,2,4,0,0,0,0,12,34,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4667,"            return str.concat(new String(padding));
",2,0,0,2,4,0,4,2,0,8,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4691,"        return leftPad(str, size, ' ');
",0,0,0,1,2,0,6,0,0,7,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4716,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4717,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4719,"        int pads = size - str.length();
",4,1,0,1,2,0,4,0,0,9,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4720,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4721,"            return str; // returns original String when possible
",2,0,0,0,0,0,0,0,0,2,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4723,"        if (pads > PAD_LIMIT) {
",4,1,0,1,3,0,0,0,0,5,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4724,"            return leftPad(str, size, String.valueOf(padChar));
",0,0,0,2,4,0,12,0,0,12,51,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4726,"        return repeat(padChar, pads).concat(str);
",0,0,0,2,4,0,10,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4753,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4754,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4756,"        if (isEmpty(padStr)) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4757,"            padStr = "" "";
",2,0,0,0,0,0,0,0,0,4,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4759,"        int padLen = padStr.length();
",2,0,0,1,2,0,4,0,0,6,29,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4760,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4761,"        int pads = size - strLen;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4762,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4763,"            return str; // returns original String when possible
",2,0,0,0,0,0,0,0,0,2,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4765,"        if (padLen == 1 && pads <= PAD_LIMIT) {
",6,3,0,1,3,0,0,0,0,9,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4766,"            return leftPad(str, size, padStr.charAt(0));
",0,0,0,2,4,0,10,0,0,10,44,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4769,"        if (pads == padLen) {
",4,1,0,1,3,0,0,0,0,5,21,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4770,"            return padStr.concat(str);
",0,0,0,1,2,0,6,0,0,6,26,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4771,"        } else if (pads < padLen) {
",4,1,0,1,4,0,0,0,0,5,27,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4772,"            return padStr.substring(0, pads).concat(str);
",0,0,0,2,4,0,10,0,0,10,45,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4774,"            char[] padding = new char[pads];
",2,0,1,2,4,0,0,0,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4775,"            char[] padChars = padStr.toCharArray();
",2,0,0,2,4,0,4,0,0,6,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4776,"            for (int i = 0; i < pads; i++) {
",8,1,0,1,3,0,0,0,0,10,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4777,"                padding[i] = padChars[i % padLen];
",4,1,1,2,4,0,0,0,0,12,34,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4779,"            return new String(padding).concat(str);
",2,0,0,2,4,0,4,2,0,8,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4795,"        return cs == null ? 0 : cs.length();
",2,1,0,1,2,0,4,0,0,7,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4824,"        return center(str, size, ' ');
",0,0,0,1,2,0,6,0,0,7,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4852,"        if (str == null || size <= 0) {
",4,3,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4853,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4855,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4856,"        int pads = size - strLen;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4857,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4858,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4860,"        str = leftPad(str, strLen + pads / 2, padChar);
",6,2,0,1,2,0,6,0,0,15,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4861,"        str = rightPad(str, size, padChar);
",2,0,0,1,2,0,8,0,0,11,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4862,"        return str;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4892,"        if (str == null || size <= 0) {
",4,3,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4893,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4895,"        if (isEmpty(padStr)) {
",0,0,0,2,5,0,4,0,0,4,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4896,"            padStr = "" "";
",2,0,0,0,0,0,0,0,0,4,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4898,"        int strLen = str.length();
",2,0,0,1,2,0,4,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4899,"        int pads = size - strLen;
",6,1,0,0,0,0,0,0,0,7,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4900,"        if (pads <= 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4901,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4903,"        str = leftPad(str, strLen + pads / 2, padStr);
",6,2,0,1,2,0,6,0,0,15,46,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4904,"        str = rightPad(str, size, padStr);
",2,0,0,1,2,0,8,0,0,11,34,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4905,"        return str;
",2,0,0,0,0,0,0,0,0,2,11,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4930,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4931,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4933,"        return str.toUpperCase();
",0,0,0,1,2,0,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4953,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4954,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4956,"        return str.toUpperCase(locale);
",0,0,0,1,2,0,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4979,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4980,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,4982,"        return str.toLowerCase();
",0,0,0,1,2,0,4,0,0,4,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5002,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5003,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5005,"        return str.toLowerCase(locale);
",0,0,0,1,2,0,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5030,"        if (str == null || (strLen = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5031,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5033,"        return new StringBuilder(strLen)
",2,0,0,1,2,0,0,2,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5061,"        if (str == null || (strLen = str.length()) == 0) {
",4,3,0,3,7,0,4,0,0,12,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5062,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5064,"        return new StringBuilder(strLen)
",2,0,0,1,2,0,0,2,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5098,"        if (StringUtils.isEmpty(str)) {
",0,0,0,2,5,0,6,0,0,6,31,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5099,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5102,"        char[] buffer = str.toCharArray();
",2,0,0,2,4,0,4,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5104,"        for (int i = 0; i < buffer.length; i++) {
",10,1,0,1,3,0,0,0,0,12,41,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5105,"            char ch = buffer[i];
",2,0,1,1,2,0,0,0,0,6,20,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5106,"            if (Character.isUpperCase(ch)) {
",0,0,0,2,5,0,6,0,0,6,32,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5107,"                buffer[i] = Character.toLowerCase(ch);
",0,0,1,2,4,0,6,0,0,11,38,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5108,"            } else if (Character.isTitleCase(ch)) {
",0,0,0,2,6,0,6,0,0,6,39,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5109,"                buffer[i] = Character.toLowerCase(ch);
",0,0,1,2,4,0,6,0,0,11,38,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5110,"            } else if (Character.isLowerCase(ch)) {
",0,0,0,2,6,0,6,0,0,6,39,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5111,"                buffer[i] = Character.toUpperCase(ch);
",0,0,1,2,4,0,6,0,0,11,38,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5114,"        return new String(buffer);
",2,0,0,1,2,0,0,2,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5140,"        if (isEmpty(str) || isEmpty(sub)) {
",0,1,0,3,7,0,8,0,0,9,35,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5141,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5143,"        int count = 0;
",2,0,0,0,0,0,0,0,0,2,14,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5144,"        int idx = 0;
",2,0,0,0,0,0,0,0,0,2,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5145,"        while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {
",4,1,0,3,7,0,10,0,0,16,77,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5146,"            count++;
",2,0,0,0,0,0,0,0,0,3,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5147,"            idx += sub.length();
",2,0,0,1,2,0,4,0,0,7,20,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5149,"        return count;
",2,0,0,0,0,0,0,0,0,2,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5175,"        if (cs == null || cs.length() == 0) {
",2,3,0,2,5,0,4,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5176,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5178,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5179,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5180,"            if (Character.isLetter(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,48,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5181,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5184,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5210,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5211,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5213,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5214,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5215,"            if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
",0,3,0,6,13,0,16,0,0,21,75,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5216,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5219,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5245,"        if (cs == null || cs.length() == 0) {
",2,3,0,2,5,0,4,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5246,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5248,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5249,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5250,"            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,55,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5251,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5254,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5280,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5281,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5283,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5284,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5285,"            if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
",0,3,0,6,13,0,16,0,0,21,82,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5286,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5289,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5319,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5320,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5322,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5323,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5324,"            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,56,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5325,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5328,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5355,"        if (cs == null || cs.length() == 0) {
",2,3,0,2,5,0,4,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5356,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5358,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5359,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5360,"            if (Character.isDigit(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,47,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5361,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5364,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5392,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5393,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5395,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5396,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5397,"            if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
",0,3,0,6,13,0,16,0,0,21,74,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5398,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5401,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5425,"        if (cs == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5426,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5428,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5429,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5430,"            if ((Character.isWhitespace(cs.charAt(i)) == false)) {
",0,1,0,4,9,0,10,0,0,12,54,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5431,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5434,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5457,"        if (cs == null || isEmpty(cs)) {
",2,2,0,2,5,0,4,0,0,9,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5458,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5460,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5461,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5462,"            if (Character.isLowerCase(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,51,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5463,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5466,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5489,"        if (cs == null || isEmpty(cs)) {
",2,2,0,2,5,0,4,0,0,9,32,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5490,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5492,"        int sz = cs.length();
",2,0,0,1,2,0,4,0,0,6,21,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5493,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5494,"            if (Character.isUpperCase(cs.charAt(i)) == false) {
",0,1,0,3,7,0,10,0,0,12,51,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5495,"                return false;
",0,0,0,0,0,0,0,0,0,1,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5498,"        return true;
",0,0,0,0,0,0,0,0,0,1,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5520,"        return str == null ? EMPTY : str;
",6,1,0,0,0,0,0,0,0,7,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5541,"        return str == null ? defaultStr : str;
",6,1,0,0,0,0,0,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5563,"        return StringUtils.isBlank(str) ? defaultStr : str;
",4,0,0,1,2,0,6,0,0,10,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5584,"        return StringUtils.isEmpty(str) ? defaultStr : str;
",4,0,0,1,2,0,6,0,0,10,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5604,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5605,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5607,"        return new StringBuilder(str).reverse().toString();
",2,0,0,3,6,0,4,2,0,8,51,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5630,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5631,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5635,"        String[] strs = split(str, separatorChar);
",2,0,0,2,4,0,6,2,0,10,42,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5636,"        ArrayUtils.reverse(strs);
",0,0,0,1,2,0,6,0,0,6,25,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5637,"        return join(strs, separatorChar);
",0,0,0,1,2,0,6,0,0,6,33,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5675,"        return abbreviate(str, 0, maxWidth);
",0,0,0,1,2,0,6,0,0,6,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5714,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5715,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5717,"        if (maxWidth < 4) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5718,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");
",0,0,0,1,2,0,0,2,0,3,70,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5720,"        if (str.length() <= maxWidth) {
",2,1,0,2,5,0,4,0,0,7,31,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5721,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5723,"        if (offset > str.length()) {
",2,1,0,2,5,0,4,0,0,7,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5724,"            offset = str.length();
",2,0,0,1,2,0,4,0,0,7,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5726,"        if ((str.length() - offset) < (maxWidth - 3)) {
",4,3,0,4,9,0,4,0,0,11,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5727,"            offset = str.length() - (maxWidth - 3);
",4,2,0,2,4,0,4,0,0,11,39,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5729,"        final String abrevMarker = ""..."";
",2,0,0,0,0,1,0,2,0,6,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5730,"        if (offset <= 4) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5731,"            return str.substring(0, maxWidth - 3) + abrevMarker;
",4,2,0,1,2,0,4,0,0,10,52,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5733,"        if (maxWidth < 7) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5734,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");
",0,0,0,1,2,0,0,2,0,3,82,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5736,"        if ((offset + (maxWidth - 3)) < str.length()) {
",4,3,0,4,9,0,4,0,0,11,47,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5737,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);
",4,2,0,2,4,0,8,0,0,14,69,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5739,"        return abrevMarker + str.substring(str.length() - (maxWidth - 3));
",4,3,0,3,6,0,8,0,0,15,66,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5772,"        if (isEmpty(str) || isEmpty(middle)) {
",0,1,0,3,7,0,8,0,0,9,38,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5773,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5776,"        if (length >= str.length() || length < (middle.length()+2)) {
",4,4,0,4,9,0,8,0,0,16,61,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5777,"            return str;
",2,0,0,0,0,0,0,0,0,2,11,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5780,"        int targetSting = length-middle.length();
",4,1,0,1,2,0,4,0,0,9,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5781,"        int startOffset = targetSting/2+targetSting%2;
",6,3,0,0,0,0,0,0,0,9,46,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5782,"        int endOffset = str.length()-targetSting/2;
",4,2,0,1,2,0,4,0,0,10,43,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5784,"        StringBuilder builder = new StringBuilder(length);
",4,0,0,1,2,0,0,4,0,8,50,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5785,"        builder.append(str.substring(0,startOffset));
",0,0,0,2,4,0,10,0,0,10,45,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5786,"        builder.append(middle);
",0,0,0,1,2,0,6,0,0,6,23,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5787,"        builder.append(str.substring(endOffset));
",0,0,0,2,4,0,10,0,0,10,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5789,"        return builder.toString();
",0,0,0,1,2,0,4,0,0,4,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5820,"        if (str1 == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5821,"            return str2;
",2,0,0,0,0,0,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5823,"        if (str2 == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5824,"            return str1;
",2,0,0,0,0,0,0,0,0,2,12,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5826,"        int at = indexOfDifference(str1, str2);
",2,0,0,1,2,0,6,0,0,8,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5827,"        if (at == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,28,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5828,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5830,"        return str2.substring(at);
",0,0,0,1,2,0,6,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5859,"        if (cs1 == cs2) {
",4,1,0,1,3,0,0,0,0,5,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5860,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5862,"        if (cs1 == null || cs2 == null) {
",4,3,0,1,3,0,0,0,0,7,33,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5863,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5866,"        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {
",8,3,0,3,7,0,8,0,0,21,56,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5867,"            if (cs1.charAt(i) != cs2.charAt(i)) {
",0,1,0,3,7,0,12,0,0,13,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5868,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5871,"        if (i < cs2.length() || i < cs1.length()) {
",4,3,0,3,7,0,8,0,0,15,43,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5872,"            return i;
",2,0,0,0,0,0,0,0,0,2,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5874,"        return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5910,"        if (css == null || css.length <= 1) {
",6,3,0,1,3,0,0,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5911,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5913,"        boolean anyStringNull = false;
",2,0,0,0,0,0,0,0,0,3,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5914,"        boolean allStringsNull = true;
",2,0,0,0,0,0,0,0,0,3,30,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5915,"        int arrayLen = css.length;
",6,0,0,0,0,0,0,0,0,6,26,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5916,"        int shortestStrLen = Integer.MAX_VALUE;
",6,0,0,0,0,0,0,0,0,6,39,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5917,"        int longestStrLen = 0;
",2,0,0,0,0,0,0,0,0,2,22,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5922,"        for (int i = 0; i < arrayLen; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5923,"            if (css[i] == null) {
",0,1,1,2,5,0,0,0,0,5,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5924,"                anyStringNull = true;
",2,0,0,0,0,0,0,0,0,4,21,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5925,"                shortestStrLen = 0;
",2,0,0,0,0,0,0,0,0,3,19,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5927,"                allStringsNull = false;
",2,0,0,0,0,0,0,0,0,4,23,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5928,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);
",2,0,1,3,6,0,8,0,0,15,59,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5929,"                longestStrLen = Math.max(css[i].length(), longestStrLen);
",2,0,1,3,6,0,8,0,0,15,57,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5934,"        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {
",6,3,0,2,5,0,0,0,0,10,63,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5935,"            return INDEX_NOT_FOUND;
",2,0,0,0,0,0,0,0,0,2,23,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5939,"        if (shortestStrLen == 0) {
",2,1,0,1,3,0,0,0,0,3,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5940,"            return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5944,"        int firstDiff = -1;
",2,0,0,0,0,0,0,0,0,3,19,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5945,"        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {
",8,1,0,1,3,0,0,0,0,10,66,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5946,"            char comparisonChar = css[0].charAt(stringPos);
",2,0,1,2,4,0,4,0,0,8,47,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5947,"            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {
",8,1,0,1,3,0,0,0,0,10,57,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5948,"                if (css[arrayPos].charAt(stringPos) != comparisonChar) {
",2,1,1,3,7,0,4,0,0,11,56,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5949,"                    firstDiff = stringPos;
",4,0,0,0,0,0,0,0,0,5,22,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5950,"                    break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5953,"            if (firstDiff != -1) {
",2,1,0,1,3,0,0,0,0,4,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5954,"                break;
",0,0,0,0,0,0,0,0,0,0,6,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5958,"        if (firstDiff == -1 && shortestStrLen != longestStrLen) {
",6,3,0,1,3,0,0,0,0,10,57,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5962,"            return shortestStrLen;
",2,0,0,0,0,0,0,0,0,2,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,5964,"        return firstDiff;
",2,0,0,0,0,0,0,0,0,2,17,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6001,"        if (strs == null || strs.length == 0) {
",6,3,0,1,3,0,0,0,0,9,39,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6002,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6004,"        int smallestIndexOfDiff = indexOfDifference(strs);
",2,0,0,1,2,0,4,0,0,6,50,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6005,"        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {
",4,1,0,1,3,0,0,0,0,5,45,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6007,"            if (strs[0] == null) {
",0,1,1,2,5,0,0,0,0,3,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6008,"                return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6010,"            return strs[0];
",0,0,1,1,2,0,0,0,0,2,15,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6011,"        } else if (smallestIndexOfDiff == 0) {
",2,1,0,1,4,0,0,0,0,3,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6013,"            return EMPTY;
",2,0,0,0,0,0,0,0,0,2,13,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6016,"            return strs[0].substring(0, smallestIndexOfDiff);
",0,0,1,2,4,0,4,0,0,6,49,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6059,"        if (s == null || t == null) {
",4,3,0,1,3,0,0,0,0,7,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6060,"            throw new IllegalArgumentException(""Strings must not be null"");
",0,0,0,1,2,0,0,2,0,4,63,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6080,"        int n = s.length(); // length of s
",2,0,0,1,2,0,4,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6081,"        int m = t.length(); // length of t
",2,0,0,1,2,0,4,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6083,"        if (n == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6084,"            return m;
",2,0,0,0,0,0,0,0,0,2,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6085,"        } else if (m == 0) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6086,"            return n;
",2,0,0,0,0,0,0,0,0,2,9,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6089,"        if (n > m) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6091,"            CharSequence tmp = s;
",4,0,0,0,0,0,0,2,0,6,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6092,"            s = t;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6093,"            t = tmp;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6094,"            n = m;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6095,"            m = t.length();
",2,0,0,1,2,0,4,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6098,"        int p[] = new int[n + 1]; //'previous' cost array, horizontally
",4,1,0,2,4,0,0,0,0,5,63,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6099,"        int d[] = new int[n + 1]; // cost array, horizontally
",4,1,0,2,4,0,0,0,0,5,53,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6110,"        for (i = 0; i <= n; i++) {
",8,1,0,1,3,0,0,0,0,11,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6111,"            p[i] = i;
",2,0,1,1,2,0,0,0,0,7,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6114,"        for (j = 1; j <= m; j++) {
",8,1,0,1,3,0,0,0,0,11,26,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6115,"            t_j = t.charAt(j - 1);
",4,1,0,1,2,0,4,0,0,10,22,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6116,"            d[0] = j;
",2,0,1,1,2,0,0,0,0,5,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6118,"            for (i = 1; i <= n; i++) {
",8,1,0,1,3,0,0,0,0,11,26,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6119,"                cost = s.charAt(i - 1) == t_j ? 0 : 1;
",6,2,0,1,2,0,4,0,0,13,38,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6121,"                d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);
",6,5,1,6,12,0,8,0,0,32,67,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6125,"            _d = p;
",4,0,0,0,0,0,0,0,0,5,7,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6126,"            p = d;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6127,"            d = _d;
",4,0,0,0,0,0,0,0,0,5,7,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6132,"        return p[n];
",0,0,1,1,2,0,0,0,0,4,12,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6168,"        if (s == null || t == null) {
",4,3,0,1,3,0,0,0,0,7,29,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6169,"            throw new IllegalArgumentException(""Strings must not be null"");
",0,0,0,1,2,0,0,2,0,4,63,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6171,"        if (threshold < 0) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6172,"            throw new IllegalArgumentException(""Threshold must not be negative"");
",0,0,0,1,2,0,0,2,0,3,69,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6219,"        int n = s.length(); // length of s
",2,0,0,1,2,0,4,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6220,"        int m = t.length(); // length of t
",2,0,0,1,2,0,4,0,0,6,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6223,"        if (n == 0) {
",2,1,0,1,3,0,0,0,0,3,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6224,"            return m <= threshold ? m : -1;
",6,1,0,0,0,0,0,0,0,8,31,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6225,"        } else if (m == 0) {
",2,1,0,1,4,0,0,0,0,3,20,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6226,"            return n <= threshold ? n : -1;
",6,1,0,0,0,0,0,0,0,8,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6229,"        if (n > m) {
",4,1,0,1,3,0,0,0,0,5,12,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6231,"            CharSequence tmp = s;
",4,0,0,0,0,0,0,2,0,6,21,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6232,"            s = t;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6233,"            t = tmp;
",4,0,0,0,0,0,0,0,0,5,8,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6234,"            n = m;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6235,"            m = t.length();
",2,0,0,1,2,0,4,0,0,7,15,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6238,"        int p[] = new int[n + 1]; // 'previous' cost array, horizontally
",4,1,0,2,4,0,0,0,0,5,64,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6239,"        int d[] = new int[n + 1]; // cost array, horizontally
",4,1,0,2,4,0,0,0,0,5,53,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6243,"        int boundary = Math.min(n, threshold) + 1;
",2,1,0,1,2,0,8,0,0,11,42,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6244,"        for (int i = 0; i < boundary; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6245,"            p[i] = i;
",2,0,1,1,2,0,0,0,0,7,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6249,"        Arrays.fill(p, boundary, p.length, Integer.MAX_VALUE);
",8,0,0,1,2,0,8,0,0,16,54,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6250,"        Arrays.fill(d, Integer.MAX_VALUE);
",4,0,0,1,2,0,6,0,0,10,34,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6253,"        for (int j = 1; j <= m; j++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6254,"            char t_j = t.charAt(j - 1); // jth character of t
",4,1,0,1,2,0,4,0,0,9,49,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6255,"            d[0] = j;
",2,0,1,1,2,0,0,0,0,5,9,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6258,"            int min = Math.max(1, j - threshold);
",6,1,0,1,2,0,4,0,0,11,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6259,"            int max = Math.min(n, j + threshold);
",6,1,0,1,2,0,6,0,0,13,37,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6262,"            if (min > max) {
",4,1,0,1,3,0,0,0,0,5,16,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6263,"                return -1;
",0,0,0,0,0,0,0,0,0,1,10,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6267,"            if (min > 1) {
",2,1,0,1,3,0,0,0,0,3,14,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6268,"                d[min - 1] = Integer.MAX_VALUE;
",6,1,1,1,2,0,0,0,0,10,31,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6272,"            for (int i = min; i <= max; i++) {
",10,1,0,1,3,0,0,0,0,12,34,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6273,"                if (s.charAt(i - 1) == t_j) {
",4,2,0,2,5,0,4,0,0,10,29,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6275,"                    d[i] = p[i - 1];
",2,1,1,2,4,0,0,0,0,10,16,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6278,"                    d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);
",4,3,1,6,12,0,8,0,0,28,56,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6283,"            _d = p;
",4,0,0,0,0,0,0,0,0,5,7,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6284,"            p = d;
",4,0,0,0,0,0,0,0,0,5,6,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6285,"            d = _d;
",4,0,0,0,0,0,0,0,0,5,7,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6290,"        if (p[n] <= threshold) {
",2,1,1,2,5,0,0,0,0,7,24,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6291,"            return p[n];
",0,0,1,1,2,0,0,0,0,4,12,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6293,"            return -1;
",0,0,0,0,0,0,0,0,0,1,10,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6323,"        return startsWith(str, prefix, false);
",0,0,0,1,2,0,6,0,0,7,38,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6349,"        return startsWith(str, prefix, true);
",0,0,0,1,2,0,6,0,0,7,37,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6364,"        if (str == null || prefix == null) {
",4,3,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6365,"            return (str == null && prefix == null);
",4,3,0,1,2,0,0,0,0,7,39,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6367,"        if (prefix.length() > str.length()) {
",0,1,0,3,7,0,8,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6368,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6370,"        return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());
",0,0,0,2,4,0,14,0,0,14,87,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6393,"        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {
",0,1,0,3,7,0,10,0,0,11,59,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6394,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6396,"        for (CharSequence searchString : searchStrings) {
",4,0,0,1,3,0,0,2,0,6,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6397,"            if (StringUtils.startsWith(string, searchString)) {
",0,0,0,2,5,0,8,0,0,8,51,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6398,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6401,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6431,"        return endsWith(str, suffix, false);
",0,0,0,1,2,0,6,0,0,7,36,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6458,"        return endsWith(str, suffix, true);
",0,0,0,1,2,0,6,0,0,7,35,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6473,"        if (str == null || suffix == null) {
",4,3,0,1,3,0,0,0,0,7,36,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6474,"            return str == null && suffix == null;
",4,3,0,0,0,0,0,0,0,7,37,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6476,"        if (suffix.length() > str.length()) {
",0,1,0,3,7,0,8,0,0,9,37,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6477,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6479,"        int strOffset = str.length() - suffix.length();
",2,1,0,2,4,0,8,0,0,11,47,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6480,"        return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());
",0,0,0,2,4,0,16,0,0,16,95,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6525,"        if (str == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6526,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6528,"        return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll("" "");
",0,0,0,3,6,0,10,0,0,11,59,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6550,"        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {
",0,1,0,3,7,0,10,0,0,11,59,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6551,"            return false;
",0,0,0,0,0,0,0,0,0,1,13,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6553,"        for (CharSequence searchString : searchStrings) {
",4,0,0,1,3,0,0,2,0,6,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6554,"            if (StringUtils.endsWith(string, searchString)) {
",0,0,0,2,5,0,8,0,0,8,49,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6555,"                return true;
",0,0,0,0,0,0,0,0,0,1,12,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,6558,"        return false;
",0,0,0,0,0,0,0,0,0,1,13,4,0.00000,0
