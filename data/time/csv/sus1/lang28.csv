dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
",2,0,0,3,6,0,14,0,0,17,77,10,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,"                out.write(entityValue);
",0,0,0,1,2,0,6,0,0,6,23,7,0.50000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,"            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
",6,2,0,2,4,0,0,0,0,8,47,6,0.50000,1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,38,"            int start = index + 2;
",4,1,0,0,0,0,0,0,0,5,22,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,39,"            boolean isHex = false;
",2,0,0,0,0,0,0,0,0,3,22,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,41,"            char firstChar = input.charAt(start);
",2,0,0,1,2,0,6,0,0,8,37,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,42,"            if(firstChar == 'x' || firstChar == 'X') {
",4,3,0,1,3,0,0,0,0,9,42,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,47,"            int end = start;
",4,0,0,0,0,0,0,0,0,4,16,7,0.33333,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,48,"            while(input.charAt(end) != ';') {
",0,1,0,2,5,0,6,0,0,8,33,6,0.33333,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,49,"                end++;
",2,0,0,0,0,0,0,0,0,3,6,8,0.33333,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,54,"                if(isHex) {
",2,0,0,1,3,0,0,0,0,2,11,8,0.33333,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,37,"        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
",2,4,0,3,7,0,10,0,0,18,66,4,0.12500,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,93,"                for(int j=0; j<consumed; j++) {
",8,1,0,1,3,0,0,0,0,10,31,8,0.07143,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,94,"                    if(i < sz - 2) {
",4,2,0,1,3,0,0,0,0,6,16,10,0.07143,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,95,"                        i += Character.charCount( Character.codePointAt(input, i) );
",2,0,0,2,4,0,12,0,0,15,60,12,0.07143,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,98,"                        i++;
",2,0,0,0,0,0,0,0,0,3,4,12,0.07143,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,102,"                i--;
",2,0,0,0,0,0,0,0,0,3,4,8,0.07143,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,54,"        if (input == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,58,"            StringWriter writer = new StringWriter(input.length() * 2);  // TODO: Make the 2 part of the API???
",2,1,0,2,4,0,4,4,0,11,99,6,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,59,"            translate(input, writer);
",0,0,0,1,2,0,6,0,0,6,25,7,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,60,"            return writer.toString();
",0,0,0,1,2,0,4,0,0,4,25,7,0.06250,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,77,"        if (out == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.05556,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,80,"        if (input == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.05556,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,83,"        int sz = Character.codePointCount(input, 0, input.length());
",2,0,0,2,4,0,10,0,0,12,60,5,0.05556,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,84,"        for (int i = 0; i < sz; i++) {
",8,1,0,1,3,0,0,0,0,10,30,4,0.05556,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,87,"            int consumed = translate(input, i, out);
",2,0,0,1,2,0,8,0,0,10,40,7,0.05556,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,89,"            if(consumed == 0) { 
",2,1,0,1,3,0,0,0,0,3,19,6,0.05556,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,105,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.05556,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,32,"public abstract class CharSequenceTranslator {
",2,0,0,0,1,2,0,0,0,4,46,1,0.05263,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,29,"public class NumericEntityUnescaper extends CharSequenceTranslator {
",2,0,0,0,1,1,0,2,0,5,68,1,0.05263,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,28,40,"    public AggregateTranslator(CharSequenceTranslator... translators) {
",4,0,0,1,3,1,0,2,0,7,67,2,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,28,41,"        this.translators = ArrayUtils.clone(translators);
",2,0,0,1,2,0,6,0,0,9,49,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,28,42,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,28,51,"        for (CharSequenceTranslator translator : translators) {
",4,0,0,1,3,0,0,2,0,6,55,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,28,52,"            int consumed = translator.translate(input, index, out);
",2,0,0,1,2,0,10,0,0,12,55,7,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,28,53,"            if(consumed != 0) {
",2,1,0,1,3,0,0,0,0,3,19,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,28,54,"                return consumed;
",2,0,0,0,0,0,0,0,0,2,16,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,28,57,"        return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,55,"            return null;
",0,0,0,0,0,0,0,0,0,0,12,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,61,"        } catch (IOException ioe) {
",2,0,0,1,4,0,0,2,0,4,27,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,63,"            throw new RuntimeException(ioe);
",2,0,0,1,2,0,0,2,0,4,32,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,78,"            throw new IllegalArgumentException(""The Writer must not be null"");
",0,0,0,1,2,0,0,2,0,4,66,6,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,81,"            return;
",0,0,0,0,0,0,0,0,0,0,7,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,90,"                out.write( Character.toChars( Character.codePointAt(input, i) ) );
",0,0,0,3,6,0,16,0,0,16,66,9,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,115,"        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];
",6,1,0,2,4,0,0,4,0,11,87,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,116,"        newArray[0] = this;
",0,0,1,1,2,0,0,0,0,3,19,4,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,117,"        System.arraycopy(translators, 0, newArray, 1, translators.length);
",4,0,0,1,2,0,8,0,0,12,66,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,118,"        return new AggregateTranslator(newArray);
",2,0,0,1,2,0,0,2,0,4,41,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,129,"        return Integer.toHexString(codepoint).toUpperCase(Locale.ENGLISH);
",4,0,0,2,4,0,8,0,0,12,66,5,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,43,"                start++;
",2,0,0,0,0,0,0,0,0,3,8,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,44,"                isHex = true;
",2,0,0,0,0,0,0,0,0,4,13,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,55,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
",2,0,0,3,6,0,14,0,0,17,77,10,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,59,"            } catch(NumberFormatException nfe) {
",2,0,0,1,4,0,0,2,0,4,36,8,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,60,"                return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,66,"        return 0;
",0,0,0,0,0,0,0,0,0,0,9,3,0.00000,0
