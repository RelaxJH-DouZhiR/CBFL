dataset,project,pPath,pId,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,time,org/joda/time/LocalDate,6,1663,"        return withLocalMillis(getChronology().weekOfWeekyear().set(getLocalMillis(), weekOfWeekyear));",0,0,0,5,10,0,6,0,0,6,95,5,0.249919863,0
defect4j,time,org/joda/time/LocalDate,6,1042,"        return (newMillis == getLocalMillis() ? this : new LocalDate(newMillis, getChronology()));",2,1,0,4,8,0,2,1,0,6,90,6,0.066076692,0
defect4j,time,org/joda/time/DateTimeZone,17,1167,        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);,4,2,0,1,2,0,1,0,0,7,88,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1167,        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);,4,2,0,1,2,0,1,0,0,7,88,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1167,        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);,4,2,0,1,2,0,1,0,0,7,88,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1168,        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);,4,2,0,1,2,0,1,0,0,7,87,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1168,        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);,4,2,0,1,2,0,1,0,0,7,87,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1168,        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);,4,2,0,1,2,0,1,0,0,7,87,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1175,"        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);",3,0,0,1,2,0,2,0,0,6,86,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1175,"        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);",3,0,0,1,2,0,2,0,0,6,86,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1175,"        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);",3,0,0,1,2,0,2,0,0,6,86,5,1,1
defect4j,time,org/joda/time/LocalDate,6,1708,"        return withLocalMillis(getChronology().dayOfWeek().set(getLocalMillis(), dayOfWeek));",0,0,0,5,10,0,6,0,0,6,85,5,0.249919863,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,317,            return instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant));,3,1,0,2,4,0,2,0,0,6,79,5,0.092478764,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,705,        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);,2,1,0,2,4,0,4,0,0,7,78,5,1,0
defect4j,time,org/joda/time/LocalDate,6,1965,"            return iInstant.withLocalMillis(iField.add(iInstant.getLocalMillis(), value));",0,0,0,3,6,0,7,0,0,7,78,6,0.333262101,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,188,        if (locale == getLocale() || (locale != null && locale.equals(getLocale()))) {,2,4,0,5,11,0,4,0,0,12,78,4,0.060460235,0
defect4j,time,org/joda/time/chrono/GJChronology,6,596,"        return convertByWeekyear(instant, iGregorianChronology, iJulianChronology);",0,0,0,1,2,0,4,0,0,4,75,5,0.199914521,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1710,"        private static Map<Locale, Map<DateTimeFieldType, Object[]>> cParseCache =",1,0,0,1,2,2,0,5,0,8,74,3,0.068168052,0
defect4j,time,org/joda/time/LocalDate,6,1205,"        long instant = getChronology().years().add(getLocalMillis(), years);",1,0,0,4,8,0,5,0,0,6,68,5,0.083235388,0
defect4j,time,org/joda/time/MutableDateTime,3,639,"            setMillis(type.getField(getChronology()).add(getMillis(), amount));",0,0,0,5,10,0,7,0,0,7,67,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,639,"            setMillis(type.getField(getChronology()).add(getMillis(), amount));",0,0,0,5,10,0,7,0,0,7,67,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,639,"            setMillis(type.getField(getChronology()).add(getMillis(), amount));",0,0,0,5,10,0,7,0,0,7,67,5,0.058681421,1
defect4j,time,org/joda/time/LocalDate,6,558,        return fieldType.getField(getChronology()).get(getLocalMillis());,0,0,0,4,8,0,5,0,0,5,65,5,0.058722966,0
defect4j,time,org/joda/time/chrono/GJChronology,6,96,"        newInstant = to.weekyear().set(0, from.weekyear().get(instant));",1,0,0,4,8,0,7,0,0,9,64,4,0.199914521,0
defect4j,time,org/joda/time/DateTime,17,1101,"        long instant = getChronology().hours().add(getMillis(), hours);",1,0,0,4,8,0,5,0,0,6,63,5,0.099506849,0
defect4j,time,org/joda/time/LocalDate,6,1500,        return getChronology().weekOfWeekyear().get(getLocalMillis());,0,0,0,4,8,0,4,0,0,4,62,5,0.249919863,0
defect4j,time,org/joda/time/MutableDateTime,3,702,"            setMillis(getChronology().months().add(getMillis(), months));",0,0,0,5,10,0,6,0,0,6,61,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,702,"            setMillis(getChronology().months().add(getMillis(), months));",0,0,0,5,10,0,6,0,0,6,61,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,702,"            setMillis(getChronology().months().add(getMillis(), months));",0,0,0,5,10,0,6,0,0,6,61,5,0.058681421,1
defect4j,time,org/joda/time/DateTime,17,665,"        long newMillis = getZone().adjustOffset(getMillis(), false);",1,0,0,3,6,0,3,0,0,5,60,5,1,0
defect4j,time,org/joda/time/MutableDateTime,3,785,"            setMillis(getChronology().hours().add(getMillis(), hours));",0,0,0,5,10,0,6,0,0,6,59,5,1,1
defect4j,time,org/joda/time/MutableDateTime,3,723,"            setMillis(getChronology().weeks().add(getMillis(), weeks));",0,0,0,5,10,0,6,0,0,6,59,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,660,"            setMillis(getChronology().years().add(getMillis(), years));",0,0,0,5,10,0,6,0,0,6,59,5,0.058681421,1
defect4j,time,org/joda/time/DateTime,17,685,"        long newMillis = getZone().adjustOffset(getMillis(), true);",1,0,0,3,6,0,3,0,0,5,59,5,1,0
defect4j,time,org/joda/time/LocalDate,6,1041,        newMillis = iChronology.dayOfMonth().roundFloor(newMillis);,1,0,0,2,4,0,4,0,0,6,59,4,0.066076692,0
defect4j,time,org/joda/time/MutableDateTime,3,785,"            setMillis(getChronology().hours().add(getMillis(), hours));",0,0,0,5,10,0,6,0,0,6,59,5,1,1
defect4j,time,org/joda/time/MutableDateTime,3,723,"            setMillis(getChronology().weeks().add(getMillis(), weeks));",0,0,0,5,10,0,6,0,0,6,59,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,660,"            setMillis(getChronology().years().add(getMillis(), years));",0,0,0,5,10,0,6,0,0,6,59,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,785,"            setMillis(getChronology().hours().add(getMillis(), hours));",0,0,0,5,10,0,6,0,0,6,59,5,1,1
defect4j,time,org/joda/time/MutableDateTime,3,723,"            setMillis(getChronology().weeks().add(getMillis(), weeks));",0,0,0,5,10,0,6,0,0,6,59,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,660,"            setMillis(getChronology().years().add(getMillis(), years));",0,0,0,5,10,0,6,0,0,6,59,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,764,"            setMillis(getChronology().days().add(getMillis(), days));",0,0,0,5,10,0,6,0,0,6,57,5,0.058681421,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,712,        if (iOffsetParsed && bucket.getOffsetInteger() != null) {,1,2,0,2,5,0,2,0,0,5,57,4,1,0
defect4j,time,org/joda/time/LocalDate,6,1531,        return getChronology().dayOfWeek().get(getLocalMillis());,0,0,0,4,8,0,4,0,0,4,57,5,0.249919863,0
defect4j,time,org/joda/time/MutableDateTime,3,764,"            setMillis(getChronology().days().add(getMillis(), days));",0,0,0,5,10,0,6,0,0,6,57,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,764,"            setMillis(getChronology().days().add(getMillis(), days));",0,0,0,5,10,0,6,0,0,6,57,5,0.058681421,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,708,        DateTimeParserBucket bucket = new DateTimeParserBucket(,1,0,0,0,1,0,0,2,0,3,55,4,1,1
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,183,"            return ImpreciseDateTimeField.this.add(instant, value);",1,0,0,1,2,0,3,0,0,4,55,6,0.14607657,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,191,"        return new DateTimeFormatter(iPrinter, iParser, locale,",3,0,0,0,1,0,0,1,0,4,55,5,0.060460235,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,708,        DateTimeParserBucket bucket = new DateTimeParserBucket(,1,0,0,0,1,0,0,2,0,3,55,4,1,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,708,        DateTimeParserBucket bucket = new DateTimeParserBucket(,1,0,0,0,1,0,0,2,0,3,55,4,1,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,710,"        int newPos = parser.parseInto(bucket, text, position);",1,0,0,1,2,0,5,0,0,6,54,5,1,0
defect4j,time,org/joda/time/LocalDate,6,1763,"        return new Property(this, getChronology().weekyear());",0,0,0,3,6,0,2,1,0,3,54,5,0.249919863,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,938,        return appendShortText(DateTimeFieldType.dayOfWeek());,0,0,0,2,4,0,3,0,0,3,54,5,0.118080657,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,711,"        instant.setMillis(bucket.computeMillis(false, text));",0,0,0,2,4,0,5,0,0,6,53,5,1,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,354,            if ((instant ^ diff) < 0 && (instant ^ offset) < 0) {,4,5,0,3,7,0,0,0,0,9,53,5,0.16246316,0
defect4j,time,org/joda/time/chrono/GJChronology,6,335,        long instant = iGregorianChronology.getDateTimeMillis,1,0,0,0,0,0,2,0,0,3,53,5,0.153755743,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,344,            if ((instant ^ sum) < 0 && (instant ^ offset) >= 0) {,4,5,0,3,7,0,0,0,0,9,53,5,0.079792074,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,351,            int offset = this.iZone.getOffsetFromLocal(instant);,2,0,0,1,2,0,2,0,0,4,52,6,0.16246316,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,357,"                saveField(DateTimeFieldType.year(), iDefaultYear);",0,0,0,2,4,0,4,0,0,4,50,9,0.726863193,0
defect4j,time,org/joda/time/MutableDateTime,16,1224,        return ISODateTimeFormat.dateTime().print(this);,0,0,0,2,4,0,3,0,0,3,48,5,0.101216489,0
defect4j,time,org/joda/time/MutableDateTime,3,1229,        return ISODateTimeFormat.dateTime().print(this);,0,0,0,2,4,0,3,0,0,3,48,5,0.090562815,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,514,"        return append0(new TextField(fieldType, true));",1,0,0,2,4,0,1,1,0,4,47,5,0.09275735,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,316,"            instant = iField.add(instant + offset, value);",3,1,0,1,2,0,3,0,0,8,46,5,0.092478764,0
defect4j,time,org/joda/time/chrono/GJChronology,6,339,            instant = iJulianChronology.getDateTimeMillis,1,0,0,0,0,0,2,0,0,4,45,6,0.399935891,0
defect4j,time,org/joda/time/base/BaseDateTime,16,317,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.065265148,0
defect4j,time,org/joda/time/base/BaseDateTime,3,317,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.055280431,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,704,        Chronology chrono = instant.getChronology();,1,0,0,1,2,0,2,1,0,4,44,4,1,0
defect4j,time,org/joda/time/chrono/GJChronology,6,922,                return gregorianToJulianByWeekyear(instant);,0,0,0,1,2,0,2,0,0,2,44,8,0.199914521,0
defect4j,time,org/joda/time/LocalDate,6,1819,        return ISODateTimeFormat.date().print(this);,0,0,0,2,4,0,3,0,0,3,44,5,0.090811955,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,717,            chrono = chrono.withZone(bucket.getZone());,1,0,0,2,4,0,4,0,0,6,43,7,1,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,341,            int offset = this.iZone.getOffset(instant);,2,0,0,1,2,0,2,0,0,4,43,6,0.079792074,0
defect4j,time,org/joda/time/base/BaseDateTime,16,329,        iChronology = checkChronology(chronology);,1,0,0,1,2,0,2,0,0,4,42,4,0.499249187,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,703,        long instantMillis = instant.getMillis();,1,0,0,1,2,0,2,0,0,3,41,5,1,0
defect4j,time,org/joda/time/DateTimeZone,17,1174,        long local = convertUTCToLocal(instant);,1,0,0,1,2,0,2,0,0,3,40,5,1,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,698,        DateTimeParser parser = requireParser();,1,0,0,1,2,0,1,1,0,3,40,4,1,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,358,"                return computeMillis(resetFields, text);",0,0,0,1,2,0,3,0,0,3,40,9,0.726863193,0
defect4j,time,org/joda/time/DateTimeZone,17,1174,        long local = convertUTCToLocal(instant);,1,0,0,1,2,0,2,0,0,3,40,5,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1174,        long local = convertUTCToLocal(instant);,1,0,0,1,2,0,2,0,0,3,40,5,1,1
defect4j,time,org/joda/time/LocalDate,6,555,        if (isSupported(fieldType) == false) {,0,1,0,2,5,0,2,0,0,4,38,4,0.055454643,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,315,            int offset = getOffsetToAdd(instant);,1,0,0,1,2,0,2,0,0,3,37,6,0.092478764,0
defect4j,time,org/joda/time/DateTimeZone,17,1169,        if (instantBefore == instantAfter) {,2,1,0,1,3,0,0,0,0,3,36,4,1,1
defect4j,time,org/joda/time/MutableDateTime,16,351,"        super(year, monthOfYear, dayOfMonth,",3,0,0,0,1,0,0,0,0,3,36,4,0.420183269,0
defect4j,time,org/joda/time/MutableDateTime,3,351,"        super(year, monthOfYear, dayOfMonth,",3,0,0,0,1,0,0,0,0,3,36,4,0.153987338,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,972,            dtx = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.134295204,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,936,            ttx = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.121760112,0
defect4j,time,org/joda/time/DateTime,17,331,"        super(year, monthOfYear, dayOfMonth,",3,0,0,0,1,0,0,0,0,3,36,4,0.117163578,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1443,            hms = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.111343627,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,80,                throw new IllegalFieldValueException,0,0,0,0,0,0,0,1,0,1,36,10,0.062399829,0
defect4j,time,org/joda/time/DateTimeZone,17,1169,        if (instantBefore == instantAfter) {,2,1,0,1,3,0,0,0,0,3,36,4,1,1
defect4j,time,org/joda/time/DateTimeZone,17,1169,        if (instantBefore == instantAfter) {,2,1,0,1,3,0,0,0,0,3,36,4,1,1
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,898,            tx = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,35,6,0.116322094,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,202,            return iNextInfo.getOffset(millis);,0,0,0,1,2,0,3,0,0,3,35,6,0.08525711,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,706,        chrono = selectChronology(chrono);,1,0,0,1,2,0,2,0,0,4,34,4,1,0
defect4j,time,org/joda/time/chrono/GJChronology,6,330,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.153755743,0
defect4j,time,org/joda/time/MutableDateTime,16,564,        super.setChronology(chronology);,2,0,0,1,2,0,0,0,0,2,32,5,0.499249187,0
defect4j,time,org/joda/time/chrono/GJChronology,6,341,            if (instant >= iCutoverMillis) {,2,1,0,1,3,0,0,0,0,3,32,6,0.399935891,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,94,            return instant; // the easy case,1,0,0,0,0,0,0,0,0,1,32,6,0.058681421,0
defect4j,time,org/joda/time/chrono/GJChronology,6,337,        if (instant < iCutoverMillis) {,2,1,0,1,3,0,0,0,0,3,31,4,0.153755743,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1611,            long prev = transitions[i - 1];,2,1,1,1,2,0,0,0,0,4,31,6,0.088711046,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1784,            return estimatePrintedLength();,0,0,0,1,2,0,1,0,0,1,31,6,0.07553696,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,46,"                buf.append(""is not supported"");",0,0,0,1,2,0,2,0,0,3,31,9,0.066566941,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,719,        instant.setChronology(chrono);,0,0,0,1,2,0,3,0,0,3,30,5,1,0
defect4j,time,org/joda/time/DateTime,17,686,        return withMillis(newMillis);,0,0,0,1,2,0,2,0,0,2,29,5,1,0
defect4j,time,org/joda/time/DateTime,17,666,        return withMillis(newMillis);,0,0,0,1,2,0,2,0,0,2,29,5,1,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,352,            long diff = instant - offset;,3,1,0,0,0,0,0,0,0,4,29,6,0.16246316,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1612,            if (prev > Long.MIN_VALUE) {,3,1,0,1,3,0,0,0,0,4,28,5,0.088711046,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,342,            long sum = instant + offset;,3,1,0,0,0,0,0,0,0,4,28,6,0.079792074,0
defect4j,time,org/joda/time/DateTime,17,1102,        return withMillis(instant);,0,0,0,1,2,0,2,0,0,2,27,5,0.099506849,0
defect4j,time,org/joda/time/chrono/GJChronology,6,974,            if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,5,0.142765558,0
defect4j,time,org/joda/time/MutableDateTime,16,474,        super.setMillis(instant);,2,0,0,1,2,0,0,0,0,2,25,5,0.065265148,0
defect4j,time,org/joda/time/MutableDateTime,3,473,        super.setMillis(instant);,2,0,0,1,2,0,0,0,0,2,25,5,0.055280431,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,421,                    SavedField t = array[j];,1,0,1,1,2,0,0,1,0,4,24,10,0.198798699,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,511,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.09275735,0
defect4j,time,org/joda/time/MutableDateTime,16,454,        switch (iRoundingMode) {,1,0,0,1,3,0,0,0,0,1,24,4,0.065265148,0
defect4j,time,org/joda/time/LocalDate,6,552,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.055454643,0
defect4j,time,org/joda/time/MutableDateTime,3,454,        switch (iRoundingMode) {,1,0,0,1,3,0,0,0,0,1,24,4,0.055280431,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1717,            iFieldType = fieldType;,2,0,0,0,0,0,0,0,0,3,23,5,0.068168052,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1722,            return iShort ? 6 : 20;,1,0,0,0,0,0,0,0,0,1,23,6,0.068168052,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,506,        } else if (week > 51) {,1,1,0,1,4,0,0,0,0,2,23,5,0.066076692,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,699,        if (instant == null) {,1,1,0,1,3,0,0,0,0,2,22,4,1,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,422,                    array[j] = array[j-1];,1,1,1,2,4,0,0,0,0,6,22,10,0.198798699,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,90,            if (value == iSkip) {,2,1,0,1,3,0,0,0,0,3,21,6,0.199914521,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,720,        if (iZone != null) {,1,1,0,1,3,0,0,0,0,2,20,4,1,0
defect4j,time,org/joda/time/LocalDate,6,1895,            iInstant = instant;,2,0,0,0,0,0,0,0,0,3,19,5,0.249919863,0
defect4j,time,org/joda/time/DateTimeZone,3,931,                    return offsetPrev;,1,0,0,0,0,0,0,0,0,1,18,11,0.332398171,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,971,        if (dtx == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.134295204,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,935,        if (ttx == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.121760112,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1442,        if (hms == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.111343627,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,897,        if (tx == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.116322094,0
defect4j,time,org/joda/time/DateTime,17,1098,        if (hours == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.099506849,0
defect4j,time,org/joda/time/LocalDate,6,1202,        if (years == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.083235388,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1718,            iShort = isShort;,2,0,0,0,0,0,0,0,0,3,17,5,0.068168052,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,314,        return iMessage;,1,0,0,0,0,0,0,0,0,1,16,4,0.333262101,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1613,                return prev - 1;,1,1,0,0,0,0,0,0,0,2,16,7,0.088711046,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2158,                buf.append('+');,0,0,0,1,2,0,2,0,0,3,16,8,0.05039395,0
defect4j,time,org/joda/time/LocalDate,6,1896,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.249919863,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,423,                    array[j-1] = t;,2,1,1,1,2,0,0,0,0,5,15,10,0.198798699,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,60,            return instant;,1,0,0,0,0,0,0,0,0,1,15,6,0.158821696,0
defect4j,time,org/joda/time/chrono/GJChronology,6,346,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.153755743,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,202,        return iLocale;,1,0,0,0,0,0,0,0,0,1,15,4,0.060460235,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,723,        return newPos;,1,0,0,0,0,0,0,0,0,1,14,4,1,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,357,            return offset;,1,0,0,0,0,0,0,0,0,1,14,5,0.16246316,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,347,            return offset;,1,0,0,0,0,0,0,0,0,1,14,5,0.079792074,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,152,        return iZone;,1,0,0,0,0,0,0,0,0,1,13,4,0.050524432,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,190,                    dayOfYear++;,1,0,0,0,0,0,0,0,0,2,12,10,0.069562806,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,977,        return dtx;,1,0,0,0,0,0,0,0,0,1,11,4,0.134295204,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,941,        return ttx;,1,0,0,0,0,0,0,0,0,1,11,4,0.121760112,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1449,        return hms;,1,0,0,0,0,0,0,0,0,1,11,4,0.111343627,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,903,        return tx;,1,0,0,0,0,0,0,0,0,1,10,4,0.116322094,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,94,            value++;,1,0,0,0,0,0,0,0,0,2,8,6,0.062399829,0