dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,chart,org/jfree/data/ComparableObjectItem,2,72,"    public ComparableObjectItem(Comparable x, Object y) {
",6,0,0,1,3,1,0,4,0,11,53,2,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,73,"        if (x == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,76,"        this.x = x;
",4,0,0,0,0,0,0,0,0,5,11,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,77,"        this.obj = y;
",4,0,0,0,0,0,0,0,0,5,13,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,78,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,95,"        return this.obj;
",2,0,0,0,0,1,0,0,0,2,16,5,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,98,"        super(key);
",2,0,0,1,2,0,0,0,0,2,11,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,67,"    private int maximumItemCount = Integer.MAX_VALUE;
",6,0,0,0,0,1,0,0,0,7,49,2,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,99,"        this.data = new java.util.ArrayList();
",8,0,0,1,2,0,0,0,0,9,38,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,100,"        this.autoSort = autoSort;
",4,0,0,0,0,0,0,0,0,5,25,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,101,"        this.allowDuplicateXValues = allowDuplicateXValues;
",4,0,0,0,0,0,0,0,0,5,51,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,102,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,131,"        return this.data.size();
",2,0,0,1,2,1,2,0,0,4,24,5,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,216,"        if (item == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,220,"        if (this.autoSort) {
",2,0,0,1,3,0,0,0,0,2,20,5,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,221,"            int index = Collections.binarySearch(this.data, item);
",4,0,0,1,2,0,6,0,0,10,54,7,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,222,"            if (index < 0) {
",2,1,0,1,3,0,0,0,0,3,16,6,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,223,"                this.data.add(-index - 1, item);
",4,1,0,1,2,0,4,0,0,10,32,9,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,244,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,256,"        if (getItemCount() > this.maximumItemCount) {
",2,1,0,2,5,0,2,0,0,5,45,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,259,"        if (notify) {
",2,0,0,1,3,0,0,0,0,2,13,4,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,260,"            fireSeriesChanged();
",0,0,0,1,2,0,2,0,0,2,20,7,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,262,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,1.33333,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,333,"        return (ComparableObjectItem) this.data.get(index);
",2,0,0,2,4,1,4,2,0,8,51,5,1.33333,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,97,"        XYInterval interval = (XYInterval) getObject();
",2,0,0,2,4,0,2,4,0,8,47,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,98,"        if (interval != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,99,"            return interval.getXLow();
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,112,"        XYInterval interval = (XYInterval) getObject();
",2,0,0,2,4,0,2,4,0,8,47,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,113,"        if (interval != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,114,"            return interval.getXHigh();
",0,0,0,1,2,1,4,0,0,4,27,7,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,127,"        XYInterval interval = (XYInterval) getObject();
",2,0,0,2,4,0,2,4,0,8,47,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,128,"        if (interval != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,129,"            return interval.getYLow();
",0,0,0,1,2,1,4,0,0,4,26,7,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,142,"        XYInterval interval = (XYInterval) getObject();
",2,0,0,2,4,0,2,4,0,8,47,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,143,"        if (interval != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,144,"            return interval.getYHigh();
",0,0,0,1,2,1,4,0,0,4,27,7,1.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,92,"        return this.xLow;
",2,0,0,0,0,1,0,0,0,2,17,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,101,"        return this.xHigh;
",2,0,0,0,0,1,0,0,0,2,18,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,119,"        return this.yLow;
",2,0,0,0,0,1,0,0,0,2,17,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,128,"        return this.yHigh;
",2,0,0,0,0,1,0,0,0,2,18,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,173,"        XYIntervalSeries s = (XYIntervalSeries) this.data.get(series);
",4,0,0,2,4,0,4,4,0,12,62,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,174,"        return s.getXLowValue(item);
",0,0,0,1,2,1,6,0,0,6,28,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,187,"        XYIntervalSeries s = (XYIntervalSeries) this.data.get(series);
",4,0,0,2,4,0,4,4,0,12,62,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,188,"        return s.getXHighValue(item);
",0,0,0,1,2,1,6,0,0,6,29,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,215,"        XYIntervalSeries s = (XYIntervalSeries) this.data.get(series);
",4,0,0,2,4,0,4,4,0,12,62,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,216,"        return s.getYLowValue(item);
",0,0,0,1,2,1,6,0,0,6,28,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,229,"        XYIntervalSeries s = (XYIntervalSeries) this.data.get(series);
",4,0,0,2,4,0,4,4,0,12,62,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,230,"        return s.getYHighValue(item);
",0,0,0,1,2,1,6,0,0,6,29,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,120,"        XYIntervalDataItem item = (XYIntervalDataItem) getDataItem(index);
",2,0,0,2,4,0,4,4,0,10,66,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,121,"        return item.getXLowValue();
",0,0,0,1,2,1,4,0,0,4,27,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,135,"        XYIntervalDataItem item = (XYIntervalDataItem) getDataItem(index);
",2,0,0,2,4,0,4,4,0,10,66,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,136,"        return item.getXHighValue();
",0,0,0,1,2,1,4,0,0,4,28,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,162,"        XYIntervalDataItem item = (XYIntervalDataItem) getDataItem(index);
",2,0,0,2,4,0,4,4,0,10,66,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,163,"        return item.getYLowValue();
",0,0,0,1,2,1,4,0,0,4,27,5,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,177,"        XYIntervalDataItem item = (XYIntervalDataItem) getDataItem(index);
",2,0,0,2,4,0,4,4,0,10,66,4,1.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,178,"        return item.getYHighValue();
",0,0,0,1,2,1,4,0,0,4,28,5,1.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,726,"        return iterateDomainBounds(dataset, true);
",0,0,0,1,2,1,4,0,0,5,42,5,0.33333,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,780,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.33333,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1213,"        return iterateRangeBounds(dataset, true);
",0,0,0,1,2,1,4,0,0,5,41,5,0.20000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1238,"            IntervalXYDataset ixyd = (IntervalXYDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,53,6,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1239,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1240,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1241,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1242,"                    double lvalue = ixyd.getStartYValue(series, item);
",2,0,0,1,2,0,8,0,0,10,50,11,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1243,"                    double uvalue = ixyd.getEndYValue(series, item);
",2,0,0,1,2,0,8,0,0,10,48,11,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1244,"                    if (!Double.isNaN(lvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,10,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1247,"                    if (!Double.isNaN(uvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,10,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1252,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1284,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.12500,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,751,"            IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,63,6,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,752,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,753,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,754,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,755,"                    lvalue = intervalXYData.getStartXValue(series, item);
",2,0,0,1,2,0,8,0,0,11,53,10,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,756,"                    uvalue = intervalXYData.getEndXValue(series, item);
",2,0,0,1,2,0,8,0,0,11,51,10,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,757,"                    if (!Double.isNaN(lvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,10,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,760,"                    if (!Double.isNaN(uvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,10,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,765,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.10000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,742,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.06250,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,745,"        double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.06250,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,746,"        double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.06250,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,747,"        int seriesCount = dataset.getSeriesCount();
",2,0,0,1,2,0,4,0,0,6,43,5,0.06250,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,750,"        if (includeInterval && dataset instanceof IntervalXYDataset) {
",4,1,0,1,3,0,0,2,0,7,62,4,0.06250,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,779,"        if (minimum > maximum) {
",4,1,0,1,3,0,0,0,0,5,24,4,0.06250,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1231,"        double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.05882,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1232,"        double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.05882,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1233,"        int seriesCount = dataset.getSeriesCount();
",2,0,0,1,2,0,4,0,0,6,43,5,0.05882,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1236,"        if (includeInterval && dataset instanceof IntervalXYDataset) {
",4,1,0,1,3,0,0,2,0,7,62,4,0.05882,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1283,"        if (minimum == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,4,0.05882,0
defect4j,chart,org/jfree/data/general/Series,2,315,"        if (this.notify) {
",2,0,0,1,3,0,0,0,0,2,18,5,0.04706,0
defect4j,chart,org/jfree/data/general/Series,2,316,"            notifyListeners(new SeriesChangeEvent(this));
",0,0,0,2,4,0,2,2,0,4,45,7,0.04706,0
defect4j,chart,org/jfree/data/general/Series,2,318,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04706,0
defect4j,chart,org/jfree/data/general/Series,2,328,"        Object[] listenerList = this.listeners.getListenerList();
",4,0,0,2,4,0,2,2,0,8,57,4,0.04706,0
defect4j,chart,org/jfree/data/general/Series,2,329,"        for (int i = listenerList.length - 2; i >= 0; i -= 2) {
",10,2,0,1,3,0,0,0,0,13,55,4,0.04706,0
defect4j,chart,org/jfree/data/general/Series,2,336,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04706,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,2,70,"        this(source, null);
",2,0,0,1,2,0,0,0,0,2,19,4,0.04706,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,2,71,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04706,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,2,82,"        super(source);
",2,0,0,1,2,0,0,0,0,2,14,4,0.04706,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,2,83,"        this.summary = summary;
",4,0,0,0,0,0,0,0,0,5,23,4,0.04706,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,2,84,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04706,0
defect4j,chart,org/jfree/data/general/Series,2,104,"        this(key, null);
",2,0,0,1,2,0,0,0,0,2,16,4,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,105,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,113,"    protected Series(Comparable key, String description) {
",6,0,0,1,3,1,0,4,0,11,54,2,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,114,"        if (key == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,117,"        this.key = key;
",4,0,0,0,0,0,0,0,0,5,15,4,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,118,"        this.description = description;
",4,0,0,0,0,0,0,0,0,5,31,4,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,119,"        this.listeners = new EventListenerList();
",2,0,0,1,2,0,0,2,0,5,41,4,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,120,"        this.propertyChangeSupport = new PropertyChangeSupport(this);
",2,0,0,1,2,0,0,2,0,5,61,4,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,121,"        this.notify = true;
",2,0,0,0,0,0,0,0,0,4,19,4,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,122,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,297,"        this.listeners.add(SeriesChangeListener.class, listener);
",2,0,0,1,2,0,4,2,0,8,57,5,0.04444,0
defect4j,chart,org/jfree/data/general/Series,2,298,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.04444,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,51,"public abstract class AbstractIntervalXYDataset extends AbstractXYDataset
",2,0,0,0,0,2,0,2,0,6,73,1,0.03738,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,55,"public abstract class AbstractXYDataset extends AbstractSeriesDataset
",2,0,0,0,0,2,0,2,0,6,69,1,0.02963,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,66,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.02899,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,67,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.02899,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,176,"        notifyListeners(new DatasetChangeEvent(this, this, info));
",2,0,0,2,4,0,2,2,0,6,58,5,0.01521,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,177,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01521,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,189,"        Object[] listeners = this.listenerList.getListenerList();
",4,0,0,2,4,0,2,2,0,8,57,4,0.01521,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,190,"        for (int i = listeners.length - 2; i >= 0; i -= 2) {
",10,2,0,1,3,0,0,0,0,13,52,4,0.01521,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,196,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01521,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,95,"    protected AbstractDataset() {
",2,0,0,1,3,1,0,0,0,3,29,2,0.01379,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,96,"        this.group = new DatasetGroup();
",2,0,0,1,2,0,0,2,0,5,32,4,0.01379,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,97,"        this.listenerList = new EventListenerList();
",2,0,0,1,2,0,0,2,0,5,44,4,0.01379,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,98,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01379,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,63,"        super();
",0,0,0,1,2,0,0,0,0,0,8,3,0.01379,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,64,"        this.id = ""NOID"";
",2,0,0,0,0,0,0,0,0,4,17,4,0.01379,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01379,0
defect4j,chart,org/jfree/chart/event/DatasetChangeInfo,2,49,"public class DatasetChangeInfo {
",2,0,0,0,1,1,0,0,0,3,32,1,0.01262,0
defect4j,chart,org/jfree/data/event/DatasetChangeEvent,2,87,"        super(source);
",2,0,0,1,2,0,0,0,0,2,14,4,0.01262,0
defect4j,chart,org/jfree/data/event/DatasetChangeEvent,2,88,"        if (info == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.01262,0
defect4j,chart,org/jfree/data/event/DatasetChangeEvent,2,91,"        this.dataset = dataset;
",4,0,0,0,0,0,0,0,0,5,23,4,0.01262,0
defect4j,chart,org/jfree/data/event/DatasetChangeEvent,2,92,"        this.info = info;
",4,0,0,0,0,0,0,0,0,5,17,4,0.01262,0
defect4j,chart,org/jfree/data/event/DatasetChangeEvent,2,93,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.01262,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,167,"    private DatasetUtilities() {
",2,0,0,1,3,1,0,0,0,3,28,2,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,181,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,182,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,184,"        List keys = dataset.getKeys();
",2,0,0,1,2,0,4,2,0,8,30,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,185,"        double totalValue = 0;
",2,0,0,0,0,0,0,0,0,2,22,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,186,"        Iterator iterator = keys.iterator();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,187,"        while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,188,"            Comparable current = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,50,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,189,"            if (current != null) {
",2,1,0,1,3,0,0,0,0,3,22,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,190,"                Number value = dataset.getValue(current);
",2,0,0,1,2,0,6,2,0,10,41,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,191,"                double v = 0.0;
",2,0,0,0,0,0,0,0,0,2,15,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,192,"                if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,193,"                    v = value.doubleValue();
",2,0,0,1,2,0,4,0,0,7,24,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,195,"                if (v > 0) {
",2,1,0,1,3,0,0,0,0,3,12,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,196,"                    totalValue = totalValue + v;
",6,1,0,0,0,0,0,0,0,8,28,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,199,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,200,"        return totalValue;
",2,0,0,0,0,1,0,0,0,2,18,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,214,"        int row = dataset.getRowIndex(rowKey);
",2,0,0,1,2,0,6,0,0,8,38,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,215,"        return createPieDatasetForRow(dataset, row);
",0,0,0,1,2,1,6,0,0,6,44,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,229,"        DefaultPieDataset result = new DefaultPieDataset();
",2,0,0,1,2,0,0,4,0,6,51,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,230,"        int columnCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,43,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,231,"        for (int current = 0; current < columnCount; current++) {
",8,1,0,1,3,0,0,0,0,10,57,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,232,"            Comparable columnKey = dataset.getColumnKey(current);
",2,0,0,1,2,0,6,2,0,10,53,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,233,"            result.setValue(columnKey, dataset.getValue(row, current));
",0,0,0,2,4,0,14,0,0,14,59,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,235,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,249,"        int column = dataset.getColumnIndex(columnKey);
",2,0,0,1,2,0,6,0,0,8,47,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,250,"        return createPieDatasetForColumn(dataset, column);
",0,0,0,1,2,1,6,0,0,6,50,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,264,"        DefaultPieDataset result = new DefaultPieDataset();
",2,0,0,1,2,0,0,4,0,6,51,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,265,"        int rowCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,37,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,266,"        for (int i = 0; i < rowCount; i++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,267,"            Comparable rowKey = dataset.getRowKey(i);
",2,0,0,1,2,0,6,2,0,10,41,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,268,"            result.setValue(rowKey, dataset.getValue(i, column));
",0,0,0,2,4,0,14,0,0,14,53,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,270,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,288,"        return DatasetUtilities.createConsolidatedPieDataset(source, key,
",0,0,0,0,1,1,8,0,0,8,65,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,310,"        DefaultPieDataset result = new DefaultPieDataset();
",2,0,0,1,2,0,0,4,0,6,51,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,311,"        double total = DatasetUtilities.calculatePieDatasetTotal(source);
",2,0,0,1,2,0,6,0,0,8,65,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,314,"        List keys = source.getKeys();
",2,0,0,1,2,0,4,2,0,8,29,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,315,"        ArrayList otherKeys = new ArrayList();
",2,0,0,1,2,0,0,4,0,6,38,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,316,"        Iterator iterator = keys.iterator();
",2,0,0,1,2,0,4,2,0,8,36,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,317,"        while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,318,"            Comparable currentKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,53,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,319,"            Number dataValue = source.getValue(currentKey);
",2,0,0,1,2,0,6,2,0,10,47,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,320,"            if (dataValue != null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,321,"                double value = dataValue.doubleValue();
",2,0,0,1,2,0,4,0,0,6,39,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,322,"                if (value / total < minimumPercent) {
",6,2,0,1,3,0,0,0,0,8,37,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,323,"                    otherKeys.add(currentKey);
",0,0,0,1,2,0,6,0,0,6,26,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,326,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,329,"        iterator = keys.iterator();
",2,0,0,1,2,0,4,0,0,7,27,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,330,"        double otherValue = 0;
",2,0,0,0,0,0,0,0,0,2,22,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,331,"        while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,332,"            Comparable currentKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,53,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,333,"            Number dataValue = source.getValue(currentKey);
",2,0,0,1,2,0,6,2,0,10,47,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,334,"            if (dataValue != null) {
",2,1,0,1,3,0,0,0,0,3,24,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,335,"                if (otherKeys.contains(currentKey)
",0,0,0,1,3,0,6,0,0,6,34,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,338,"                    otherValue += dataValue.doubleValue();
",2,0,0,1,2,0,4,0,0,7,38,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,342,"                    result.setValue(currentKey, dataValue);
",0,0,0,1,2,0,8,0,0,8,39,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,345,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,347,"        if (otherKeys.size() >= minItems) {
",2,1,0,2,5,0,4,0,0,7,35,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,348,"            result.setValue(key, otherValue);
",0,0,0,1,2,0,8,0,0,8,33,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,350,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,370,"        DefaultCategoryDataset result = new DefaultCategoryDataset();
",2,0,0,1,2,0,0,4,0,6,61,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,371,"        for (int r = 0; r < data.length; r++) {
",10,1,0,1,3,0,0,0,0,12,39,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,372,"            String rowKey = rowKeyPrefix + (r + 1);
",6,2,0,1,2,0,0,2,0,10,39,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,373,"            for (int c = 0; c < data[r].length; c++) {
",8,1,1,2,5,0,0,0,0,14,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,374,"                String columnKey = columnKeyPrefix + (c + 1);
",6,2,0,1,2,0,0,2,0,10,45,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,375,"                result.addValue(new Double(data[r][c]), rowKey, columnKey);
",0,0,1,4,8,0,8,2,0,16,59,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,378,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,398,"        DefaultCategoryDataset result = new DefaultCategoryDataset();
",2,0,0,1,2,0,0,4,0,6,61,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,399,"        for (int r = 0; r < data.length; r++) {
",10,1,0,1,3,0,0,0,0,12,39,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,400,"            String rowKey = rowKeyPrefix + (r + 1);
",6,2,0,1,2,0,0,2,0,10,39,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,401,"            for (int c = 0; c < data[r].length; c++) {
",8,1,1,2,5,0,0,0,0,14,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,402,"                String columnKey = columnKeyPrefix + (c + 1);
",6,2,0,1,2,0,0,2,0,10,45,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,403,"                result.addValue(data[r][c], rowKey, columnKey);
",0,0,1,3,6,0,8,0,0,14,47,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,406,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,427,"        if (rowKeys == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,428,"            throw new IllegalArgumentException(""Null 'rowKeys' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,430,"        if (columnKeys == null) {
",2,1,0,1,3,0,0,0,0,3,25,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,431,"            throw new IllegalArgumentException(""Null 'columnKeys' argument."");
",0,0,0,1,2,0,0,2,0,3,66,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,433,"        if (ArrayUtilities.hasDuplicateItems(rowKeys)) {
",0,0,0,2,5,0,6,0,0,6,48,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,434,"            throw new IllegalArgumentException(""Duplicate items in 'rowKeys'."");
",0,0,0,1,2,0,0,2,0,3,68,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,436,"        if (ArrayUtilities.hasDuplicateItems(columnKeys)) {
",0,0,0,2,5,0,6,0,0,6,51,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,437,"            throw new IllegalArgumentException(
",0,0,0,0,1,0,0,2,0,2,35,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,440,"        if (rowKeys.length != data.length) {
",8,1,0,1,3,0,0,0,0,9,36,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,441,"            throw new IllegalArgumentException(
",0,0,0,0,1,0,0,2,0,2,35,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,445,"        int columnCount = 0;
",2,0,0,0,0,0,0,0,0,2,20,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,446,"        for (int r = 0; r < data.length; r++) {
",10,1,0,1,3,0,0,0,0,12,39,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,447,"            columnCount = Math.max(columnCount, data[r].length);
",4,0,1,2,4,0,6,0,0,15,52,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,449,"        if (columnKeys.length != columnCount) {
",6,1,0,1,3,0,0,0,0,7,39,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,450,"            throw new IllegalArgumentException(
",0,0,0,0,1,0,0,2,0,2,35,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,456,"        DefaultCategoryDataset result = new DefaultCategoryDataset();
",2,0,0,1,2,0,0,4,0,6,61,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,457,"        for (int r = 0; r < data.length; r++) {
",10,1,0,1,3,0,0,0,0,12,39,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,458,"            Comparable rowKey = rowKeys[r];
",2,0,1,1,2,0,0,2,0,8,31,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,459,"            for (int c = 0; c < data[r].length; c++) {
",8,1,1,2,5,0,0,0,0,14,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,460,"                Comparable columnKey = columnKeys[c];
",2,0,1,1,2,0,0,2,0,8,37,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,461,"                result.addValue(new Double(data[r][c]), rowKey, columnKey);
",0,0,1,4,8,0,8,2,0,16,59,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,464,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,480,"        if (rowKey == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,481,"            throw new IllegalArgumentException(""Null 'rowKey' argument."");
",0,0,0,1,2,0,0,2,0,3,62,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,483,"        if (rowData == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,484,"            throw new IllegalArgumentException(""Null 'rowData' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,486,"        DefaultCategoryDataset result = new DefaultCategoryDataset();
",2,0,0,1,2,0,0,4,0,6,61,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,487,"        for (int i = 0; i < rowData.getItemCount(); i++) {
",6,1,0,2,5,0,4,0,0,12,50,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,488,"            result.addValue(rowData.getValue(i), rowKey, rowData.getKey(i));
",0,0,0,3,6,0,18,0,0,18,64,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,490,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,511,"        XYSeries series = sampleFunction2DToSeries(f, start, end, samples,
",2,0,0,0,1,0,10,2,0,14,66,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,513,"        XYSeriesCollection collection = new XYSeriesCollection(series);
",4,0,0,1,2,0,0,4,0,8,63,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,514,"        return collection;
",2,0,0,0,0,1,0,0,0,2,18,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,535,"        if (f == null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,536,"            throw new IllegalArgumentException(""Null 'f' argument."");
",0,0,0,1,2,0,0,2,0,3,57,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,538,"        if (seriesKey == null) {
",2,1,0,1,3,0,0,0,0,3,24,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,539,"            throw new IllegalArgumentException(""Null 'seriesKey' argument."");
",0,0,0,1,2,0,0,2,0,3,65,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,541,"        if (start >= end) {
",4,1,0,1,3,0,0,0,0,5,19,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,542,"            throw new IllegalArgumentException(""Requires 'start' < 'end'."");
",0,0,0,1,2,0,0,2,0,3,64,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,544,"        if (samples < 2) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,545,"            throw new IllegalArgumentException(""Requires 'samples' > 1"");
",0,0,0,1,2,0,0,2,0,3,61,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,548,"        XYSeries series = new XYSeries(seriesKey);
",4,0,0,1,2,0,0,4,0,8,42,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,549,"        double step = (end - start) / (samples - 1);
",8,3,0,2,4,0,0,0,0,11,44,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,550,"        for (int i = 0; i < samples; i++) {
",8,1,0,1,3,0,0,0,0,10,35,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,551,"            double x = start + (step * i);
",8,2,0,1,2,0,0,0,0,10,30,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,552,"            series.add(x, f.getValue(x));
",0,0,0,2,4,0,12,0,0,12,29,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,554,"        return series;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,567,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,568,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,571,"        int itemCount = dataset.getItemCount();
",2,0,0,1,2,0,4,0,0,6,39,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,572,"        if (itemCount == 0) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,573,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,576,"        for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,577,"            Number y = dataset.getValue(item);
",2,0,0,1,2,0,6,2,0,10,34,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,578,"            if (y != null) {
",2,1,0,1,3,0,0,0,0,3,16,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,579,"                double yy = y.doubleValue();
",2,0,0,1,2,0,4,0,0,6,28,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,580,"                if (yy > 0.0) {
",2,1,0,1,3,0,0,0,0,3,15,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,581,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,586,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,600,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,601,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,604,"        int rowCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,37,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,605,"        int columnCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,43,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,606,"        if (rowCount == 0 || columnCount == 0) {
",4,3,0,1,3,0,0,0,0,7,40,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,607,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,610,"        for (int r = 0; r < rowCount; r++) {
",8,1,0,1,3,0,0,0,0,10,36,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,611,"            for (int c = 0; c < columnCount; c++) {
",8,1,0,1,3,0,0,0,0,10,39,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,612,"                if (dataset.getValue(r, c) != null) {
",0,1,0,2,5,0,8,0,0,9,37,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,613,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,619,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,632,"        if (dataset != null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,633,"            for (int s = 0; s < dataset.getSeriesCount(); s++) {
",6,1,0,2,5,0,4,0,0,12,52,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,634,"                if (dataset.getItemCount(s) > 0) {
",0,1,0,2,5,0,6,0,0,7,34,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,635,"                    return false;
",0,0,0,0,0,1,0,0,0,1,13,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,639,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,650,"        return findDomainBounds(dataset, true);
",0,0,0,1,2,1,4,0,0,5,39,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,666,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,667,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,670,"        Range result = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,672,"        if (dataset instanceof DomainInfo) {
",2,0,0,1,3,0,0,2,0,4,36,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,673,"            DomainInfo info = (DomainInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,39,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,674,"            result = info.getDomainBounds(includeInterval);
",2,0,0,1,2,0,6,0,0,9,47,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,675,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,677,"            result = iterateDomainBounds(dataset, includeInterval);
",2,0,0,1,2,0,6,0,0,9,55,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,679,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,700,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,701,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,703,"        Range result = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,704,"        if (dataset instanceof XYDomainInfo) {
",2,0,0,1,3,0,0,2,0,4,38,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,705,"            XYDomainInfo info = (XYDomainInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,43,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,706,"            result = info.getDomainBounds(visibleSeriesKeys, includeInterval);
",2,0,0,1,2,0,8,0,0,11,66,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,707,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,709,"            result = iterateToFindDomainBounds(dataset, visibleSeriesKeys,
",2,0,0,0,1,0,6,0,0,9,62,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,712,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,743,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,758,"                        minimum = Math.min(minimum, lvalue);
",2,0,0,1,2,0,8,0,0,11,36,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,761,"                        maximum = Math.max(maximum, uvalue);
",2,0,0,1,2,0,8,0,0,11,36,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,767,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,768,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,769,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,770,"                    lvalue = dataset.getXValue(series, item);
",2,0,0,1,2,0,8,0,0,11,41,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,771,"                    uvalue = lvalue;
",4,0,0,0,0,0,0,0,0,5,16,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,772,"                    if (!Double.isNaN(lvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,773,"                        minimum = Math.min(minimum, lvalue);
",2,0,0,1,2,0,8,0,0,11,36,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,774,"                        maximum = Math.max(maximum, uvalue);
",2,0,0,1,2,0,8,0,0,11,36,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,783,"            return new Range(minimum, maximum);
",4,0,0,1,2,1,0,2,0,6,35,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,795,"        return findRangeBounds(dataset, true);
",0,0,0,1,2,1,4,0,0,5,38,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,809,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,810,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,812,"        Range result = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,813,"        if (dataset instanceof RangeInfo) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,814,"            RangeInfo info = (RangeInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,37,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,815,"            result = info.getRangeBounds(includeInterval);
",2,0,0,1,2,0,6,0,0,9,46,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,816,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,818,"            result = iterateRangeBounds(dataset, includeInterval);
",2,0,0,1,2,0,6,0,0,9,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,820,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,839,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,840,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,842,"        Range result = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,843,"        if (dataset instanceof CategoryRangeInfo) {
",2,0,0,1,3,0,0,2,0,4,43,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,844,"            CategoryRangeInfo info = (CategoryRangeInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,53,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,845,"            result = info.getRangeBounds(visibleSeriesKeys, includeInterval);
",2,0,0,1,2,0,8,0,0,11,65,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,846,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,848,"            result = iterateToFindRangeBounds(dataset, visibleSeriesKeys,
",2,0,0,0,1,0,6,0,0,9,61,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,851,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,863,"        return findRangeBounds(dataset, true);
",0,0,0,1,2,1,4,0,0,5,38,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,879,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,880,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,882,"        Range result = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,883,"        if (dataset instanceof RangeInfo) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,884,"            RangeInfo info = (RangeInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,37,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,885,"            result = info.getRangeBounds(includeInterval);
",2,0,0,1,2,0,6,0,0,9,46,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,886,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,888,"            result = iterateRangeBounds(dataset, includeInterval);
",2,0,0,1,2,0,6,0,0,9,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,890,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,911,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,912,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,914,"        Range result = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,915,"        if (dataset instanceof XYRangeInfo) {
",2,0,0,1,3,0,0,2,0,4,37,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,916,"            XYRangeInfo info = (XYRangeInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,41,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,917,"            result = info.getRangeBounds(visibleSeriesKeys, xRange,
",2,0,0,0,1,0,8,0,0,11,55,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,919,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,921,"            result = iterateToFindRangeBounds(dataset, visibleSeriesKeys,
",2,0,0,0,1,0,6,0,0,9,61,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,924,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,942,"        return iterateRangeBounds(dataset, includeInterval);
",0,0,0,1,2,1,6,0,0,6,52,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,956,"        return iterateRangeBounds(dataset, true);
",0,0,0,1,2,1,4,0,0,5,41,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,973,"        double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,974,"        double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,975,"        int rowCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,37,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,976,"        int columnCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,43,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,977,"        if (includeInterval && dataset instanceof IntervalCategoryDataset) {
",4,1,0,1,3,0,0,2,0,7,68,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,980,"            IntervalCategoryDataset icd = (IntervalCategoryDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,64,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,982,"            for (int row = 0; row < rowCount; row++) {
",8,1,0,1,3,0,0,0,0,10,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,983,"                for (int column = 0; column < columnCount; column++) {
",8,1,0,1,3,0,0,0,0,10,54,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,984,"                    value = icd.getValue(row, column);
",2,0,0,1,2,0,8,0,0,11,34,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,986,"                    if ((value != null)
",2,1,0,1,3,0,0,0,0,3,19,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,988,"                        minimum = Math.min(v, minimum);
",2,0,0,1,2,0,8,0,0,11,31,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,989,"                        maximum = Math.max(v, maximum);
",2,0,0,1,2,0,8,0,0,11,31,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,991,"                    lvalue = icd.getStartValue(row, column);
",2,0,0,1,2,0,8,0,0,11,40,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,992,"                    if (lvalue != null
",2,1,0,0,1,0,0,0,0,3,18,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,994,"                        minimum = Math.min(v, minimum);
",2,0,0,1,2,0,8,0,0,11,31,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,995,"                        maximum = Math.max(v, maximum);
",2,0,0,1,2,0,8,0,0,11,31,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,997,"                    uvalue = icd.getEndValue(row, column);
",2,0,0,1,2,0,8,0,0,11,38,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,998,"                    if (uvalue != null 
",2,1,0,0,1,0,0,0,0,3,18,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1000,"                        minimum = Math.min(v, minimum);
",2,0,0,1,2,0,8,0,0,11,31,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1001,"                        maximum = Math.max(v, maximum);
",2,0,0,1,2,0,8,0,0,11,31,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1005,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1008,"            for (int row = 0; row < rowCount; row++) {
",8,1,0,1,3,0,0,0,0,10,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1009,"                for (int column = 0; column < columnCount; column++) {
",8,1,0,1,3,0,0,0,0,10,54,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1010,"                    Number value = dataset.getValue(row, column);
",2,0,0,1,2,0,8,2,0,12,45,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1011,"                    if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1012,"                        double v = value.doubleValue();
",2,0,0,1,2,0,4,0,0,6,31,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1013,"                        if (!Double.isNaN(v)) {
",0,0,0,2,5,0,6,0,0,7,23,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1014,"                            minimum = Math.min(minimum, v);
",2,0,0,1,2,0,8,0,0,11,31,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1015,"                            maximum = Math.max(maximum, v);
",2,0,0,1,2,0,8,0,0,11,31,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1021,"        if (minimum == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1022,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1025,"            return new Range(minimum, maximum);
",4,0,0,1,2,1,0,2,0,6,35,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1045,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1046,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1048,"        if (visibleSeriesKeys == null) {
",2,1,0,1,3,0,0,0,0,3,32,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1049,"            throw new IllegalArgumentException(
",0,0,0,0,1,0,0,2,0,2,35,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1053,"        double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1054,"        double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1055,"        int columnCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,43,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1056,"        if (includeInterval
",2,0,0,0,1,0,0,0,0,2,19,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1059,"            BoxAndWhiskerCategoryDataset bx
",2,0,0,0,0,0,0,2,0,4,31,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1061,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1062,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1063,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1064,"                int series = dataset.getRowIndex(seriesKey);
",2,0,0,1,2,0,6,0,0,8,44,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1065,"                int itemCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,41,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1066,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1067,"                    Number lvalue = bx.getMinRegularValue(series, item);
",2,0,0,1,2,0,8,2,0,12,52,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1068,"                    if (lvalue == null) {
",2,1,0,1,3,0,0,0,0,3,21,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1069,"                        lvalue = bx.getValue(series, item);
",2,0,0,1,2,0,8,0,0,11,35,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1071,"                    Number uvalue = bx.getMaxRegularValue(series, item);
",2,0,0,1,2,0,8,2,0,12,52,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1072,"                    if (uvalue == null) {
",2,1,0,1,3,0,0,0,0,3,21,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1073,"                        uvalue = bx.getValue(series, item);
",2,0,0,1,2,0,8,0,0,11,35,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1075,"                    if (lvalue != null) {
",2,1,0,1,3,0,0,0,0,3,21,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1076,"                        minimum = Math.min(minimum, lvalue.doubleValue());
",2,0,0,2,4,0,10,0,0,13,50,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1078,"                    if (uvalue != null) {
",2,1,0,1,3,0,0,0,0,3,21,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1079,"                        maximum = Math.max(maximum, uvalue.doubleValue());
",2,0,0,2,4,0,10,0,0,13,50,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1082,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1083,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1084,"        else if (includeInterval
",2,0,0,0,1,0,0,0,0,2,24,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1088,"            IntervalCategoryDataset icd = (IntervalCategoryDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,64,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1090,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1091,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1092,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1093,"                int series = dataset.getRowIndex(seriesKey);
",2,0,0,1,2,0,6,0,0,8,44,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1094,"                for (int column = 0; column < columnCount; column++) {
",8,1,0,1,3,0,0,0,0,10,54,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1095,"                    lvalue = icd.getStartValue(series, column);
",2,0,0,1,2,0,8,0,0,11,43,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1096,"                    uvalue = icd.getEndValue(series, column);
",2,0,0,1,2,0,8,0,0,11,41,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1097,"                    if (lvalue != null && !Double.isNaN(lvalue.doubleValue())) {
",2,2,0,3,7,0,8,0,0,13,60,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1098,"                        minimum = Math.min(minimum, lvalue.doubleValue());
",2,0,0,2,4,0,10,0,0,13,50,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1100,"                    if (uvalue != null && !Double.isNaN(uvalue.doubleValue())) {
",2,2,0,3,7,0,8,0,0,13,60,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1101,"                        maximum = Math.max(maximum, uvalue.doubleValue());
",2,0,0,2,4,0,10,0,0,13,50,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1104,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1105,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1106,"        else if (includeInterval
",2,0,0,0,1,0,0,0,0,2,24,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1110,"            MultiValueCategoryDataset mvcd
",2,0,0,0,0,0,0,2,0,4,30,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1112,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1113,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1114,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1115,"                int series = dataset.getRowIndex(seriesKey);
",2,0,0,1,2,0,6,0,0,8,44,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1116,"                for (int column = 0; column < columnCount; column++) {
",8,1,0,1,3,0,0,0,0,10,54,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1117,"                    List values = mvcd.getValues(series, column);
",2,0,0,1,2,0,8,2,0,12,45,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1118,"                    Iterator valueIterator = values.iterator();
",2,0,0,1,2,0,4,2,0,8,43,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1119,"                    while (valueIterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,33,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1120,"                    	Object o = valueIterator.next();
",2,0,0,1,2,0,4,2,0,8,32,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1121,"						if (o instanceof Number){
",2,0,0,1,3,0,0,2,0,4,25,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1122,"							double v = ((Number) o).doubleValue();
",4,0,0,3,6,0,2,2,0,8,38,17,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1123,"							if (!Double.isNaN(v)){
",0,0,0,2,5,0,6,0,0,7,22,16,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1124,"	                            minimum = Math.min(minimum, v);
",2,0,0,1,2,0,8,0,0,11,31,18,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1125,"	                            maximum = Math.max(maximum, v);
",2,0,0,1,2,0,8,0,0,11,31,18,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1128,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1130,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1131,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1132,"        else if (includeInterval
",2,0,0,0,1,0,0,0,0,2,24,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1136,"            StatisticalCategoryDataset scd
",2,0,0,0,0,0,0,2,0,4,30,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1138,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1139,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1140,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1141,"                int series = dataset.getRowIndex(seriesKey);
",2,0,0,1,2,0,6,0,0,8,44,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1142,"                for (int column = 0; column < columnCount; column++) {
",8,1,0,1,3,0,0,0,0,10,54,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1143,"                    Number meanN = scd.getMeanValue(series, column);
",2,0,0,1,2,0,8,2,0,12,48,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1144,"                    if (meanN != null) {
",2,1,0,1,3,0,0,0,0,3,20,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1145,"                        double std = 0.0;
",2,0,0,0,0,0,0,0,0,2,17,16,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1146,"                        Number stdN = scd.getStdDevValue(series, column);
",2,0,0,1,2,0,8,2,0,12,49,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1147,"                        if (stdN != null) {
",2,1,0,1,3,0,0,0,0,3,19,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1148,"                            std = stdN.doubleValue();
",2,0,0,1,2,0,4,0,0,7,25,17,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1149,"                            if (Double.isNaN(std)) {
",0,0,0,2,5,0,6,0,0,6,24,18,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1150,"                                std = 0.0;
",2,0,0,0,0,0,0,0,0,3,10,19,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1153,"                        double mean = meanN.doubleValue();
",2,0,0,1,2,0,4,0,0,6,34,16,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1154,"                        if (!Double.isNaN(mean)) {
",0,0,0,2,5,0,6,0,0,7,26,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1155,"                            minimum = Math.min(minimum, mean - std);
",6,1,0,1,2,0,6,0,0,14,40,17,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1156,"                            maximum = Math.max(maximum, mean + std);
",6,1,0,1,2,0,6,0,0,14,40,17,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1160,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1161,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1164,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1165,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1166,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1167,"                int series = dataset.getRowIndex(seriesKey);
",2,0,0,1,2,0,6,0,0,8,44,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1168,"                for (int column = 0; column < columnCount; column++) {
",8,1,0,1,3,0,0,0,0,10,54,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1169,"                    Number value = dataset.getValue(series, column);
",2,0,0,1,2,0,8,2,0,12,48,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1170,"                    if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1171,"                        double v = value.doubleValue();
",2,0,0,1,2,0,4,0,0,6,31,16,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1172,"                        if (!Double.isNaN(v)) {
",0,0,0,2,5,0,6,0,0,7,23,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1173,"                            minimum = Math.min(minimum, v);
",2,0,0,1,2,0,8,0,0,11,31,17,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1174,"                            maximum = Math.max(maximum, v);
",2,0,0,1,2,0,8,0,0,11,31,17,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1178,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1180,"        if (minimum == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1181,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1184,"            return new Range(minimum, maximum);
",4,0,0,1,2,1,0,2,0,6,35,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1199,"        return iterateRangeBounds(dataset);
",0,0,0,1,2,1,4,0,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1245,"                        minimum = Math.min(minimum, lvalue);
",2,0,0,1,2,0,8,0,0,11,36,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1248,"                        maximum = Math.max(maximum, uvalue);
",2,0,0,1,2,0,8,0,0,11,36,12,0.00000,1
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1253,"        else if (includeInterval && dataset instanceof OHLCDataset) {
",4,1,0,1,3,0,0,2,0,7,61,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1255,"            OHLCDataset ohlc = (OHLCDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,41,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1256,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1257,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1258,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1259,"                    double lvalue = ohlc.getLowValue(series, item);
",2,0,0,1,2,0,8,0,0,10,47,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1260,"                    double uvalue = ohlc.getHighValue(series, item);
",2,0,0,1,2,0,8,0,0,10,48,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1261,"                    if (!Double.isNaN(lvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1262,"                        minimum = Math.min(minimum, lvalue);
",2,0,0,1,2,0,8,0,0,11,36,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1264,"                    if (!Double.isNaN(uvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1265,"                        maximum = Math.max(maximum, uvalue);
",2,0,0,1,2,0,8,0,0,11,36,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1269,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1272,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1273,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1274,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1275,"                    double value = dataset.getYValue(series, item);
",2,0,0,1,2,0,8,0,0,10,47,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1276,"                    if (!Double.isNaN(value)) {
",0,0,0,2,5,0,6,0,0,7,27,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1277,"                        minimum = Math.min(minimum, value);
",2,0,0,1,2,0,8,0,0,11,35,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1278,"                        maximum = Math.max(maximum, value);
",2,0,0,1,2,0,8,0,0,11,35,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1287,"            return new Range(minimum, maximum);
",4,0,0,1,2,1,0,2,0,6,35,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1309,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1310,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1312,"        if (visibleSeriesKeys == null) {
",2,1,0,1,3,0,0,0,0,3,32,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1313,"            throw new IllegalArgumentException(
",0,0,0,0,1,0,0,2,0,2,35,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1317,"        double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1318,"        double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1320,"        if (includeInterval && dataset instanceof IntervalXYDataset) {
",4,1,0,1,3,0,0,2,0,7,62,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1322,"            IntervalXYDataset ixyd = (IntervalXYDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,53,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1323,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1324,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1325,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1326,"                int series = dataset.indexOf(seriesKey);
",2,0,0,1,2,0,6,0,0,8,40,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1327,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1328,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1329,"                    double lvalue = ixyd.getStartXValue(series, item);
",2,0,0,1,2,0,8,0,0,10,50,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1330,"                    double uvalue = ixyd.getEndXValue(series, item);
",2,0,0,1,2,0,8,0,0,10,48,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1331,"                    if (!Double.isNaN(lvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1332,"                        minimum = Math.min(minimum, lvalue);
",2,0,0,1,2,0,8,0,0,11,36,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1334,"                    if (!Double.isNaN(uvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1335,"                        maximum = Math.max(maximum, uvalue);
",2,0,0,1,2,0,8,0,0,11,36,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1338,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1339,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1342,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1343,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1344,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1345,"                int series = dataset.indexOf(seriesKey);
",2,0,0,1,2,0,6,0,0,8,40,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1346,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1347,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1348,"                    double x = dataset.getXValue(series, item);
",2,0,0,1,2,0,8,0,0,10,43,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1349,"                    if (!Double.isNaN(x)) {
",0,0,0,2,5,0,6,0,0,7,23,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1350,"                        minimum = Math.min(minimum, x);
",2,0,0,1,2,0,8,0,0,11,31,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1351,"                        maximum = Math.max(maximum, x);
",2,0,0,1,2,0,8,0,0,11,31,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1354,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1357,"        if (minimum == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1358,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1361,"            return new Range(minimum, maximum);
",4,0,0,1,2,1,0,2,0,6,35,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1385,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1386,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1388,"        if (visibleSeriesKeys == null) {
",2,1,0,1,3,0,0,0,0,3,32,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1389,"            throw new IllegalArgumentException(
",0,0,0,0,1,0,0,2,0,2,35,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1392,"        if (xRange == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1393,"            throw new IllegalArgumentException(""Null 'xRange' argument"");
",0,0,0,1,2,0,0,2,0,3,61,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1396,"        double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1397,"        double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1400,"        if (includeInterval && dataset instanceof OHLCDataset) {
",4,1,0,1,3,0,0,2,0,7,56,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1402,"            OHLCDataset ohlc = (OHLCDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,41,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1403,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1404,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1405,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1406,"                int series = dataset.indexOf(seriesKey);
",2,0,0,1,2,0,6,0,0,8,40,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1407,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1408,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1409,"                    double x = ohlc.getXValue(series, item);
",2,0,0,1,2,0,8,0,0,10,40,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1410,"                    if (xRange.contains(x)) {
",0,0,0,2,5,0,6,0,0,6,25,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1411,"                        double lvalue = ohlc.getLowValue(series, item);
",2,0,0,1,2,0,8,0,0,10,47,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1412,"                        double uvalue = ohlc.getHighValue(series, item);
",2,0,0,1,2,0,8,0,0,10,48,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1413,"                        if (!Double.isNaN(lvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1414,"                            minimum = Math.min(minimum, lvalue);
",2,0,0,1,2,0,8,0,0,11,36,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1416,"                        if (!Double.isNaN(uvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1417,"                            maximum = Math.max(maximum, uvalue);
",2,0,0,1,2,0,8,0,0,11,36,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1421,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1422,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1423,"        else if (includeInterval && dataset instanceof BoxAndWhiskerXYDataset) {
",4,1,0,1,3,0,0,2,0,7,72,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1425,"            BoxAndWhiskerXYDataset bx = (BoxAndWhiskerXYDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,61,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1426,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1427,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1428,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1429,"                int series = dataset.indexOf(seriesKey);
",2,0,0,1,2,0,6,0,0,8,40,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1430,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1431,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1432,"                    double x = bx.getXValue(series, item);
",2,0,0,1,2,0,8,0,0,10,38,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1433,"                    if (xRange.contains(x)) {
",0,0,0,2,5,0,6,0,0,6,25,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1434,"                        Number lvalue = bx.getMinRegularValue(series, item);
",2,0,0,1,2,0,8,2,0,12,52,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1435,"                        Number uvalue = bx.getMaxRegularValue(series, item);
",2,0,0,1,2,0,8,2,0,12,52,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1436,"                        if (lvalue != null) {
",2,1,0,1,3,0,0,0,0,3,21,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1437,"                            minimum = Math.min(minimum, lvalue.doubleValue());
",2,0,0,2,4,0,10,0,0,13,50,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1439,"                        if (uvalue != null) {
",2,1,0,1,3,0,0,0,0,3,21,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1440,"                            maximum = Math.max(maximum, uvalue.doubleValue());
",2,0,0,2,4,0,10,0,0,13,50,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1444,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1445,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1446,"        else if (includeInterval && dataset instanceof IntervalXYDataset) {
",4,1,0,1,3,0,0,2,0,7,67,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1448,"            IntervalXYDataset ixyd = (IntervalXYDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,53,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1449,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1450,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1451,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1452,"                int series = dataset.indexOf(seriesKey);
",2,0,0,1,2,0,6,0,0,8,40,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1453,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1454,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1455,"                    double x = ixyd.getXValue(series, item);
",2,0,0,1,2,0,8,0,0,10,40,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1456,"                    if (xRange.contains(x)) {
",0,0,0,2,5,0,6,0,0,6,25,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1457,"                        double lvalue = ixyd.getStartYValue(series, item);
",2,0,0,1,2,0,8,0,0,10,50,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1458,"                        double uvalue = ixyd.getEndYValue(series, item);
",2,0,0,1,2,0,8,0,0,10,48,15,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1459,"                        if (!Double.isNaN(lvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1460,"                            minimum = Math.min(minimum, lvalue);
",2,0,0,1,2,0,8,0,0,11,36,16,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1462,"                        if (!Double.isNaN(uvalue)) {
",0,0,0,2,5,0,6,0,0,7,28,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1463,"                            maximum = Math.max(maximum, uvalue);
",2,0,0,1,2,0,8,0,0,11,36,16,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1467,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1468,"        }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1471,"            Iterator iterator = visibleSeriesKeys.iterator();
",2,0,0,1,2,0,4,2,0,8,49,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1472,"            while (iterator.hasNext()) {
",0,0,0,2,5,0,4,0,0,4,28,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1473,"                Comparable seriesKey = (Comparable) iterator.next();
",2,0,0,2,4,0,4,4,0,10,52,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1474,"                int series = dataset.indexOf(seriesKey);
",2,0,0,1,2,0,6,0,0,8,40,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1475,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1476,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1477,"                    double x = dataset.getXValue(series, item);
",2,0,0,1,2,0,8,0,0,10,43,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1478,"                    double y = dataset.getYValue(series, item);
",2,0,0,1,2,0,8,0,0,10,43,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1479,"                    if (xRange.contains(x)) {
",0,0,0,2,5,0,6,0,0,6,25,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1480,"                        if (!Double.isNaN(y)) {
",0,0,0,2,5,0,6,0,0,7,23,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1481,"                            minimum = Math.min(minimum, y);
",2,0,0,1,2,0,8,0,0,11,31,16,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1482,"                            maximum = Math.max(maximum, y);
",2,0,0,1,2,0,8,0,0,11,31,16,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1486,"            }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1488,"        if (minimum == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1489,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1492,"            return new Range(minimum, maximum);
",4,0,0,1,2,1,0,2,0,6,35,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1510,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1511,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1513,"        Number result = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1515,"        if (dataset instanceof DomainInfo) {
",2,0,0,1,3,0,0,2,0,4,36,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1516,"            DomainInfo info = (DomainInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,39,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1517,"            return new Double(info.getDomainLowerBound(true));
",0,0,0,2,4,1,4,2,0,7,50,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1520,"            double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1521,"            int seriesCount = dataset.getSeriesCount();
",2,0,0,1,2,0,4,0,0,6,43,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1522,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1523,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1524,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1527,"                    if (dataset instanceof IntervalXYDataset) {
",2,0,0,1,3,0,0,2,0,4,43,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1528,"                        IntervalXYDataset intervalXYData
",2,0,0,0,0,0,0,2,0,4,32,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1530,"                        value = intervalXYData.getStartXValue(series, item);
",2,0,0,1,2,0,8,0,0,11,52,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1531,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1533,"                        value = dataset.getXValue(series, item);
",2,0,0,1,2,0,8,0,0,11,40,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1535,"                    if (!Double.isNaN(value)) {
",0,0,0,2,5,0,6,0,0,7,27,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1536,"                        minimum = Math.min(minimum, value);
",2,0,0,1,2,0,8,0,0,11,35,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1541,"            if (minimum == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1542,"                result = null;
",2,0,0,0,0,0,0,0,0,3,14,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1545,"                result = new Double(minimum);
",4,0,0,1,2,0,0,2,0,7,29,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1549,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1565,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1566,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1568,"        Number result = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1570,"        if (dataset instanceof DomainInfo) {
",2,0,0,1,3,0,0,2,0,4,36,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1571,"            DomainInfo info = (DomainInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,39,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1572,"            return new Double(info.getDomainUpperBound(true));
",0,0,0,2,4,1,4,2,0,7,50,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1577,"            double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1578,"            int seriesCount = dataset.getSeriesCount();
",2,0,0,1,2,0,4,0,0,6,43,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1579,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1580,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1581,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1584,"                    if (dataset instanceof IntervalXYDataset) {
",2,0,0,1,3,0,0,2,0,4,43,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1585,"                        IntervalXYDataset intervalXYData
",2,0,0,0,0,0,0,2,0,4,32,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1587,"                        value = intervalXYData.getEndXValue(series, item);
",2,0,0,1,2,0,8,0,0,11,50,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1588,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1590,"                        value = dataset.getXValue(series, item);
",2,0,0,1,2,0,8,0,0,11,40,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1592,"                    if (!Double.isNaN(value)) {
",0,0,0,2,5,0,6,0,0,7,27,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1593,"                        maximum = Math.max(maximum, value);
",2,0,0,1,2,0,8,0,0,11,35,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1597,"            if (maximum == Double.NEGATIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1598,"                result = null;
",2,0,0,0,0,0,0,0,0,3,14,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1601,"                result = new Double(maximum);
",4,0,0,1,2,0,0,2,0,7,29,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1606,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1623,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1624,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1627,"        if (dataset instanceof RangeInfo) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1628,"            RangeInfo info = (RangeInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,37,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1629,"            return new Double(info.getRangeLowerBound(true));
",0,0,0,2,4,1,4,2,0,7,49,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1634,"            double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1635,"            int seriesCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,40,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1636,"            int itemCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,41,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1637,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1638,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1640,"                    if (dataset instanceof IntervalCategoryDataset) {
",2,0,0,1,3,0,0,2,0,4,49,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1641,"                        IntervalCategoryDataset icd
",2,0,0,0,0,0,0,2,0,4,27,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1643,"                        value = icd.getStartValue(series, item);
",2,0,0,1,2,0,8,0,0,11,40,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1644,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1646,"                        value = dataset.getValue(series, item);
",2,0,0,1,2,0,8,0,0,11,39,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1648,"                    if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1649,"                        minimum = Math.min(minimum, value.doubleValue());
",2,0,0,2,4,0,10,0,0,13,49,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1653,"            if (minimum == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1654,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1657,"                return new Double(minimum);
",2,0,0,1,2,1,0,2,0,4,27,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1678,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1679,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1683,"        if (dataset instanceof RangeInfo) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1684,"            RangeInfo info = (RangeInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,37,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1685,"            return new Double(info.getRangeLowerBound(true));
",0,0,0,2,4,1,4,2,0,7,49,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1690,"            double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1691,"            int seriesCount = dataset.getSeriesCount();
",2,0,0,1,2,0,4,0,0,6,43,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1692,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1693,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1694,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1697,"                    if (dataset instanceof IntervalXYDataset) {
",2,0,0,1,3,0,0,2,0,4,43,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1698,"                        IntervalXYDataset intervalXYData
",2,0,0,0,0,0,0,2,0,4,32,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1700,"                        value = intervalXYData.getStartYValue(series, item);
",2,0,0,1,2,0,8,0,0,11,52,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1701,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1702,"                    else if (dataset instanceof OHLCDataset) {
",2,0,0,1,3,0,0,2,0,4,42,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1703,"                        OHLCDataset highLowData = (OHLCDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,48,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1704,"                        value = highLowData.getLowValue(series, item);
",2,0,0,1,2,0,8,0,0,11,46,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1705,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1707,"                        value = dataset.getYValue(series, item);
",2,0,0,1,2,0,8,0,0,11,40,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1709,"                    if (!Double.isNaN(value)) {
",0,0,0,2,5,0,6,0,0,7,27,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1710,"                        minimum = Math.min(minimum, value);
",2,0,0,1,2,0,8,0,0,11,35,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1715,"            if (minimum == Double.POSITIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1716,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1719,"                return new Double(minimum);
",2,0,0,1,2,1,0,2,0,4,27,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1739,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1740,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1744,"        if (dataset instanceof RangeInfo) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1745,"            RangeInfo info = (RangeInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,37,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1746,"            return new Double(info.getRangeUpperBound(true));
",0,0,0,2,4,1,4,2,0,7,49,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1752,"            double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1753,"            int seriesCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,40,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1754,"            int itemCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,41,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1755,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1756,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1758,"                    if (dataset instanceof IntervalCategoryDataset) {
",2,0,0,1,3,0,0,2,0,4,49,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1759,"                        IntervalCategoryDataset icd
",2,0,0,0,0,0,0,2,0,4,27,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1761,"                        value = icd.getEndValue(series, item);
",2,0,0,1,2,0,8,0,0,11,38,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1762,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1764,"                        value = dataset.getValue(series, item);
",2,0,0,1,2,0,8,0,0,11,39,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1766,"                    if (value != null) {
",2,1,0,1,3,0,0,0,0,3,20,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1767,"                        maximum = Math.max(maximum, value.doubleValue());
",2,0,0,2,4,0,10,0,0,13,49,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1771,"            if (maximum == Double.NEGATIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1772,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1775,"                return new Double(maximum);
",2,0,0,1,2,1,0,2,0,4,27,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1795,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1796,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1800,"        if (dataset instanceof RangeInfo) {
",2,0,0,1,3,0,0,2,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1801,"            RangeInfo info = (RangeInfo) dataset;
",4,0,0,1,2,0,0,4,0,8,37,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1802,"            return new Double(info.getRangeUpperBound(true));
",0,0,0,2,4,1,4,2,0,7,49,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1808,"            double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1809,"            int seriesCount = dataset.getSeriesCount();
",2,0,0,1,2,0,4,0,0,6,43,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1810,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1811,"                int itemCount = dataset.getItemCount(series);
",2,0,0,1,2,0,6,0,0,8,45,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1812,"                for (int item = 0; item < itemCount; item++) {
",8,1,0,1,3,0,0,0,0,10,46,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1814,"                    if (dataset instanceof IntervalXYDataset) {
",2,0,0,1,3,0,0,2,0,4,43,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1815,"                        IntervalXYDataset intervalXYData
",2,0,0,0,0,0,0,2,0,4,32,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1817,"                        value = intervalXYData.getEndYValue(series, item);
",2,0,0,1,2,0,8,0,0,11,50,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1818,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1819,"                    else if (dataset instanceof OHLCDataset) {
",2,0,0,1,3,0,0,2,0,4,42,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1820,"                        OHLCDataset highLowData = (OHLCDataset) dataset;
",4,0,0,1,2,0,0,4,0,8,48,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1821,"                        value = highLowData.getHighValue(series, item);
",2,0,0,1,2,0,8,0,0,11,47,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1822,"                    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1824,"                        value = dataset.getYValue(series, item);
",2,0,0,1,2,0,8,0,0,11,40,13,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1826,"                    if (!Double.isNaN(value)) {
",0,0,0,2,5,0,6,0,0,7,27,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1827,"                        maximum = Math.max(maximum, value);
",2,0,0,1,2,0,8,0,0,11,35,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1831,"            if (maximum == Double.NEGATIVE_INFINITY) {
",6,1,0,1,3,0,0,0,0,7,42,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1832,"                return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1835,"                return new Double(maximum);
",2,0,0,1,2,1,0,2,0,4,27,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1851,"        return findStackedRangeBounds(dataset, 0.0);
",0,0,0,1,2,1,4,0,0,4,44,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1865,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1866,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1868,"        Range result = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1869,"        double minimum = Double.POSITIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1870,"        double maximum = Double.NEGATIVE_INFINITY;
",6,0,0,0,0,0,0,0,0,6,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1871,"        int categoryCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,45,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1872,"        for (int item = 0; item < categoryCount; item++) {
",8,1,0,1,3,0,0,0,0,10,50,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1873,"            double positive = base;
",4,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1874,"            double negative = base;
",4,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1875,"            int seriesCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,40,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1876,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1877,"                Number number = dataset.getValue(series, item);
",2,0,0,1,2,0,8,2,0,12,47,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1878,"                if (number != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1879,"                    double value = number.doubleValue();
",2,0,0,1,2,0,4,0,0,6,36,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1880,"                    if (value > 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1881,"                        positive = positive + value;
",6,1,0,0,0,0,0,0,0,8,28,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1883,"                    if (value < 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1884,"                        negative = negative + value;
",6,1,0,0,0,0,0,0,0,8,28,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1889,"            minimum = Math.min(minimum, negative);
",2,0,0,1,2,0,8,0,0,11,38,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1890,"            maximum = Math.max(maximum, positive);
",2,0,0,1,2,0,8,0,0,11,38,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1892,"        if (minimum <= maximum) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1893,"            result = new Range(minimum, maximum);
",6,0,0,1,2,0,0,2,0,9,37,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1895,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1911,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1912,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1914,"        boolean hasValidData = false;
",2,0,0,0,0,0,0,0,0,3,29,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1915,"        Range result = null;
",2,0,0,0,0,0,0,2,0,4,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1918,"        int[] groupIndex = new int[dataset.getRowCount()];
",2,0,0,3,6,0,4,0,0,6,50,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1919,"        for (int i = 0; i < dataset.getRowCount(); i++) {
",6,1,0,2,5,0,4,0,0,12,49,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1920,"            groupIndex[i] = map.getGroupIndex(map.getGroup(
",0,0,1,1,4,0,8,0,0,13,47,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1925,"        int groupCount = map.getGroupCount();
",2,0,0,1,2,0,4,0,0,6,37,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1926,"        double[] minimum = new double[groupCount];
",2,0,1,2,4,0,0,0,0,4,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1927,"        double[] maximum = new double[groupCount];
",2,0,1,2,4,0,0,0,0,4,42,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1929,"        int categoryCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,45,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1930,"        for (int item = 0; item < categoryCount; item++) {
",8,1,0,1,3,0,0,0,0,10,50,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1931,"            double[] positive = new double[groupCount];
",2,0,1,2,4,0,0,0,0,4,43,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1932,"            double[] negative = new double[groupCount];
",2,0,1,2,4,0,0,0,0,4,43,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1933,"            int seriesCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,40,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1934,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1935,"                Number number = dataset.getValue(series, item);
",2,0,0,1,2,0,8,2,0,12,47,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1936,"                if (number != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1937,"                    hasValidData = true;
",2,0,0,0,0,0,0,0,0,4,20,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1938,"                    double value = number.doubleValue();
",2,0,0,1,2,0,4,0,0,6,36,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1939,"                    if (value > 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1940,"                        positive[groupIndex[series]]
",0,0,1,2,4,0,0,0,0,6,28,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1943,"                    if (value < 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1944,"                        negative[groupIndex[series]]
",0,0,1,2,4,0,0,0,0,6,28,14,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1950,"            for (int g = 0; g < groupCount; g++) {
",8,1,0,1,3,0,0,0,0,10,38,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1951,"                minimum[g] = Math.min(minimum[g], negative[g]);
",0,0,1,4,8,0,4,0,0,17,47,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1952,"                maximum[g] = Math.max(maximum[g], positive[g]);
",0,0,1,4,8,0,4,0,0,17,47,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1955,"        if (hasValidData) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1956,"            for (int j = 0; j < groupCount; j++) {
",8,1,0,1,3,0,0,0,0,10,38,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1957,"                result = Range.combine(result, new Range(minimum[j],
",2,0,1,1,4,0,6,2,0,15,52,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1961,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1975,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1976,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1978,"        Number result = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1979,"        boolean hasValidData = false;
",2,0,0,0,0,0,0,0,0,3,29,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1980,"        double minimum = 0.0;
",2,0,0,0,0,0,0,0,0,2,21,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1981,"        int categoryCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,45,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1982,"        for (int item = 0; item < categoryCount; item++) {
",8,1,0,1,3,0,0,0,0,10,50,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1983,"            double total = 0.0;
",2,0,0,0,0,0,0,0,0,2,19,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1984,"            int seriesCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,40,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1985,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1986,"                Number number = dataset.getValue(series, item);
",2,0,0,1,2,0,8,2,0,12,47,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1987,"                if (number != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1988,"                    hasValidData = true;
",2,0,0,0,0,0,0,0,0,4,20,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1989,"                    double value = number.doubleValue();
",2,0,0,1,2,0,4,0,0,6,36,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1990,"                    if (value < 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1991,"                        total = total + value;
",6,1,0,0,0,0,0,0,0,8,22,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1996,"            minimum = Math.min(minimum, total);
",2,0,0,1,2,0,8,0,0,11,35,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1998,"        if (hasValidData) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,1999,"            result = new Double(minimum);
",4,0,0,1,2,0,0,2,0,7,29,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2001,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2015,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2016,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2018,"        Number result = null;
",2,0,0,0,0,0,0,2,0,4,21,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2019,"        boolean hasValidData = false;
",2,0,0,0,0,0,0,0,0,3,29,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2020,"        double maximum = 0.0;
",2,0,0,0,0,0,0,0,0,2,21,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2021,"        int categoryCount = dataset.getColumnCount();
",2,0,0,1,2,0,4,0,0,6,45,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2022,"        for (int item = 0; item < categoryCount; item++) {
",8,1,0,1,3,0,0,0,0,10,50,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2023,"            double total = 0.0;
",2,0,0,0,0,0,0,0,0,2,19,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2024,"            int seriesCount = dataset.getRowCount();
",2,0,0,1,2,0,4,0,0,6,40,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2025,"            for (int series = 0; series < seriesCount; series++) {
",8,1,0,1,3,0,0,0,0,10,54,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2026,"                Number number = dataset.getValue(series, item);
",2,0,0,1,2,0,8,2,0,12,47,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2027,"                if (number != null) {
",2,1,0,1,3,0,0,0,0,3,21,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2028,"                    hasValidData = true;
",2,0,0,0,0,0,0,0,0,4,20,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2029,"                    double value = number.doubleValue();
",2,0,0,1,2,0,4,0,0,6,36,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2030,"                    if (value > 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2031,"                        total = total + value;
",6,1,0,0,0,0,0,0,0,8,22,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2035,"            maximum = Math.max(maximum, total);
",2,0,0,1,2,0,8,0,0,11,35,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2037,"        if (hasValidData) {
",2,0,0,1,3,0,0,0,0,2,19,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2038,"            result = new Double(maximum);
",4,0,0,1,2,0,0,2,0,7,29,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2040,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2052,"        return findStackedRangeBounds(dataset, 0.0);
",0,0,0,1,2,1,4,0,0,4,44,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2066,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2067,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2069,"        double minimum = base;
",4,0,0,0,0,0,0,0,0,4,22,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2070,"        double maximum = base;
",4,0,0,0,0,0,0,0,0,4,22,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2071,"        for (int itemNo = 0; itemNo < dataset.getItemCount(); itemNo++) {
",6,1,0,2,5,0,4,0,0,12,65,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2072,"            double positive = base;
",4,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2073,"            double negative = base;
",4,0,0,0,0,0,0,0,0,4,23,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2074,"            int seriesCount = dataset.getSeriesCount();
",2,0,0,1,2,0,4,0,0,6,43,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2075,"            for (int seriesNo = 0; seriesNo < seriesCount; seriesNo++) {
",8,1,0,1,3,0,0,0,0,10,60,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2076,"                double y = dataset.getYValue(seriesNo, itemNo);
",2,0,0,1,2,0,8,0,0,10,47,9,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2077,"                if (!Double.isNaN(y)) {
",0,0,0,2,5,0,6,0,0,7,23,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2078,"                    if (y > 0.0) {
",2,1,0,1,3,0,0,0,0,3,14,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2079,"                        positive += y;
",4,0,0,0,0,0,0,0,0,5,14,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2082,"                        negative += y;
",4,0,0,0,0,0,0,0,0,5,14,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2086,"            if (positive > maximum) {
",4,1,0,1,3,0,0,0,0,5,25,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2087,"                maximum = positive;
",4,0,0,0,0,0,0,0,0,5,19,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2089,"            if (negative < minimum) {
",4,1,0,1,3,0,0,0,0,5,25,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2090,"                minimum = negative;
",4,0,0,0,0,0,0,0,0,5,19,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2093,"        if (minimum <= maximum) {
",4,1,0,1,3,0,0,0,0,5,25,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2094,"            return new Range(minimum, maximum);
",4,0,0,1,2,1,0,2,0,6,35,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2097,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2113,"        double total = 0.0;
",2,0,0,0,0,0,0,0,0,2,19,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2114,"        int seriesCount = dataset.getSeriesCount();
",2,0,0,1,2,0,4,0,0,6,43,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2115,"        for (int s = 0; s < seriesCount; s++) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2116,"            double value = dataset.getYValue(s, item);
",2,0,0,1,2,0,8,0,0,10,42,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2117,"            if (!Double.isNaN(value)) {
",0,0,0,2,5,0,6,0,0,7,27,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2118,"                total = total + value;
",6,1,0,0,0,0,0,0,0,8,22,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2121,"        return total;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2135,"        if (dataset == null) {
",2,1,0,1,3,0,0,0,0,3,22,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2136,"            throw new IllegalArgumentException(""Null 'dataset' argument."");
",0,0,0,1,2,0,0,2,0,3,63,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2138,"        boolean allItemsNull = true; // we'll set this to false if there is at
",2,0,0,0,0,0,0,0,0,3,70,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2140,"        double minimum = 0.0;
",2,0,0,0,0,0,0,0,0,2,21,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2141,"        double maximum = 0.0;
",2,0,0,0,0,0,0,0,0,2,21,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2142,"        for (int row = 0; row < dataset.getRowCount(); row++) {
",6,1,0,2,5,0,4,0,0,12,55,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2143,"            double runningTotal = 0.0;
",2,0,0,0,0,0,0,0,0,2,26,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2144,"            for (int column = 0; column <= dataset.getColumnCount() - 1;
",4,2,0,1,3,0,4,0,0,10,60,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2146,"                Number n = dataset.getValue(row, column);
",2,0,0,1,2,0,8,2,0,12,41,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2147,"                if (n != null) {
",2,1,0,1,3,0,0,0,0,3,16,8,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2148,"                    allItemsNull = false;
",2,0,0,0,0,0,0,0,0,4,21,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2149,"                    double value = n.doubleValue();
",2,0,0,1,2,0,4,0,0,6,31,11,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2150,"                    if (!Double.isNaN(value)) {
",0,0,0,2,5,0,6,0,0,7,27,10,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2151,"                        runningTotal = runningTotal + value;
",6,1,0,0,0,0,0,0,0,8,36,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2152,"                        minimum = Math.min(minimum, runningTotal);
",2,0,0,1,2,0,8,0,0,11,42,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2153,"                        maximum = Math.max(maximum, runningTotal);
",2,0,0,1,2,0,8,0,0,11,42,12,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2145,"                 column++) {
",2,0,0,0,2,0,0,0,0,3,11,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2158,"        if (!allItemsNull) {
",2,0,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2159,"            return new Range(minimum, maximum);
",4,0,0,1,2,1,0,2,0,6,35,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetUtilities,2,2162,"            return null;
",0,0,0,0,0,1,0,0,0,0,12,3,0.00000,0
defect4j,chart,org/jfree/data/Range,2,86,"    public Range(double lower, double upper) {
",6,0,0,1,3,1,0,0,0,7,42,2,0.00000,0
defect4j,chart,org/jfree/data/Range,2,87,"        if (lower > upper) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,88,"            String msg = ""Range(double, double): require lower ("" + lower
",4,1,0,1,3,0,0,2,0,8,61,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,90,"            throw new IllegalArgumentException(msg);
",2,0,0,1,2,0,0,2,0,4,40,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,92,"        this.lower = lower;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,93,"        this.upper = upper;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,94,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/Range,2,102,"        return this.lower;
",2,0,0,0,0,1,0,0,0,2,18,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,111,"        return this.upper;
",2,0,0,0,0,1,0,0,0,2,18,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,120,"        return this.upper - this.lower;
",4,1,0,0,0,1,0,0,0,5,31,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,129,"        return this.lower / 2.0 + this.upper / 2.0;
",4,3,0,0,0,1,0,0,0,7,43,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,141,"        return (value >= this.lower && value <= this.upper);
",8,3,0,1,2,1,0,0,0,11,52,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,154,"        if (b0 <= this.lower) {
",4,1,0,1,3,0,0,0,0,5,23,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,155,"            return (b1 > this.lower);
",4,1,0,1,2,1,0,0,0,5,25,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,158,"            return (b0 < this.upper && b1 >= b0);
",8,3,0,1,2,1,0,0,0,11,37,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,173,"        return intersects(range.getLowerBound(), range.getUpperBound());
",0,0,0,3,6,1,10,0,0,10,64,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,185,"        double result = value;
",4,0,0,0,0,0,0,0,0,4,22,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,186,"        if (!contains(value)) {
",0,0,0,2,5,0,4,0,0,5,23,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,187,"            if (value > this.upper) {
",4,1,0,1,3,0,0,0,0,5,25,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,188,"                result = this.upper;
",4,0,0,0,0,0,0,0,0,5,20,8,0.00000,0
defect4j,chart,org/jfree/data/Range,2,190,"            else if (value < this.lower) {
",4,1,0,1,3,0,0,0,0,5,30,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,191,"                result = this.lower;
",4,0,0,0,0,0,0,0,0,5,20,9,0.00000,0
defect4j,chart,org/jfree/data/Range,2,194,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,214,"        if (range1 == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,215,"            return range2;
",2,0,0,0,0,1,0,0,0,2,14,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,218,"            if (range2 == null) {
",2,1,0,1,3,0,0,0,0,3,21,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,219,"                return range1;
",2,0,0,0,0,1,0,0,0,2,14,8,0.00000,0
defect4j,chart,org/jfree/data/Range,2,222,"                double l = Math.min(range1.getLowerBound(),
",2,0,0,1,3,0,8,0,0,10,43,9,0.00000,0
defect4j,chart,org/jfree/data/Range,2,224,"                double u = Math.max(range1.getUpperBound(),
",2,0,0,1,3,0,8,0,0,10,43,9,0.00000,0
defect4j,chart,org/jfree/data/Range,2,226,"                return new Range(l, u);
",4,0,0,1,2,1,0,2,0,6,23,9,0.00000,0
defect4j,chart,org/jfree/data/Range,2,243,"        if (range == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,244,"            return new Range(value, value);
",4,0,0,1,2,1,0,2,0,6,31,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,246,"        if (value < range.getLowerBound()) {
",2,1,0,2,5,0,4,0,0,7,36,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,247,"            return new Range(value, range.getUpperBound());
",2,0,0,2,4,1,4,2,0,8,47,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,249,"        else if (value > range.getUpperBound()) {
",2,1,0,2,5,0,4,0,0,7,41,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,250,"            return new Range(range.getLowerBound(), value);
",2,0,0,2,4,1,4,2,0,8,47,8,0.00000,0
defect4j,chart,org/jfree/data/Range,2,253,"            return range;
",2,0,0,0,0,1,0,0,0,2,13,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,270,"        if (range == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,271,"            throw new IllegalArgumentException(""Null 'range' argument."");
",0,0,0,1,2,0,0,2,0,3,61,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,273,"        double length = range.getLength();
",2,0,0,1,2,0,4,0,0,6,34,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,274,"        double lower = range.getLowerBound() - length * lowerMargin;
",6,2,0,1,2,0,4,0,0,12,60,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,275,"        double upper = range.getUpperBound() + length * upperMargin;
",6,2,0,1,2,0,4,0,0,12,60,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,276,"        if (lower > upper) {
",4,1,0,1,3,0,0,0,0,5,20,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,277,"            lower = lower / 2.0 + upper / 2.0;
",6,3,0,0,0,0,0,0,0,10,34,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,278,"            upper = lower;
",4,0,0,0,0,0,0,0,0,5,14,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,280,"        return new Range(lower, upper);
",4,0,0,1,2,1,0,2,0,6,31,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,292,"        return shift(base, delta, false);
",0,0,0,1,2,1,6,0,0,7,33,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,308,"        if (base == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,309,"            throw new IllegalArgumentException(""Null 'base' argument."");
",0,0,0,1,2,0,0,2,0,3,60,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,311,"        if (allowZeroCrossing) {
",2,0,0,1,3,0,0,0,0,2,24,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,312,"            return new Range(base.getLowerBound() + delta,
",2,1,0,1,3,1,4,2,0,9,46,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,316,"            return new Range(shiftWithNoZeroCrossing(base.getLowerBound(),
",0,0,0,1,4,1,6,2,0,8,62,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,332,"        if (value > 0.0) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,333,"            return Math.max(value + delta, 0.0);
",4,1,0,1,2,1,4,0,0,9,36,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,335,"        else if (value < 0.0) {
",2,1,0,1,3,0,0,0,0,3,23,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,336,"            return Math.min(value + delta, 0.0);
",4,1,0,1,2,1,4,0,0,9,36,8,0.00000,0
defect4j,chart,org/jfree/data/Range,2,339,"            return value + delta;
",4,1,0,0,0,1,0,0,0,5,21,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,354,"        if (base == null) {
",2,1,0,1,3,0,0,0,0,3,19,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,355,"            throw new IllegalArgumentException(""Null 'base' argument."");
",0,0,0,1,2,0,0,2,0,3,60,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,357,"        if (factor < 0) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,358,"            throw new IllegalArgumentException(""Negative 'factor' argument."");
",0,0,0,1,2,0,0,2,0,3,66,7,0.00000,0
defect4j,chart,org/jfree/data/Range,2,360,"        return new Range(base.getLowerBound() * factor,
",2,1,0,1,3,1,4,2,0,9,47,5,0.00000,0
defect4j,chart,org/jfree/data/Range,2,372,"        if (!(obj instanceof Range)) {
",2,0,0,2,5,0,0,2,0,5,30,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,373,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,375,"        Range range = (Range) obj;
",4,0,0,1,2,0,0,4,0,8,26,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,376,"        if (!(this.lower == range.lower)) {
",6,1,0,2,5,0,0,0,0,8,35,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,377,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,379,"        if (!(this.upper == range.upper)) {
",6,1,0,2,5,0,0,0,0,8,35,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,380,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/Range,2,382,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,393,"        temp = Double.doubleToLongBits(this.lower);
",4,0,0,1,2,0,4,0,0,9,43,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,394,"        result = (int) (temp ^ (temp >>> 32));
",6,2,0,3,6,0,0,0,0,9,38,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,395,"        temp = Double.doubleToLongBits(this.upper);
",4,0,0,1,2,0,4,0,0,9,43,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,396,"        result = 29 * result + (int) (temp ^ (temp >>> 32));
",8,4,0,3,6,0,0,0,0,13,52,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,397,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/Range,2,407,"        return (""Range["" + this.lower + "","" + this.upper + ""]"");
",4,1,0,2,4,1,0,0,0,8,56,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,115,"            throw new IllegalArgumentException(""Null 'key' argument."");
",0,0,0,1,2,0,0,2,0,3,59,7,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,132,"        return this.key;
",2,0,0,0,0,1,0,0,0,2,16,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,144,"        if (key == null) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,145,"            throw new IllegalArgumentException(""Null 'key' argument."");
",0,0,0,1,2,0,0,2,0,3,59,7,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,147,"        Comparable old = this.key;
",4,0,0,0,0,0,0,2,0,6,26,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,148,"        this.key = key;
",4,0,0,0,0,0,0,0,0,5,15,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,149,"        this.propertyChangeSupport.firePropertyChange(""Key"", old, key);
",2,0,0,1,2,0,6,0,0,9,63,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,150,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,160,"        return this.description;
",2,0,0,0,0,1,0,0,0,2,24,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,172,"        String old = this.description;
",4,0,0,0,0,0,0,2,0,6,30,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,173,"        this.description = description;
",4,0,0,0,0,0,0,0,0,5,31,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,174,"        this.propertyChangeSupport.firePropertyChange(""Description"", old,
",2,0,0,0,1,0,4,0,0,7,65,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,176,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,187,"        return this.notify;
",2,0,0,0,0,1,0,0,0,2,19,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,199,"        if (this.notify != notify) {
",4,1,0,1,3,0,0,0,0,5,28,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,200,"            this.notify = notify;
",4,0,0,0,0,0,0,0,0,5,21,6,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,201,"            fireSeriesChanged();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,203,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,214,"        return (getItemCount() == 0);
",0,1,0,2,4,1,2,0,0,3,29,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,243,"        Series clone = (Series) super.clone();
",4,0,0,2,4,0,0,4,0,8,38,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,244,"        clone.listeners = new EventListenerList();
",4,0,0,1,2,0,0,2,0,7,42,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,245,"        clone.propertyChangeSupport = new PropertyChangeSupport(clone);
",6,0,0,1,2,0,0,2,0,9,63,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,246,"        return clone;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,258,"        if (obj == this) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,259,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,261,"        if (!(obj instanceof Series)) {
",2,0,0,2,5,0,0,2,0,5,31,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,262,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,264,"        Series that = (Series) obj;
",4,0,0,1,2,0,0,4,0,8,27,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,265,"        if (!getKey().equals(that.getKey())) {
",0,0,0,4,9,0,8,0,0,9,38,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,266,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,268,"        if (!ObjectUtilities.equal(getDescription(), that.getDescription())) {
",0,0,0,4,9,0,10,0,0,11,70,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,269,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,271,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,281,"        result = this.key.hashCode();
",4,0,0,1,2,0,2,0,0,7,29,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,282,"        result = 29 * result + (this.description != null
",6,3,0,0,1,0,0,0,0,10,48,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,284,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,307,"        this.listeners.remove(SeriesChangeListener.class, listener);
",2,0,0,1,2,0,4,2,0,8,60,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,308,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,330,"            if (listenerList[i] == SeriesChangeListener.class) {
",0,1,1,2,5,0,0,2,0,7,52,6,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,331,"                ((SeriesChangeListener) listenerList[i + 1]).seriesChanged(
",2,1,1,3,7,0,2,2,0,9,59,9,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,344,"        this.propertyChangeSupport.addPropertyChangeListener(listener);
",2,0,0,1,2,0,4,0,0,6,63,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,345,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,353,"        this.propertyChangeSupport.removePropertyChangeListener(listener);
",2,0,0,1,2,0,4,0,0,6,66,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,354,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,365,"        this.propertyChangeSupport.firePropertyChange(property, oldValue,
",2,0,0,0,1,0,6,0,0,8,65,5,0.00000,0
defect4j,chart,org/jfree/data/general/Series,2,367,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/SeriesException,2,61,"        super(message);
",2,0,0,1,2,0,0,0,0,2,15,4,0.00000,0
defect4j,chart,org/jfree/data/general/SeriesException,2,62,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,98,"        int seriesCount = getSeriesCount();
",2,0,0,1,2,0,2,0,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,99,"        for (int s = 0; s < seriesCount; s++) {
",8,1,0,1,3,0,0,0,0,10,39,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,100,"           if (getSeriesKey(s).equals(seriesKey)) {
",0,0,0,3,7,0,8,0,0,8,40,7,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,101,"               return s;
",2,0,0,0,0,1,0,0,0,2,9,8,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,104,"        return -1;
",0,0,0,0,0,1,0,0,0,1,10,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,113,"        fireDatasetChanged(new DatasetChangeInfo());
",0,0,0,2,4,0,2,2,0,4,44,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractSeriesDataset,2,116,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,108,"        return this.group;
",2,0,0,0,0,1,0,0,0,2,18,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,119,"        if (group == null) {
",2,1,0,1,3,0,0,0,0,3,20,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,120,"            throw new IllegalArgumentException(""Null 'group' argument."");
",0,0,0,1,2,0,0,2,0,3,61,7,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,122,"        this.group = group;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,123,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,133,"        this.listenerList.add(DatasetChangeListener.class, listener);
",2,0,0,1,2,0,4,2,0,8,61,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,134,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,145,"        this.listenerList.remove(DatasetChangeListener.class, listener);
",2,0,0,1,2,0,4,2,0,8,64,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,146,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,161,"        List list = Arrays.asList(this.listenerList.getListenerList());
",4,0,0,2,4,0,6,2,0,12,63,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,162,"        return list.contains(listener);
",0,0,0,1,2,1,6,0,0,6,31,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,191,"            if (listeners[i] == DatasetChangeListener.class) {
",0,1,1,2,5,0,0,2,0,7,50,6,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,192,"                ((DatasetChangeListener) listeners[i + 1]).datasetChanged(
",2,1,1,3,7,0,2,2,0,9,58,9,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,209,"        AbstractDataset clone = (AbstractDataset) super.clone();
",4,0,0,2,4,0,0,4,0,8,56,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,210,"        clone.listenerList = new EventListenerList();
",4,0,0,1,2,0,0,2,0,7,45,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,211,"        return clone;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,222,"        stream.defaultWriteObject();
",0,0,0,1,2,0,4,0,0,4,28,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,223,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,235,"        stream.defaultReadObject();
",0,0,0,1,2,0,4,0,0,4,27,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,236,"        this.listenerList = new EventListenerList();
",2,0,0,1,2,0,0,2,0,5,44,4,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,237,"        stream.registerValidation(this, 10);  // see comments about priority of
",0,0,0,1,2,0,4,0,0,4,71,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,239,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,259,"        fireDatasetChanged(new DatasetChangeInfo());
",0,0,0,2,4,0,2,2,0,4,44,5,0.00000,0
defect4j,chart,org/jfree/data/general/AbstractDataset,2,261,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,72,"    public DatasetGroup(String id) {
",4,0,0,1,3,1,0,2,0,7,32,2,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,73,"        if (id == null) {
",2,1,0,1,3,0,0,0,0,3,17,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,74,"            throw new IllegalArgumentException(""Null 'id' argument."");
",0,0,0,1,2,0,0,2,0,3,58,7,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,76,"        this.id = id;
",4,0,0,0,0,0,0,0,0,5,13,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,77,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,85,"        return this.id;
",2,0,0,0,0,1,0,0,0,2,15,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,96,"        return super.clone();
",2,0,0,1,2,1,0,0,0,2,21,5,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,107,"        if (obj == this) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,108,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,110,"        if (!(obj instanceof DatasetGroup)) {
",2,0,0,2,5,0,0,2,0,5,37,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,111,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,113,"        DatasetGroup that = (DatasetGroup) obj;
",4,0,0,1,2,0,0,4,0,8,39,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,114,"        if (!this.id.equals(that.id)) {
",6,0,0,2,5,0,2,0,0,9,31,4,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,115,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/general/DatasetGroup,2,117,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,74,"            throw new IllegalArgumentException(""Null 'x' argument."");
",0,0,0,1,2,0,0,2,0,3,57,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,86,"        return this.x;
",2,0,0,0,0,1,0,0,0,2,14,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,105,"        this.obj = y;
",4,0,0,0,0,0,0,0,0,5,13,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,106,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,126,"        if (o1 instanceof ComparableObjectItem) {
",2,0,0,1,3,0,0,2,0,4,41,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,127,"            ComparableObjectItem that = (ComparableObjectItem) o1;
",4,0,0,1,2,0,0,4,0,8,54,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,128,"            return this.x.compareTo(that.x);
",6,0,0,1,2,1,2,0,0,8,32,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,135,"            result = 1;
",2,0,0,0,0,0,0,0,0,3,11,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,138,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,151,"        return super.clone();
",2,0,0,1,2,1,0,0,0,2,21,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,163,"        if (obj == this) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,164,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,166,"        if (!(obj instanceof ComparableObjectItem)) {
",2,0,0,2,5,0,0,2,0,5,45,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,167,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,169,"        ComparableObjectItem that = (ComparableObjectItem) obj;
",4,0,0,1,2,0,0,4,0,8,55,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,170,"        if (!this.x.equals(that.x)) {
",6,0,0,2,5,0,2,0,0,9,29,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,171,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,173,"        if (!ObjectUtilities.equal(this.obj, that.obj)) {
",6,0,0,2,5,0,4,0,0,11,49,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,174,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,176,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,186,"        result = this.x.hashCode();
",4,0,0,1,2,0,2,0,0,7,27,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,187,"        result = 29 * result + (this.obj != null ? this.obj.hashCode() : 0);
",8,3,0,2,4,0,2,0,0,14,68,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectItem,2,188,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,2,94,"        return this.summary;
",2,0,0,0,0,1,0,0,0,2,20,5,0.00000,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,2,105,"        this.summary = summary;
",4,0,0,0,0,0,0,0,0,5,23,4,0.00000,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,2,106,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/event/DatasetChangeEvent,2,89,"            throw new IllegalArgumentException(""Null 'info' argument."");
",0,0,0,1,2,0,0,2,0,3,60,7,0.00000,0
defect4j,chart,org/jfree/data/event/DatasetChangeEvent,2,103,"        return this.dataset;
",2,0,0,0,0,1,0,0,0,2,20,5,0.00000,0
defect4j,chart,org/jfree/data/event/DatasetChangeEvent,2,114,"        return this.info;
",2,0,0,0,0,1,0,0,0,2,17,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,64,"        super(new Double(x), new XYInterval(xLow, xHigh, y, yLow, yHigh));
",12,0,0,3,6,0,0,4,0,16,66,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,73,"        return (Double) getComparable();
",0,0,0,2,4,1,2,2,0,4,32,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,82,"        XYInterval interval = (XYInterval) getObject();
",2,0,0,2,4,0,2,4,0,8,47,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,83,"        if (interval != null) {
",2,1,0,1,3,0,0,0,0,3,23,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,84,"            return interval.getY();
",0,0,0,1,2,1,4,0,0,4,23,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,87,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,102,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,117,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,132,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalDataItem,2,147,"            return Double.NaN;
",4,0,0,0,0,1,0,0,0,4,18,7,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,64,"        double result = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,65,"        Number x = getStartX(series, item);
",2,0,0,1,2,0,6,2,0,10,35,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,66,"        if (x != null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,67,"            result = x.doubleValue();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,69,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,82,"        double result = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,83,"        Number x = getEndX(series, item);
",2,0,0,1,2,0,6,2,0,10,33,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,84,"        if (x != null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,85,"            result = x.doubleValue();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,87,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,100,"        double result = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,101,"        Number y = getStartY(series, item);
",2,0,0,1,2,0,6,2,0,10,35,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,102,"        if (y != null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,103,"            result = y.doubleValue();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,105,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,118,"        double result = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,119,"        Number y = getEndY(series, item);
",2,0,0,1,2,0,6,2,0,10,33,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,120,"        if (y != null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,121,"            result = y.doubleValue();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractIntervalXYDataset,2,123,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,64,"        return DomainOrder.NONE;
",4,0,0,0,0,1,0,0,0,4,24,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,76,"        double result = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,77,"        Number x = getX(series, item);
",2,0,0,1,2,0,6,2,0,10,30,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,78,"        if (x != null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,79,"            result = x.doubleValue();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,81,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,93,"        double result = Double.NaN;
",6,0,0,0,0,0,0,0,0,6,27,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,94,"        Number y = getY(series, item);
",2,0,0,1,2,0,6,2,0,10,30,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,95,"        if (y != null) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,96,"            result = y.doubleValue();
",2,0,0,1,2,0,4,0,0,7,25,6,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,98,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,117,"        return this.selectionState;
",2,0,0,0,0,1,0,0,0,2,27,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,128,"        this.selectionState = state;
",4,0,0,0,0,0,0,0,0,5,28,4,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,129,"        fireDatasetChanged(new DatasetChangeInfo());
",0,0,0,2,4,0,2,2,0,4,44,5,0.00000,0
defect4j,chart,org/jfree/data/xy/AbstractXYDataset,2,131,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,78,"            double yHigh) {
",2,0,0,0,2,0,0,0,0,2,15,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,79,"        this.xLow = xLow;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,80,"        this.xHigh = xHigh;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,81,"        this.y = y;
",4,0,0,0,0,0,0,0,0,5,11,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,82,"        this.yLow = yLow;
",4,0,0,0,0,0,0,0,0,5,17,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,83,"        this.yHigh = yHigh;
",4,0,0,0,0,0,0,0,0,5,19,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,84,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,110,"        return this.y;
",2,0,0,0,0,1,0,0,0,2,14,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,139,"        if (obj == this) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,140,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,142,"        if (!(obj instanceof XYInterval)) {
",2,0,0,2,5,0,0,2,0,5,35,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,143,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,145,"        XYInterval that = (XYInterval) obj;
",4,0,0,1,2,0,0,4,0,8,35,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,146,"        if (this.xLow != that.xLow) {
",6,1,0,1,3,0,0,0,0,7,29,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,147,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,149,"        if (this.xHigh != that.xHigh) {
",6,1,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,150,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,152,"        if (this.y != that.y) {
",6,1,0,1,3,0,0,0,0,7,23,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,153,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,155,"        if (this.yLow != that.yLow) {
",6,1,0,1,3,0,0,0,0,7,29,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,156,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,158,"        if (this.yHigh != that.yHigh) {
",6,1,0,1,3,0,0,0,0,7,31,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,159,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYInterval,2,161,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,73,"    public XYIntervalSeriesCollection() {
",2,0,0,1,3,1,0,0,0,3,37,2,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,74,"        this.data = new java.util.ArrayList();
",8,0,0,1,2,0,0,0,0,9,38,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,75,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,84,"        if (series == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,85,"            throw new IllegalArgumentException(""Null 'series' argument."");
",0,0,0,1,2,0,0,2,0,3,62,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,87,"        this.data.add(series);
",2,0,0,1,2,0,4,0,0,6,22,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,88,"        series.addChangeListener(this);
",0,0,0,1,2,0,4,0,0,4,31,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,89,"        fireDatasetChanged(new DatasetChangeInfo());
",0,0,0,2,4,0,2,2,0,4,44,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,91,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,99,"        return this.data.size();
",2,0,0,1,2,1,2,0,0,4,24,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,113,"        if ((series < 0) || (series >= getSeriesCount())) {
",4,3,0,4,9,0,2,0,0,9,51,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,114,"            throw new IllegalArgumentException(""Series index out of bounds"");
",0,0,0,1,2,0,0,2,0,3,65,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,116,"        return (XYIntervalSeries) this.data.get(series);
",2,0,0,2,4,1,4,2,0,8,48,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,132,"        return getSeries(series).getKey();
",0,0,0,2,4,1,6,0,0,6,34,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,147,"        return getSeries(series).getItemCount();
",0,0,0,2,4,1,6,0,0,6,40,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,159,"        XYIntervalSeries s = (XYIntervalSeries) this.data.get(series);
",4,0,0,2,4,0,4,4,0,12,62,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,160,"        return s.getX(item);
",0,0,0,1,2,1,6,0,0,6,20,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,201,"        XYIntervalSeries s = (XYIntervalSeries) this.data.get(series);
",4,0,0,2,4,0,4,4,0,12,62,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,202,"        return s.getYValue(item);
",0,0,0,1,2,1,6,0,0,6,25,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,242,"        return new Double(getYValue(series, item));
",0,0,0,2,4,1,6,2,0,8,43,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,254,"        return new Double(getStartXValue(series, item));
",0,0,0,2,4,1,6,2,0,8,48,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,266,"        return new Double(getEndXValue(series, item));
",0,0,0,2,4,1,6,2,0,8,46,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,279,"        return new Double(getStartYValue(series, item));
",0,0,0,2,4,1,6,2,0,8,48,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,292,"        return new Double(getEndYValue(series, item));
",0,0,0,2,4,1,6,2,0,8,46,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,304,"        if ((series < 0) || (series >= getSeriesCount())) {
",4,3,0,4,9,0,2,0,0,9,51,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,305,"            throw new IllegalArgumentException(""Series index out of bounds."");
",0,0,0,1,2,0,0,2,0,3,66,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,307,"        XYIntervalSeries ts = (XYIntervalSeries) this.data.get(series);
",4,0,0,2,4,0,4,4,0,12,63,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,308,"        ts.removeChangeListener(this);
",0,0,0,1,2,0,4,0,0,4,30,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,309,"        this.data.remove(series);
",2,0,0,1,2,0,4,0,0,6,25,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,310,"        fireDatasetChanged(new DatasetChangeInfo());
",0,0,0,2,4,0,2,2,0,4,44,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,312,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,323,"        if (series == null) {
",2,1,0,1,3,0,0,0,0,3,21,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,324,"            throw new IllegalArgumentException(""Null 'series' argument."");
",0,0,0,1,2,0,0,2,0,3,62,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,326,"        if (this.data.contains(series)) {
",2,0,0,2,5,0,4,0,0,6,33,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,327,"            series.removeChangeListener(this);
",0,0,0,1,2,0,4,0,0,4,34,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,328,"            this.data.remove(series);
",2,0,0,1,2,0,4,0,0,6,25,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,329,"            fireDatasetChanged(new DatasetChangeInfo());
",0,0,0,2,4,0,2,2,0,4,44,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,332,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,343,"        for (int i = 0; i < this.data.size(); i++) {
",8,1,0,2,5,0,2,0,0,12,44,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,344,"          XYIntervalSeries series = (XYIntervalSeries) this.data.get(i);
",4,0,0,2,4,0,4,4,0,12,62,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,345,"          series.removeChangeListener(this);
",0,0,0,1,2,0,4,0,0,4,34,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,347,"        this.data.clear();
",2,0,0,1,2,0,2,0,0,4,18,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,348,"        fireDatasetChanged(new DatasetChangeInfo());
",0,0,0,2,4,0,2,2,0,4,44,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,350,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,360,"        if (obj == this) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,361,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,363,"        if (!(obj instanceof XYIntervalSeriesCollection)) {
",2,0,0,2,5,0,0,2,0,5,51,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,364,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,366,"        XYIntervalSeriesCollection that = (XYIntervalSeriesCollection) obj;
",4,0,0,1,2,0,0,4,0,8,67,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,367,"        return ObjectUtilities.equal(this.data, that.data);
",6,0,0,1,2,1,4,0,0,10,51,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,378,"        XYIntervalSeriesCollection clone
",2,0,0,0,0,0,0,2,0,4,32,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,380,"        int seriesCount = getSeriesCount();
",2,0,0,1,2,0,2,0,0,4,35,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,381,"        clone.data = new java.util.ArrayList(seriesCount);
",12,0,0,1,2,0,0,0,0,13,50,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,382,"        for (int i = 0; i < this.data.size(); i++) {
",8,1,0,2,5,0,2,0,0,12,44,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,383,"            clone.data.set(i, getSeries(i).clone());
",4,0,0,3,6,0,10,0,0,14,40,7,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeriesCollection,2,385,"        return clone;
",2,0,0,0,0,1,0,0,0,2,13,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,64,"        this(key, true, true);
",2,0,0,1,2,0,0,0,0,4,22,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,65,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,79,"        super(key, autoSort, allowDuplicateXValues);
",6,0,0,1,2,0,0,0,0,6,44,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,80,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,94,"        super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
",14,0,0,2,4,0,0,2,0,17,72,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,95,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,105,"        XYIntervalDataItem item = (XYIntervalDataItem) getDataItem(index);
",2,0,0,2,4,0,4,4,0,10,66,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,106,"        return item.getX();
",0,0,0,1,2,1,4,0,0,4,19,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,147,"        XYIntervalDataItem item = (XYIntervalDataItem) getDataItem(index);
",2,0,0,2,4,0,4,4,0,10,66,4,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,148,"        return item.getYValue();
",0,0,0,1,2,1,4,0,0,4,24,5,0.00000,0
defect4j,chart,org/jfree/data/xy/XYIntervalSeries,2,189,"        return super.getDataItem(index);
",4,0,0,1,2,1,0,0,0,4,32,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,83,"        this(key, true, true);
",2,0,0,1,2,0,0,0,0,4,22,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,84,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,112,"        return this.autoSort;
",2,0,0,0,0,1,0,0,0,2,21,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,122,"        return this.allowDuplicateXValues;
",2,0,0,0,0,1,0,0,0,2,34,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,142,"        return this.maximumItemCount;
",2,0,0,0,0,1,0,0,0,2,29,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,160,"        this.maximumItemCount = maximum;
",4,0,0,0,0,0,0,0,0,5,32,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,161,"        boolean dataRemoved = false;
",2,0,0,0,0,0,0,0,0,3,28,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,162,"        while (this.data.size() > maximum) {
",4,1,0,2,5,0,2,0,0,7,36,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,163,"            this.data.remove(0);
",2,0,0,1,2,0,2,0,0,4,20,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,164,"            dataRemoved = true;
",2,0,0,0,0,0,0,0,0,4,19,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,166,"        if (dataRemoved) {
",2,0,0,1,3,0,0,0,0,2,18,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,167,"            fireSeriesChanged();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,169,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,183,"        add(x, y, true);
",0,0,0,1,2,0,6,0,0,7,16,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,184,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,201,"        ComparableObjectItem item = new ComparableObjectItem(x, y);
",6,0,0,1,2,0,0,4,0,10,59,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,202,"        add(item, notify);
",0,0,0,1,2,0,6,0,0,6,18,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,203,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,217,"            throw new IllegalArgumentException(""Null 'item' argument."");
",0,0,0,1,2,0,0,2,0,3,60,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,226,"                if (this.allowDuplicateXValues) {
",2,0,0,1,3,0,0,0,0,2,33,9,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,228,"                    int size = this.data.size();
",4,0,0,1,2,0,2,0,0,6,28,11,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,230,"                           && item.compareTo(this.data.get(index)) == 0) {
",2,1,0,2,6,0,8,0,0,11,47,11,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,231,"                        index++;
",2,0,0,0,0,0,0,0,0,3,8,12,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,233,"                    if (index < this.data.size()) {
",4,1,0,2,5,0,2,0,0,7,31,10,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,234,"                        this.data.add(index, item);
",2,0,0,1,2,0,6,0,0,8,27,13,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,237,"                        this.data.add(item);
",2,0,0,1,2,0,4,0,0,6,20,13,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,239,"                }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,241,"                    throw new SeriesException(""X-value already exists."");
",0,0,0,1,2,0,0,2,0,3,53,11,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,246,"            if (!this.allowDuplicateXValues) {
",2,0,0,1,3,0,0,0,0,3,34,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,249,"                int index = indexOf(item.getComparable());
",2,0,0,2,4,0,6,0,0,8,42,9,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,250,"                if (index >= 0) {
",2,1,0,1,3,0,0,0,0,3,17,8,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,251,"                    throw new SeriesException(""X-value already exists."");
",0,0,0,1,2,0,0,2,0,3,53,11,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,254,"            this.data.add(item);
",2,0,0,1,2,0,4,0,0,6,20,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,257,"            this.data.remove(0);
",2,0,0,1,2,0,2,0,0,4,20,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,275,"        if (this.autoSort) {
",2,0,0,1,3,0,0,0,0,2,20,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,276,"            return Collections.binarySearch(this.data, new ComparableObjectItem(
",2,0,0,0,2,1,4,2,0,8,68,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,280,"            for (int i = 0; i < this.data.size(); i++) {
",8,1,0,2,5,0,2,0,0,12,44,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,281,"                ComparableObjectItem item = (ComparableObjectItem)
",2,0,0,1,2,0,0,4,0,6,50,8,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,283,"                if (item.getComparable().equals(x)) {
",0,0,0,3,7,0,8,0,0,8,37,9,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,284,"                    return i;
",2,0,0,0,0,1,0,0,0,2,9,10,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,287,"            return -1;
",0,0,0,0,0,1,0,0,0,1,10,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,301,"        int index = indexOf(x);
",2,0,0,1,2,0,4,0,0,6,23,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,302,"        if (index < 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,303,"            throw new SeriesException(""No observation for x = "" + x);
",2,1,0,1,2,0,0,2,0,6,57,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,306,"            ComparableObjectItem item = getDataItem(index);
",2,0,0,1,2,0,4,2,0,8,47,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,307,"            item.setObject(y);
",0,0,0,1,2,0,6,0,0,6,18,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,308,"            fireSeriesChanged();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,310,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,320,"        ComparableObjectItem item = getDataItem(index);
",2,0,0,1,2,0,4,2,0,8,47,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,321,"        item.setObject(y);
",0,0,0,1,2,0,6,0,0,6,18,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,322,"        fireSeriesChanged();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,323,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,344,"        for (int i = start; i <= end; i++) {
",10,1,0,1,3,0,0,0,0,12,36,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,345,"            this.data.remove(start);
",2,0,0,1,2,0,4,0,0,6,24,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,347,"        fireSeriesChanged();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,348,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,356,"        if (this.data.size() > 0) {
",2,1,0,2,5,0,2,0,0,5,27,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,357,"            this.data.clear();
",2,0,0,1,2,0,2,0,0,4,18,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,358,"            fireSeriesChanged();
",0,0,0,1,2,0,2,0,0,2,20,7,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,360,"    }
",0,0,0,0,1,0,0,0,0,0,1,3,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,371,"        ComparableObjectItem result = (ComparableObjectItem) this.data.remove(
",4,0,0,1,3,0,2,4,0,10,70,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,373,"        fireSeriesChanged();
",0,0,0,1,2,0,2,0,0,2,20,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,374,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,386,"        return remove(indexOf(x));
",0,0,0,2,4,1,6,0,0,6,26,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,398,"        if (obj == this) {
",2,1,0,1,3,0,0,0,0,3,18,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,399,"            return true;
",0,0,0,0,0,1,0,0,0,1,12,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,401,"        if (!(obj instanceof ComparableObjectSeries)) {
",2,0,0,2,5,0,0,2,0,5,47,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,402,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,404,"        if (!super.equals(obj)) {
",4,0,0,2,5,0,0,0,0,5,25,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,405,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,407,"        ComparableObjectSeries that = (ComparableObjectSeries) obj;
",4,0,0,1,2,0,0,4,0,8,59,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,408,"        if (this.maximumItemCount != that.maximumItemCount) {
",6,1,0,1,3,0,0,0,0,7,53,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,409,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,411,"        if (this.autoSort != that.autoSort) {
",6,1,0,1,3,0,0,0,0,7,37,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,412,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,414,"        if (this.allowDuplicateXValues != that.allowDuplicateXValues) {
",6,1,0,1,3,0,0,0,0,7,63,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,415,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,417,"        if (!ObjectUtilities.equal(this.data, that.data)) {
",6,0,0,2,5,0,4,0,0,11,51,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,418,"            return false;
",0,0,0,0,0,1,0,0,0,1,13,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,420,"        return true;
",0,0,0,0,0,1,0,0,0,1,12,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,429,"        int result = super.hashCode();
",4,0,0,1,2,0,0,0,0,4,30,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,432,"        int count = getItemCount();
",2,0,0,1,2,0,2,0,0,4,27,5,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,433,"        if (count > 0) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,434,"            ComparableObjectItem item = getDataItem(0);
",2,0,0,1,2,0,2,2,0,6,43,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,435,"            result = 29 * result + item.hashCode();
",4,2,0,1,2,0,4,0,0,11,39,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,437,"        if (count > 1) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,438,"            ComparableObjectItem item = getDataItem(count - 1);
",4,1,0,1,2,0,2,2,0,9,51,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,439,"            result = 29 * result + item.hashCode();
",4,2,0,1,2,0,4,0,0,11,39,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,441,"        if (count > 2) {
",2,1,0,1,3,0,0,0,0,3,16,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,442,"            ComparableObjectItem item = getDataItem(count / 2);
",4,1,0,1,2,0,2,2,0,9,51,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,443,"            result = 29 * result + item.hashCode();
",4,2,0,1,2,0,4,0,0,11,39,6,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,445,"        result = 29 * result + this.maximumItemCount;
",6,2,0,0,0,0,0,0,0,9,45,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,446,"        result = 29 * result + (this.autoSort ? 1 : 0);
",6,2,0,1,2,0,0,0,0,9,47,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,447,"        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);
",6,2,0,1,2,0,0,0,0,9,60,4,0.00000,0
defect4j,chart,org/jfree/data/ComparableObjectSeries,2,448,"        return result;
",2,0,0,0,0,1,0,0,0,2,14,4,0.00000,0
