dataset,project,pPath,pId,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1361,                    return false;,0,0,0,0,0,0,0,0,0,1,13,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1363,                hasDecPoint = true;,1,0,0,0,0,0,0,0,0,3,19,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1364,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,9,48,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1366,                if (hasExp) {,1,0,0,1,3,0,0,0,0,1,13,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1348,"        sz--; // don't want to loop to the last char, check it afterwords",1,0,0,0,0,0,0,0,0,2,65,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1354,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1355,                foundDigit = true;,1,0,0,0,0,0,0,0,0,3,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1350,        int i = start;,2,0,0,0,0,0,0,0,0,2,14,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,457,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,1,0,2,72,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1353,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,6,6,0,2,5,0,0,0,0,13,61,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,586,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1358,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,4,29,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1359,                if (hasDecPoint || hasExp) {,2,1,0,1,3,0,0,0,0,3,28,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1356,                allowSigns = false;,1,0,0,0,0,0,0,0,0,3,19,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,598,                return createBigDecimal(str);,0,0,0,1,2,0,2,0,0,2,29,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1342,                        return false;,0,0,0,0,0,0,0,0,0,1,13,12,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1345,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,594,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1334,                if (i == sz) {,2,1,0,1,3,0,0,0,0,3,14,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1332,            if (chars[start] == '0' && chars[start + 1] == 'x') {,1,4,1,3,7,0,0,0,0,10,53,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1333,                int i = start + 2;,2,1,0,0,0,0,0,0,0,3,18,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1330,        int start = (chars[0] == '-') ? 1 : 0;,1,1,1,2,4,0,0,0,0,4,38,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1331,        if (sz > start + 1) {,2,2,0,1,3,0,0,0,0,4,21,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1338,                for (; i < chars.length; i++) {,4,1,0,1,3,0,0,0,0,6,31,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1339,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,9,38,13,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1401,                return foundDigit;,1,0,0,0,0,0,0,0,0,1,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1403,            if (!allowSigns,1,0,0,0,1,0,0,0,0,2,15,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1408,                return foundDigit;,1,0,0,0,0,0,0,0,0,1,18,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1410,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,4,19,7,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1325,        boolean hasExp = false;,1,0,0,0,0,0,0,0,0,2,23,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1324,        int sz = chars.length;,3,0,0,0,0,0,0,0,0,3,22,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1327,        boolean allowSigns = false;,1,0,0,0,0,0,0,0,0,2,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1326,        boolean hasDecPoint = false;,1,0,0,0,0,0,0,0,0,2,28,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1321,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1320,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,3,0,0,3,31,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1323,        char[] chars = str.toCharArray();,1,0,0,2,4,0,2,0,0,3,33,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1328,        boolean foundDigit = false;,1,0,0,0,0,0,0,0,0,2,27,5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1416,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1391,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1393,                return false;,0,0,0,0,0,0,0,0,0,1,13,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1395,            if (chars[i] == '.') {,0,1,1,2,5,0,0,0,0,4,22,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1396,                if (hasDecPoint || hasExp) {,2,1,0,1,3,0,0,0,0,3,28,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,492,"                mant = str.substring(0, expPos);",1,0,0,1,2,0,3,0,0,5,32,8,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,543,                    } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,548,                    } catch (NumberFormatException e) {,1,0,0,1,4,0,0,1,0,2,35,9,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1387,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,9,41,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1386,        if (i < chars.length) {,3,1,0,1,3,0,0,0,0,4,23,4,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1384,            i++;,1,0,0,0,0,0,0,0,0,2,4,6,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1382,                return false;,0,0,0,0,0,0,0,0,0,1,13,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1380,                foundDigit = false; // we need a digit after the E,1,0,0,0,0,0,0,0,0,3,50,11,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1389,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,6,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,3,0,0,0,0,0,0,0,0,3,35,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,1,0,0,1,2,0,2,0,0,3,24,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,2,3,0,1,3,0,0,0,0,5,40,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,"		int searchLength = searchChars.length;",3,0,0,0,0,0,0,0,0,3,38,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,"		int csLength = cs.length();",1,0,0,1,2,0,2,0,0,3,27,5,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,"		for (int i = 0; i < csLength; i++) {",4,1,0,1,3,0,0,0,0,6,36,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,"		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {",0,1,0,3,7,0,5,0,0,6,53,4,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,"			for (int j = 0; j < searchLength; j++) {",4,1,0,1,3,0,0,0,0,6,40,6,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,903,        if (array == null) {,1,1,0,1,3,0,0,0,0,2,20,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,2,1,0,1,4,0,0,0,0,3,31,5,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,2,0,0,0,0,0,0,0,0,2,36,8,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,3,0,0,2,4,0,0,2,0,5,45,4,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,1,0,0,0,0,0,0,0,0,1,15,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3292,        } else if (element != null) {,1,1,0,1,4,0,0,0,0,2,29,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,1,1,0,1,3,0,0,0,0,2,21,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,1,1,0,1,4,0,0,0,0,2,28,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,2,4,1,3,1,0,6,60,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,4,8,0,3,2,0,11,80,4,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,1,2,0,4,0,0,6,59,5,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,1,0,0,0,0,0,0,0,0,1,19,4,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,642,"                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);",3,0,0,1,2,0,2,0,0,6,56,7,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,873,            calendar.setTimeZone(mTimeZone);,0,0,0,1,2,0,3,0,0,3,32,7,1,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,2,3,0,1,3,0,0,0,0,5,39,4,1,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,470,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",4,2,0,1,2,0,2,0,0,8,64,5,1,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,467,        if (gcd == 1) {,1,1,0,1,3,0,0,0,0,2,15,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,685,                if (ch == 't') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,0,0,0,2,5,0,2,0,0,2,23,5,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,24,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",1,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,                char ch1 = str.charAt(1);,1,0,0,1,2,0,2,0,0,3,25,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,25,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,                char ch = str.charAt(0);,1,0,0,1,2,0,2,0,0,3,24,7,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,1,1,0,1,3,0,0,0,0,3,16,6,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,1,0,0,1,2,0,3,0,0,5,58,4,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,1,0,0,2,4,0,4,1,0,6,56,4,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,3,2,2,0,8,90,2,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,3,2,2,0,8,91,2,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,1,1,0,1,3,0,0,0,0,2,16,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,2,1,0,1,2,0,1,0,0,4,29,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,2,1,0,3,6,0,3,1,0,8,60,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,2,1,0,1,3,0,0,0,0,3,22,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,1,1,1,2,5,0,0,0,0,4,23,6,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,0,0,0,0,0,0,0,0,0,1,12,8,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,1,1,0,1,3,0,0,0,0,2,18,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,0,0,0,0,7,40,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,2,1,0,1,3,0,0,0,0,3,20,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,3,7,0,3,0,0,8,38,9,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,3,3,0,1,3,0,0,0,0,6,40,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,0,5,47,4,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,1,0,0,0,0,0,0,0,0,1,15,11,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,1,0,0,0,0,0,0,0,0,1,9,7,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,4,1,0,1,3,0,0,0,0,6,34,7,1,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,2,0,0,3,31,11,1,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,1,0,0,1,2,0,2,0,0,3,36,14,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,437,            int newdiff = startValue - endValue;,3,1,0,0,0,0,0,0,0,4,36,7,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,439,            return newdiff;,1,0,0,0,0,0,0,0,0,1,15,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,315,            months += 12;,1,0,0,0,0,0,0,0,0,2,13,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,316,            years -= 1;,1,0,0,0,0,0,0,0,0,2,11,6,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,438,"            end.add( field, newdiff );",0,0,0,1,2,0,4,0,0,4,26,7,1,0
defect4j,time,org/joda/time/chrono/GJChronology,6,975,"                instant = iGregorianField.add(instant, value);",1,0,0,1,2,0,4,0,0,6,46,7,1,0
defect4j,time,org/joda/time/chrono/GJChronology,6,976,                if (instant < iCutover) {,2,1,0,1,3,0,0,0,0,3,25,7,1,0
defect4j,time,org/joda/time/chrono/GJChronology,6,978,                    if (instant + iGapDuration < iCutover) {,3,2,0,1,3,0,0,0,0,5,40,9,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,720,        if (iZone != null) {,1,1,0,1,3,0,0,0,0,2,20,4,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,723,        return newPos;,1,0,0,0,0,0,0,0,0,1,14,4,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,698,        DateTimeParser parser = requireParser();,1,0,0,1,2,0,1,1,0,3,40,4,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,699,        if (instant == null) {,1,1,0,1,3,0,0,0,0,2,22,4,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,703,        long instantMillis = instant.getMillis();,1,0,0,1,2,0,2,0,0,3,41,5,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,706,        chrono = selectChronology(chrono);,1,0,0,1,2,0,2,0,0,4,34,4,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,704,        Chronology chrono = instant.getChronology();,1,0,0,1,2,0,2,1,0,4,44,4,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,705,        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);,2,1,0,2,4,0,4,0,0,7,78,5,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,711,"        instant.setMillis(bucket.computeMillis(false, text));",0,0,0,2,4,0,5,0,0,6,53,5,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,710,"        int newPos = parser.parseInto(bucket, text, position);",1,0,0,1,2,0,5,0,0,6,54,5,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,712,        if (iOffsetParsed && bucket.getOffsetInteger() != null) {,1,2,0,2,5,0,2,0,0,5,57,4,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,717,            chrono = chrono.withZone(bucket.getZone());,1,0,0,2,4,0,4,0,0,6,43,7,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,719,        instant.setChronology(chrono);,0,0,0,1,2,0,3,0,0,3,30,5,1,0
defect4j,time,org/joda/time/DateTime,17,665,"        long newMillis = getZone().adjustOffset(getMillis(), false);",1,0,0,3,6,0,3,0,0,5,60,5,1,0
defect4j,time,org/joda/time/DateTime,17,685,"        long newMillis = getZone().adjustOffset(getMillis(), true);",1,0,0,3,6,0,3,0,0,5,59,5,1,0
defect4j,time,org/joda/time/DateTime,17,686,        return withMillis(newMillis);,0,0,0,1,2,0,2,0,0,2,29,5,1,0
defect4j,time,org/joda/time/DateTime,17,666,        return withMillis(newMillis);,0,0,0,1,2,0,2,0,0,2,29,5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",1,0,0,1,2,0,2,0,0,3,28,7,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,1,1,0,1,3,0,0,0,0,2,17,6,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",2,1,0,1,2,0,3,0,0,6,36,9,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,0,2,0,0,5,43,5,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,1,1,0,1,3,0,0,0,0,2,14,4,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,1,1,0,1,3,0,0,0,0,2,20,6,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",1,0,0,1,2,0,2,0,0,3,28,7,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,1,1,0,1,3,0,0,0,0,2,14,4,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,0,2,0,0,5,43,5,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",1,0,0,1,2,0,3,0,0,5,28,8,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",2,1,0,1,2,0,3,0,0,6,36,9,0.869598765,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",0,0,0,1,2,0,2,0,0,2,23,5,0.869598765,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,int max = longest;,2,0,0,0,0,0,0,0,0,2,18,5,0.8,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71, if (index + longest > input.length()) {,2,2,0,2,5,0,2,0,0,6,39,4,0.8,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,for (int i = max; i >= shortest; i--) {,5,1,0,1,3,0,0,0,1,7,39,4,0.8,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,3,3,0,1,3,0,0,0,0,6,41,4,0.77173913,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.77173913,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680, if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.741071429,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,return Integer.decode(str);,0,0,0,1,2,1,3,0,0,3,27,5,0.741071429,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,357,"                saveField(DateTimeFieldType.year(), iDefaultYear);",0,0,0,2,4,0,4,0,0,4,50,9,0.726863193,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,358,"                return computeMillis(resetFields, text);",0,0,0,1,2,0,3,0,0,3,40,9,0.726863193,0
defect4j,chart,org/jfree/data/time/Week,8,248,        return this.week;,1,0,0,0,0,0,0,0,0,1,17,5,0.633333333,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",2,1,0,1,2,0,6,0,0,9,72,5,0.518518519,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,2,0,0,0,0,0,0,0,0,3,12,4,0.518518519,0
defect4j,time,org/joda/time/MutableDateTime,16,564,        super.setChronology(chronology);,2,0,0,1,2,0,0,0,0,2,32,5,0.499249187,0
defect4j,time,org/joda/time/base/BaseDateTime,16,329,        iChronology = checkChronology(chronology);,1,0,0,1,2,0,2,0,0,4,42,4,0.499249187,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,151,        return this.width;,1,0,0,0,0,0,0,0,0,1,18,5,0.498154982,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,495,        this.centerBlock = null;,1,0,0,0,0,0,0,0,0,2,24,4,0.498154982,0
defect4j,chart,org/jfree/chart/block/EmptyBlock,13,85,"        return new Size2D(calculateTotalWidth(getWidth()), ",0,0,0,2,5,0,2,1,0,3,50,5,0.498154982,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,175,        return this.height;,1,0,0,0,0,0,0,0,0,1,19,5,0.498154982,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,499,        this.rightBlock = null;,1,0,0,0,0,0,0,0,0,2,23,4,0.498154982,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,498,        this.leftBlock = null;,1,0,0,0,0,0,0,0,0,2,22,4,0.498154982,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,497,        this.bottomBlock = null;,1,0,0,0,0,0,0,0,0,2,24,4,0.498154982,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,496,        this.topBlock = null;,1,0,0,0,0,0,0,0,0,2,21,4,0.498154982,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,1,1,0,1,3,0,0,0,0,2,14,4,0.497058824,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",1,0,0,1,2,0,2,0,0,3,28,7,0.497058824,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",2,1,0,1,2,0,3,0,0,6,36,9,0.497058824,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,2,1,0,2,4,0,2,0,0,5,43,5,0.497058824,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,1,1,0,1,3,0,0,0,0,2,17,6,0.497058824,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,2,1,0,1,2,0,2,0,0,6,32,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);",2,1,0,1,2,0,3,0,0,7,40,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,0,2,0,0,9,47,6,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,                            return f;,1,0,0,0,0,0,0,0,0,1,9,11,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,5,11,0,4,0,0,10,65,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,1,1,0,2,5,0,2,0,0,4,28,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,                        Double d = NumberUtils.createDouble(numeric);,1,0,0,1,2,0,3,1,0,5,45,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",2,2,0,2,4,0,4,0,0,9,50,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,1,0,0,0,0,0,0,0,0,1,9,12,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,2,4,0,4,0,0,6,55,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,0,0,0,1,2,0,2,0,0,2,33,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,1,0,0,1,2,0,2,1,0,4,29,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,5,11,0,4,0,0,10,65,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,3,3,0,2,5,0,2,0,0,8,47,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,            if (expPos > -1) {,1,1,0,1,3,0,0,0,0,3,18,6,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,0,0,0,1,2,0,2,0,0,2,26,11,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",2,1,0,2,4,0,4,0,0,8,46,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",1,0,0,1,2,0,3,0,0,5,32,6,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,1,0,0,0,0,0,0,0,0,2,11,8,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,1,0,0,1,2,0,2,1,0,4,27,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,            return createInteger(str);,0,0,0,1,2,0,2,0,0,2,26,7,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,                return createBigInteger(str);,0,0,0,1,2,0,2,0,0,2,29,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,                    return createLong(str);,0,0,0,1,2,0,2,0,0,2,23,11,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,1,0,0,1,4,0,0,1,0,2,37,10,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,1,0,0,0,0,0,0,0,0,1,9,11,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,1,3,0,5,11,0,4,0,0,10,65,9,0.495495495,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,2,3,0,1,3,0,0,0,0,5,33,6,0.495495495,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,0,0,1,2,0,3,0,0,4,44,4,0.494252874,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,1,1,0,1,3,0,0,0,0,2,26,4,0.49103139,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,50,5,0.49103139,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"super(msg, cause);",2,0,0,1,2,0,0,0,0,2,18,4,0.488372093,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,879,        if (start < 0) {,1,1,0,1,3,0,0,0,0,2,16,4,0.483333333,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,882,        if (end < start) {,2,1,0,1,3,0,0,0,0,3,18,4,0.483333333,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,564,"        add(item, true);",0,0,0,1,2,0,2,0,0,3,16,5,0.47826087,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,2,1,0,0,0,0,0,0,0,4,19,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,1,0,0,0,0,0,0,0,0,2,9,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,2,1,0,0,0,0,0,0,0,4,22,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,1,0,0,0,0,0,0,0,0,2,10,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,1,0,0,0,0,0,0,0,0,2,12,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,2,1,0,0,0,0,0,0,0,4,31,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,1,0,0,0,0,0,0,0,0,2,12,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,2,1,0,0,0,0,0,0,0,4,24,6,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,1,0,0,0,0,0,0,0,0,2,10,8,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,2,1,0,0,0,0,0,0,0,4,21,8,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,4,0,0,4,46,7,0.476190476,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,0,6,0,0,7,81,5,0.476190476,0
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,1,0,0,3,6,0,2,0,0,3,33,11,0.474358974,0
defect4j,chart,org/jfree/data/general/AbstractDataset,16,94,    protected AbstractDataset() {,1,0,0,1,3,1,0,0,0,2,29,2,0.456442611,0
defect4j,chart,org/jfree/data/general/AbstractDataset,16,95,        this.group = new DatasetGroup();,1,0,0,1,2,0,0,1,0,3,32,4,0.456442611,0
defect4j,chart,org/jfree/data/general/AbstractDataset,16,96,        this.listenerList = new EventListenerList();,1,0,0,1,2,0,0,1,0,3,44,4,0.456442611,0
defect4j,chart,org/jfree/data/DataUtilities,16,133,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.456442611,0
defect4j,chart,org/jfree/data/DataUtilities,16,125,        if (data == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.456442611,0
defect4j,chart,org/jfree/data/DataUtilities,16,129,        Number[][] result = new Number[l1][];,1,0,1,4,8,0,0,2,0,4,37,4,0.456442611,0
defect4j,chart,org/jfree/data/DataUtilities,16,128,        int l1 = data.length;,3,0,0,0,0,0,0,0,0,3,21,5,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,155,            int seriesCount = starts.length;,3,0,0,0,0,0,0,0,0,3,32,7,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,156,            if (seriesCount != ends.length) {,3,1,0,1,3,0,0,0,0,4,33,6,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,150,        if (starts != null && ends != null) {,2,3,0,1,3,0,0,0,0,5,37,4,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,152,"            String baseName = ""org.jfree.data.resources.DataPackageResources"";",1,0,0,0,0,0,0,1,0,3,66,6,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,153,            ResourceBundle resources = ResourceBundle.getBundle(baseName);,1,0,0,1,2,0,3,1,0,5,62,6,0.456442611,0
defect4j,chart,org/jfree/data/DataUtilities,16,130,        for (int i = 0; i < l1; i++) {,4,1,0,1,3,0,0,0,0,6,30,4,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,91,"        this(DataUtilities.createNumberArray2D(starts),",0,0,0,1,3,0,3,0,0,3,47,5,0.456442611,0
defect4j,chart,org/jfree/data/general/DatasetGroup,16,64,"        this.id = ""NOID"";",1,0,0,0,0,0,0,0,0,3,17,4,0.456442611,0
defect4j,chart,org/jfree/data/resources/DataPackageResources,16,50,public class DataPackageResources extends ListResourceBundle {,1,0,0,0,1,1,0,1,0,3,62,1,0.456442611,0
defect4j,chart,org/jfree/data/resources/DataPackageResources,16,62,    private static final Object[][] CONTENTS = {,1,0,0,2,5,3,0,1,0,5,44,2,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,163,            if (seriesCount > 0) {,1,1,0,1,3,0,0,0,0,2,22,6,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,107,"        this(null, null, starts, ends);",2,0,0,1,2,0,0,0,0,2,31,4,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,148,        this.endData = ends;,2,0,0,0,0,0,0,0,0,3,20,4,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,147,        this.startData = starts;,2,0,0,0,0,0,0,0,0,3,24,4,0.456442611,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,145,                                          Number[][] ends) {,1,0,0,2,6,0,0,1,0,2,18,3,0.456442611,0
defect4j,time,org/joda/time/MutableDateTime,16,351,"        super(year, monthOfYear, dayOfMonth,",3,0,0,0,1,0,0,0,0,3,36,4,0.420183269,0
defect4j,time,org/joda/time/chrono/GJChronology,6,341,            if (instant >= iCutoverMillis) {,2,1,0,1,3,0,0,0,0,3,32,6,0.399935891,0
defect4j,time,org/joda/time/chrono/GJChronology,6,339,            instant = iJulianChronology.getDateTimeMillis,1,0,0,0,0,0,2,0,0,4,45,6,0.399935891,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,3,3,0,1,3,0,0,0,0,7,33,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,2,0,0,0,0,0,0,0,0,3,9,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,1,1,0,1,3,0,0,0,0,3,24,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,1,0,1,2,0,3,1,0,7,47,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,2,0,0,3,31,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,2,0,0,4,41,9,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,1,1,0,1,3,0,0,0,0,3,16,6,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,1,0,0,1,2,0,3,0,0,4,24,7,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,4,1,0,2,5,0,2,0,0,8,47,4,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,5,0,0,5,39,5,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,1,1,0,1,3,0,0,0,0,3,17,8,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",2,1,0,1,2,0,2,0,0,6,35,9,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",2,1,0,1,2,0,2,0,0,6,35,9,0.369230769,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,1,0,0,2,4,0,2,2,0,5,50,4,0.369230769,0
defect4j,time,org/joda/time/LocalDate,6,1965,"            return iInstant.withLocalMillis(iField.add(iInstant.getLocalMillis(), value));",0,0,0,3,6,0,7,0,0,7,78,6,0.333262101,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,314,        return iMessage;,1,0,0,0,0,0,0,0,0,1,16,4,0.333262101,0
defect4j,time,org/joda/time/DateTimeZone,3,931,                    return offsetPrev;,1,0,0,0,0,0,0,0,0,1,18,11,0.332398171,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460, for(final String pfx : hex_prefixes) {,2,0,0,1,3,1,0,1,0,4,38,4,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,if (str.startsWith(pfx)) {,0,0,0,2,5,0,3,0,1,3,26,7,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466, if (pfxLen > 0) { // we have a hex number,1,1,0,1,3,0,0,0,0,2,41,4,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,if (str == null) {,1,1,0,1,3,0,0,0,1,2,18,4,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454, if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,3,0,0,3,31,5,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,int pfxLen = 0;,1,0,0,0,0,0,0,0,0,1,15,5,0.30952381,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",1,0,0,2,4,1,0,1,0,9,68,4,0.30952381,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,3,3,0,1,3,0,0,0,0,6,41,4,0.295274232,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.295274232,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,261,if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,5,0,1,7,52,6,0.275,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,260,for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,1,6,34,4,0.275,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,262,return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.275,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,257,if (cs == null || (strLen = cs.length()) == 0) {,2,3,0,3,7,0,2,0,1,8,48,4,0.275,0
defect4j,chart,org/jfree/data/general/Series,3,244,        clone.listeners = new EventListenerList();,2,0,0,1,2,0,0,1,0,4,42,4,0.254658385,0
defect4j,chart,org/jfree/data/general/Series,3,245,        clone.propertyChangeSupport = new PropertyChangeSupport(clone);,3,0,0,1,2,0,0,1,0,5,63,4,0.254658385,0
defect4j,chart,org/jfree/data/general/Series,3,246,        return clone;,1,0,0,0,0,0,0,0,0,1,13,4,0.254658385,0
defect4j,chart,org/jfree/data/general/Series,3,243,        Series clone = (Series) super.clone();,2,0,0,2,4,0,0,2,0,4,38,4,0.254658385,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,0,3,0,0,4,35,4,0.25,0
defect4j,time,org/joda/time/LocalDate,6,1708,"        return withLocalMillis(getChronology().dayOfWeek().set(getLocalMillis(), dayOfWeek));",0,0,0,5,10,0,6,0,0,6,85,5,0.249919863,0
defect4j,time,org/joda/time/LocalDate,6,1531,        return getChronology().dayOfWeek().get(getLocalMillis());,0,0,0,4,8,0,4,0,0,4,57,5,0.249919863,0
defect4j,time,org/joda/time/LocalDate,6,1663,"        return withLocalMillis(getChronology().weekOfWeekyear().set(getLocalMillis(), weekOfWeekyear));",0,0,0,5,10,0,6,0,0,6,95,5,0.249919863,0
defect4j,time,org/joda/time/LocalDate,6,1895,            iInstant = instant;,2,0,0,0,0,0,0,0,0,3,19,5,0.249919863,0
defect4j,time,org/joda/time/LocalDate,6,1896,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.249919863,0
defect4j,time,org/joda/time/LocalDate,6,1500,        return getChronology().weekOfWeekyear().get(getLocalMillis());,0,0,0,4,8,0,4,0,0,4,62,5,0.249919863,0
defect4j,time,org/joda/time/LocalDate,6,1763,"        return new Property(this, getChronology().weekyear());",0,0,0,3,6,0,2,1,0,3,54,5,0.249919863,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,3,1,1,1,2,0,0,0,0,6,40,4,0.248861912,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,4,8,0,3,2,0,6,49,4,0.248861912,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,1,0,0,0,0,0,0,0,0,1,16,4,0.248861912,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,1,1,0,1,3,0,0,0,0,2,19,4,0.248861912,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,112,            else if (edge == RectangleEdge.RIGHT) {,3,1,0,1,3,0,0,0,0,4,39,9,0.247232472,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,113,                this.rightBlock = block;,2,0,0,0,0,0,0,0,0,3,24,11,0.247232472,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,3,0,1,3,0,0,0,0,5,41,4,0.246376812,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,52,5,0.246376812,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.24137931,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,3,1,0,1,3,0,0,0,0,5,33,7,0.24137931,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,2,0,0,3,19,10,0.24137931,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.24137931,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,                        return i;,1,0,0,0,0,0,0,0,0,1,9,10,0.217391304,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,8,0.217391304,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,4,0.217391304,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,        int searchLen = searchChars.length;,3,0,0,0,0,0,0,0,0,3,35,5,0.217391304,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,        int csLen = cs.length();,1,0,0,1,2,0,2,0,0,3,24,5,0.217391304,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,6,0.217391304,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1378,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,0.217391304,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,5,0,0,6,53,4,0.217391304,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",3,0,0,1,2,0,4,0,0,8,66,4,0.214285714,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",3,0,0,1,2,0,4,0,0,8,67,4,0.214285714,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",3,0,0,1,2,0,4,0,0,8,66,4,0.214285714,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",3,0,0,1,2,0,4,0,0,8,63,4,0.214285714,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",3,0,0,1,2,0,4,0,0,8,60,4,0.214285714,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",3,0,0,1,2,0,4,0,0,8,66,4,0.214285714,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",3,0,0,1,2,0,4,0,0,8,81,4,0.214285714,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,3,1,0,0,0,0,0,0,0,4,38,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,3,2,0,1,3,0,0,0,0,5,45,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,1,1,0,1,3,0,0,0,0,2,21,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,1,1,0,1,3,0,0,0,0,2,21,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,5,1,0,2,4,0,4,0,0,10,62,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,5,1,0,2,4,0,4,0,0,10,65,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,5,1,0,2,4,0,4,0,0,10,77,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,5,1,0,2,4,0,4,0,0,10,76,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,5,1,0,2,4,0,4,0,0,10,68,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,5,1,0,2,4,0,4,0,0,10,68,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,5,1,0,2,4,0,4,0,0,10,83,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,1,1,0,1,3,0,0,0,0,2,26,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",1,1,0,1,2,0,3,0,0,6,34,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,2,1,0,1,3,0,0,0,0,3,28,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,2,5,0,4,0,0,5,47,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,1,1,0,1,3,0,0,0,0,2,20,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,1,0,0,1,2,0,3,0,0,4,30,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,1,0,0,1,2,0,3,0,0,4,34,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,0,10,0,0,10,96,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,1,0,0,1,2,0,3,1,0,5,46,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,1,0,0,2,4,0,2,1,0,4,33,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,1,0,0,1,2,0,3,1,0,5,48,4,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,1,0,0,2,4,0,2,1,0,4,37,5,0.214285714,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,1,0,0,2,4,0,2,1,0,4,30,4,0.214285714,0
defect4j,time,org/joda/time/chrono/GJChronology,6,596,"        return convertByWeekyear(instant, iGregorianChronology, iJulianChronology);",0,0,0,1,2,0,4,0,0,4,75,5,0.199914521,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,90,            if (value == iSkip) {,2,1,0,1,3,0,0,0,0,3,21,6,0.199914521,0
defect4j,time,org/joda/time/chrono/GJChronology,6,922,                return gregorianToJulianByWeekyear(instant);,0,0,0,1,2,0,2,0,0,2,44,8,0.199914521,0
defect4j,time,org/joda/time/chrono/GJChronology,6,96,"        newInstant = to.weekyear().set(0, from.weekyear().get(instant));",1,0,0,4,8,0,7,0,0,9,64,4,0.199914521,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,423,                    array[j-1] = t;,2,1,1,1,2,0,0,0,0,5,15,10,0.198798699,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,422,                    array[j] = array[j-1];,1,1,1,2,4,0,0,0,0,6,22,10,0.198798699,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,421,                    SavedField t = array[j];,1,0,1,1,2,0,0,1,0,4,24,10,0.198798699,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,1,3,0,1,2,0,2,0,0,6,38,4,0.198565666,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,662,            axis.addChangeListener(this);,0,0,0,1,2,0,2,0,0,2,29,7,0.19,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,661,            axis.configure();,0,0,0,1,2,0,2,0,0,2,17,7,0.19,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,657,            axis.setPlot(this);,0,0,0,1,2,0,2,0,0,2,19,7,0.19,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1689,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.173913043,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,351,            int offset = this.iZone.getOffsetFromLocal(instant);,2,0,0,1,2,0,2,0,0,4,52,6,0.16246316,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,352,            long diff = instant - offset;,3,1,0,0,0,0,0,0,0,4,29,6,0.16246316,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,354,            if ((instant ^ diff) < 0 && (instant ^ offset) < 0) {,4,5,0,3,7,0,0,0,0,9,53,5,0.16246316,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,357,            return offset;,1,0,0,0,0,0,0,0,0,1,14,5,0.16246316,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,60,            return instant;,1,0,0,0,0,0,0,0,0,1,15,6,0.158821696,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1462,                        return true;,0,0,0,0,0,0,0,0,0,1,12,12,0.157190635,0
defect4j,time,org/joda/time/MutableDateTime,3,351,"        super(year, monthOfYear, dayOfMonth,",3,0,0,0,1,0,0,0,0,3,36,4,0.153987338,0
defect4j,time,org/joda/time/chrono/GJChronology,6,346,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.153755743,0
defect4j,time,org/joda/time/chrono/GJChronology,6,335,        long instant = iGregorianChronology.getDateTimeMillis,1,0,0,0,0,0,2,0,0,3,53,5,0.153755743,0
defect4j,time,org/joda/time/chrono/GJChronology,6,337,        if (instant < iCutoverMillis) {,2,1,0,1,3,0,0,0,0,3,31,4,0.153755743,0
defect4j,time,org/joda/time/chrono/GJChronology,6,330,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.153755743,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,360,        return this.maxY;,1,0,0,0,0,0,0,0,0,1,17,5,0.146245059,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,345,        return this.minY;,1,0,0,0,0,0,0,0,0,1,17,5,0.146245059,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,183,"            return ImpreciseDateTimeField.this.add(instant, value);",1,0,0,1,2,0,3,0,0,4,55,6,0.14607657,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,10,7,0,1,3,0,0,0,0,17,111,10,0.142857143,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1444,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,5,0,0,6,53,4,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1447,        int csLength = cs.length();,1,0,0,1,2,0,2,0,0,3,27,5,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1449,        int csLast = csLength - 1;,2,1,0,0,0,0,0,0,0,3,26,5,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1454,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,8,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1450,        int searchLast = searchLength - 1;,2,1,0,0,0,0,0,0,0,3,34,5,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1467,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1452,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,7,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1453,            for (int j = 0; j < searchLength; j++) {,4,1,0,1,3,0,0,0,0,6,40,6,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1451,        for (int i = 0; i < csLength; i++) {,4,1,0,1,3,0,0,0,0,6,36,4,0.142857143,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1448,        int searchLength = searchChars.length;,3,0,0,0,0,0,0,0,0,3,38,5,0.142857143,0
defect4j,time,org/joda/time/chrono/GJChronology,6,974,            if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,5,0.142765558,0
defect4j,chart,org/jfree/data/time/SerialDate,9,500,            return false;,0,0,0,0,0,0,0,0,0,1,13,6,0.138888889,0
defect4j,chart,org/jfree/data/time/Day,9,123,"        this.serialDate = SerialDate.createInstance(day, month, year);",1,0,0,1,2,0,5,0,0,7,62,4,0.138888889,0
defect4j,chart,org/jfree/data/time/Day,9,122,"    public Day(int day, int month, int year) {",4,0,0,1,3,1,0,0,0,5,42,2,0.138888889,0
defect4j,chart,org/jfree/data/time/Day,9,124,        peg(Calendar.getInstance());,0,0,0,2,4,0,3,0,0,3,28,5,0.138888889,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,972,            dtx = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.134295204,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,977,        return dtx;,1,0,0,0,0,0,0,0,0,1,11,4,0.134295204,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,971,        if (dtx == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.134295204,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,431,                r = getDefaultAutoRange();,1,0,0,1,2,0,1,0,0,3,26,8,0.132142857,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,935,        if (ttx == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.121760112,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,936,            ttx = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.121760112,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,941,        return ttx;,1,0,0,0,0,0,0,0,0,1,11,4,0.121760112,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,938,        return appendShortText(DateTimeFieldType.dayOfWeek());,0,0,0,2,4,0,3,0,0,3,54,5,0.118080657,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,458,                rowData.removeValue(columnKey);,0,0,0,1,2,0,3,0,0,3,31,7,0.117384844,1
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,455,        Iterator iterator = this.rows.iterator();,2,0,0,1,2,0,1,1,0,4,41,4,0.117384844,1
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,460,        this.columnKeys.remove(columnKey);,1,0,0,1,2,0,2,0,0,3,34,5,0.117384844,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,457,            DefaultKeyedValues rowData = (DefaultKeyedValues) iterator.next();,1,0,0,2,4,0,2,2,0,5,66,6,0.117384844,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,456,        while (iterator.hasNext()) {,0,0,0,2,5,0,2,0,0,2,28,5,0.117384844,0
defect4j,time,org/joda/time/DateTime,17,331,"        super(year, monthOfYear, dayOfMonth,",3,0,0,0,1,0,0,0,0,3,36,4,0.117163578,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,898,            tx = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,35,6,0.116322094,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,903,        return tx;,1,0,0,0,0,0,0,0,0,1,10,4,0.116322094,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,897,        if (tx == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.116322094,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,452,            if (SerialDate.isLeapYear(y)) {,0,0,0,2,5,0,3,0,0,3,31,7,0.114285714,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,936,            axis.addChangeListener(this);,0,0,0,1,2,0,2,0,0,2,29,7,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,652,        CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);,2,0,0,2,4,0,2,2,0,6,66,4,0.1140625,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,1027,        return this.defaultAutoRange;,1,0,0,0,0,0,0,0,0,1,29,5,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,660,        if (axis != null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,665,            notifyListeners(new PlotChangeEvent(this));,0,0,0,2,4,0,1,1,0,2,43,7,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,664,        if (notify) {,1,0,0,1,3,0,0,0,0,1,13,4,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,640,"        setDomainAxis(index, axis, true);",0,0,0,1,2,0,3,0,0,4,33,5,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,653,        if (existing != null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,931,            axis.setPlot(this);,0,0,0,1,2,0,2,0,0,2,19,7,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,656,        if (axis != null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,659,"        this.domainAxes.set(index, axis);",1,0,0,1,2,0,3,0,0,4,33,5,0.1140625,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,935,            axis.configure();,0,0,0,1,2,0,2,0,0,2,17,7,0.1140625,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1443,            hms = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.111343627,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1442,        if (hms == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.111343627,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1449,        return hms;,1,0,0,0,0,0,0,0,0,1,11,4,0.111343627,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,3,2,0,0,1,0,0,0,0,5,35,6,0.106382979,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,2,0,0,0,0,0,0,0,0,4,27,6,0.106382979,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,0,0,4,23,6,0.106382979,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,1,1,0,1,3,0,0,0,0,2,18,4,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,0,0,0,0,2,24,5,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,0,0,0,0,7,40,5,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,4,1,0,1,3,0,0,0,0,6,34,7,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,2,1,0,1,3,0,0,0,0,3,20,4,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,3,7,0,3,0,0,8,38,9,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,3,2,0,0,0,0,0,0,0,5,28,5,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,3,3,0,1,3,0,0,0,0,6,40,4,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,0,5,47,4,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,1,0,0,0,0,0,0,0,0,1,15,11,0.105882353,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,1,0,0,0,0,0,0,0,0,1,9,7,0.105882353,0
defect4j,time,org/joda/time/MutableDateTime,16,1224,        return ISODateTimeFormat.dateTime().print(this);,0,0,0,2,4,0,3,0,0,3,48,5,0.101216489,0
defect4j,time,org/joda/time/DateTime,17,1098,        if (hours == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.099506849,0
defect4j,time,org/joda/time/DateTime,17,1101,"        long instant = getChronology().hours().add(getMillis(), hours);",1,0,0,4,8,0,5,0,0,6,63,5,0.099506849,0
defect4j,time,org/joda/time/DateTime,17,1102,        return withMillis(instant);,0,0,0,1,2,0,2,0,0,2,27,5,0.099506849,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,162,        this.width = width;,2,0,0,0,0,0,0,0,0,3,19,4,0.096678967,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,186,        this.height = height;,2,0,0,0,0,0,0,0,0,3,21,4,0.096678967,0
defect4j,chart,org/jfree/chart/block/EmptyBlock,13,72,        setHeight(height);,0,0,0,1,2,0,2,0,0,2,18,5,0.096678967,0
defect4j,chart,org/jfree/chart/block/EmptyBlock,13,71,        setWidth(width);,0,0,0,1,2,0,2,0,0,2,16,5,0.096678967,0
defect4j,chart,org/jfree/chart/block/EmptyBlock,13,70,"    public EmptyBlock(double width, double height) {",3,0,0,1,3,1,0,0,0,4,48,2,0.096678967,0
defect4j,chart,org/jfree/data/time/Day,9,302,        return this.serialDate.toSerial();,1,0,0,1,2,0,1,0,0,2,34,5,0.095833333,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,433,        TimeSeriesDataItem dummy = new TimeSeriesDataItem(,1,0,0,0,1,0,0,2,0,3,50,4,0.095833333,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,430,        if (period == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.095833333,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,435,"        return Collections.binarySearch(this.data, dummy);",1,0,0,1,2,0,3,0,0,4,50,5,0.095833333,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,514,"        return append0(new TextField(fieldType, true));",1,0,0,2,4,0,1,1,0,4,47,5,0.09275735,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,511,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.09275735,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,315,            int offset = getOffsetToAdd(instant);,1,0,0,1,2,0,2,0,0,3,37,6,0.092478764,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,316,"            instant = iField.add(instant + offset, value);",3,1,0,1,2,0,3,0,0,8,46,5,0.092478764,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,317,            return instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant));,3,1,0,2,4,0,2,0,0,6,79,5,0.092478764,0
defect4j,time,org/joda/time/LocalDate,6,1819,        return ISODateTimeFormat.date().print(this);,0,0,0,2,4,0,3,0,0,3,44,5,0.090811955,0
defect4j,time,org/joda/time/MutableDateTime,3,1229,        return ISODateTimeFormat.dateTime().print(this);,0,0,0,2,4,0,3,0,0,3,48,5,0.090562815,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1612,            if (prev > Long.MIN_VALUE) {,3,1,0,1,3,0,0,0,0,4,28,5,0.088711046,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1613,                return prev - 1;,1,1,0,0,0,0,0,0,0,2,16,7,0.088711046,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1611,            long prev = transitions[i - 1];,2,1,1,1,2,0,0,0,0,4,31,6,0.088711046,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,202,            return iNextInfo.getOffset(millis);,0,0,0,1,2,0,3,0,0,3,35,6,0.08525711,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",1,0,0,2,5,0,9,0,0,11,96,12,0.083333333,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,1,0,0,0,0,0,0,0,0,3,26,11,0.083333333,0
defect4j,time,org/joda/time/LocalDate,6,1202,        if (years == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.083235388,0
defect4j,time,org/joda/time/LocalDate,6,1205,"        long instant = getChronology().years().add(getLocalMillis(), years);",1,0,0,4,8,0,5,0,0,6,68,5,0.083235388,0
defect4j,chart,org/jfree/data/time/Day,9,183,        return this.serialDate;,1,0,0,0,0,0,0,0,0,1,23,5,0.081481481,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,211,        return this.serial;,1,0,0,0,0,0,0,0,0,1,19,5,0.081481481,0
defect4j,chart,org/jfree/data/time/Day,9,423,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.081481481,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,308,        return this.serial - other.toSerial();,1,1,0,1,2,0,2,0,0,4,38,4,0.081481481,0
defect4j,chart,org/jfree/data/time/Day,9,406,            result = -d.getSerialDate().compare(this.serialDate);,2,0,0,2,4,0,3,0,0,7,53,6,0.081481481,0
defect4j,chart,org/jfree/data/time/Day,9,404,        if (o1 instanceof Day) {,1,0,0,1,3,0,0,1,0,2,24,5,0.081481481,0
defect4j,chart,org/jfree/data/time/Day,9,405,            Day d = (Day) o1;,2,0,0,1,2,0,0,2,0,4,17,6,0.081481481,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,342,            long sum = instant + offset;,3,1,0,0,0,0,0,0,0,4,28,6,0.079792074,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,341,            int offset = this.iZone.getOffset(instant);,2,0,0,1,2,0,2,0,0,4,43,6,0.079792074,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,347,            return offset;,1,0,0,0,0,0,0,0,0,1,14,5,0.079792074,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,344,            if ((instant ^ sum) < 0 && (instant ^ offset) >= 0) {,4,5,0,3,7,0,0,0,0,9,53,5,0.079792074,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,926,        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);,2,0,0,2,4,0,2,2,0,6,59,4,0.079545455,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,934,        if (axis != null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.079545455,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,914,"        setRangeAxis(index, axis, true);",0,0,0,1,2,0,3,0,0,4,32,5,0.079545455,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3151,        else if (axis == getRangeAxis()) {,1,1,0,2,5,0,1,0,0,3,34,5,0.079545455,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,927,        if (existing != null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.079545455,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,933,"        this.rangeAxes.set(index, axis);",1,0,0,1,2,0,3,0,0,4,32,5,0.079545455,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,930,        if (axis != null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.079545455,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,939,            notifyListeners(new PlotChangeEvent(this));,0,0,0,2,4,0,1,1,0,2,43,7,0.079545455,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,938,        if (notify) {,1,0,0,1,3,0,0,0,0,1,13,4,0.079545455,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,this.classLoader = classLoader;,2,0,0,0,0,0,0,0,0,3,31,5,0.079069767,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,264,String name = desc.getName();,1,0,0,1,2,0,2,1,0,4,29,5,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,T readObject = (T) in.readObject();,1,0,0,2,4,0,2,2,0,5,35,6,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,2,0,0,1,2,0,0,2,0,4,65,4,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,ClassLoaderAwareObjectInputStream in = null;,1,0,0,0,0,0,0,1,0,2,44,4,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,super(in);,1,0,0,1,2,0,0,0,0,1,10,5,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266," return Class.forName(name, false, classLoader);",0,0,0,1,2,0,4,0,0,5,47,8,0.079069767,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",2,0,0,3,6,0,3,1,0,7,85,6,0.079069767,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1784,            return estimatePrintedLength();,0,0,0,1,2,0,1,0,0,1,31,6,0.07553696,0
defect4j,chart,org/jfree/data/time/Day,9,341,        int day = this.serialDate.getDayOfMonth();,2,0,0,1,2,0,1,0,0,3,42,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,340,        int month = this.serialDate.getMonth();,2,0,0,1,2,0,1,0,0,3,39,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,343,"        calendar.set(year, month - 1, day, 23, 59, 59);",1,1,0,1,2,0,4,0,0,6,47,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,342,        calendar.clear();,0,0,0,1,2,0,2,0,0,2,17,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,344,"        calendar.set(Calendar.MILLISECOND, 999);",2,0,0,1,2,0,2,0,0,4,40,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,346,        return calendar.getTime().getTime();,0,0,0,2,4,0,3,0,0,3,36,5,0.07,0
defect4j,chart,org/jfree/data/time/SerialDate,9,210,    protected SerialDate() {,1,0,0,1,3,1,0,0,0,2,24,2,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,240,        return this.month;,1,0,0,0,0,0,0,0,0,1,18,5,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,249,        return this.day;,1,0,0,0,0,0,0,0,0,1,16,5,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,129,            this.day = day;,2,0,0,0,0,0,0,0,0,3,15,6,0.07,0
defect4j,chart,org/jfree/data/time/SerialDate,9,526,        final int leap4 = (yyyy - 1896) / 4;,2,2,0,1,2,1,0,0,0,5,36,4,0.07,0
defect4j,chart,org/jfree/data/time/SerialDate,9,527,        final int leap100 = (yyyy - 1800) / 100;,2,2,0,1,2,1,0,0,0,5,40,4,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,251,        this.lastMillisecond = getLastMillisecond(calendar);,1,0,0,1,2,0,2,0,0,4,52,4,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,322,"        calendar.set(Calendar.MILLISECOND, 0);",2,0,0,1,2,0,2,0,0,4,38,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,321,"        calendar.set(year, month - 1, day, 0, 0, 0);",1,1,0,1,2,0,4,0,0,6,44,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,320,        calendar.clear();,0,0,0,1,2,0,2,0,0,2,17,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,324,        return calendar.getTime().getTime();,0,0,0,2,4,0,3,0,0,3,36,5,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,107,"    public SpreadsheetDate(final int day, final int month, final int year) {",4,0,0,1,3,4,0,0,0,8,72,2,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,109,        if ((year >= 1900) && (year <= 9999)) {,2,3,0,3,7,0,0,0,0,5,39,4,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,317,        int year = this.serialDate.getYYYY();,2,0,0,1,2,0,1,0,0,3,37,5,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,339,        int year = this.serialDate.getYYYY();,2,0,0,1,2,0,1,0,0,3,37,5,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,110,            this.year = year;,2,0,0,0,0,0,0,0,0,3,17,6,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,118,        if ((month >= MonthConstants.JANUARY),3,1,0,1,3,0,0,0,0,4,37,6,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,457,        return yy + mm + dd + 1;,3,1,0,0,0,0,0,0,0,4,24,4,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,456,        final int dd = d;,2,0,0,0,0,1,0,0,0,3,17,4,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,451,        if (m > MonthConstants.FEBRUARY) {,3,1,0,1,3,0,0,0,0,4,34,4,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,450,        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];,3,0,1,1,2,0,0,0,0,4,64,5,0.07,0
defect4j,chart,org/jfree/data/time/SerialDate,9,529,        return leap4 - leap100 + leap400;,3,2,0,0,0,0,0,0,0,5,33,4,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,319,        int day = this.serialDate.getDayOfMonth();,2,0,0,1,2,0,1,0,0,3,42,5,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,231,        return this.year;,1,0,0,0,0,0,0,0,0,1,17,5,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,128,"        if ((day >= 1) && (day <= SerialDate.lastDayOfMonth(month, year))) {",2,3,0,4,9,0,4,0,0,9,68,4,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,120,            this.month = month;,2,0,0,0,0,0,0,0,0,3,19,6,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,449,        final int yy = ((y - 1900) * 365) + SerialDate.leapYearCount(y - 1);,3,4,0,3,6,1,2,0,0,10,68,4,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,250,        this.firstMillisecond = getFirstMillisecond(calendar);,1,0,0,1,2,0,2,0,0,4,54,4,0.07,0
defect4j,chart,org/jfree/data/time/SpreadsheetDate,9,136,"        this.serial = calcSerial(day, month, year);",1,0,0,1,2,0,4,0,0,6,43,4,0.07,0
defect4j,chart,org/jfree/data/time/Day,9,318,        int month = this.serialDate.getMonth();,2,0,0,1,2,0,1,0,0,3,39,5,0.07,0
defect4j,chart,org/jfree/data/time/SerialDate,9,499,        if ((yyyy % 4) != 0) {,1,2,0,2,5,0,0,0,0,3,22,4,0.07,0
defect4j,chart,org/jfree/data/time/SerialDate,9,792,"        return new SpreadsheetDate(day, month, yyyy);",3,0,0,1,2,0,0,1,0,4,45,5,0.07,0
defect4j,chart,org/jfree/data/time/SerialDate,9,528,        final int leap400 = (yyyy - 1600) / 400;,2,2,0,1,2,1,0,0,0,5,40,4,0.07,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,190,                    dayOfYear++;,1,0,0,0,0,0,0,0,0,2,12,10,0.069562806,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1717,            iFieldType = fieldType;,2,0,0,0,0,0,0,0,0,3,23,5,0.068168052,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1718,            iShort = isShort;,2,0,0,0,0,0,0,0,0,3,17,5,0.068168052,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1710,"        private static Map<Locale, Map<DateTimeFieldType, Object[]>> cParseCache =",1,0,0,1,2,2,0,5,0,8,74,3,0.068168052,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1722,            return iShort ? 6 : 20;,1,0,0,0,0,0,0,0,0,1,23,6,0.068168052,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,46,"                buf.append(""is not supported"");",0,0,0,1,2,0,2,0,0,3,31,9,0.066566941,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,506,        } else if (week > 51) {,1,1,0,1,4,0,0,0,0,2,23,5,0.066076692,0
defect4j,time,org/joda/time/LocalDate,6,1042,"        return (newMillis == getLocalMillis() ? this : new LocalDate(newMillis, getChronology()));",2,1,0,4,8,0,2,1,0,6,90,6,0.066076692,0
defect4j,time,org/joda/time/LocalDate,6,1041,        newMillis = iChronology.dayOfMonth().roundFloor(newMillis);,1,0,0,2,4,0,4,0,0,6,59,4,0.066076692,0
defect4j,time,org/joda/time/MutableDateTime,16,454,        switch (iRoundingMode) {,1,0,0,1,3,0,0,0,0,1,24,4,0.065265148,0
defect4j,time,org/joda/time/base/BaseDateTime,16,317,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.065265148,0
defect4j,time,org/joda/time/MutableDateTime,16,474,        super.setMillis(instant);,2,0,0,1,2,0,0,0,0,2,25,5,0.065265148,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.064179375,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,2,1,0,2,4,0,2,0,0,6,43,6,0.064179375,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,126,            append(str);,0,0,0,1,2,0,2,0,0,2,12,7,0.064179375,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,80,                throw new IllegalFieldValueException,0,0,0,0,0,0,0,1,0,1,36,10,0.062399829,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,94,            value++;,1,0,0,0,0,0,0,0,0,2,8,6,0.062399829,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",2,1,0,1,2,0,6,0,0,9,72,5,0.061176471,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,2,0,0,0,0,0,0,0,0,3,12,4,0.061176471,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,0,3,0,0,3,51,5,0.06107739,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,142,"        this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,",3,0,0,0,1,0,0,0,0,3,65,4,0.060606061,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,202,        return iLocale;,1,0,0,0,0,0,0,0,0,1,15,4,0.060460235,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,188,        if (locale == getLocale() || (locale != null && locale.equals(getLocale()))) {,2,4,0,5,11,0,4,0,0,12,78,4,0.060460235,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,191,"        return new DateTimeFormatter(iPrinter, iParser, locale,",3,0,0,0,1,0,0,1,0,4,55,5,0.060460235,0
defect4j,time,org/joda/time/LocalDate,6,558,        return fieldType.getField(getChronology()).get(getLocalMillis());,0,0,0,4,8,0,5,0,0,5,65,5,0.058722966,0
defect4j,time,org/joda/time/MutableDateTime,3,764,"            setMillis(getChronology().days().add(getMillis(), days));",0,0,0,5,10,0,6,0,0,6,57,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,702,"            setMillis(getChronology().months().add(getMillis(), months));",0,0,0,5,10,0,6,0,0,6,61,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,639,"            setMillis(type.getField(getChronology()).add(getMillis(), amount));",0,0,0,5,10,0,7,0,0,7,67,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,723,"            setMillis(getChronology().weeks().add(getMillis(), weeks));",0,0,0,5,10,0,6,0,0,6,59,5,0.058681421,1
defect4j,time,org/joda/time/MutableDateTime,3,660,"            setMillis(getChronology().years().add(getMillis(), years));",0,0,0,5,10,0,6,0,0,6,59,5,0.058681421,1
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,94,            return instant; // the easy case,1,0,0,0,0,0,0,0,0,1,32,6,0.058681421,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,2,0,0,0,0,0,0,0,0,4,29,6,0.057142857,0
defect4j,time,org/joda/time/LocalDate,6,552,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.055454643,0
defect4j,time,org/joda/time/LocalDate,6,555,        if (isSupported(fieldType) == false) {,0,1,0,2,5,0,2,0,0,4,38,4,0.055454643,0
defect4j,time,org/joda/time/MutableDateTime,3,454,        switch (iRoundingMode) {,1,0,0,1,3,0,0,0,0,1,24,4,0.055280431,0
defect4j,time,org/joda/time/base/BaseDateTime,3,317,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.055280431,0
defect4j,time,org/joda/time/MutableDateTime,3,473,        super.setMillis(instant);,2,0,0,1,2,0,0,0,0,2,25,5,0.055280431,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,164,        return -1;,0,0,0,0,0,0,0,0,0,1,10,4,0.052822581,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,143,                Day.class);,0,0,0,0,1,0,0,1,0,1,11,6,0.052777778,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,152,        return iZone;,1,0,0,0,0,0,0,0,0,1,13,4,0.050524432,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2158,                buf.append('+');,0,0,0,1,2,0,2,0,0,3,16,8,0.05039395,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.048558422,0
defect4j,time,org/joda/time/LocalDate,6,577,            return type.getField(getChronology()).isSupported();,0,0,0,3,6,0,4,0,0,4,52,7,0.047517287,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,357,            return jan1millis - (jan1dayOfWeek - 1),2,2,0,1,2,0,0,0,0,4,39,6,0.04677316,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1964,                        buf.append('0');,0,0,0,1,2,0,2,0,0,3,16,12,0.04653675,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1962,                if (buf != null) {,1,1,0,1,3,0,0,0,0,2,18,7,0.04653675,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1963,                    while (--minDigits >= 0) {,1,1,0,1,3,0,0,0,0,3,26,9,0.04653675,0
defect4j,chart,org/jfree/data/time/SerialDate,9,137,    static final int[] LAST_DAY_OF_MONTH =,1,0,0,1,2,2,0,0,0,3,38,2,0.046153846,0
defect4j,chart,org/jfree/data/time/SerialDate,9,92,        DATE_FORMAT_SYMBOLS = new SimpleDateFormat().getDateFormatSymbols();,1,0,0,2,4,0,1,1,0,3,68,3,0.046153846,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,203,        if (o1 instanceof TimeSeriesDataItem) {,1,0,0,1,3,0,0,1,0,2,39,5,0.046153846,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,204,            TimeSeriesDataItem datapair = (TimeSeriesDataItem) o1;,2,0,0,1,2,0,0,2,0,4,54,6,0.046153846,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,205,            result = getPeriod().compareTo(datapair.getPeriod());,1,0,0,3,6,0,4,0,0,6,53,6,0.046153846,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,215,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.046153846,0
defect4j,chart,org/jfree/data/time/SerialDate,9,149,    static final int[] LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_MONTH =,1,0,0,1,2,2,0,0,0,3,61,2,0.046153846,0
defect4j,chart,org/jfree/data/time/SerialDate,9,141,    static final int[] AGGREGATE_DAYS_TO_END_OF_MONTH =,1,0,0,1,2,2,0,0,0,3,51,2,0.046153846,0
defect4j,chart,org/jfree/data/time/SerialDate,9,145,    static final int[] AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH =,1,0,0,1,2,2,0,0,0,3,61,2,0.046153846,0
defect4j,chart,org/jfree/data/time/SerialDate,9,546,            return result;,1,0,0,0,0,0,0,0,0,1,14,6,0.046153846,0
defect4j,chart,org/jfree/data/time/SerialDate,9,544,        final int result = LAST_DAY_OF_MONTH[month];,1,0,1,1,2,1,0,0,0,4,44,4,0.046153846,0
defect4j,chart,org/jfree/data/time/SerialDate,9,545,        if (month != FEBRUARY) {,2,1,0,1,3,0,0,0,0,3,24,4,0.046153846,0
defect4j,chart,org/jfree/data/time/SerialDate,9,156,        LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH =,1,0,0,0,0,0,0,0,0,1,52,3,0.046153846,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,6,111,        return value > 52 ? getMaximumValue(instant) : 52;,1,1,0,1,2,0,2,0,0,4,50,5,0.045352553,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,410,            year--;,1,0,0,0,0,0,0,0,0,2,7,6,0.04521565,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,486,                    builder.appendMonthOfYear(tokenLen);,0,0,0,1,2,0,3,0,0,3,36,10,0.044281305,0
defect4j,time,org/joda/time/LocalDate,6,458,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.044224128,0
defect4j,time,org/joda/time/LocalDate,6,457,"        long instant = chronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, 0);",1,0,0,1,2,0,5,0,0,6,78,5,0.044224128,0
defect4j,time,org/joda/time/LocalDate,6,459,        iLocalMillis = instant;,2,0,0,0,0,0,0,0,0,3,23,4,0.044224128,0
defect4j,time,org/joda/time/LocalDate,6,456,        chronology = DateTimeUtils.getChronology(chronology).withUTC();,1,0,0,2,4,0,4,0,0,6,63,4,0.044224128,0
defect4j,time,org/joda/time/chrono/GJChronology,6,882,                instant = iJulianField.roundFloor(instant);,1,0,0,1,2,0,3,0,0,5,43,7,0.044015512,0
defect4j,time,org/joda/time/MutableDateTime,3,636,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.04366038,0
defect4j,time,org/joda/time/LocalDate,6,574,        if (DATE_DURATION_TYPES.contains(durType) ||,0,1,0,1,3,0,3,0,0,4,44,4,0.043376057,0
defect4j,time,org/joda/time/LocalDate,6,573,        DurationFieldType durType = type.getDurationType();,1,0,0,1,2,0,2,1,0,4,51,4,0.043376057,0
defect4j,time,org/joda/time/LocalDate,6,570,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.043376057,0
defect4j,time,org/joda/time/LocalDate,6,610,        return iLocalMillis;,1,0,0,0,0,0,0,0,0,1,20,4,0.043001205,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,3,7,0,3,7,0,0,0,0,10,72,4,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,1,0,0,0,0,0,0,0,0,1,8,5,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,1,1,0,1,3,0,0,0,0,2,12,4,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,3,2,0,1,2,0,0,0,0,6,14,6,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,3,1,0,2,4,0,0,0,0,6,37,4,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,4,3,0,3,6,0,0,0,0,8,38,5,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,3,1,0,2,4,0,0,0,0,6,37,4,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,1,2,0,2,5,0,0,0,0,3,39,6,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,2,0,0,0,0,0,0,0,0,4,7,8,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,1,1,0,1,3,0,0,0,0,2,10,6,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,2,0,0,0,0,0,0,0,0,3,6,8,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,1,1,0,1,3,0,0,0,0,2,15,4,0.042553191,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,2,0,1,2,0,0,0,0,5,33,4,0.042553191,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,91,                throw new IllegalFieldValueException,0,0,0,0,0,0,0,1,0,1,36,10,0.04156427,0
defect4j,time,org/joda/time/chrono/GJChronology,6,99,"        newInstant = to.millisOfDay().set(newInstant, from.millisOfDay().get(instant));",1,0,0,4,8,0,8,0,0,10,79,4,0.04156427,0
defect4j,time,org/joda/time/chrono/GJChronology,6,98,"        newInstant = to.dayOfWeek().set(newInstant, from.dayOfWeek().get(instant));",1,0,0,4,8,0,8,0,0,10,75,4,0.04156427,0
defect4j,time,org/joda/time/chrono/GJChronology,6,97,"        newInstant = to.weekOfWeekyear().set(newInstant, from.weekOfWeekyear().get(instant));",1,0,0,4,8,0,8,0,0,10,85,4,0.04156427,0
defect4j,time,org/joda/time/chrono/GJChronology,6,100,        return newInstant;,1,0,0,0,0,0,0,0,0,1,18,4,0.04156427,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,384,            if (offset != iZone.getOffset(millis)) {,1,1,0,2,5,0,3,0,0,5,40,7,0.040666863,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,382,            int offset = iZone.getOffsetFromLocal(millis);,1,0,0,1,2,0,3,0,0,4,46,8,0.040666863,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,383,            millis -= offset;,2,0,0,0,0,0,0,0,0,3,17,7,0.040666863,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,381,        } else if (iZone != null) {,1,1,0,1,4,0,0,0,0,2,27,5,0.040666863,0
defect4j,time,org/joda/time/LocalDate,6,619,        return iChronology;,1,0,0,0,0,0,0,0,0,1,19,4,0.03945434,0
defect4j,time,org/joda/time/base/BaseDateTime,3,223,"        this(year, monthOfYear, dayOfMonth, hourOfDay,",4,0,0,0,1,0,0,0,0,4,46,4,0.038476127,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,479,                if (tokenLen >= 3) {,1,1,0,1,3,0,0,0,0,2,20,7,0.038359135,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,690,        return this.categoryKeys.length;,2,0,0,0,0,0,0,0,0,2,32,5,0.03785489,0
defect4j,time,org/joda/time/base/AbstractInstant,17,71,        return getChronology().getZone();,0,0,0,2,4,0,2,0,0,2,33,5,0.037208581,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,415,                oneYear = DateTimeConstants.MILLIS_PER_DAY * 366L;,3,1,0,0,0,0,0,0,0,5,50,9,0.036971425,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2183,            if (displayOffset == 0 && iMinFields <= 2) {,2,3,0,1,3,0,0,0,0,5,44,5,0.036948851,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2182,            displayOffset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;,4,1,0,0,0,0,0,0,0,6,63,5,0.036948851,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,509,            return year;,1,0,0,0,0,0,0,0,0,1,12,7,0.036934145,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2176,                buf.append(':');,0,0,0,1,2,0,2,0,0,3,16,8,0.036786345,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2157,            if (displayOffset >= 0) {,1,1,0,1,3,0,0,0,0,2,25,5,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2178,"            FormatUtils.appendPaddedInteger(buf, minutes, 2);",0,0,0,1,2,0,4,0,0,4,49,6,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2179,            if (iMaxFields == 2) {,1,1,0,1,3,0,0,0,0,2,22,5,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2170,            if (displayOffset == 0 && iMinFields <= 1) {,2,3,0,1,3,0,0,0,0,5,44,5,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2174,            int minutes = displayOffset / DateTimeConstants.MILLIS_PER_MINUTE;,4,1,0,0,0,0,0,0,0,5,66,6,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2175,            if (iShowSeparators) {,1,0,0,1,3,0,0,0,0,1,22,5,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2169,            displayOffset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR;,4,1,0,1,2,0,0,0,0,6,64,5,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2166,            if (iMaxFields == 1) {,1,1,0,1,3,0,0,0,0,2,22,5,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2165,"            FormatUtils.appendPaddedInteger(buf, hours, 2);",0,0,0,1,2,0,4,0,0,4,47,6,0.036625209,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2164,            int hours = displayOffset / DateTimeConstants.MILLIS_PER_HOUR;,4,1,0,0,0,0,0,0,0,5,62,6,0.036625209,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,6,0,0,9,43,4,0.035460993,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,593,            } else if (iMode == 's') {,1,1,0,1,4,0,0,0,0,3,26,6,0.035233943,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,596,                offset = 0;,1,0,0,0,0,0,0,0,0,2,11,8,0.035233943,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,768,"            return iOfYear.previous(instant, standardOffset, saveMillis);",0,0,0,1,2,0,5,0,0,5,61,6,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1268,                end = endRecurrence.previous,1,0,0,0,0,0,2,0,0,4,28,7,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1270,                if (instant < 0 && end > 0) {,2,3,0,1,3,0,0,0,0,5,29,7,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1255,                if (instant < 0 && start > 0) {,2,3,0,1,3,0,0,0,0,5,31,7,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,591,            if (iMode == 'w') {,1,1,0,1,3,0,0,0,0,3,19,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,609,            if (iDayOfWeek == 0) {,1,1,0,1,3,0,0,0,0,2,22,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1244,            instant++;,1,0,0,0,0,0,0,0,0,2,10,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1248,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,3,42,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,615,"                prev = setDayOfWeek(chrono, prev);",1,0,0,1,2,0,3,0,0,5,34,7,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,616,                if (prev >= instant) {,2,1,0,1,3,0,0,0,0,3,22,7,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,603,"            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);",1,0,0,2,4,0,5,0,0,6,60,6,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,602,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,4,51,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,600,            instant += offset;,2,0,0,0,0,0,0,0,0,3,18,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,607,"            prev = setDayOfMonthPrevious(chrono, prev);",1,0,0,1,2,0,3,0,0,5,43,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,606,"            prev = chrono.millisOfDay().add(prev, iMillisOfDay);",1,0,0,2,4,0,5,0,0,7,52,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,605,"            prev = chrono.millisOfDay().set(prev, 0);",1,0,0,2,4,0,4,0,0,6,41,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1282,            return ((start > end) ? start : end) - 1;,4,2,0,2,4,0,0,0,0,6,41,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,702,            return prev;,1,0,0,0,0,0,0,0,0,1,12,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,625,            return prev - offset;,2,1,0,0,0,0,0,0,0,3,21,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1609,                long prev = iTailZone.previousTransition(instant);,1,0,0,1,2,0,3,0,0,4,50,8,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1610,                if (prev < instant) {,2,1,0,1,3,0,0,0,0,3,21,7,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1611,                    return prev;,1,0,0,0,0,0,0,0,0,1,12,9,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,691,"                prev = setDayOfMonth(chrono, prev);",1,0,0,1,2,0,3,0,0,5,35,7,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1247,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,3,46,5,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1246,            int standardOffset = iStandardOffset;,2,0,0,0,0,0,0,0,0,2,37,6,0.035085616,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1253,                start = startRecurrence.previous,1,0,0,0,0,0,2,0,0,4,32,7,0.035085616,0
defect4j,time,org/joda/time/chrono/GJChronology,6,992,            return instant;,1,0,0,0,0,0,0,0,0,1,15,5,0.033230046,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,45,            if (upperBound == null) {,1,1,0,1,3,0,0,0,0,2,25,6,0.033230046,0
defect4j,time,org/joda/time/chrono/GJChronology,6,1099,"            return iField.add(instant, value);",0,0,0,1,2,0,4,0,0,4,34,6,0.033230046,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,725,        return Constants.dt;,2,0,0,0,0,0,0,0,0,2,20,5,0.032735987,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1913,"                printTo(buf, null, instant, chrono);",0,0,0,1,2,0,4,0,0,5,36,7,0.032607161,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,241,        int result = -1;,1,0,0,0,0,0,0,0,0,2,16,5,0.032597266,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,242,        for (int i = 0; i < this.seriesKeys.length; i++) {,5,1,0,1,3,0,0,0,0,7,50,4,0.032597266,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1608,            if (iTailZone != null) {,1,1,0,1,3,0,0,0,0,2,24,5,0.032352406,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1531,                return iWallOffsets[i];,0,0,1,1,2,0,0,0,0,2,23,8,0.032256905,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1924,                if (buf != null) {,1,1,0,1,3,0,0,0,0,2,18,7,0.032162293,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1925,                    while (--minDigits >= 0) {,1,1,0,1,3,0,0,0,0,3,26,9,0.032162293,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1926,                        buf.append('0');,0,0,0,1,2,0,2,0,0,3,16,12,0.032162293,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2153,            if (displayOffset == 0 && iZeroOffsetPrintText != null) {,2,3,0,1,3,0,0,0,0,5,57,5,0.032101438,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2150,            if (displayZone == null) {,1,1,0,1,3,0,0,0,0,2,26,5,0.032101438,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,473,            domainAxis.setPlot(this);,0,0,0,1,2,0,2,0,0,2,25,7,0.032005495,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,474,            domainAxis.addChangeListener(this);,0,0,0,1,2,0,2,0,0,2,35,7,0.032005495,0
defect4j,time,org/joda/time/chrono/GJChronology,6,124,"        return getInstance(DateTimeZone.UTC, DEFAULT_CUTOVER, 4);",2,0,0,1,2,0,2,0,0,4,57,5,0.031303542,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2667,                locale = Locale.getDefault();,1,0,0,1,2,0,2,0,0,4,29,7,0.031251694,0
defect4j,time,org/joda/time/format/FormatUtils,3,68,            for (; size > 2; size--) {,2,1,0,1,3,0,0,0,0,4,26,7,0.031251694,0
defect4j,time,org/joda/time/format/FormatUtils,3,77,            buf.append((char) (value - (d << 3) - (d << 1) + '0'));,3,4,0,5,10,0,2,0,0,10,55,8,0.031251694,0
defect4j,time,org/joda/time/format/FormatUtils,3,74,            int d = ((value + 1) * 13421772) >> 27;,2,3,0,2,4,0,0,0,0,5,39,8,0.031251694,0
defect4j,time,org/joda/time/format/FormatUtils,3,75,            buf.append((char) (d + '0'));,1,1,0,3,6,0,2,0,0,5,29,8,0.031251694,0
defect4j,chart,org/jfree/data/time/Day,9,96,        DATE_FORMAT_LONG = DateFormat.getDateInstance(DateFormat.LONG);,3,0,0,1,2,0,2,0,0,5,63,3,0.03125,0
defect4j,chart,org/jfree/data/time/Day,9,92,        DATE_FORMAT_MEDIUM = DateFormat.getDateInstance(DateFormat.MEDIUM);,3,0,0,1,2,0,2,0,0,5,67,3,0.03125,0
defect4j,chart,org/jfree/data/time/Day,9,88,        DATE_FORMAT_SHORT = DateFormat.getDateInstance(DateFormat.SHORT);,3,0,0,1,2,0,2,0,0,5,65,3,0.03125,0
defect4j,chart,org/jfree/data/time/Day,9,83,    protected static final DateFormat DATE_FORMAT,1,0,0,0,0,3,0,1,0,5,45,2,0.03125,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,162,        if (widthType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,167,        this.labelAnchor = labelAnchor;,2,0,0,0,0,0,0,0,0,3,31,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,197,        super(label);,1,0,0,1,2,0,0,0,0,1,13,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,108,        DOWN_90 = new CategoryLabelPositions(,1,0,0,0,1,0,0,1,0,2,37,3,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,154,        if (labelAnchor == null) {,1,1,0,1,3,0,0,0,0,2,26,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelWidthType,19,76,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,150,        if (categoryAnchor == null) {,1,1,0,1,3,0,0,0,0,2,29,4,0.031048387,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,858,                axis.configure();,0,0,0,1,2,0,2,0,0,2,17,9,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,256,                                  CategoryLabelPosition right) {,1,0,0,0,2,0,0,1,0,2,30,3,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,258,        if (top == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,64,        STANDARD = new CategoryLabelPositions(,1,0,0,0,1,0,0,1,0,2,38,3,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,104,"        this(categoryAnchor, labelAnchor, TextAnchor.CENTER, 0.0, ",4,0,0,0,1,0,0,0,0,4,57,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,171,        this.widthRatio = widthRatio;,2,0,0,0,0,0,0,0,0,3,29,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/Axis,19,763,        if (flag != this.tickMarksVisible) {,2,1,0,1,3,0,0,0,0,3,36,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/Axis,19,764,            this.tickMarksVisible = flag;,2,0,0,0,0,0,0,0,0,3,29,6,0.031048387,0
defect4j,chart,org/jfree/chart/axis/Axis,19,765,            notifyListeners(new AxisChangeEvent(this));,0,0,0,2,4,0,1,1,0,2,43,7,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,148,                                 float widthRatio) {,1,0,0,0,2,0,0,0,0,1,19,3,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelWidthType,19,56,        CATEGORY = new CategoryLabelWidthType(,1,0,0,0,1,0,0,1,0,2,38,3,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,199,        this.lowerMargin = DEFAULT_AXIS_MARGIN;,2,0,0,0,0,0,0,0,0,3,39,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,209,        this.tickLabelFontMap = new HashMap();,1,0,0,1,2,0,0,1,0,3,38,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,208,        this.categoryLabelPositions = CategoryLabelPositions.STANDARD;,3,0,0,0,0,0,0,0,0,4,62,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,205,        setTickMarksVisible(false);  // not supported by this axis type yet,0,0,0,1,2,0,1,0,0,2,67,5,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,207,        this.categoryLabelPositionOffset = 4;,1,0,0,0,0,0,0,0,0,2,37,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,201,        this.categoryMargin = DEFAULT_CATEGORY_MARGIN;,2,0,0,0,0,0,0,0,0,3,46,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,200,        this.upperMargin = DEFAULT_AXIS_MARGIN;,2,0,0,0,0,0,0,0,0,3,39,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,203,        this.maximumCategoryLabelWidthRatio = 0.0f;,1,0,0,0,0,0,0,0,0,2,43,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,202,        this.maximumCategoryLabelLines = 1;,1,0,0,0,0,0,0,0,0,2,35,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,170,        this.widthType = widthType;,2,0,0,0,0,0,0,0,0,3,27,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,273,        this.positionForAxisAtLeft = left;,2,0,0,0,0,0,0,0,0,3,34,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,272,        this.positionForAxisAtBottom = bottom;,2,0,0,0,0,0,0,0,0,3,38,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,271,        this.positionForAxisAtTop = top;,2,0,0,0,0,0,0,0,0,3,32,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,274,        this.positionForAxisAtRight = right;,2,0,0,0,0,0,0,0,0,3,36,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,158,        if (rotationAnchor == null) {,1,1,0,1,3,0,0,0,0,2,29,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,123,"        this(categoryAnchor, labelAnchor, TextAnchor.CENTER, 0.0, widthType, ",5,0,0,0,1,0,0,0,0,5,68,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,83,        UP_90 = new CategoryLabelPositions(,1,0,0,0,1,0,0,1,0,2,35,3,0.031048387,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,490,"                        lower = Math.max(0.0, lower - getLowerMargin() * range);",3,2,0,2,4,0,3,0,0,9,56,12,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,132,    public static final CategoryLabelPositions UP_45 ,1,0,0,0,0,3,0,1,0,5,48,2,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,136,    public static final CategoryLabelPositions DOWN_45 ,1,0,0,0,0,3,0,1,0,5,50,2,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,183,        return new CategoryLabelPositions(,0,0,0,0,1,0,0,1,0,1,34,6,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,210,        this.tickLabelPaintMap = new HashMap();,1,0,0,1,2,0,0,1,0,3,39,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryAxis,19,211,        this.categoryLabelToolTips = new HashMap();,1,0,0,1,2,0,0,1,0,3,43,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelWidthType,19,62,"        RANGE = new CategoryLabelWidthType(""CategoryLabelWidthType.RANGE"");",1,0,0,1,2,0,0,1,0,3,67,3,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,169,        this.angle = angle;,2,0,0,0,0,0,0,0,0,3,19,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,168,        this.rotationAnchor = rotationAnchor;,2,0,0,0,0,0,0,0,0,3,37,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPosition,19,166,        this.categoryAnchor = categoryAnchor;,2,0,0,0,0,0,0,0,0,3,37,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelWidthType,19,72,    private CategoryLabelWidthType(String name) {,2,0,0,1,3,1,0,1,0,4,45,2,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelWidthType,19,73,        if (name == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,149,        return new CategoryLabelPositions(,0,0,0,0,1,0,0,1,0,1,34,6,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,261,        if (bottom == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,264,        if (left == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.031048387,0
defect4j,chart,org/jfree/chart/axis/CategoryLabelPositions,19,267,        if (right == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.031048387,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,128,            return instant % iUnitMillis;,2,1,0,0,0,0,0,0,0,3,29,6,0.03101677,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1947,            int minDigits = iMinDigits;,2,0,0,0,0,0,0,0,0,2,27,6,0.030900571,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1961,            if (fraction == 0) {,1,1,0,1,3,0,0,0,0,2,20,5,0.030900571,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1946,            DateTimeField field = iFieldType.getField(chrono);,1,0,0,1,2,0,3,1,0,5,50,5,0.030900571,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1951,                fraction = field.remainder(instant);,1,0,0,1,2,0,3,0,0,5,36,7,0.030900571,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,127,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.030785202,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,688,        return formatter;,1,0,0,0,0,0,0,0,0,1,17,4,0.030675132,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,683,                formatter = builder.toFormatter();,1,0,0,1,2,0,2,0,0,4,34,8,0.030675132,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,685,"                cPatternedCache.put(pattern, formatter);",0,0,0,1,2,0,4,0,0,4,40,9,0.030675132,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,482,            rangeAxis.addChangeListener(this);,0,0,0,1,2,0,2,0,0,2,34,7,0.030585106,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,481,            rangeAxis.setPlot(this);,0,0,0,1,2,0,2,0,0,2,24,7,0.030585106,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,170,        return createFormatterForPattern(pattern);,0,0,0,1,2,0,2,0,0,2,42,5,0.030546425,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,682,"                parsePatternTo(builder, pattern);",0,0,0,1,2,0,3,0,0,3,33,9,0.030546425,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,681,                DateTimeFormatterBuilder builder = new DateTimeFormatterBuilder();,1,0,0,1,2,0,0,2,0,3,66,8,0.030546425,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,680,            if (formatter == null) {,1,1,0,1,3,0,0,0,0,2,24,6,0.030546425,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,677,        DateTimeFormatter formatter = null;,1,0,0,0,0,0,0,1,0,2,35,4,0.030546425,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,674,        if (pattern == null || pattern.length() == 0) {,1,3,0,2,5,0,2,0,0,6,47,4,0.030546425,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,678,        synchronized (cPatternedCache) {,1,0,0,1,3,0,0,0,0,1,32,4,0.030546425,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,679,            formatter = cPatternedCache.get(pattern);,1,0,0,1,2,0,3,0,0,5,41,6,0.030546425,0
defect4j,time,org/joda/time/LocalDate,6,100,        DATE_DURATION_TYPES.add(DurationFieldType.months());,0,0,0,2,4,0,4,0,0,4,52,5,0.030533679,0
defect4j,time,org/joda/time/LocalDate,6,101,        DATE_DURATION_TYPES.add(DurationFieldType.weekyears());,0,0,0,2,4,0,4,0,0,4,55,5,0.030533679,0
defect4j,time,org/joda/time/LocalDate,6,105,        DATE_DURATION_TYPES.add(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,50,5,0.030533679,0
defect4j,time,org/joda/time/LocalDate,6,102,        DATE_DURATION_TYPES.add(DurationFieldType.years());,0,0,0,2,4,0,4,0,0,4,51,5,0.030533679,0
defect4j,time,org/joda/time/LocalDate,6,99,        DATE_DURATION_TYPES.add(DurationFieldType.weeks());,0,0,0,2,4,0,4,0,0,4,51,5,0.030533679,0
defect4j,time,org/joda/time/LocalDate,6,98,        DATE_DURATION_TYPES.add(DurationFieldType.days());,0,0,0,2,4,0,4,0,0,4,50,5,0.030533679,0
defect4j,time,org/joda/time/LocalDate,6,96,    private static final Set<DurationFieldType> DATE_DURATION_TYPES = new HashSet<DurationFieldType>();,1,0,0,1,2,3,0,4,0,8,99,2,0.030533679,0
defect4j,time,org/joda/time/LocalDate,6,103,        DATE_DURATION_TYPES.add(DurationFieldType.centuries());,0,0,0,2,4,0,4,0,0,4,55,5,0.030533679,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1599,            if (i < transitions.length) {,3,1,0,1,3,0,0,0,0,4,29,5,0.030443987,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1598,            i = ~i;,2,0,0,0,0,0,0,0,0,4,7,5,0.030443987,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1592,            if (i >= 0) {,1,1,0,1,3,0,0,0,0,2,13,5,0.030443987,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1591,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,1,2,0,4,0,0,5,50,6,0.030443987,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1590,            long[] transitions = iTransitions;,2,0,0,1,2,0,0,0,0,2,34,6,0.030443987,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,119,        return iZone.previousTransition(instant);,0,0,0,1,2,0,3,0,0,3,41,5,0.030443987,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3149,            mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));,0,0,0,2,4,0,4,0,0,4,61,7,0.030131579,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1475,                DateTimeField field = iFieldType.getField(chrono);,1,0,0,1,2,0,3,1,0,5,50,7,0.029782809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1476,"                FormatUtils.appendPaddedInteger(buf, field.get(instant), iMinPrintedDigits);",0,0,0,2,4,0,7,0,0,7,76,8,0.029782809,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1845,                yAxis.configure();,0,0,0,1,2,0,2,0,0,2,18,9,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3230,        return result;    ,1,0,0,0,0,0,0,0,0,1,14,4,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3148,        if (rangeIndex >= 0) {,1,1,0,1,3,0,0,0,0,2,22,4,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3144,        Range result = null;,1,0,0,0,0,0,0,1,0,2,20,4,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3145,        List mappedDatasets = new ArrayList();,1,0,0,1,2,0,0,2,0,3,38,4,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3147,        int rangeIndex = this.rangeAxes.indexOf(axis);,2,0,0,1,2,0,2,0,0,4,46,5,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1134,                axis.configure();,0,0,0,1,2,0,2,0,0,2,17,9,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3212,        List result = new ArrayList();,1,0,0,1,2,0,0,2,0,3,30,4,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3213,        for (int i = 0; i < this.datasets.size(); i++) {,4,1,0,2,5,0,1,0,0,7,48,4,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3214,            Object dataset = this.datasets.get(i);,2,0,0,1,2,0,2,1,0,5,38,6,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3215,            if (dataset != null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3157,        Iterator iterator = mappedDatasets.iterator();,1,0,0,1,2,0,2,1,0,4,46,4,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3158,        while (iterator.hasNext()) {,0,0,0,2,5,0,2,0,0,2,28,5,0.0296875,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,3165,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.0296875,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2665,            if (locale == null) {,1,1,0,1,3,0,0,0,0,2,21,5,0.029568476,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2660,            DateTimePrinter[] elements = iPrinters;,2,0,0,1,2,0,0,1,0,3,39,5,0.029568476,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2661,            if (elements == null) {,1,1,0,1,3,0,0,0,0,2,23,5,0.029568476,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2672,"                elements[i].printTo(buf, instant, chrono, displayOffset, displayZone, locale);",0,0,1,2,4,0,7,0,0,9,78,8,0.029568476,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2671,            for (int i = 0; i < len; i++) {,4,1,0,1,3,0,0,0,0,6,31,5,0.029568476,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2670,            int len = elements.length;,3,0,0,0,0,0,0,0,0,3,26,6,0.029568476,0
defect4j,time,org/joda/time/DateTimeFieldType,3,522,                    return chronology.secondOfDay();,0,0,0,1,2,0,2,0,0,2,32,7,0.029568476,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1218,            buf.append(iValue);,0,0,0,1,2,0,3,0,0,3,19,6,0.029568476,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,593,"        printTo(buf, instant);",0,0,0,1,2,0,3,0,0,3,22,5,0.029357068,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,592,        StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());,1,0,0,3,6,0,2,2,0,5,78,4,0.029357068,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,594,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0.029357068,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,470,        Chronology chrono = DateTimeUtils.getInstantChronology(instant);,1,0,0,1,2,0,3,1,0,5,64,4,0.029252443,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,471,"        printTo(buf, millis, chrono);",0,0,0,1,2,0,4,0,0,4,29,5,0.029252443,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,469,        long millis = DateTimeUtils.getInstantMillis(instant);,1,0,0,1,2,0,3,0,0,4,54,5,0.029252443,0
defect4j,time,org/joda/time/chrono/GJChronology,6,873,            if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,5,0.029117052,0
defect4j,time,org/joda/time/chrono/GJChronology,6,884,            return instant;,1,0,0,0,0,0,0,0,0,1,15,5,0.029117052,0
defect4j,time,org/joda/time/base/AbstractInstant,16,265,        ReadableInstant otherInstant = (ReadableInstant) readableInstant;,2,0,0,1,2,0,0,2,0,4,65,4,0.029078576,0
defect4j,time,org/joda/time/base/AbstractInstant,16,262,        if (readableInstant instanceof ReadableInstant == false) {,1,1,0,1,3,0,0,1,0,4,58,4,0.029078576,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,641,"        printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",0,0,0,2,4,0,9,0,0,9,79,5,0.028942795,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,632,        DateTimeZone zone = chrono.getZone();,1,0,0,1,2,0,2,1,0,4,37,4,0.028942795,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,633,        int offset = zone.getOffset(instant);,1,0,0,1,2,0,3,0,0,4,37,5,0.028942795,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,634,        long adjustedInstant = instant + offset;,3,1,0,0,0,0,0,0,0,4,40,5,0.028942795,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,635,        if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0) {,4,5,0,3,7,0,0,0,0,9,65,4,0.028942795,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,629,        chrono = selectChronology(chrono);,1,0,0,1,2,0,2,0,0,4,34,4,0.028942795,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,628,        DateTimePrinter printer = requirePrinter();,1,0,0,1,2,0,1,1,0,3,43,4,0.028942795,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,583,            buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,7,0.028846907,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,585,            while (i + 1 < length) {,2,2,0,1,3,0,0,0,0,4,24,6,0.028846907,0
defect4j,time,org/joda/time/DateTimeZone,3,927,            if (prev < instantAdjusted) {,2,1,0,1,3,0,0,0,0,3,29,7,0.028840964,0
defect4j,time,org/joda/time/DateTimeZone,3,926,            long prev = previousTransition(instantAdjusted);,1,0,0,1,2,0,2,0,0,3,48,8,0.028840964,0
defect4j,time,org/joda/time/DateTimeZone,3,929,                int diff = offsetPrev - offsetLocal;,3,1,0,0,0,0,0,0,0,4,36,10,0.028840964,0
defect4j,time,org/joda/time/DateTimeZone,3,928,                int offsetPrev = getOffset(prev);,1,0,0,1,2,0,2,0,0,3,33,10,0.028840964,0
defect4j,time,org/joda/time/DateTimeZone,3,930,                if (instantAdjusted - prev <= diff) {,3,2,0,1,3,0,0,0,0,5,37,9,0.028840964,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,580,        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {,4,7,0,1,3,0,0,0,0,15,51,4,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,574,        StringBuffer buf = new StringBuffer();,1,0,0,1,2,0,0,2,0,3,38,4,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,401,        int[] indexRef = new int[1];,1,0,0,2,4,0,0,0,0,1,28,5,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,621,        indexRef[0] = i;,1,0,1,1,2,0,0,0,0,3,16,4,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,622,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,577,        int length = pattern.length();,1,0,0,1,2,0,2,0,0,3,30,5,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,576,        int i = indexRef[0];,1,0,1,1,2,0,0,0,0,2,20,5,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,579,        char c = pattern.charAt(i);,1,0,0,1,2,0,3,0,0,4,27,5,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,405,"            String token = parseToken(pattern, indexRef);",1,0,0,1,2,0,3,1,0,5,45,6,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,404,            indexRef[0] = i;,1,0,1,1,2,0,0,0,0,3,16,6,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,406,            i = indexRef[0];,1,0,1,1,2,0,0,0,0,3,16,6,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,409,            if (tokenLen == 0) {,1,1,0,1,3,0,0,0,0,2,20,6,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,408,            int tokenLen = token.length();,1,0,0,1,2,0,2,0,0,3,30,7,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,414,            switch (c) {,1,0,0,1,3,0,0,0,0,1,12,6,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,412,            char c = token.charAt(0);,1,0,0,1,2,0,2,0,0,3,25,7,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,400,        int length = pattern.length();,1,0,0,1,2,0,2,0,0,3,30,5,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,403,        for (int i=0; i<length; i++) {,4,1,0,1,3,0,0,0,0,6,30,4,0.028732385,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,503,                return result;,1,0,0,0,0,0,0,0,0,1,14,7,0.028505913,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,147,"    private static final Map<String, DateTimeFormatter> cPatternedCache = new HashMap<String, DateTimeFormatter>(7);",1,0,0,1,2,3,0,6,0,10,112,2,0.028393944,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,149,    private static final DateTimeFormatter[] cStyleCache = new DateTimeFormatter[25];,1,0,0,2,4,3,0,2,0,6,81,2,0.028393944,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,574,        for (int i = 0; i < this.categoryKeys.length; i++) {,5,1,0,1,3,0,0,0,0,7,52,4,0.028391167,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,573,        int result = -1;,1,0,0,0,0,0,0,0,0,2,16,5,0.028391167,0
defect4j,time,org/joda/time/format/FormatUtils,3,83,                digits = 4;,1,0,0,0,0,0,0,0,0,2,11,10,0.028244049,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,499,            DateTimeField other = obj.iField;,3,0,0,0,0,0,0,1,0,4,33,5,0.028172496,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,500,            int result = compareReverse,1,0,0,0,0,0,1,0,0,2,27,6,0.028172496,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,502,            if (result != 0) {,1,1,0,1,3,0,0,0,0,2,18,5,0.028172496,0
defect4j,time,org/joda/time/format/FormatUtils,3,87,            for (; size > digits; size--) {,3,1,0,1,3,0,0,0,0,5,31,7,0.028146846,0
defect4j,time,org/joda/time/format/FormatUtils,3,82,            } else if (value < 10000) {,1,1,0,1,4,0,0,0,0,2,27,8,0.028146846,0
defect4j,time,org/joda/time/format/FormatUtils,3,80,            if (value < 1000) {,1,1,0,1,3,0,0,0,0,2,19,7,0.028146846,0
defect4j,time,org/joda/time/format/FormatUtils,3,90,            buf.append(Integer.toString(value));,0,0,0,2,4,0,5,0,0,5,36,8,0.028146846,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,520,        return -a.compareTo(b);,0,0,0,1,2,0,3,0,0,4,23,4,0.027739297,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,6,54,        return iChronology.getWeekOfWeekyear(instant);,0,0,0,1,2,0,3,0,0,3,46,5,0.027673897,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,517,        if (b == null || !b.isSupported()) {,1,2,0,2,5,0,2,0,0,6,36,4,0.027527406,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,365,"                millis = savedFields[i].set(millis, resetFields);",1,0,1,2,4,0,3,0,0,7,49,8,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,483,"                millis = iField.set(millis, iValue);",1,0,0,1,2,0,4,0,0,6,36,7,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,482,            if (iText == null) {,1,1,0,1,3,0,0,0,0,2,20,5,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,487,            if (reset) {,1,0,0,1,3,0,0,0,0,1,12,5,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,490,            return millis;,1,0,0,0,0,0,0,0,0,1,14,5,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,511,        if (a == null || !a.isSupported()) {,1,2,0,2,5,0,2,0,0,6,36,4,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,420,                for (int j=i; j>0 && (array[j-1]).compareTo(array[j])>0; j--) {,5,4,1,5,11,0,1,0,0,14,63,8,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,353,            DurationField months = DurationFieldType.months().getField(iChrono);,1,0,0,2,4,0,4,1,0,6,68,6,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,355,            DurationField first = savedFields[0].iField.getDurationField();,2,0,1,2,4,0,1,1,0,5,63,6,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,354,            DurationField days = DurationFieldType.days().getField(iChrono);,1,0,0,2,4,0,4,1,0,6,64,6,0.027215266,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,356,"            if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {",0,3,0,3,7,0,6,0,0,9,77,6,0.027215266,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3870,            return str; // returns original String when possible,1,0,0,0,0,0,0,0,0,1,52,6,0.027210884,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.027210884,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3869,        if (pads <= 0) {,1,1,0,1,3,0,0,0,0,2,16,4,0.027210884,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3868,        int pads = size - str.length();,2,1,0,1,2,0,2,0,0,5,31,5,0.027210884,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,0,0,0,0,0,0,0,0,0,1,13,5,0.027210884,0
defect4j,chart,org/jfree/chart/util/SortOrder,19,63,    public static final SortOrder DESCENDING = new SortOrder(,1,0,0,0,1,3,0,2,0,6,57,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,855,        for (int i = 0; i < this.domainAxes.size(); i++) {,4,1,0,2,5,0,1,0,0,7,50,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,856,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,2,0,0,2,4,0,2,2,0,6,58,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,857,            if (axis != null) {,1,1,0,1,3,0,0,0,0,2,19,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,788,        if (index == 0 && location == null) {,2,3,0,1,3,0,0,0,0,5,37,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1848,        if (getParent() != null) {,0,1,0,2,5,0,1,0,0,3,26,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1843,            ValueAxis yAxis = getRangeAxis(axisIndex);,1,0,0,1,2,0,2,1,0,4,42,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1844,            if (yAxis != null) {,1,1,0,1,3,0,0,0,0,2,20,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,242,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",1,0,0,0,1,3,0,2,0,6,74,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,498,        this.backgroundDomainMarkers = new HashMap();,1,0,0,1,2,0,0,1,0,3,45,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,499,        this.foregroundRangeMarkers = new HashMap();,1,0,0,1,2,0,0,1,0,3,44,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,494,        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;,2,0,0,0,0,0,0,0,0,3,51,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,495,        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;,2,0,0,0,0,0,0,0,0,3,49,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,324,    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;,3,0,0,0,0,1,0,1,0,5,61,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,497,        this.foregroundDomainMarkers = new HashMap();,1,0,0,1,2,0,0,1,0,3,45,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,490,        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;,2,0,0,0,0,0,0,0,0,3,52,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,491,        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;,2,0,0,0,0,0,0,0,0,3,50,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,493,        this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;,2,0,0,0,0,0,0,0,0,3,61,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,886,        if (result == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,884,            result = (ValueAxis) this.rangeAxes.get(index);,2,0,0,2,4,0,2,1,0,6,47,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,883,        if (index < this.rangeAxes.size()) {,2,1,0,2,5,0,1,0,0,4,36,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,882,        ValueAxis result = null;,1,0,0,0,0,0,0,1,0,2,24,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,449,        this.datasetToRangeAxisMap = new ObjectList();,1,0,0,1,2,0,0,1,0,3,46,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,446,        this.rangeAxisLocations = new ObjectList();,1,0,0,1,2,0,0,1,0,3,43,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,445,        this.rangeAxes = new ObjectList();,1,0,0,1,2,0,0,1,0,3,34,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,443,        this.domainAxes = new ObjectList();,1,0,0,1,2,0,0,1,0,3,35,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,440,        this.orientation = PlotOrientation.VERTICAL;,3,0,0,0,0,0,0,0,0,4,44,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1842,        for (int axisIndex = 0; axisIndex < count; axisIndex++) {,4,1,0,1,3,0,0,0,0,6,57,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1841,        int count = this.rangeAxes.size();,2,0,0,1,2,0,1,0,0,3,34,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,510,        this.rangeCrosshairValue = 0.0;,1,0,0,0,0,0,0,0,0,2,31,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,448,        this.datasetToDomainAxisMap = new ObjectList();,1,0,0,1,2,0,0,1,0,3,47,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1131,        for (int i = 0; i < this.rangeAxes.size(); i++) {,4,1,0,2,5,0,1,0,0,7,49,4,0.027205882,0
defect4j,chart,org/jfree/chart/util/SortOrder,19,74,    private SortOrder(String name) {,2,0,0,1,3,1,0,1,0,4,32,2,0.027205882,0
defect4j,chart,org/jfree/chart/util/SortOrder,19,75,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,444,        this.domainAxisLocations = new ObjectList();,1,0,0,1,2,0,0,1,0,3,44,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1227,"        this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));  ",2,0,0,2,4,0,2,1,0,5,63,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1229,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));  ",0,0,0,3,6,0,3,1,0,4,64,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,793,        if (notify) {,1,0,0,1,3,0,0,0,0,1,13,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,792,"        this.domainAxisLocations.set(index, location);",1,0,0,1,2,0,3,0,0,4,46,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,250,"    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(""SansSerif"", ",1,0,0,0,1,3,0,2,0,7,73,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,317,    private DatasetRenderingOrder renderingOrder ,1,0,0,0,0,1,0,1,0,3,44,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,893,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2107,        notifyListeners(new PlotChangeEvent(this));,0,0,0,2,4,0,1,1,0,2,43,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2104,            markers.add(marker);            ,0,0,0,1,2,0,3,0,0,3,20,8,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1164,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1161,        if (this.datasets.size() > index) {,2,1,0,2,5,0,1,0,0,4,35,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1162,            result = (CategoryDataset) this.datasets.get(index);,2,0,0,2,4,0,2,1,0,6,52,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2100,            if (markers == null) {,1,1,0,1,3,0,0,0,0,2,22,7,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2088,        if (layer == Layer.FOREGROUND) {,3,1,0,1,3,0,0,0,0,4,32,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1262,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));  ",0,0,0,3,6,0,3,1,0,4,64,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1260,"        this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));",2,0,0,2,4,0,2,1,0,5,62,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,511,        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,2,0,0,0,0,0,0,0,0,3,53,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,459,"        this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",1,0,0,1,2,0,0,1,0,3,58,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,512,        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,2,0,0,0,0,0,0,0,0,3,51,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,514,        this.annotations = new java.util.ArrayList();,4,0,0,1,2,0,0,0,0,5,45,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,451,        this.renderers = new ObjectList();,1,0,0,1,2,0,0,1,0,3,34,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,453,        this.datasets = new ObjectList();,1,0,0,1,2,0,0,1,0,3,33,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,454,"        this.datasets.set(0, dataset);",1,0,0,1,2,0,2,0,0,3,30,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,455,        if (dataset != null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2106,        marker.addChangeListener(this);,0,0,0,1,2,0,2,0,0,2,31,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2102,"                this.backgroundRangeMarkers.put(new Integer(index), markers);",2,0,0,2,4,0,2,1,0,5,61,10,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2101,                markers = new java.util.ArrayList();,4,0,0,1,2,0,0,0,0,5,36,9,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1037,"        setRangeAxisLocation(0, location, notify);",0,0,0,1,2,0,3,0,0,3,42,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1133,            if (axis != null) {,1,1,0,1,3,0,0,0,0,2,19,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1132,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,2,0,0,2,4,0,2,2,0,6,51,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,247,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;,3,0,0,0,0,3,0,1,0,7,63,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1852,            PlotChangeEvent e = new PlotChangeEvent(this);,1,0,0,1,2,0,0,2,0,3,46,6,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1160,        CategoryDataset result = null;,1,0,0,0,0,0,0,1,0,2,30,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/ValueMarker,19,95,"        super(paint, stroke, outlinePaint, outlineStroke, alpha);",5,0,0,1,2,0,0,0,0,5,57,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/ValueMarker,19,96,        this.value = value;,2,0,0,0,0,0,0,0,0,3,19,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,461,"        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",2,0,0,1,2,0,1,0,0,4,58,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,462,"        setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",2,0,0,1,2,0,1,0,0,4,54,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,265,    public static final Stroke DEFAULT_CROSSHAIR_STROKE,1,0,0,0,0,3,0,1,0,5,51,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1072,        if (notify) {,1,0,0,1,3,0,0,0,0,1,13,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1071,"        this.rangeAxisLocations.set(index, location);",1,0,0,1,2,0,3,0,0,4,45,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2073,"        addRangeMarker(0, marker, layer);",0,0,0,1,2,0,3,0,0,3,33,5,0.027205882,0
defect4j,chart,org/jfree/chart/util/SortOrder,19,59,    public static final SortOrder ASCENDING = new SortOrder(,1,0,0,0,1,3,0,2,0,6,56,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2097,        else if (layer == Layer.BACKGROUND) {,3,1,0,1,3,0,0,0,0,4,37,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,2098,            markers = (Collection) this.backgroundRangeMarkers.get(,2,0,0,1,3,0,1,1,0,5,55,7,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1854,            notifyListeners(e);,0,0,0,1,2,0,2,0,0,2,19,7,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1853,            e.setType(ChartChangeEventType.DATASET_UPDATED);,2,0,0,1,2,0,2,0,0,4,48,7,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,502,"        Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, ",1,0,0,0,2,0,0,3,0,4,66,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,500,        this.backgroundRangeMarkers = new HashMap();,1,0,0,1,2,0,0,1,0,3,44,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,507,        this.anchorValue = 0.0;,1,0,0,0,0,0,0,0,0,2,23,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,505,"        addRangeMarker(baseline, Layer.BACKGROUND);",2,0,0,1,2,0,2,0,0,4,43,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,509,        this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;,2,0,0,0,0,0,0,0,0,3,55,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,480,        if (rangeAxis != null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,486,        configureRangeAxes();,0,0,0,1,2,0,1,0,0,1,21,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,485,        configureDomainAxes();,0,0,0,1,2,0,1,0,0,1,22,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,489,        this.domainGridlinePosition = CategoryAnchor.MIDDLE;,3,0,0,0,0,0,0,0,0,4,52,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,488,        this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;,2,0,0,0,0,0,0,0,0,3,63,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,330,    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;,3,0,0,0,0,1,0,1,0,5,58,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,465,        if (renderer != null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,464,"        this.renderers.set(0, renderer);",1,0,0,1,2,0,2,0,0,3,32,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,472,        if (domainAxis != null) {,1,1,0,1,3,0,0,0,0,2,25,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,470,"        this.domainAxes.set(0, domainAxis);",1,0,0,1,2,0,2,0,0,3,35,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,471,"        this.mapDatasetToDomainAxis(0, 0);",0,0,0,1,2,0,1,0,0,1,34,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,476,        this.drawSharedDomainAxis = false;,1,0,0,0,0,0,0,0,0,3,34,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,478,"        this.rangeAxes.set(0, rangeAxis);",1,0,0,1,2,0,2,0,0,3,33,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,479,"        this.mapDatasetToRangeAxis(0, 0);",0,0,0,1,2,0,1,0,0,1,33,5,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,378,    private boolean rangeCrosshairLockedOnData = true;,1,0,0,0,0,1,0,0,0,3,50,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,273,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,3,0,0,0,0,3,0,1,0,7,63,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,276,    protected static ResourceBundle localizationResources ,1,0,0,0,0,2,0,1,0,4,53,2,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,1067,        if (index == 0 && location == null) {,2,3,0,1,3,0,0,0,0,5,37,4,0.027205882,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,755,"        setDomainAxisLocation(0, location, notify);",0,0,0,1,2,0,3,0,0,3,43,5,0.027205882,0
defect4j,time,org/joda/time/base/BaseDateTime,16,223,"        this(year, monthOfYear, dayOfMonth, hourOfDay,",4,0,0,0,1,0,0,0,0,4,46,4,0.027112705,0
defect4j,time,org/joda/time/chrono/GJChronology,6,418,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.026923066,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,1,3,0,1,2,0,2,0,0,6,38,4,0.026807273,0
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,1,0,0,1,2,0,2,0,0,4,32,5,0.026590693,0
defect4j,lang,org/apache/commons/lang/Entities,62,815,        if (firstAmp < 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.026590693,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,140,            return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,50,7,0.02632841,0
defect4j,time,org/joda/time/DateTimeUtils,3,200,        if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.026243345,0
defect4j,time,org/joda/time/DateTimeUtils,3,203,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.026243345,0
defect4j,time,org/joda/time/DateTimeUtils,3,199,        Chronology chrono = instant.getChronology();,1,0,0,1,2,0,2,1,0,4,44,4,0.026243345,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0.026198439,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0.026198439,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,188,                if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,9,0.0261588,0
defect4j,time,org/joda/time/DateTimeUtils,3,196,        if (instant == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.025743717,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,121,            return MAX_DAYS_PER_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,43,7,0.025662196,0
defect4j,time,org/joda/time/chrono/GJChronology,6,417,        if (this == obj) {,1,1,0,1,3,0,0,0,0,2,18,4,0.025536916,0
defect4j,time,org/joda/time/format/FormatUtils,3,64,                buf.append('0');,0,0,0,1,2,0,2,0,0,3,16,9,0.02534095,0
defect4j,time,org/joda/time/format/FormatUtils,3,66,            buf.append((char)(value + '0'));,1,1,0,3,6,0,2,0,0,5,32,7,0.02534095,0
defect4j,time,org/joda/time/format/FormatUtils,3,63,            for (; size > 1; size--) {,2,1,0,1,3,0,0,0,0,4,26,6,0.02534095,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,146,        if (zone == getZone()) {,1,1,0,2,5,0,1,0,0,3,24,4,0.025294403,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,143,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.025294403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,394,        return millis;,1,0,0,0,0,0,0,0,0,1,14,4,0.025205083,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,346,        if (iSavedFieldsShared) {,1,0,0,1,3,0,0,0,0,1,25,4,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,344,        SavedField[] savedFields = iSavedFields;,2,0,0,1,2,0,0,1,0,3,40,4,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,345,        int count = iSavedFieldsCount;,2,0,0,0,0,0,0,0,0,2,30,5,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,379,        if (iOffset != null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,362,        long millis = iMillis;,2,0,0,0,0,0,0,0,0,2,22,5,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,364,            for (int i = 0; i < count; i++) {,4,1,0,1,3,0,0,0,0,6,33,6,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,367,            if (resetFields) {,1,0,0,1,3,0,0,0,0,1,18,6,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,419,            for (int i=0; i<high; i++) {,4,1,0,1,3,0,0,0,0,6,28,6,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,416,        if (high > 10) {,1,1,0,1,3,0,0,0,0,2,16,4,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,351,        if (count > 0) {,1,1,0,1,3,0,0,0,0,2,16,4,0.025028218,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,350,"        sort(savedFields, count);",0,0,0,1,2,0,3,0,0,3,25,5,0.025028218,0
defect4j,time,org/joda/time/LocalDate,6,340,        iLocalMillis = chronology.dayOfMonth().roundFloor(localMillis);,1,0,0,2,4,0,4,0,0,6,63,4,0.024895822,0
defect4j,time,org/joda/time/LocalDate,6,341,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.024895822,0
defect4j,time,org/joda/time/base/AbstractInstant,6,137,        return new Instant(getMillis());,0,0,0,2,4,0,1,1,0,2,32,5,0.024895822,0
defect4j,time,org/joda/time/LocalDate,6,339,        chronology = chronology.withUTC();,1,0,0,1,2,0,2,0,0,4,34,4,0.024895822,0
defect4j,time,org/joda/time/LocalDate,6,338,"        long localMillis = chronology.getZone().getMillisKeepLocal(DateTimeZone.UTC, instant);",3,0,0,2,4,0,4,0,0,7,86,5,0.024895822,0
defect4j,time,org/joda/time/LocalDate,6,335,"    public LocalDate(long instant, Chronology chronology) {",3,0,0,1,3,1,0,1,0,5,55,2,0.024895822,0
defect4j,time,org/joda/time/LocalDate,6,336,        chronology = DateTimeUtils.getChronology(chronology);,1,0,0,1,2,0,3,0,0,5,53,4,0.024895822,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1343,                position += length;,2,0,0,0,0,0,0,0,0,3,19,7,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1347,                if (negative) {,1,0,0,1,3,0,0,0,0,1,15,7,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1344,                while (i < position) {,2,1,0,1,3,0,0,0,0,3,22,7,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1353,            return position;,1,0,0,0,0,0,0,0,0,1,16,5,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1352,"            bucket.saveField(iFieldType, value);",0,0,0,1,2,0,4,0,0,4,36,6,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1321,                length++;,1,0,0,0,0,0,0,0,0,2,9,7,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1329,            if (length >= 9) {,1,1,0,1,3,0,0,0,0,2,18,5,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1335,                if (negative) {,1,0,0,1,3,0,0,0,0,1,15,7,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1334,                int i = position;,2,0,0,0,0,0,0,0,0,2,17,8,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1339,                    value = text.charAt(i++) - '0';,2,1,0,1,2,0,2,0,0,8,31,9,0.024767268,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,468,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,469,            iValue = value;,2,0,0,0,0,0,0,0,0,3,15,5,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,467,"        SavedField(DateTimeField field, int value) {",3,0,0,1,3,0,0,1,0,4,44,3,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,470,            iText = null;,1,0,0,0,0,0,0,0,0,2,13,5,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,471,            iLocale = null;,1,0,0,0,0,0,0,0,0,2,15,5,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,264,        if (savedFieldsCount == savedFields.length || iSavedFieldsShared) {,4,2,0,1,3,0,0,0,0,6,67,4,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,261,        SavedField[] savedFields = iSavedFields;,2,0,0,1,2,0,0,1,0,3,40,4,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,262,        int savedFieldsCount = iSavedFieldsCount;,2,0,0,0,0,0,0,0,0,2,41,5,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,274,        savedFields[savedFieldsCount] = field;,1,0,1,1,2,0,0,0,0,4,38,4,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,275,        iSavedFieldsCount = savedFieldsCount + 1;,2,1,0,0,0,0,0,0,0,4,41,4,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,273,        iSavedState = null;,1,0,0,0,0,0,0,0,0,2,19,4,0.024511403,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,246,"        saveField(new SavedField(fieldType.getField(iChrono), value));",1,0,0,3,6,0,4,1,0,6,62,5,0.024511403,0
defect4j,time,org/joda/time/DateTimeUtils,3,181,        return instant.getMillis();,0,0,0,1,2,0,2,0,0,2,27,5,0.024495604,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,726,                        daysToAdd -= 7;,1,0,0,0,0,0,0,0,0,2,15,11,0.024421396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,554,                offset = 0;,1,0,0,0,0,0,0,0,0,2,11,8,0.024421396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,551,            } else if (iMode == 's') {,1,1,0,1,4,0,0,0,0,3,26,6,0.024421396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,725,                    if (daysToAdd > 0) {,1,1,0,1,3,0,0,0,0,2,20,9,0.024347613,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,709,"                instant = chrono.dayOfMonth().set(instant, 1);",1,0,0,2,4,0,4,0,0,6,46,7,0.024347613,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,711,"                instant = chrono.dayOfMonth().add(instant, iDayOfMonth);",1,0,0,2,4,0,5,0,0,7,56,7,0.024347613,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,710,"                instant = chrono.monthOfYear().add(instant, 1);",1,0,0,2,4,0,4,0,0,6,47,7,0.024347613,0
defect4j,chart,org/jfree/chart/axis/CategoryAnchor,19,60,    public static final CategoryAnchor MIDDLE ,1,0,0,0,0,3,0,1,0,5,41,2,0.024318182,0
defect4j,chart,org/jfree/chart/axis/CategoryAnchor,19,64,    public static final CategoryAnchor END ,1,0,0,0,0,3,0,1,0,5,38,2,0.024318182,0
defect4j,chart,org/jfree/chart/axis/CategoryAnchor,19,76,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.024318182,0
defect4j,chart,org/jfree/chart/axis/CategoryAnchor,19,75,    private CategoryAnchor(String name) {,2,0,0,1,3,1,0,1,0,4,37,2,0.024318182,0
defect4j,chart,org/jfree/chart/axis/CategoryAnchor,19,56,    public static final CategoryAnchor START ,1,0,0,0,0,3,0,1,0,5,40,2,0.024318182,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,144,        return localInstant;,1,0,0,0,0,0,0,0,0,1,20,4,0.024201304,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,959,        return dt;,1,0,0,0,0,0,0,0,0,1,10,4,0.024014338,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,954,            dt = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,35,6,0.024014338,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,953,        if (dt == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.024014338,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,57,    public static final TextBlockAnchor TOP_LEFT ,1,0,0,0,0,3,0,1,0,5,44,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,65,    public static final TextBlockAnchor TOP_RIGHT = new TextBlockAnchor(,1,0,0,0,1,3,0,2,0,6,68,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,89,    public static final TextBlockAnchor BOTTOM_RIGHT ,1,0,0,0,0,3,0,1,0,5,48,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,85,    public static final TextBlockAnchor BOTTOM_CENTER ,1,0,0,0,0,3,0,1,0,5,49,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,81,    public static final TextBlockAnchor BOTTOM_LEFT ,1,0,0,0,0,3,0,1,0,5,47,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,61,    public static final TextBlockAnchor TOP_CENTER = new TextBlockAnchor(,1,0,0,0,1,3,0,2,0,6,69,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,69,    public static final TextBlockAnchor CENTER_LEFT = new TextBlockAnchor(,1,0,0,0,1,3,0,2,0,6,70,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,77,    public static final TextBlockAnchor CENTER_RIGHT = new TextBlockAnchor(,1,0,0,0,1,3,0,2,0,6,71,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,73,    public static final TextBlockAnchor CENTER = new TextBlockAnchor(,1,0,0,0,1,3,0,2,0,6,65,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,100,    private TextBlockAnchor(String name) {,2,0,0,1,3,1,0,1,0,4,38,2,0.023986486,0
defect4j,chart,org/jfree/chart/text/TextBlockAnchor,19,101,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.023986486,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1335,            return (start > end) ? startRecurrence : endRecurrence;,4,1,0,1,2,0,0,0,0,5,55,6,0.023913618,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1325,                end = endRecurrence.next,1,0,0,0,0,0,2,0,0,4,24,7,0.023913618,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,141,        if (offset != zone.getOffset(localInstant)) {,1,1,0,2,5,0,3,0,0,5,45,4,0.023913618,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,140,        localInstant -= offset;,2,0,0,0,0,0,0,0,0,3,23,4,0.023913618,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,138,        DateTimeZone zone = getZone();,1,0,0,1,2,0,1,1,0,3,30,4,0.023913618,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,139,        int offset = zone.getOffsetFromLocal(localInstant);,1,0,0,1,2,0,3,0,0,4,51,5,0.023913618,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1190,            return iStandardOffset + findMatchingRecurrence(instant).getSaveMillis();,1,1,0,2,4,0,3,0,0,5,73,5,0.023913618,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1314,                start = startRecurrence.next,1,0,0,0,0,0,2,0,0,4,28,7,0.023913618,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1308,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,3,46,5,0.023913618,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1309,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,3,42,5,0.023913618,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1307,            int standardOffset = iStandardOffset;,2,0,0,0,0,0,0,0,0,2,37,6,0.023913618,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1546,            return iTailZone.getOffset(instant);,0,0,0,1,2,0,3,0,0,3,36,6,0.023913618,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1318,                if (c < '0' || c > '9') {,2,3,0,1,3,0,0,0,0,7,25,7,0.023852845,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,653,"        add(period, value, true);",0,0,0,1,2,0,3,0,0,4,25,5,0.023842917,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,667,"        add(item, notify);",0,0,0,1,2,0,3,0,0,3,18,5,0.023842917,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,666,"        TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",3,0,0,1,2,0,0,2,0,5,64,4,0.023842917,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,118,        return localToUTC(getBase().getDateTimeMillis,0,0,0,1,3,0,3,0,0,3,45,5,0.023842704,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1298,                if (length == 0 && (c == '-' || c == '+') && iSigned) {,4,6,0,2,5,0,0,0,0,12,55,7,0.023772862,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1292,"            int limit = Math.min(iMaxParsedDigits, text.length() - position);",2,1,0,2,4,0,5,0,0,8,65,6,0.023772862,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1294,            boolean negative = false;,1,0,0,0,0,0,0,0,0,2,25,6,0.023772862,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1295,            int length = 0;,1,0,0,0,0,0,0,0,0,1,15,6,0.023772862,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1297,                char c = text.charAt(position + length);,3,1,0,1,2,0,2,0,0,6,40,8,0.023772862,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1324,            if (length == 0) {,1,1,0,1,3,0,0,0,0,2,18,5,0.023772862,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1296,            while (length < limit) {,2,1,0,1,3,0,0,0,0,3,24,5,0.023772862,0
defect4j,time,org/joda/time/DateTimeUtils,3,178,        if (instant == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.023772186,0
defect4j,time,org/joda/time/format/FormatUtils,3,67,        } else if (value < 100) {,1,1,0,1,4,0,0,0,0,2,25,5,0.023772186,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,89,        if (value <= iSkip) {,2,1,0,1,3,0,0,0,0,3,21,4,0.023705219,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,88,"        FieldUtils.verifyValueBounds(this, value, iMinValue, getMaximumValue());",0,0,0,2,4,0,5,0,0,5,72,5,0.023705219,0
defect4j,time,org/joda/time/DateTimeFieldType,3,524,                    return chronology.secondOfMinute();,0,0,0,1,2,0,2,0,0,2,35,7,0.023632325,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2654,            return iPrintedLengthEstimate;,1,0,0,0,0,0,0,0,0,1,30,5,0.023425424,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,162,            periodStart = next;,2,0,0,0,0,0,0,0,0,3,19,6,0.023425424,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,163,"            chain = (chain.iNextInfo = new Info(iZone, periodStart));",5,0,0,2,4,0,0,1,0,8,57,6,0.023425424,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,917,            tt = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,35,6,0.023226808,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,916,        if (tt == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.023226808,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,922,        return tt;,1,0,0,0,0,0,0,0,0,1,10,4,0.023226808,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,115,            yearToUse = thisYear + (monthToUse / iMax);,4,2,0,1,2,0,0,0,0,7,43,6,0.022824743,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,116,            monthToUse = (monthToUse % iMax) + 1;,3,2,0,1,2,0,0,0,0,6,37,6,0.022824743,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,139,        if (dayToUse > maxDay) {,2,1,0,1,3,0,0,0,0,3,24,4,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,138,"        int maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);",1,0,0,1,2,0,4,0,0,5,67,5,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,137,"        int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);",1,0,0,1,2,0,5,0,0,6,71,5,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,147,        return datePart + timePart;,2,1,0,0,0,0,0,0,0,3,27,4,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,145,        long datePart =,1,0,0,0,0,0,0,0,0,1,15,5,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,99,        long timePart = iChronology.getMillisOfDay(instant);,1,0,0,1,2,0,3,0,0,4,52,5,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,93,        if (months == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.02275979,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,671,        return printer;,1,0,0,0,0,0,0,0,0,1,15,4,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,104,        int thisYear = iChronology.getYear(instant);,1,0,0,1,2,0,3,0,0,4,44,5,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,105,"        int thisMonth = iChronology.getMonthOfYear(instant, thisYear);",1,0,0,1,2,0,4,0,0,5,62,5,0.02275979,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,668,        if (printer == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.02275979,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,667,        DateTimePrinter printer = iPrinter;,2,0,0,0,0,0,0,1,0,3,35,4,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,114,        if (monthToUse >= 0) {,1,1,0,1,3,0,0,0,0,2,22,4,0.02275979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,113,        int monthToUse = thisMonth - 1 + months;,3,2,0,0,0,0,0,0,0,5,40,5,0.02275979,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1875,"                printTo(buf, null, instant, chrono);",0,0,0,1,2,0,4,0,0,5,36,7,0.022630943,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,879,        if (t == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.022630943,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,880,            t = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,34,6,0.022630943,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,885,        return t;,1,0,0,0,0,0,0,0,0,1,9,4,0.022630943,0
defect4j,time,org/joda/time/DateTimeZone,3,925,        } else if (offsetLocal >= 0) {,1,1,0,1,4,0,0,0,0,2,30,5,0.022440179,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1204,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,3,42,5,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1203,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,3,46,5,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1202,            int standardOffset = iStandardOffset;,2,0,0,0,0,0,0,0,0,2,37,6,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1209,                start = startRecurrence.next,1,0,0,0,0,0,2,0,0,4,28,7,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1211,                if (instant > 0 && start < 0) {,2,3,0,1,3,0,0,0,0,5,31,7,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1582,            long end = transitions[transitions.length - 1];,3,1,1,1,2,0,0,0,0,5,47,6,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1583,            if (instant < end) {,2,1,0,1,3,0,0,0,0,3,20,5,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1586,            return iTailZone.nextTransition(instant);,0,0,0,1,2,0,3,0,0,3,41,6,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1224,                end = endRecurrence.next,1,0,0,0,0,0,2,0,0,4,24,7,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1226,                if (instant > 0 && end < 0) {,2,3,0,1,3,0,0,0,0,5,29,7,0.022377269,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1238,            return (start > end) ? end : start;,4,1,0,1,2,0,0,0,0,5,35,6,0.022377269,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1483,            hmsf = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,37,6,0.02234365,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1482,        if (hmsf == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.02234365,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1490,        return hmsf;,1,0,0,0,0,0,0,0,0,1,12,4,0.02234365,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1699,        return fse;,1,0,0,0,0,0,0,0,0,1,11,4,0.02234365,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1692,            fse = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.02234365,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1691,        if (fse == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.02234365,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,578,"                    next = setDayOfWeek(chrono, next);",1,0,0,1,2,0,3,0,0,5,34,9,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,575,"                    next = chrono.year().add(next, 1);",1,0,0,2,4,0,4,0,0,6,34,9,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,574,                if (next <= instant) {,2,1,0,1,3,0,0,0,0,3,22,7,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,577,"                    next = setDayOfMonthNext(chrono, next);",1,0,0,1,2,0,3,0,0,5,39,9,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,576,"                    next = chrono.monthOfYear().set(next, iMonthOfYear);",1,0,0,2,4,0,5,0,0,7,52,9,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,573,"                next = setDayOfWeek(chrono, next);",1,0,0,1,2,0,3,0,0,5,34,7,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,720,                if (iAdvance) {,1,0,0,1,3,0,0,0,0,1,15,7,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,729,"                instant = chrono.dayOfWeek().add(instant, daysToAdd);",1,0,0,2,4,0,5,0,0,7,53,7,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,731,            return instant;,1,0,0,0,0,0,0,0,0,1,15,5,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,719,            if (daysToAdd != 0) {,1,1,0,1,3,0,0,0,0,2,21,5,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,718,            int daysToAdd = iDayOfWeek - dayOfWeek;,3,1,0,0,0,0,0,0,0,4,39,6,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,717,            int dayOfWeek = chrono.dayOfWeek().get(instant);,1,0,0,2,4,0,4,0,0,5,48,6,0.02231469,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,761,"            return iOfYear.next(instant, standardOffset, saveMillis);",0,0,0,1,2,0,5,0,0,5,57,6,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,560,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,4,51,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,567,            if (iDayOfWeek == 0) {,1,1,0,1,3,0,0,0,0,2,22,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,564,"            next = chrono.millisOfDay().add(next, iMillisOfDay);",1,0,0,2,4,0,5,0,0,7,52,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,565,"            next = setDayOfMonthNext(chrono, next);",1,0,0,1,2,0,3,0,0,5,39,5,0.02225244,0
defect4j,time,org/joda/time/field/BaseDateTimeField,3,253,"        return getDurationField().add(instant, value);",0,0,0,2,4,0,4,0,0,4,46,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,776,            return iSaveMillis;,1,0,0,0,0,0,0,0,0,1,19,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,583,            return next - offset;,2,1,0,0,0,0,0,0,0,3,21,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,563,"            next = chrono.millisOfDay().set(next, 0);",1,0,0,2,4,0,4,0,0,6,41,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,683,            return next;,1,0,0,0,0,0,0,0,0,1,12,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,706,            if (iDayOfMonth >= 0) {,1,1,0,1,3,0,0,0,0,2,23,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,713,            return instant;,1,0,0,0,0,0,0,0,0,1,15,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,672,"                next = setDayOfMonth(chrono, next);",1,0,0,1,2,0,3,0,0,5,35,7,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,549,            if (iMode == 'w') {,1,1,0,1,3,0,0,0,0,3,19,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,558,            instant += offset;,2,0,0,0,0,0,0,0,0,3,18,5,0.02225244,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,561,"            long next = chrono.monthOfYear().set(instant, iMonthOfYear);",1,0,0,2,4,0,5,0,0,6,60,6,0.02225244,0
defect4j,time,org/joda/time/format/FormatUtils,3,50,        if (value < 0) {,1,1,0,1,3,0,0,0,0,2,16,4,0.022006672,0
defect4j,time,org/joda/time/format/FormatUtils,3,62,        if (value < 10) {,1,1,0,1,3,0,0,0,0,2,17,4,0.022006672,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2112,            if (displayZone == null) {,1,1,0,1,3,0,0,0,0,2,26,5,0.021994013,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2115,            if (displayOffset == 0 && iZeroOffsetPrintText != null) {,2,3,0,1,3,0,0,0,0,5,57,5,0.021994013,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,475,            ensureCapacity(len + strLen);,2,1,0,1,2,0,1,0,0,4,29,7,0.021990741,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,1,0,0,1,2,0,1,0,0,2,19,7,0.021990741,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,477,            size += strLen;,2,0,0,0,0,0,0,0,0,3,15,6,0.021990741,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,5,0,0,5,37,7,0.021990741,0
defect4j,time,org/joda/time/field/MillisDurationField,3,117,"        return FieldUtils.safeAdd(instant, value);",0,0,0,1,2,0,4,0,0,4,42,5,0.021765958,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1577,                    return i;,1,0,0,0,0,0,0,0,0,1,9,8,0.02173913,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,0,1,0,2,5,0,3,0,0,4,34,6,0.02173913,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1574,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,0,6,34,4,0.02173913,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1570,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,4,0,0,5,43,4,0.02173913,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1575,            char ch = str.charAt(i);,1,0,0,1,2,0,3,0,0,4,24,7,0.02173913,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1573,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,0.02173913,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1412,        if (isEmpty(cs) || isEmpty(searchChars)) {,0,1,0,3,7,0,4,0,0,5,42,4,0.02173913,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1415,"        return indexOfAny(cs, searchChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,49,5,0.02173913,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,124,        iLocale = (locale == null ? Locale.getDefault() : locale);,3,1,0,2,4,0,2,0,0,7,58,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,125,        iPivotYear = pivotYear;,2,0,0,0,0,0,0,0,0,3,23,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,122,        iZone = chrono.getZone();,1,0,0,1,2,0,2,0,0,4,25,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,123,        iChrono = chrono.withUTC();,1,0,0,1,2,0,2,0,0,4,27,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,120,        chrono = DateTimeUtils.getChronology(chrono);,1,0,0,1,2,0,3,0,0,5,45,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,121,        iMillis = instantLocal;,2,0,0,0,0,0,0,0,0,3,23,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,126,        iDefaultYear = defaultYear;,2,0,0,0,0,0,0,0,0,3,27,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,928,        return parser;,1,0,0,0,0,0,0,0,0,1,14,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,924,        DateTimeParser parser = iParser;,2,0,0,0,0,0,0,1,0,3,32,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,925,        if (parser == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeParserBucket,16,72,    private SavedField[] iSavedFields = new SavedField[8];,1,0,0,2,4,1,0,2,0,4,54,2,0.021721599,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,958,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.021647448,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,955,        if (iZone != null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.021647448,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,952,        if (iChrono != null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.021647448,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,951,        chrono = DateTimeUtils.getChronology(chrono);,1,0,0,1,2,0,3,0,0,5,45,4,0.021647448,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1923,            if (fraction == 0) {,1,1,0,1,3,0,0,0,0,2,20,5,0.021587748,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,406,"            return append0(new UnpaddedNumber(fieldType, maxDigits, false));",2,0,0,2,4,0,1,1,0,5,64,7,0.021587748,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1908,            DateTimeField field = iFieldType.getField(chrono);,1,0,0,1,2,0,3,1,0,5,50,5,0.021587748,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1909,            int minDigits = iMinDigits;,2,0,0,0,0,0,0,0,0,2,27,6,0.021587748,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1913,                fraction = field.remainder(instant);,1,0,0,1,2,0,3,0,0,5,36,7,0.021587748,0
defect4j,chart,org/jfree/chart/util/LengthAdjustmentType,19,65,    public static final LengthAdjustmentType CONTRACT ,1,0,0,0,0,3,0,1,0,5,49,2,0.021533613,0
defect4j,chart,org/jfree/chart/util/LengthAdjustmentType,19,61,    public static final LengthAdjustmentType EXPAND ,1,0,0,0,0,3,0,1,0,5,47,2,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,534,"        this.listenerList.add(MarkerChangeListener.class, listener);",1,0,0,1,2,0,2,1,0,4,60,5,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,189,        this.alpha = alpha;,2,0,0,0,0,0,0,0,0,3,19,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,188,        this.outlineStroke = outlineStroke;,2,0,0,0,0,0,0,0,0,3,35,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,181,        if (alpha < 0.0f || alpha > 1.0f),2,3,0,1,2,0,0,0,0,5,33,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,187,        this.outlinePaint = outlinePaint;,2,0,0,0,0,0,0,0,0,3,33,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,186,        this.stroke = stroke;,2,0,0,0,0,0,0,0,0,3,21,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,185,        this.paint = paint;,2,0,0,0,0,0,0,0,0,3,19,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,115,    private String label = null;,1,0,0,0,0,1,0,1,0,3,28,2,0.021533613,0
defect4j,chart,org/jfree/chart/util/LengthAdjustmentType,19,57,    public static final LengthAdjustmentType NO_CHANGE ,1,0,0,0,0,3,0,1,0,5,50,2,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,198,        this.listenerList = new EventListenerList();,1,0,0,1,2,0,0,1,0,3,44,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,191,"        this.labelFont = new Font(""SansSerif"", Font.PLAIN, 9);",3,0,0,1,2,0,0,1,0,6,54,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,192,        this.labelPaint = Color.black;,3,0,0,0,0,0,0,0,0,4,30,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,193,        this.labelAnchor = RectangleAnchor.TOP_LEFT;,3,0,0,0,0,0,0,0,0,4,44,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,194,"        this.labelOffset = new RectangleInsets(3.0, 3.0, 3.0, 3.0);",1,0,0,1,2,0,0,1,0,3,59,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,195,        this.labelOffsetType = LengthAdjustmentType.CONTRACT;,3,0,0,0,0,0,0,0,0,4,53,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,196,        this.labelTextAnchor = TextAnchor.CENTER;,3,0,0,0,0,0,0,0,0,4,41,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,175,        if (paint == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,173,                     float alpha) {,1,0,0,0,2,0,0,0,0,1,14,3,0.021533613,0
defect4j,chart,org/jfree/chart/plot/Marker,19,178,        if (stroke == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.021533613,0
defect4j,chart,org/jfree/chart/util/LengthAdjustmentType,19,76,    private LengthAdjustmentType(String name) {,2,0,0,1,3,1,0,1,0,4,43,2,0.021533613,0
defect4j,chart,org/jfree/chart/util/LengthAdjustmentType,19,77,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.021533613,0
defect4j,time,org/joda/time/DateTimeZone,3,912,        if (offsetLocal != offsetAdjusted) {,2,1,0,1,3,0,0,0,0,3,36,4,0.021530144,0
defect4j,time,org/joda/time/DateTimeZone,3,910,        final int offsetAdjusted = getOffset(instantAdjusted);,1,0,0,1,2,1,2,0,0,4,54,4,0.021530144,0
defect4j,time,org/joda/time/DateTimeZone,3,909,        final long instantAdjusted = instantLocal - offsetLocal;,3,1,0,0,0,1,0,0,0,5,56,4,0.021530144,0
defect4j,time,org/joda/time/DateTimeZone,3,907,        final int offsetLocal = getOffset(instantLocal);,1,0,0,1,2,1,2,0,0,4,48,4,0.021530144,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,473,        if (strLen > 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.021413744,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,472,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,0.021413744,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,469,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.021413744,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1363,"            super(fieldType, maxParsedDigits, signed);",3,0,0,1,2,0,0,0,0,3,42,5,0.021389839,0
defect4j,time,org/joda/time/format/FormatUtils,3,31,    private static final double LOG_10 = Math.log(10);,1,0,0,1,2,3,2,0,0,6,50,2,0.021299082,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,64,"        return set(instant, newYear);",0,0,0,1,2,0,3,0,0,3,29,5,0.020905734,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,62,        int thisYear = get(instant);,1,0,0,1,2,0,2,0,0,3,28,5,0.020905734,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,63,"        int newYear = FieldUtils.safeAdd(thisYear, years);",1,0,0,1,2,0,4,0,0,5,50,5,0.020905734,0
defect4j,time,org/joda/time/field/FieldUtils,3,64,        int sum = val1 + val2;,3,1,0,0,0,0,0,0,0,4,22,5,0.020905734,0
defect4j,time,org/joda/time/field/FieldUtils,3,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,4,5,0,3,7,0,0,0,0,9,45,4,0.020905734,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,59,        if (years == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.020905734,0
defect4j,time,org/joda/time/field/FieldUtils,3,70,        return sum;,1,0,0,0,0,0,0,0,0,1,11,4,0.020905734,0
defect4j,time,org/joda/time/chrono/GJChronology,6,654,                return iGregorianField.get(instant);,0,0,0,1,2,0,3,0,0,3,36,8,0.02072871,0
defect4j,chart,org/jfree/chart/util/Layer,19,69,    private Layer(String name) {,2,0,0,1,3,1,0,1,0,4,28,2,0.020696721,0
defect4j,chart,org/jfree/chart/util/Layer,19,56,"    public static final Layer FOREGROUND = new Layer(""Layer.FOREGROUND"");",1,0,0,1,2,3,0,2,0,7,69,2,0.020696721,0
defect4j,chart,org/jfree/chart/util/Layer,19,70,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.020696721,0
defect4j,chart,org/jfree/chart/util/Layer,19,59,"    public static final Layer BACKGROUND = new Layer(""Layer.BACKGROUND"");",1,0,0,1,2,3,0,2,0,7,69,2,0.020696721,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,127,            return instant % iUnitMillis;,2,1,0,0,0,0,0,0,0,3,29,6,0.020692315,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,126,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.020570034,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,552,        return 1 + (int) ((daysSince19700101 + 3) % 7);,1,3,0,3,6,0,0,0,0,4,47,4,0.020472559,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,543,            daysSince19700101 = instant / DateTimeConstants.MILLIS_PER_DAY;,4,1,0,0,0,0,0,0,0,6,63,6,0.020472559,0
defect4j,time,org/joda/time/DateTimeFieldType,3,520,                    return chronology.minuteOfHour();,0,0,0,1,2,0,2,0,0,2,33,7,0.020004916,0
defect4j,time,org/joda/time/field/BaseDurationField,16,152,        if (thisMillis < otherMillis) {,2,1,0,1,3,0,0,0,0,3,31,4,0.019806918,0
defect4j,time,org/joda/time/field/BaseDurationField,16,146,        long otherMillis = otherField.getUnitMillis();,1,0,0,1,2,0,2,0,0,3,46,5,0.019806918,0
defect4j,time,org/joda/time/field/BaseDurationField,16,147,        long thisMillis = getUnitMillis();,1,0,0,1,2,0,1,0,0,2,34,5,0.019806918,0
defect4j,time,org/joda/time/field/BaseDurationField,16,149,        if (thisMillis == otherMillis) {,2,1,0,1,3,0,0,0,0,3,32,4,0.019806918,0
defect4j,time,org/joda/time/field/BaseDurationField,16,38,public abstract class BaseDurationField extends DurationField implements Serializable {,1,0,0,0,1,2,0,2,0,5,87,1,0.019806918,0
defect4j,time,org/joda/time/DateTimeFieldType,3,516,                    return chronology.hourOfDay();,0,0,0,1,2,0,2,0,0,2,30,7,0.019704106,0
defect4j,time,org/joda/time/DateTimeFieldType,3,498,                    return chronology.dayOfMonth();,0,0,0,1,2,0,2,0,0,2,31,7,0.019654791,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1176,"            ttx = tTimeNoMillis(),  // Ttime no millis",1,0,0,1,2,0,1,0,0,2,42,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1175,"            tt = tTime(),  // Ttime",1,0,0,1,2,0,1,0,0,2,23,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1174,"            tx = timeNoMillis(),  // time no millis",1,0,0,1,2,0,1,0,0,2,39,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1173,"            t = time(),  // time",1,0,0,1,2,0,1,0,0,2,20,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1170,"            dhmsf = dateHourMinuteSecondFraction(), // date hour minute second fraction",1,0,0,1,2,0,1,0,0,2,75,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1178,"            dtx = dateTimeNoMillis(), // date time no millis",1,0,0,1,2,0,1,0,0,2,48,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1181,"            wdt = weekDateTime(), // week date time",1,0,0,1,2,0,1,0,0,2,39,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1177,"            dt = dateTime(), // date time",1,0,0,1,2,0,1,0,0,2,29,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1275,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,257,        checkParser(parser);,0,0,0,1,2,0,2,0,0,2,20,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,258,"        return append0(null, parser);",0,0,0,1,2,0,2,0,0,3,29,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1901,            return ze;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1582,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1581,            if (bodt == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1345,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,11,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1340,                DateTimeParser time = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,2,0,3,52,7,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1766,            if (dhmsf == null) {,1,1,0,1,3,0,0,0,0,2,20,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1767,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1164,"            hmsf = hourMinuteSecondFraction(), // hour minute second fraction",1,0,0,1,2,0,1,0,0,2,65,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1167,"            dhm = dateHourMinute(),   // date hour minute",1,0,0,1,2,0,1,0,0,2,45,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1161,"            hm = hourMinute(),   // hour minute",1,0,0,1,2,0,1,0,0,2,35,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1162,"            hms = hourMinuteSecond(),  // hour minute second",1,0,0,1,2,0,1,0,0,2,48,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1163,"            hmsl = hourMinuteSecondMillis(), // hour minute second millis",1,0,0,1,2,0,1,0,0,2,61,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1168,"            dhms = dateHourMinuteSecond(),  // date hour minute second",1,0,0,1,2,0,1,0,0,2,58,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1169,"            dhmsl = dateHourMinuteSecondMillis(), // date hour minute second millis",1,0,0,1,2,0,1,0,0,2,71,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,385,        iElementPairs.add(parser);,0,0,0,1,2,0,3,0,0,3,26,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,784,        return Constants.wwd;,2,0,0,0,0,0,0,0,0,2,21,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1687,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1572,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1571,            if (bod == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1577,            return bod;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1803,            return dme;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1373,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1807,            if (we == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1711,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,14,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1710,            if (hmsf == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1718,            return hmsf;,1,0,0,0,0,0,0,0,0,1,12,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1484,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1483,            if (wdtx == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1756,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1755,            if (dhmsl == null) {,1,1,0,1,3,0,0,0,0,2,20,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1158,"            wwd = weekyearWeekDay(), // weekyear week day",1,0,0,1,2,0,1,0,0,2,45,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1623,            if (bwdtx == null) {,1,1,0,1,3,0,0,0,0,2,20,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1150,"            lte = literalTElement(), // literal 'T' element",1,0,0,1,2,0,1,0,0,2,47,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1153,"            ym = yearMonth(),  // year month",1,0,0,1,2,0,1,0,0,2,32,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1154,"            ymd = yearMonthDay(), // year month day",1,0,0,1,2,0,1,0,0,2,39,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1157,"            ww = weekyearWeek(),  // weekyear week",1,0,0,1,2,0,1,0,0,2,38,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1624,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1399,            return tx;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1393,            if (tx == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,631,"        return appendFraction(DateTimeFieldType.hourOfDay(), minDigits, maxDigits);",0,0,0,2,4,0,5,0,0,5,75,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1394,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2730,            return iParsedLengthEstimate;,1,0,0,0,0,0,0,0,0,1,29,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,384,        iElementPairs.add(printer);,0,0,0,1,2,0,3,0,0,3,27,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,383,        iFormatter = null;,1,0,0,0,0,0,0,0,0,2,18,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1561,            if (bdtx == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1562,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1812,            return we;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1816,            if (wwe == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1817,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1368,            if (ldotp == null) {,1,1,0,1,3,0,0,0,0,2,20,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1369,                DateTimeParser time = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,2,0,3,52,7,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1706,            return hmsl;,1,0,0,0,0,0,0,0,0,1,12,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1494,            if (bd == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1495,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1148,"            fse = fractionElement(), // fractionOfSecond element (.SSSSSSSSS)",1,0,0,2,4,0,1,0,0,2,65,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1149,"            ze = offsetElement(),  // zone offset element",1,0,0,1,2,0,1,0,0,2,45,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1146,"            mhe = minuteElement(), // minuteOfHour element (:mm)",1,0,0,2,4,0,1,0,0,2,52,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1147,"            sme = secondElement(), // secondOfMinute element (:ss)",1,0,0,2,4,0,1,0,0,2,54,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1144,"            dye = dayOfYearElement(), // dayOfYear element (-DDD)",1,0,0,2,4,0,1,0,0,2,53,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1145,"            hde = hourElement(), // hourOfDay element (HH)",1,0,0,2,4,0,1,0,0,2,46,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1634,            if (ym == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1635,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1140,"            dme = dayOfMonthElement(), // dayOfMonth element (-dd)",1,0,0,2,4,0,1,0,0,2,54,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1141,"            we = weekyearElement(),  // weekyear element (xxxx)",1,0,0,2,4,0,1,0,0,2,51,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1389,            return t;,1,0,0,0,0,0,0,0,0,1,9,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1383,            if (t == null) {,1,1,0,1,3,0,0,0,0,2,16,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1384,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,357,        if (parser == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1551,            if (bdt == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1552,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2802,                        est = len;,2,0,0,0,0,0,0,0,0,3,10,11,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1822,            return wwe;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1733,            if (dhm == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1734,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1609,            return bwd;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1601,            if (bwd == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1602,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,14,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1142,"            wwe = weekElement(), // weekOfWeekyear element (-ww)",1,0,0,2,4,0,1,0,0,2,52,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1143,"            dwe = dayOfWeekElement(), // dayOfWeek element (-ee)",1,0,0,2,4,0,1,0,0,2,52,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,164,        return iPrinter;,1,0,0,0,0,0,0,0,0,1,16,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1864,            if (mhe == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,614,"        return appendFraction(DateTimeFieldType.minuteOfDay(), minDigits, maxDigits);",0,0,0,2,4,0,5,0,0,5,77,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,346,"        DateTimeParser[] parsers = new DateTimeParser[] {parser, null};",2,0,0,3,6,0,0,2,0,4,63,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,347,"        return append0(null, new MatchingParser(parsers));",1,0,0,2,4,0,1,1,0,5,50,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,345,        checkParser(parser);,0,0,0,1,2,0,2,0,0,2,20,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1832,            return dwe;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1836,            if (dye == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1837,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1542,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1541,            if (bttx == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1547,            return bttx;,1,0,0,0,0,0,0,0,0,1,12,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1033,        return Constants.hde;,2,0,0,0,0,0,0,0,0,2,21,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1722,            if (dh == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1723,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1613,            if (bwdt == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1614,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1880,            return sme;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1826,            if (dwe == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1885,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1847,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,11,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1846,            if (lte == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1842,            return dye;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1537,            return btt;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1532,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1531,            if (btt == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1443,            if (od == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1444,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1449,            return od;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1284,            if (tpe == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1286,                DateTimeParser decimalPoint = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,2,0,3,60,7,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1194,"            bdtx = basicDateTimeNoMillis(), // basic date time no millis",1,0,0,1,2,0,1,0,0,2,60,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1197,"            bodt = basicOrdinalDateTime(), // basic ordinal date time",1,0,0,1,2,0,1,0,0,2,57,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1196,"            bod = basicOrdinalDate(),  // basic ordinal date",1,0,0,1,2,0,1,0,0,2,48,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1191,"            btt = basicTTime(), // basic Ttime",1,0,0,1,2,0,1,0,0,2,34,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1190,"            btx = basicTimeNoMillis(),  // basic time no millis",1,0,0,1,2,0,1,0,0,2,51,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1193,"            bdt = basicDateTime(), // basic date time",1,0,0,1,2,0,1,0,0,2,41,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1192,"            bttx = basicTTimeNoMillis(), // basic Ttime no millis",1,0,0,1,2,0,1,0,0,2,53,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1198,"            bodtx = basicOrdinalDateTimeNoMillis(), // basic ordinal date time no millis",1,0,0,1,2,0,1,0,0,2,76,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1263,            if (tp == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1264,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1166,"            dh = dateHour(),    // date hour",1,0,0,1,2,0,1,0,0,2,32,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1855,            if (hde == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1856,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,11,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1851,            return lte;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1527,            return btx;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1520,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,14,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1453,            if (odt == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1454,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1297,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1676,            if (hm == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1677,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1188,"            bd = basicDate(),  // basic date",1,0,0,1,2,0,1,0,0,2,32,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1189,"            bt = basicTime(),  // basic time",1,0,0,1,2,0,1,0,0,2,32,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1182,"            wdtx = weekDateTimeNoMillis(), // week date time no millis",1,0,0,1,2,0,1,0,0,2,58,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1186,"            odtx = ordinalDateTimeNoMillis(), // ordinal date time no millis",1,0,0,1,2,0,1,0,0,2,64,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1184,"            od = ordinalDate(),  // ordinal date (same as yd)",1,0,0,2,4,0,1,0,0,2,49,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1185,"            odt = ordinalDateTime(), // ordinal date time",1,0,0,1,2,0,1,0,0,2,45,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1274,            if (ltp == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,319,        DateTimeParser[] copyOfParsers = new DateTimeParser[length];,1,0,1,2,4,0,0,2,0,4,60,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,311,        int length = parsers.length;,3,0,0,0,0,0,0,0,0,3,28,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,312,        if (length == 1) {,1,1,0,1,3,0,0,0,0,2,18,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,795,"        return appendDecimal(DateTimeFieldType.weekOfWeekyear(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,71,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,220,"        return append0(formatter.getPrinter(), formatter.getParser());",0,0,0,3,6,0,5,0,0,5,62,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1860,            return hde;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1865,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1666,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1665,            if (wwd == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1515,            return bt;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1519,            if (btx == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1464,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1463,            if (odtx == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1212,            ldotp = localDateOptionalTimeParser(); // local date optional time parser,1,0,0,1,2,0,1,0,0,2,73,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1884,            if (fse == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1645,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1644,            if (ymd == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,182,        return iParser;,1,0,0,0,0,0,0,0,0,1,15,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,308,        if (parsers == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,305,        if (printer != null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,785,"        return appendDecimal(DateTimeFieldType.dayOfYear(), minDigits, 3);",0,0,0,2,4,0,4,0,0,4,66,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1874,            if (sme == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1875,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1870,            return mhe;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1506,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,16,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1505,            if (bt == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1501,            return bd;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1473,            if (wdt == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1892,            return fse;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1896,            if (ze == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1897,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,11,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1656,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1655,            if (ww == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1259,            return dpe;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1827,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,155,            return (DateTimeParser) f;,1,0,0,1,2,0,0,1,0,2,26,7,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,154,        if (isParser(f)) {,0,0,0,2,5,0,2,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,153,        Object f = getFormatter();,1,0,0,1,2,0,1,1,0,3,26,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1798,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1797,            if (dme == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1793,            return mye;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1409,            return tt;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1404,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1403,            if (tt == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1220,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1229,            if (ldp == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1139,"            mye = monthElement(), // monthOfYear element (-MM)",1,0,0,2,4,0,1,0,0,2,50,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1138,"            ye = yearElement(),  // year element (yyyy)",1,0,0,2,4,0,1,0,0,2,43,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1136,    static final class Constants {,1,0,0,0,1,2,0,0,0,3,30,2,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2800,                    int len = parser.estimateParsedLength();,1,0,0,1,2,0,2,0,0,3,40,10,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2801,                    if (len > est) {,2,1,0,1,3,0,0,0,0,3,16,9,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2806,            iParsedLengthEstimate = est;,2,0,0,0,0,0,0,0,0,3,28,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2795,            iParsers = parsers;,2,0,0,0,0,0,0,0,0,3,19,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2796,            int est = 0;,1,0,0,0,0,0,0,0,0,1,12,6,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2797,            for (int i=parsers.length; --i>=0 ;) {,4,1,0,1,3,0,0,0,0,6,38,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2798,                DateTimeParser parser = parsers[i];,1,0,1,1,2,0,0,1,0,4,35,7,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2799,                if (parser != null) {,1,1,0,1,3,0,0,0,0,2,21,7,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,326,        copyOfParsers[i] = parsers[i];,0,0,1,2,4,0,0,0,0,5,30,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,321,        for (i = 0; i < length - 1; i++) {,4,2,0,1,3,0,0,0,0,8,34,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,322,            if ((copyOfParsers[i] = parsers[i]) == null) {,0,1,1,4,9,0,0,0,0,6,46,6,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,328,"        return append0(printer, new MatchingParser(copyOfParsers));",1,0,0,2,4,0,2,1,0,4,59,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,217,        if (formatter == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1788,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1787,            if (mye == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1783,            return ye;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1419,            return ttx;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1414,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1413,            if (ttx == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1171,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1236,            if (dpe == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1237,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,11,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1230,                return dateElementParser().withZoneUTC();,0,0,0,2,4,0,2,0,0,2,41,8,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2810,            return iParsedLengthEstimate;,1,0,0,0,0,0,0,0,0,1,29,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1808,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,11,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1474,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2780,                    list.add(array[i]);,0,0,1,2,4,0,2,0,0,4,19,10,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,467,        if (numDigits <= 0) {,1,1,0,1,3,0,0,0,0,2,21,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,464,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1423,            if (dt == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1424,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1337,            if (dtp == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1333,            return tpe;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1686,            if (hms == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1682,            return hm;,1,0,0,0,0,0,0,0,0,1,10,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1209,"            ltp = localTimeParser(), // local time parser",1,0,0,1,2,0,1,0,0,2,45,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1208,"            tp = timeParser(),  // time parser",1,0,0,1,2,0,1,0,0,2,34,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1201,"            bwdt = basicWeekDateTime(), // basic week date time",1,0,0,1,2,0,1,0,0,2,51,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1200,"            bwd = basicWeekDate(),  // basic week date",1,0,0,1,2,0,1,0,0,2,42,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1202,"            bwdtx = basicWeekDateTimeNoMillis(), // basic week date time no millis",1,0,0,1,2,0,1,0,0,2,70,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1205,"            tpe = timeElementParser(), // time parser element",1,0,0,1,2,0,1,0,0,2,49,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1204,"            dpe = dateElementParser(), // date parser element",1,0,0,1,2,0,1,0,0,2,49,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1207,"            ldp = localDateParser(), // local date parser",1,0,0,1,2,0,1,0,0,2,45,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1206,"            dp = dateParser(),  // date parser",1,0,0,1,2,0,1,0,0,2,34,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,662,        return yearMonthDay();,0,0,0,1,2,0,1,0,0,1,22,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,995,        return Constants.ymd;,2,0,0,0,0,0,0,0,0,2,21,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2778,            if (array != null) {,1,1,0,1,3,0,0,0,0,2,20,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2779,                for (int i=0; i<array.length; i++) {,5,1,0,1,3,0,0,0,0,7,36,7,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2770,"                    addArrayToList(parserList, ((Composite)element).iParsers);",2,0,0,3,6,0,2,1,0,5,58,10,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,470,"        return append0(new FixedNumber(fieldType, numDigits, false));",2,0,0,2,4,0,1,1,0,5,61,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1434,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1433,            if (dtx == null) {,1,1,0,1,3,0,0,0,0,2,18,5,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1150,                    f = parser;,2,0,0,0,0,0,0,0,0,3,11,10,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1698,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,15,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1693,            return hms;,1,0,0,0,0,0,0,0,0,1,11,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1697,            if (hmsl == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1216,            if (dp == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1217,                DateTimeParser tOffset = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,2,0,3,55,7,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1744,            if (dhms == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1745,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,13,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1210,"            dtp = dateTimeParser(), // date time parser",1,0,0,1,2,0,1,0,0,2,43,4,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1211,"            dotp = dateOptionalTimeParser(), // date optional time parser",1,0,0,1,2,0,1,0,0,2,61,4,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2763,"                    addArrayToList(printerList, ((Composite)element).iPrinters);",2,0,0,3,6,0,2,1,0,5,60,10,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,807,"        return appendSignedDecimal(DateTimeFieldType.weekyear(), minDigits, maxDigits);",0,0,0,2,4,0,5,0,0,5,79,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1591,            if (bodtx == null) {,1,1,0,1,3,0,0,0,0,2,20,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1592,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1522,"            super(fieldType, numDigits, signed, numDigits);",4,0,0,1,2,0,0,0,0,4,47,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1359,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,12,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1354,                DateTimeParser timeOrOffset = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,2,0,3,60,7,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1353,            if (dotp == null) {,1,1,0,1,3,0,0,0,0,2,19,5,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1779,                return new DateTimeFormatterBuilder(),0,0,0,1,2,0,0,1,0,1,37,11,0.019363673,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,3,1778,            if (ye == null) {,1,1,0,1,3,0,0,0,0,2,17,5,0.019363673,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,319,        rebuildIndex();,0,0,0,1,2,0,1,0,0,1,15,7,0.019316493,0
defect4j,chart,org/jfree/data/category/DefaultCategoryDataset,18,351,        fireDatasetChanged();,0,0,0,1,2,0,1,0,0,1,21,5,0.019316493,0
defect4j,chart,org/jfree/data/category/DefaultCategoryDataset,18,350,        this.data.removeColumn(columnKey);,1,0,0,1,2,0,2,0,0,3,34,5,0.019316493,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2623,                iPrinters = null;,1,0,0,0,0,0,0,0,0,2,17,7,0.019268414,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2624,                iPrintedLengthEstimate = 0;,1,0,0,0,0,0,0,0,0,2,27,7,0.019268414,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,765,"        return appendDecimal(DateTimeFieldType.dayOfWeek(), minDigits, 1);",0,0,0,2,4,0,4,0,0,4,66,5,0.019268414,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2139,                est += iMinFields - 1;,2,1,0,0,0,0,0,0,0,4,22,7,0.019268414,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1299,            return iValue.length();,0,0,0,1,2,0,2,0,0,2,23,6,0.019221112,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1271,            iValue = value;,2,0,0,0,0,0,0,0,0,3,15,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1275,            return iValue.length();,0,0,0,1,2,0,2,0,0,2,23,6,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2064,            return iMaxDigits;,1,0,0,0,0,0,0,0,0,1,18,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2274,            return estimatePrintedLength();,0,0,0,1,2,0,1,0,0,1,31,6,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,579,"        return append0(new Fraction(fieldType, minDigits, maxDigits));",3,0,0,2,4,0,1,1,0,5,62,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,576,        if (minDigits < 0 || maxDigits <= 0) {,2,3,0,1,3,0,0,0,0,5,38,4,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,570,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,573,        if (maxDigits < minDigits) {,2,1,0,1,3,0,0,0,0,3,28,4,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1906,            return iMaxDigits;,1,0,0,0,0,0,0,0,0,1,18,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1901,            iMinDigits = minDigits;,2,0,0,0,0,0,0,0,0,3,23,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,411,        switch (text.length()) {,0,0,0,2,5,0,2,0,0,2,24,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,417,                return append0(new StringLiteral(text));,1,0,0,2,4,0,1,1,0,3,40,6,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,408,        if (text == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2138,            if (iShowSeparators) {,1,0,0,1,3,0,0,0,0,1,22,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2137,            int est = 1 + iMinFields << 1;,2,2,0,0,0,0,0,0,0,4,30,6,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1902,            iMaxDigits = maxDigits;,2,0,0,0,0,0,0,0,0,3,23,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,444,"            return append0(new UnpaddedNumber(fieldType, maxDigits, false));",2,0,0,2,4,0,1,1,0,5,64,7,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1401,"            super(fieldType, maxParsedDigits, signed);",3,0,0,1,2,0,0,0,0,3,42,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1405,            return iMaxParsedDigits;,1,0,0,0,0,0,0,0,0,1,24,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2144,            return est;,1,0,0,0,0,0,0,0,0,1,11,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2141,            if (iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est) {,2,3,0,2,5,0,2,0,0,7,74,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,597,"        return appendFraction(DateTimeFieldType.secondOfDay(), minDigits, maxDigits);",0,0,0,2,4,0,5,0,0,5,77,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1896,            iFieldType = fieldType;,2,0,0,0,0,0,0,0,0,3,23,5,0.019174026,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1898,            if (maxDigits > 18) {,1,1,0,1,3,0,0,0,0,2,21,5,0.019174026,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,866,        return yearMonthDay();,0,0,0,1,2,0,1,0,0,1,22,5,0.019147891,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,685,"        return appendDecimal(DateTimeFieldType.secondOfMinute(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,71,5,0.019127154,0
defect4j,time,org/joda/time/LocalDate,6,1206,        return withLocalMillis(instant);,0,0,0,1,2,0,2,0,0,2,32,5,0.019125975,0
defect4j,time,org/joda/time/DurationFieldType,16,294,                    return chronology.months();,0,0,0,1,2,0,2,0,0,2,27,7,0.019094808,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,105,"        return FieldUtils.safeAdd(instant, addition);",0,0,0,1,2,0,4,0,0,4,45,5,0.019034048,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,104,        long addition = value * iUnitMillis;  // safe,3,1,0,0,0,0,0,0,0,4,45,5,0.019034048,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,817,"        return appendDecimal(DateTimeFieldType.monthOfYear(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,68,5,0.018895961,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1365,        return ymd;,1,0,0,0,0,0,0,0,0,1,11,4,0.018885175,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1359,            ymd = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.018885175,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1358,        if (ymd == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.018885175,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1091,        return append0(new TimeZoneOffset,0,0,0,0,1,0,1,1,0,2,33,5,0.018850346,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,180,            if (isLeapYear(thisYear)) {,0,0,0,2,5,0,2,0,0,2,27,7,0.018850346,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2621,                locale = Locale.getDefault();,1,0,0,1,2,0,2,0,0,4,29,7,0.018679766,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2132,            iMinFields = minFields;,2,0,0,0,0,0,0,0,0,3,23,5,0.018669918,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2133,            iMaxFields = maxFields;,2,0,0,0,0,0,0,0,0,3,23,5,0.018669918,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2123,            iZeroOffsetParseText = zeroOffsetParseText;,2,0,0,0,0,0,0,0,0,3,43,5,0.018669918,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2122,            iZeroOffsetPrintText = zeroOffsetPrintText;,2,0,0,0,0,0,0,0,0,3,43,5,0.018669918,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2125,            if (minFields <= 0 || maxFields < minFields) {,3,3,0,1,3,0,0,0,0,6,46,5,0.018669918,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2124,            iShowSeparators = showSeparators;,2,0,0,0,0,0,0,0,0,3,33,5,0.018669918,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2128,            if (minFields > 4) {,1,1,0,1,3,0,0,0,0,2,20,5,0.018669918,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1169,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.018580904,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1179,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.018580904,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1142,                Object printer = iElementPairs.get(0);,1,0,0,1,2,0,2,1,0,4,38,8,0.018580904,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1143,                Object parser = iElementPairs.get(1);,1,0,0,1,2,0,2,1,0,4,37,8,0.018580904,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1145,                if (printer != null) {,1,1,0,1,3,0,0,0,0,2,22,8,0.018580904,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1146,                    if (printer == parser || parser == null) {,3,3,0,1,3,0,0,0,0,6,42,10,0.018580904,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1147,                        f = printer;,2,0,0,0,0,0,0,0,0,3,12,12,0.018580904,0
defect4j,time,org/joda/time/DateTimeFieldType,3,492,                    return chronology.year();,0,0,0,1,2,0,2,0,0,2,25,7,0.018448853,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,446,"                lower = Math.min(lower, 0.0);",1,0,0,1,2,0,3,0,0,5,29,8,0.018416031,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,447,"                upper = Math.max(upper, 0.0);",1,0,0,1,2,0,3,0,0,5,29,8,0.018416031,0
defect4j,time,org/joda/time/DateTimeZone,6,1058,            return oldInstant;,1,0,0,0,0,0,0,0,0,1,18,6,0.018337745,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,561,"        add(period, value, true);",0,0,0,1,2,0,3,0,0,4,25,5,0.018333333,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,575,"        add(item, notify);",0,0,0,1,2,0,3,0,0,3,18,5,0.018333333,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,574,"        TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",3,0,0,1,2,0,0,2,0,5,64,4,0.018333333,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,498,"            return append0(new PaddedNumber(fieldType, maxDigits, true, minDigits));",3,0,0,2,4,0,1,1,0,6,72,7,0.018275477,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,492,        if (minDigits < 0 || maxDigits <= 0) {,2,3,0,1,3,0,0,0,0,5,38,4,0.018275477,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,495,        if (minDigits <= 1) {,1,1,0,1,3,0,0,0,0,2,21,4,0.018275477,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,829,"        return appendSignedDecimal(DateTimeFieldType.year(), minDigits, maxDigits);",0,0,0,2,4,0,5,0,0,5,75,5,0.018275477,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,489,        if (maxDigits < minDigits) {,2,1,0,1,3,0,0,0,0,3,28,4,0.018275477,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,486,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.018275477,0
defect4j,time,org/joda/time/DateTimeFieldType,3,496,                    return chronology.monthOfYear();,0,0,0,1,2,0,2,0,0,2,32,7,0.018232605,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,775,"        return appendDecimal(DateTimeFieldType.dayOfMonth(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,67,5,0.018189919,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,333,"        return new DateTimeFormatter(iPrinter, iParser, iLocale,",3,0,0,0,1,0,0,1,0,4,56,5,0.018147419,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,310,        return withZone(DateTimeZone.UTC);,2,0,0,1,2,0,1,0,0,3,34,5,0.018147419,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,330,        if (iZone == zone) {,2,1,0,1,3,0,0,0,0,3,20,4,0.018147419,0
defect4j,time,org/joda/time/DurationFieldType,16,298,                    return chronology.days();,0,0,0,1,2,0,2,0,0,2,25,7,0.017992322,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1180,            buf.append(iValue);,0,0,0,1,2,0,3,0,0,3,19,6,0.017945007,0
defect4j,time,org/joda/time/DateTimeFieldType,16,522,                    return chronology.secondOfDay();,0,0,0,1,2,0,2,0,0,2,32,7,0.01789792,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,503,                    previous.increment();,0,0,0,1,2,0,2,0,0,2,21,11,0.017857143,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,566,            count++;,1,0,0,0,0,0,0,0,0,2,8,5,0.017857143,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2624,            int len = elements.length;,3,0,0,0,0,0,0,0,0,3,26,6,0.01775802,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2615,            if (elements == null) {,1,1,0,1,3,0,0,0,0,2,23,5,0.01775802,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2614,            DateTimePrinter[] elements = iPrinters;,2,0,0,1,2,0,0,1,0,3,39,5,0.01775802,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2619,            if (locale == null) {,1,1,0,1,3,0,0,0,0,2,21,5,0.01775802,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2625,            for (int i = 0; i < len; i++) {,4,1,0,1,3,0,0,0,0,6,31,5,0.01775802,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2626,"                elements[i].printTo(buf, instant, chrono, displayOffset, displayZone, locale);",0,0,1,2,4,0,7,0,0,9,78,8,0.01775802,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1437,                DateTimeField field = iFieldType.getField(chrono);,1,0,0,1,2,0,3,1,0,5,50,7,0.01775802,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1438,"                FormatUtils.appendPaddedInteger(buf, field.get(instant), iMinPrintedDigits);",0,0,0,2,4,0,7,0,0,7,76,8,0.01775802,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,133,"            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,",0,0,0,0,1,0,5,0,0,5,60,7,0.017732341,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,583,"        printTo(buf, instant);",0,0,0,1,2,0,3,0,0,3,22,5,0.017620123,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,584,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0.017620123,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,582,        StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());,1,0,0,3,6,0,2,2,0,5,78,4,0.017620123,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,459,        long millis = DateTimeUtils.getInstantMillis(instant);,1,0,0,1,2,0,3,0,0,4,54,5,0.017574595,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,461,"        printTo(buf, millis, chrono);",0,0,0,1,2,0,4,0,0,4,29,5,0.017574595,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,460,        Chronology chrono = DateTimeUtils.getInstantChronology(instant);,1,0,0,1,2,0,3,1,0,5,64,4,0.017574595,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,139,        iParser = parser;,2,0,0,0,0,0,0,0,0,3,17,4,0.017571204,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,138,        iPrinter = printer;,2,0,0,0,0,0,0,0,0,3,19,4,0.017571204,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,140,        iLocale = locale;,2,0,0,0,0,0,0,0,0,3,17,4,0.017571204,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,141,        iOffsetParsed = offsetParsed;,2,0,0,0,0,0,0,0,0,3,29,4,0.017571204,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,142,        iChrono = chrono;,2,0,0,0,0,0,0,0,0,3,17,4,0.017571204,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,143,        iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,4,0.017571204,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,144,        iPivotYear = pivotYear;,2,0,0,0,0,0,0,0,0,3,23,4,0.017571204,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,145,        iDefaultYear = defaultYear;,2,0,0,0,0,0,0,0,0,3,27,4,0.017571204,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,705,"        return appendDecimal(DateTimeFieldType.minuteOfHour(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,69,5,0.017373558,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,725,"        return appendDecimal(DateTimeFieldType.hourOfDay(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,66,5,0.017373558,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,622,        DateTimeZone zone = chrono.getZone();,1,0,0,1,2,0,2,1,0,4,37,4,0.01726187,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,631,"        printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",0,0,0,2,4,0,9,0,0,9,79,5,0.01726187,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,625,        if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0) {,4,5,0,3,7,0,0,0,0,9,65,4,0.01726187,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,624,        long adjustedInstant = instant + offset;,3,1,0,0,0,0,0,0,0,4,40,5,0.01726187,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,618,        DateTimePrinter printer = requirePrinter();,1,0,0,1,2,0,1,1,0,3,43,4,0.01726187,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,619,        chrono = selectChronology(chrono);,1,0,0,1,2,0,2,0,0,4,34,4,0.01726187,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,623,        int offset = zone.getOffset(instant);,1,0,0,1,2,0,3,0,0,4,37,5,0.01726187,0
defect4j,time,org/joda/time/field/FieldUtils,3,84,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,4,5,0,3,7,0,0,0,0,9,45,4,0.017027982,0
defect4j,time,org/joda/time/field/FieldUtils,3,82,        long sum = val1 + val2;,3,1,0,0,0,0,0,0,0,4,23,5,0.017027982,0
defect4j,time,org/joda/time/field/FieldUtils,3,88,        return sum;,1,0,0,0,0,0,0,0,0,1,11,4,0.017027982,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,202,            return iNextInfo.getOffset(millis);,0,0,0,1,2,0,3,0,0,3,35,6,0.016702881,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,437,"        return new DateTimeFormatter(iPrinter, iParser, iLocale,",3,0,0,0,1,0,0,1,0,4,56,5,0.016666203,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2120,                buf.append('+');,0,0,0,1,2,0,2,0,0,3,16,8,0.016666203,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,507,            return getYear(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));,3,2,0,2,4,0,1,0,0,6,66,8,0.016561598,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,434,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.016550692,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,437,        if (maxDigits < minDigits) {,2,1,0,1,3,0,0,0,0,3,28,4,0.016550692,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,446,"            return append0(new PaddedNumber(fieldType, maxDigits, false, minDigits));",3,0,0,2,4,0,1,1,0,6,73,7,0.016550692,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,440,        if (minDigits < 0 || maxDigits <= 0) {,2,3,0,1,3,0,0,0,0,5,38,4,0.016550692,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,443,        if (minDigits <= 1) {,1,1,0,1,3,0,0,0,0,2,21,4,0.016550692,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1468,            return iMaxParsedDigits;,1,0,0,0,0,0,0,0,0,1,24,5,0.016479449,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1326,            return iMaxParsedDigits;,1,0,0,0,0,0,0,0,0,1,24,5,0.016479449,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1320,            iFieldType = fieldType;,2,0,0,0,0,0,0,0,0,3,23,5,0.016444038,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1322,            iSigned = signed;,2,0,0,0,0,0,0,0,0,3,17,5,0.016444038,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1464,            iMinPrintedDigits = minPrintedDigits;,2,0,0,0,0,0,0,0,0,3,37,5,0.016444038,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1463,"            super(fieldType, maxParsedDigits, signed);",3,0,0,1,2,0,0,0,0,3,42,5,0.016444038,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1321,            iMaxParsedDigits = maxParsedDigits;,2,0,0,0,0,0,0,0,0,3,35,5,0.016444038,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2646,                    parseEst += parser.estimateParsedLength();,1,0,0,1,2,0,2,0,0,4,42,9,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2649,                iParsedLengthEstimate = parseEst;,2,0,0,0,0,0,0,0,0,3,33,7,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2642,                iParsers = new DateTimeParser[size];,1,0,1,1,2,0,0,1,0,4,36,7,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2643,                int parseEst = 0;,1,0,0,0,0,0,0,0,0,1,17,8,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2641,                int size = parserList.size();,1,0,0,1,2,0,2,0,0,3,29,8,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2647,                    iParsers[i] = parser;,1,0,1,1,2,0,0,0,0,4,21,9,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2645,                    DateTimeParser parser = (DateTimeParser) parserList.get(i);,1,0,0,2,4,0,3,2,0,6,59,9,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2629,                for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,7,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2626,                int size = printerList.size();,1,0,0,1,2,0,2,0,0,3,30,8,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2627,                iPrinters = new DateTimePrinter[size];,1,0,1,1,2,0,0,1,0,4,38,7,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2628,                int printEst = 0;,1,0,0,0,0,0,0,0,0,1,17,8,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2644,                for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,7,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2634,                iPrintedLengthEstimate = printEst;,2,0,0,0,0,0,0,0,0,3,34,7,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2632,                    iPrinters[i] = printer;,1,0,1,1,2,0,0,0,0,4,23,9,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2631,                    printEst += printer.estimatePrintedLength();,1,0,0,1,2,0,2,0,0,4,44,9,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2630,                    DateTimePrinter printer = (DateTimePrinter) printerList.get(i);,1,0,0,2,4,0,3,2,0,6,63,9,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2772,                    parserList.add(element);,0,0,0,1,2,0,3,0,0,3,24,10,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2769,                if (element instanceof Composite) {,1,0,0,1,3,0,0,1,0,2,35,8,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2768,                element = elementPairs.get(i + 1);,2,1,0,1,2,0,2,0,0,6,34,7,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2761,                Object element = elementPairs.get(i);,1,0,0,1,2,0,3,1,0,5,37,7,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2762,                if (element instanceof Composite) {,1,0,0,1,3,0,0,1,0,2,35,8,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2765,                    printerList.add(element);,0,0,0,1,2,0,3,0,0,3,25,10,0.016408768,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,397,        return append0(new CharacterLiteral(c));,1,0,0,2,4,0,1,1,0,3,40,5,0.016373637,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1208,            iValue = value;,2,0,0,0,0,0,0,0,0,3,15,5,0.016373637,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2759,            int size = elementPairs.size();,1,0,0,1,2,0,2,0,0,3,31,6,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2747,            return iPrinters != null;,1,1,0,0,0,0,0,0,0,2,25,5,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2751,            return iParsers != null;,1,1,0,0,0,0,0,0,0,2,24,5,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2617,            List<Object> printerList = new ArrayList<Object>();,1,0,0,1,2,0,0,4,0,5,51,5,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2618,            List<Object> parserList = new ArrayList<Object>();,1,0,0,1,2,0,0,4,0,5,50,5,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2620,"            decompose(elementPairs, printerList, parserList);",0,0,0,1,2,0,4,0,0,4,49,6,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2622,            if (printerList.contains(null) || printerList.isEmpty()) {,0,1,0,3,7,0,4,0,0,5,58,5,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2637,            if (parserList.contains(null) || parserList.isEmpty()) {,0,1,0,3,7,0,4,0,0,5,56,5,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1167,                return ((Composite)f).isPrinter();,1,0,0,3,6,0,1,1,0,3,34,9,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1177,                return ((Composite)f).isParser();,1,0,0,3,6,0,1,1,0,3,33,9,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1155,                f = new Composite(iElementPairs);,2,0,0,1,2,0,0,1,0,4,33,8,0.016338644,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,2760,            for (int i=0; i<size; i+=2) {,4,1,0,1,3,0,0,0,0,6,29,5,0.016338644,0
defect4j,chart,org/jfree/data/time/Year,9,176,        this.firstMillisecond = getFirstMillisecond(calendar);,1,0,0,1,2,0,2,0,0,4,54,4,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,177,        this.lastMillisecond = getLastMillisecond(calendar);,1,0,0,1,2,0,2,0,0,4,52,4,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,233,"        calendar.set(this.year, Calendar.JANUARY, 1, 0, 0, 0);",3,0,0,1,2,0,2,0,0,5,54,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,96,    public Year(int year) {,2,0,0,1,3,1,0,0,0,3,23,2,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,97,        if ((year < SerialDate.MINIMUM_YEAR_SUPPORTED),3,1,0,1,3,0,0,0,0,4,46,6,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,317,        if (o1 instanceof Year) {,1,0,0,1,3,0,0,1,0,2,25,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,234,"        calendar.set(Calendar.MILLISECOND, 0);",2,0,0,1,2,0,2,0,0,4,38,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,319,            result = this.year - y.getYear();,2,1,0,1,2,0,2,0,0,6,33,6,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,104,        peg(Calendar.getInstance());,0,0,0,2,4,0,3,0,0,3,28,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,103,        this.year = (short) year;,2,0,0,1,2,0,0,0,0,3,25,4,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,218,        return this.year;,1,0,0,0,0,0,0,0,0,1,17,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,136,        return this.year;,1,0,0,0,0,0,0,0,0,1,17,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,237,        return calendar.getTime().getTime();,0,0,0,2,4,0,3,0,0,3,36,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,336,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,318,            Year y = (Year) o1;,2,0,0,1,2,0,0,2,0,4,19,6,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,253,"        calendar.set(Calendar.MILLISECOND, 999);",2,0,0,1,2,0,2,0,0,4,40,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,252,"        calendar.set(this.year, Calendar.DECEMBER, 31, 23, 59, 59);",3,0,0,1,2,0,2,0,0,5,59,5,0.015873016,0
defect4j,chart,org/jfree/data/time/Year,9,256,        return calendar.getTime().getTime();,0,0,0,2,4,0,3,0,0,3,36,5,0.015873016,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,122,        iOffsetParsed = false;,1,0,0,0,0,0,0,0,0,3,22,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,123,        iChrono = null;,1,0,0,0,0,0,0,0,0,2,15,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,120,        iParser = parser;,2,0,0,0,0,0,0,0,0,3,17,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,121,        iLocale = null;,1,0,0,0,0,0,0,0,0,2,15,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,126,        iDefaultYear = 2000;,1,0,0,0,0,0,0,0,0,2,20,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,124,        iZone = null;,1,0,0,0,0,0,0,0,0,2,13,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,125,        iPivotYear = null;,1,0,0,0,0,0,0,0,0,2,18,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,108,            printer = (DateTimePrinter) f;,2,0,0,1,2,0,0,1,0,4,30,6,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,107,        if (isPrinter(f)) {,0,0,0,2,5,0,2,0,0,2,19,5,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,105,        Object f = getFormatter();,1,0,0,1,2,0,1,1,0,3,26,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,106,        DateTimePrinter printer = null;,1,0,0,0,0,0,0,1,0,2,31,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatter,3,119,        iPrinter = printer;,2,0,0,0,0,0,0,0,0,3,19,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,112,            parser = (DateTimeParser) f;,2,0,0,1,2,0,0,1,0,4,28,6,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,111,        if (isParser(f)) {,0,0,0,2,5,0,2,0,0,2,18,5,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,110,        DateTimeParser parser = null;,1,0,0,0,0,0,0,1,0,2,29,4,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,115,"            return new DateTimeFormatter(printer, parser);",2,0,0,1,2,0,0,1,0,3,46,7,0.015829809,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,114,        if (printer != null || parser != null) {,2,3,0,1,3,0,0,0,0,5,40,4,0.015829809,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,411,        if (isAutoRange()) {,0,0,0,2,5,0,1,0,0,1,20,5,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,489,                    if (lower >= 0.0) {,1,1,0,1,3,0,0,0,0,2,19,10,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,482,                if (getAutoRangeStickyZero()) {,0,0,0,2,5,0,1,0,0,1,31,9,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,483,                    if (upper <= 0.0) {,1,1,0,1,3,0,0,0,0,2,19,10,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,452,            double fixedAutoRange = getFixedAutoRange();,1,0,0,1,2,0,1,0,0,2,44,7,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,487,                        upper = upper + getUpperMargin() * range;,3,2,0,1,2,0,1,0,0,7,41,12,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,449,            double range = upper - lower;,3,1,0,0,0,0,0,0,0,4,29,7,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,440,            else if (this.rangeType == RangeType.NEGATIVE) {,3,1,0,1,3,0,0,0,0,4,48,7,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,430,            if (r == null) {,1,1,0,1,3,0,0,0,0,2,16,6,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,436,            if (this.rangeType == RangeType.POSITIVE) {,3,1,0,1,3,0,0,0,0,4,43,6,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,435,            double lower = r.getLowerBound();,1,0,0,1,2,0,2,0,0,3,33,7,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,434,            double upper = r.getUpperBound();,1,0,0,1,2,0,2,0,0,3,33,7,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,412,            autoAdjustRange();,0,0,0,1,2,0,1,0,0,1,18,7,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,273,        return this.autoRangeStickyZero;,1,0,0,0,0,0,0,0,0,1,32,5,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,445,            if (getAutoRangeIncludesZero()) {,0,0,0,2,5,0,1,0,0,1,33,7,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,238,        return this.autoRangeIncludesZero;,1,0,0,0,0,0,0,0,0,1,34,5,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,502,"            setRange(new Range(lower, upper), false, false);",2,0,0,2,4,0,1,1,0,6,48,7,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,429,            Range r = vap.getDataRange(this);,1,0,0,1,2,0,2,1,0,4,33,6,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,426,        if (plot instanceof ValueAxisPlot) {,1,0,0,1,3,0,0,1,0,2,36,5,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,427,            ValueAxisPlot vap = (ValueAxisPlot) plot;,2,0,0,1,2,0,0,2,0,4,41,6,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,459,                if (range < minRange) {,2,1,0,1,3,0,0,0,0,3,23,8,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,458,                double minRange = getAutoRangeMinimumSize();,1,0,0,1,2,0,1,0,0,2,44,9,0.015821678,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,453,            if (fixedAutoRange > 0.0) {,1,1,0,1,3,0,0,0,0,2,27,6,0.015821678,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1501,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,2,4,0,4,0,0,4,50,5,0.015810277,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1498,        if (searchChars == null) {,1,1,0,1,3,0,0,0,0,2,26,4,0.015810277,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,377,        iElementPairs.add(element);,0,0,0,1,2,0,3,0,0,3,27,5,0.015796922,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,376,        iElementPairs.add(element);,0,0,0,1,2,0,3,0,0,3,27,5,0.015796922,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,374,        iFormatter = null;,1,0,0,0,0,0,0,0,0,2,18,4,0.015796922,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1654,            lte = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.015765643,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1653,        if (lte == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.015765643,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1658,        return lte;,1,0,0,0,0,0,0,0,0,1,11,4,0.015765643,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1166,            if (f instanceof Composite) {,1,0,0,1,3,0,0,1,0,2,29,7,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1138,        Object f = iFormatter;,2,0,0,0,0,0,0,1,0,3,22,4,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1165,        if (f instanceof DateTimePrinter) {,1,0,0,1,3,0,0,1,0,2,35,5,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1161,        return f;,1,0,0,0,0,0,0,0,0,1,9,4,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1175,        if (f instanceof DateTimeParser) {,1,0,0,1,3,0,0,1,0,2,34,5,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1176,            if (f instanceof Composite) {,1,0,0,1,3,0,0,1,0,2,29,7,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1140,        if (f == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1141,            if (iElementPairs.size() == 2) {,0,1,0,2,5,0,2,0,0,3,32,6,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1158,            iFormatter = f;,2,0,0,0,0,0,0,0,0,3,15,6,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,1154,            if (f == null) {,1,1,0,1,3,0,0,0,0,2,16,6,0.015764161,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,3,85,        iElementPairs = new ArrayList<Object>();,1,0,0,1,2,0,0,2,0,4,40,4,0.015731524,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,128,        iPrinter = printer;,2,0,0,0,0,0,0,0,0,3,19,4,0.015618059,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,129,        iParser = parser;,2,0,0,0,0,0,0,0,0,3,17,4,0.015618059,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,131,        iOffsetParsed = offsetParsed;,2,0,0,0,0,0,0,0,0,3,29,4,0.015618059,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,130,        iLocale = locale;,2,0,0,0,0,0,0,0,0,3,17,4,0.015618059,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,133,        iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,4,0.015618059,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,132,        iChrono = chrono;,2,0,0,0,0,0,0,0,0,3,17,4,0.015618059,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,135,        iDefaultYear = defaultYear;,2,0,0,0,0,0,0,0,0,3,27,4,0.015618059,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,134,        iPivotYear = pivotYear;,2,0,0,0,0,0,0,0,0,3,23,4,0.015618059,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,421,        Plot plot = getPlot();,1,0,0,1,2,0,1,1,0,3,22,4,0.015431034,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,422,        if (plot == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.015431034,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,161,                return (index);,1,0,0,1,2,0,0,0,0,1,15,9,0.01505102,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,159,        for (int index = 0; index < this.size; index++) {,4,1,0,1,3,0,0,0,0,6,49,4,0.014864865,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,1059,        return this.lowerMargin;,1,0,0,0,0,0,0,0,0,1,24,5,0.014864865,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,160,            if (this.objects[index] == object) {,2,1,1,2,5,0,0,0,0,4,36,6,0.014864865,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,1092,        return this.upperMargin;,1,0,0,0,0,0,0,0,0,1,24,5,0.014864865,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,975,        return this.autoRangeMinimumSize;,1,0,0,0,0,0,0,0,0,1,33,5,0.014864865,0
defect4j,chart,org/jfree/chart/util/ObjectList,19,107,        return super.indexOf(object);    ,2,0,0,1,2,0,0,0,0,2,29,5,0.014864865,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,1122,        return this.fixedAutoRange;,1,0,0,0,0,0,0,0,0,1,27,5,0.014864865,0
defect4j,chart,org/jfree/chart/axis/Axis,19,1035,        Object[] listeners = this.listenerList.getListenerList();,2,0,0,2,4,0,1,1,0,4,57,4,0.014681208,0
defect4j,chart,org/jfree/chart/axis/Axis,19,999,"        this.listenerList.add(AxisChangeListener.class, listener);",1,0,0,1,2,0,2,1,0,4,58,5,0.014681208,0
defect4j,chart,org/jfree/chart/event/AxisChangeEvent,19,62,        this.axis = axis;,2,0,0,0,0,0,0,0,0,3,17,4,0.014681208,0
defect4j,chart,org/jfree/chart/axis/Axis,19,1036,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,5,2,0,1,3,0,0,0,0,8,52,4,0.014681208,0
defect4j,chart,org/jfree/chart/axis/Axis,19,898,        this.plot = plot;,2,0,0,0,0,0,0,0,0,3,17,4,0.014681208,0
defect4j,chart,org/jfree/chart/axis/Axis,19,899,        configure();,0,0,0,1,2,0,1,0,0,1,12,5,0.014681208,0
defect4j,chart,org/jfree/chart/event/AxisChangeEvent,19,61,        super(axis);,1,0,0,1,2,0,0,0,0,1,12,4,0.014681208,0
defect4j,time,org/joda/time/LocalDate,6,728,        zone = DateTimeUtils.getZone(zone);,1,0,0,1,2,0,3,0,0,5,35,4,0.014600605,0
defect4j,time,org/joda/time/LocalDate,6,729,        Chronology chrono = getChronology().withZone(zone);,1,0,0,2,4,0,3,1,0,5,51,4,0.014600605,0
defect4j,time,org/joda/time/LocalDate,6,730,        long localMillis = getLocalMillis() + 6L * DateTimeConstants.MILLIS_PER_HOUR;,3,2,0,1,2,0,1,0,0,6,77,5,0.014600605,0
defect4j,time,org/joda/time/LocalDate,6,733,"        return new DateTime(instant, chrono);",2,0,0,1,2,0,0,1,0,3,37,5,0.014600605,0
defect4j,time,org/joda/time/LocalDate,6,732,        instant = chrono.dayOfMonth().roundFloor(instant);,1,0,0,2,4,0,4,0,0,6,50,4,0.014600605,0
defect4j,time,org/joda/time/LocalDate,6,731,"        long instant = zone.convertLocalToUTC(localMillis, false);",1,0,0,1,2,0,3,0,0,5,58,5,0.014600605,0
defect4j,chart,org/jfree/chart/axis/Axis,19,885,        return this.plot;,1,0,0,0,0,0,0,0,0,1,17,5,0.0145,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,929,        return this.autoRange;,1,0,0,0,0,0,0,0,0,1,22,5,0.0145,0
defect4j,chart,org/jfree/data/time/Year,3,171,        return this.year;,1,0,0,0,0,0,0,0,0,1,17,5,0.014492754,0
defect4j,chart,org/jfree/data/time/Year,3,367,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.014492754,0
defect4j,chart,org/jfree/data/time/Year,3,350,            result = this.year - y.getYear();,2,1,0,1,2,0,2,0,0,6,33,6,0.014492754,0
defect4j,chart,org/jfree/data/time/Year,3,349,            Year y = (Year) o1;,2,0,0,1,2,0,0,2,0,4,19,6,0.014492754,0
defect4j,chart,org/jfree/data/time/Year,3,348,        if (o1 instanceof Year) {,1,0,0,1,3,0,0,1,0,2,25,5,0.014492754,0
defect4j,chart,org/jfree/data/time/Year,3,253,        return this.year;,1,0,0,0,0,0,0,0,0,1,17,5,0.014492754,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,301,            final Object key = this.keys.get(i);,2,0,0,1,2,1,2,1,0,6,36,6,0.014413076,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,300,        for (int i = 0; i < this.keys.size(); i++) {,4,1,0,2,5,0,1,0,0,7,44,4,0.014413076,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,302,"            this.indexMap.put(key, new Integer(i));",2,0,0,2,4,0,2,1,0,5,39,7,0.014413076,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,234,"            this.keys.set(keyIndex, key);",1,0,0,1,2,0,3,0,0,4,29,7,0.014413076,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,299,        this.indexMap.clear();,1,0,0,1,2,0,1,0,0,2,22,5,0.014413076,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2608,            return iPrintedLengthEstimate;,1,0,0,0,0,0,0,0,0,1,30,5,0.014395224,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,197,        this.rangeType = RangeType.FULL;,3,0,0,0,0,0,0,0,0,4,32,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,764,"        units.add(new NumberTickUnit(50L, df8));",1,0,0,2,4,0,2,1,0,4,40,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,769,"        units.add(new NumberTickUnit(5000000L, df9));",1,0,0,2,4,0,2,1,0,4,45,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,752,"        units.add(new NumberTickUnit(2500000000.0, df10));",1,0,0,2,4,0,2,1,0,4,50,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,753,"        units.add(new NumberTickUnit(25000000000.0, df10));",1,0,0,2,4,0,2,1,0,4,51,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,751,"        units.add(new NumberTickUnit(250000000, df9));",1,0,0,2,4,0,2,1,0,4,46,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,756,"        units.add(new NumberTickUnit(0.0000005, df1));",1,0,0,2,4,0,2,1,0,4,46,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,757,"        units.add(new NumberTickUnit(0.000005, df2));",1,0,0,2,4,0,2,1,0,4,45,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,754,"        units.add(new NumberTickUnit(250000000000.0, df10));",1,0,0,2,4,0,2,1,0,4,52,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,148,    public static final NumberTickUnit DEFAULT_TICK_UNIT = new NumberTickUnit(,1,0,0,0,1,3,0,2,0,6,74,2,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,737,"        units.add(new NumberTickUnit(0.0000025, df1));",1,0,0,2,4,0,2,1,0,4,46,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,731,"        units.add(new NumberTickUnit(100000000, df9));",1,0,0,2,4,0,2,1,0,4,46,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,718,"        units.add(new NumberTickUnit(0.00001, df3));",1,0,0,2,4,0,2,1,0,4,44,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,719,"        units.add(new NumberTickUnit(0.0001, df4));",1,0,0,2,4,0,2,1,0,4,43,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,716,"        units.add(new NumberTickUnit(0.0000001, df1));",1,0,0,2,4,0,2,1,0,4,46,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,712,"        DecimalFormat df10 = new DecimalFormat(""#,###,###,##0"");",1,0,0,1,2,0,0,2,0,4,56,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,710,"        DecimalFormat df8 = new DecimalFormat(""#,##0"");",1,0,0,1,2,0,0,2,0,4,47,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,711,"        DecimalFormat df9 = new DecimalFormat(""#,###,##0"");",1,0,0,1,2,0,0,2,0,4,51,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,763,"        units.add(new NumberTickUnit(5L, df8));",1,0,0,2,4,0,2,1,0,4,39,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,762,"        units.add(new NumberTickUnit(0.5, df7));",1,0,0,2,4,0,2,1,0,4,40,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,761,"        units.add(new NumberTickUnit(0.05, df6));",1,0,0,2,4,0,2,1,0,4,41,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,760,"        units.add(new NumberTickUnit(0.005, df5));",1,0,0,2,4,0,2,1,0,4,42,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,767,"        units.add(new NumberTickUnit(50000L, df8));",1,0,0,2,4,0,2,1,0,4,43,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,766,"        units.add(new NumberTickUnit(5000L, df8));",1,0,0,2,4,0,2,1,0,4,42,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,765,"        units.add(new NumberTickUnit(500L, df8));",1,0,0,2,4,0,2,1,0,4,41,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,200,        this.tickUnit = DEFAULT_TICK_UNIT;,2,0,0,0,0,0,0,0,0,3,34,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,201,        this.numberFormatOverride = null;,1,0,0,0,0,0,0,0,0,2,33,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,726,"        units.add(new NumberTickUnit(1000, df8));",1,0,0,2,4,0,2,1,0,4,41,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,725,"        units.add(new NumberTickUnit(100, df8));",1,0,0,2,4,0,2,1,0,4,40,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,723,"        units.add(new NumberTickUnit(1, df8));",1,0,0,2,4,0,2,1,0,4,38,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,722,"        units.add(new NumberTickUnit(0.1, df7));",1,0,0,2,4,0,2,1,0,4,40,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,721,"        units.add(new NumberTickUnit(0.01, df6));",1,0,0,2,4,0,2,1,0,4,41,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,728,"        units.add(new NumberTickUnit(100000, df8));",1,0,0,2,4,0,2,1,0,4,43,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,202,        this.markerBand = null;,1,0,0,0,0,0,0,0,0,2,23,4,0.014321192,0
defect4j,chart,org/jfree/data/RangeType,19,75,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.014321192,0
defect4j,chart,org/jfree/data/RangeType,19,74,    private RangeType(String name) {,2,0,0,1,3,1,0,1,0,4,32,2,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,727,"        units.add(new NumberTickUnit(10000, df8));",1,0,0,2,4,0,2,1,0,4,42,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,724,"        units.add(new NumberTickUnit(10, df8));",1,0,0,2,4,0,2,1,0,4,39,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,771,"        units.add(new NumberTickUnit(500000000L, df9));",1,0,0,2,4,0,2,1,0,4,47,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,770,"        units.add(new NumberTickUnit(50000000L, df9));",1,0,0,2,4,0,2,1,0,4,46,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,772,"        units.add(new NumberTickUnit(5000000000L, df10));",1,0,0,2,4,0,2,1,0,4,49,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,773,"        units.add(new NumberTickUnit(50000000000L, df10));",1,0,0,2,4,0,2,1,0,4,50,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,774,"        units.add(new NumberTickUnit(500000000000L, df10));",1,0,0,2,4,0,2,1,0,4,51,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,776,        return units;,1,0,0,0,0,0,0,0,0,1,13,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,734,"        units.add(new NumberTickUnit(100000000000.0, df10));",1,0,0,2,4,0,2,1,0,4,52,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,736,"        units.add(new NumberTickUnit(0.00000025, df0));",1,0,0,2,4,0,2,1,0,4,47,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,730,"        units.add(new NumberTickUnit(10000000, df9));",1,0,0,2,4,0,2,1,0,4,45,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,732,"        units.add(new NumberTickUnit(1000000000, df10));",1,0,0,2,4,0,2,1,0,4,48,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,733,"        units.add(new NumberTickUnit(10000000000.0, df10));",1,0,0,2,4,0,2,1,0,4,51,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,738,"        units.add(new NumberTickUnit(0.000025, df2));",1,0,0,2,4,0,2,1,0,4,45,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,739,"        units.add(new NumberTickUnit(0.00025, df3));",1,0,0,2,4,0,2,1,0,4,44,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,720,"        units.add(new NumberTickUnit(0.001, df5));",1,0,0,2,4,0,2,1,0,4,42,5,0.014321192,0
defect4j,chart,org/jfree/data/RangeType,19,63,    public static final RangeType NEGATIVE ,1,0,0,0,0,3,0,1,0,5,38,2,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,768,"        units.add(new NumberTickUnit(500000L, df8));",1,0,0,2,4,0,2,1,0,4,44,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,729,"        units.add(new NumberTickUnit(1000000, df9));",1,0,0,2,4,0,2,1,0,4,44,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,750,"        units.add(new NumberTickUnit(25000000, df9));",1,0,0,2,4,0,2,1,0,4,45,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,717,"        units.add(new NumberTickUnit(0.000001, df2));",1,0,0,2,4,0,2,1,0,4,45,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,749,"        units.add(new NumberTickUnit(2500000, df9));",1,0,0,2,4,0,2,1,0,4,44,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,748,"        units.add(new NumberTickUnit(250000, df8));",1,0,0,2,4,0,2,1,0,4,43,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,745,"        units.add(new NumberTickUnit(250, df8));",1,0,0,2,4,0,2,1,0,4,40,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,744,"        units.add(new NumberTickUnit(25, df8));",1,0,0,2,4,0,2,1,0,4,39,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,747,"        units.add(new NumberTickUnit(25000, df8));",1,0,0,2,4,0,2,1,0,4,42,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,746,"        units.add(new NumberTickUnit(2500, df8));",1,0,0,2,4,0,2,1,0,4,41,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,741,"        units.add(new NumberTickUnit(0.025, df5));",1,0,0,2,4,0,2,1,0,4,42,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,740,"        units.add(new NumberTickUnit(0.0025, df4));",1,0,0,2,4,0,2,1,0,4,43,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,743,"        units.add(new NumberTickUnit(2.5, df7));",1,0,0,2,4,0,2,1,0,4,40,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,742,"        units.add(new NumberTickUnit(0.25, df6));",1,0,0,2,4,0,2,1,0,4,41,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,759,"        units.add(new NumberTickUnit(0.0005, df4));",1,0,0,2,4,0,2,1,0,4,43,5,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,196,"        super(label, NumberAxis.createStandardTickUnits());",1,0,0,2,4,0,2,0,0,3,51,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,198,        this.autoRangeIncludesZero = DEFAULT_AUTO_RANGE_INCLUDES_ZERO;,2,0,0,0,0,0,0,0,0,3,62,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,199,        this.autoRangeStickyZero = DEFAULT_AUTO_RANGE_STICKY_ZERO;,2,0,0,0,0,0,0,0,0,3,58,4,0.014321192,0
defect4j,chart,org/jfree/data/RangeType,19,56,"    public static final RangeType FULL = new RangeType(""RangeType.FULL"");",1,0,0,1,2,3,0,2,0,7,69,2,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,758,"        units.add(new NumberTickUnit(0.00005, df3));",1,0,0,2,4,0,2,1,0,4,44,5,0.014321192,0
defect4j,chart,org/jfree/data/RangeType,19,59,    public static final RangeType POSITIVE ,1,0,0,0,0,3,0,1,0,5,38,2,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,709,"        DecimalFormat df7 = new DecimalFormat(""0.0"");",1,0,0,1,2,0,0,2,0,4,45,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,708,"        DecimalFormat df6 = new DecimalFormat(""0.00"");",1,0,0,1,2,0,0,2,0,4,46,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,701,        TickUnits units = new TickUnits();,1,0,0,1,2,0,0,2,0,3,34,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,703,"        DecimalFormat df1 = new DecimalFormat(""0.0000000"");",1,0,0,1,2,0,0,2,0,4,51,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,702,"        DecimalFormat df0 = new DecimalFormat(""0.00000000"");",1,0,0,1,2,0,0,2,0,4,52,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,705,"        DecimalFormat df3 = new DecimalFormat(""0.00000"");",1,0,0,1,2,0,0,2,0,4,49,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,704,"        DecimalFormat df2 = new DecimalFormat(""0.000000"");",1,0,0,1,2,0,0,2,0,4,50,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,707,"        DecimalFormat df5 = new DecimalFormat(""0.000"");",1,0,0,1,2,0,0,2,0,4,47,4,0.014321192,0
defect4j,chart,org/jfree/chart/axis/NumberAxis,19,706,"        DecimalFormat df4 = new DecimalFormat(""0.0000"");",1,0,0,1,2,0,0,2,0,4,48,4,0.014321192,0
defect4j,time,org/joda/time/DateTimeFieldType,3,480,            chronology = DateTimeUtils.getChronology(chronology);,1,0,0,1,2,0,3,0,0,5,53,5,0.014163103,0
defect4j,time,org/joda/time/DateTimeFieldType,3,482,            switch (iOrdinal) {,1,0,0,1,3,0,0,0,0,1,19,5,0.014163103,0
defect4j,time,org/joda/time/LocalDate,6,638,                return iLocalMillis == other.iLocalMillis;,3,1,0,0,0,0,0,0,0,4,42,8,0.013979163,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,1239,        if (turnOffAutoRange) {,1,0,0,1,3,0,0,0,0,1,23,4,0.013970588,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,1236,        if (range == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.013970588,0
defect4j,chart,org/jfree/chart/axis/TickUnit,19,150,                return -1;,0,0,0,0,0,0,0,0,0,1,10,9,0.013970588,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,1243,        if (notify) {,1,0,0,1,3,0,0,0,0,1,13,4,0.013970588,0
defect4j,chart,org/jfree/chart/axis/TickUnit,19,149,            else if (this.size < other.getSize()) {,1,1,0,2,5,0,2,0,0,4,39,7,0.013970588,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,1242,        this.range = range;,2,0,0,0,0,0,0,0,0,3,19,4,0.013970588,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1605,            if (iTailZone != null) {,1,1,0,1,3,0,0,0,0,2,24,5,0.013935778,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1704,            ze = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,35,6,0.013906091,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1703,        if (ze == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.013906091,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1708,        return ze;,1,0,0,0,0,0,0,0,0,1,10,4,0.013906091,0
defect4j,chart,org/jfree/data/Range,19,108,        return this.upper;,1,0,0,0,0,0,0,0,0,1,18,5,0.013798701,0
defect4j,chart,org/jfree/data/Range,19,99,        return this.lower;,1,0,0,0,0,0,0,0,0,1,18,5,0.013798701,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,108,"        super(createMessage(fieldType.getName(), value, lowerBound, upperBound, null));",0,0,0,3,6,0,6,0,0,8,79,3,0.013783524,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,109,        iDateTimeFieldType = fieldType;,2,0,0,0,0,0,0,0,0,3,31,4,0.013783524,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,115,        iUpperBound = upperBound;,2,0,0,0,0,0,0,0,0,3,25,4,0.013783524,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,111,        iFieldName = fieldType.getName();,1,0,0,1,2,0,2,0,0,4,33,4,0.013783524,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,110,        iDurationFieldType = null;,1,0,0,0,0,0,0,0,0,2,26,4,0.013783524,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,113,        iStringValue = null;,1,0,0,0,0,0,0,0,0,2,20,4,0.013783524,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,112,        iNumberValue = value;,2,0,0,0,0,0,0,0,0,3,21,4,0.013783524,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,114,        iLowerBound = lowerBound;,2,0,0,0,0,0,0,0,0,3,25,4,0.013783524,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,116,        iMessage = super.getMessage();,2,0,0,1,2,0,0,0,0,3,30,4,0.013783524,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2101,                est += iMinFields - 1;,2,1,0,0,0,0,0,0,0,4,22,7,0.013643955,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,588,"        add(period, value, true);",0,0,0,1,2,0,3,0,0,4,25,5,0.013636364,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,603,"        add(item, notify);",0,0,0,1,2,0,3,0,0,3,18,5,0.013636364,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,602,"        TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",3,0,0,1,2,0,0,2,0,5,64,4,0.013636364,0
defect4j,time,org/joda/time/LocalDate,6,632,        if (this == partial) {,1,1,0,1,3,0,0,0,0,2,22,4,0.013593245,0
defect4j,time,org/joda/time/LocalDate,6,635,        if (partial instanceof LocalDate) {,1,0,0,1,3,0,0,1,0,2,35,5,0.013593245,0
defect4j,time,org/joda/time/LocalDate,6,636,            LocalDate other = (LocalDate) partial;,2,0,0,1,2,0,0,2,0,4,38,6,0.013593245,0
defect4j,time,org/joda/time/LocalDate,6,637,            if (iChronology.equals(other.iChronology)) {,2,0,0,2,5,0,2,0,0,4,44,7,0.013593245,0
defect4j,time,org/joda/time/DateTimeUtils,16,167,        Chronology chrono = instant.getChronology();,1,0,0,1,2,0,2,1,0,4,44,4,0.013474098,0
defect4j,time,org/joda/time/DateTimeUtils,16,168,        if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.013474098,0
defect4j,time,org/joda/time/DateTimeUtils,16,171,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.013474098,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2145,            if (displayOffset == 0 && iMinFields <= 2) {,2,3,0,1,3,0,0,0,0,5,44,5,0.013362961,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2144,            displayOffset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;,4,1,0,0,0,0,0,0,0,6,63,5,0.013362961,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,657,        DateTimePrinter printer = iPrinter;,2,0,0,0,0,0,0,1,0,3,35,4,0.013253462,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,658,        if (printer == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.013253462,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,661,        return printer;,1,0,0,0,0,0,0,0,0,1,15,4,0.013253462,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1858,            iFieldType = fieldType;,2,0,0,0,0,0,0,0,0,3,23,5,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,532,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,535,        if (maxDigits < minDigits) {,2,1,0,1,3,0,0,0,0,3,28,4,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,538,        if (minDigits < 0 || maxDigits <= 0) {,2,3,0,1,3,0,0,0,0,5,38,4,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1868,            return iMaxDigits;,1,0,0,0,0,0,0,0,0,1,18,5,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1863,            iMinDigits = minDigits;,2,0,0,0,0,0,0,0,0,3,23,5,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2026,            return iMaxDigits;,1,0,0,0,0,0,0,0,0,1,18,5,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,559,"        return appendFraction(DateTimeFieldType.secondOfDay(), minDigits, maxDigits);",0,0,0,2,4,0,5,0,0,5,77,5,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,541,"        return append0(new Fraction(fieldType, minDigits, maxDigits));",3,0,0,2,4,0,1,1,0,5,62,5,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1860,            if (maxDigits > 18) {,1,1,0,1,3,0,0,0,0,2,21,5,0.013199315,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1864,            iMaxDigits = maxDigits;,2,0,0,0,0,0,0,0,0,3,23,5,0.013199315,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1596,            if (i < transitions.length) {,3,1,0,1,3,0,0,0,0,4,29,5,0.01317239,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1595,            i = ~i;,2,0,0,0,0,0,0,0,0,4,7,5,0.01317239,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1587,            long[] transitions = iTransitions;,2,0,0,1,2,0,0,0,0,2,34,6,0.01317239,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1588,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,1,2,0,4,0,0,5,50,6,0.01317239,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1589,            if (i >= 0) {,1,1,0,1,3,0,0,0,0,2,13,5,0.01317239,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,119,        return iZone.previousTransition(instant);,0,0,0,1,2,0,3,0,0,3,41,5,0.01317239,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2138,                buf.append(':');,0,0,0,1,2,0,2,0,0,3,16,8,0.013097522,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,81,            return (int) ((instant / getUnitMillis()) % iRange);,2,2,0,4,8,0,1,0,0,5,52,8,0.013063749,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2099,            int est = 1 + iMinFields << 1;,2,2,0,0,0,0,0,0,0,4,30,6,0.013039232,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2100,            if (iShowSeparators) {,1,0,0,1,3,0,0,0,0,1,22,5,0.013039232,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2103,            if (iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est) {,2,3,0,2,5,0,2,0,0,7,74,5,0.013039232,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2106,            return est;,1,0,0,0,0,0,0,0,0,1,11,5,0.013039232,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2236,            return estimatePrintedLength();,0,0,0,1,2,0,1,0,0,1,31,6,0.013039232,0
defect4j,chart,org/jfree/data/time/Year,3,269,"        calendar.set(Calendar.MILLISECOND, 0);",2,0,0,1,2,0,2,0,0,4,38,5,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,268,"        calendar.set(this.year, Calendar.JANUARY, 1, 0, 0, 0);",3,0,0,1,2,0,2,0,0,5,54,5,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,272,        return calendar.getTime().getTime();,0,0,0,2,4,0,3,0,0,3,36,5,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,287,"        calendar.set(this.year, Calendar.DECEMBER, 31, 23, 59, 59);",3,0,0,1,2,0,2,0,0,5,59,5,0.012925969,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,680,"        add(period, value, true);",0,0,0,1,2,0,3,0,0,4,25,5,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,119,        this.year = (short) year;,2,0,0,1,2,0,0,0,0,3,25,4,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,114,    public Year(int year) {,2,0,0,1,3,1,0,0,0,3,23,2,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,115,        if ((year < Year.MINIMUM_YEAR) || (year > Year.MAXIMUM_YEAR)) {,6,3,0,3,7,0,0,0,0,9,63,4,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,288,"        calendar.set(Calendar.MILLISECOND, 999);",2,0,0,1,2,0,2,0,0,4,40,5,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,212,        this.lastMillisecond = getLastMillisecond(calendar);,1,0,0,1,2,0,2,0,0,4,52,4,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,211,        this.firstMillisecond = getFirstMillisecond(calendar);,1,0,0,1,2,0,2,0,0,4,54,4,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,291,        return calendar.getTime().getTime();,0,0,0,2,4,0,3,0,0,3,36,5,0.012925969,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,121,"        this(period, new Double(value));",2,0,0,2,4,0,0,1,0,3,32,4,0.012925969,0
defect4j,chart,org/jfree/data/time/Year,3,120,        peg(Calendar.getInstance());,0,0,0,2,4,0,3,0,0,3,28,5,0.012925969,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,694,"        add(item, notify);",0,0,0,1,2,0,3,0,0,3,18,5,0.012925969,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,693,"        TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",3,0,0,1,2,0,0,2,0,5,64,4,0.012925969,0
defect4j,time,org/joda/time/DateTimeZone,16,901,            long prev = previousTransition(instantAdjusted);,1,0,0,1,2,0,2,0,0,3,48,8,0.012831134,0
defect4j,time,org/joda/time/DateTimeZone,16,903,                int offsetPrev = getOffset(prev);,1,0,0,1,2,0,2,0,0,3,33,10,0.012831134,0
defect4j,time,org/joda/time/DateTimeZone,16,902,            if (prev < instantAdjusted) {,2,1,0,1,3,0,0,0,0,3,29,7,0.012831134,0
defect4j,time,org/joda/time/DateTimeZone,16,905,                if (instantAdjusted - prev <= diff) {,3,2,0,1,3,0,0,0,0,5,37,9,0.012831134,0
defect4j,time,org/joda/time/DateTimeZone,16,904,                int diff = offsetPrev - offsetLocal;,3,1,0,0,0,0,0,0,0,4,36,10,0.012831134,0
defect4j,chart,org/jfree/chart/axis/NumberTickUnit,19,86,        this.formatter = formatter;,2,0,0,0,0,0,0,0,0,3,27,4,0.0128125,0
defect4j,chart,org/jfree/chart/axis/NumberTickUnit,19,83,        if (formatter == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.0128125,0
defect4j,chart,org/jfree/chart/axis/NumberTickUnit,19,82,        super(size);,1,0,0,1,2,0,0,0,0,1,12,4,0.0128125,0
defect4j,time,org/joda/time/DateTimeUtils,16,164,        if (instant == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.012780036,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,209,"        setValue(key, value);",0,0,0,1,2,0,3,0,0,3,21,5,0.012778603,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,1,1,0,1,3,0,0,0,0,2,23,4,0.012765957,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,1,1,0,1,3,0,0,0,0,2,22,4,0.012765957,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",2,0,0,1,2,0,0,1,0,3,44,5,0.012765957,0
defect4j,time,org/joda/time/DateTimeUtils,16,149,        return instant.getMillis();,0,0,0,1,2,0,2,0,0,2,27,5,0.012729302,0
defect4j,time,org/joda/time/base/BaseDateTime,3,304,        return iChronology;,1,0,0,0,0,0,0,0,0,1,19,4,0.012657514,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2119,            if (displayOffset >= 0) {,1,1,0,1,3,0,0,0,0,2,25,5,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2131,            displayOffset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR;,4,1,0,1,2,0,0,0,0,6,64,5,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2136,            int minutes = displayOffset / DateTimeConstants.MILLIS_PER_MINUTE;,4,1,0,0,0,0,0,0,0,5,66,6,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2137,            if (iShowSeparators) {,1,0,0,1,3,0,0,0,0,1,22,5,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2132,            if (displayOffset == 0 && iMinFields <= 1) {,2,3,0,1,3,0,0,0,0,5,44,5,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2127,"            FormatUtils.appendPaddedInteger(buf, hours, 2);",0,0,0,1,2,0,4,0,0,4,47,6,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2126,            int hours = displayOffset / DateTimeConstants.MILLIS_PER_HOUR;,4,1,0,0,0,0,0,0,0,5,62,6,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2128,            if (iMaxFields == 1) {,1,1,0,1,3,0,0,0,0,2,22,5,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2141,            if (iMaxFields == 2) {,1,1,0,1,3,0,0,0,0,2,22,5,0.012545664,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2140,"            FormatUtils.appendPaddedInteger(buf, minutes, 2);",0,0,0,1,2,0,4,0,0,4,49,6,0.012545664,0
defect4j,time,org/joda/time/DurationFieldType,16,282,            chronology = DateTimeUtils.getChronology(chronology);,1,0,0,1,2,0,3,0,0,5,53,5,0.012456584,0
defect4j,time,org/joda/time/DurationFieldType,16,284,            switch (iOrdinal) {,1,0,0,1,3,0,0,0,0,1,19,5,0.012456584,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1053,        return append0(new TimeZoneOffset,0,0,0,0,1,0,1,1,0,2,33,5,0.012432309,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,226,            leapYears = relativeYear >> 2;,2,1,0,0,0,0,0,0,0,4,30,6,0.012394487,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,229,                leapYears++;,1,0,0,0,0,0,0,0,0,2,12,8,0.012394487,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,228,            if (!isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,3,24,6,0.012394487,0
defect4j,chart,org/jfree/chart/axis/TickUnits,19,90,        if (unit == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnits,19,94,        Collections.sort(this.tickUnits);,1,0,0,1,2,0,2,0,0,3,33,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,147,"    public static final Range DEFAULT_RANGE = new Range(0.0, 1.0);",1,0,0,1,2,3,0,2,0,6,62,2,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,269,        this.defaultAutoRange = DEFAULT_RANGE;,2,0,0,0,0,0,0,0,0,3,38,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,268,        this.autoRange = DEFAULT_AUTO_RANGE;,2,0,0,0,0,0,0,0,0,3,36,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,265,        this.negativeArrowVisible = false;,1,0,0,0,0,0,0,0,0,3,34,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,264,        this.positiveArrowVisible = false;,1,0,0,0,0,0,0,0,0,3,34,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,267,        this.range = DEFAULT_RANGE;,2,0,0,0,0,0,0,0,0,3,27,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,262,        super(label);,1,0,0,1,2,0,0,0,0,1,13,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnits,19,79,    public TickUnits() {,1,0,0,1,3,1,0,0,0,2,20,2,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnits,19,93,        this.tickUnits.add(unit);,1,0,0,1,2,0,2,0,0,3,25,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,310,        this.verticalTickLabels = false;,1,0,0,0,0,0,0,0,0,3,32,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnits,19,80,        this.tickUnits = new ArrayList();,1,0,0,1,2,0,0,1,0,3,33,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnit,19,144,        if (object instanceof TickUnit) {,1,0,0,1,3,0,0,1,0,2,33,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnit,19,145,            TickUnit other = (TickUnit) object;,2,0,0,1,2,0,0,2,0,4,35,6,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnit,19,146,            if (this.size > other.getSize()) {,1,1,0,2,5,0,2,0,0,4,34,6,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnit,19,106,        return this.size;,1,0,0,0,0,0,0,0,0,1,17,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,298,"        p3.addPoint(-2, -2);",0,0,0,1,2,0,2,0,0,4,20,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,299,"        p3.addPoint(-2, 2);",0,0,0,1,2,0,2,0,0,3,19,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,294,        this.downArrow = p2;,2,0,0,0,0,0,0,0,0,3,20,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,296,        Polygon p3 = new Polygon();,1,0,0,1,2,0,0,2,0,3,27,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,297,"        p3.addPoint(0, 0);",0,0,0,1,2,0,2,0,0,2,18,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,290,"        p2.addPoint(0, 0);",0,0,0,1,2,0,2,0,0,2,18,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,292,"        p2.addPoint(2, -2);",0,0,0,1,2,0,2,0,0,3,19,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnit,19,84,        this.size = size;,2,0,0,0,0,0,0,0,0,3,17,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/TickUnit,19,83,    public TickUnit(double size) {,2,0,0,1,3,1,0,0,0,3,30,2,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,283,"        p1.addPoint(0, 0);",0,0,0,1,2,0,2,0,0,2,18,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,282,        Polygon p1 = new Polygon();,1,0,0,1,2,0,0,2,0,3,27,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,280,        this.standardTickUnits = standardTickUnits;,2,0,0,0,0,0,0,0,0,3,43,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,287,        this.upArrow = p1;,2,0,0,0,0,0,0,0,0,3,18,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,285,"        p1.addPoint(2, 2);",0,0,0,1,2,0,2,0,0,2,18,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,284,"        p1.addPoint(-2, 2);",0,0,0,1,2,0,2,0,0,3,19,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,289,        Polygon p2 = new Polygon();,1,0,0,1,2,0,0,2,0,3,27,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,279,        this.autoTickUnitSelection = DEFAULT_AUTO_TICK_UNIT_SELECTION;,2,0,0,0,0,0,0,0,0,3,62,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,277,        this.fixedAutoRange = 0.0;,1,0,0,0,0,0,0,0,0,2,26,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,274,        this.lowerMargin = DEFAULT_LOWER_MARGIN;,2,0,0,0,0,0,0,0,0,3,40,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,275,        this.upperMargin = DEFAULT_UPPER_MARGIN;,2,0,0,0,0,0,0,0,0,3,40,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,272,        this.autoRangeMinimumSize = DEFAULT_AUTO_RANGE_MINIMUM_SIZE;,2,0,0,0,0,0,0,0,0,3,60,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,271,        this.inverted = DEFAULT_INVERTED;,2,0,0,0,0,0,0,0,0,3,33,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,303,        Polygon p4 = new Polygon();,1,0,0,1,2,0,0,2,0,3,27,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,301,        this.rightArrow = p3;,2,0,0,0,0,0,0,0,0,3,21,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,306,"        p4.addPoint(2, 2);",0,0,0,1,2,0,2,0,0,2,18,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,304,"        p4.addPoint(0, 0);",0,0,0,1,2,0,2,0,0,2,18,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,305,"        p4.addPoint(2, -2);",0,0,0,1,2,0,2,0,0,3,19,5,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,308,        this.leftArrow = p4;,2,0,0,0,0,0,0,0,0,3,20,4,0.012346626,0
defect4j,chart,org/jfree/chart/axis/ValueAxis,19,291,"        p2.addPoint(-2, -2);",0,0,0,1,2,0,2,0,0,4,20,5,0.012346626,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2084,            iZeroOffsetPrintText = zeroOffsetPrintText;,2,0,0,0,0,0,0,0,0,3,43,5,0.012336047,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2085,            iZeroOffsetParseText = zeroOffsetParseText;,2,0,0,0,0,0,0,0,0,3,43,5,0.012336047,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2086,            iShowSeparators = showSeparators;,2,0,0,0,0,0,0,0,0,3,33,5,0.012336047,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2087,            if (minFields <= 0 || maxFields < minFields) {,3,3,0,1,3,0,0,0,0,6,46,5,0.012336047,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2095,            iMaxFields = maxFields;,2,0,0,0,0,0,0,0,0,3,23,5,0.012336047,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2094,            iMinFields = minFields;,2,0,0,0,0,0,0,0,0,3,23,5,0.012336047,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2090,            if (minFields > 4) {,1,1,0,1,3,0,0,0,0,2,20,5,0.012336047,0
defect4j,chart,org/jfree/chart/axis/Axis,19,170,    public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);,1,0,0,1,2,3,0,2,0,6,73,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/AxisLocation,19,69,    public static final AxisLocation BOTTOM_OR_LEFT = new AxisLocation(,1,0,0,0,1,3,0,2,0,6,67,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/AxisLocation,19,65,    public static final AxisLocation TOP_OR_RIGHT = new AxisLocation(,1,0,0,0,1,3,0,2,0,6,65,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/AxisLocation,19,61,    public static final AxisLocation TOP_OR_LEFT = new AxisLocation(,1,0,0,0,1,3,0,2,0,6,64,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,136,    public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(,1,0,0,0,1,3,0,2,0,6,60,2,0.012195122,0
defect4j,chart,org/jfree/chart/plot/DatasetRenderingOrder,19,79,    private DatasetRenderingOrder(String name) {,2,0,0,1,3,1,0,1,0,4,44,2,0.012195122,0
defect4j,chart,org/jfree/chart/plot/DatasetRenderingOrder,19,61,    public static final DatasetRenderingOrder FORWARD,1,0,0,0,0,3,0,1,0,5,49,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,163,    public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS ,1,0,0,0,0,3,0,1,0,5,61,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,160,    public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;,3,0,0,0,0,3,0,1,0,7,65,2,0.012195122,0
defect4j,chart,org/jfree/chart/plot/DatasetRenderingOrder,19,68,    public static final DatasetRenderingOrder REVERSE,1,0,0,0,0,3,0,1,0,5,49,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,156,"    public static final Font DEFAULT_TICK_LABEL_FONT = new Font(""SansSerif"", ",1,0,0,0,1,3,0,2,0,7,72,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,150,    public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);,1,0,0,1,2,3,0,2,0,6,76,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,300,        this.listenerList = new EventListenerList();,1,0,0,1,2,0,0,1,0,3,44,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,281,        this.labelURL = null;,1,0,0,0,0,0,0,0,0,2,21,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,280,        this.labelToolTip = null;,1,0,0,0,0,0,0,0,0,2,25,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,283,        this.axisLineVisible = true;,1,0,0,0,0,0,0,0,0,3,28,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,285,        this.axisLineStroke = DEFAULT_AXIS_LINE_STROKE;,2,0,0,0,0,0,0,0,0,3,47,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,284,        this.axisLinePaint = DEFAULT_AXIS_LINE_PAINT;,2,0,0,0,0,0,0,0,0,3,45,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,287,        this.tickLabelsVisible = DEFAULT_TICK_LABELS_VISIBLE;,2,0,0,0,0,0,0,0,0,3,53,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/AxisLocation,19,85,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/AxisLocation,19,84,    private AxisLocation(String name) {,2,0,0,1,3,1,0,1,0,4,35,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,278,        this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;,2,0,0,0,0,0,0,0,0,3,45,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,279,        this.labelAngle = 0.0;,1,0,0,0,0,0,0,0,0,2,22,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,274,        this.label = label;,2,0,0,0,0,0,0,0,0,3,19,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,275,        this.visible = DEFAULT_AXIS_VISIBLE;,2,0,0,0,0,0,0,0,0,3,36,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,272,    protected Axis(String label) {,2,0,0,1,3,1,0,1,0,4,30,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,173,    public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;,3,0,0,0,0,3,0,1,0,7,63,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,289,        this.tickLabelPaint = DEFAULT_TICK_LABEL_PAINT;,2,0,0,0,0,0,0,0,0,3,47,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,288,        this.tickLabelFont = DEFAULT_TICK_LABEL_FONT;,2,0,0,0,0,0,0,0,0,3,45,4,0.012195122,0
defect4j,chart,org/jfree/chart/plot/DatasetRenderingOrder,19,80,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,147,    public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;,3,0,0,0,0,3,0,1,0,7,63,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,143,    public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS ,1,0,0,0,0,3,0,1,0,5,61,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,140,    public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;,3,0,0,0,0,3,0,1,0,7,65,2,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,292,        this.tickMarksVisible = DEFAULT_TICK_MARKS_VISIBLE;,2,0,0,0,0,0,0,0,0,3,51,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,293,        this.tickMarkStroke = DEFAULT_TICK_MARK_STROKE;,2,0,0,0,0,0,0,0,0,3,47,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,290,        this.tickLabelInsets = DEFAULT_TICK_LABEL_INSETS;,2,0,0,0,0,0,0,0,0,3,49,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,296,        this.tickMarkOutsideLength = DEFAULT_TICK_MARK_OUTSIDE_LENGTH;,2,0,0,0,0,0,0,0,0,3,62,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,294,        this.tickMarkPaint = DEFAULT_TICK_MARK_PAINT;,2,0,0,0,0,0,0,0,0,3,45,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,295,        this.tickMarkInsideLength = DEFAULT_TICK_MARK_INSIDE_LENGTH;,2,0,0,0,0,0,0,0,0,3,60,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,298,        this.plot = null;,1,0,0,0,0,0,0,0,0,2,17,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,276,        this.labelFont = DEFAULT_AXIS_LABEL_FONT;,2,0,0,0,0,0,0,0,0,3,41,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/Axis,19,277,        this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;,2,0,0,0,0,0,0,0,0,3,43,4,0.012195122,0
defect4j,chart,org/jfree/chart/axis/AxisLocation,19,73,    public static final AxisLocation BOTTOM_OR_RIGHT = new AxisLocation(,1,0,0,0,1,3,0,2,0,6,68,2,0.012195122,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,147,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.012147458,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,59,        if (explain != null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.012089576,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,44,        if (lowerBound == null) {,1,1,0,1,3,0,0,0,0,2,25,4,0.012089576,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,41,        StringBuilder buf = new StringBuilder(),1,0,0,1,2,0,0,2,0,3,39,4,0.012089576,0
defect4j,time,org/joda/time/IllegalFieldValueException,6,63,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0.012089576,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1687,        return sme;,1,0,0,0,0,0,0,0,0,1,11,4,0.012055079,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1681,        if (sme == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.012055079,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1682,            sme = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.012055079,0
defect4j,time,org/joda/time/DateTimeUtils,16,146,        if (instant == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.012055079,0
defect4j,chart,org/jfree/data/Range,19,84,        if (lower > upper) {,2,1,0,1,3,0,0,0,0,3,20,4,0.012045455,0
defect4j,chart,org/jfree/data/Range,19,89,        this.lower = lower;,2,0,0,0,0,0,0,0,0,3,19,4,0.012045455,0
defect4j,chart,org/jfree/data/Range,19,90,        this.upper = upper;,2,0,0,0,0,0,0,0,0,3,19,4,0.012045455,0
defect4j,chart,org/jfree/data/Range,19,83,"    public Range(double lower, double upper) {",3,0,0,1,3,1,0,0,0,4,42,2,0.012045455,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,141,        instant -= offset;,2,0,0,0,0,0,0,0,0,3,18,4,0.012009356,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,140,        int offset = zone.getOffsetFromLocal(instant);,1,0,0,1,2,0,3,0,0,4,46,5,0.012009356,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,142,        if (offset != zone.getOffset(instant)) {,1,1,0,2,5,0,3,0,0,5,40,4,0.012009356,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,139,        DateTimeZone zone = getZone();,1,0,0,1,2,0,1,1,0,3,30,4,0.012009356,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1677,        return mhe;,1,0,0,0,0,0,0,0,0,1,11,4,0.011986611,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1671,        if (mhe == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.011986611,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1672,            mhe = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.011986611,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,119,        return localToUTC(getBase().getDateTimeMillis,0,0,0,1,3,0,3,0,0,3,45,5,0.011986611,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1667,        return hde;,1,0,0,0,0,0,0,0,0,1,11,4,0.011941348,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1663,            hde = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.011941348,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1662,        if (hde == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.011941348,0
defect4j,chart,org/jfree/chart/plot/PlotOrientation,19,56,    public static final PlotOrientation HORIZONTAL,1,0,0,0,0,3,0,1,0,5,46,2,0.01189759,0
defect4j,chart,org/jfree/chart/plot/PlotOrientation,19,60,    public static final PlotOrientation VERTICAL,1,0,0,0,0,3,0,1,0,5,44,2,0.01189759,0
defect4j,chart,org/jfree/chart/plot/PlotOrientation,19,71,    private PlotOrientation(String name) {,2,0,0,1,3,1,0,1,0,4,38,2,0.01189759,0
defect4j,chart,org/jfree/chart/plot/PlotOrientation,19,72,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.01189759,0
defect4j,chart,org/jfree/chart/util/ObjectList,19,85,        return super.get(index);         ,2,0,0,1,2,0,0,0,0,2,24,5,0.01189759,0
defect4j,chart,org/jfree/chart/util/ObjectList,19,95,"        super.set(index, object);        ",3,0,0,1,2,0,0,0,0,3,25,5,0.011751497,0
defect4j,chart,org/jfree/chart/plot/Plot,19,435,        return this.parent;,1,0,0,0,0,0,0,0,0,1,19,5,0.011751497,0
defect4j,chart,org/jfree/chart/event/ChartChangeEvent,19,131,        this.type = type;,2,0,0,0,0,0,0,0,0,3,17,4,0.011751497,0
defect4j,time,org/joda/time/DateTimeFieldType,16,524,                    return chronology.secondOfMinute();,0,0,0,1,2,0,2,0,0,2,35,7,0.011697736,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,63,    public static final RectangleAnchor CENTER ,1,0,0,0,0,3,0,1,0,5,42,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,107,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,106,    private RectangleAnchor(final String name) {,2,0,0,1,3,2,0,1,0,5,44,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,67,    public static final RectangleAnchor TOP ,1,0,0,0,0,3,0,1,0,5,39,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,87,    public static final RectangleAnchor BOTTOM_RIGHT ,1,0,0,0,0,3,0,1,0,5,48,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,83,    public static final RectangleAnchor BOTTOM_LEFT ,1,0,0,0,0,3,0,1,0,5,47,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,79,    public static final RectangleAnchor BOTTOM ,1,0,0,0,0,3,0,1,0,5,42,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,71,    public static final RectangleAnchor TOP_LEFT ,1,0,0,0,0,3,0,1,0,5,44,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,75,    public static final RectangleAnchor TOP_RIGHT ,1,0,0,0,0,3,0,1,0,5,45,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,95,    public static final RectangleAnchor RIGHT ,1,0,0,0,0,3,0,1,0,5,41,2,0.011607143,0
defect4j,chart,org/jfree/chart/util/RectangleAnchor,19,91,    public static final RectangleAnchor LEFT ,1,0,0,0,0,3,0,1,0,5,40,2,0.011607143,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,140,            return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,50,7,0.011547254,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,121,            return MAX_DAYS_PER_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,43,7,0.011441851,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,647,"        return appendDecimal(DateTimeFieldType.secondOfMinute(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,71,5,0.011420975,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,162,            periodStart = next;,2,0,0,0,0,0,0,0,0,3,19,6,0.010978144,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,163,"            chain = (chain.iNextInfo = new Info(iZone, periodStart));",5,0,0,2,4,0,0,1,0,8,57,6,0.010978144,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1542,            return i;,1,0,0,0,0,0,0,0,0,1,9,7,0.010869565,0
defect4j,time,org/joda/time/DateTimeZone,16,900,        } else if (offsetLocal >= 0) {,1,1,0,1,4,0,0,0,0,2,30,5,0.010862591,0
defect4j,time,org/joda/time/DateTimeZone,16,910,        return offsetAdjusted;,1,0,0,0,0,0,0,0,0,1,22,4,0.010767918,0
defect4j,time,org/joda/time/DateTimeZone,6,1057,        if (newZone == this) {,1,1,0,1,3,0,0,0,0,2,22,4,0.010711614,0
defect4j,time,org/joda/time/DateTimeZone,6,1054,        if (newZone == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.010711614,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,188,                if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,9,0.010688778,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1605,            dme = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.010601112,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1604,        if (dme == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.010601112,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1610,        return dme;,1,0,0,0,0,0,0,0,0,1,11,4,0.010601112,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,528,            int sz = tokens.length;,3,0,0,0,0,0,0,0,0,3,23,6,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,529,            for (int i = 0; i < sz; i++) {,4,1,0,1,3,0,0,0,0,6,30,5,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,430,        return buffer.toString();,0,0,0,1,2,0,2,0,0,2,25,5,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,531,                    return true;,0,0,0,0,0,0,0,0,0,1,12,9,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,386,            int count = token.getCount();,1,0,0,1,2,0,2,0,0,3,29,7,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,387,            if (value instanceof StringBuffer) {,1,0,0,1,3,0,0,1,0,2,36,7,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,384,            Token token = tokens[i];,1,0,1,1,2,0,0,1,0,4,24,6,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,385,            Object value = token.getValue();,1,0,0,1,2,0,2,1,0,4,32,6,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,382,        int sz = tokens.length;,3,0,0,0,0,0,0,0,0,3,23,5,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,383,        for (int i = 0; i < sz; i++) {,4,1,0,1,3,0,0,0,0,6,30,4,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,380,        StringBuffer buffer = new StringBuffer();,1,0,0,1,2,0,0,2,0,3,41,4,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,381,        boolean lastOutputSeconds = false;,1,0,0,0,0,0,0,0,0,2,34,5,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,390,                if (value == y) {,2,1,0,1,3,0,0,0,0,3,17,8,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,394,                } else if (value == M) {,2,1,0,1,4,0,0,0,0,3,24,9,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,530,                if (tokens[i].getValue() == value) {,1,1,1,3,7,0,1,0,0,5,36,7,0.010582011,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,575,            return count;,1,0,0,0,0,0,0,0,0,1,13,5,0.010582011,0
defect4j,time,org/joda/time/DateTimeZone,16,882,        final int offsetLocal = getOffset(instantLocal);,1,0,0,1,2,1,2,0,0,4,48,4,0.010546513,0
defect4j,time,org/joda/time/DateTimeZone,16,884,        final long instantAdjusted = instantLocal - offsetLocal;,3,1,0,0,0,1,0,0,0,5,56,4,0.010546513,0
defect4j,time,org/joda/time/DateTimeZone,16,885,        final int offsetAdjusted = getOffset(instantAdjusted);,1,0,0,1,2,1,2,0,0,4,54,4,0.010546513,0
defect4j,time,org/joda/time/DateTimeZone,16,887,        if (offsetLocal != offsetAdjusted) {,2,1,0,1,3,0,0,0,0,3,36,4,0.010546513,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,107,        Object result = null;,1,0,0,0,0,0,0,1,0,2,21,4,0.010511364,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,109,            result = this.objects[index];,2,0,1,1,2,0,0,0,0,4,29,6,0.010511364,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,108,        if (index >= 0 && index < this.size) {,3,3,0,1,3,0,0,0,0,6,38,4,0.010511364,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,111,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.010511364,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1600,        return mye;,1,0,0,0,0,0,0,0,0,1,11,4,0.010510387,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1595,            mye = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,36,6,0.010510387,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1594,        if (mye == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.010510387,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,121,        if (index < 0) {,1,1,0,1,3,0,0,0,0,2,16,4,0.010381356,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,124,        if (index >= this.objects.length) {,3,1,0,1,3,0,0,0,0,4,35,4,0.010381356,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,129,        this.objects[index] = object;,2,0,1,1,2,0,0,0,0,4,29,4,0.010381356,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,130,"        this.size = Math.max(this.size, index + 1);",3,1,0,1,2,0,2,0,0,7,43,4,0.010381356,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,667,"        return appendDecimal(DateTimeFieldType.minuteOfHour(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,69,5,0.010228993,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1586,            ye = new DateTimeFormatterBuilder(),1,0,0,1,2,0,0,1,0,3,35,6,0.010177693,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1585,        if (ye == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.010177693,0
defect4j,time,org/joda/time/format/ISODateTimeFormat,16,1590,        return ye;,1,0,0,0,0,0,0,0,0,1,10,4,0.010177693,0
defect4j,time,org/joda/time/base/BaseDateTime,3,295,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.010137109,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,517,            return iLeapDurationField;,1,0,0,0,0,0,0,0,0,1,26,5,0.010093182,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,550,            return iField.getMinimumValue();,0,0,0,1,2,0,2,0,0,2,32,6,0.010093182,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,567,            return iField.getMaximumValue();,0,0,0,1,2,0,2,0,0,2,32,6,0.010093182,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1543,            if (iTailZone == null) {,1,1,0,1,3,0,0,0,0,2,24,5,0.0100637,0
defect4j,time,org/joda/time/DateTimeFieldType,16,520,                    return chronology.minuteOfHour();,0,0,0,1,2,0,2,0,0,2,33,7,0.010043061,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,687,"        return appendDecimal(DateTimeFieldType.hourOfDay(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,66,5,0.009976902,0
defect4j,time,org/joda/time/DateTimeFieldType,16,498,                    return chronology.dayOfMonth();,0,0,0,1,2,0,2,0,0,2,31,7,0.009751201,0
defect4j,time,org/joda/time/base/AbstractInstant,16,260,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.009735418,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,107,"        this(period, new Double(value));",2,0,0,2,4,0,0,1,0,3,32,4,0.009722222,0
defect4j,time,org/joda/time/chrono/GJChronology,16,397,        return iCutoverInstant;,1,0,0,0,0,0,0,0,0,1,23,4,0.00971968,0
defect4j,time,org/joda/time/chrono/GJChronology,16,406,        return iGregorianChronology.getMinimumDaysInFirstWeek();,0,0,0,1,2,0,2,0,0,2,56,5,0.00971968,0
defect4j,time,org/joda/time/chrono/GJChronology,16,206,                if (minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() &&,1,2,0,1,3,0,2,0,0,5,63,8,0.00971968,0
defect4j,time,org/joda/time/chrono/GJChronology,16,204,            for (int i=chronos.size(); --i>=0; ) {,2,1,0,2,5,0,2,0,0,6,38,6,0.00971968,0
defect4j,time,org/joda/time/chrono/GJChronology,16,205,                chrono = chronos.get(i);,1,0,0,1,2,0,3,0,0,5,24,8,0.00971968,0
defect4j,time,org/joda/time/chrono/GJChronology,16,209,                    return chrono;,1,0,0,0,0,0,0,0,0,1,14,10,0.00971968,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1579,            if (iTailZone == null) {,1,1,0,1,3,0,0,0,0,2,24,5,0.009696548,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,940,        if (iChrono != null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.009688336,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,943,        if (iZone != null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.009688336,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,946,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.009688336,0
defect4j,time,org/joda/time/DateTimeFieldType,16,516,                    return chronology.hourOfDay();,0,0,0,1,2,0,2,0,0,2,30,7,0.009688336,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,939,        chrono = DateTimeUtils.getChronology(chrono);,1,0,0,1,2,0,3,0,0,5,45,4,0.009688336,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,779,"        return appendDecimal(DateTimeFieldType.monthOfYear(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,68,5,0.009672729,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,503,            return iRangeDurationField;,1,0,0,0,0,0,0,0,0,1,27,5,0.00956469,0
defect4j,time,org/joda/time/chrono/GJChronology,16,220,"            chrono = getInstance(DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek);",3,0,0,1,2,0,3,0,0,7,75,6,0.00956469,0
defect4j,time,org/joda/time/chrono/GJChronology,16,281,"        super(base, new Object[] {julian, gregorian, cutoverInstant});",4,0,0,3,6,0,0,1,0,5,62,4,0.00956469,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,499,            return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,5,0.00956469,0
defect4j,time,org/joda/time/chrono/GJChronology,16,221,            chrono = new GJChronology,1,0,0,0,0,0,0,1,0,3,25,6,0.00956469,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,190,                    dayOfYear++;,1,0,0,0,0,0,0,0,0,2,12,10,0.009550835,0
defect4j,time,org/joda/time/DateTime,17,582,"        return (newMillis == getMillis() ? this : new DateTime(newMillis, getChronology()));",2,1,0,4,8,0,2,1,0,6,84,6,0.009457534,0
defect4j,time,org/joda/time/chrono/GJChronology,16,320,        if (zone == getZone()) {,1,1,0,2,5,0,1,0,0,3,24,4,0.009428814,0
defect4j,time,org/joda/time/chrono/GJChronology,16,307,        return withZone(DateTimeZone.UTC);,2,0,0,1,2,0,1,0,0,3,34,5,0.009428814,0
defect4j,time,org/joda/time/chrono/GJChronology,16,317,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.009428814,0
defect4j,time,org/joda/time/chrono/GJChronology,16,293,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.009399071,0
defect4j,time,org/joda/time/chrono/GJChronology,16,296,        return DateTimeZone.UTC;,2,0,0,0,0,0,0,0,0,2,24,5,0.009399071,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,474,            return result;,1,0,0,0,0,0,0,0,0,1,14,5,0.00938426,0
defect4j,time,org/joda/time/chrono/GJChronology,16,194,            cutoverInstant = gregorianCutover.toInstant();,1,0,0,1,2,0,2,0,0,4,46,6,0.009354759,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,737,"        return appendDecimal(DateTimeFieldType.dayOfMonth(), minDigits, 2);",0,0,0,2,4,0,4,0,0,4,67,5,0.009340069,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,107,        if ((base = iBase) != null) {,2,1,0,2,5,0,0,0,0,4,29,4,0.009301087,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,108,            return base.getZone();,0,0,0,1,2,0,2,0,0,2,22,7,0.009301087,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,468,            if (get(result) != value) {,1,1,0,2,5,0,2,0,0,4,27,5,0.009252753,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,467,"            long result = iZone.convertLocalToUTC(localInstant, false, instant);",1,0,0,1,2,0,4,0,0,6,68,6,0.009252753,0
defect4j,time,org/joda/time/DateTimeFieldType,16,496,                    return chronology.monthOfYear();,0,0,0,1,2,0,2,0,0,2,32,7,0.009096274,0
defect4j,time,org/joda/time/DateTimeFieldType,16,492,                    return chronology.year();,0,0,0,1,2,0,2,0,0,2,25,7,0.009082274,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,466,"            localInstant = iField.set(localInstant, value);",1,0,0,1,2,0,4,0,0,6,47,5,0.009068311,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,465,            long localInstant = iZone.convertUTCToLocal(instant);,1,0,0,1,2,0,3,0,0,4,53,6,0.009068311,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,791,"        return appendSignedDecimal(DateTimeFieldType.year(), minDigits, maxDigits);",0,0,0,2,4,0,5,0,0,5,75,5,0.009026643,0
defect4j,time,org/joda/time/DateTimeZone,16,957,"        return convertLocalToUTC(instantLocal, strict);",0,0,0,1,2,0,3,0,0,3,47,5,0.008999046,0
defect4j,time,org/joda/time/DateTimeZone,16,1014,        return instantUTC;,1,0,0,0,0,0,0,0,0,1,18,4,0.008985301,0
defect4j,time,org/joda/time/DateTimeZone,16,1011,        if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0) {,4,5,0,3,7,0,0,0,0,9,69,4,0.008985301,0
defect4j,time,org/joda/time/DateTimeZone,16,974,        int offsetLocal = getOffset(instantLocal);,1,0,0,1,2,0,2,0,0,3,42,5,0.008985301,0
defect4j,time,org/joda/time/DateTimeZone,16,976,        int offset = getOffset(instantLocal - offsetLocal);,3,1,0,1,2,0,1,0,0,5,51,5,0.008985301,0
defect4j,time,org/joda/time/DateTimeZone,16,978,        if (offsetLocal != offset) {,2,1,0,1,3,0,0,0,0,3,28,4,0.008985301,0
defect4j,time,org/joda/time/DateTimeZone,16,1009,        long instantUTC = instantLocal - offset;,3,1,0,0,0,0,0,0,0,4,40,5,0.008985301,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,320,            return instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant));,3,1,0,2,4,0,2,0,0,6,79,5,0.008981083,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,319,"            instant = iField.add(instant + offset, value);",3,1,0,1,2,0,3,0,0,8,46,5,0.008981083,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,318,            int offset = getOffsetToAdd(instant);,1,0,0,1,2,0,2,0,0,3,37,6,0.008981083,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,213,                leapYears--;,1,0,0,0,0,0,0,0,0,2,12,8,0.008885641,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2736,            if (array != null) {,1,1,0,1,3,0,0,0,0,2,20,5,0.00879659,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2737,                for (int i=0; i<array.length; i++) {,5,1,0,1,3,0,0,0,0,7,36,7,0.00879659,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2738,                    list.add(array[i]);,0,0,1,2,4,0,2,0,0,4,19,10,0.00879659,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2727,"                        addArrayToList(parserList, ((Composite)element).iParsers);",2,0,0,3,6,0,2,1,0,5,58,12,0.00879659,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2718,"                        addArrayToList(printerList, ((Composite)element).iPrinters);",2,0,0,3,6,0,2,1,0,5,60,12,0.00879659,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,180,            if (isLeapYear(thisYear)) {,0,0,0,2,5,0,2,0,0,2,27,7,0.00877194,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,133,"            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,",0,0,0,0,1,0,5,0,0,5,60,7,0.008770185,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,448,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.008770185,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,457,        if (minDigits <= 1) {,1,1,0,1,3,0,0,0,0,2,21,4,0.008770185,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,454,        if (minDigits < 0 || maxDigits <= 0) {,2,3,0,1,3,0,0,0,0,5,38,4,0.008770185,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,451,        if (maxDigits < minDigits) {,2,1,0,1,3,0,0,0,0,3,28,4,0.008770185,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,460,"            return append0(new PaddedNumber(fieldType, maxDigits, true, minDigits));",3,0,0,2,4,0,1,1,0,6,72,7,0.008770185,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,312,"        result[4] = new Rectangle2D.Double(-delta, -delta / 2, size, size / 2);",6,2,1,2,4,0,0,0,0,12,71,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,317,"        result[5] = new Polygon(xpoints, ypoints, 3);",2,0,1,2,4,0,0,1,0,5,45,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,316,"        ypoints = intArray(-delta, -delta, delta);",3,0,0,1,2,0,2,0,0,8,42,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,315,"        xpoints = intArray(-delta, +delta, 0.0);",3,0,0,1,2,0,1,0,0,7,40,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,200,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f);,1,0,0,1,2,3,0,2,0,6,74,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,203,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,3,0,0,0,0,3,0,1,0,7,61,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,193,    public static final Number ZERO = new Integer(0);,1,0,0,1,2,3,0,2,0,6,49,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,196,    public static final RectangleInsets DEFAULT_INSETS ,1,0,0,0,0,3,0,1,0,5,50,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,292,        this.backgroundImage = null;,1,0,0,0,0,0,0,0,0,2,28,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,293,        this.outlineVisible = true;,1,0,0,0,0,0,0,0,0,3,27,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,290,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,2,0,0,0,0,0,0,0,0,3,48,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,291,        this.backgroundAlpha = DEFAULT_BACKGROUND_ALPHA;,2,0,0,0,0,0,0,0,0,3,48,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,296,        this.foregroundAlpha = DEFAULT_FOREGROUND_ALPHA;,2,0,0,0,0,0,0,0,0,3,48,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,294,        this.outlineStroke = DEFAULT_OUTLINE_STROKE;,2,0,0,0,0,0,0,0,0,3,44,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,295,        this.outlinePaint = DEFAULT_OUTLINE_PAINT;,2,0,0,0,0,0,0,0,0,3,42,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,298,        this.noDataMessage = null;,1,0,0,0,0,0,0,0,0,2,26,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,299,"        this.noDataMessageFont = new Font(""SansSerif"", Font.PLAIN, 12);",3,0,0,1,2,0,0,1,0,6,63,4,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,151,        return new Paint[] {,0,0,0,1,3,0,0,1,0,1,20,7,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,299,"        result[1] = new Ellipse2D.Double(-delta, -delta, size, size);",6,0,1,2,4,0,0,0,0,10,61,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,297,"        result[0] = new Rectangle2D.Double(-delta, -delta, size, size);",6,0,1,2,4,0,0,0,0,10,63,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,294,        int[] ypoints = null;,1,0,0,1,2,0,0,0,0,1,21,5,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,292,        double delta = size / 2.0;,2,1,0,0,0,0,0,0,0,3,26,5,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,293,        int[] xpoints = null;,1,0,0,1,2,0,0,0,0,1,21,5,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,291,        double size = 6.0;,1,0,0,0,0,0,0,0,0,1,18,5,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,119,"    public static final Color VERY_DARK_MAGENTA = new Color(0x80, 0x00, 0x80);",1,0,0,1,2,3,0,2,0,6,74,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,113,"    public static final Color LIGHT_BLUE = new Color(0x40, 0x40, 0xFF);",1,0,0,1,2,3,0,2,0,6,67,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,110,"    public static final Color DARK_BLUE = new Color(0x00, 0x00, 0xC0);",1,0,0,1,2,3,0,2,0,6,66,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,116,"    public static final Color VERY_LIGHT_BLUE = new Color(0x80, 0x80, 0xFF);",1,0,0,1,2,3,0,2,0,6,72,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,62,"    public static final Color DARK_RED = new Color(0xc0, 0x00, 0x00);",1,0,0,1,2,3,0,2,0,6,65,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,65,"    public static final Color LIGHT_RED = new Color(0xFF, 0x40, 0x40);",1,0,0,1,2,3,0,2,0,6,66,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,68,"    public static final Color VERY_LIGHT_RED = new Color(0xFF, 0x80, 0x80);",1,0,0,1,2,3,0,2,0,6,71,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,302,"        xpoints = intArray(0.0, delta, -delta);",2,0,0,1,2,0,2,0,0,6,39,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,303,"        ypoints = intArray(-delta, delta, delta);",2,0,0,1,2,0,3,0,0,7,41,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,304,"        result[2] = new Polygon(xpoints, ypoints, 3);",2,0,1,2,4,0,0,1,0,5,45,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,307,"        xpoints = intArray(0.0, delta, 0.0, -delta);",2,0,0,1,2,0,2,0,0,6,44,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,891,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,5,2,0,1,3,0,0,0,0,8,52,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,212,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;,3,0,0,0,0,3,0,1,0,7,70,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,532,"        return new int[] {(int) a, (int) b, (int) c, (int) d};",4,0,0,6,12,0,0,0,0,4,54,7,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,300,        this.noDataMessagePaint = Color.black;,3,0,0,0,0,0,0,0,0,4,38,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,308,"        ypoints = intArray(-delta, 0.0, delta, 0.0);",2,0,0,1,2,0,2,0,0,6,44,4,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,122,"    public static final Color DARK_MAGENTA = new Color(0xC0, 0x00, 0xC0);",1,0,0,1,2,3,0,2,0,6,69,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,125,"    public static final Color LIGHT_MAGENTA = new Color(0xFF, 0x40, 0xFF);",1,0,0,1,2,3,0,2,0,6,70,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,128,"    public static final Color VERY_LIGHT_MAGENTA = new Color(0xFF, 0x80, 0xFF);",1,0,0,1,2,3,0,2,0,6,75,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,288,        this.parent = null;,1,0,0,0,0,0,0,0,0,2,19,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,199,        this.paintSequence = paintSequence;,2,0,0,0,0,0,0,0,0,3,35,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,197,            Shape[] shapeSequence) {,1,0,0,1,4,0,0,1,0,2,24,3,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,269,    private float backgroundImageAlpha = 0.5f;,1,0,0,0,0,1,0,0,0,2,42,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,59,"    public static final Color VERY_DARK_RED = new Color(0x80, 0x00, 0x00);",1,0,0,1,2,3,0,2,0,6,70,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,150,"        this(DEFAULT_PAINT_SEQUENCE, DEFAULT_FILL_PAINT_SEQUENCE,",2,0,0,0,1,0,0,0,0,2,57,4,0.008704188,0
defect4j,chart,org/jfree/chart/event/PlotChangeEvent,19,65,        this.plot = plot;,2,0,0,0,0,0,0,0,0,3,17,4,0.008704188,0
defect4j,chart,org/jfree/chart/event/PlotChangeEvent,19,64,        super(plot);,1,0,0,1,2,0,0,0,0,1,12,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,335,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,331,"        xpoints = intArray(-delta, delta, delta);",2,0,0,1,2,0,3,0,0,7,41,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,333,"        result[9] = new Polygon(xpoints, ypoints, 3);",2,0,1,2,4,0,0,1,0,5,45,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,332,"        ypoints = intArray(0.0, -delta, +delta);",3,0,0,1,2,0,1,0,0,7,40,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,225,    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE ,1,0,0,0,0,3,0,1,0,5,52,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,221,    public static final Shape DEFAULT_LEGEND_ITEM_BOX ,1,0,0,0,0,3,0,1,0,5,49,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,200,        this.fillPaintSequence = fillPaintSequence;,2,0,0,0,0,0,0,0,0,3,43,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,203,        this.outlineStrokeSequence = outlineStrokeSequence;,2,0,0,0,0,0,0,0,0,3,51,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,204,        this.shapeSequence = shapeSequence;,2,0,0,0,0,0,0,0,0,3,35,4,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,92,"    public static final Color VERY_LIGHT_GREEN = new Color(0x80, 0xFF, 0x80);",1,0,0,1,2,3,0,2,0,6,73,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,95,"    public static final Color VERY_DARK_CYAN = new Color(0x00, 0x80, 0x80);",1,0,0,1,2,3,0,2,0,6,71,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,98,"    public static final Color DARK_CYAN = new Color(0x00, 0xC0, 0xC0);",1,0,0,1,2,3,0,2,0,6,66,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,83,    public static final Paint[] DEFAULT_PAINT_SEQUENCE ,1,0,0,1,2,3,0,1,0,5,50,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,87,    public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE = new Paint[] {,1,0,0,2,5,3,0,2,0,6,74,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,201,        this.outlinePaintSequence = outlinePaintSequence;,2,0,0,0,0,0,0,0,0,3,49,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,302,        this.drawingSupplier = new DefaultDrawingSupplier();,1,0,0,1,2,0,0,1,0,3,52,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,304,        this.listenerList = new EventListenerList();,1,0,0,1,2,0,0,1,0,3,44,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,202,        this.strokeSequence = strokeSequence;,2,0,0,0,0,0,0,0,0,3,37,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,286,    protected Plot() {,1,0,0,1,3,1,0,0,0,2,18,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,289,        this.insets = DEFAULT_INSETS;,2,0,0,0,0,0,0,0,0,3,29,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,266,    private int backgroundImageAlignment = Align.FIT;,3,0,0,0,0,1,0,0,0,4,49,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,309,"        result[3] = new Polygon(xpoints, ypoints, 4);",2,0,1,2,4,0,0,1,0,5,45,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,328,"        result[8] = new Rectangle2D.Double(-delta / 2, -delta, size / 2, size);",6,2,1,2,4,0,0,0,0,12,71,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,289,        Shape[] result = new Shape[10];,1,0,0,2,4,0,0,2,0,3,31,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,323,"        xpoints = intArray(-delta, delta, -delta);",3,0,0,1,2,0,2,0,0,8,42,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,320,"        result[6] = new Ellipse2D.Double(-delta, -delta / 2, size, size / 2);",6,2,1,2,4,0,0,0,0,12,69,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,324,"        ypoints = intArray(-delta, 0.0, delta);",2,0,0,1,2,0,2,0,0,6,39,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,325,"        result[7] = new Polygon(xpoints, ypoints, 3);",2,0,1,2,4,0,0,1,0,5,45,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/Plot,19,890,        Object[] listeners = this.listenerList.getListenerList();,2,0,0,2,4,0,1,1,0,4,57,4,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,517,"        return new int[] {(int) a, (int) b, (int) c};",3,0,0,5,10,0,0,0,0,3,45,7,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,89,"    public static final Color LIGHT_GREEN = new Color(0x40, 0xFF, 0x40);",1,0,0,1,2,3,0,2,0,6,68,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,104,"    public static final Color VERY_LIGHT_CYAN = new Color(0x80, 0xFF, 0xFF);",1,0,0,1,2,3,0,2,0,6,72,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,86,"    public static final Color DARK_GREEN = new Color(0x00, 0xC0, 0x00);",1,0,0,1,2,3,0,2,0,6,67,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,107,"    public static final Color VERY_DARK_BLUE = new Color(0x00, 0x00, 0x80);",1,0,0,1,2,3,0,2,0,6,71,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,80,"    public static final Color VERY_LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x80);",1,0,0,1,2,3,0,2,0,6,74,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,101,"    public static final Color LIGHT_CYAN = new Color(0x40, 0xFF, 0xFF);",1,0,0,1,2,3,0,2,0,6,67,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,83,"    public static final Color VERY_DARK_GREEN = new Color(0x00, 0x80, 0x00);",1,0,0,1,2,3,0,2,0,6,72,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,100,    public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE ,1,0,0,1,2,3,0,1,0,5,60,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,105,    public static final Shape[] DEFAULT_SHAPE_SEQUENCE ,1,0,0,1,2,3,0,1,0,5,50,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,91,    public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE = new Paint[] {,1,0,0,2,5,3,0,2,0,6,71,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,71,"    public static final Color VERY_DARK_YELLOW = new Color(0x80, 0x80, 0x00);",1,0,0,1,2,3,0,2,0,6,73,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,74,"    public static final Color DARK_YELLOW = new Color(0xC0, 0xC0, 0x00);",1,0,0,1,2,3,0,2,0,6,68,2,0.008704188,0
defect4j,chart,org/jfree/chart/ChartColor,19,77,"    public static final Color LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x40);",1,0,0,1,2,3,0,2,0,6,69,2,0.008704188,0
defect4j,chart,org/jfree/chart/plot/DefaultDrawingSupplier,19,95,    public static final Stroke[] DEFAULT_STROKE_SEQUENCE = new Stroke[] {,1,0,0,2,5,3,0,2,0,6,69,2,0.008704188,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,209,        if (formatter == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.008576377,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,212,"        return append0(formatter.getPrinter(), formatter.getParser());",0,0,0,3,6,0,5,0,0,5,62,5,0.008576377,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,172,        return iParser;,1,0,0,0,0,0,0,0,0,1,15,4,0.00853849,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,126,            append(str);,0,0,0,1,2,0,2,0,0,2,12,7,0.008487395,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,122,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.008487395,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,2,1,0,2,4,0,2,0,0,6,43,6,0.008487395,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,154,        return iPrinter;,1,0,0,0,0,0,0,0,0,1,16,4,0.008353248,0
defect4j,time,org/joda/time/base/AbstractInstant,17,424,        return ISODateTimeFormat.dateTime().print(this);,0,0,0,2,4,0,3,0,0,3,48,5,0.008345814,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,346,        iElementPairs.add(printer);,0,0,0,1,2,0,3,0,0,3,27,5,0.008304999,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,347,        iElementPairs.add(parser);,0,0,0,1,2,0,3,0,0,3,26,5,0.008304999,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,345,        iFormatter = null;,1,0,0,0,0,0,0,0,0,2,18,4,0.008304999,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,77,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,0.008246748,0
defect4j,chart,org/jfree/data/general/DatasetChangeEvent,19,72,        this.dataset = dataset;,2,0,0,0,0,0,0,0,0,3,23,4,0.008163265,0
defect4j,chart,org/jfree/data/general/DatasetChangeEvent,19,71,        super(source);,1,0,0,1,2,0,0,0,0,1,14,4,0.008163265,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,3,57,        return iChronology.getDayOfWeek(instant);,0,0,0,1,2,0,3,0,0,3,41,5,0.008134426,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1141,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.008116636,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,542,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.008114284,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,197,"        addValue(key, new Double(value)); ",1,0,0,2,4,0,2,1,0,4,33,5,0.008108682,0
defect4j,time,org/joda/time/base/AbstractInstant,16,259,        if (this == readableInstant) {,1,1,0,1,3,0,0,0,0,2,30,4,0.008093598,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1131,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.008093598,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,140,            return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,50,7,0.008090748,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1105,                Object parser = iElementPairs.get(1);,1,0,0,1,2,0,2,1,0,4,37,8,0.008070671,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1108,                    if (printer == parser || parser == null) {,3,3,0,1,3,0,0,0,0,6,42,10,0.008070671,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1109,                        f = printer;,2,0,0,0,0,0,0,0,0,3,12,12,0.008070671,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1104,                Object printer = iElementPairs.get(0);,1,0,0,1,2,0,2,1,0,4,38,8,0.008070671,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1107,                if (printer != null) {,1,1,0,1,3,0,0,0,0,2,22,8,0.008070671,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,155,"        this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,",3,0,0,0,1,0,0,0,0,3,65,4,0.008,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,113,        return instant + (value - get(instant)) * iUnitMillis;,3,3,0,2,4,0,2,0,0,8,54,4,0.007985408,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,112,"        FieldUtils.verifyValueBounds(this, value, getMinimumValue(), getMaximumValue());",0,0,0,3,6,0,5,0,0,5,80,5,0.007985408,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,299,"        FieldUtils.verifyValueBounds(this, month, MIN, iMax);",0,0,0,1,2,0,5,0,0,5,53,5,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,3,97,"        return iChronology.getDaysInMonthMaxForSet(instant, value);",0,0,0,1,2,0,4,0,0,4,59,5,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,134,        return ((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28);,2,3,0,3,6,0,2,0,0,7,69,6,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,466,"        int month = getMonthOfYear(millis, year);",1,0,0,1,2,0,3,0,0,4,41,5,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,467,"        return getDayOfMonth(millis, year, month);",0,0,0,1,2,0,4,0,0,4,42,5,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,304,"        int maxDom = iChronology.getDaysInYearMonth(thisYear, month);",1,0,0,1,2,0,4,0,0,5,61,5,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,305,        if (thisDom > maxDom) {,2,1,0,1,3,0,0,0,0,3,23,4,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,301,        int thisYear = iChronology.getYear(instant);,1,0,0,1,2,0,3,0,0,4,44,5,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,303,"        int thisDom = iChronology.getDayOfMonth(instant, thisYear);",1,0,0,1,2,0,4,0,0,5,59,5,0.00796589,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,310,"        return iChronology.getYearMonthDayMillis(thisYear, month, thisDom) +",0,1,0,1,2,0,5,0,0,6,68,4,0.00796589,0
defect4j,time,org/joda/time/DateTimeFieldType,6,378,        return iName;,1,0,0,0,0,0,0,0,0,1,13,4,0.007958529,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,132,        return iRange - 1;,1,1,0,0,0,0,0,0,0,2,18,4,0.007956161,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,85,"        return iChronology.setYear(instant, year);",0,0,0,1,2,0,4,0,0,4,42,5,0.007936764,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,83,        FieldUtils.verifyValueBounds,0,0,0,0,0,0,2,0,0,2,28,5,0.007936764,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,560,            return (int) (instant % DateTimeConstants.MILLIS_PER_DAY);,3,1,0,2,4,0,0,0,0,4,58,8,0.007917448,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,179,        if (dayOfYear > (31 + 28)) { // after Feb 28,1,2,0,2,5,0,0,0,0,3,44,4,0.00790782,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,175,        int thisYear = getYear(instant);,1,0,0,1,2,0,2,0,0,3,32,5,0.00790782,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,177,        int millisOfDay = getMillisOfDay(instant);,1,0,0,1,2,0,2,0,0,3,42,5,0.00790782,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,176,"        int dayOfYear = getDayOfYear(instant, thisYear);",1,0,0,1,2,0,3,0,0,4,48,5,0.00790782,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,81,        return instant + (value - get(instant)) * iUnitMillis;,3,3,0,2,4,0,2,0,0,8,54,4,0.00790782,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,79,"        FieldUtils.verifyValueBounds(this, value, getMinimumValue(),",0,0,0,1,3,0,4,0,0,4,60,5,0.00790782,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,196,        instant += millisOfDay;,2,0,0,0,0,0,0,0,0,3,23,4,0.00790782,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,195,"        instant = getYearMonthDayMillis(year, 1, dayOfYear);",1,0,0,1,2,0,3,0,0,5,52,4,0.00790782,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,198,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.00790782,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,559,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.007888623,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,493,        long yearStart = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,37,5,0.007888623,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,494,        return (int) ((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1;,4,3,0,3,6,0,0,0,0,7,76,4,0.007888623,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,152,"        FieldUtils.verifyValueBounds(this, value, iMin, iMax);",0,0,0,1,2,0,5,0,0,5,54,5,0.007803847,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,153,"        return super.set(instant, value - iOffset);",4,1,0,1,2,0,0,0,0,5,43,5,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,74,        iSkip = skip;,2,0,0,0,0,0,0,0,0,3,13,4,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,110,"            chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);",1,0,0,2,4,0,3,1,0,7,76,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,112,"            DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, 0, 0, chrono);",2,0,0,1,2,0,0,2,0,4,64,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,113,"            chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), """");",1,0,0,2,4,0,4,1,0,9,91,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,114,"            cCache.put(zone, chrono);",0,0,0,1,2,0,4,0,0,4,25,7,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,116,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,68,            iMinValue = min + 1;,2,1,0,0,0,0,0,0,0,4,20,6,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,67,        if (min < skip) {,2,1,0,1,3,0,0,0,0,3,17,4,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,66,        int min = super.getMinimumValue();,2,0,0,1,2,0,0,0,0,2,34,5,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,65,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,64,        super(field);,1,0,0,1,2,0,0,0,0,1,13,4,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,128,"        super(base, param);",2,0,0,1,2,0,0,0,0,2,19,4,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,107,        BuddhistChronology chrono = cCache.get(zone);,1,0,0,1,2,0,3,1,0,5,45,4,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,104,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,108,        if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,53,"        this(chronology, field, 0);",2,0,0,1,2,0,0,0,0,2,27,4,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,207,            fields.year = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,38,6,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,91,"        return super.set(millis, value);",3,0,0,1,2,0,0,0,0,3,32,5,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,95,        return iMinValue;,1,0,0,0,0,0,0,0,0,1,17,4,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,87,"        FieldUtils.verifyValueBounds(this, value, iMinValue, getMaximumValue());",0,0,0,2,4,0,5,0,0,5,72,5,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,89,            value--;,1,0,0,0,0,0,0,0,0,2,8,6,0.007803847,0
defect4j,time,org/joda/time/field/SkipUndoDateTimeField,16,88,        if (value <= iSkip) {,2,1,0,1,3,0,0,0,0,3,21,4,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,212,            fields.yearOfEra = new DelegatedDateTimeField(,2,0,0,0,1,0,0,1,0,4,46,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,211,            field = fields.yearOfEra;,3,0,0,0,0,0,0,0,0,4,25,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,217,            fields.weekyear = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,42,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,216,            field = fields.weekyear;,3,0,0,0,0,0,0,0,0,4,24,6,0.007803847,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,82,            value--;,1,0,0,0,0,0,0,0,0,2,8,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,204,        if (getParam() == null) {,0,1,0,2,5,0,1,0,0,3,25,4,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,206,            DateTimeField field = fields.year;,3,0,0,0,0,0,0,1,0,4,34,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,234,            fields.era = ERA_FIELD;,3,0,0,0,0,0,0,0,0,4,23,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,231,            fields.weekyearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,51,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,220,"            field = new OffsetDateTimeField(fields.yearOfEra, 99);",3,0,0,1,2,0,0,1,0,5,54,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,221,            fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,226,            fields.yearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,224,            field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,229,            field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,6,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,71,"    private static final Map<DateTimeZone, BuddhistChronology> cCache = new HashMap<DateTimeZone, BuddhistChronology>();",1,0,0,1,2,3,0,6,0,10,116,2,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,74,    private static final BuddhistChronology INSTANCE_UTC = getInstance(DateTimeZone.UTC);,3,0,0,1,2,3,1,1,0,8,85,2,0.007803847,0
defect4j,time,org/joda/time/chrono/BuddhistChronology,16,65,"    private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField(""BE"");",1,0,0,1,2,3,0,2,0,7,85,2,0.007803847,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,100,        return iMinValue;,1,0,0,0,0,0,0,0,0,1,17,4,0.007793052,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,79,            if (year == 0) {,1,1,0,1,3,0,0,0,0,2,16,6,0.007793052,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,16,82,"        return iField.set(instant, value);",0,0,0,1,2,0,4,0,0,4,34,5,0.007793052,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,83,            year++;,1,0,0,0,0,0,0,0,0,2,7,6,0.007793052,0
defect4j,time,org/joda/time/chrono/GJChronology,16,173,"        return getInstance(zone, gregorianCutover, 4);",0,0,0,1,2,0,3,0,0,3,46,5,0.007793052,0
defect4j,time,org/joda/time/chrono/GJChronology,16,826,            return iGregorianField.getMaximumValue();,0,0,0,1,2,0,2,0,0,2,41,6,0.007782282,0
defect4j,time,org/joda/time/chrono/GJChronology,16,795,            return iJulianField.getMinimumValue();,0,0,0,1,2,0,2,0,0,2,38,6,0.007782282,0
defect4j,time,org/joda/time/chrono/GJChronology,16,192,            cutoverInstant = DEFAULT_CUTOVER;,2,0,0,0,0,0,0,0,0,3,33,6,0.007760816,0
defect4j,time,org/joda/time/chrono/BaseChronology,16,132,"        long instant = year().set(0, year);",1,0,0,2,4,0,3,0,0,4,35,5,0.007707584,0
defect4j,time,org/joda/time/chrono/BaseChronology,16,133,"        instant = monthOfYear().set(instant, monthOfYear);",1,0,0,2,4,0,4,0,0,6,50,4,0.007707584,0
defect4j,time,org/joda/time/chrono/BaseChronology,16,136,"        instant = minuteOfHour().set(instant, minuteOfHour);",1,0,0,2,4,0,4,0,0,6,52,4,0.007707584,0
defect4j,time,org/joda/time/chrono/BaseChronology,16,137,"        instant = secondOfMinute().set(instant, secondOfMinute);",1,0,0,2,4,0,4,0,0,6,56,4,0.007707584,0
defect4j,time,org/joda/time/chrono/BaseChronology,16,134,"        instant = dayOfMonth().set(instant, dayOfMonth);",1,0,0,2,4,0,4,0,0,6,48,4,0.007707584,0
defect4j,time,org/joda/time/chrono/BaseChronology,16,135,"        instant = hourOfDay().set(instant, hourOfDay);",1,0,0,2,4,0,4,0,0,6,46,4,0.007707584,0
defect4j,time,org/joda/time/chrono/BaseChronology,16,138,"        return millisOfSecond().set(instant, millisOfSecond);",0,0,0,2,4,0,4,0,0,4,53,5,0.007707584,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,136,"        return super.getDateTimeMillis(year, monthOfYear, dayOfMonth,",4,0,0,0,1,0,0,0,0,4,61,5,0.007707584,0
defect4j,time,org/joda/time/chrono/GJChronology,16,915,                return gregorianToJulianByYear(instant);,0,0,0,1,2,0,2,0,0,2,40,8,0.007707584,0
defect4j,time,org/joda/time/chrono/GJChronology,16,718,                    if (get(instant) != value) {,1,1,0,2,5,0,2,0,0,4,28,9,0.007707584,0
defect4j,time,org/joda/time/chrono/GJChronology,16,714,                    if (instant + iGapDuration < iCutover) {,3,2,0,1,3,0,0,0,0,5,40,9,0.007707584,0
defect4j,time,org/joda/time/chrono/GJChronology,16,715,                        instant = gregorianToJulian(instant);,1,0,0,1,2,0,2,0,0,4,37,11,0.007707584,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,228,        return iChronology.getMaxYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.007707584,0
defect4j,time,org/joda/time/chrono/GJChronology,16,579,"        return convertByYear(instant, iGregorianChronology, iJulianChronology);",0,0,0,1,2,0,4,0,0,4,71,5,0.007707584,0
defect4j,time,org/joda/time/chrono/GJChronology,16,912,            if (iConvertByWeekyear) {,1,0,0,1,3,0,0,0,0,1,25,5,0.00769701,0
defect4j,time,org/joda/time/chrono/GJChronology,16,74,public final class GJChronology extends AssembledChronology {,1,0,0,0,1,2,0,1,0,4,61,1,0.00769701,0
defect4j,time,org/joda/time/chrono/GJChronology,16,725,                if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,7,0.00769701,0
defect4j,time,org/joda/time/chrono/GJChronology,16,724,"                instant = iJulianField.set(instant, value);",1,0,0,1,2,0,4,0,0,6,43,7,0.00769701,0
defect4j,time,org/joda/time/chrono/GJChronology,16,647,                return iJulianField.get(instant);,0,0,0,1,2,0,3,0,0,3,33,8,0.00769701,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,172,"        return iField.set(instant, value);",0,0,0,1,2,0,4,0,0,4,34,5,0.00769701,0
defect4j,time,org/joda/time/field/FieldUtils,3,233,        if ((value < lowerBound) || (value > upperBound)) {,4,3,0,3,7,0,0,0,0,7,51,4,0.007691732,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,78,        if (year <= 0) {,1,1,0,1,3,0,0,0,0,2,16,4,0.007675937,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,207,"        return super.getDateMidnightMillis(adjustYearForSet(year), monthOfYear, dayOfMonth);",3,0,0,2,4,0,2,0,0,5,84,5,0.007675937,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,85,        return year;,1,0,0,0,0,0,0,0,0,1,12,4,0.007675937,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,228,        return iField.getMaximumValue();,0,0,0,1,2,0,2,0,0,2,32,5,0.007665436,0
defect4j,time,org/joda/time/chrono/GJChronology,16,737,            return instant;,1,0,0,0,0,0,0,0,0,1,15,5,0.00765496,0
defect4j,time,org/joda/time/chrono/GJChronology,16,710,            if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,5,0.00765496,0
defect4j,time,org/joda/time/chrono/GJChronology,16,711,"                instant = iGregorianField.set(instant, value);",1,0,0,1,2,0,4,0,0,6,46,7,0.00765496,0
defect4j,time,org/joda/time/chrono/GJChronology,16,712,                if (instant < iCutover) {,2,1,0,1,3,0,0,0,0,3,25,7,0.00765496,0
defect4j,time,org/joda/time/chrono/GJChronology,16,644,            if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,5,0.007644507,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,103,        return getInfo(instant).getOffset(instant);,0,0,0,2,4,0,4,0,0,4,43,5,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,158,            long next = iZone.nextTransition(periodStart);,1,0,0,1,2,0,3,0,0,4,46,7,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,152,        long periodStart = millis & (0xffffffffL << 32);,2,2,0,1,2,0,0,0,0,4,48,5,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,156,        Info chain = info;,2,0,0,0,0,0,0,1,0,3,18,4,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,155,        long end = periodStart | 0xffffffffL;,2,1,0,0,0,0,0,0,0,3,37,5,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,148,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,140,        int period = (int)(millis >> 32);,2,1,0,2,4,0,0,0,0,3,33,5,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,142,        int index = period & cInfoCacheMask;,3,1,0,0,0,0,0,0,0,4,36,5,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,143,        Info info = cache[index];,1,0,1,1,2,0,0,1,0,4,25,4,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,146,            cache[index] = info;,1,0,1,1,2,0,0,0,0,4,20,6,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,153,"        Info info = new Info(iZone, periodStart);",3,0,0,1,2,0,0,2,0,5,41,4,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,177,        private int iOffset = Integer.MIN_VALUE;,3,0,0,0,0,1,0,0,0,4,40,3,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,178,        private int iStandardOffset = Integer.MIN_VALUE;,3,0,0,0,0,1,0,0,0,4,48,3,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,166,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.007609882,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1537,            if (i < transitions.length) {,3,1,0,1,3,0,0,0,0,4,29,5,0.007609882,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1536,            i = ~i;,2,0,0,0,0,0,0,0,0,4,7,5,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,159,            if (next == periodStart || next > end) {,4,3,0,1,3,0,0,0,0,7,40,6,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,198,                    iOffset = iZoneRef.getOffset(iPeriodStart);,1,0,0,1,2,0,3,0,0,5,43,9,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,197,                if (iOffset == Integer.MIN_VALUE) {,3,1,0,1,3,0,0,0,0,4,35,7,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,196,            if (iNextInfo == null || millis < iNextInfo.iPeriodStart) {,4,3,0,1,3,0,0,0,0,7,59,5,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,200,                return iOffset;,1,0,0,0,0,0,0,0,0,1,15,7,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,180,"        Info(DateTimeZone zone, long periodStart) {",3,0,0,1,3,0,0,1,0,4,43,3,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,181,            iPeriodStart = periodStart;,2,0,0,0,0,0,0,0,0,3,27,5,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,182,            iZoneRef = zone;,2,0,0,0,0,0,0,0,0,3,16,5,0.007609882,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1575,            i = (i >= 0) ? (i + 1) : ~i;,4,2,0,2,4,0,0,0,0,8,28,5,0.007609882,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1574,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,1,2,0,4,0,0,5,50,6,0.007609882,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1576,            if (i < transitions.length) {,3,1,0,1,3,0,0,0,0,4,29,5,0.007609882,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1573,            long[] transitions = iTransitions;,2,0,0,1,2,0,0,0,0,2,34,6,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,141,        Info[] cache = iInfoCache;,2,0,0,1,2,0,0,1,0,3,26,4,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,144,        if (info == null || (int)((info.iPeriodStart >> 32)) != period) {,4,4,0,4,9,0,0,0,0,8,65,4,0.007609882,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,145,            info = createInfo(millis);,1,0,0,1,2,0,2,0,0,4,26,6,0.007609882,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1531,            long[] transitions = iTransitions;,2,0,0,1,2,0,0,0,0,2,34,6,0.007600878,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1533,            if (i >= 0) {,1,1,0,1,3,0,0,0,0,2,13,5,0.007600878,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1532,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,1,2,0,4,0,0,5,50,6,0.007600878,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,131,        if ((base = iBase) != null && (iBaseFlags & 5) == 5) {,3,4,0,3,7,0,0,0,0,8,54,4,0.007565043,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,402,            i2 = i2 - unitMillis + 1;,3,2,0,0,0,0,0,0,0,6,25,6,0.007561736,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,209,            leapYears = ((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1;,4,7,0,4,8,0,0,0,0,12,71,6,0.007561736,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,73,        return iChronology.getMonthOfYear(instant);,0,0,0,1,2,0,3,0,0,3,43,5,0.007538353,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,443,"        return getMonthOfYear(millis, getYear(millis));",0,0,0,2,4,0,4,0,0,4,47,5,0.007538353,0
defect4j,time,org/joda/time/chrono/GJChronology,6,195,            cutoverInstant = gregorianCutover.toInstant();,1,0,0,1,2,0,2,0,0,4,46,6,0.007506632,1
defect4j,time,org/joda/time/DateTimeZone,16,955,            return instantUTC;,1,0,0,0,0,0,0,0,0,1,18,6,0.007322176,0
defect4j,time,org/joda/time/chrono/GJChronology,16,788,            return iGregorianField.getLeapDurationField();,0,0,0,1,2,0,2,0,0,2,46,6,0.007322176,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,408,"            return append0(new PaddedNumber(fieldType, maxDigits, false, minDigits));",3,0,0,2,4,0,1,1,0,6,73,7,0.007312469,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,396,        if (fieldType == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.007283475,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,399,        if (maxDigits < minDigits) {,2,1,0,1,3,0,0,0,0,3,28,4,0.007283475,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,402,        if (minDigits < 0 || maxDigits <= 0) {,2,3,0,1,3,0,0,0,0,5,38,4,0.007283475,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,405,        if (minDigits <= 1) {,1,1,0,1,3,0,0,0,0,2,21,4,0.007283475,0
defect4j,time,org/joda/time/chrono/GJChronology,16,768,            return iRangeDurationField;,1,0,0,0,0,0,0,0,0,1,27,5,0.007235574,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,123,            return MIN_DAYS_PER_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,43,7,0.007221778,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,224,            leapYears = (relativeYear + 3) >> 2;,2,2,0,1,2,0,0,0,0,5,36,6,0.007216559,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,131,            instant = iChronology.getYearMillis(year + 1);,2,1,0,1,2,0,2,0,0,6,46,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,509,"            fields.clockhourOfDay = new CutoverField(julian.clockhourOfDay(), fields.clockhourOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,105,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,508,"            fields.hourOfHalfday = new CutoverField(julian.hourOfHalfday(), fields.hourOfHalfday, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,102,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,505,"            fields.minuteOfHour = new CutoverField(julian.minuteOfHour(), fields.minuteOfHour, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,99,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,507,"            fields.hourOfDay = new CutoverField(julian.hourOfDay(), fields.hourOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,90,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,506,"            fields.minuteOfDay = new CutoverField(julian.minuteOfDay(), fields.minuteOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,96,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,501,"            fields.millisOfSecond = new CutoverField(julian.millisOfSecond(), fields.millisOfSecond, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,105,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,503,"            fields.secondOfMinute = new CutoverField(julian.secondOfMinute(), fields.secondOfMinute, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,105,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,502,"            fields.millisOfDay = new CutoverField(julian.millisOfDay(), fields.millisOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,96,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,512,"            fields.halfdayOfDay = new CutoverField(julian.halfdayOfDay(), fields.halfdayOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,99,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,510,"            fields.clockhourOfHalfday = new CutoverField(julian.clockhourOfHalfday(),",2,0,0,1,3,0,2,1,0,6,73,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,504,"            fields.secondOfDay = new CutoverField(julian.secondOfDay(), fields.secondOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,96,6,0.007207083,0
defect4j,time,org/joda/time/chrono/GJChronology,16,633,            if (rangeField == null) {,1,1,0,1,3,0,0,0,0,2,25,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,632,            DurationField rangeField = gregorianField.getRangeDurationField();,1,0,0,1,2,0,2,1,0,4,66,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,630,            iDurationField = gregorianField.getDurationField();,1,0,0,1,2,0,2,0,0,4,51,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,636,            iRangeDurationField = rangeField;,2,0,0,0,0,0,0,0,0,3,33,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,634,                rangeField = julianField.getRangeDurationField();,1,0,0,1,2,0,2,0,0,4,49,7,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,527,            fields.dayOfYear = new CutoverField(,2,0,0,0,1,0,0,1,0,4,36,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,624,            iJulianField = julianField;,2,0,0,0,0,0,0,0,0,3,27,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,625,            iGregorianField = gregorianField;,2,0,0,0,0,0,0,0,0,3,33,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,626,            iCutover = cutoverMillis;,2,0,0,0,0,0,0,0,0,3,25,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,627,            iConvertByWeekyear = convertByWeekyear;,2,0,0,0,0,0,0,0,0,3,39,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,622,"                     long cutoverMillis, boolean convertByWeekyear) {",2,0,0,0,2,0,0,0,0,2,48,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,623,            super(gregorianField.getType());,0,0,0,2,4,0,2,0,0,2,32,6,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,544,            fields.yearOfEra = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,45,5,0.007197627,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,133,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,517,"            fields.era = new CutoverField(julian.era(), fields.era, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,72,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,934,"            this(julianField, gregorianField, null, cutoverMillis, false);",3,0,0,1,2,0,0,0,0,4,62,5,0.007197627,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,127,        int year = get(instant);,1,0,0,1,2,0,2,0,0,3,24,5,0.007197627,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,128,        long yearStartMillis = iChronology.getYearMillis(year);,1,0,0,1,2,0,3,0,0,4,55,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,470,        iCutoverMillis = cutoverInstant.getMillis();,1,0,0,1,2,0,2,0,0,4,44,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,473,        iGregorianChronology = gregorian;,2,0,0,0,0,0,0,0,0,3,33,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,472,        iJulianChronology = julian;,2,0,0,0,0,0,0,0,0,3,27,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,474,        iCutoverInstant = cutoverInstant;,2,0,0,0,0,0,0,0,0,3,33,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,271,"        super(null, new Object[] {julian, gregorian, cutoverInstant});",3,0,0,3,6,0,0,1,0,5,62,3,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,189,        zone = DateTimeUtils.getZone(zone);,1,0,0,1,2,0,3,0,0,5,35,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,467,        JulianChronology julian = (JulianChronology)params[0];,1,0,1,2,4,0,0,2,0,4,54,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,465,        Object[] params = (Object[])getParam();,1,0,0,4,8,0,1,2,0,4,39,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,468,        GregorianChronology gregorian = (GregorianChronology)params[1];,1,0,1,2,4,0,0,2,0,4,63,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,469,        Instant cutoverInstant = (Instant)params[2];,1,0,1,2,4,0,0,2,0,4,44,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,191,        if (gregorianCutover == null) {,1,1,0,1,3,0,0,0,0,2,31,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,199,        ArrayList<GJChronology> chronos = cCache.get(zone);,1,0,0,1,2,0,3,2,0,6,51,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,526,            long cutover = gregorian.year().roundCeiling(iCutoverMillis);,1,0,0,2,4,0,4,0,0,5,61,6,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,108,"    private static final Map<DateTimeZone, ArrayList<GJChronology>> cCache = new HashMap<DateTimeZone, ArrayList<GJChronology>>();",1,0,0,1,2,3,0,8,0,12,126,2,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,532,            long cutover = gregorian.weekyear().roundCeiling(iCutoverMillis);,1,0,0,2,4,0,4,0,0,5,65,6,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,533,            fields.weekOfWeekyear = new CutoverField(,2,0,0,0,1,0,0,1,0,4,41,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,202,"            cCache.put(zone, chronos);",0,0,0,1,2,0,4,0,0,4,26,7,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,200,        if (chronos == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,201,            chronos = new ArrayList<GJChronology>(2);,1,0,0,1,2,0,0,2,0,4,41,6,0.007197627,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,129,        if (instant != yearStartMillis) {,2,1,0,1,3,0,0,0,0,3,33,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,228,        chronos.add(chrono);,0,0,0,1,2,0,3,0,0,3,20,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,541,            fields.year = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,40,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,543,            fields.years = fields.year.getDurationField();,4,0,0,1,2,0,1,0,0,6,46,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,546,            fields.yearOfCentury = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,49,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,549,            fields.centuryOfEra = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,48,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,491,        fields.copyFieldsFrom(gregorian);,0,0,0,1,2,0,3,0,0,3,33,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,497,        if (gregorian.millisOfDay().get(iCutoverMillis) == 0) {,0,1,0,3,7,0,4,0,0,5,55,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,945,"            this(julianField, gregorianField, durationField, cutoverMillis, false);",4,0,0,1,2,0,0,0,0,5,71,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,83,        return to.getDateTimeMillis,0,0,0,0,0,0,2,0,0,2,27,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,230,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,476,        if (getBase() != null) {,0,1,0,2,5,0,1,0,0,3,24,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,551,            fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,557,            fields.weekyear = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,44,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,555,            fields.months = fields.monthOfYear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,559,            fields.weekyearOfCentury = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,53,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,958,            if (durationField == null) {,1,1,0,1,3,0,0,0,0,2,28,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,959,"                durationField = new LinkedDurationField(iDurationField, this);",2,0,0,1,2,0,0,1,0,4,62,7,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,957,"            super(julianField, gregorianField, cutoverMillis, convertByWeekyear);",4,0,0,1,2,0,0,0,0,4,69,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,480,        if (julian.getMinimumDaysInFirstWeek() != gregorian.getMinimumDaysInFirstWeek()) {,0,1,0,3,7,0,4,0,0,5,82,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,215,            chrono = new GJChronology,1,0,0,0,0,0,0,1,0,3,25,6,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,214,        if (zone == DateTimeZone.UTC) {,3,1,0,1,3,0,0,0,0,4,31,4,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,1083,"            super(durationField, durationField.getType());",1,0,0,2,4,0,2,0,0,3,46,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,1084,            iField = dateTimeField;,2,0,0,0,0,0,0,0,0,3,23,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,764,            return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,569,            cf.iRangeDurationField = fields.months;,4,0,0,0,0,0,0,0,0,5,39,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,567,            CutoverField cf = new CutoverField,1,0,0,0,0,0,0,2,0,3,34,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,561,            fields.weekyears = fields.weekyear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,961,            iDurationField = durationField;,2,0,0,0,0,0,0,0,0,3,31,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,570,            fields.dayOfMonth = cf;,3,0,0,0,0,0,0,0,0,4,23,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,105,    static final Instant DEFAULT_CUTOVER = new Instant(-12219292800000L);,1,0,0,1,2,2,0,2,0,6,69,2,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,612,"            this(julianField, gregorianField, cutoverMillis, false);",3,0,0,1,2,0,0,0,0,4,56,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,553,            fields.monthOfYear = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,47,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,575,"        return convertByYear(instant, iJulianChronology, iGregorianChronology);",0,0,0,1,2,0,4,0,0,4,71,5,0.007197627,0
defect4j,time,org/joda/time/chrono/GJChronology,16,485,        iGapDuration = iCutoverMillis - julianToGregorianByYear(iCutoverMillis);,2,1,0,1,2,0,2,0,0,6,72,4,0.007197627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,75,"        return set(instant, get(instant) + years);",1,1,0,2,4,0,4,0,0,6,42,5,0.007188192,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,72,        if (years == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.007188192,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,261,        return (1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) / 2;,3,4,0,1,2,0,0,0,0,7,79,4,0.007169383,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,221,        if (relativeYear <= 0) {,1,1,0,1,3,0,0,0,0,2,24,4,0.007169383,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,219,        int relativeYear = year - 1968;,2,1,0,0,0,0,0,0,0,3,31,5,0.007169383,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,211,        return (year & 3) == 0;,1,2,0,1,2,0,0,0,0,3,23,4,0.007169383,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,233,        long millis = (relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY;,5,3,0,2,4,0,0,0,0,8,89,5,0.007169383,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,237,        return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;,3,3,0,1,2,0,0,0,0,6,64,4,0.007169383,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,253,        return MILLIS_PER_YEAR / 2;,1,1,0,0,0,0,0,0,0,2,27,4,0.007169383,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,888,"            instant = add(newInstant, 1);",1,0,0,1,2,0,2,0,0,4,29,6,0.007160009,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,886,        long newInstant = roundFloor(instant);,1,0,0,1,2,0,2,0,0,3,38,5,0.007160009,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,887,        if (newInstant != instant) {,2,1,0,1,3,0,0,0,0,3,28,4,0.007160009,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,890,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.007160009,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,181,        } else if ( workWoyYear > year ) {,2,1,0,1,4,0,0,0,0,3,34,5,0.007160009,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,84,        return value;,1,0,0,0,0,0,0,0,0,1,13,4,0.007150655,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,81,        if (value <= iSkip) {,2,1,0,1,3,0,0,0,0,3,21,4,0.007150655,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,80,        int value = super.get(millis);,3,0,0,1,2,0,0,0,0,3,30,5,0.007150655,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,237,            instant -= ((long) DateTimeConstants.MILLIS_PER_WEEK) * (wow - 1);,4,2,0,3,6,0,0,0,0,7,66,6,0.007141321,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,540,                return 7 + (int) ((daysSince19700101 + 4) % 7);,1,3,0,3,6,0,0,0,0,4,47,8,0.007132008,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,157,        FieldUtils.verifyValueBounds,0,0,0,0,0,0,2,0,0,2,28,5,0.007122714,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,159,"        return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;",1,1,0,1,2,0,4,0,0,6,74,4,0.007122714,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,153,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.007122714,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,350,            return offset;,1,0,0,0,0,0,0,0,0,1,14,5,0.007119089,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,345,            long sum = instant + offset;,3,1,0,0,0,0,0,0,0,4,28,6,0.007119089,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,344,            int offset = this.iZone.getOffset(instant);,2,0,0,1,2,0,2,0,0,4,43,6,0.007119089,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,347,            if ((instant ^ sum) < 0 && (instant ^ offset) >= 0) {,4,5,0,3,7,0,0,0,0,9,53,5,0.007119089,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,539,            if (daysSince19700101 < -3) {,1,1,0,1,3,0,0,0,0,3,29,6,0.007113441,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,537,            daysSince19700101 = (instant - (DateTimeConstants.MILLIS_PER_DAY - 1)),4,2,0,2,4,0,0,0,0,7,70,6,0.007113441,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,172,"        FieldUtils.verifyValueBounds(DateTimeFieldType.hourOfDay(), hourOfDay, 0, 23);",0,0,0,2,4,0,5,0,0,5,78,5,0.007091719,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,173,"        FieldUtils.verifyValueBounds(DateTimeFieldType.minuteOfHour(), minuteOfHour, 0, 59);",0,0,0,2,4,0,5,0,0,5,84,5,0.007091719,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,174,"        FieldUtils.verifyValueBounds(DateTimeFieldType.secondOfMinute(), secondOfMinute, 0, 59);",0,0,0,2,4,0,5,0,0,5,88,5,0.007091719,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,175,"        FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfSecond(), millisOfSecond, 0, 999);",0,0,0,2,4,0,5,0,0,5,89,5,0.007091719,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,177,"        return getDateMidnightMillis(year, monthOfYear, dayOfMonth)",0,0,0,1,2,0,4,0,0,4,59,9,0.007091719,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,80,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.007091719,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,167,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.007091719,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,96,        return iField.get(instant);,0,0,0,1,2,0,3,0,0,3,27,5,0.007076546,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,185,        return iMinDaysInFirstWeek;,1,0,0,0,0,0,0,0,0,1,27,4,0.007076546,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,142,            return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,50,7,0.007075737,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,50,public final class JulianChronology extends BasicGJChronology {,1,0,0,0,1,2,0,1,0,4,63,1,0.007067371,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,496,            return getYear(instant + DateTimeConstants.MILLIS_PER_WEEK);,3,1,0,1,2,0,1,0,0,5,60,7,0.007067371,0
defect4j,time,org/joda/time/DateTimeUtils,16,272,        return zone;,1,0,0,0,0,0,0,0,0,1,12,4,0.007058216,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,179,        if ( workWoyYear < year ) {,2,1,0,1,3,0,0,0,0,3,27,4,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,173,        int workWoyYear = get( workInstant );,1,0,0,1,2,0,2,0,0,3,37,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,168,"        workInstant = iChronology.setYear( workInstant, year );",1,0,0,1,2,0,4,0,0,6,55,4,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,162,        long workInstant = instant; // Get a copy,2,0,0,0,0,0,0,0,0,2,41,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,191,        workInstant = workInstant + (setToWeek - currentWoyWeek),4,2,0,1,2,0,0,0,0,7,56,4,0.007049081,0
defect4j,time,org/joda/time/DateTimeUtils,16,269,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,204,        return workInstant;,1,0,0,0,0,0,0,0,0,1,19,4,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,200,"        workInstant = iChronology.dayOfWeek().set( workInstant, thisDow );",1,0,0,2,4,0,5,0,0,7,66,4,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,133,        int thisWeekyear = get( instant );,1,0,0,1,2,0,2,0,0,3,34,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,134,        if ( thisWeekyear == year ) {,2,1,0,1,3,0,0,0,0,3,29,4,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,189,        int currentWoyWeek = iChronology.getWeekOfWeekyear(workInstant);,1,0,0,1,2,0,3,0,0,4,64,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,128,"        FieldUtils.verifyValueBounds(this, Math.abs(year),",0,0,0,1,3,0,5,0,0,5,50,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,155,        if ( setToWeek > maxOutWeeks ) {,2,1,0,1,3,0,0,0,0,3,32,4,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,154,        int setToWeek = iChronology.getWeekOfWeekyear(instant);,1,0,0,1,2,0,3,0,0,4,55,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,144,        int weeksInFromYear = iChronology.getWeeksInYear( thisWeekyear );,1,0,0,1,2,0,3,0,0,4,65,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,145,        int weeksInToYear = iChronology.getWeeksInYear( year );,1,0,0,1,2,0,3,0,0,4,55,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,146,        int maxOutWeeks = (weeksInToYear < weeksInFromYear) ?,3,1,0,1,2,0,0,0,0,4,53,5,0.007049081,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,140,        int thisDow = iChronology.getDayOfWeek(instant);,1,0,0,1,2,0,3,0,0,4,48,5,0.007049081,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1288,            return iMaxParsedDigits;,1,0,0,0,0,0,0,0,0,1,24,5,0.007039965,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,96,            return instant - instant % iUnitMillis - iUnitMillis;,4,3,0,0,0,0,0,0,0,7,53,6,0.007021791,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,95,            instant += 1;,1,0,0,0,0,0,0,0,0,2,13,6,0.007021791,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,359,        return append0(new CharacterLiteral(c));,1,0,0,2,4,0,1,1,0,3,40,5,0.007012734,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1170,            iValue = value;,2,0,0,0,0,0,0,0,0,3,15,5,0.007012734,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2725,                if (element instanceof DateTimeParser) {,1,0,0,1,3,0,0,1,0,2,40,8,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2724,                element = elementPairs.get(i + 1);,2,1,0,1,2,0,2,0,0,6,34,7,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2726,                    if (element instanceof Composite) {,1,0,0,1,3,0,0,1,0,2,35,10,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2720,                        printerList.add(element);,0,0,0,1,2,0,3,0,0,3,25,12,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2729,                        parserList.add(element);,0,0,0,1,2,0,3,0,0,3,24,12,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2715,                Object element = elementPairs.get(i);,1,0,0,1,2,0,3,1,0,5,37,7,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2716,                if (element instanceof DateTimePrinter) {,1,0,0,1,3,0,0,1,0,2,41,8,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2717,                    if (element instanceof Composite) {,1,0,0,1,3,0,0,1,0,2,35,10,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2586,                    iPrinters[i] = printer;,1,0,1,1,2,0,0,0,0,4,23,9,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2603,                iParsedLengthEstimate = parseEst;,2,0,0,0,0,0,0,0,0,3,33,7,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2600,                    parseEst += parser.estimateParsedLength();,1,0,0,1,2,0,2,0,0,4,42,9,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2601,                    iParsers[i] = parser;,1,0,1,1,2,0,0,0,0,4,21,9,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2596,                iParsers = new DateTimeParser[size];,1,0,1,1,2,0,0,1,0,4,36,7,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2597,                int parseEst = 0;,1,0,0,0,0,0,0,0,0,1,17,8,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2595,                int size = parserList.size();,1,0,0,1,2,0,2,0,0,3,29,8,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2598,                for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,7,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2599,                    DateTimeParser parser = (DateTimeParser) parserList.get(i);,1,0,0,2,4,0,3,2,0,6,59,9,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2585,                    printEst += printer.estimatePrintedLength();,1,0,0,1,2,0,2,0,0,4,44,9,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2584,                    DateTimePrinter printer = (DateTimePrinter) printerList.get(i);,1,0,0,2,4,0,3,2,0,6,63,9,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2581,                iPrinters = new DateTimePrinter[size];,1,0,1,1,2,0,0,1,0,4,38,7,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2580,                int size = printerList.size();,1,0,0,1,2,0,2,0,0,3,30,8,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2583,                for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,7,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2582,                int printEst = 0;,1,0,0,0,0,0,0,0,0,1,17,8,0.007003695,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2588,                iPrintedLengthEstimate = printEst;,2,0,0,0,0,0,0,0,0,3,34,7,0.007003695,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,239,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.006994675,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,236,        if (wow > 1) {,1,1,0,1,3,0,0,0,0,2,14,4,0.006994675,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,234,        instant = iChronology.weekOfWeekyear().roundFloor(instant);,1,0,0,2,4,0,4,0,0,6,59,4,0.006994675,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,235,        int wow = iChronology.getWeekOfWeekyear(instant);,1,0,0,1,2,0,3,0,0,4,49,5,0.006994675,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,16,65,        return super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY),4,2,0,1,2,0,0,0,0,6,71,6,0.006994675,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,107,"                chrono = new ISOChronology(ZonedChronology.getInstance(INSTANCE_UTC, zone));",1,0,0,2,4,0,4,1,0,7,76,8,0.0069889,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,108,"                cCache.put(zone, chrono);",0,0,0,1,2,0,4,0,0,4,25,9,0.0069889,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,329,        return (int) ((firstWeekMillis2 - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK);,4,2,0,3,6,0,0,0,0,6,89,6,0.006985675,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,328,        long firstWeekMillis2 = getFirstWeekOfYearMillis(year + 1);,2,1,0,1,2,0,1,0,0,4,59,5,0.006985675,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,327,        long firstWeekMillis1 = getFirstWeekOfYearMillis(year);,1,0,0,1,2,0,2,0,0,3,55,5,0.006985675,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1430,            return iMaxParsedDigits;,1,0,0,0,0,0,0,0,0,1,24,5,0.006985675,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1425,"            super(fieldType, maxParsedDigits, signed);",3,0,0,1,2,0,0,0,0,3,42,5,0.006976694,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1426,            iMinPrintedDigits = minPrintedDigits;,2,0,0,0,0,0,0,0,0,3,37,5,0.006976694,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,120,        if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,5,0.006973302,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1283,            iMaxParsedDigits = maxParsedDigits;,2,0,0,0,0,0,0,0,0,3,35,5,0.006967732,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1282,            iFieldType = fieldType;,2,0,0,0,0,0,0,0,0,3,23,5,0.006967732,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1284,            iSigned = signed;,2,0,0,0,0,0,0,0,0,3,17,5,0.006967732,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,82,            return iRange - 1 + (int) (((instant + 1) / getUnitMillis()) % iRange);,3,5,0,5,10,0,1,0,0,9,71,6,0.006958788,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,221,        return MIN_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.006957762,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,457,"        int month = getMonthOfYear(millis, year);",1,0,0,1,2,0,3,0,0,4,41,5,0.006950014,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,456,        int year = getYear(millis);,1,0,0,1,2,0,2,0,0,3,27,5,0.006950014,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,458,"        return getDayOfMonth(millis, year, month);",0,0,0,1,2,0,4,0,0,4,42,5,0.006950014,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,3,48,        return iChronology.getDayOfMonth(instant);,0,0,0,1,2,0,3,0,0,3,42,5,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,106,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,104,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,105,            chrono = cCache.get(zone);,1,0,0,1,2,0,3,0,0,5,26,6,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,100,        ISOChronology chrono = cFastCache[index];,1,0,1,1,2,0,0,1,0,4,41,4,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,101,        if (chrono != null && chrono.getZone() == zone) {,2,3,0,2,5,0,2,0,0,7,49,4,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,99,        int index = System.identityHashCode(zone) & (FAST_CACHE_SIZE - 1);,2,2,0,2,4,0,3,0,0,7,66,5,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,96,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,111,        cFastCache[index] = chrono;,1,0,1,1,2,0,0,0,0,4,27,4,0.006950014,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,112,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.006950014,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2705,            return iParsers != null;,1,1,0,0,0,0,0,0,0,2,24,5,0.006949864,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2701,            return iPrinters != null;,1,1,0,0,0,0,0,0,0,2,25,5,0.006949864,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1129,                return ((Composite)f).isPrinter();,1,0,0,3,6,0,1,1,0,3,34,9,0.006949864,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1139,                return ((Composite)f).isParser();,1,0,0,3,6,0,1,1,0,3,33,9,0.006949864,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,88,        int i = (int)((millis - getYearMillis(year)) >> 10);,2,2,0,4,8,0,2,0,0,6,52,5,0.00694228,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,55,        return iChronology.getYear(instant);,0,0,0,1,2,0,3,0,0,3,36,5,0.00694228,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,478,        return (int) ((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1;,4,3,0,3,6,0,0,0,0,7,76,4,0.00694228,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,477,"        dateMillis += getTotalMillisByYearMonth(year, month);",1,0,0,1,2,0,3,0,0,5,53,4,0.00694228,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,476,        long dateMillis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,38,5,0.00694228,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2713,            int size = elementPairs.size();,1,0,0,1,2,0,2,0,0,3,31,6,0.006932071,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2714,            for (int i=0; i<size; i+=2) {,4,1,0,1,3,0,0,0,0,6,29,5,0.006932071,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2591,            if (parserList.size() <= 0) {,0,1,0,2,5,0,2,0,0,3,29,5,0.006932071,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2574,"            decompose(elementPairs, printerList, parserList);",0,0,0,1,2,0,4,0,0,4,49,6,0.006932071,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2576,            if (printerList.size() <= 0) {,0,1,0,2,5,0,2,0,0,3,30,5,0.006932071,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2571,            List<Object> printerList = new ArrayList<Object>();,1,0,0,1,2,0,0,4,0,5,51,5,0.006932071,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2572,            List<Object> parserList = new ArrayList<Object>();,1,0,0,1,2,0,0,4,0,5,50,5,0.006932071,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1117,                f = new Composite(iElementPairs);,2,0,0,1,2,0,0,1,0,4,33,8,0.006932071,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,163,        return getMaximumValue(instant);,0,0,0,1,2,0,2,0,0,2,32,5,0.006932071,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,408,        long i2 = (instant >> 1) + getApproxMillisAtEpochDividedByTwo();,2,2,0,2,4,0,1,0,0,5,64,5,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,419,        } else if (diff >= DateTimeConstants.MILLIS_PER_DAY * 365L) {,3,2,0,1,4,0,0,0,0,5,61,5,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,412,        int year = (int) (i2 / unitMillis);,3,1,0,2,4,0,0,0,0,4,35,5,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,417,        if (diff < 0) {,1,1,0,1,3,0,0,0,0,2,15,4,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,415,        long diff = instant - yearStart;,3,1,0,0,0,0,0,0,0,4,32,5,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,414,        long yearStart = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,37,5,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,436,        return year;,1,0,0,0,0,0,0,0,0,1,12,4,0.006926855,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,233,        return MILLIS_PER_YEAR / 2;,1,1,0,0,0,0,0,0,0,2,27,4,0.006926855,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,241,        return (1970L * MILLIS_PER_YEAR) / 2;,1,2,0,1,2,0,0,0,0,3,37,4,0.006926855,0
defect4j,time,org/joda/time/base/BaseDateTime,3,256,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,409,        if (i2 < 0) {,1,1,0,1,3,0,0,0,0,2,13,4,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,407,        long unitMillis = getAverageMillisPerYearDividedByTwo();,1,0,0,1,2,0,1,0,0,2,56,5,0.006926855,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,554,            return (DateTimeConstants.MILLIS_PER_DAY - 1),2,1,0,1,2,0,0,0,0,3,45,8,0.00689671,0
defect4j,time,org/joda/time/base/BaseDateTime,3,253,        iChronology = checkChronology(chronology);,1,0,0,1,2,0,2,0,0,4,42,4,0.006896175,0
defect4j,time,org/joda/time/base/BaseDateTime,3,254,"        long instant = iChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,",1,0,0,0,1,0,5,0,0,6,75,5,0.006896175,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,417,                oneYear = DateTimeConstants.MILLIS_PER_DAY * 365L;,3,1,0,0,0,0,0,0,0,5,50,9,0.006887916,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,414,            if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,8,0.006887916,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,424,                year++;,1,0,0,0,0,0,0,0,0,2,7,9,0.006887916,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,422,            if (yearStart <= instant) {,2,1,0,1,3,0,0,0,0,3,27,7,0.006887916,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,420,            yearStart += oneYear;,2,0,0,0,0,0,0,0,0,3,21,7,0.006887916,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,60,        return iChronology.getWeekyear(instant);,0,0,0,1,2,0,3,0,0,3,40,5,0.006887916,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,16,103,        return DateTimeConstants.MONDAY;,2,0,0,0,0,0,0,0,0,2,32,5,0.006870383,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,16,112,        return DateTimeConstants.SUNDAY;,2,0,0,0,0,0,0,0,0,2,32,5,0.006870383,0
defect4j,time,org/joda/time/base/AbstractInstant,17,265,        ReadableInstant otherInstant = (ReadableInstant) readableInstant;,2,0,0,1,2,0,0,2,0,4,65,4,0.006863521,0
defect4j,time,org/joda/time/base/AbstractInstant,17,262,        if (readableInstant instanceof ReadableInstant == false) {,1,1,0,1,3,0,0,1,0,4,58,4,0.006863521,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,792,        return getMaximumValue();,0,0,0,1,2,0,1,0,0,1,25,5,0.00684422,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,493,        int year = getYear(instant);,1,0,0,1,2,0,2,0,0,3,28,5,0.00684422,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,495,        if (week == 1) {,1,1,0,1,3,0,0,0,0,2,16,4,0.00684422,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,494,"        int week = getWeekOfWeekyear(instant, year);",1,0,0,1,2,0,3,0,0,4,44,5,0.00684422,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,614,"        return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);",0,0,0,1,2,0,4,0,0,4,60,5,0.006843025,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,613,"        FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));",0,0,0,3,6,0,8,0,0,8,115,5,0.006843025,0
defect4j,time,org/joda/time/DateTimeZone,16,952,        long instantUTC = instantLocal - offsetOriginal;,3,1,0,0,0,0,0,0,0,4,48,5,0.006835536,0
defect4j,time,org/joda/time/DateTimeZone,16,953,        int offsetLocalFromOriginal = getOffset(instantUTC);,1,0,0,1,2,0,2,0,0,3,52,5,0.006835536,0
defect4j,time,org/joda/time/DateTimeZone,16,951,        int offsetOriginal = getOffset(originalInstantUTC);,1,0,0,1,2,0,2,0,0,3,51,5,0.006835536,0
defect4j,time,org/joda/time/DateTimeZone,16,954,        if (offsetLocalFromOriginal == offsetOriginal) {,2,1,0,1,3,0,0,0,0,3,48,4,0.006835536,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,202,        int leapYears = year / 100;,2,1,0,0,0,0,0,0,0,3,27,5,0.006835488,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,203,        if (year < 0) {,1,1,0,1,3,0,0,0,0,2,15,4,0.006835488,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,217,        return (year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY;,5,4,0,2,4,0,0,0,0,9,90,4,0.006835488,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,212,            if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,7,0.006835488,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,211,            leapYears = (year >> 2) - leapYears + (leapYears >> 2);,4,4,0,2,4,0,0,0,0,9,55,6,0.006835488,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,139,        if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,5,0.006835488,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,197,        return ((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0);,3,8,0,5,10,0,0,0,0,11,69,4,0.006835488,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,611,"        FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());",0,0,0,4,8,0,7,0,0,7,89,5,0.006827964,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,612,"        FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));",0,0,0,3,6,0,7,0,0,7,97,5,0.006827964,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,690,        return getMaxMonth();,0,0,0,1,2,0,1,0,0,1,21,5,0.006827964,0
defect4j,time,org/joda/time/field/FieldUtils,3,251,        if ((value < lowerBound) || (value > upperBound)) {,4,3,0,3,7,0,0,0,0,7,51,4,0.006827964,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,344,            return jan1millis + (8 - jan1dayOfWeek),2,2,0,1,2,0,0,0,0,4,39,6,0.006792383,0
defect4j,time,org/joda/time/DurationFieldType,3,292,                    return chronology.years();,0,0,0,1,2,0,2,0,0,2,26,7,0.006790552,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,508,"        return getWeekOfWeekyear(instant, getYear(instant));",0,0,0,2,4,0,4,0,0,4,52,5,0.00675818,0
defect4j,time,org/joda/time/field/DecoratedDurationField,16,101,        return iField.getUnitMillis();,0,0,0,1,2,0,2,0,0,2,30,5,0.006749674,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,268,"            fields.year = new SkipDateTimeField(this, fields.year);",4,0,0,1,2,0,0,1,0,6,55,6,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,269,"            fields.weekyear = new SkipDateTimeField(this, fields.weekyear);",4,0,0,1,2,0,0,1,0,6,63,6,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,265,        if (getBase() == null) {,0,1,0,2,5,0,1,0,0,3,24,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,266,            super.assemble(fields);,2,0,0,1,2,0,0,0,0,2,23,7,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,149,                chronos[minDaysInFirstWeek - 1] = chrono;,2,1,1,1,2,0,0,0,0,5,41,8,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,141,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,143,"                    chrono = new JulianChronology(null, null, minDaysInFirstWeek);",2,0,0,1,2,0,0,1,0,5,62,10,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,142,                if (zone == DateTimeZone.UTC) {,3,1,0,1,3,0,0,0,0,4,31,8,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,74,        INSTANCE_UTC = getInstance(DateTimeZone.UTC);,3,0,0,1,2,0,1,0,0,5,45,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,71,"    private static final Map<DateTimeZone, JulianChronology[]> cCache = new HashMap<DateTimeZone, JulianChronology[]>();",1,0,0,3,6,3,0,6,0,10,116,2,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,152,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,162,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,114,"        return getInstance(zone, 4);",0,0,0,1,2,0,2,0,0,2,28,5,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,129,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,136,                chrono = chronos[minDaysInFirstWeek - 1];,2,1,1,1,2,0,0,0,0,5,41,8,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,130,            JulianChronology[] chronos = cCache.get(zone);,1,0,0,2,4,0,3,1,0,5,46,6,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,131,            if (chronos == null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,132,                chronos = new JulianChronology[7];,1,0,0,1,2,0,0,1,0,3,34,8,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,241,        return MIN_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,249,        return MILLIS_PER_YEAR;,1,0,0,0,0,0,0,0,0,1,23,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,257,        return MILLIS_PER_MONTH;,1,0,0,0,0,0,0,0,0,1,24,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,133,"                cCache.put(zone, chronos);",0,0,0,1,2,0,4,0,0,4,26,9,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,125,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.006741185,0
defect4j,time,org/joda/time/chrono/JulianChronology,16,245,        return MAX_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.006741185,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,406,            long localInstant = iZone.convertUTCToLocal(instant);,1,0,0,1,2,0,3,0,0,4,53,6,0.006707403,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,407,            return iField.get(localInstant);,0,0,0,1,2,0,3,0,0,3,32,6,0.006707403,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,521,        if (instant >= firstWeekMillis2) {,2,1,0,1,3,0,0,0,0,3,34,4,0.006699001,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,520,        long firstWeekMillis2 = getFirstWeekOfYearMillis(year + 1);,2,1,0,1,2,0,1,0,0,4,59,5,0.006699001,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,524,        return (int) ((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) + 1;,4,3,0,3,6,0,0,0,0,7,84,4,0.006699001,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,516,        long firstWeekMillis1 = getFirstWeekOfYearMillis(year);,1,0,0,1,2,0,2,0,0,3,55,5,0.006699001,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,517,        if (instant < firstWeekMillis1) {,2,1,0,1,3,0,0,0,0,3,33,4,0.006699001,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,342,        if (jan1dayOfWeek > (8 - iMinDaysInFirstWeek)) {,2,2,0,2,5,0,0,0,0,4,48,4,0.006682248,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,340,        int jan1dayOfWeek = getDayOfWeek(jan1millis);,1,0,0,1,2,0,2,0,0,3,45,5,0.006682248,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,339,        long jan1millis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,38,5,0.006682248,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,109,        DateTimeParser parser = null;,1,0,0,0,0,0,0,1,0,2,29,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,104,        Object f = getFormatter();,1,0,0,1,2,0,1,1,0,3,26,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,105,        DateTimePrinter printer = null;,1,0,0,0,0,0,0,1,0,2,31,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,106,        if (isPrinter(f)) {,0,0,0,2,5,0,2,0,0,2,19,5,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,107,            printer = (DateTimePrinter) f;,2,0,0,1,2,0,0,1,0,4,30,6,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,113,        iChrono = null;,1,0,0,0,0,0,0,0,0,2,15,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,112,        iOffsetParsed = false;,1,0,0,0,0,0,0,0,0,3,22,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,111,        iLocale = null;,1,0,0,0,0,0,0,0,0,2,15,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,110,        iParser = parser;,2,0,0,0,0,0,0,0,0,3,17,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,116,        iDefaultYear = 2000;,1,0,0,0,0,0,0,0,0,2,20,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,115,        iPivotYear = null;,1,0,0,0,0,0,0,0,0,2,18,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,114,        iZone = null;,1,0,0,0,0,0,0,0,0,2,13,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,109,        iPrinter = printer;,2,0,0,0,0,0,0,0,0,3,19,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,113,        if (printer != null || parser != null) {,2,3,0,1,3,0,0,0,0,5,40,4,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,111,            parser = (DateTimeParser) f;,2,0,0,1,2,0,0,1,0,4,28,6,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,110,        if (isParser(f)) {,0,0,0,2,5,0,2,0,0,2,18,5,0.006665563,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,114,"            return new DateTimeFormatter(printer, parser);",2,0,0,1,2,0,0,1,0,3,46,7,0.006665563,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,157,        return i.intValue();,0,0,0,1,2,0,2,0,0,2,20,5,0.006625295,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,339,        iElementPairs.add(element);,0,0,0,1,2,0,3,0,0,3,27,5,0.006624147,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1128,            if (f instanceof Composite) {,1,0,0,1,3,0,0,1,0,2,29,7,0.006624147,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1127,        if (f instanceof DateTimePrinter) {,1,0,0,1,3,0,0,1,0,2,35,5,0.006624147,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,336,        iFormatter = null;,1,0,0,0,0,0,0,0,0,2,18,4,0.006624147,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,338,        iElementPairs.add(element);,0,0,0,1,2,0,3,0,0,3,27,5,0.006624147,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1138,            if (f instanceof Composite) {,1,0,0,1,3,0,0,1,0,2,29,7,0.006624147,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1137,        if (f instanceof DateTimeParser) {,1,0,0,1,3,0,0,1,0,2,34,5,0.006624147,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1120,            iFormatter = f;,2,0,0,0,0,0,0,0,0,3,15,6,0.006607698,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1123,        return f;,1,0,0,0,0,0,0,0,0,1,9,4,0.006607698,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1100,        Object f = iFormatter;,2,0,0,0,0,0,0,1,0,3,22,4,0.006607698,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1102,        if (f == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.006607698,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1103,            if (iElementPairs.size() == 2) {,0,1,0,2,5,0,2,0,0,3,32,6,0.006607698,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1116,            if (f == null) {,1,1,0,1,3,0,0,0,0,2,16,6,0.006607698,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,84,        iElementPairs = new ArrayList<Object>();,1,0,0,1,2,0,0,2,0,4,40,4,0.006599499,0
defect4j,time,org/joda/time/DateTimeUtils,3,115,        cMillisProvider = new FixedMillisProvider(fixedMillis);,2,0,0,1,2,0,0,1,0,4,55,4,0.006482318,0
defect4j,time,org/joda/time/DateTimeUtils,3,101,        cMillisProvider = SYSTEM_MILLIS_PROVIDER;,2,0,0,0,0,0,0,0,0,3,41,4,0.006482318,0
defect4j,time,org/joda/time/DateTimeUtils,3,100,        checkPermission();,0,0,0,1,2,0,1,0,0,1,18,5,0.006482318,0
defect4j,time,org/joda/time/DateTimeUtils,3,114,        checkPermission();,0,0,0,1,2,0,1,0,0,1,18,5,0.006482318,0
defect4j,time,org/joda/time/DateTimeUtils,3,548,            iMillis = fixedMillis;,2,0,0,0,0,0,0,0,0,3,22,5,0.006482318,0
defect4j,time,org/joda/time/DateTimeUtils,3,162,        if (sm != null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.006482318,0
defect4j,time,org/joda/time/DateTimeUtils,3,161,        SecurityManager sm = System.getSecurityManager();,1,0,0,1,2,0,2,1,0,4,49,4,0.006482318,0
defect4j,time,org/joda/time/DateTimeUtils,3,547,        FixedMillisProvider(long fixedMillis) {,2,0,0,1,3,0,0,0,0,2,39,3,0.006482318,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,209,            leapYears = ((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1;,4,7,0,4,8,0,0,0,0,12,71,6,0.006465883,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,394,"        millis += getTotalMillisByYearMonth(year, month);",1,0,0,1,2,0,3,0,0,5,49,4,0.006447975,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,395,        return millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY;,4,3,0,2,4,0,0,0,0,7,74,4,0.006447975,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,393,        long millis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,34,5,0.006447975,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0.006441718,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0.006441718,0
defect4j,time,org/joda/time/DateTimeZone,3,179,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.006393645,0
defect4j,time,org/joda/time/DateTimeZone,3,175,        SecurityManager sm = System.getSecurityManager();,1,0,0,1,2,0,2,1,0,4,49,4,0.006393645,0
defect4j,time,org/joda/time/DateTimeZone,3,176,        if (sm != null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.006393645,0
defect4j,time,org/joda/time/DateTimeZone,3,183,            cDefault = zone;,2,0,0,0,0,0,0,0,0,3,16,6,0.006393645,0
defect4j,time,org/joda/time/DateTimeZone,3,182,        synchronized(DateTimeZone.class) {,0,0,0,1,3,0,0,1,0,1,34,6,0.006393645,0
defect4j,time,org/joda/time/Instant,16,119,        iMillis = instant;,2,0,0,0,0,0,0,0,0,3,18,4,0.006345595,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,751,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.006333415,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,749,            iYearInfoCache[year & CACHE_MASK] = info;,3,1,1,1,2,0,0,0,0,6,41,6,0.006333415,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,748,"            info = new YearInfo(year, calculateFirstDayOfYearMillis(year));",2,0,0,2,4,0,2,1,0,6,63,6,0.006333415,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,747,        if (info == null || info.iYear != year) {,4,3,0,1,3,0,0,0,0,7,41,4,0.006333415,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,746,        YearInfo info = iYearInfoCache[year & CACHE_MASK];,3,1,1,1,2,0,0,1,0,6,50,4,0.006333415,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,368,        return getYearInfo(year).iFirstDayMillis;,1,0,0,1,2,0,2,0,0,3,41,5,0.006333415,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,779,"        YearInfo(int year, long firstDayMillis) {",3,0,0,1,3,0,0,0,0,3,41,3,0.006333415,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,781,            iFirstDayMillis = firstDayMillis;,2,0,0,0,0,0,0,0,0,3,33,5,0.006333415,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,780,            iYear = year;,2,0,0,0,0,0,0,0,0,3,13,5,0.006333415,0
defect4j,time,org/joda/time/Instant,16,256,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.006239449,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,133,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,0.006235074,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,881,                    > this.maximumItemAge) {,1,0,0,0,2,0,0,0,0,1,24,8,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,429,        return (TimeSeriesDataItem) this.data.get(index);,1,0,0,2,4,0,2,1,0,4,49,5,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,603,            RegularTimePeriod last = getTimePeriod(getItemCount() - 1);,1,1,0,2,4,0,2,1,0,5,59,6,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,463,        return getRawDataItem(index).getPeriod();,0,0,0,2,4,0,3,0,0,3,41,5,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1296,"                return Math.max(a, b);",0,0,0,1,2,0,4,0,0,4,22,9,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,584,        else if (!this.timePeriodClass.equals(c)) {,1,0,0,2,5,0,2,0,0,4,43,5,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1269,            if (Double.isNaN(b)) {,0,0,0,2,5,0,3,0,0,3,22,7,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,885,            if (removed) {,1,0,0,1,3,0,0,0,0,1,14,6,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,605,                this.data.add(item);,1,0,0,1,2,0,2,0,0,3,20,9,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,604,            if (item.getPeriod().compareTo(last) > 0) {,0,1,0,3,7,0,4,0,0,5,43,6,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,606,                added = true;,1,0,0,0,0,0,0,0,0,3,13,8,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,878,            long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();,1,1,0,3,6,0,3,0,0,5,65,7,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,879,            boolean removed = false;,1,0,0,0,0,0,0,0,0,2,24,7,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1273,"                return Math.min(a, b);",0,0,0,1,2,0,4,0,0,4,22,9,0.00621118,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1292,            if (Double.isNaN(b)) {,0,0,0,2,5,0,3,0,0,3,22,7,0.00621118,0
defect4j,time,org/joda/time/DateTimeZone,3,149,                        if (temp == null) {,1,1,0,1,3,0,0,0,0,2,19,12,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,144,                                temp = forID(id);,1,0,0,1,2,0,2,0,0,4,17,16,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,143,                            if (id != null) {  // null check avoids stack overflow,1,1,0,1,3,0,0,0,0,2,54,14,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,142,"                            String id = System.getProperty(""user.timezone"");",1,0,0,1,2,0,2,1,0,5,48,14,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,138,                if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,8,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,139,                    DateTimeZone temp = null;,1,0,0,0,0,0,0,1,0,2,25,10,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,134,        DateTimeZone zone = cDefault;,2,0,0,0,0,0,0,1,0,3,29,4,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,135,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,136,            synchronized(DateTimeZone.class) {,0,0,0,1,3,0,0,1,0,1,34,8,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,137,                zone = cDefault;,2,0,0,0,0,0,0,0,0,3,16,8,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,158,                    cDefault = zone = temp;,3,0,0,0,0,0,0,0,0,5,23,10,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,155,                    if (temp == null) {,1,1,0,1,3,0,0,0,0,2,19,10,0.006209271,0
defect4j,time,org/joda/time/DateTimeZone,3,162,        return zone;,1,0,0,0,0,0,0,0,0,1,12,4,0.006209271,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,224,            leapYears = (relativeYear + 3) >> 2;,2,2,0,1,2,0,0,0,0,5,36,6,0.006194227,0
defect4j,time,org/joda/time/base/BaseDateTime,17,223,"        this(year, monthOfYear, dayOfMonth, hourOfDay,",4,0,0,0,1,0,0,0,0,4,46,4,0.006189751,0
defect4j,time,org/joda/time/chrono/GJChronology,6,513,"            fields.secondOfDay = new CutoverField(julian.secondOfDay(), fields.secondOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,96,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,519,"            fields.clockhourOfHalfday = new CutoverField(julian.clockhourOfHalfday(),",2,0,0,1,3,0,2,1,0,6,73,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,516,"            fields.hourOfDay = new CutoverField(julian.hourOfDay(), fields.hourOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,90,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,517,"            fields.hourOfHalfday = new CutoverField(julian.hourOfHalfday(), fields.hourOfHalfday, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,102,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,512,"            fields.secondOfMinute = new CutoverField(julian.secondOfMinute(), fields.secondOfMinute, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,105,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,510,"            fields.millisOfSecond = new CutoverField(julian.millisOfSecond(), fields.millisOfSecond, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,105,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,511,"            fields.millisOfDay = new CutoverField(julian.millisOfDay(), fields.millisOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,96,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,521,"            fields.halfdayOfDay = new CutoverField(julian.halfdayOfDay(), fields.halfdayOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,99,6,0.006187882,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,131,            instant = iChronology.getYearMillis(year + 1);,2,1,0,1,2,0,2,0,0,6,46,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,515,"            fields.minuteOfDay = new CutoverField(julian.minuteOfDay(), fields.minuteOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,96,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,518,"            fields.clockhourOfDay = new CutoverField(julian.clockhourOfDay(), fields.clockhourOfDay, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,105,6,0.006187882,0
defect4j,time,org/joda/time/chrono/GJChronology,6,514,"            fields.minuteOfHour = new CutoverField(julian.minuteOfHour(), fields.minuteOfHour, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,99,6,0.006187882,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1535,                if (i > 0) {,1,1,0,1,3,0,0,0,0,2,12,7,0.006187445,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1536,                    return iWallOffsets[i - 1];,1,1,1,1,2,0,0,0,0,3,27,10,0.006187445,0
defect4j,time,org/joda/time/chrono/GJChronology,6,192,        if (gregorianCutover == null) {,1,1,0,1,3,0,0,0,0,2,31,4,0.006181549,1
defect4j,time,org/joda/time/chrono/GJChronology,6,541,            long cutover = gregorian.weekyear().roundCeiling(iCutoverMillis);,1,0,0,2,4,0,4,0,0,5,65,6,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,542,            fields.weekOfWeekyear = new CutoverField(,2,0,0,0,1,0,0,1,0,4,41,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,481,        iJulianChronology = julian;,2,0,0,0,0,0,0,0,0,3,27,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,494,        iGapDuration = iCutoverMillis - julianToGregorianByYear(iCutoverMillis);,2,1,0,1,2,0,2,0,0,6,72,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,943,"            this(julianField, gregorianField, null, cutoverMillis, false);",3,0,0,1,2,0,0,0,0,4,62,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,84,        return to.getDateTimeMillis,0,0,0,0,0,0,2,0,0,2,27,5,0.006181549,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,888,"            instant = add(newInstant, 1);",1,0,0,1,2,0,2,0,0,4,29,6,0.006181549,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,887,        if (newInstant != instant) {,2,1,0,1,3,0,0,0,0,3,28,4,0.006181549,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,75,"        return set(instant, get(instant) + years);",1,1,0,2,4,0,4,0,0,6,42,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,564,            fields.months = fields.monthOfYear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,202,                chronos = new ArrayList<GJChronology>(2);,1,0,0,1,2,0,0,2,0,4,41,8,0.006181549,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,127,        int year = get(instant);,1,0,0,1,2,0,2,0,0,3,24,5,0.006181549,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,128,        long yearStartMillis = iChronology.getYearMillis(year);,1,0,0,1,2,0,3,0,0,4,55,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,270,"        super(null, new Object[] {julian, gregorian, cutoverInstant});",3,0,0,3,6,0,0,1,0,5,62,3,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,579,            fields.dayOfMonth = cf;,3,0,0,0,0,0,0,0,0,4,23,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,641,            DurationField rangeField = gregorianField.getRangeDurationField();,1,0,0,1,2,0,2,1,0,4,66,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,645,            iRangeDurationField = rangeField;,2,0,0,0,0,0,0,0,0,3,33,5,0.006181549,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,72,        if (years == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,562,            fields.monthOfYear = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,47,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,552,            fields.years = fields.year.getDurationField();,4,0,0,1,2,0,1,0,0,6,46,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,553,            fields.yearOfEra = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,45,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,555,            fields.yearOfCentury = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,49,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,558,            fields.centuryOfEra = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,48,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,489,        if (julian.getMinimumDaysInFirstWeek() != gregorian.getMinimumDaysInFirstWeek()) {,0,1,0,3,7,0,4,0,0,5,82,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,485,        if (getBase() != null) {,0,1,0,2,5,0,1,0,0,3,24,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,954,"            this(julianField, gregorianField, durationField, cutoverMillis, false);",4,0,0,1,2,0,0,0,0,5,71,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,482,        iGregorianChronology = gregorian;,2,0,0,0,0,0,0,0,0,3,33,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,483,        iCutoverInstant = cutoverInstant;,2,0,0,0,0,0,0,0,0,3,33,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,190,        zone = DateTimeUtils.getZone(zone);,1,0,0,1,2,0,3,0,0,5,35,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,576,            CutoverField cf = new CutoverField,1,0,0,0,0,0,0,2,0,3,34,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,199,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,642,            if (rangeField == null) {,1,1,0,1,3,0,0,0,0,2,25,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,643,                rangeField = julianField.getRangeDurationField();,1,0,0,1,2,0,2,0,0,4,49,7,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,633,            iJulianField = julianField;,2,0,0,0,0,0,0,0,0,3,27,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,632,            super(gregorianField.getType());,0,0,0,2,4,0,2,0,0,2,32,6,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,631,"                     long cutoverMillis, boolean convertByWeekyear) {",2,0,0,0,2,0,0,0,0,2,48,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,636,            iConvertByWeekyear = convertByWeekyear;,2,0,0,0,0,0,0,0,0,3,39,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,635,            iCutover = cutoverMillis;,2,0,0,0,0,0,0,0,0,3,25,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,634,            iGregorianField = gregorianField;,2,0,0,0,0,0,0,0,0,3,33,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,639,            iDurationField = gregorianField.getDurationField();,1,0,0,1,2,0,2,0,0,4,51,5,0.006181549,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,129,        if (instant != yearStartMillis) {,2,1,0,1,3,0,0,0,0,3,33,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,229,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,227,            chronos.add(chrono);,0,0,0,1,2,0,3,0,0,3,20,7,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,526,"            fields.era = new CutoverField(julian.era(), fields.era, iCutoverMillis);",5,0,0,2,4,0,2,1,0,9,72,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,106,    static final Instant DEFAULT_CUTOVER = new Instant(-12219292800000L);,1,0,0,1,2,2,0,2,0,6,69,2,0.006181549,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,886,        long newInstant = roundFloor(instant);,1,0,0,1,2,0,2,0,0,3,38,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,970,            iDurationField = durationField;,2,0,0,0,0,0,0,0,0,3,31,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,550,            fields.year = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,40,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,215,                chrono = new GJChronology,1,0,0,0,0,0,0,1,0,3,25,8,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,214,            if (zone == DateTimeZone.UTC) {,3,1,0,1,3,0,0,0,0,4,31,6,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,568,            fields.weekyearOfCentury = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,53,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,560,            fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,967,            if (durationField == null) {,1,1,0,1,3,0,0,0,0,2,28,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,966,"            super(julianField, gregorianField, cutoverMillis, convertByWeekyear);",4,0,0,1,2,0,0,0,0,4,69,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,968,"                durationField = new LinkedDurationField(iDurationField, this);",2,0,0,1,2,0,0,1,0,4,62,7,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,570,            fields.weekyears = fields.weekyear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,584,"        return convertByYear(instant, iJulianChronology, iGregorianChronology);",0,0,0,1,2,0,4,0,0,4,71,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,536,            fields.dayOfYear = new CutoverField(,2,0,0,0,1,0,0,1,0,4,36,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,535,            long cutover = gregorian.year().roundCeiling(iCutoverMillis);,1,0,0,2,4,0,4,0,0,5,61,6,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,109,"    private static final Map<DateTimeZone, ArrayList<GJChronology>> cCache = new HashMap<DateTimeZone, ArrayList<GJChronology>>();",1,0,0,1,2,3,0,8,0,12,126,2,0.006181549,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,890,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,1095,            iField = dateTimeField;,2,0,0,0,0,0,0,0,0,3,23,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,1094,"            super(durationField, durationField.getType());",1,0,0,2,4,0,2,0,0,3,46,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,773,            return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,203,"                cCache.put(zone, chronos);",0,0,0,1,2,0,4,0,0,4,26,9,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,200,            ArrayList<GJChronology> chronos = cCache.get(zone);,1,0,0,1,2,0,3,2,0,6,51,6,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,201,            if (chronos == null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,578,            cf.iRangeDurationField = fields.months;,4,0,0,0,0,0,0,0,0,5,39,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,474,        Object[] params = (Object[])getParam();,1,0,0,4,8,0,1,2,0,4,39,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,477,        GregorianChronology gregorian = (GregorianChronology)params[1];,1,0,1,2,4,0,0,2,0,4,63,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,476,        JulianChronology julian = (JulianChronology)params[0];,1,0,1,2,4,0,0,2,0,4,54,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,479,        iCutoverMillis = cutoverInstant.getMillis();,1,0,0,1,2,0,2,0,0,4,44,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,478,        Instant cutoverInstant = (Instant)params[2];,1,0,1,2,4,0,0,2,0,4,44,4,0.006181549,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,133,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,506,        if (gregorian.millisOfDay().get(iCutoverMillis) == 0) {,0,1,0,3,7,0,4,0,0,5,55,4,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,566,            fields.weekyear = new ImpreciseCutoverField(,2,0,0,0,1,0,0,1,0,4,44,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,621,"            this(julianField, gregorianField, cutoverMillis, false);",3,0,0,1,2,0,0,0,0,4,56,5,0.006181549,0
defect4j,time,org/joda/time/chrono/GJChronology,6,500,        fields.copyFieldsFrom(gregorian);,0,0,0,1,2,0,3,0,0,3,33,5,0.006181549,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1574,                return transitions[i];,0,0,1,1,2,0,0,0,0,2,22,8,0.006180073,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,505,            return getYear(instant + DateTimeConstants.MILLIS_PER_WEEK);,3,1,0,1,2,0,1,0,0,5,60,7,0.006168922,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,84,        return value;,1,0,0,0,0,0,0,0,0,1,13,4,0.006168922,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,81,        if (value <= iSkip) {,2,1,0,1,3,0,0,0,0,3,21,4,0.006168922,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,80,        int value = super.get(millis);,3,0,0,1,2,0,0,0,0,3,30,5,0.006168922,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,134,        if ( thisWeekyear == year ) {,2,1,0,1,3,0,0,0,0,3,29,4,0.006162627,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,233,        long millis = (relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY;,5,3,0,2,4,0,0,0,0,8,89,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,179,        if ( workWoyYear < year ) {,2,1,0,1,3,0,0,0,0,3,27,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,173,        int workWoyYear = get( workInstant );,1,0,0,1,2,0,2,0,0,3,37,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,191,        workInstant = workInstant + (setToWeek - currentWoyWeek),4,2,0,1,2,0,0,0,0,7,56,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,189,        int currentWoyWeek = iChronology.getWeekOfWeekyear(workInstant);,1,0,0,1,2,0,3,0,0,4,64,5,0.006162627,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,261,        return (1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) / 2;,3,4,0,1,2,0,0,0,0,7,79,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,128,"        FieldUtils.verifyValueBounds(this, Math.abs(year),",0,0,0,1,3,0,5,0,0,5,50,5,0.006162627,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,221,        if (relativeYear <= 0) {,1,1,0,1,3,0,0,0,0,2,24,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,200,"        workInstant = iChronology.dayOfWeek().set( workInstant, thisDow );",1,0,0,2,4,0,5,0,0,7,66,4,0.006162627,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,253,        return MILLIS_PER_YEAR / 2;,1,1,0,0,0,0,0,0,0,2,27,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,168,"        workInstant = iChronology.setYear( workInstant, year );",1,0,0,1,2,0,4,0,0,6,55,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,162,        long workInstant = instant; // Get a copy,2,0,0,0,0,0,0,0,0,2,41,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,133,        int thisWeekyear = get( instant );,1,0,0,1,2,0,2,0,0,3,34,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,181,        } else if ( workWoyYear > year ) {,2,1,0,1,4,0,0,0,0,3,34,5,0.006162627,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,96,        return iField.get(instant);,0,0,0,1,2,0,3,0,0,3,27,5,0.006162627,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,219,        int relativeYear = year - 1968;,2,1,0,0,0,0,0,0,0,3,31,5,0.006162627,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,211,        return (year & 3) == 0;,1,2,0,1,2,0,0,0,0,3,23,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,144,        int weeksInFromYear = iChronology.getWeeksInYear( thisWeekyear );,1,0,0,1,2,0,3,0,0,4,65,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,145,        int weeksInToYear = iChronology.getWeeksInYear( year );,1,0,0,1,2,0,3,0,0,4,55,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,155,        if ( setToWeek > maxOutWeeks ) {,2,1,0,1,3,0,0,0,0,3,32,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,154,        int setToWeek = iChronology.getWeekOfWeekyear(instant);,1,0,0,1,2,0,3,0,0,4,55,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,204,        return workInstant;,1,0,0,0,0,0,0,0,0,1,19,4,0.006162627,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,237,        return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;,3,3,0,1,2,0,0,0,0,6,64,4,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,146,        int maxOutWeeks = (weeksInToYear < weeksInFromYear) ?,3,1,0,1,2,0,0,0,0,4,53,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,140,        int thisDow = iChronology.getDayOfWeek(instant);,1,0,0,1,2,0,3,0,0,4,48,5,0.006162627,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,60,        return iChronology.getWeekyear(instant);,0,0,0,1,2,0,3,0,0,3,40,5,0.006156345,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,336,        long firstWeekMillis1 = getFirstWeekOfYearMillis(year);,1,0,0,1,2,0,2,0,0,3,55,5,0.006156345,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,337,        long firstWeekMillis2 = getFirstWeekOfYearMillis(year + 1);,2,1,0,1,2,0,1,0,0,4,59,5,0.006156345,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,338,        return (int) ((firstWeekMillis2 - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK);,4,2,0,3,6,0,0,0,0,6,89,6,0.006156345,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,503,"        int week = getWeekOfWeekyear(instant, year);",1,0,0,1,2,0,3,0,0,4,44,5,0.006150076,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,502,        int year = getYear(instant);,1,0,0,1,2,0,2,0,0,3,28,5,0.006150076,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,504,        if (week == 1) {,1,1,0,1,3,0,0,0,0,2,16,4,0.006150076,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,237,            instant -= ((long) DateTimeConstants.MILLIS_PER_WEEK) * (wow - 1);,4,2,0,3,6,0,0,0,0,7,66,6,0.006143819,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,185,        return iMinDaysInFirstWeek;,1,0,0,0,0,0,0,0,0,1,27,4,0.006143819,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,549,                return 7 + (int) ((daysSince19700101 + 4) % 7);,1,3,0,3,6,0,0,0,0,4,47,8,0.006131342,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,353,            return jan1millis + (8 - jan1dayOfWeek),2,2,0,1,2,0,0,0,0,4,39,6,0.006125123,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,548,            if (daysSince19700101 < -3) {,1,1,0,1,3,0,0,0,0,3,29,6,0.006118916,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,6,65,        return super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY),4,2,0,1,2,0,0,0,0,6,71,6,0.006118916,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,546,            daysSince19700101 = (instant - (DateTimeConstants.MILLIS_PER_DAY - 1)),4,2,0,2,4,0,0,0,0,7,70,6,0.006118916,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,239,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.006118916,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,236,        if (wow > 1) {,1,1,0,1,3,0,0,0,0,2,14,4,0.006118916,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,234,        instant = iChronology.weekOfWeekyear().roundFloor(instant);,1,0,0,2,4,0,4,0,0,6,59,4,0.006118916,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,235,        int wow = iChronology.getWeekOfWeekyear(instant);,1,0,0,1,2,0,3,0,0,4,49,5,0.006118916,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,163,        return getMaximumValue(instant);,0,0,0,1,2,0,2,0,0,2,32,5,0.006118916,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,792,        return getMaximumValue();,0,0,0,1,2,0,1,0,0,1,25,5,0.006112721,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,6,103,        return DateTimeConstants.MONDAY;,2,0,0,0,0,0,0,0,0,2,32,5,0.006106538,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,6,112,        return DateTimeConstants.SUNDAY;,2,0,0,0,0,0,0,0,0,2,32,5,0.006106538,0
defect4j,time,org/joda/time/DateTimeUtils,6,302,        return zone;,1,0,0,0,0,0,0,0,0,1,12,4,0.006100368,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,517,"        return getWeekOfWeekyear(instant, getYear(instant));",0,0,0,2,4,0,4,0,0,4,52,5,0.006100368,0
defect4j,time,org/joda/time/DateTimeFieldType,16,480,            chronology = DateTimeUtils.getChronology(chronology);,1,0,0,1,2,0,3,0,0,5,53,5,0.006099904,0
defect4j,time,org/joda/time/DateTimeFieldType,16,482,            switch (iOrdinal) {,1,0,0,1,3,0,0,0,0,1,19,5,0.006099904,0
defect4j,time,org/joda/time/DateTimeUtils,6,299,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.00609421,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,348,        long jan1millis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,38,5,0.006088065,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,349,        int jan1dayOfWeek = getDayOfWeek(jan1millis);,1,0,0,1,2,0,2,0,0,3,45,5,0.006088065,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,530,        if (instant >= firstWeekMillis2) {,2,1,0,1,3,0,0,0,0,3,34,4,0.006088065,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,533,        return (int) ((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) + 1;,4,3,0,3,6,0,0,0,0,7,84,4,0.006088065,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,529,        long firstWeekMillis2 = getFirstWeekOfYearMillis(year + 1);,2,1,0,1,2,0,1,0,0,4,59,5,0.006088065,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,526,        if (instant < firstWeekMillis1) {,2,1,0,1,3,0,0,0,0,3,33,4,0.006088065,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,525,        long firstWeekMillis1 = getFirstWeekOfYearMillis(year);,1,0,0,1,2,0,2,0,0,3,55,5,0.006088065,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,351,        if (jan1dayOfWeek > (8 - iMinDaysInFirstWeek)) {,2,2,0,2,5,0,0,0,0,4,48,4,0.006088065,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,50,public final class JulianChronology extends BasicGJChronology {,1,0,0,0,1,2,0,1,0,4,63,1,0.006081931,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,65,    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(,1,0,0,0,1,3,0,2,0,6,70,2,0.006077982,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,117,        if (unitType == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.006077982,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,102,"        this(UnitType.ABSOLUTE, top, left, bottom, right);   ",6,0,0,1,2,0,0,0,0,6,50,4,0.006077982,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,124,        this.right = right;,2,0,0,0,0,0,0,0,0,3,19,4,0.006077982,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,122,        this.bottom = bottom;,2,0,0,0,0,0,0,0,0,3,21,4,0.006077982,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,123,        this.left = left;,2,0,0,0,0,0,0,0,0,3,17,4,0.006077982,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,120,        this.unitType = unitType;,2,0,0,0,0,0,0,0,0,3,25,4,0.006077982,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,121,        this.top = top;,2,0,0,0,0,0,0,0,0,3,15,4,0.006077982,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,19,116,"                           double bottom, double right) {",2,0,0,0,2,0,0,0,0,2,30,3,0.006077982,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,96,            return instant - instant % iUnitMillis - iUnitMillis;,4,3,0,0,0,0,0,0,0,7,53,6,0.006063603,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,95,            instant += 1;,1,0,0,0,0,0,0,0,0,2,13,6,0.006063603,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,123,        return iZone.hashCode();,0,0,0,1,2,0,2,0,0,2,24,5,0.006051868,0
defect4j,time,org/joda/time/base/BaseDateTime,16,304,        return iChronology;,1,0,0,0,0,0,0,0,0,1,19,4,0.006049752,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,102,            return chrono;,1,0,0,0,0,0,0,0,0,1,14,6,0.006042642,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,82,            return iRange - 1 + (int) (((instant + 1) / getUnitMillis()) % iRange);,3,5,0,5,10,0,1,0,0,9,71,6,0.006033296,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,153,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.006021257,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,157,        FieldUtils.verifyValueBounds,0,0,0,0,0,0,2,0,0,2,28,5,0.006021257,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,159,"        return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;",1,1,0,1,2,0,4,0,0,6,74,4,0.006021257,0
defect4j,time,org/joda/time/base/BaseDateTime,3,284,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.006008955,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,563,            return (DateTimeConstants.MILLIS_PER_DAY - 1),2,1,0,1,2,0,0,0,0,3,45,8,0.005991363,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,96,"        return super.set(millis, value);",3,0,0,1,2,0,0,0,0,3,32,5,0.005991363,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,170,"        return new Size2D(container.calculateTotalWidth(contentSize.getWidth()),",0,0,0,2,5,0,4,1,0,5,72,5,0.005960829,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,365,        if (bounds == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.005960829,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,368,        this.bounds = bounds;,2,0,0,0,0,0,0,0,0,3,21,4,0.005960829,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,182,"        return this.arrangement.arrange(this, g2, constraint);",1,0,0,1,2,0,3,0,0,4,54,5,0.005960829,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,133,        Size2D contentSize = null;,1,0,0,0,0,0,0,1,0,2,26,4,0.005960829,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,131,        RectangleConstraint contentConstraint,1,0,0,0,0,0,0,1,0,2,37,4,0.005960829,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,136,        if (w == LengthConstraintType.NONE) {,3,1,0,1,3,0,0,0,0,4,37,4,0.005960829,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,134,        LengthConstraintType w = contentConstraint.getWidthConstraintType();,1,0,0,1,2,0,2,1,0,4,68,4,0.005960829,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,135,        LengthConstraintType h = contentConstraint.getHeightConstraintType();,1,0,0,1,2,0,2,1,0,4,69,4,0.005960829,0
defect4j,time,org/joda/time/base/BaseDateTime,3,270,        return DateTimeUtils.getChronology(chronology);,0,0,0,1,2,0,3,0,0,3,47,5,0.005960512,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,129,            return iRangeDurationField;,1,0,0,0,0,0,0,0,0,1,27,6,0.005912699,0
defect4j,time,org/joda/time/Instant,6,119,        iMillis = instant;,2,0,0,0,0,0,0,0,0,3,18,4,0.005903408,0
defect4j,time,org/joda/time/Instant,6,256,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.00583485,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,3,57,        return iChronology.years();,0,0,0,1,2,0,2,0,0,2,27,5,0.005813129,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,3,59,        return iChronology.weekyears();,0,0,0,1,2,0,2,0,0,2,31,5,0.005813129,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,286,            iTimeField = useTimeArithmetic(field);,1,0,0,1,2,0,2,0,0,4,38,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,287,            iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,282,            if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,281,            super(field.getType());,0,0,0,2,4,0,2,0,0,2,23,6,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,58,        base = base.withUTC();,1,0,0,1,2,0,2,0,0,4,22,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,408,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,405,            if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,295,            return iField.getUnitMillis();,0,0,0,1,2,0,2,0,0,2,30,6,0.005801593,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,109,        return getWrappedField().getUnitMillis() * iScalar;,1,1,0,2,4,0,2,0,0,4,51,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,285,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,198,            return field;,1,0,0,0,0,0,0,0,0,1,13,6,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,193,"        fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,190,"        fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted);",4,0,0,1,2,0,2,0,0,7,69,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,191,"        fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,197,        if (field == null || !field.isSupported()) {,1,2,0,2,5,0,2,0,0,6,44,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,215,        ZonedDateTimeField zonedField =,1,0,0,0,0,0,0,1,0,2,31,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,409,            iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,404,            super(field.getType());,0,0,0,2,4,0,2,0,0,2,23,6,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,189,"        fields.hourOfDay = convertField(fields.hourOfDay, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,188,"        fields.minuteOfDay = convertField(fields.minuteOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,185,"        fields.secondOfMinute = convertField(fields.secondOfMinute, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,184,"        fields.millisOfDay = convertField(fields.millisOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,187,"        fields.minuteOfHour = convertField(fields.minuteOfHour, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,186,"        fields.secondOfDay = convertField(fields.secondOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,412,            iRangeDurationField = rangeDurationField;,2,0,0,0,0,0,0,0,0,3,41,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,410,            iDurationField = durationField;,2,0,0,0,0,0,0,0,0,3,31,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,81,"        super(base, zone);",2,0,0,1,2,0,0,0,0,2,18,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,85,        return (DateTimeZone)getParam();,0,0,0,2,4,0,1,1,0,2,32,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,170,"        fields.year = convertField(fields.year, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,171,"        fields.yearOfEra = convertField(fields.yearOfEra, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,172,"        fields.yearOfCentury = convertField(fields.yearOfCentury, converted);",4,0,0,1,2,0,2,0,0,7,69,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,173,"        fields.centuryOfEra = convertField(fields.centuryOfEra, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,174,"        fields.era = convertField(fields.era, converted);",4,0,0,1,2,0,2,0,0,7,49,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,175,"        fields.dayOfWeek = convertField(fields.dayOfWeek, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,176,"        fields.dayOfMonth = convertField(fields.dayOfMonth, converted);",4,0,0,1,2,0,2,0,0,7,63,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,178,"        fields.monthOfYear = convertField(fields.monthOfYear, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,179,"        fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,180,"        fields.weekyear = convertField(fields.weekyear, converted);",4,0,0,1,2,0,2,0,0,7,59,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,220,"        converted.put(field, zonedField);",0,0,0,1,2,0,4,0,0,4,33,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,221,        return zonedField;,1,0,0,0,0,0,0,0,0,1,18,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,163,"        fields.hours = convertField(fields.hours, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,162,"        fields.halfdays = convertField(fields.halfdays, converted);",4,0,0,1,2,0,2,0,0,7,59,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,160,"        fields.days = convertField(fields.days, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,166,"        fields.millis = convertField(fields.millis, converted);",4,0,0,1,2,0,2,0,0,7,55,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,165,"        fields.seconds = convertField(fields.seconds, converted);",4,0,0,1,2,0,2,0,0,7,57,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,164,"        fields.minutes = convertField(fields.minutes, converted);",4,0,0,1,2,0,2,0,0,7,57,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,411,            iTimeField = useTimeArithmetic(durationField);,1,0,0,1,2,0,2,0,0,4,46,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,181,"        fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);",4,0,0,1,2,0,2,0,0,7,77,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,183,"        fields.millisOfSecond = convertField(fields.millisOfSecond, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,156,"        fields.years = convertField(fields.years, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,157,"        fields.months = convertField(fields.months, converted);",4,0,0,1,2,0,2,0,0,7,55,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,155,"        fields.centuries = convertField(fields.centuries, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,150,"        HashMap<Object, Object> converted = new HashMap<Object, Object>();",1,0,0,1,2,0,0,6,0,7,66,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,158,"        fields.weekyears = convertField(fields.weekyears, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,159,"        fields.weeks = convertField(fields.weeks, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,209,        if (field == null || !field.isSupported()) {,1,2,0,2,5,0,2,0,0,6,44,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,204,"        converted.put(field, zonedField);",0,0,0,1,2,0,4,0,0,4,33,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,203,"        ZonedDurationField zonedField = new ZonedDurationField(field, getZone());",2,0,0,2,4,0,1,2,0,5,73,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,200,        if (converted.containsKey(field)) {,0,0,0,2,5,0,3,0,0,3,35,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,201,            return (DurationField)converted.get(field);,0,0,0,2,4,0,3,1,0,4,43,7,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,55,        if (base == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,59,        if (base == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,413,            iLeapDurationField = leapDurationField;,2,0,0,0,0,0,0,0,0,3,39,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,71,        return field != null && field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12;,3,4,0,1,2,0,2,0,0,9,87,4,0.005801593,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,3,128,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,212,        if (converted.containsKey(field)) {,0,0,0,2,5,0,3,0,0,3,35,5,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,62,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,65,"        return new ZonedChronology(base, zone);",2,0,0,1,2,0,0,1,0,3,39,5,0.005801593,0
defect4j,time,org/joda/time/DateTimeZone,3,1273,        return 57 + getID().hashCode();,0,1,0,2,4,0,2,0,0,3,31,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,154,"        fields.eras = convertField(fields.eras, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,205,        return zonedField;,1,0,0,0,0,0,0,0,0,1,18,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,177,"        fields.dayOfYear = convertField(fields.dayOfYear, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005801593,0
defect4j,time,org/joda/time/chrono/ZonedChronology,3,192,"        fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted);",4,0,0,1,2,0,2,0,0,7,79,4,0.005801593,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,3,221,        return iChronology.weeks();,0,0,0,1,2,0,2,0,0,2,27,5,0.005795839,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,3,102,        return getWrappedField().getLeapDurationField();,0,0,0,2,4,0,2,0,0,2,48,5,0.005795839,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,112,        return iChronology.days();,0,0,0,1,2,0,2,0,0,2,26,5,0.005795839,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,128,        if (iRangeDurationField != null) {,1,1,0,1,3,0,0,0,0,2,34,4,0.005795839,0
defect4j,time,org/joda/time/field/MillisDurationField,3,155,        return (int) getUnitMillis();,0,0,0,2,4,0,1,0,0,1,29,6,0.005795839,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,315,        return iParam;,1,0,0,0,0,0,0,0,0,1,14,4,0.005795839,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,161,            return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,5,0.005795839,0
defect4j,time,org/joda/time/field/DecoratedDurationField,3,69,        return iField;,1,0,0,0,0,0,0,0,0,1,14,4,0.005795839,0
defect4j,time,org/joda/time/field/MillisDurationField,3,49,        return DurationFieldType.millis();,0,0,0,1,2,0,2,0,0,2,34,5,0.005795839,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,180,        return iRangeField;,1,0,0,0,0,0,0,0,0,1,19,4,0.005795839,0
defect4j,time,org/joda/time/field/BaseDurationField,3,55,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,0.005795839,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,173,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,0.005795839,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,335,        return iChronology.days();,0,0,0,1,2,0,2,0,0,2,26,5,0.005795839,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,150,        hash += getWrappedField().hashCode();,1,0,0,2,4,0,2,0,0,4,37,4,0.005795839,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,147,        long scalar = iScalar;,2,0,0,0,0,0,0,0,0,2,22,5,0.005795839,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,149,        hash += getType().hashCode();,1,0,0,2,4,0,2,0,0,4,29,4,0.005795839,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,148,        int hash = (int) (scalar ^ (scalar >>> 32));,3,2,0,3,6,0,0,0,0,5,44,5,0.005795839,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,151,        return hash;,1,0,0,0,0,0,0,0,0,1,12,4,0.005795839,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,145,        return hash;,1,0,0,0,0,0,0,0,0,1,12,4,0.005795839,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,144,        hash += getType().hashCode();,1,0,0,2,4,0,2,0,0,4,29,4,0.005795839,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,143,        int hash = (int) (millis ^ (millis >>> 32));,3,2,0,3,6,0,0,0,0,5,44,5,0.005795839,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,142,        long millis = iUnitMillis;,2,0,0,0,0,0,0,0,0,2,26,5,0.005795839,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,3,95,        return iChronology.weeks();,0,0,0,1,2,0,2,0,0,2,27,5,0.005795839,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,123,        return iRangeField;,1,0,0,0,0,0,0,0,0,1,19,4,0.005790094,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,3,52,        return iChronology.months();,0,0,0,1,2,0,2,0,0,2,28,5,0.005790094,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,316,        return iChronology.years();,0,0,0,1,2,0,2,0,0,2,27,5,0.005790094,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,102,            RectangleEdge edge = (RectangleEdge) key;,2,0,0,1,2,0,0,2,0,4,41,6,0.005778737,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,109,            else if (edge == RectangleEdge.LEFT) {,3,1,0,1,3,0,0,0,0,4,38,8,0.005778737,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,103,            if (edge == RectangleEdge.TOP) {,3,1,0,1,3,0,0,0,0,4,32,6,0.005778737,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,106,            else if (edge == RectangleEdge.BOTTOM) {,3,1,0,1,3,0,0,0,0,4,40,7,0.005778737,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,110,                this.leftBlock = block;,2,0,0,0,0,0,0,0,0,3,23,10,0.005778737,0
defect4j,time,org/joda/time/chrono/BasicSingleEraDateTimeField,16,106,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,0.005775406,0
defect4j,time,org/joda/time/chrono/BasicSingleEraDateTimeField,16,51,        super(DateTimeFieldType.era());,0,0,0,2,4,0,2,0,0,2,31,5,0.005775406,0
defect4j,time,org/joda/time/chrono/BasicSingleEraDateTimeField,16,52,        iEraText = text;,2,0,0,0,0,0,0,0,0,3,16,4,0.005775406,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,142,        return iUnitField;,1,0,0,0,0,0,0,0,0,1,18,4,0.005772913,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,274,        LimitDateTimeField limitField =,1,0,0,0,0,0,0,1,0,2,31,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,279,"        converted.put(field, limitField);",0,0,0,1,2,0,4,0,0,4,33,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,81,"        return new LimitChronology(base, (DateTime)lowerLimit, (DateTime)upperLimit);",3,0,0,3,6,0,0,3,0,6,77,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,271,        if (converted.containsKey(field)) {,0,0,0,2,5,0,3,0,0,3,35,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,264,        return limitField;,1,0,0,0,0,0,0,0,0,1,18,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,263,"        converted.put(field, limitField);",0,0,0,1,2,0,4,0,0,4,33,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,262,        LimitDurationField limitField = new LimitDurationField(field);,2,0,0,1,2,0,0,2,0,4,62,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,260,            return (DurationField)converted.get(field);,0,0,0,2,4,0,3,1,0,4,43,7,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,268,        if (field == null || !field.isSupported()) {,1,2,0,2,5,0,2,0,0,6,44,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,453,                           DurationField leapDurationField) {,1,0,0,0,2,0,0,1,0,2,34,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,259,        if (converted.containsKey(field)) {,0,0,0,2,5,0,3,0,0,3,35,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,252,"        fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,250,"        fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,251,"        fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted);",4,0,0,1,2,0,2,0,0,7,79,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,257,            return field;,1,0,0,0,0,0,0,0,0,1,13,6,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,215,"        fields.years = convertField(fields.years, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,249,"        fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted);",4,0,0,1,2,0,2,0,0,7,69,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,248,"        fields.hourOfDay = convertField(fields.hourOfDay, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,245,"        fields.secondOfDay = convertField(fields.secondOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,244,"        fields.secondOfMinute = convertField(fields.secondOfMinute, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,247,"        fields.minuteOfDay = convertField(fields.minuteOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,240,"        fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);",4,0,0,1,2,0,2,0,0,7,77,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,243,"        fields.millisOfDay = convertField(fields.millisOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,242,"        fields.millisOfSecond = convertField(fields.millisOfSecond, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,246,"        fields.minuteOfHour = convertField(fields.minuteOfHour, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,232,"        fields.centuryOfEra = convertField(fields.centuryOfEra, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,236,"        fields.dayOfYear = convertField(fields.dayOfYear, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,237,"        fields.monthOfYear = convertField(fields.monthOfYear, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,280,        return limitField;,1,0,0,0,0,0,0,0,0,1,18,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,72,        upperLimit = upperLimit == null ? null : upperLimit.toDateTime();,2,1,0,1,2,0,2,0,0,6,65,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,71,        lowerLimit = lowerLimit == null ? null : lowerLimit.toDateTime();,2,1,0,1,2,0,2,0,0,6,65,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,74,        if (lowerLimit != null && upperLimit != null) {,2,3,0,1,3,0,0,0,0,5,47,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,67,        if (base == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,256,        if (field == null || !field.isSupported()) {,1,2,0,2,5,0,2,0,0,6,44,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,392,"            super(field, field.getType());",1,0,0,2,4,0,2,0,0,3,30,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,391,        LimitDurationField(DurationField field) {,2,0,0,1,3,0,0,1,0,3,41,3,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,238,"        fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,239,"        fields.weekyear = convertField(fields.weekyear, converted);",4,0,0,1,2,0,2,0,0,7,59,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,231,"        fields.yearOfCentury = convertField(fields.yearOfCentury, converted);",4,0,0,1,2,0,2,0,0,7,69,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,234,"        fields.dayOfWeek = convertField(fields.dayOfWeek, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,225,"        fields.millis = convertField(fields.millis, converted);",4,0,0,1,2,0,2,0,0,7,55,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,224,"        fields.seconds = convertField(fields.seconds, converted);",4,0,0,1,2,0,2,0,0,7,57,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,229,"        fields.year = convertField(fields.year, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,223,"        fields.minutes = convertField(fields.minutes, converted);",4,0,0,1,2,0,2,0,0,7,57,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,222,"        fields.hours = convertField(fields.hours, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,221,"        fields.halfdays = convertField(fields.halfdays, converted);",4,0,0,1,2,0,2,0,0,7,59,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,102,        iUpperLimit = upperLimit;,2,0,0,0,0,0,0,0,0,3,25,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,101,        iLowerLimit = lowerLimit;,2,0,0,0,0,0,0,0,0,3,25,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,454,"            super(field, field.getType());",1,0,0,2,4,0,2,0,0,3,30,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,455,            iDurationField = durationField;,2,0,0,0,0,0,0,0,0,3,31,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,456,            iRangeDurationField = rangeDurationField;,2,0,0,0,0,0,0,0,0,3,41,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,457,            iLeapDurationField = leapDurationField;,2,0,0,0,0,0,0,0,0,3,39,5,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,218,"        fields.weeks = convertField(fields.weeks, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,219,"        fields.days = convertField(fields.days, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,216,"        fields.months = convertField(fields.months, converted);",4,0,0,1,2,0,2,0,0,7,55,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,217,"        fields.weekyears = convertField(fields.weekyears, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,214,"        fields.centuries = convertField(fields.centuries, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,213,"        fields.eras = convertField(fields.eras, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,230,"        fields.yearOfEra = convertField(fields.yearOfEra, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,233,"        fields.era = convertField(fields.era, converted);",4,0,0,1,2,0,2,0,0,7,49,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,235,"        fields.dayOfMonth = convertField(fields.dayOfMonth, converted);",4,0,0,1,2,0,2,0,0,7,63,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,209,"        HashMap<Object, Object> converted = new HashMap<Object, Object>();",1,0,0,1,2,0,0,6,0,7,66,4,0.005768802,0
defect4j,time,org/joda/time/chrono/LimitChronology,16,99,"        super(base, null);",1,0,0,1,2,0,0,0,0,2,18,3,0.005768802,0
defect4j,time,org/joda/time/DateTimeUtils,3,287,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.005750134,0
defect4j,chart,org/jfree/chart/util/UnitType,19,70,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.005743243,0
defect4j,chart,org/jfree/chart/util/UnitType,19,59,"    public static final UnitType RELATIVE = new UnitType(""UnitType.RELATIVE"");",1,0,0,1,2,3,0,2,0,7,74,2,0.005743243,0
defect4j,chart,org/jfree/chart/util/UnitType,19,56,"    public static final UnitType ABSOLUTE = new UnitType(""UnitType.ABSOLUTE"");",1,0,0,1,2,3,0,2,0,7,74,2,0.005743243,0
defect4j,chart,org/jfree/chart/util/UnitType,19,69,    private UnitType(String name) {,2,0,0,1,3,1,0,1,0,4,31,2,0.005743243,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,169,        if (getBase().getZone() == DateTimeZone.UTC) {,2,1,0,3,7,0,2,0,0,5,46,4,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,173,            fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,6,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,171,            fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,6,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,177,            fields.weekyearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,0,0,1,0,4,54,6,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,175,            fields.yearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,0,0,1,0,4,50,6,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,3,98,        return getWrappedField().getMaximumValue();,0,0,0,2,4,0,2,0,0,2,43,5,0.005738798,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,81,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,63,"    private static final Map<DateTimeZone, ISOChronology> cCache = new HashMap<DateTimeZone, ISOChronology>();",1,0,0,1,2,3,0,6,0,10,106,2,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,65,        cFastCache = new ISOChronology[FAST_CACHE_SIZE];,1,0,1,1,2,0,0,1,0,4,48,4,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,66,        INSTANCE_UTC = new ISOChronology(GregorianChronology.getInstanceUTC());,1,0,0,2,4,0,2,1,0,5,71,4,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,67,"        cCache.put(DateTimeZone.UTC, INSTANCE_UTC);",2,0,0,1,2,0,3,0,0,5,43,5,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,3,42,    static final DateTimeField INSTANCE = new ISOYearOfEraDateTimeField();,1,0,0,1,2,2,0,2,0,5,70,2,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,3,48,"        super(GregorianChronology.getInstanceUTC().year(), DateTimeFieldType.yearOfEra());",0,0,0,4,8,0,5,0,0,5,82,5,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,3,53,        return GregorianChronology.getInstanceUTC().eras();,0,0,0,2,4,0,3,0,0,3,51,5,0.005738798,0
defect4j,time,org/joda/time/chrono/ISOChronology,3,122,"        super(base, null);",1,0,0,1,2,0,0,0,0,2,18,3,0.005738798,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,114,"        return getInstance(zone, 4);",0,0,0,1,2,0,2,0,0,2,28,5,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,162,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,125,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,149,                chronos[minDaysInFirstWeek - 1] = chrono;,2,1,1,1,2,0,0,0,0,5,41,8,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,268,"            fields.year = new SkipDateTimeField(this, fields.year);",4,0,0,1,2,0,0,1,0,6,55,6,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,269,"            fields.weekyear = new SkipDateTimeField(this, fields.weekyear);",4,0,0,1,2,0,0,1,0,6,63,6,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,265,        if (getBase() == null) {,0,1,0,2,5,0,1,0,0,3,24,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,129,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,257,        return MILLIS_PER_MONTH;,1,0,0,0,0,0,0,0,0,1,24,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,136,                chrono = chronos[minDaysInFirstWeek - 1];,2,1,1,1,2,0,0,0,0,5,41,8,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,130,            JulianChronology[] chronos = cCache.get(zone);,1,0,0,2,4,0,3,1,0,5,46,6,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,132,                chronos = new JulianChronology[7];,1,0,0,1,2,0,0,1,0,3,34,8,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,133,"                cCache.put(zone, chronos);",0,0,0,1,2,0,4,0,0,4,26,9,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,141,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,143,"                    chrono = new JulianChronology(null, null, minDaysInFirstWeek);",2,0,0,1,2,0,0,1,0,5,62,10,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,142,                if (zone == DateTimeZone.UTC) {,3,1,0,1,3,0,0,0,0,4,31,8,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,241,        return MIN_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,266,            super.assemble(fields);,2,0,0,1,2,0,0,0,0,2,23,7,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,152,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,74,        INSTANCE_UTC = getInstance(DateTimeZone.UTC);,3,0,0,1,2,0,1,0,0,5,45,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,249,        return MILLIS_PER_YEAR;,1,0,0,0,0,0,0,0,0,1,23,4,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,131,            if (chronos == null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,71,"    private static final Map<DateTimeZone, JulianChronology[]> cCache = new HashMap<DateTimeZone, JulianChronology[]>();",1,0,0,3,6,3,0,6,0,10,116,2,0.005734897,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,245,        return MAX_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.005734897,0
defect4j,time,org/joda/time/DateTimeUtils,3,284,        if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.005727498,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,146,        return DateTimeZone.UTC;,2,0,0,0,0,0,0,0,0,2,24,5,0.005721861,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,143,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.005716234,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,45,public final class GregorianChronology extends BasicGJChronology {,1,0,0,0,1,2,0,1,0,4,66,1,0.005682654,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,148,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,116,            GregorianChronology[] chronos = cCache.get(zone);,1,0,0,2,4,0,3,1,0,5,49,6,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,68,"    private static final Map<DateTimeZone, GregorianChronology[]> cCache = new HashMap<DateTimeZone, GregorianChronology[]>();",1,0,0,3,6,3,0,6,0,10,122,2,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,192,            super.assemble(fields);,2,0,0,1,2,0,0,0,0,2,23,7,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,71,        INSTANCE_UTC = getInstance(DateTimeZone.UTC);,3,0,0,1,2,0,1,0,0,5,45,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,225,        return MAX_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,229,        return MILLIS_PER_YEAR;,1,0,0,0,0,0,0,0,0,1,23,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,237,        return MILLIS_PER_MONTH;,1,0,0,0,0,0,0,0,0,1,24,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,191,        if (getBase() == null) {,0,1,0,2,5,0,1,0,0,3,24,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,118,                chronos = new GregorianChronology[7];,1,0,0,1,2,0,0,1,0,3,37,8,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,115,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,117,            if (chronos == null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,111,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,100,"        return getInstance(zone, 4);",0,0,0,1,2,0,2,0,0,2,28,5,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,138,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,135,                chronos[minDaysInFirstWeek - 1] = chrono;,2,1,1,1,2,0,0,0,0,5,41,8,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,127,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,122,                chrono = chronos[minDaysInFirstWeek - 1];,2,1,1,1,2,0,0,0,0,5,41,8,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,129,"                    chrono = new GregorianChronology(null, null, minDaysInFirstWeek);",2,0,0,1,2,0,0,1,0,5,65,10,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,128,                if (zone == DateTimeZone.UTC) {,3,1,0,1,3,0,0,0,0,4,31,8,0.005654911,0
defect4j,time,org/joda/time/chrono/GregorianChronology,3,119,"                cCache.put(zone, chronos);",0,0,0,1,2,0,4,0,0,4,26,9,0.005654911,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,75,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,62,            MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = minSum;,2,1,1,1,2,0,0,0,0,5,48,6,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,61,            minSum += millis;,2,0,0,0,0,0,0,0,0,3,17,6,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,66,            maxSum += millis;,2,0,0,0,0,0,0,0,0,3,17,6,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,67,            MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = maxSum;,2,1,1,1,2,0,0,0,0,5,48,6,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,64,            millis = MAX_DAYS_PER_MONTH_ARRAY[i],1,0,1,1,2,0,0,0,0,4,36,6,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,57,        long maxSum = 0;,1,0,0,0,0,0,0,0,0,1,16,5,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,56,        long minSum = 0;,1,0,0,0,0,0,0,0,0,1,16,5,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,54,        MAX_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];,1,0,0,1,2,0,0,0,0,2,47,4,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,53,        MIN_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];,1,0,0,1,2,0,0,0,0,2,47,4,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,59,            long millis = MIN_DAYS_PER_MONTH_ARRAY[i],1,0,1,1,2,0,0,0,0,3,41,7,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,58,        for (int i = 0; i < 11; i++) {,3,1,0,1,3,0,0,0,0,5,30,4,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,42,    private static final int[] MIN_DAYS_PER_MONTH_ARRAY = {,1,0,0,1,3,3,0,0,0,4,55,2,0.005649389,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,3,45,    private static final int[] MAX_DAYS_PER_MONTH_ARRAY = {,1,0,0,1,3,3,0,0,0,4,55,2,0.005649389,0
defect4j,time,org/joda/time/field/MillisDurationField,3,71,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,58,"        this(field, field.getRangeDurationField(), type, divisor);",3,0,0,2,4,0,2,0,0,5,58,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,298,        fields.weekyearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,51,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,291,"        fields.dayOfYear = new BasicDayOfYearDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,70,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,290,"        fields.dayOfMonth = new BasicDayOfMonthDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,72,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,293,        fields.weekyear = new BasicWeekyearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,55,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,292,        fields.monthOfYear = new GJMonthOfYearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,58,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,294,"        fields.weekOfWeekyear = new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);",4,0,0,1,2,0,0,1,0,6,81,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,296,        field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,90,        cMillisOfSecondField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,47,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,93,        cMillisOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,96,        cSecondOfMinuteField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,47,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,99,        cSecondOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,66,        if (iRange < 2) {,1,1,0,1,3,0,0,0,0,2,17,4,0.005643875,0
defect4j,time,org/joda/time/field/BaseDateTimeField,3,54,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,3,42,"        super(DateTimeFieldType.dayOfMonth(), days);",1,0,0,2,4,0,2,0,0,3,44,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,3,43,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,51,        iScalar = scalar;,2,0,0,0,0,0,0,0,0,3,17,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,352,            iClockhourOfHalfday = (f = fields.clockhourOfHalfday) != null ? f : super.clockhourOfHalfday();,6,1,0,2,4,0,0,0,0,9,95,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,353,            iHalfdayOfDay       = (f = fields.halfdayOfDay)       != null ? f : super.halfdayOfDay();,6,1,0,2,4,0,0,0,0,9,89,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,350,            iClockhourOfDay     = (f = fields.clockhourOfDay)     != null ? f : super.clockhourOfDay();,6,1,0,2,4,0,0,0,0,9,91,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,351,            iHourOfHalfday      = (f = fields.hourOfHalfday)      != null ? f : super.hourOfHalfday();,6,1,0,2,4,0,0,0,0,9,90,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,356,            iDayOfYear          = (f = fields.dayOfYear)          != null ? f : super.dayOfYear();,6,1,0,2,4,0,0,0,0,9,86,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,357,            iWeekOfWeekyear     = (f = fields.weekOfWeekyear)     != null ? f : super.weekOfWeekyear();,6,1,0,2,4,0,0,0,0,9,91,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,354,            iDayOfWeek          = (f = fields.dayOfWeek)          != null ? f : super.dayOfWeek();,6,1,0,2,4,0,0,0,0,9,86,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,355,            iDayOfMonth         = (f = fields.dayOfMonth)         != null ? f : super.dayOfMonth();,6,1,0,2,4,0,0,0,0,9,87,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,358,            iWeekyear           = (f = fields.weekyear)           != null ? f : super.weekyear();,6,1,0,2,4,0,0,0,0,9,85,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,359,            iWeekyearOfCentury  = (f = fields.weekyearOfCentury)  != null ? f : super.weekyearOfCentury();,6,1,0,2,4,0,0,0,0,9,94,5,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,354,        return CENTURY_OF_ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,236,        return HOUR_OF_HALFDAY_TYPE;,1,0,0,0,0,0,0,0,0,1,28,4,0.005643875,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,3,47,        if (field.getMinimumValue() != 0) {,0,1,0,2,5,0,2,0,0,3,35,4,0.005643875,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,3,46,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,759,"            super(DateTimeFieldType.halfdayOfDay(), cHalfdaysField, cDaysField);",2,0,0,2,4,0,2,0,0,4,68,5,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,3,45,"        super(DateTimeFieldType.weekyear(), chronology.getAverageMillisPerYear());",0,0,0,3,6,0,4,0,0,4,74,5,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,3,46,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,300,        return WEEKYEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,21,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,52,"        super(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());",0,0,0,3,6,0,4,0,0,4,78,5,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,55,        iLeapMonth = leapMonth;,2,0,0,0,0,0,0,0,0,3,23,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,54,        iMax = iChronology.getMaxMonth();,1,0,0,1,2,0,2,0,0,4,33,4,0.005643875,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,47,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,548,                if (isSupported(f = chrono.centuryOfEra())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.005643875,0
defect4j,time,org/joda/time/field/ScaledDurationField,3,48,        if (scalar == 0 || scalar == 1) {,2,3,0,1,3,0,0,0,0,5,33,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,164,        return iMillisOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,345,        return YEAR_OF_CENTURY_TYPE;,1,0,0,0,0,0,0,0,0,1,28,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,348,            iMinuteOfDay        = (f = fields.minuteOfDay)        != null ? f : super.minuteOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,345,            iSecondOfMinute     = (f = fields.secondOfMinute)     != null ? f : super.secondOfMinute();,6,1,0,2,4,0,0,0,0,9,91,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,344,            iMillisOfDay        = (f = fields.millisOfDay)        != null ? f : super.millisOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,347,            iMinuteOfHour       = (f = fields.minuteOfHour)       != null ? f : super.minuteOfHour();,6,1,0,2,4,0,0,0,0,9,89,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,346,            iSecondOfDay        = (f = fields.secondOfDay)        != null ? f : super.secondOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,343,            iMillisOfSecond     = (f = fields.millisOfSecond)     != null ? f : super.millisOfSecond();,6,1,0,2,4,0,0,0,0,9,91,5,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,209,        return MINUTE_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,80,            iDurationField = new ScaledDurationField(,1,0,0,0,1,0,0,1,0,3,41,6,0.005643875,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,3,48,        return iChronology.eras();,0,0,0,1,2,0,2,0,0,2,26,5,0.005643875,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,3,42,"        super(yearField, DateTimeFieldType.yearOfEra());",1,0,0,2,4,0,2,0,0,3,48,4,0.005643875,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,3,43,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,50,abstract class BasicChronology extends AssembledChronology {,1,0,0,0,1,1,0,1,0,3,60,1,0.005643875,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,3,104,        return getWrappedField().getMaximumValue();,0,0,0,2,4,0,2,0,0,2,43,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,338,            iEras      = (f = fields.eras)      != null ? f : super.eras();,6,1,0,2,4,0,0,0,0,9,63,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,330,            iHours     = (f = fields.hours)     != null ? f : super.hours();,6,1,0,2,4,0,0,0,0,9,64,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,331,            iHalfdays  = (f = fields.halfdays)  != null ? f : super.halfdays();,6,1,0,2,4,0,0,0,0,9,67,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,332,            iDays      = (f = fields.days)      != null ? f : super.days();,6,1,0,2,4,0,0,0,0,9,63,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,333,            iWeeks     = (f = fields.weeks)     != null ? f : super.weeks();,6,1,0,2,4,0,0,0,0,9,64,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,334,            iWeekyears = (f = fields.weekyears) != null ? f : super.weekyears();,6,1,0,2,4,0,0,0,0,9,68,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,335,            iMonths    = (f = fields.months)    != null ? f : super.months();,6,1,0,2,4,0,0,0,0,9,65,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,244,        return iWeekyears;,1,0,0,0,0,0,0,0,0,1,18,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,240,        return iWeekOfWeekyear;,1,0,0,0,0,0,0,0,0,1,23,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,248,        return iWeekyear;,1,0,0,0,0,0,0,0,0,1,17,4,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,175,        return iMin;,1,0,0,0,0,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,486,                    millisOfSecond = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,485,                if (isSupported(f = chrono.millisOfSecond())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,488,                if (isSupported(f = chrono.millisOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,489,                    millisOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,218,        return HOUR_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,3,55,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,3,56,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,3,59,        if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,469,                if (isSupported(f = chrono.months())) {,1,0,0,3,7,0,3,0,0,5,39,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,464,                    weeks = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,466,                if (isSupported(f = chrono.weekyears())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,467,                    weekyears = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,460,                if (isSupported(f = chrono.days())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,463,                if (isSupported(f = chrono.weeks())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.005643875,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,3,102,        return getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset;,2,4,0,2,4,0,2,0,0,8,68,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,336,            iYears     = (f = fields.years)     != null ? f : super.years();,6,1,0,2,4,0,0,0,0,9,64,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,337,            iCenturies = (f = fields.centuries) != null ? f : super.centuries();,6,1,0,2,4,0,0,0,0,9,68,5,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDurationField,3,56,        if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,4,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,3,91,        return iField.getRangeDurationField();,0,0,0,1,2,0,2,0,0,2,38,5,0.005643875,0
defect4j,time,org/joda/time/field/BaseDateTimeField,3,69,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,329,            iMinutes   = (f = fields.minutes)   != null ? f : super.minutes();,6,1,0,2,4,0,0,0,0,9,66,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,328,            iSeconds   = (f = fields.seconds)   != null ? f : super.seconds();,6,1,0,2,4,0,0,0,0,9,66,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,323,        assemble(fields);,0,0,0,1,2,0,2,0,0,2,17,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,321,            fields.copyFieldsFrom(iBase);,0,0,0,1,2,0,3,0,0,3,29,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,320,        if (iBase != null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,327,            iMillis    = (f = fields.millis)    != null ? f : super.millis();,6,1,0,2,4,0,0,0,0,9,65,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,256,        return iMonths;,1,0,0,0,0,0,0,0,0,1,15,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,252,        return iWeekyearOfCentury;,1,0,0,0,0,0,0,0,0,1,26,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,363,        return ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,16,4,0.005643875,0
defect4j,time,org/joda/time/chrono/GJMonthOfYearDateTimeField,3,38,"        super(chronology, 2);",1,0,0,1,2,0,0,0,0,1,21,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,491,                if (isSupported(f = chrono.secondOfMinute())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,492,                    secondOfMinute = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,495,                    secondOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,494,                if (isSupported(f = chrono.secondOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,497,                if (isSupported(f = chrono.minuteOfHour())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,498,                    minuteOfHour = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,173,        return MILLIS_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,478,                if (isSupported(f = chrono.eras())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,476,                    centuries = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,473,                    years = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,472,                if (isSupported(f = chrono.years())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,470,                    months = f;,2,0,0,0,0,0,0,0,0,3,11,8,0.005643875,0
defect4j,time,org/joda/time/field/MillisDurationField,3,38,    public static final DurationField INSTANCE = new MillisDurationField();,1,0,0,1,2,3,0,2,0,6,71,2,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,305,        fields.weekyears = fields.weekyear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,304,        fields.months = fields.monthOfYear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,303,        fields.years = fields.year.getDurationField();,4,0,0,1,2,0,1,0,0,6,46,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,79,        cMinutesField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,40,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,76,        cMillisField = MillisDurationField.INSTANCE;,3,0,0,0,0,0,0,0,0,4,44,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,77,        cSecondsField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,40,4,0.005643875,0
defect4j,time,org/joda/time/field/BaseDateTimeField,3,51,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005643875,0
defect4j,time,org/joda/time/field/BaseDateTimeField,3,58,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BaseChronology,3,660,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,319,        Fields fields = new Fields();,1,0,0,1,2,0,0,2,0,3,29,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,260,        return iMonthOfYear;,1,0,0,0,0,0,0,0,0,1,20,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,264,        return iYears;,1,0,0,0,0,0,0,0,0,1,14,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,268,        return iYear;,1,0,0,0,0,0,0,0,0,1,13,4,0.005643875,0
defect4j,time,org/joda/time/field/BaseDurationField,3,66,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,461,                    days = f;,2,0,0,0,0,0,0,0,0,3,9,8,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,164,        return MILLIS_OF_SECOND_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,448,                if (isSupported(f = chrono.seconds())) {,1,0,0,3,7,0,3,0,0,5,40,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,449,                    seconds = f;,2,0,0,0,0,0,0,0,0,3,12,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,446,                    millis = f;,2,0,0,0,0,0,0,0,0,3,11,8,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,3,71,        return iField;,1,0,0,0,0,0,0,0,0,1,14,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,445,                if (isSupported(f = chrono.millis())) {,1,0,0,3,7,0,3,0,0,5,39,7,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDurationField,3,52,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDurationField,3,53,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDurationField,3,59,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,503,                if (isSupported(f = chrono.hourOfDay())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,501,                    minuteOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,308,        return iBase;,1,0,0,0,0,0,0,0,0,1,13,4,0.005643875,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,57,        iUnitMillis = unitMillis;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,56,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,58,        iDurationField = new LinkedDurationField(type.getDurationType());,1,0,0,2,4,0,2,1,0,5,65,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,276,        return iYearOfCentury;,1,0,0,0,0,0,0,0,0,1,22,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,272,        return iYearOfEra;,1,0,0,0,0,0,0,0,0,1,18,4,0.005643875,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,3,48,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,3,47,        super(DateTimeFieldType.era());,0,0,0,2,4,0,2,0,0,2,31,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,455,                    hours = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,457,                if (isSupported(f = chrono.halfdays())) {,1,0,0,3,7,0,3,0,0,5,41,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,451,                if (isSupported(f = chrono.minutes())) {,1,0,0,3,7,0,3,0,0,5,40,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,452,                    minutes = f;,2,0,0,0,0,0,0,0,0,3,12,8,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,3,62,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,0.005643875,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,3,87,        return iField.getDurationField();,0,0,0,1,2,0,2,0,0,2,33,5,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,58,"        super(type, unit);",2,0,0,1,2,0,0,0,0,2,18,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,43,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,44,        iUnitMillis = unitMillis;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,192,        return iHours;,1,0,0,0,0,0,0,0,0,1,14,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,196,        return iHourOfDay;,1,0,0,0,0,0,0,0,0,1,18,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,208,        return iHourOfHalfday;,1,0,0,0,0,0,0,0,0,1,22,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,200,        return iClockhourOfDay;,1,0,0,0,0,0,0,0,0,1,23,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,204,        return iHalfdays;,1,0,0,0,0,0,0,0,0,1,17,4,0.005643875,0
defect4j,time,org/joda/time/field/BaseDurationField,3,48,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,515,                if (isSupported(f = chrono.halfdayOfDay())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,510,                    hourOfHalfday = f;,2,0,0,0,0,0,0,0,0,3,18,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,512,                if (isSupported(f = chrono.clockhourOfHalfday())) {,1,0,0,3,7,0,3,0,0,5,51,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,513,                    clockhourOfHalfday = f;,2,0,0,0,0,0,0,0,0,3,23,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,518,                if (isSupported(f = chrono.dayOfWeek())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,519,                    dayOfWeek = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,46,"        super(DateTimeFieldType.year(), chronology.getAverageMillisPerYear());",0,0,0,3,6,0,4,0,0,4,70,5,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,47,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,138,        iMinDaysInFirstWeek = minDaysInFirstWeek;,2,0,0,0,0,0,0,0,0,3,41,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,131,"        super(base, param);",2,0,0,1,2,0,0,0,0,2,19,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,133,        if (minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7) {,2,3,0,1,3,0,0,0,0,5,55,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,264,        fields.hourOfDay = cHourOfDayField;,3,0,0,0,0,0,0,0,0,4,35,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,265,        fields.hourOfHalfday = cHourOfHalfdayField;,3,0,0,0,0,0,0,0,0,4,43,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,266,        fields.clockhourOfDay = cClockhourOfDayField;,3,0,0,0,0,0,0,0,0,4,45,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,267,        fields.clockhourOfHalfday = cClockhourOfHalfdayField;,3,0,0,0,0,0,0,0,0,4,53,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,260,        fields.secondOfMinute = cSecondOfMinuteField;,3,0,0,0,0,0,0,0,0,4,45,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,261,        fields.secondOfDay = cSecondOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,262,        fields.minuteOfHour = cMinuteOfHourField;,3,0,0,0,0,0,0,0,0,4,41,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,263,        fields.minuteOfDay = cMinuteOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,268,        fields.halfdayOfDay = cHalfdayOfDayField;,3,0,0,0,0,0,0,0,0,4,41,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,191,        return SECOND_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,211,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,54,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,452,            return iUnitType;,1,0,0,0,0,0,0,0,0,1,17,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,188,        return iMinuteOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.005643875,0
defect4j,time,org/joda/time/field/BaseDurationField,3,51,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,180,        return iMinutes;,1,0,0,0,0,0,0,0,0,1,16,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,184,        return iMinuteOfHour;,1,0,0,0,0,0,0,0,0,1,21,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,212,        return iClockhourOfHalfday;,1,0,0,0,0,0,0,0,0,1,27,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,216,        return iHalfdayOfDay;,1,0,0,0,0,0,0,0,0,1,21,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,507,                    clockhourOfDay = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,506,                if (isSupported(f = chrono.clockhourOfDay())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,504,                    hourOfDay = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,500,                if (isSupported(f = chrono.minuteOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,509,                if (isSupported(f = chrono.hourOfHalfday())) {,1,0,0,3,7,0,3,0,0,5,46,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,436,        Fields() {,1,0,0,1,3,0,0,0,0,1,10,3,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,282,        return DAY_OF_YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.005643875,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,3,47,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,3,46,"        super(DateTimeFieldType.dayOfWeek(), days);",1,0,0,2,4,0,2,0,0,3,43,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,126,    private transient final YearInfo[] iYearInfoCache = new YearInfo[CACHE_SIZE];,1,0,1,2,4,3,0,2,0,7,77,2,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,120,        cHalfdayOfDayField = new HalfdayField();,1,0,0,1,2,0,0,1,0,3,40,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,56,        if (iUnitMillis < 1) {,1,1,0,1,3,0,0,0,0,2,22,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,55,        iUnitMillis = unit.getUnitMillis();,1,0,0,1,2,0,2,0,0,4,35,4,0.005643875,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,153,            super(type);,1,0,0,1,2,0,0,0,0,1,12,5,0.005643875,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,152,        LinkedDurationField(DurationFieldType type) {,2,0,0,1,3,0,0,1,0,3,45,3,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,51,        if (!unit.isPrecise()) {,0,0,0,2,5,0,2,0,0,3,24,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,277,        DateTimeField field = new OffsetDateTimeField(,1,0,0,0,1,0,0,2,0,3,46,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,274,"        fields.yearOfEra = new GJYearOfEraDateTimeField(fields.year, this);",4,0,0,1,2,0,0,1,0,6,67,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,273,        fields.year = new BasicYearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,47,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,279,        fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,4,0.005643875,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,92,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,70,        iRangeField = range;,2,0,0,0,0,0,0,0,0,3,20,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,454,                if (isSupported(f = chrono.hours())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,88,            iMax = field.getMaximumValue() + offset;,2,1,0,1,2,0,2,0,0,6,40,6,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,87,        if (maxValue > (field.getMaximumValue() + offset)) {,2,2,0,3,7,0,2,0,0,6,52,4,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,80,        iOffset = offset;,2,0,0,0,0,0,0,0,0,3,17,4,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,83,            iMin = field.getMinimumValue() + offset;,2,1,0,1,2,0,2,0,0,6,40,6,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,82,        if (minValue < (field.getMinimumValue() + offset)) {,2,2,0,3,7,0,2,0,0,6,52,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,199,        return iDivisor - 1;,1,1,0,0,0,0,0,0,0,2,20,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationField,3,63,        return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,224,        return iDayOfWeek;,1,0,0,0,0,0,0,0,0,1,18,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,220,        return iDays;,1,0,0,0,0,0,0,0,0,1,13,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,228,        return iDayOfMonth;,1,0,0,0,0,0,0,0,0,1,19,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,533,                if (isSupported(f = chrono.weekyearOfCentury())) {,1,0,0,3,7,0,3,0,0,5,50,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,530,                if (isSupported(f = chrono.weekyear())) {,1,0,0,3,7,0,3,0,0,5,41,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,531,                    weekyear = f;,2,0,0,0,0,0,0,0,0,3,13,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,536,                if (isSupported(f = chrono.monthOfYear())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,537,                    monthOfYear = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,534,                    weekyearOfCentury = f;,2,0,0,0,0,0,0,0,0,3,22,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,539,                if (isSupported(f = chrono.year())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,156,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,291,        return WEEK_OF_WEEKYEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,111,        cHourOfHalfdayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,46,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,117,        cClockhourOfHalfdayField = new ZeroIsMaxDateTimeField,1,0,0,0,0,0,0,1,0,3,53,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,114,        cClockhourOfDayField = new ZeroIsMaxDateTimeField,1,0,0,0,0,0,0,1,0,3,49,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,182,        return SECOND_OF_MINUTE_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,458,                    halfdays = f;,2,0,0,0,0,0,0,0,0,3,13,8,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,49,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,3,53,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,60,        if (!range.isPrecise()) {,0,0,0,2,5,0,2,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,64,        long rangeMillis = range.getUnitMillis();,1,0,0,1,2,0,2,0,0,3,41,5,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,3,65,        iRange = (int)(rangeMillis / getUnitMillis());,2,1,0,3,6,0,1,0,0,5,46,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,3,44,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,3,43,"        super(DateTimeFieldType.weekOfWeekyear(), weeks);",1,0,0,2,4,0,2,0,0,3,49,4,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,59,"        this(field, type, offset, Integer.MIN_VALUE, Integer.MAX_VALUE);",7,0,0,1,2,0,0,0,0,7,64,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,232,        return iDayOfYear;,1,0,0,0,0,0,0,0,0,1,18,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,236,        return iWeeks;,1,0,0,0,0,0,0,0,0,1,14,4,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,184,        return iMax;,1,0,0,0,0,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,528,                    weekOfWeekyear = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,525,                    dayOfYear = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,524,                if (isSupported(f = chrono.dayOfYear())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,527,                if (isSupported(f = chrono.weekOfWeekyear())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,521,                if (isSupported(f = chrono.dayOfMonth())) {,1,0,0,3,7,0,3,0,0,5,43,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,522,                    dayOfMonth = f;,2,0,0,0,0,0,0,0,0,3,15,8,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,264,        return DAY_OF_WEEK_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,105,        cMinuteOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,102,        cMinuteOfHourField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,45,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,108,        cHourOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,42,4,0.005643875,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,3,138,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,3,120,        return iChronology.getMaxYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,99,"    protected AssembledChronology(Chronology base, Object param) {",3,0,0,1,3,1,0,2,0,6,62,2,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,98,"        this(dividedField, dividedField.getType());",1,0,0,2,4,0,2,0,0,3,43,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,259,        fields.millisOfDay = cMillisOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,258,        fields.millisOfSecond = cMillisOfSecondField;,3,0,0,0,0,0,0,0,0,4,45,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,255,        fields.days = cDaysField;,3,0,0,0,0,0,0,0,0,4,25,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,254,        fields.halfdays = cHalfdaysField;,3,0,0,0,0,0,0,0,0,4,33,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,256,        fields.weeks = cWeeksField;,3,0,0,0,0,0,0,0,0,4,27,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,251,        fields.seconds = cSecondsField;,3,0,0,0,0,0,0,0,0,4,31,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,250,        fields.millis = cMillisField;,3,0,0,0,0,0,0,0,0,4,29,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,253,        fields.hours = cHoursField;,3,0,0,0,0,0,0,0,0,4,27,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,252,        fields.minutes = cMinutesField;,3,0,0,0,0,0,0,0,0,4,31,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,168,        return iSeconds;,1,0,0,0,0,0,0,0,0,1,16,4,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,47,"        this(field, (field == null ? null : field.getType()), offset, Integer.MIN_VALUE, Integer.MAX_VALUE);",7,1,0,3,6,0,2,0,0,10,100,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,475,                if (isSupported(f = chrono.centuries())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,318,        return MONTH_OF_YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,558,            return field == null ? false : field.isSupported();,1,1,0,1,2,0,2,0,0,5,51,6,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,551,                if (isSupported(f = chrono.era())) {,1,0,0,3,7,0,3,0,0,5,36,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,552,                    era = f;,2,0,0,0,0,0,0,0,0,3,8,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,172,        return iSecondOfMinute;,1,0,0,0,0,0,0,0,0,1,23,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,176,        return iSecondOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,60,        iUnitField = unit;,2,0,0,0,0,0,0,0,0,3,18,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,349,            iHourOfDay          = (f = fields.hourOfDay)          != null ? f : super.hourOfDay();,6,1,0,2,4,0,0,0,0,9,86,5,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,74,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.005643875,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,3,76,        if (offset == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,385,        iBaseFlags = flags;,2,0,0,0,0,0,0,0,0,3,19,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,122,"        super(dividedField.getWrappedField(), type);",1,0,0,2,4,0,2,0,0,3,44,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,123,        iDivisor = dividedField.iDivisor;,3,0,0,0,0,0,0,0,0,4,33,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,124,        iDurationField = durationField;,2,0,0,0,0,0,0,0,0,3,31,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,125,        iRangeField = dividedField.iDurationField;,3,0,0,0,0,0,0,0,0,4,42,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,309,        return WEEKYEAR_OF_CENTURY_TYPE;,1,0,0,0,0,0,0,0,0,1,32,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,549,                    centuryOfEra = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,543,                    yearOfEra = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,542,                if (isSupported(f = chrono.yearOfEra())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,540,                    year = f;,2,0,0,0,0,0,0,0,0,3,9,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,546,                    yearOfCentury = f;,2,0,0,0,0,0,0,0,0,3,18,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,545,                if (isSupported(f = chrono.yearOfCentury())) {,1,0,0,3,7,0,3,0,0,5,46,7,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,160,        return iMillisOfSecond;,1,0,0,0,0,0,0,0,0,1,23,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,245,        return CLOCKHOUR_OF_HALFDAY_TYPE;,1,0,0,0,0,0,0,0,0,1,33,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,90,        iMax = max;,2,0,0,0,0,0,0,0,0,3,11,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,88,        iDivisor = divisor;,2,0,0,0,0,0,0,0,0,3,19,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,86,        iRangeField = rangeField;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,87,        iDurationField = field.getDurationField();,1,0,0,1,2,0,2,0,0,4,42,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,82,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,83,        if (divisor < 2) {,1,1,0,1,3,0,0,0,0,2,18,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,73,        if (divisor < 2) {,1,1,0,1,3,0,0,0,0,2,18,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,72,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,77,        if (unitField == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,76,        DurationField unitField = field.getDurationField();,1,0,0,1,2,0,2,1,0,4,51,4,0.005643875,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,3,155,        return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,370,            flags = 0;,1,0,0,0,0,0,0,0,0,2,10,6,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,372,            flags = ,1,0,0,0,0,0,0,0,0,2,7,6,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,336,        return YEAR_OF_ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,280,        return iCenturies;,1,0,0,0,0,0,0,0,0,1,18,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,284,        return iCenturyOfEra;,1,0,0,0,0,0,0,0,0,1,21,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,288,        return iEras;,1,0,0,0,0,0,0,0,0,1,13,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,86,        int min = (i >= 0) ? i / divisor : ((i + 1) / divisor - 1);,6,5,0,3,6,0,0,0,0,11,59,5,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,87,        int j = field.getMaximumValue();,1,0,0,1,2,0,2,0,0,3,32,5,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,84,        iDivisor = divisor;,2,0,0,0,0,0,0,0,0,3,19,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,85,        int i = field.getMinimumValue();,1,0,0,1,2,0,2,0,0,3,32,5,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,83,        iRangeDurationField = rangeField;,2,0,0,0,0,0,0,0,0,3,33,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,254,        return HALFDAY_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,88,        int max = (j >= 0) ? j / divisor : ((j + 1) / divisor - 1);,6,5,0,3,6,0,0,0,0,11,59,5,0.005643875,0
defect4j,time,org/joda/time/field/DividedDateTimeField,3,89,        iMin = min;,2,0,0,0,0,0,0,0,0,3,11,4,0.005643875,0
defect4j,time,org/joda/time/field/MillisDurationField,3,62,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,285,        fields.yearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,283,        field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,281,        fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,288,        fields.era = new GJEraDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,42,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,289,"        fields.dayOfWeek = new GJDayOfWeekDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,67,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,83,        cHalfdaysField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,41,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,81,        cHoursField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,38,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,87,        cWeeksField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,38,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicChronology,3,85,        cDaysField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,37,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,516,                    halfdayOfDay = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,365,            iEra                = (f = fields.era)                != null ? f : super.era();,6,1,0,2,4,0,0,0,0,9,80,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,364,            iCenturyOfEra       = (f = fields.centuryOfEra)       != null ? f : super.centuryOfEra();,6,1,0,2,4,0,0,0,0,9,89,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,363,            iYearOfCentury      = (f = fields.yearOfCentury)      != null ? f : super.yearOfCentury();,6,1,0,2,4,0,0,0,0,9,90,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,362,            iYearOfEra          = (f = fields.yearOfEra)          != null ? f : super.yearOfEra();,6,1,0,2,4,0,0,0,0,9,86,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,361,            iYear               = (f = fields.year)               != null ? f : super.year();,6,1,0,2,4,0,0,0,0,9,81,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,360,            iMonthOfYear        = (f = fields.monthOfYear)        != null ? f : super.monthOfYear();,6,1,0,2,4,0,0,0,0,9,88,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,369,        if (iBase == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,562,            return field == null ? false : field.isSupported();,1,1,0,1,2,0,2,0,0,5,51,6,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,102,        setFields();,0,0,0,1,2,0,1,0,0,1,12,5,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,101,        iParam = param;,2,0,0,0,0,0,0,0,0,3,15,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,100,        iBase = base;,2,0,0,0,0,0,0,0,0,3,13,4,0.005643875,0
defect4j,time,org/joda/time/chrono/AssembledChronology,3,292,        return iEra;,1,0,0,0,0,0,0,0,0,1,12,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,3,42,"        super(DateTimeFieldType.dayOfYear(), days);",1,0,0,2,4,0,2,0,0,3,43,4,0.005643875,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,3,43,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005643875,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,3,109,"        this(dividedField, dividedField.getWrappedField().getDurationField(), type);",2,0,0,3,6,0,3,0,0,5,76,4,0.005643875,0
defect4j,time,org/joda/time/DateTimeFieldType,3,227,        return CLOCKHOUR_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.00563837,0
defect4j,time,org/joda/time/DateTimeField,3,33,public abstract class DateTimeField {,1,0,0,0,1,2,0,0,0,3,37,1,0.00563837,0
defect4j,time,org/joda/time/DateTimeFieldType,3,200,        return MINUTE_OF_HOUR_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.00563837,0
defect4j,time,org/joda/time/DurationFieldType,3,278,            return (1 << iOrdinal);,1,1,0,1,2,0,0,0,0,2,23,6,0.00563837,0
defect4j,time,org/joda/time/DurationField,3,30,public abstract class DurationField implements Comparable<DurationField> {,1,0,0,0,1,2,0,2,0,5,74,1,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,70,    private UnsupportedDurationField(DurationFieldType type) {,2,0,0,1,3,1,0,1,0,4,58,2,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,71,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.00563837,0
defect4j,time,org/joda/time/DateTimeFieldType,3,273,        return DAY_OF_MONTH_TYPE;,1,0,0,0,0,0,0,0,0,1,25,4,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,49,        if (cCache == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,59,        return field;,1,0,0,0,0,0,0,0,0,1,13,4,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,56,            field = new UnsupportedDurationField(type);,2,0,0,1,2,0,0,1,0,4,43,6,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,57,"            cCache.put(type, field);",0,0,0,1,2,0,4,0,0,4,24,7,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,55,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,53,            field = cCache.get(type);,1,0,0,1,2,0,3,0,0,5,25,6,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,50,"            cCache = new HashMap<DurationFieldType, UnsupportedDurationField>(7);",1,0,0,1,2,0,0,3,0,5,69,6,0.00563837,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,3,51,            field = null;,1,0,0,0,0,0,0,0,0,2,13,6,0.00563837,0
defect4j,time,org/joda/time/DateTimeFieldType,3,327,        return YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.00563837,0
defect4j,time,org/joda/time/Chronology,3,63,public abstract class Chronology {,1,0,0,0,1,2,0,0,0,3,34,1,0.005632873,0
defect4j,time,org/joda/time/DateTimeFieldType,3,131,    private static final DateTimeFieldType SECOND_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,137,    private static final DateTimeFieldType MILLIS_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,134,    private static final DateTimeFieldType SECOND_OF_MINUTE_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,82,    private static final DateTimeFieldType YEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,92,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,85,    private static final DateTimeFieldType YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,81,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,88,    private static final DateTimeFieldType DAY_OF_YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,128,    private static final DateTimeFieldType MINUTE_OF_HOUR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,122,    private static final DateTimeFieldType HOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,125,    private static final DateTimeFieldType MINUTE_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,79,    private static final DateTimeFieldType CENTURY_OF_ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,76,    private static final DateTimeFieldType YEAR_OF_ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,73,    private static final DateTimeFieldType ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,80,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,91,    private static final DateTimeFieldType MONTH_OF_YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,94,    private static final DateTimeFieldType DAY_OF_MONTH_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,89,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,97,    private static final DateTimeFieldType WEEKYEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,96,2,0.005627385,0
defect4j,time,org/joda/time/DurationFieldType,3,205,        return ERAS_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,119,    private static final DateTimeFieldType CLOCKHOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,116,    private static final DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,97,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,110,    private static final DateTimeFieldType HALFDAY_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,113,    private static final DateTimeFieldType HOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,92,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,103,    private static final DateTimeFieldType WEEK_OF_WEEKYEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,100,    private static final DateTimeFieldType WEEKYEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,85,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,106,    private static final DateTimeFieldType DAY_OF_WEEK_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,154,        iName = name;,2,0,0,0,0,0,0,0,0,3,13,4,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,447,            iRangeType = rangeType;,2,0,0,0,0,0,0,0,0,3,23,5,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,446,            iUnitType = unitType;,2,0,0,0,0,0,0,0,0,3,21,5,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,445,            iOrdinal = ordinal;,2,0,0,0,0,0,0,0,0,3,19,5,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,444,            super(name);,1,0,0,1,2,0,0,0,0,1,12,5,0.005627385,0
defect4j,time,org/joda/time/DateTimeFieldType,3,140,    private static final DateTimeFieldType MILLIS_OF_SECOND_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.005627385,0
defect4j,time,org/joda/time/DurationFieldType,3,169,        return WEEKYEARS_TYPE;,1,0,0,0,0,0,0,0,0,1,22,4,0.005627385,0
defect4j,time,org/joda/time/DurationFieldType,3,141,        return HALFDAYS_TYPE;,1,0,0,0,0,0,0,0,0,1,21,4,0.005627385,0
defect4j,time,org/joda/time/DurationFieldType,3,160,        return WEEKS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.005627385,0
defect4j,time,org/joda/time/DurationFieldType,3,178,        return MONTHS_TYPE;,1,0,0,0,0,0,0,0,0,1,19,4,0.005627385,0
defect4j,time,org/joda/time/DurationFieldType,3,187,        return YEARS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.005627385,0
defect4j,time,org/joda/time/DurationFieldType,3,196,        return CENTURIES_TYPE;,1,0,0,0,0,0,0,0,0,1,22,4,0.005627385,0
defect4j,time,org/joda/time/DurationFieldType,3,66,"    static final DurationFieldType YEARS_TYPE = new StandardDurationFieldType(""years"", YEARS);",2,0,0,1,2,2,0,2,0,7,90,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,64,"    static final DurationFieldType WEEKYEARS_TYPE = new StandardDurationFieldType(""weekyears"", WEEKYEARS);",2,0,0,1,2,2,0,2,0,7,102,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,60,"    static final DurationFieldType ERAS_TYPE = new StandardDurationFieldType(""eras"", ERAS);",2,0,0,1,2,2,0,2,0,7,87,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,68,"    static final DurationFieldType MONTHS_TYPE = new StandardDurationFieldType(""months"", MONTHS);",2,0,0,1,2,2,0,2,0,7,93,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,80,"    static final DurationFieldType SECONDS_TYPE = new StandardDurationFieldType(""seconds"", SECONDS);",2,0,0,1,2,2,0,2,0,7,96,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,82,"    static final DurationFieldType MILLIS_TYPE = new StandardDurationFieldType(""millis"", MILLIS);",2,0,0,1,2,2,0,2,0,7,93,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,72,"    static final DurationFieldType DAYS_TYPE = new StandardDurationFieldType(""days"", DAYS);",2,0,0,1,2,2,0,2,0,7,87,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,74,"    static final DurationFieldType HALFDAYS_TYPE = new StandardDurationFieldType(""halfdays"", HALFDAYS);",2,0,0,1,2,2,0,2,0,7,99,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,259,            super(name);,1,0,0,1,2,0,0,0,0,1,12,5,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,105,        return MILLIS_TYPE;,1,0,0,0,0,0,0,0,0,1,19,4,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,62,"    static final DurationFieldType CENTURIES_TYPE = new StandardDurationFieldType(""centuries"", CENTURIES);",2,0,0,1,2,2,0,2,0,7,102,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,114,        return SECONDS_TYPE;,1,0,0,0,0,0,0,0,0,1,20,4,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,123,        return MINUTES_TYPE;,1,0,0,0,0,0,0,0,0,1,20,4,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,260,            iOrdinal = ordinal;,2,0,0,0,0,0,0,0,0,3,19,5,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,151,        return DAYS_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,95,        iName = name;,2,0,0,0,0,0,0,0,0,3,13,4,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,132,        return HOURS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,70,"    static final DurationFieldType WEEKS_TYPE = new StandardDurationFieldType(""weeks"", WEEKS);",2,0,0,1,2,2,0,2,0,7,90,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,76,"    static final DurationFieldType HOURS_TYPE = new StandardDurationFieldType(""hours"", HOURS);",2,0,0,1,2,2,0,2,0,7,90,2,0.005621906,0
defect4j,time,org/joda/time/DurationFieldType,3,78,"    static final DurationFieldType MINUTES_TYPE = new StandardDurationFieldType(""minutes"", MINUTES);",2,0,0,1,2,2,0,2,0,7,96,2,0.005621906,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1540,            if (iTailZone == null) {,1,1,0,1,3,0,0,0,0,2,24,5,0.005613838,0
defect4j,time,org/joda/time/DateTime,16,516,"        super(year, monthOfYear, dayOfMonth,",3,0,0,0,1,0,0,0,0,3,36,4,0.00559493,0
defect4j,time,org/joda/time/DateTimeUtils,3,526,    static class SystemMillisProvider implements MillisProvider {,1,0,0,0,1,1,0,1,0,3,61,2,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,61,        cZoneNames = Collections.unmodifiableMap(map);,1,0,0,1,2,0,3,0,0,5,46,4,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,60,"        put(map, ""PDT"", ""America/Los_Angeles"");",0,0,0,1,2,0,2,0,0,4,39,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,65,"            map.put(name, DateTimeZone.forID(id));",0,0,0,2,4,0,6,0,0,6,38,7,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,54,"        put(map, ""EDT"", ""America/New_York"");",0,0,0,1,2,0,2,0,0,4,36,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,55,"        put(map, ""CST"", ""America/Chicago"");",0,0,0,1,2,0,2,0,0,4,35,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,56,"        put(map, ""CDT"", ""America/Chicago"");",0,0,0,1,2,0,2,0,0,4,35,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,57,"        put(map, ""MST"", ""America/Denver"");",0,0,0,1,2,0,2,0,0,4,34,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,50,"        map.put(""UT"", DateTimeZone.UTC);",2,0,0,1,2,0,2,0,0,5,32,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,52,"        map.put(""GMT"", DateTimeZone.UTC);",2,0,0,1,2,0,2,0,0,5,33,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,53,"        put(map, ""EST"", ""America/New_York"");",0,0,0,1,2,0,2,0,0,4,36,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,58,"        put(map, ""MDT"", ""America/Denver"");",0,0,0,1,2,0,2,0,0,4,34,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,59,"        put(map, ""PST"", ""America/Los_Angeles"");",0,0,0,1,2,0,2,0,0,4,39,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,43,    private static volatile MillisProvider cMillisProvider = SYSTEM_MILLIS_PROVIDER;,2,0,0,0,0,3,0,1,0,6,80,2,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,41,    private static final SystemMillisProvider SYSTEM_MILLIS_PROVIDER = new SystemMillisProvider();,1,0,0,1,2,3,0,2,0,6,94,2,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,49,"        Map<String, DateTimeZone> map = new LinkedHashMap<String, DateTimeZone>();",1,0,0,1,2,0,0,6,0,7,74,4,0.005535382,0
defect4j,time,org/joda/time/DateTimeUtils,3,51,"        map.put(""UTC"", DateTimeZone.UTC);",2,0,0,1,2,0,2,0,0,5,33,5,0.005535382,0
defect4j,time,org/joda/time/DateTimeZone,3,556,"            String providerClass = System.getProperty(""org.joda.time.DateTimeZone.NameProvider"");",1,0,0,1,2,0,2,1,0,5,85,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,557,            if (providerClass != null) {,1,1,0,1,3,0,0,0,0,2,28,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,554,        NameProvider nameProvider = null;,1,0,0,0,0,0,0,1,0,2,33,4,0.005519396,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,3,99,        return new HashMap(7);,0,0,0,1,2,0,0,1,0,1,22,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,572,        return nameProvider;,1,0,0,0,0,0,0,0,0,1,20,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,283,"                zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);",0,0,1,5,10,0,6,0,0,8,72,9,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,281,        for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,82,"        this(resourcePath, null, false);",1,0,0,1,2,0,0,0,0,2,32,4,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,84,    private final transient Info[] iInfoCache = new Info[cInfoCacheMask + 1];,2,1,0,2,4,3,0,2,0,8,73,2,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,87,        super(zone.getID());,0,0,0,2,4,0,2,0,0,2,20,5,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,88,        iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,149,        if (obj instanceof SoftReference<?>) {,1,0,0,1,3,0,0,1,0,2,38,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,482,"            return new OfYear((char)in.readUnsignedByte(),",0,0,0,2,5,0,2,1,0,3,46,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,540,            nameProvider = getDefaultNameProvider();,1,0,0,1,2,0,1,0,0,3,40,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,542,        cNameProvider = nameProvider;,2,0,0,0,0,0,0,0,0,3,29,4,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1347,                pool[i] = in.readUTF();,0,0,1,2,4,0,2,0,0,5,23,7,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,748,            iOfYear = ofYear;,2,0,0,0,0,0,0,0,0,3,17,5,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,195,        if (iFileDir != null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,199,            if (iLoader != null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,198,            String path = iResourcePath.concat(name);,1,0,0,1,2,0,3,1,0,5,41,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,749,            iNameKey = nameKey;,2,0,0,0,0,0,0,0,0,3,19,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,747,"        Recurrence(OfYear ofYear, String nameKey, int saveMillis) {",4,0,0,1,3,0,0,2,0,6,59,3,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,740,"            return new Recurrence(OfYear.readFrom(in), in.readUTF(), (int)readMillis(in));",0,0,0,5,10,0,7,1,0,8,78,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,750,            iSaveMillis = saveMillis;,2,0,0,0,0,0,0,0,0,3,25,5,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,569,            nameProvider = new DefaultNameProvider();,1,0,0,1,2,0,0,1,0,3,41,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,568,        if (nameProvider == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,95,        if (in instanceof DataInput) {,1,0,0,1,3,0,0,1,0,2,30,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,98,"            return readFrom((DataInput)new DataInputStream(in), id);",1,0,0,3,6,0,2,2,0,5,56,7,0.005519396,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,3,41,        iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,0,3,33,4,0.005519396,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,3,40,        iWallOffset = wallOffset;,2,0,0,0,0,0,0,0,0,3,25,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,173,        return new TreeSet<String>(iZoneInfoMap.keySet());,0,0,0,2,4,0,2,2,0,4,50,5,0.005519396,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,3,39,    public DefaultNameProvider() {,1,0,0,1,3,1,0,0,0,2,30,2,0.005519396,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,3,37,"    private HashMap<Locale, Map<String, Map<String, Object>>> iByLocaleCache = createCache();",1,0,0,1,2,1,1,7,0,10,89,2,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,225,            in = openResource(id);,1,0,0,1,2,0,2,0,0,4,22,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,227,"            iZoneInfoMap.put(id, new SoftReference<DateTimeZone>(tz));",1,0,0,2,4,0,3,2,0,6,58,7,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,226,"            DateTimeZone tz = DateTimeZoneBuilder.readFrom(in, id);",1,0,0,1,2,0,4,1,0,6,55,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,223,        InputStream in = null;,1,0,0,0,0,0,0,1,0,2,22,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,228,            return tz;,1,0,0,0,0,0,0,0,0,1,10,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,119,"            return CachedDateTimeZone.forZone(PrecalculatedZone.readFrom(in, id));",0,0,0,2,4,0,6,0,0,6,70,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,110,        switch (in.readUnsignedByte()) {,0,0,0,2,5,0,2,0,0,2,32,5,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,116,        setProvider0(null);,0,0,0,1,2,0,1,0,0,2,19,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,117,        setNameProvider0(null);,0,0,0,1,2,0,1,0,0,2,23,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,280,        size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,0,4,31,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,236,                    in.close();,0,0,0,1,2,0,2,0,0,2,11,11,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,153,            if (tz != null) {,1,1,0,1,3,0,0,0,0,2,17,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,152,            DateTimeZone tz = ref.get();,1,0,0,1,2,0,2,1,0,4,28,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,151,            SoftReference<DateTimeZone> ref = (SoftReference<DateTimeZone>) obj;,2,0,0,1,2,0,0,4,0,6,68,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,154,                return tz;,1,0,0,0,0,0,0,0,0,1,10,8,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,486,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,488,"                provider = new ZoneInfoProvider(""org/joda/time/tz/data"");",1,0,0,1,2,0,0,1,0,4,57,8,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,200,                in = iLoader.getResourceAsStream(path);,1,0,0,1,2,0,3,0,0,5,39,8,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,204,            if (in == null) {,1,1,0,1,3,0,0,0,0,2,17,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,144,        if (id.equals(obj)) {,0,0,0,2,5,0,3,0,0,3,21,5,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,146,            return loadZoneData(id);,0,0,0,1,2,0,2,0,0,2,24,7,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,140,        if (obj == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,494,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,498,        return provider;,1,0,0,0,0,0,0,0,0,1,16,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,475,            if (providerClass != null) {,1,1,0,1,3,0,0,0,0,2,28,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,474,"            String providerClass = System.getProperty(""org.joda.time.DateTimeZone.Provider"");",1,0,0,1,2,0,2,1,0,5,81,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,471,        Provider provider = null;,1,0,0,0,0,0,0,1,0,2,25,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,213,        return in;,1,0,0,0,0,0,0,0,0,1,10,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,235,                if (in != null) {,1,1,0,1,3,0,0,0,0,2,17,8,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,135,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,139,        Object obj = iZoneInfoMap.get(id);,1,0,0,1,2,0,3,1,0,5,34,4,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1351,            long[] transitions = new long[size];,1,0,1,2,4,0,0,0,0,2,36,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1350,            int size = in.readInt();,1,0,0,1,2,0,2,0,0,3,24,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1353,            int[] standardOffsets = new int[size];,1,0,1,2,4,0,0,0,0,2,38,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1352,            int[] wallOffsets = new int[size];,1,0,1,2,4,0,0,0,0,2,34,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1354,            String[] nameKeys = new String[size];,1,0,1,2,4,0,0,2,0,4,37,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1357,                transitions[i] = readMillis(in);,0,0,1,2,4,0,2,0,0,5,32,7,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1356,            for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1359,                standardOffsets[i] = (int)readMillis(in);,0,0,1,3,6,0,2,0,0,5,41,7,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1358,                wallOffsets[i] = (int)readMillis(in);,0,0,1,3,6,0,2,0,0,5,37,7,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,39,"            i = Integer.getInteger(""org.joda.time.tz.CachedDateTimeZone.size"");",1,0,0,1,2,0,2,0,0,5,67,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1179,            super(id);,1,0,0,1,2,0,0,0,0,1,10,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,509,            iMode = mode;,2,0,0,0,0,0,0,0,0,3,13,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,505,            if (mode != 'u' && mode != 'w' && mode != 's') {,3,5,0,1,3,0,0,0,0,11,48,5,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,443,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,444,            provider = getDefaultProvider();,1,0,0,1,2,0,1,0,0,3,32,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,446,        Set<String> ids = provider.getAvailableIDs();,1,0,0,1,2,0,2,2,0,5,45,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,447,        if (ids == null || ids.size() == 0) {,1,3,0,2,5,0,2,0,0,6,37,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,261,"        map.put(""UTC"", new SoftReference<DateTimeZone>(DateTimeZone.UTC));",2,0,0,2,4,0,2,2,0,7,66,5,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,262,        return map;,1,0,0,0,0,0,0,0,0,1,11,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,123,"        iZoneInfoMap = loadZoneInfoMap(openResource(""ZoneInfoMap""));",1,0,0,2,4,0,2,0,0,5,60,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,121,        iLoader = loader;,2,0,0,0,0,0,0,0,0,3,17,4,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1344,            int poolSize = in.readUnsignedShort();,1,0,0,1,2,0,2,0,0,3,38,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1345,            String[] pool = new String[poolSize];,1,0,1,2,4,0,0,2,0,4,37,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1180,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,0,3,33,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1181,            iStartRecurrence = startRecurrence;,2,0,0,0,0,0,0,0,0,3,35,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1182,            iEndRecurrence = endRecurrence;,2,0,0,0,0,0,0,0,0,3,31,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1508,            iTailZone = tailZone;,2,0,0,0,0,0,0,0,0,3,21,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1503,            super(id);,1,0,0,1,2,0,0,0,0,1,10,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1504,            iTransitions = transitions;,2,0,0,0,0,0,0,0,0,3,27,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1505,            iWallOffsets = wallOffsets;,2,0,0,0,0,0,0,0,0,3,27,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1506,            iStandardOffsets = standardOffsets;,2,0,0,0,0,0,0,0,0,3,35,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1507,            iNameKeys = nameKeys;,2,0,0,0,0,0,0,0,0,3,21,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1169,"            return new DSTZone(id, (int)readMillis(in), ",1,0,0,2,5,0,2,1,0,4,43,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,513,            iAdvance = advanceDayOfWeek;,2,0,0,0,0,0,0,0,0,3,28,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,512,            iDayOfWeek = dayOfWeek;,2,0,0,0,0,0,0,0,0,3,23,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,511,            iDayOfMonth = dayOfMonth;,2,0,0,0,0,0,0,0,0,3,25,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,510,            iMonthOfYear = monthOfYear;,2,0,0,0,0,0,0,0,0,3,27,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,514,            iMillisOfDay = millisOfDay;,2,0,0,0,0,0,0,0,0,3,27,5,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,457,        cProvider = provider;,2,0,0,0,0,0,0,0,0,3,21,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,454,"        if (!UTC.equals(provider.getZone(""UTC""))) {",0,0,0,3,7,0,4,0,0,6,43,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,451,"        if (!ids.contains(""UTC"")) {",0,0,0,2,5,0,2,0,0,4,27,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,458,        cAvailableIDs = ids;,2,0,0,0,0,0,0,0,0,3,20,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,273,        int size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,0,3,35,5,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,276,            pool[i] = din.readUTF().intern();,0,0,1,3,6,0,3,0,0,6,33,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,274,        String[] pool = new String[size];,1,0,1,2,4,0,0,2,0,4,33,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,275,        for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,118,            loader = getClass().getClassLoader();,1,0,0,2,4,0,2,0,0,4,37,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,117,        if (loader == null && !favorSystemLoader) {,2,2,0,1,3,0,0,0,0,5,43,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,115,        iResourcePath = resourcePath;,2,0,0,0,0,0,0,0,0,3,29,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,114,        iFileDir = null;,1,0,0,0,0,0,0,0,0,2,16,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,111,            resourcePath += '/';,1,0,0,0,0,0,0,0,0,3,20,6,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,110,"        if (!resourcePath.endsWith(""/"")) {",0,0,0,2,5,0,2,0,0,4,34,4,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1375,"                tailZone = DSTZone.readFrom(in, id);",1,0,0,1,2,0,4,0,0,6,36,7,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1374,            if (in.readBoolean()) {,0,0,0,2,5,0,2,0,0,2,23,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1373,            DSTZone tailZone = null;,1,0,0,0,0,0,0,1,0,2,24,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1378,            return new PrecalculatedZone,0,0,0,0,0,0,0,1,0,1,28,7,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,184,        switch (v >> 6) {,1,1,0,1,3,0,0,0,0,2,17,4,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,187,            v = (v << (32 - 6)) >> (32 - 6);,2,4,0,3,6,0,0,0,0,7,32,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,183,        int v = in.readUnsignedByte();,1,0,0,1,2,0,2,0,0,3,30,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,188,            return v * (30 * 60000L);,1,2,0,1,2,0,0,0,0,3,25,5,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,208,"        if (id.equals(""UTC"")) {",0,0,0,2,5,0,2,0,0,3,23,5,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,205,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.005519396,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,3,38,        super(id);,1,0,0,1,2,0,0,0,0,1,10,4,0.005519396,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,3,39,        iNameKey = nameKey;,2,0,0,0,0,0,0,0,0,3,19,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,731,        return iID;,1,0,0,0,0,0,0,0,0,1,11,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,107,        if (resourcePath == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,61,        cInfoCacheMask = cacheSize - 1;,2,1,0,0,0,0,0,0,0,4,31,4,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,68,        if (zone instanceof CachedDateTimeZone) {,1,0,0,1,3,0,0,1,0,2,41,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1362,                    if (poolSize < 256) {,1,1,0,1,3,0,0,0,0,2,21,9,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1363,                        index = in.readUnsignedByte();,1,0,0,1,2,0,2,0,0,4,30,11,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1367,                    nameKeys[i] = pool[index];,0,0,1,2,4,0,0,0,0,5,26,9,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,196,            return v * 60000L;,1,1,0,0,0,0,0,0,0,2,18,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,195,            v |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,0,4,29,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,194,            v |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,0,5,34,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,193,            v |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,0,5,35,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,192,            v = (v << (32 - 6)) >> (32 - 30);,2,4,0,3,6,0,0,0,0,7,33,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,205,            return w * 1000L;,1,1,0,0,0,0,0,0,0,2,17,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,204,            w |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,0,4,29,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,203,            w |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,0,5,34,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,202,            w |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,0,5,35,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,201,            w |= (in.readUnsignedByte()) << 24;,1,1,0,2,4,0,2,0,0,5,35,5,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,200,            long w = (((long)v) << (64 - 6)) >> (64 - 38);,2,4,0,5,10,0,0,0,0,6,46,6,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,209,            return in.readLong();,0,0,0,1,2,0,2,0,0,2,21,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,213,            return zone;,1,0,0,0,0,0,0,0,0,1,12,6,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,212,        if (zone != null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,251,"        Map<String, Object> map = new ConcurrentHashMap<String, Object>();",1,0,0,1,2,0,0,6,0,7,66,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,252,        DataInputStream din = new DataInputStream(in);,2,0,0,1,2,0,0,2,0,4,46,4,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,254,"            readZoneInfoMap(din, map);",0,0,0,1,2,0,3,0,0,3,26,7,0.005519396,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,3,257,                din.close();,0,0,0,1,2,0,2,0,0,2,12,9,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,71,        return new CachedDateTimeZone(zone);,1,0,0,1,2,0,0,1,0,2,36,5,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,211,        DateTimeZone zone = cProvider.getZone(id);,1,0,0,1,2,0,3,1,0,5,42,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,539,        if (nameProvider == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,718,        iID = id;,2,0,0,0,0,0,0,0,0,3,9,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,714,    protected DateTimeZone(String id) {,2,0,0,1,3,1,0,1,0,4,35,2,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,715,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.005519396,0
defect4j,time,org/joda/time/DateTimeZone,3,94,"    public static final DateTimeZone UTC = new FixedDateTimeZone(""UTC"", ""UTC"", 0, 0);",1,0,0,1,2,3,0,2,0,8,81,2,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,48,            cacheSize = 512; // (1 << 9),1,0,0,1,2,0,0,0,0,2,28,6,0.005519396,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,3,45,        if (i == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.005519396,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,3,1346,            for (int i=0; i<poolSize; i++) {,4,1,0,1,3,0,0,0,0,6,32,5,0.005519396,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,3,89,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.005519396,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,3,88,        if (this == obj) {,1,1,0,1,3,0,0,0,0,2,18,4,0.005519396,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,88,        return iField.isSupported();,0,0,0,1,2,0,2,0,0,2,28,5,0.005459288,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,208,        return iField.getLeapDurationField();,0,0,0,1,2,0,2,0,0,2,37,5,0.005459288,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,192,        return iField.getDurationField();,0,0,0,1,2,0,2,0,0,2,33,5,0.005453246,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1576,            if (iTailZone == null) {,1,1,0,1,3,0,0,0,0,2,24,5,0.00541721,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,80,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,0.00541124,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,6,0.005363985,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",2,1,0,2,4,0,4,0,0,7,51,6,0.005363985,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,6,0.005363985,0
defect4j,time,org/joda/time/DateTimeZone,16,927,        if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {,4,5,0,3,7,0,0,0,0,9,68,4,0.005299743,0
defect4j,time,org/joda/time/DateTimeZone,16,925,        long instantLocal = instantUTC + offset;,3,1,0,0,0,0,0,0,0,4,40,5,0.005299743,0
defect4j,time,org/joda/time/DateTimeZone,16,924,        int offset = getOffset(instantUTC);,1,0,0,1,2,0,2,0,0,3,35,5,0.005299743,0
defect4j,time,org/joda/time/DateTimeZone,16,930,        return instantLocal;,1,0,0,0,0,0,0,0,0,1,20,4,0.005299743,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,423,        Range wr = c.getWidthRange();,1,0,0,1,2,0,2,1,0,4,29,4,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,471,        double result = this.right;,2,0,0,0,0,0,0,0,0,2,27,5,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,472,        if (this.unitType == UnitType.RELATIVE) {,3,1,0,1,3,0,0,0,0,4,41,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,427,        double hh = trimToContentHeight(h);,1,0,0,1,2,0,2,0,0,3,35,5,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,475,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,425,        Range hr = c.getHeightRange();,1,0,0,1,2,0,2,1,0,4,30,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,424,        double h = c.getHeight();,1,0,0,1,2,0,2,0,0,3,25,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,428,        Range wwr = trimToContentWidth(wr);,1,0,0,1,2,0,2,1,0,4,35,4,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,445,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,179,        return this.widthRange;   ,1,0,0,0,0,0,0,0,0,1,23,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,170,        return this.width;,1,0,0,0,0,0,0,0,0,1,18,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,383,        double result = this.margin.trimWidth(fixedWidth);,2,0,0,1,2,0,2,0,0,4,50,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,437,        if (r == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,386,"        return Math.max(result, 0.0);",0,0,0,1,2,0,3,0,0,3,29,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,384,        result = this.frame.getInsets().trimWidth(result);,2,0,0,2,4,0,3,0,0,6,50,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,385,        result = this.padding.trimWidth(result);,2,0,0,1,2,0,2,0,0,5,40,4,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,501,        return width - calculateLeftInset(width) - calculateRightInset(width);   ,1,1,0,2,4,0,4,0,0,6,70,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,404,"        return Math.max(result, 0.0);",0,0,0,1,2,0,3,0,0,3,29,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,401,        double result = this.margin.trimHeight(fixedHeight);,2,0,0,1,2,0,2,0,0,4,52,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,403,        result = this.padding.trimHeight(result);,2,0,0,1,2,0,2,0,0,5,41,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,402,        result = this.frame.getInsets().trimHeight(result);,2,0,0,2,4,0,3,0,0,6,51,4,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,523,        return height ,1,0,0,0,0,0,0,0,0,1,13,6,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,441,        double result = this.left;,2,0,0,0,0,0,0,0,0,2,26,5,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,442,        if (this.unitType == UnitType.RELATIVE) {,3,1,0,1,3,0,0,0,0,4,41,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,197,        return this.height;,1,0,0,0,0,0,0,0,0,1,19,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,463,"        return new Range(lowerBound, upperBound);",2,0,0,1,2,0,0,1,0,3,41,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,461,            upperBound = trimToContentHeight(r.getUpperBound());,1,0,0,2,4,0,3,0,0,5,52,6,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,460,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,2,1,0,2,5,0,2,0,0,5,51,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,206,        return this.heightRange;   ,1,0,0,0,0,0,0,0,0,1,24,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,426,        double ww = trimToContentWidth(w);,1,0,0,1,2,0,2,0,0,3,34,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,422,        double w = c.getWidth();,1,0,0,1,2,0,2,0,0,3,24,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,429,        Range hhr = trimToContentHeight(hr);,1,0,0,1,2,0,2,1,0,4,36,4,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,382,        if (this.unitType == UnitType.RELATIVE) {,3,1,0,1,3,0,0,0,0,4,41,4,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,381,        double result = this.top;,2,0,0,0,0,0,0,0,0,2,25,5,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,385,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,448,"        return new Range(lowerBound, upperBound);",2,0,0,1,2,0,0,1,0,3,41,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,441,        double upperBound = Double.POSITIVE_INFINITY;,3,0,0,0,0,0,0,0,0,3,45,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,440,        double lowerBound = 0.0;,1,0,0,0,0,0,0,0,0,1,24,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,442,        if (r.getLowerBound() > 0.0) {,0,1,0,2,5,0,2,0,0,3,30,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,445,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,2,1,0,2,5,0,2,0,0,5,51,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,446,            upperBound = trimToContentWidth(r.getUpperBound());,1,0,0,2,4,0,3,0,0,5,51,6,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,412,        if (this.unitType == UnitType.RELATIVE) {,3,1,0,1,3,0,0,0,0,4,41,4,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,415,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,430,        return new RectangleConstraint(,0,0,0,0,1,0,0,1,0,1,31,6,0.005271481,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,411,        double result = this.bottom;,2,0,0,0,0,0,0,0,0,2,28,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,456,        double upperBound = Double.POSITIVE_INFINITY;,3,0,0,0,0,0,0,0,0,3,45,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,457,        if (r.getLowerBound() > 0.0) {,0,1,0,2,5,0,2,0,0,3,30,4,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,455,        double lowerBound = 0.0;,1,0,0,0,0,0,0,0,0,1,24,5,0.005271481,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,452,        if (r == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.005271481,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,224,        return iChronology.getMinYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.005172431,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,196,        return iField.getRangeDurationField();,0,0,0,1,2,0,2,0,0,2,38,5,0.005172431,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,54,"        this(chronology, field, 0);",2,0,0,1,2,0,0,0,0,2,27,4,0.005172431,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,80,            return (int) ((instant / getUnitMillis()) % iRange);,2,2,0,4,8,0,1,0,0,5,52,8,0.005169491,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,212,        return iField.getMinimumValue();,0,0,0,1,2,0,2,0,0,2,32,5,0.005167976,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,66,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005167976,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,75,        iSkip = skip;,2,0,0,0,0,0,0,0,0,3,13,4,0.005167976,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,69,            iMinValue = min - 1;,2,1,0,0,0,0,0,0,0,4,20,6,0.005167976,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,68,        if (min < skip) {,2,1,0,1,3,0,0,0,0,3,17,4,0.005167976,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,65,        super(field);,1,0,0,1,2,0,0,0,0,1,13,4,0.005167976,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,67,        int min = super.getMinimumValue();,2,0,0,1,2,0,0,0,0,2,34,5,0.005167976,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,52,"        this(field, null);",1,0,0,1,2,0,0,0,0,1,18,4,0.005159088,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,63,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.005159088,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,66,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,0.005159088,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,67,        iType = (type == null ? field.getType() : type);,3,1,0,2,4,0,2,0,0,7,48,4,0.005159088,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,54,"        this(chronology, field, 0);",2,0,0,1,2,0,0,0,0,2,27,4,0.005119872,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,196,        return iField.getRangeDurationField();,0,0,0,1,2,0,2,0,0,2,38,5,0.005119872,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,212,        return iField.getMinimumValue();,0,0,0,1,2,0,2,0,0,2,32,5,0.005114404,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,75,        iSkip = skip;,2,0,0,0,0,0,0,0,0,3,13,4,0.005114404,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,65,        super(field);,1,0,0,1,2,0,0,0,0,1,13,4,0.005114404,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,67,        int min = super.getMinimumValue();,2,0,0,1,2,0,0,0,0,2,34,5,0.005114404,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,66,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.005114404,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,69,            iMinValue = min - 1;,2,1,0,0,0,0,0,0,0,4,20,6,0.005114404,0
defect4j,time,org/joda/time/field/SkipDateTimeField,16,68,        if (min < skip) {,2,1,0,1,3,0,0,0,0,3,17,4,0.005114404,0
defect4j,chart,org/jfree/chart/util/Size2D,13,110,        return this.height;,1,0,0,0,0,0,0,0,0,1,19,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,159,        this.height = h;,2,0,0,0,0,0,0,0,0,3,16,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,161,        this.heightConstraintType = heightConstraintType;,2,0,0,0,0,0,0,0,0,3,49,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,160,        this.heightRange = heightRange;,2,0,0,0,0,0,0,0,0,3,31,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/LengthConstraintType,13,63,    public static final LengthConstraintType FIXED ,1,0,0,0,0,3,0,1,0,5,46,2,0.005114262,0
defect4j,chart,org/jfree/chart/block/LengthConstraintType,13,74,    private LengthConstraintType(String name) {,2,0,0,1,3,1,0,1,0,4,43,2,0.005114262,0
defect4j,chart,org/jfree/chart/block/LengthConstraintType,13,75,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,460,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,188,        return this.widthConstraintType;,1,0,0,0,0,0,0,0,0,1,32,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,60,    public static final RectangleConstraint NONE = new RectangleConstraint(,1,0,0,0,1,3,0,2,0,6,71,2,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,493,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,512,        return width + calculateLeftOutset(width) + calculateRightOutset(width);   ,1,1,0,2,4,0,4,0,0,6,72,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/BlockBorder,13,145,        return this.insets;,1,0,0,0,0,0,0,0,0,1,19,5,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,456,        double result = this.left;,2,0,0,0,0,0,0,0,0,2,26,5,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,457,        if (this.unitType == UnitType.RELATIVE) {,3,1,0,1,3,0,0,0,0,4,41,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,492,        result = this.margin.extendHeight(result);,2,0,0,1,2,0,2,0,0,5,42,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,490,        result = this.padding.extendHeight(result);,2,0,0,1,2,0,2,0,0,5,43,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,491,        result = this.frame.getInsets().extendHeight(result);,2,0,0,2,4,0,3,0,0,6,53,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,168,        this.blocks.clear();,1,0,0,1,2,0,1,0,0,2,20,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,215,        return this.heightConstraintType;,1,0,0,0,0,0,0,0,0,1,33,5,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,427,        if (this.unitType == UnitType.RELATIVE) {,3,1,0,1,3,0,0,0,0,4,41,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,419,        if (c.equals(RectangleConstraint.NONE)) {,2,0,0,2,5,0,2,0,0,4,41,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,416,        if (c == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/LengthConstraintType,13,55,    public static final LengthConstraintType NONE ,1,0,0,0,0,3,0,1,0,5,45,2,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,535,        return height ,1,0,0,0,0,0,0,0,0,1,13,6,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,430,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,478,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,474,        double result = contentWidth;,2,0,0,0,0,0,0,0,0,2,29,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,489,        double result = contentHeight;,2,0,0,0,0,0,0,0,0,2,30,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,476,        result = this.frame.getInsets().extendWidth(result);,2,0,0,2,4,0,3,0,0,6,52,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,477,        result = this.margin.extendWidth(result);,2,0,0,1,2,0,2,0,0,5,41,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/Size2D,13,92,        return this.width;,1,0,0,0,0,0,0,0,0,1,18,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,169,        this.arrangement.clear();,1,0,0,1,2,0,1,0,0,2,25,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,149,                               LengthConstraintType heightConstraintType) {,1,0,0,0,2,0,0,1,0,2,44,3,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,426,        double result = this.bottom;,2,0,0,0,0,0,0,0,0,2,28,5,0.005114262,0
defect4j,chart,org/jfree/chart/util/Size2D,13,81,"    public Size2D(double width, double height) {",3,0,0,1,3,1,0,0,0,4,44,2,0.005114262,0
defect4j,chart,org/jfree/chart/util/Size2D,13,83,        this.height = height;,2,0,0,0,0,0,0,0,0,3,21,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/Size2D,13,82,        this.width = width;,2,0,0,0,0,0,0,0,0,3,19,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,153,        if (heightConstraintType == null) {,1,1,0,1,3,0,0,0,0,2,35,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,397,        if (this.unitType == UnitType.RELATIVE) {,3,1,0,1,3,0,0,0,0,4,41,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,396,        double result = this.top;,2,0,0,0,0,0,0,0,0,2,25,5,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,156,        this.width = w;,2,0,0,0,0,0,0,0,0,3,15,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,157,        this.widthRange = widthRange;,2,0,0,0,0,0,0,0,0,3,29,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,158,        this.widthConstraintType = widthConstraintType;,2,0,0,0,0,0,0,0,0,3,47,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,475,        result = this.padding.extendWidth(result);,2,0,0,1,2,0,2,0,0,5,42,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,490,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/RectangleConstraint,13,150,        if (widthConstraintType == null) {,1,1,0,1,3,0,0,0,0,2,34,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,400,        return result;,1,0,0,0,0,0,0,0,0,1,14,4,0.005114262,0
defect4j,chart,org/jfree/chart/block/LengthConstraintType,13,59,    public static final LengthConstraintType RANGE ,1,0,0,0,0,3,0,1,0,5,46,2,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,487,        if (this.unitType == UnitType.RELATIVE) {,3,1,0,1,3,0,0,0,0,4,41,4,0.005114262,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,486,        double result = this.right;,2,0,0,0,0,0,0,0,0,2,27,5,0.005114262,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,224,        return iChronology.getMinYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.005098054,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,240,"            this.indexMap.put(key, new Integer(this.keys.size() - 1));",2,1,0,3,6,0,3,1,0,7,58,7,0.005082573,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,239,            this.values.add(value);,1,0,0,1,2,0,2,0,0,3,23,7,0.005082573,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,238,            this.keys.add(key);,1,0,0,1,2,0,2,0,0,3,19,7,0.005082573,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,233,        if (keyIndex >= 0) {,1,1,0,1,3,0,0,0,0,2,20,4,0.005082573,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,232,        int keyIndex = getIndex(key);,1,0,0,1,2,0,2,0,0,3,29,5,0.005082573,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,229,        if (key == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.005082573,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,52,"        this(field, null);",1,0,0,1,2,0,0,0,0,1,18,4,0.005065597,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,66,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,0.005065597,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,67,        iType = (type == null ? field.getType() : type);,3,1,0,2,4,0,2,0,0,7,48,4,0.005065597,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,16,63,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.005065597,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,3,70,"        this(source, null);",1,0,0,1,2,0,0,0,0,1,19,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,638,                fireSeriesChanged();,0,0,0,1,2,0,1,0,0,1,20,9,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,634,"            removeAgedItems(false);  // remove old items if necessary, but",0,0,0,1,2,0,1,0,0,2,62,7,0.005055612,0
defect4j,chart,org/jfree/data/general/Series,3,329,        for (int i = listenerList.length - 2; i >= 0; i -= 2) {,5,2,0,1,3,0,0,0,0,8,55,4,0.005055612,0
defect4j,chart,org/jfree/data/general/Series,3,328,        Object[] listenerList = this.listeners.getListenerList();,2,0,0,2,4,0,1,1,0,4,57,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,629,            if (getItemCount() > this.maximumItemCount) {,1,1,0,2,5,0,1,0,0,3,45,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,627,            updateBoundsForAddedItem(item);,0,0,0,1,2,0,2,0,0,2,31,7,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,626,        if (added) {,1,0,0,1,3,0,0,0,0,1,12,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,111,        this.selected = false;,1,0,0,0,0,0,0,0,0,3,22,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,106,        if (period == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1289,            return b;,1,0,0,0,0,0,0,0,0,1,9,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1288,        if (Double.isNaN(a)) {,0,0,0,2,5,0,3,0,0,3,22,5,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,141,        return this.value;,1,0,0,0,0,0,0,0,0,1,18,5,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,637,            if (notify) {,1,0,0,1,3,0,0,0,0,1,13,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,130,        return this.period;,1,0,0,0,0,0,0,0,0,1,19,5,0.005055612,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,3,82,        super(source);,1,0,0,1,2,0,0,0,0,1,14,4,0.005055612,0
defect4j,chart,org/jfree/data/event/SeriesChangeEvent,3,83,        this.summary = summary;,2,0,0,0,0,0,0,0,0,3,23,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,579,        item = (TimeSeriesDataItem) item.clone();,1,0,0,2,4,0,2,1,0,5,41,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,576,        if (item == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,110,        this.value = value;,2,0,0,0,0,0,0,0,0,3,19,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,582,            this.timePeriodClass = c;,2,0,0,0,0,0,0,0,0,3,25,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1215,"            this.maxY = maxIgnoreNaN(this.maxY, y);",2,0,0,1,2,0,2,0,0,5,39,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1212,        if (item.getValue() != null) {,0,1,0,2,5,0,2,0,0,3,30,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1213,            double y = yN.doubleValue();,1,0,0,1,2,0,2,0,0,3,28,7,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1211,        Number yN = item.getValue();,1,0,0,1,2,0,2,1,0,4,28,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,580,        Class c = item.getPeriod().getClass();,1,0,0,2,4,0,3,1,0,5,38,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,581,        if (this.timePeriodClass == null) {,1,1,0,1,3,0,0,0,0,2,35,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,597,        int count = getItemCount();,1,0,0,1,2,0,1,0,0,2,27,5,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,266,        Object clone = null;,1,0,0,0,0,0,0,1,0,2,20,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,268,            clone = super.clone();,2,0,0,1,2,0,0,0,0,3,22,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,596,        boolean added = false;,1,0,0,0,0,0,0,0,0,2,22,5,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,599,            this.data.add(item);,1,0,0,1,2,0,2,0,0,3,20,7,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,598,        if (count == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1265,        if (Double.isNaN(a)) {,0,0,0,2,5,0,3,0,0,3,22,5,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1266,            return b;,1,0,0,0,0,0,0,0,0,1,9,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,109,        this.period = period;,2,0,0,0,0,0,0,0,0,3,21,4,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,1214,"            this.minY = minIgnoreNaN(this.minY, y);",2,0,0,1,2,0,2,0,0,5,39,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,105,"    public TimeSeriesDataItem(RegularTimePeriod period, Number value) {",3,0,0,1,3,1,0,2,0,6,67,2,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,3,273,        return clone;,1,0,0,0,0,0,0,0,0,1,13,4,0.005055612,0
defect4j,chart,org/jfree/data/time/RegularTimePeriod,3,71,"public abstract class RegularTimePeriod implements TimePeriod, Comparable,",1,0,0,0,0,2,0,2,0,5,74,1,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,600,            added = true;,1,0,0,0,0,0,0,0,0,3,13,6,0.005055612,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,877,        if (getItemCount() > 1) {,0,1,0,2,5,0,1,0,0,2,25,4,0.005055612,0
defect4j,chart,org/jfree/data/general/Series,3,316,            notifyListeners(new SeriesChangeEvent(this));,0,0,0,2,4,0,1,1,0,2,45,7,0.005055612,0
defect4j,chart,org/jfree/data/general/Series,3,315,        if (this.notify) {,1,0,0,1,3,0,0,0,0,1,18,5,0.005055612,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,154,        if (i == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.005052006,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,155,            return -1;  // key not found,0,0,0,0,0,0,0,0,0,1,28,6,0.005052006,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,150,        if (key == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.005052006,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,153,        final Integer i = (Integer) this.indexMap.get(key);,2,0,0,2,4,1,2,2,0,7,51,4,0.005052006,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,92,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005050468,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,92,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.005033457,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,115,        return iChronology.getMinYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.00497913,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,115,        return iChronology.getMinYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.004975344,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,127,            return instant % iUnitMillis;,2,1,0,0,0,0,0,0,0,3,29,6,0.004964716,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,99,            this.centerBlock = block;,2,0,0,0,0,0,0,0,0,3,25,6,0.004962463,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,98,        if (key == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.004962463,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,741,            long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();,1,1,0,3,6,0,3,0,0,5,65,7,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,742,            boolean removed = false;,1,0,0,0,0,0,0,0,0,2,24,7,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,542,"            removeAgedItems(false);  // remove old items if necessary, but",0,0,0,1,2,0,1,0,0,2,62,7,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,546,                fireSeriesChanged();,0,0,0,1,2,0,1,0,0,1,20,9,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,545,            if (notify) {,1,0,0,1,3,0,0,0,0,1,13,6,0.004938272,0
defect4j,chart,org/jfree/data/general/Series,9,327,        for (int i = listenerList.length - 2; i >= 0; i -= 2) {,5,2,0,1,3,0,0,0,0,8,55,4,0.004938272,0
defect4j,chart,org/jfree/data/general/Series,9,326,        Object[] listenerList = this.listeners.getListenerList();,2,0,0,2,4,0,1,1,0,4,57,4,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,93,        if (period == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.004938272,0
defect4j,chart,org/jfree/data/general/SeriesChangeEvent,9,61,        super(source);,1,0,0,1,2,0,0,0,0,1,14,4,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,96,        this.period = period;,2,0,0,0,0,0,0,0,0,3,21,4,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,97,        this.value = value;,2,0,0,0,0,0,0,0,0,3,19,4,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,491,        if (item == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,494,        if (!item.getPeriod().getClass().equals(this.timePeriodClass)) {,1,0,0,4,9,0,4,0,0,6,64,4,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,92,"    public TimeSeriesDataItem(RegularTimePeriod period, Number value) {",3,0,0,1,3,1,0,2,0,6,67,2,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeriesDataItem,9,116,        return this.period;,1,0,0,0,0,0,0,0,0,1,19,5,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,341,        return (TimeSeriesDataItem) this.data.get(index);,1,0,0,2,4,0,2,1,0,4,49,5,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,509,            this.data.add(item);,1,0,0,1,2,0,2,0,0,3,20,7,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,506,        boolean added = false;,1,0,0,0,0,0,0,0,0,2,22,5,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,372,        return getDataItem(index).getPeriod();,0,0,0,2,4,0,3,0,0,3,38,5,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,748,            if (removed && notify) {,2,1,0,1,3,0,0,0,0,3,24,6,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,507,        int count = getItemCount();,1,0,0,1,2,0,1,0,0,2,27,5,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,740,        if (getItemCount() > 1) {,0,1,0,2,5,0,1,0,0,2,25,4,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,744,                    > this.maximumItemAge) {,1,0,0,0,2,0,0,0,0,1,24,8,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,515,                this.data.add(item);,1,0,0,1,2,0,2,0,0,3,20,9,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,514,            if (item.getPeriod().compareTo(last) > 0) {,0,1,0,3,7,0,4,0,0,5,43,6,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,516,                added = true;,1,0,0,0,0,0,0,0,0,3,13,8,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,510,            added = true;,1,0,0,0,0,0,0,0,0,3,13,6,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,513,            RegularTimePeriod last = getTimePeriod(getItemCount() - 1);,1,1,0,2,4,0,2,1,0,5,59,6,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,538,            if (getItemCount() > this.maximumItemCount) {,1,1,0,2,5,0,1,0,0,3,45,6,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,508,        if (count == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.004938272,0
defect4j,chart,org/jfree/data/time/RegularTimePeriod,9,70,"public abstract class RegularTimePeriod implements TimePeriod, Comparable,",1,0,0,0,0,2,0,2,0,5,74,1,0.004938272,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,536,        if (added) {,1,0,0,1,3,0,0,0,0,1,12,4,0.004938272,0
defect4j,chart,org/jfree/data/general/Series,9,314,            notifyListeners(new SeriesChangeEvent(this));,0,0,0,2,4,0,1,1,0,2,45,7,0.004938272,0
defect4j,chart,org/jfree/data/general/Series,9,313,        if (this.notify) {,1,0,0,1,3,0,0,0,0,1,18,5,0.004938272,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,126,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.00491953,0
defect4j,time,org/joda/time/base/BaseDateTime,16,295,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.004821983,0
defect4j,time,org/joda/time/chrono/GJChronology,6,316,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.004819786,0
defect4j,time,org/joda/time/chrono/GJChronology,6,306,        return withZone(DateTimeZone.UTC);,2,0,0,1,2,0,1,0,0,3,34,5,0.004819786,0
defect4j,time,org/joda/time/chrono/GJChronology,6,319,        if (zone == getZone()) {,1,1,0,2,5,0,1,0,0,3,24,4,0.004819786,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,160,        this.blocks.add(block);,1,0,0,1,2,0,2,0,0,3,23,5,0.004815811,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,161,"        this.arrangement.add(block, key);",1,0,0,1,2,0,3,0,0,4,33,5,0.004815811,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,150,"        add(block, null);",0,0,0,1,2,0,2,0,0,3,17,4,0.004815811,0
defect4j,time,org/joda/time/chrono/GJChronology,6,292,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.004801651,0
defect4j,time,org/joda/time/chrono/GJChronology,6,295,        return DateTimeZone.UTC;,2,0,0,0,0,0,0,0,0,2,24,5,0.004801651,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,101,        this.indexMap = new HashMap();,1,0,0,1,2,0,0,1,0,3,30,4,0.004791775,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,100,        this.values = new ArrayList();,1,0,0,1,2,0,0,1,0,3,30,4,0.004791775,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,98,    public DefaultKeyedValues() {,1,0,0,1,3,1,0,0,0,2,29,2,0.004791775,0
defect4j,chart,org/jfree/data/DefaultKeyedValues,18,99,        this.keys = new ArrayList();,1,0,0,1,2,0,0,1,0,3,28,4,0.004791775,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,584,            return value;,1,0,0,0,0,0,0,0,0,1,13,5,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,469,            if(inLiteral && ch != '\'') {,2,2,0,1,3,0,0,0,0,5,29,6,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,468,            char ch = array[i];,1,0,1,1,2,0,0,0,0,3,19,7,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,467,        for(int i=0; i<sz; i++) {,4,1,0,1,3,0,0,0,0,6,25,4,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,466,        int sz = array.length;,3,0,0,0,0,0,0,0,0,3,22,5,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,465,        Token previous = null;,1,0,0,0,0,0,0,1,0,2,22,4,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,464,        StringBuffer buffer = null;,1,0,0,0,0,0,0,1,0,2,27,4,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,463,        boolean inLiteral = false;,1,0,0,0,0,0,0,0,0,2,26,5,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,461,        java.util.ArrayList list = new java.util.ArrayList(array.length);,9,0,0,1,2,0,0,0,0,9,65,4,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,460,        char[] array = format.toCharArray();,1,0,0,2,4,0,2,0,0,3,36,5,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,501,            if(value != null) {,1,1,0,1,3,0,0,0,0,2,19,6,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,502,                if(previous != null && previous.getValue() == value) {,2,3,0,2,5,0,2,0,0,7,54,8,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,505,                    Token token = new Token(value);,2,0,0,1,2,0,0,2,0,4,31,10,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,506,                    list.add(token); ,0,0,0,1,2,0,3,0,0,3,16,11,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,507,                    previous = token;,2,0,0,0,0,0,0,0,0,3,17,10,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,509,                buffer = null; ,1,0,0,0,0,0,0,0,0,2,14,8,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,512,        return (Token[]) list.toArray( new Token[0] );,0,0,0,4,8,0,2,2,0,4,46,5,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,545,        Token(Object value) {,2,0,0,1,3,0,0,1,0,3,21,3,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,546,            this.value = value;,2,0,0,0,0,0,0,0,0,3,19,5,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,547,            this.count = 1;,1,0,0,0,0,0,0,0,0,2,15,5,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,474,            switch(ch) {,1,0,0,1,3,0,0,0,0,1,12,6,0.004761905,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,473,            Object value = null;,1,0,0,0,0,0,0,1,0,2,20,6,0.004761905,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,213,                leapYears--;,1,0,0,0,0,0,0,0,0,2,12,8,0.004746154,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,575,        int thisYear = getYear(instant);,1,0,0,1,2,0,2,0,0,3,32,5,0.004727344,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,576,"        int thisMonth = getMonthOfYear(instant, thisYear);",1,0,0,1,2,0,3,0,0,4,50,5,0.004727344,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,577,"        return getDaysInYearMonth(thisYear, thisMonth);",0,0,0,1,2,0,3,0,0,3,47,5,0.004727344,0
defect4j,chart,org/jfree/chart/block/BorderArrangement,13,86,    public BorderArrangement() {,1,0,0,1,3,1,0,0,0,2,28,2,0.004674047,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,190,                    dayOfYear++;,1,0,0,0,0,0,0,0,0,2,12,10,0.004655671,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,165,        return getWrappedField().getLeapDurationField();,0,0,0,2,4,0,2,0,0,2,48,5,0.004637847,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,444,"        return getMonthOfYear(millis, getYear(millis));",0,0,0,2,4,0,4,0,0,4,47,5,0.004547408,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,6,72,        return iChronology.getMonthOfYear(instant);,0,0,0,1,2,0,3,0,0,3,43,5,0.004547408,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,121,            return MAX_DAYS_PER_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,43,7,0.004448294,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,6,56,        return iChronology.getDayOfWeek(instant);,0,0,0,1,2,0,3,0,0,3,41,5,0.0044424,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,1,0,1,1,2,0,0,0,0,3,35,4,0.004423529,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,1,1,0,1,3,0,0,0,0,2,27,4,0.004423529,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,543,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.004416065,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,213,                leapYears--;,1,0,0,0,0,0,0,0,0,2,12,8,0.004380908,0
defect4j,chart,org/jfree/chart/plot/CategoryPlot,19,871,        return getRangeAxis(0);,0,0,0,1,2,0,1,0,0,1,23,5,0.004375,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,182,                if (!isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,3,24,8,0.004312079,0
defect4j,lang,org/apache/commons/lang3/Validate,38,121,        if (expression == false) {,1,1,0,1,3,0,0,0,0,3,26,4,0.004310345,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1311,                    digits = Integer.toString(value).length();,1,0,0,2,4,0,4,0,0,6,42,9,0.004310345,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1310,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",1,1,0,1,2,0,3,0,0,7,77,10,0.004310345,0
defect4j,time,org/joda/time/DateTimeFieldType,17,522,                    return chronology.secondOfDay();,0,0,0,1,2,0,2,0,0,2,32,7,0.00428562,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,435,"        return getMonthOfYear(millis, getYear(millis));",0,0,0,2,4,0,4,0,0,4,47,5,0.004274879,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,72,        return iChronology.getMonthOfYear(instant);,0,0,0,1,2,0,3,0,0,3,43,5,0.004266561,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,83,            year++;,1,0,0,0,0,0,0,0,0,2,7,6,0.004185455,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,79,            if (year == 0) {,1,1,0,1,3,0,0,0,0,2,16,6,0.004185455,0
defect4j,time,org/joda/time/chrono/GJChronology,6,921,            if (iConvertByWeekyear) {,1,0,0,1,3,0,0,0,0,1,25,5,0.004176264,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,78,"        FieldUtils.verifyValueBounds(this, value, getMinimumValue(),",0,0,0,1,3,0,4,0,0,4,60,5,0.00417443,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,80,        return instant + (value - get(instant)) * iUnitMillis;,3,3,0,2,4,0,2,0,0,8,54,4,0.00417443,0
defect4j,time,org/joda/time/chrono/GJChronology,6,75,public final class GJChronology extends AssembledChronology {,1,0,0,0,1,2,0,1,0,4,61,1,0.004167112,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,196,        instant += millisOfDay;,2,0,0,0,0,0,0,0,0,3,23,4,0.004159818,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,179,        if (dayOfYear > (31 + 28)) { // after Feb 28,1,2,0,2,5,0,0,0,0,3,44,4,0.004159818,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,175,        int thisYear = getYear(instant);,1,0,0,1,2,0,2,0,0,3,32,5,0.004159818,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,177,        int millisOfDay = getMillisOfDay(instant);,1,0,0,1,2,0,2,0,0,3,42,5,0.004159818,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,195,"        instant = getYearMonthDayMillis(year, 1, dayOfYear);",1,0,0,1,2,0,3,0,0,5,52,4,0.004159818,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,198,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.004159818,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,176,"        int dayOfYear = getDayOfYear(instant, thisYear);",1,0,0,1,2,0,3,0,0,4,48,5,0.004159818,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,494,        long yearStart = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,37,5,0.004156908,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,495,        return (int) ((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1;,4,3,0,3,6,0,0,0,0,7,76,4,0.004156908,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,85,        return year;,1,0,0,0,0,0,0,0,0,1,12,4,0.004126407,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,78,        if (year <= 0) {,1,1,0,1,3,0,0,0,0,2,16,4,0.004126407,0
defect4j,time,org/joda/time/chrono/JulianChronology,6,207,"        return super.getDateMidnightMillis(adjustYearForSet(year), monthOfYear, dayOfMonth);",3,0,0,2,4,0,2,0,0,5,84,5,0.004126407,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1541,                return iWallOffsets[i - 1];,1,1,1,1,2,0,0,0,0,3,27,8,0.00412454,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,560,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.004093869,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1577,                return instant;,1,0,0,0,0,0,0,0,0,1,15,7,0.004088475,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,338,        if (categoryKeys.length != this.startData[0].length) {,4,1,0,2,5,0,0,0,0,5,54,4,0.004055881,1
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,641,        return getSeriesIndex(rowKey);,0,0,0,1,2,0,2,0,0,2,30,5,0.004055881,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,335,        if (categoryKeys == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.004055881,0
defect4j,time,org/joda/time/field/FieldUtils,6,217,        if ((value < lowerBound) || (value > upperBound)) {,4,3,0,3,7,0,0,0,0,7,51,4,0.004029926,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,173,"        FieldUtils.verifyValueBounds(DateTimeFieldType.minuteOfHour(), minuteOfHour, 0, 59);",0,0,0,2,4,0,5,0,0,5,84,5,0.004027713,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,172,"        FieldUtils.verifyValueBounds(DateTimeFieldType.hourOfDay(), hourOfDay, 0, 23);",0,0,0,2,4,0,5,0,0,5,78,5,0.004027713,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,174,"        FieldUtils.verifyValueBounds(DateTimeFieldType.secondOfMinute(), secondOfMinute, 0, 59);",0,0,0,2,4,0,5,0,0,5,88,5,0.004027713,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,175,"        FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfSecond(), millisOfSecond, 0, 999);",0,0,0,2,4,0,5,0,0,5,89,5,0.004027713,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,177,"        return getDateMidnightMillis(year, monthOfYear, dayOfMonth)",0,0,0,1,2,0,4,0,0,4,59,9,0.004027713,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,167,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.004027713,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,615,"        return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);",0,0,0,1,2,0,4,0,0,4,60,5,0.003975886,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,614,"        FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));",0,0,0,3,6,0,8,0,0,8,115,5,0.003975886,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,613,"        FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));",0,0,0,3,6,0,7,0,0,7,97,5,0.00397056,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,612,"        FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());",0,0,0,4,8,0,7,0,0,7,89,5,0.00397056,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,691,        return getMaxMonth();,0,0,0,1,2,0,1,0,0,1,21,5,0.00397056,0
defect4j,time,org/joda/time/field/FieldUtils,6,235,        if ((value < lowerBound) || (value > upperBound)) {,4,3,0,3,7,0,0,0,0,7,51,4,0.003967902,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,131,        if ((base = iBase) != null && (iBaseFlags & 5) == 5) {,3,4,0,3,7,0,0,0,0,8,54,4,0.003922891,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,79,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.00388209,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,123,            return MIN_DAYS_PER_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,43,7,0.003874468,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1356,                buffer.append((char)(value % 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1355,                buffer.append((char)(value / 10 + '0'));,1,2,0,3,6,0,2,0,0,6,40,8,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1354,            if (value < 100) {,1,1,0,1,3,0,0,0,0,2,18,5,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1292,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,5,0,0,5,39,6,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1299,            if (value < 100) {,1,1,0,1,3,0,0,0,0,2,18,5,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1347,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,5,0,0,5,39,6,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,2,0,0,0,0,0,0,0,0,4,23,12,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,832,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",1,0,0,3,6,0,3,1,0,5,73,5,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1098,            buffer.append(mValue);,0,0,0,1,2,0,3,0,0,3,22,6,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1313,                for (int i = mSize; --i >= digits; ) {,4,1,0,1,3,0,0,0,0,6,38,7,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,5,0,0,5,39,8,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,633,"                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",3,0,0,1,2,0,2,0,0,6,56,7,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,1,1,0,1,3,0,0,0,0,2,19,7,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,639,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",3,0,0,1,2,0,2,0,0,6,51,7,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,871,        if (mTimeZoneForced) {,1,0,0,1,3,0,0,0,0,1,22,4,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,1,2,0,3,0,0,3,33,5,0.003831418,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,3,5,0,2,5,0,2,0,0,11,54,10,0.003831418,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,16,56,        return iChronology.getDayOfWeek(instant);,0,0,0,1,2,0,3,0,0,3,41,5,0.003797324,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,142,            return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,50,7,0.003780382,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,6,47,        return iChronology.getDayOfMonth(instant);,0,0,0,1,2,0,3,0,0,3,42,5,0.003775553,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,457,        int year = getYear(millis);,1,0,0,1,2,0,2,0,0,3,27,5,0.003775553,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,459,"        return getDayOfMonth(millis, year, month);",0,0,0,1,2,0,4,0,0,4,42,5,0.003775553,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,458,"        int month = getMonthOfYear(millis, year);",1,0,0,1,2,0,3,0,0,4,41,5,0.003775553,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,54,        return iChronology.getYear(instant);,0,0,0,1,2,0,3,0,0,3,36,5,0.003773143,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,120,        if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,5,0.003768333,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,534,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.003762508,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,221,        return MIN_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.003744456,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,479,        return (int) ((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1;,4,3,0,3,6,0,0,0,0,7,76,4,0.003725565,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,478,"        dateMillis += getTotalMillisByYearMonth(year, month);",1,0,0,1,2,0,3,0,0,5,53,4,0.003725565,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,477,        long dateMillis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,38,5,0.003725565,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,16,96,"        return iChronology.getDaysInMonthMaxForSet(instant, value);",0,0,0,1,2,0,4,0,0,4,59,5,0.003711134,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,134,        return (value > 28 ? getDaysInMonthMax(instant) : 28);,1,1,0,2,4,0,2,0,0,4,54,6,0.003711134,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,296,"        int thisDom = iChronology.getDayOfMonth(instant, thisYear);",1,0,0,1,2,0,4,0,0,5,59,5,0.003700979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,297,"        int maxDom = iChronology.getDaysInYearMonth(thisYear, month);",1,0,0,1,2,0,4,0,0,5,61,5,0.003700979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,294,        int thisYear = iChronology.getYear(instant);,1,0,0,1,2,0,3,0,0,4,44,5,0.003700979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,292,"        FieldUtils.verifyValueBounds(this, month, MIN, iMax);",0,0,0,1,2,0,5,0,0,5,53,5,0.003700979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,298,        if (thisDom > maxDom) {,2,1,0,1,3,0,0,0,0,3,23,4,0.003700979,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,459,"        return getDayOfMonth(millis, year, month);",0,0,0,1,2,0,4,0,0,4,42,5,0.003700979,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,303,"        return iChronology.getYearMonthDayMillis(thisYear, month, thisDom) +",0,1,0,1,2,0,5,0,0,6,68,4,0.003700979,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,458,"        int month = getMonthOfYear(millis, year);",1,0,0,1,2,0,3,0,0,4,41,5,0.003700979,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,88,        int i = (int)((millis - getYearMillis(year)) >> 10);,2,2,0,4,8,0,2,0,0,6,52,5,0.003690641,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,233,        return MILLIS_PER_YEAR / 2;,1,1,0,0,0,0,0,0,0,2,27,4,0.003681434,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,241,        return (1970L * MILLIS_PER_YEAR) / 2;,1,2,0,1,2,0,0,0,0,3,37,4,0.003681434,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,437,        return year;,1,0,0,0,0,0,0,0,0,1,12,4,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,408,        long unitMillis = getAverageMillisPerYearDividedByTwo();,1,0,0,1,2,0,1,0,0,2,56,5,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,409,        long i2 = (instant >> 1) + getApproxMillisAtEpochDividedByTwo();,2,2,0,2,4,0,1,0,0,5,64,5,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,418,        if (diff < 0) {,1,1,0,1,3,0,0,0,0,2,15,4,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,413,        int year = (int) (i2 / unitMillis);,3,1,0,2,4,0,0,0,0,4,35,5,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,410,        if (i2 < 0) {,1,1,0,1,3,0,0,0,0,2,13,4,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,416,        long diff = instant - yearStart;,3,1,0,0,0,0,0,0,0,4,32,5,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,415,        long yearStart = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,37,5,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,420,        } else if (diff >= DateTimeConstants.MILLIS_PER_DAY * 365L) {,3,2,0,1,4,0,0,0,0,5,61,5,0.003676848,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,139,        if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,5,0.003674559,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,84,"        return iChronology.setYear(instant, year);",0,0,0,1,2,0,4,0,0,4,42,5,0.003654109,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,82,        FieldUtils.verifyValueBounds,0,0,0,0,0,0,2,0,0,2,28,5,0.003654109,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,112,        return instant + (value - get(instant)) * iUnitMillis;,3,3,0,2,4,0,2,0,0,8,54,4,0.003654109,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,111,"        FieldUtils.verifyValueBounds(this, value, getMinimumValue(), getMaximumValue());",0,0,0,3,6,0,5,0,0,5,80,5,0.003654109,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,217,        return (year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY;,5,4,0,2,4,0,0,0,0,9,90,4,0.003640554,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,212,            if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,7,0.003640554,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,211,            leapYears = (year >> 2) - leapYears + (leapYears >> 2);,4,4,0,2,4,0,0,0,0,9,55,6,0.003640554,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,202,        int leapYears = year / 100;,2,1,0,0,0,0,0,0,0,3,27,5,0.003640554,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,203,        if (year < 0) {,1,1,0,1,3,0,0,0,0,2,15,4,0.003640554,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,197,        return ((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0);,3,8,0,5,10,0,0,0,0,11,69,4,0.003602746,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,552,            return (int) (instant % DateTimeConstants.MILLIS_PER_DAY);,3,1,0,2,4,0,0,0,0,4,58,8,0.003591834,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,198,                    iOffset = iZoneRef.getOffset(iPeriodStart);,1,0,0,1,2,0,3,0,0,5,43,9,0.003572479,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,103,        return getInfo(instant).getOffset(instant);,0,0,0,2,4,0,4,0,0,4,43,5,0.003572479,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1533,            i = ~i;,2,0,0,0,0,0,0,0,0,4,7,5,0.003572479,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1534,            if (i < transitions.length) {,3,1,0,1,3,0,0,0,0,4,29,5,0.003572479,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,197,                if (iOffset == Integer.MIN_VALUE) {,3,1,0,1,3,0,0,0,0,4,35,7,0.003572479,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,196,            if (iNextInfo == null || millis < iNextInfo.iPeriodStart) {,4,3,0,1,3,0,0,0,0,7,59,5,0.003572479,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,200,                return iOffset;,1,0,0,0,0,0,0,0,0,1,15,7,0.003572479,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,394,        long millis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,34,5,0.003572179,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,395,"        millis += getTotalMillisByYearMonth(year, month);",1,0,0,1,2,0,3,0,0,5,49,4,0.003572179,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,396,        return millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY;,4,3,0,2,4,0,0,0,0,7,74,4,0.003572179,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,240,        return this.data.size();,1,0,0,1,2,0,1,0,0,2,24,5,0.003571429,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1530,            if (i >= 0) {,1,1,0,1,3,0,0,0,0,2,13,5,0.003569268,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1528,            long[] transitions = iTransitions;,2,0,0,1,2,0,0,0,0,2,34,6,0.003569268,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1529,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,1,2,0,4,0,0,5,50,6,0.003569268,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,152,        long periodStart = millis & (0xffffffffL << 32);,2,2,0,1,2,0,0,0,0,4,48,5,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,155,        long end = periodStart | 0xffffffffL;,2,1,0,0,0,0,0,0,0,3,37,5,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,148,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,140,        int period = (int)(millis >> 32);,2,1,0,2,4,0,0,0,0,3,33,5,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,141,        Info[] cache = iInfoCache;,2,0,0,1,2,0,0,1,0,3,26,4,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,142,        int index = period & cInfoCacheMask;,3,1,0,0,0,0,0,0,0,4,36,5,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,143,        Info info = cache[index];,1,0,1,1,2,0,0,1,0,4,25,4,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,146,            cache[index] = info;,1,0,1,1,2,0,0,0,0,4,20,6,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,159,            if (next == periodStart || next > end) {,4,3,0,1,3,0,0,0,0,7,40,6,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,158,            long next = iZone.nextTransition(periodStart);,1,0,0,1,2,0,3,0,0,4,46,7,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,156,        Info chain = info;,2,0,0,0,0,0,0,1,0,3,18,4,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,177,        private int iOffset = Integer.MIN_VALUE;,3,0,0,0,0,1,0,0,0,4,40,3,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,178,        private int iStandardOffset = Integer.MIN_VALUE;,3,0,0,0,0,1,0,0,0,4,48,3,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,166,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,153,"        Info info = new Info(iZone, periodStart);",3,0,0,1,2,0,0,2,0,5,41,4,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,180,"        Info(DateTimeZone zone, long periodStart) {",3,0,0,1,3,0,0,1,0,4,43,3,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,181,            iPeriodStart = periodStart;,2,0,0,0,0,0,0,0,0,3,27,5,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,182,            iZoneRef = zone;,2,0,0,0,0,0,0,0,0,3,16,5,0.003556462,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,107,        if ((base = iBase) != null) {,2,1,0,2,5,0,0,0,0,4,29,4,0.003556462,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1571,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,1,2,0,4,0,0,5,50,6,0.003556462,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1570,            long[] transitions = iTransitions;,2,0,0,1,2,0,0,0,0,2,34,6,0.003556462,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1573,            if (i < transitions.length) {,3,1,0,1,3,0,0,0,0,4,29,5,0.003556462,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1572,            i = (i >= 0) ? (i + 1) : ~i;,4,2,0,2,4,0,0,0,0,8,28,5,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,144,        if (info == null || (int)((info.iPeriodStart >> 32)) != period) {,4,4,0,4,9,0,0,0,0,8,65,4,0.003556462,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,145,            info = createInfo(millis);,1,0,0,1,2,0,2,0,0,4,26,6,0.003556462,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,108,            return base.getZone();,0,0,0,1,2,0,2,0,0,2,22,7,0.003556462,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,78,"        FieldUtils.verifyValueBounds(this, value, getMinimumValue(),",0,0,0,1,3,0,4,0,0,4,60,5,0.003540546,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,80,        return instant + (value - get(instant)) * iUnitMillis;,3,3,0,2,4,0,2,0,0,8,54,4,0.003540546,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2116,                buf.append(iZeroOffsetPrintText);,0,0,0,1,2,0,3,0,0,3,33,8,0.003529465,0
defect4j,time,org/joda/time/DateTime,17,220,"        super(instant, chronology);",2,0,0,1,2,0,0,0,0,2,27,4,0.003527607,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,198,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.003509013,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,179,        if (dayOfYear > (31 + 28)) { // after Feb 28,1,2,0,2,5,0,0,0,0,3,44,4,0.003509013,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,175,        int thisYear = getYear(instant);,1,0,0,1,2,0,2,0,0,3,32,5,0.003509013,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,177,        int millisOfDay = getMillisOfDay(instant);,1,0,0,1,2,0,2,0,0,3,42,5,0.003509013,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,176,"        int dayOfYear = getDayOfYear(instant, thisYear);",1,0,0,1,2,0,3,0,0,4,48,5,0.003509013,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,196,        instant += millisOfDay;,2,0,0,0,0,0,0,0,0,3,23,4,0.003509013,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,195,"        instant = getYearMonthDayMillis(year, 1, dayOfYear);",1,0,0,1,2,0,3,0,0,5,52,4,0.003509013,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,485,        long yearStart = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,37,5,0.003502754,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,486,        return (int) ((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1;,4,3,0,3,6,0,0,0,0,7,76,4,0.003502754,0
defect4j,time,org/joda/time/base/BaseDateTime,16,256,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.003465523,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,551,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.003462446,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,131,        return iRange - 1;,1,1,0,0,0,0,0,0,0,2,18,4,0.003456302,0
defect4j,time,org/joda/time/base/BaseDateTime,16,253,        iChronology = checkChronology(chronology);,1,0,0,1,2,0,2,0,0,4,42,4,0.003441009,0
defect4j,time,org/joda/time/base/BaseDateTime,16,254,"        long instant = iChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,",1,0,0,0,1,0,5,0,0,6,75,5,0.003441009,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,748,        if (info == null || info.iYear != year) {,4,3,0,1,3,0,0,0,0,7,41,4,0.003436613,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,781,            iFirstDayMillis = firstDayMillis;,2,0,0,0,0,0,0,0,0,3,33,5,0.003436613,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,780,            iYear = year;,2,0,0,0,0,0,0,0,0,3,13,5,0.003436613,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,749,"            info = new YearInfo(year, calculateFirstDayOfYearMillis(year));",2,0,0,2,4,0,2,1,0,6,63,6,0.003436613,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,750,            iYearInfoCache[year & CACHE_MASK] = info;,3,1,1,1,2,0,0,0,0,6,41,6,0.003436613,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,752,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.003436613,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,747,        YearInfo info = iYearInfoCache[year & CACHE_MASK];,3,1,1,1,2,0,0,1,0,6,50,4,0.003436613,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,369,        return getYearInfo(year).iFirstDayMillis;,1,0,0,1,2,0,2,0,0,3,41,5,0.003436613,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,779,"        YearInfo(int year, long firstDayMillis) {",3,0,0,1,3,0,0,0,0,3,41,3,0.003436613,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,636,"                rule = selectNumberRule(Calendar.MINUTE, tokenLen);",3,0,0,1,2,0,2,0,0,6,51,7,0.003380663,0
defect4j,time,org/joda/time/field/FieldUtils,16,216,        if ((value < lowerBound) || (value > upperBound)) {,4,3,0,3,7,0,0,0,0,7,51,4,0.003321981,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,606,"        return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);",0,0,0,1,2,0,4,0,0,4,60,5,0.003313285,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,605,"        FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));",0,0,0,3,6,0,8,0,0,8,115,5,0.003313285,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,682,        return getMaxMonth();,0,0,0,1,2,0,1,0,0,1,21,5,0.003307505,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,603,"        FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());",0,0,0,4,8,0,7,0,0,7,89,5,0.003307505,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,604,"        FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));",0,0,0,3,6,0,7,0,0,7,97,5,0.003307505,0
defect4j,time,org/joda/time/field/FieldUtils,16,234,        if ((value < lowerBound) || (value > upperBound)) {,4,3,0,3,7,0,0,0,0,7,51,4,0.00330462,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1345,                    value = ((value << 3) + (value << 1)) + text.charAt(i++) - '0';,4,5,0,4,8,0,2,0,0,14,63,9,0.003276277,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,77,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,0.003250457,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,123,            return MIN_DAYS_PER_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,43,7,0.003211322,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,120,        if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,5,0.003108277,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,448,        int year = getYear(millis);,1,0,0,1,2,0,2,0,0,3,27,5,0.003108277,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,449,"        int month = getMonthOfYear(millis, year);",1,0,0,1,2,0,3,0,0,4,41,5,0.003108277,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,450,"        return getDayOfMonth(millis, year, month);",0,0,0,1,2,0,4,0,0,4,42,5,0.003108277,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,16,47,        return iChronology.getDayOfMonth(instant);,0,0,0,1,2,0,3,0,0,3,42,5,0.003108277,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,79,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.003102978,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,54,        return iChronology.getYear(instant);,0,0,0,1,2,0,3,0,0,3,36,5,0.003089785,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,142,            return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,50,7,0.003074052,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,468,        long dateMillis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,38,5,0.003068831,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,469,"        dateMillis += getTotalMillisByYearMonth(year, month);",1,0,0,1,2,0,3,0,0,5,53,4,0.003068831,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,470,        return (int) ((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1;,4,3,0,3,6,0,0,0,0,7,76,4,0.003068831,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,221,        return MIN_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.003066226,0
defect4j,time,org/joda/time/DateTimeUtils,6,285,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.003061254,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,377,        return denominator;,1,0,0,0,0,0,0,0,0,1,19,4,0.003039514,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,368,        return numerator;,1,0,0,0,0,0,0,0,0,1,17,4,0.003039514,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,88,        int i = (int)((millis - getYearMillis(year)) >> 10);,2,2,0,4,8,0,2,0,0,6,52,5,0.003030055,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,262,            Arrays.sort(this.chars);,1,0,0,1,2,0,2,0,0,3,24,6,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,261,            this.chars = (char[]) chars.clone();,1,0,0,3,6,0,2,0,0,4,36,5,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,1,0,0,1,2,3,0,2,0,6,63,2,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,1,0,0,1,2,3,0,2,0,7,77,2,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,1,0,0,1,2,3,0,2,0,6,65,2,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",1,0,0,1,2,3,0,2,0,7,69,2,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",1,0,0,2,4,3,1,2,0,8,94,2,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,294,            this.ch = ch;,2,0,0,0,0,0,0,0,0,3,13,5,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",1,0,0,2,4,3,1,2,0,8,88,2,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,1,0,0,1,2,3,0,2,0,7,69,2,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,1,0,0,1,2,3,0,2,0,7,68,2,0.003008283,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",1,0,0,1,2,3,0,2,0,7,76,2,0.003008283,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,233,        return MILLIS_PER_YEAR / 2;,1,1,0,0,0,0,0,0,0,2,27,4,0.003002034,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,241,        return (1970L * MILLIS_PER_YEAR) / 2;,1,2,0,1,2,0,0,0,0,3,37,4,0.003002034,0
defect4j,time,org/joda/time/DateTimeUtils,17,167,        Chronology chrono = instant.getChronology();,1,0,0,1,2,0,2,1,0,4,44,4,0.003000097,0
defect4j,time,org/joda/time/DateTimeUtils,17,168,        if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.003000097,0
defect4j,time,org/joda/time/DateTimeUtils,17,171,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.003000097,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,401,        if (i2 < 0) {,1,1,0,1,3,0,0,0,0,2,13,4,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,404,        int year = (int) (i2 / unitMillis);,3,1,0,2,4,0,0,0,0,4,35,5,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,406,        long yearStart = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,37,5,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,411,        } else if (diff >= DateTimeConstants.MILLIS_PER_DAY * 365L) {,3,2,0,1,4,0,0,0,0,5,61,5,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,428,        return year;,1,0,0,0,0,0,0,0,0,1,12,4,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,409,        if (diff < 0) {,1,1,0,1,3,0,0,0,0,2,15,4,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,400,        long i2 = (instant >> 1) + getApproxMillisAtEpochDividedByTwo();,2,2,0,2,4,0,1,0,0,5,64,5,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,407,        long diff = instant - yearStart;,3,1,0,0,0,0,0,0,0,4,32,5,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,399,        long unitMillis = getAverageMillisPerYearDividedByTwo();,1,0,0,1,2,0,1,0,0,2,56,5,0.002996977,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,139,        if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,5,0.002974358,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,890,"            rules[i].appendTo(buf, calendar);",0,0,1,2,4,0,3,0,0,5,33,7,0.002955665,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,892,        return buf;,1,0,0,0,0,0,0,0,0,1,11,4,0.002955665,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,887,        Rule[] rules = mRules;,2,0,0,1,2,0,0,1,0,3,22,4,0.002955665,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,889,        for (int i = 0; i < len; i++) {,4,1,0,1,3,0,0,0,0,6,31,4,0.002955665,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,888,        int len = mRules.length;,3,0,0,0,0,0,0,0,0,3,24,5,0.002955665,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,5,0,0,5,37,7,0.002941176,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,475,            ensureCapacity(len + strLen);,2,1,0,1,2,0,1,0,0,4,29,7,0.002941176,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,474,            int len = length();,1,0,0,1,2,0,1,0,0,2,19,7,0.002941176,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,477,            size += strLen;,2,0,0,0,0,0,0,0,0,3,15,6,0.002941176,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,202,        int leapYears = year / 100;,2,1,0,0,0,0,0,0,0,3,27,5,0.002932249,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,203,        if (year < 0) {,1,1,0,1,3,0,0,0,0,2,15,4,0.002932249,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,217,        return (year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY;,5,4,0,2,4,0,0,0,0,9,90,4,0.002932249,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,212,            if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,7,0.002932249,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,211,            leapYears = (year >> 2) - leapYears + (leapYears >> 2);,4,4,0,2,4,0,0,0,0,9,55,6,0.002932249,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,197,        return ((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0);,3,8,0,5,10,0,0,0,0,11,69,4,0.002912705,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,473,        if (strLen > 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.00286445,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,472,        int strLen = str.length();,1,0,0,1,2,0,2,0,0,3,26,5,0.00286445,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,469,        if (str == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.00286445,0
defect4j,time,org/joda/time/DateTimeUtils,17,164,        if (instant == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.002843743,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,387,        return millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY;,4,3,0,2,4,0,0,0,0,7,74,4,0.002826851,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,386,"        millis += getTotalMillisByYearMonth(year, month);",1,0,0,1,2,0,3,0,0,5,49,4,0.002826851,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,385,        long millis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,34,5,0.002826851,0
defect4j,time,org/joda/time/base/BaseDateTime,16,284,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.002808224,0
defect4j,time,org/joda/time/DateTimeUtils,17,149,        return instant.getMillis();,0,0,0,1,2,0,2,0,0,2,27,5,0.002765127,0
defect4j,time,org/joda/time/base/BaseDateTime,16,270,        return DateTimeUtils.getChronology(chronology);,0,0,0,1,2,0,3,0,0,3,47,5,0.002690949,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,743,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,741,            iYearInfoCache[year & CACHE_MASK] = info;,3,1,1,1,2,0,0,0,0,6,41,6,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,740,"            info = new YearInfo(year, calculateFirstDayOfYearMillis(year));",2,0,0,2,4,0,2,1,0,6,63,6,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,360,        return getYearInfo(year).iFirstDayMillis;,1,0,0,1,2,0,2,0,0,3,41,5,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,772,            iFirstDayMillis = firstDayMillis;,2,0,0,0,0,0,0,0,0,3,33,5,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,770,"        YearInfo(int year, long firstDayMillis) {",3,0,0,1,3,0,0,0,0,3,41,3,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,771,            iYear = year;,2,0,0,0,0,0,0,0,0,3,13,5,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,738,        YearInfo info = iYearInfoCache[year & CACHE_MASK];,3,1,1,1,2,0,0,1,0,6,50,4,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,739,        if (info == null || info.iYear != year) {,4,3,0,1,3,0,0,0,0,7,41,4,0.002682192,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,561,            return (int) (instant % DateTimeConstants.MILLIS_PER_DAY);,3,1,0,2,4,0,0,0,0,4,58,8,0.002675089,0
defect4j,time,org/joda/time/DateTimeUtils,6,282,        if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.002665066,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,6,127,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,0.002621509,0
defect4j,time,org/joda/time/DateTimeUtils,17,146,        if (instant == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0.002618346,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,6,90,        return iField.getRangeDurationField();,0,0,0,1,2,0,2,0,0,2,38,5,0.002612015,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,6,58,        return iChronology.weekyears();,0,0,0,1,2,0,2,0,0,2,31,5,0.002612015,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,315,        return iParam;,1,0,0,0,0,0,0,0,0,1,14,4,0.002612015,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,139,        return iRangeField;,1,0,0,0,0,0,0,0,0,1,19,4,0.002612015,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,6,56,        return iChronology.years();,0,0,0,1,2,0,2,0,0,2,27,5,0.002612015,0
defect4j,time,org/joda/time/field/BaseDurationField,6,55,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,0.002610833,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,122,        return iRangeField;,1,0,0,0,0,0,0,0,0,1,19,4,0.002604937,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,6,315,        return iChronology.years();,0,0,0,1,2,0,2,0,0,2,27,5,0.002602587,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,6,51,        return iChronology.months();,0,0,0,1,2,0,2,0,0,2,28,5,0.002602587,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,141,        return iUnitField;,1,0,0,0,0,0,0,0,0,1,18,4,0.002599068,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,45,public final class GregorianChronology extends BasicGJChronology {,1,0,0,0,1,2,0,1,0,4,66,1,0.00255641,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,128,                if (zone == DateTimeZone.UTC) {,3,1,0,1,3,0,0,0,0,4,31,8,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,192,            super.assemble(fields);,2,0,0,1,2,0,0,0,0,2,23,7,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,100,"        return getInstance(zone, 4);",0,0,0,1,2,0,2,0,0,2,28,5,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,135,                chronos[minDaysInFirstWeek - 1] = chrono;,2,1,1,1,2,0,0,0,0,5,41,8,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,225,        return MAX_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,229,        return MILLIS_PER_YEAR;,1,0,0,0,0,0,0,0,0,1,23,4,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,71,        INSTANCE_UTC = getInstance(DateTimeZone.UTC);,3,0,0,1,2,0,1,0,0,5,45,4,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,111,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,122,                chrono = chronos[minDaysInFirstWeek - 1];,2,1,1,1,2,0,0,0,0,5,41,8,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,127,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,129,"                    chrono = new GregorianChronology(null, null, minDaysInFirstWeek);",2,0,0,1,2,0,0,1,0,5,65,10,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,118,                chronos = new GregorianChronology[7];,1,0,0,1,2,0,0,1,0,3,37,8,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,119,"                cCache.put(zone, chronos);",0,0,0,1,2,0,4,0,0,4,26,9,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,115,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,237,        return MILLIS_PER_MONTH;,1,0,0,0,0,0,0,0,0,1,24,4,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,138,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,68,"    private static final Map<DateTimeZone, GregorianChronology[]> cCache = new HashMap<DateTimeZone, GregorianChronology[]>();",1,0,0,3,6,3,0,6,0,10,122,2,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,116,            GregorianChronology[] chronos = cCache.get(zone);,1,0,0,2,4,0,3,1,0,5,49,6,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,117,            if (chronos == null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,148,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,0.00255301,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,191,        if (getBase() == null) {,0,1,0,2,5,0,1,0,0,3,24,4,0.00255301,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,61,            minSum += millis;,2,0,0,0,0,0,0,0,0,3,17,6,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,56,        long minSum = 0;,1,0,0,0,0,0,0,0,0,1,16,5,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,62,            MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = minSum;,2,1,1,1,2,0,0,0,0,5,48,6,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,66,            maxSum += millis;,2,0,0,0,0,0,0,0,0,3,17,6,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,67,            MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = maxSum;,2,1,1,1,2,0,0,0,0,5,48,6,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,64,            millis = MAX_DAYS_PER_MONTH_ARRAY[i],1,0,1,1,2,0,0,0,0,4,36,6,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,57,        long maxSum = 0;,1,0,0,0,0,0,0,0,0,1,16,5,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,54,        MAX_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];,1,0,0,1,2,0,0,0,0,2,47,4,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,53,        MIN_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];,1,0,0,1,2,0,0,0,0,2,47,4,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,59,            long millis = MIN_DAYS_PER_MONTH_ARRAY[i],1,0,1,1,2,0,0,0,0,3,41,7,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,58,        for (int i = 0; i < 11; i++) {,3,1,0,1,3,0,0,0,0,5,30,4,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,42,    private static final int[] MIN_DAYS_PER_MONTH_ARRAY = {,1,0,0,1,3,3,0,0,0,4,55,2,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,45,    private static final int[] MAX_DAYS_PER_MONTH_ARRAY = {,1,0,0,1,3,3,0,0,0,4,55,2,0.002550748,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,6,75,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,0.002550748,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,548,                if (isSupported(f = chrono.centuryOfEra())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,228,        return iDayOfMonth;,1,0,0,0,0,0,0,0,0,1,19,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,458,                    halfdays = f;,2,0,0,0,0,0,0,0,0,3,13,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,256,        return iMonths;,1,0,0,0,0,0,0,0,0,1,15,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,252,        return iWeekyearOfCentury;,1,0,0,0,0,0,0,0,0,1,26,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,470,                    months = f;,2,0,0,0,0,0,0,0,0,3,11,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,509,                if (isSupported(f = chrono.hourOfHalfday())) {,1,0,0,3,7,0,3,0,0,5,46,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,558,            return field == null ? false : field.isSupported();,1,1,0,1,2,0,2,0,0,5,51,6,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,494,                if (isSupported(f = chrono.secondOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,497,                if (isSupported(f = chrono.minuteOfHour())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,551,                if (isSupported(f = chrono.era())) {,1,0,0,3,7,0,3,0,0,5,36,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,552,                    era = f;,2,0,0,0,0,0,0,0,0,3,8,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,527,                if (isSupported(f = chrono.weekOfWeekyear())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,172,        return iSecondOfMinute;,1,0,0,0,0,0,0,0,0,1,23,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,522,                    dayOfMonth = f;,2,0,0,0,0,0,0,0,0,3,15,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,478,                if (isSupported(f = chrono.eras())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,476,                    centuries = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,475,                if (isSupported(f = chrono.centuries())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,473,                    years = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,472,                if (isSupported(f = chrono.years())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,188,        return iMinuteOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,504,                    hourOfDay = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,180,        return iMinutes;,1,0,0,0,0,0,0,0,0,1,16,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,184,        return iMinuteOfHour;,1,0,0,0,0,0,0,0,0,1,21,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,461,                    days = f;,2,0,0,0,0,0,0,0,0,3,9,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,212,        return iClockhourOfHalfday;,1,0,0,0,0,0,0,0,0,1,27,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,216,        return iHalfdayOfDay;,1,0,0,0,0,0,0,0,0,1,21,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,507,                    clockhourOfDay = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,501,                    minuteOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,495,                    secondOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,540,                    year = f;,2,0,0,0,0,0,0,0,0,3,9,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,176,        return iSecondOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,260,        return iMonthOfYear;,1,0,0,0,0,0,0,0,0,1,20,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,264,        return iYears;,1,0,0,0,0,0,0,0,0,1,14,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,498,                    minuteOfHour = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,469,                if (isSupported(f = chrono.months())) {,1,0,0,3,7,0,3,0,0,5,39,7,0.002546236,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,92,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,549,                    centuryOfEra = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,543,                    yearOfEra = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,546,                    yearOfCentury = f;,2,0,0,0,0,0,0,0,0,3,18,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,168,        return iSeconds;,1,0,0,0,0,0,0,0,0,1,16,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,448,                if (isSupported(f = chrono.seconds())) {,1,0,0,3,7,0,3,0,0,5,40,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,451,                if (isSupported(f = chrono.minutes())) {,1,0,0,3,7,0,3,0,0,5,40,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,446,                    millis = f;,2,0,0,0,0,0,0,0,0,3,11,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,445,                if (isSupported(f = chrono.millis())) {,1,0,0,3,7,0,3,0,0,5,39,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,457,                if (isSupported(f = chrono.halfdays())) {,1,0,0,3,7,0,3,0,0,5,41,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,542,                if (isSupported(f = chrono.yearOfEra())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,545,                if (isSupported(f = chrono.yearOfCentury())) {,1,0,0,3,7,0,3,0,0,5,46,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,466,                if (isSupported(f = chrono.weekyears())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,164,        return iMillisOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,224,        return iDayOfWeek;,1,0,0,0,0,0,0,0,0,1,18,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,220,        return iDays;,1,0,0,0,0,0,0,0,0,1,13,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,533,                if (isSupported(f = chrono.weekyearOfCentury())) {,1,0,0,3,7,0,3,0,0,5,50,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,530,                if (isSupported(f = chrono.weekyear())) {,1,0,0,3,7,0,3,0,0,5,41,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,531,                    weekyear = f;,2,0,0,0,0,0,0,0,0,3,13,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,536,                if (isSupported(f = chrono.monthOfYear())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,537,                    monthOfYear = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,534,                    weekyearOfCentury = f;,2,0,0,0,0,0,0,0,0,3,22,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,539,                if (isSupported(f = chrono.year())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,506,                if (isSupported(f = chrono.clockhourOfDay())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,156,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,503,                if (isSupported(f = chrono.hourOfDay())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.002546236,0
defect4j,time,org/joda/time/field/MillisDurationField,6,62,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,500,                if (isSupported(f = chrono.minuteOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,276,        return iYearOfCentury;,1,0,0,0,0,0,0,0,0,1,22,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,272,        return iYearOfEra;,1,0,0,0,0,0,0,0,0,1,18,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,280,        return iCenturies;,1,0,0,0,0,0,0,0,0,1,18,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,284,        return iCenturyOfEra;,1,0,0,0,0,0,0,0,0,1,21,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,288,        return iEras;,1,0,0,0,0,0,0,0,0,1,13,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,455,                    hours = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,454,                if (isSupported(f = chrono.hours())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,452,                    minutes = f;,2,0,0,0,0,0,0,0,0,3,12,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,515,                if (isSupported(f = chrono.halfdayOfDay())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,449,                    seconds = f;,2,0,0,0,0,0,0,0,0,3,12,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,491,                if (isSupported(f = chrono.secondOfMinute())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,492,                    secondOfMinute = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,232,        return iDayOfYear;,1,0,0,0,0,0,0,0,0,1,18,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,236,        return iWeeks;,1,0,0,0,0,0,0,0,0,1,14,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,244,        return iWeekyears;,1,0,0,0,0,0,0,0,0,1,18,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,240,        return iWeekOfWeekyear;,1,0,0,0,0,0,0,0,0,1,23,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,248,        return iWeekyear;,1,0,0,0,0,0,0,0,0,1,17,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,486,                    millisOfSecond = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,485,                if (isSupported(f = chrono.millisOfSecond())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,528,                    weekOfWeekyear = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,525,                    dayOfYear = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,524,                if (isSupported(f = chrono.dayOfYear())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,521,                if (isSupported(f = chrono.dayOfMonth())) {,1,0,0,3,7,0,3,0,0,5,43,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,488,                if (isSupported(f = chrono.millisOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,489,                    millisOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,200,        return iClockhourOfDay;,1,0,0,0,0,0,0,0,0,1,23,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,467,                    weekyears = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,204,        return iHalfdays;,1,0,0,0,0,0,0,0,0,1,17,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,464,                    weeks = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,460,                if (isSupported(f = chrono.days())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,463,                if (isSupported(f = chrono.weeks())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,516,                    halfdayOfDay = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,510,                    hourOfHalfday = f;,2,0,0,0,0,0,0,0,0,3,18,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,512,                if (isSupported(f = chrono.clockhourOfHalfday())) {,1,0,0,3,7,0,3,0,0,5,51,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,160,        return iMillisOfSecond;,1,0,0,0,0,0,0,0,0,1,23,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,192,        return iHours;,1,0,0,0,0,0,0,0,0,1,14,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,196,        return iHourOfDay;,1,0,0,0,0,0,0,0,0,1,18,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,208,        return iHourOfHalfday;,1,0,0,0,0,0,0,0,0,1,22,4,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,562,            return field == null ? false : field.isSupported();,1,1,0,1,2,0,2,0,0,5,51,6,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,513,                    clockhourOfHalfday = f;,2,0,0,0,0,0,0,0,0,3,23,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,518,                if (isSupported(f = chrono.dayOfWeek())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,519,                    dayOfWeek = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.002546236,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,292,        return iEra;,1,0,0,0,0,0,0,0,0,1,12,4,0.002546236,0
defect4j,time,org/joda/time/field/DecoratedDurationField,6,56,        if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,6,41,"        super(DateTimeFieldType.dayOfMonth(), days);",1,0,0,2,4,0,2,0,0,3,44,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,6,42,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDurationField,6,59,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,59,        if (rangeField == null) {,1,1,0,1,3,0,0,0,0,2,25,4,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,58,        DurationField rangeField = field.getDurationField();,1,0,0,1,2,0,2,1,0,4,52,4,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,54,        if (divisor < 2) {,1,1,0,1,3,0,0,0,0,2,18,4,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,52,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,58,        if (divisor < 2) {,1,1,0,1,3,0,0,0,0,2,18,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,45,"        super(DateTimeFieldType.year(), chronology.getAverageMillisPerYear());",0,0,0,3,6,0,4,0,0,4,70,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,46,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/field/MillisDurationField,6,71,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,138,        iMinDaysInFirstWeek = minDaysInFirstWeek;,2,0,0,0,0,0,0,0,0,3,41,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,56,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,133,        if (minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7) {,2,3,0,1,3,0,0,0,0,5,55,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,70,        iDivisor = divisor;,2,0,0,0,0,0,0,0,0,3,19,4,0.00254511,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,69,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,46,"        this(field, (field == null ? null : field.getType()), offset, Integer.MIN_VALUE, Integer.MAX_VALUE);",7,1,0,3,6,0,2,0,0,10,100,4,0.00254511,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,6,97,        return getWrappedField().getMaximumValue();,0,0,0,2,4,0,2,0,0,2,43,5,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,6,70,        return iField;,1,0,0,0,0,0,0,0,0,1,14,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,291,        fields.monthOfYear = new GJMonthOfYearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,58,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,290,"        fields.dayOfYear = new BasicDayOfYearDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,70,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,293,"        fields.weekOfWeekyear = new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);",4,0,0,1,2,0,0,1,0,6,81,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,292,        fields.weekyear = new BasicWeekyearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,55,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,295,        field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,297,        fields.weekyearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,51,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,329,            iMinutes   = (f = fields.minutes)   != null ? f : super.minutes();,6,1,0,2,4,0,0,0,0,9,66,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,328,            iSeconds   = (f = fields.seconds)   != null ? f : super.seconds();,6,1,0,2,4,0,0,0,0,9,66,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,323,        assemble(fields);,0,0,0,1,2,0,2,0,0,2,17,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,320,        if (iBase != null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,327,            iMillis    = (f = fields.millis)    != null ? f : super.millis();,6,1,0,2,4,0,0,0,0,9,65,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,266,        fields.clockhourOfDay = cClockhourOfDayField;,3,0,0,0,0,0,0,0,0,4,45,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,260,        fields.secondOfMinute = cSecondOfMinuteField;,3,0,0,0,0,0,0,0,0,4,45,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,262,        fields.minuteOfHour = cMinuteOfHourField;,3,0,0,0,0,0,0,0,0,4,41,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,263,        fields.minuteOfDay = cMinuteOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,268,        fields.halfdayOfDay = cHalfdayOfDayField;,3,0,0,0,0,0,0,0,0,4,41,4,0.00254511,0
defect4j,time,org/joda/time/chrono/GJMonthOfYearDateTimeField,6,37,"        super(chronology, 2);",1,0,0,1,2,0,0,0,0,1,21,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,363,        return ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,16,4,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,183,        return iMax;,1,0,0,0,0,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,318,        return MONTH_OF_YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,158,        return iDivisor - 1;,1,1,0,0,0,0,0,0,0,2,20,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,126,    private transient final YearInfo[] iYearInfoCache = new YearInfo[CACHE_SIZE];,1,0,1,2,4,3,0,2,0,7,77,2,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,90,        cMillisOfSecondField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,47,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,93,        cMillisOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,96,        cSecondOfMinuteField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,47,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,99,        cSecondOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,362,            iYearOfEra          = (f = fields.yearOfEra)          != null ? f : super.yearOfEra();,6,1,0,2,4,0,0,0,0,9,86,5,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,55,        if (iUnitMillis < 1) {,1,1,0,1,3,0,0,0,0,2,22,4,0.00254511,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,51,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,119,        return iChronology.getMaxYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,87,        cWeeksField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,38,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,65,        if (iRange < 2) {,1,1,0,1,3,0,0,0,0,2,17,4,0.00254511,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,54,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,69,        iRangeField = range;,2,0,0,0,0,0,0,0,0,3,20,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,173,        return MILLIS_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,50,        if (!unit.isPrecise()) {,0,0,0,2,5,0,2,0,0,3,24,4,0.00254511,0
defect4j,time,org/joda/time/field/ScaledDurationField,6,51,        iScalar = scalar;,2,0,0,0,0,0,0,0,0,3,17,4,0.00254511,0
defect4j,time,org/joda/time/field/MillisDurationField,6,38,    public static final DurationField INSTANCE = new MillisDurationField();,1,0,0,1,2,3,0,2,0,6,71,2,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,73,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,353,            iHalfdayOfDay       = (f = fields.halfdayOfDay)       != null ? f : super.halfdayOfDay();,6,1,0,2,4,0,0,0,0,9,89,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,305,        fields.months = fields.monthOfYear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,304,        fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,303,        fields.years = fields.year.getDurationField();,4,0,0,1,2,0,1,0,0,6,46,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,357,            iWeekOfWeekyear     = (f = fields.weekOfWeekyear)     != null ? f : super.weekOfWeekyear();,6,1,0,2,4,0,0,0,0,9,91,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,354,            iDayOfWeek          = (f = fields.dayOfWeek)          != null ? f : super.dayOfWeek();,6,1,0,2,4,0,0,0,0,9,86,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,355,            iDayOfMonth         = (f = fields.dayOfMonth)         != null ? f : super.dayOfMonth();,6,1,0,2,4,0,0,0,0,9,87,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,358,            iWeekyear           = (f = fields.weekyear)           != null ? f : super.weekyear();,6,1,0,2,4,0,0,0,0,9,85,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,359,            iWeekyearOfCentury  = (f = fields.weekyearOfCentury)  != null ? f : super.weekyearOfCentury();,6,1,0,2,4,0,0,0,0,9,94,5,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationField,6,54,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,349,            iHourOfDay          = (f = fields.hourOfDay)          != null ? f : super.hourOfDay();,6,1,0,2,4,0,0,0,0,9,86,5,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,452,            return iUnitType;,1,0,0,0,0,0,0,0,0,1,17,5,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,457,            return iRangeType;,1,0,0,0,0,0,0,0,0,1,18,5,0.00254511,0
defect4j,time,org/joda/time/field/BaseDurationField,6,51,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BaseChronology,6,660,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,218,        return HOUR_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,6,58,        if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,236,        return HOUR_OF_HALFDAY_TYPE;,1,0,0,0,0,0,0,0,0,1,28,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,436,        Fields() {,1,0,0,1,3,0,0,0,0,1,10,3,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,282,        return DAY_OF_YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,79,        cMinutesField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,40,4,0.00254511,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,6,46,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,6,45,"        super(DateTimeFieldType.dayOfWeek(), days);",1,0,0,2,4,0,2,0,0,3,43,4,0.00254511,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,6,46,        super(DateTimeFieldType.era());,0,0,0,2,4,0,2,0,0,2,31,5,0.00254511,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,6,47,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,120,        cHalfdayOfDayField = new HalfdayField();,1,0,0,1,2,0,0,1,0,3,40,4,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,79,        iOffset = offset;,2,0,0,0,0,0,0,0,0,3,17,4,0.00254511,0
defect4j,time,org/joda/time/field/BaseDateTimeField,6,58,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,154,        return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,4,0.00254511,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,6,152,            super(type);,1,0,0,1,2,0,0,0,0,1,12,5,0.00254511,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,6,151,        LinkedDurationField(DurationFieldType type) {,2,0,0,1,3,0,0,1,0,3,45,3,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,759,"            super(DateTimeFieldType.halfdayOfDay(), cHalfdaysField, cDaysField);",2,0,0,2,4,0,2,0,0,4,68,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,319,        Fields fields = new Fields();,1,0,0,1,2,0,0,2,0,3,29,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,277,        DateTimeField field = new OffsetDateTimeField(,1,0,0,0,1,0,0,2,0,3,46,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,274,"        fields.yearOfEra = new GJYearOfEraDateTimeField(fields.year, this);",4,0,0,1,2,0,0,1,0,6,67,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,273,        fields.year = new BasicYearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,47,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,268,        return iYear;,1,0,0,0,0,0,0,0,0,1,13,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,385,        iBaseFlags = flags;,2,0,0,0,0,0,0,0,0,3,19,4,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,6,54,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,300,        return WEEKYEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,21,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,352,            iClockhourOfHalfday = (f = fields.clockhourOfHalfday) != null ? f : super.clockhourOfHalfday();,6,1,0,2,4,0,0,0,0,9,95,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,306,        fields.weekyears = fields.weekyear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,309,        return WEEKYEAR_OF_CENTURY_TYPE;,1,0,0,0,0,0,0,0,0,1,32,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,351,            iHourOfHalfday      = (f = fields.hourOfHalfday)      != null ? f : super.hourOfHalfday();,6,1,0,2,4,0,0,0,0,9,90,5,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,182,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,75,        if (offset == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,245,        return CLOCKHOUR_OF_HALFDAY_TYPE;,1,0,0,0,0,0,0,0,0,1,33,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,6,52,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,77,        cSecondsField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,40,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,63,        if (unitField == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,6,54,        iLeapMonth = leapMonth;,2,0,0,0,0,0,0,0,0,3,23,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,131,"        super(base, param);",2,0,0,1,2,0,0,0,0,2,19,4,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,88,        iDivisor = dividedField.iDivisor;,3,0,0,0,0,0,0,0,0,4,33,4,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,89,        iRangeField = dividedField.iDurationField;,3,0,0,0,0,0,0,0,0,4,42,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,191,        return SECOND_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,87,            iMax = field.getMaximumValue() + offset;,2,1,0,1,2,0,2,0,0,6,40,6,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,86,        if (maxValue > (field.getMaximumValue() + offset)) {,2,2,0,3,7,0,2,0,0,6,52,4,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,81,        if (minValue < (field.getMinimumValue() + offset)) {,2,2,0,3,7,0,2,0,0,6,52,4,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,82,            iMin = field.getMinimumValue() + offset;,2,1,0,1,2,0,2,0,0,6,40,6,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,76,"        this(dividedField, dividedField.getType());",1,0,0,2,4,0,2,0,0,3,43,4,0.00254511,0
defect4j,time,org/joda/time/field/ScaledDurationField,6,47,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,45,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDurationField,6,52,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDurationField,6,53,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,279,        fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,79,        iMax = max;,2,0,0,0,0,0,0,0,0,3,11,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,73,        int min = (i >= 0) ? i / divisor : ((i + 1) / divisor - 1);,6,5,0,3,6,0,0,0,0,11,59,5,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,76,        int max = (j >= 0) ? j / divisor : ((j + 1) / divisor - 1);,6,5,0,3,6,0,0,0,0,11,59,5,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,75,        int j = field.getMaximumValue();,1,0,0,1,2,0,2,0,0,3,32,5,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,209,        return MINUTE_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationField,6,63,        return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,4,0.00254511,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,6,45,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,345,        return YEAR_OF_CENTURY_TYPE;,1,0,0,0,0,0,0,0,0,1,28,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,348,            iMinuteOfDay        = (f = fields.minuteOfDay)        != null ? f : super.minuteOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,345,            iSecondOfMinute     = (f = fields.secondOfMinute)     != null ? f : super.secondOfMinute();,6,1,0,2,4,0,0,0,0,9,91,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,344,            iMillisOfDay        = (f = fields.millisOfDay)        != null ? f : super.millisOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,347,            iMinuteOfHour       = (f = fields.minuteOfHour)       != null ? f : super.minuteOfHour();,6,1,0,2,4,0,0,0,0,9,89,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,346,            iSecondOfDay        = (f = fields.secondOfDay)        != null ? f : super.secondOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,343,            iMillisOfSecond     = (f = fields.millisOfSecond)     != null ? f : super.millisOfSecond();,6,1,0,2,4,0,0,0,0,9,91,5,0.00254511,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,53,            field = cCache.get(type);,1,0,0,1,2,0,3,0,0,5,25,6,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,291,        return WEEK_OF_WEEKYEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,356,            iDayOfYear          = (f = fields.dayOfYear)          != null ? f : super.dayOfYear();,6,1,0,2,4,0,0,0,0,9,86,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,76,        cMillisField = MillisDurationField.INSTANCE;,3,0,0,0,0,0,0,0,0,4,44,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,360,            iMonthOfYear        = (f = fields.monthOfYear)        != null ? f : super.monthOfYear();,6,1,0,2,4,0,0,0,0,9,88,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,111,        cHourOfHalfdayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,46,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,117,        cClockhourOfHalfdayField = new ZeroIsMaxDateTimeField,1,0,0,0,0,0,0,1,0,3,53,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,114,        cClockhourOfDayField = new ZeroIsMaxDateTimeField,1,0,0,0,0,0,0,1,0,3,49,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,182,        return SECOND_OF_MINUTE_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,6,51,"        super(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());",0,0,0,3,6,0,4,0,0,4,78,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,6,53,        iMax = iChronology.getMaxMonth();,1,0,0,1,2,0,2,0,0,4,33,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,264,        fields.hourOfDay = cHourOfDayField;,3,0,0,0,0,0,0,0,0,4,35,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,265,        fields.hourOfHalfday = cHourOfHalfdayField;,3,0,0,0,0,0,0,0,0,4,43,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,308,        return iBase;,1,0,0,0,0,0,0,0,0,1,13,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,261,        fields.secondOfDay = cSecondOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.00254511,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,6,40,"        super(yearField, DateTimeFieldType.yearOfEra());",1,0,0,2,4,0,2,0,0,3,48,4,0.00254511,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,6,41,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,288,"        fields.dayOfWeek = new GJDayOfWeekDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,67,4,0.00254511,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,6,57,        iDurationField = new LinkedDurationField(type.getDurationType());,1,0,0,2,4,0,2,1,0,5,65,4,0.00254511,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,6,56,        iUnitMillis = unitMillis;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,6,55,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,336,        return YEAR_OF_ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,64,        iRange = (int)(rangeMillis / getUnitMillis());,2,1,0,3,6,0,1,0,0,5,46,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,59,        iUnitField = unit;,2,0,0,0,0,0,0,0,0,3,18,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,370,            flags = 0;,1,0,0,0,0,0,0,0,0,2,10,6,0.00254511,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,6,46,        if (field.getMinimumValue() != 0) {,0,1,0,2,5,0,2,0,0,3,35,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,72,        int i = field.getMinimumValue();,1,0,0,1,2,0,2,0,0,3,32,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,363,            iYearOfCentury      = (f = fields.yearOfCentury)      != null ? f : super.yearOfCentury();,6,1,0,2,4,0,0,0,0,9,90,5,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,78,        iMin = min;,2,0,0,0,0,0,0,0,0,3,11,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,254,        return HALFDAY_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,50,abstract class BasicChronology extends AssembledChronology {,1,0,0,0,1,1,0,1,0,3,60,1,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,62,            iRangeField = new ScaledDurationField(,1,0,0,0,1,0,0,1,0,3,38,6,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,66,        iDivisor = divisor;,2,0,0,0,0,0,0,0,0,3,19,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,99,"    protected AssembledChronology(Chronology base, Object param) {",3,0,0,1,3,1,0,2,0,6,62,2,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,164,        return MILLIS_OF_SECOND_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,54,        iUnitMillis = unit.getUnitMillis();,1,0,0,1,2,0,2,0,0,4,35,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,6,43,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,6,42,"        super(DateTimeFieldType.weekOfWeekyear(), weeks);",1,0,0,2,4,0,2,0,0,3,49,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,62,        DurationField unitField = field.getDurationField();,1,0,0,1,2,0,2,1,0,4,51,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,81,        cHoursField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,38,4,0.00254511,0
defect4j,time,org/joda/time/field/DividedDateTimeField,6,66,            iDurationField = new ScaledDurationField(,1,0,0,0,1,0,0,1,0,3,41,6,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,354,        return CENTURY_OF_ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,58,"        this(field, type, offset, Integer.MIN_VALUE, Integer.MAX_VALUE);",7,0,0,1,2,0,0,0,0,7,64,4,0.00254511,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,6,87,"        super(dividedField.getWrappedField(), type);",1,0,0,2,4,0,2,0,0,3,44,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,338,            iEras      = (f = fields.eras)      != null ? f : super.eras();,6,1,0,2,4,0,0,0,0,9,63,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,287,        fields.era = new GJEraDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,42,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,284,        fields.yearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,282,        field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,330,            iHours     = (f = fields.hours)     != null ? f : super.hours();,6,1,0,2,4,0,0,0,0,9,64,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,332,            iDays      = (f = fields.days)      != null ? f : super.days();,6,1,0,2,4,0,0,0,0,9,63,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,333,            iWeeks     = (f = fields.weeks)     != null ? f : super.weeks();,6,1,0,2,4,0,0,0,0,9,64,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,334,            iWeekyears = (f = fields.weekyears) != null ? f : super.weekyears();,6,1,0,2,4,0,0,0,0,9,68,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,335,            iMonths    = (f = fields.months)    != null ? f : super.months();,6,1,0,2,4,0,0,0,0,9,65,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,337,            iCenturies = (f = fields.centuries) != null ? f : super.centuries();,6,1,0,2,4,0,0,0,0,9,68,5,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,6,86,        return iField.getDurationField();,0,0,0,1,2,0,2,0,0,2,33,5,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,63,        long rangeMillis = range.getUnitMillis();,1,0,0,1,2,0,2,0,0,3,41,5,0.00254511,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,6,174,        return iMin;,1,0,0,0,0,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,57,"        super(type, unit);",2,0,0,1,2,0,0,0,0,2,18,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,59,        if (!range.isPrecise()) {,0,0,0,2,5,0,2,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,83,        cHalfdaysField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,41,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,85,        cDaysField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,37,4,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,6,55,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.00254511,0
defect4j,time,org/joda/time/field/BaseDurationField,6,66,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,6,61,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,264,        return DAY_OF_WEEK_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,267,        fields.clockhourOfHalfday = cClockhourOfHalfdayField;,3,0,0,0,0,0,0,0,0,4,53,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,253,        fields.hours = cHoursField;,3,0,0,0,0,0,0,0,0,4,27,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,350,            iClockhourOfDay     = (f = fields.clockhourOfDay)     != null ? f : super.clockhourOfDay();,6,1,0,2,4,0,0,0,0,9,91,5,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,6,48,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,105,        cMinuteOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,100,        iBase = base;,2,0,0,0,0,0,0,0,0,3,13,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,102,        cMinuteOfHourField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,45,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,108,        cHourOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,42,4,0.00254511,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,6,137,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,331,            iHalfdays  = (f = fields.halfdays)  != null ? f : super.halfdays();,6,1,0,2,4,0,0,0,0,9,67,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,365,            iEra                = (f = fields.era)                != null ? f : super.era();,6,1,0,2,4,0,0,0,0,9,80,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,364,            iCenturyOfEra       = (f = fields.centuryOfEra)       != null ? f : super.centuryOfEra();,6,1,0,2,4,0,0,0,0,9,89,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,361,            iYear               = (f = fields.year)               != null ? f : super.year();,6,1,0,2,4,0,0,0,0,9,81,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,6,41,"        super(DateTimeFieldType.dayOfYear(), days);",1,0,0,2,4,0,2,0,0,3,43,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationField,6,43,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,369,        if (iBase == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.00254511,0
defect4j,time,org/joda/time/field/PreciseDurationField,6,44,        iUnitMillis = unitMillis;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,6,102,        return getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset;,2,4,0,2,4,0,2,0,0,8,68,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,336,            iYears     = (f = fields.years)     != null ? f : super.years();,6,1,0,2,4,0,0,0,0,9,64,5,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,289,"        fields.dayOfMonth = new BasicDayOfMonthDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,72,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,259,        fields.millisOfDay = cMillisOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,258,        fields.millisOfSecond = cMillisOfSecondField;,3,0,0,0,0,0,0,0,0,4,45,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,255,        fields.days = cDaysField;,3,0,0,0,0,0,0,0,0,4,25,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,254,        fields.halfdays = cHalfdaysField;,3,0,0,0,0,0,0,0,0,4,33,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,256,        fields.weeks = cWeeksField;,3,0,0,0,0,0,0,0,0,4,27,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,251,        fields.seconds = cSecondsField;,3,0,0,0,0,0,0,0,0,4,31,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,250,        fields.millis = cMillisField;,3,0,0,0,0,0,0,0,0,4,29,4,0.00254511,0
defect4j,time,org/joda/time/field/BaseDurationField,6,48,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,252,        fields.minutes = cMinutesField;,3,0,0,0,0,0,0,0,0,4,31,4,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,102,        setFields();,0,0,0,1,2,0,1,0,0,1,12,5,0.00254511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,101,        iParam = param;,2,0,0,0,0,0,0,0,0,3,15,4,0.00254511,0
defect4j,time,org/joda/time/field/ScaledDurationField,6,48,        if (scalar == 0 || scalar == 1) {,2,3,0,1,3,0,0,0,0,5,33,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,6,42,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.00254511,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,44,"        super(DateTimeFieldType.weekyear(), chronology.getAverageMillisPerYear());",0,0,0,3,6,0,4,0,0,4,74,5,0.00254511,0
defect4j,time,org/joda/time/DateTimeFieldType,6,227,        return CLOCKHOUR_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.002543986,0
defect4j,time,org/joda/time/DateTimeFieldType,6,327,        return YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,71,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.002543986,0
defect4j,time,org/joda/time/DateTimeField,6,33,public abstract class DateTimeField {,1,0,0,0,1,2,0,0,0,3,37,1,0.002543986,0
defect4j,time,org/joda/time/DurationField,6,30,public abstract class DurationField implements Comparable<DurationField> {,1,0,0,0,1,2,0,2,0,5,74,1,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,56,            field = new UnsupportedDurationField(type);,2,0,0,1,2,0,0,1,0,4,43,6,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,49,        if (cCache == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,59,        return field;,1,0,0,0,0,0,0,0,0,1,13,4,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,57,"            cCache.put(type, field);",0,0,0,1,2,0,4,0,0,4,24,7,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,55,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,50,"            cCache = new HashMap<DurationFieldType, UnsupportedDurationField>(7);",1,0,0,1,2,0,0,3,0,5,69,6,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,51,            field = null;,1,0,0,0,0,0,0,0,0,2,13,6,0.002543986,0
defect4j,time,org/joda/time/DateTimeFieldType,6,200,        return MINUTE_OF_HOUR_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.002543986,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,6,70,    private UnsupportedDurationField(DurationFieldType type) {,2,0,0,1,3,1,0,1,0,4,58,2,0.002543986,0
defect4j,time,org/joda/time/DurationFieldType,6,278,            return (1 << iOrdinal);,1,1,0,1,2,0,0,0,0,2,23,6,0.002543986,0
defect4j,time,org/joda/time/DateTimeFieldType,6,273,        return DAY_OF_MONTH_TYPE;,1,0,0,0,0,0,0,0,0,1,25,4,0.002543986,0
defect4j,time,org/joda/time/Chronology,6,63,public abstract class Chronology {,1,0,0,0,1,2,0,0,0,3,34,1,0.002542862,0
defect4j,time,org/joda/time/DateTimeFieldType,6,134,    private static final DateTimeFieldType SECOND_OF_MINUTE_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,82,    private static final DateTimeFieldType YEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,92,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,85,    private static final DateTimeFieldType YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,81,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,88,    private static final DateTimeFieldType DAY_OF_YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,140,    private static final DateTimeFieldType MILLIS_OF_SECOND_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,128,    private static final DateTimeFieldType MINUTE_OF_HOUR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,125,    private static final DateTimeFieldType MINUTE_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,79,    private static final DateTimeFieldType CENTURY_OF_ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,73,    private static final DateTimeFieldType ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,80,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,91,    private static final DateTimeFieldType MONTH_OF_YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,94,    private static final DateTimeFieldType DAY_OF_MONTH_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,89,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,97,    private static final DateTimeFieldType WEEKYEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,96,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,100,    private static final DateTimeFieldType WEEKYEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,85,2,0.002541739,0
defect4j,time,org/joda/time/DurationFieldType,6,169,        return WEEKYEARS_TYPE;,1,0,0,0,0,0,0,0,0,1,22,4,0.002541739,0
defect4j,time,org/joda/time/DurationFieldType,6,205,        return ERAS_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,131,    private static final DateTimeFieldType SECOND_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,119,    private static final DateTimeFieldType CLOCKHOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,116,    private static final DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,97,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,113,    private static final DateTimeFieldType HOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,92,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,110,    private static final DateTimeFieldType HALFDAY_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,137,    private static final DateTimeFieldType MILLIS_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,154,        iName = name;,2,0,0,0,0,0,0,0,0,3,13,4,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,445,            iOrdinal = ordinal;,2,0,0,0,0,0,0,0,0,3,19,5,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,76,    private static final DateTimeFieldType YEAR_OF_ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,103,    private static final DateTimeFieldType WEEK_OF_WEEKYEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,106,    private static final DateTimeFieldType DAY_OF_WEEK_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,122,    private static final DateTimeFieldType HOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.002541739,0
defect4j,time,org/joda/time/DurationFieldType,6,196,        return CENTURIES_TYPE;,1,0,0,0,0,0,0,0,0,1,22,4,0.002541739,0
defect4j,time,org/joda/time/DurationFieldType,6,141,        return HALFDAYS_TYPE;,1,0,0,0,0,0,0,0,0,1,21,4,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,447,            iRangeType = rangeType;,2,0,0,0,0,0,0,0,0,3,23,5,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,446,            iUnitType = unitType;,2,0,0,0,0,0,0,0,0,3,21,5,0.002541739,0
defect4j,time,org/joda/time/DateTimeFieldType,6,444,            super(name);,1,0,0,1,2,0,0,0,0,1,12,5,0.002541739,0
defect4j,time,org/joda/time/DurationFieldType,6,105,        return MILLIS_TYPE;,1,0,0,0,0,0,0,0,0,1,19,4,0.002532791,0
defect4j,time,org/joda/time/DurationFieldType,6,187,        return YEARS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.002516176,0
defect4j,time,org/joda/time/DurationFieldType,6,178,        return MONTHS_TYPE;,1,0,0,0,0,0,0,0,0,1,19,4,0.002516176,0
defect4j,time,org/joda/time/DurationFieldType,6,160,        return WEEKS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.002507399,0
defect4j,time,org/joda/time/DurationFieldType,6,132,        return HOURS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.002504123,0
defect4j,time,org/joda/time/DurationFieldType,6,114,        return SECONDS_TYPE;,1,0,0,0,0,0,0,0,0,1,20,4,0.002504123,0
defect4j,time,org/joda/time/DurationFieldType,6,123,        return MINUTES_TYPE;,1,0,0,0,0,0,0,0,0,1,20,4,0.002504123,0
defect4j,time,org/joda/time/DurationFieldType,6,151,        return DAYS_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.002503033,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,147,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.002488619,0
defect4j,time,org/joda/time/DateTimeUtils,6,63,"            map.put(name, DateTimeZone.forID(id));",0,0,0,2,4,0,6,0,0,6,38,7,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,51,"        put(map, ""EST"", ""America/New_York"");",0,0,0,1,2,0,2,0,0,4,36,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,53,"        put(map, ""CST"", ""America/Chicago"");",0,0,0,1,2,0,2,0,0,4,35,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,55,"        put(map, ""MST"", ""America/Denver"");",0,0,0,1,2,0,2,0,0,4,34,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,57,"        put(map, ""PST"", ""America/Los_Angeles"");",0,0,0,1,2,0,2,0,0,4,39,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,50,"        map.put(""GMT"", DateTimeZone.UTC);",2,0,0,1,2,0,2,0,0,5,33,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,52,"        put(map, ""EDT"", ""America/New_York"");",0,0,0,1,2,0,2,0,0,4,36,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,58,"        put(map, ""PDT"", ""America/Los_Angeles"");",0,0,0,1,2,0,2,0,0,4,39,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,59,        cZoneNames = Collections.unmodifiableMap(map);,1,0,0,1,2,0,3,0,0,5,46,4,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,39,    private static final SystemMillisProvider SYSTEM_MILLIS_PROVIDER = new SystemMillisProvider();,1,0,0,1,2,3,0,2,0,6,94,2,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,41,    private static volatile MillisProvider cMillisProvider = SYSTEM_MILLIS_PROVIDER;,2,0,0,0,0,3,0,1,0,6,80,2,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,47,"        Map<String, DateTimeZone> map = new LinkedHashMap<String, DateTimeZone>();",1,0,0,1,2,0,0,6,0,7,74,4,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,49,"        map.put(""UTC"", DateTimeZone.UTC);",2,0,0,1,2,0,2,0,0,5,33,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,48,"        map.put(""UT"", DateTimeZone.UTC);",2,0,0,1,2,0,2,0,0,5,32,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,524,    static class SystemMillisProvider implements MillisProvider {,1,0,0,0,1,1,0,1,0,3,61,2,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,54,"        put(map, ""CDT"", ""America/Chicago"");",0,0,0,1,2,0,2,0,0,4,35,5,0.002478208,0
defect4j,time,org/joda/time/DateTimeUtils,6,56,"        put(map, ""MDT"", ""America/Denver"");",0,0,0,1,2,0,2,0,0,4,34,5,0.002478208,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,141,        instant -= offset;,2,0,0,0,0,0,0,0,0,3,18,4,0.002461222,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,140,        int offset = zone.getOffsetFromLocal(instant);,1,0,0,1,2,0,3,0,0,4,46,5,0.002461222,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,142,        if (offset != zone.getOffset(instant)) {,1,1,0,2,5,0,3,0,0,5,40,4,0.002461222,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,139,        DateTimeZone zone = getZone();,1,0,0,1,2,0,1,1,0,3,30,4,0.002461222,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,119,        return localToUTC(getBase().getDateTimeMillis,0,0,0,1,3,0,3,0,0,3,45,5,0.002456703,0
defect4j,time,org/joda/time/DateTimeFieldType,17,524,                    return chronology.secondOfMinute();,0,0,0,1,2,0,2,0,0,2,35,7,0.00242104,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,107,"                chrono = new ISOChronology(ZonedChronology.getInstance(INSTANCE_UTC, zone));",1,0,0,2,4,0,4,1,0,7,76,8,0.002416228,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,108,"                cCache.put(zone, chrono);",0,0,0,1,2,0,4,0,0,4,25,9,0.002416228,0
defect4j,time,org/joda/time/DurationFieldType,6,260,            iOrdinal = ordinal;,2,0,0,0,0,0,0,0,0,3,19,5,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,72,"    static final DurationFieldType DAYS_TYPE = new StandardDurationFieldType(""days"", DAYS);",2,0,0,1,2,2,0,2,0,7,87,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,74,"    static final DurationFieldType HALFDAYS_TYPE = new StandardDurationFieldType(""halfdays"", HALFDAYS);",2,0,0,1,2,2,0,2,0,7,99,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,66,"    static final DurationFieldType YEARS_TYPE = new StandardDurationFieldType(""years"", YEARS);",2,0,0,1,2,2,0,2,0,7,90,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,62,"    static final DurationFieldType CENTURIES_TYPE = new StandardDurationFieldType(""centuries"", CENTURIES);",2,0,0,1,2,2,0,2,0,7,102,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,60,"    static final DurationFieldType ERAS_TYPE = new StandardDurationFieldType(""eras"", ERAS);",2,0,0,1,2,2,0,2,0,7,87,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,68,"    static final DurationFieldType MONTHS_TYPE = new StandardDurationFieldType(""months"", MONTHS);",2,0,0,1,2,2,0,2,0,7,93,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,259,            super(name);,1,0,0,1,2,0,0,0,0,1,12,5,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,95,        iName = name;,2,0,0,0,0,0,0,0,0,3,13,4,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,64,"    static final DurationFieldType WEEKYEARS_TYPE = new StandardDurationFieldType(""weekyears"", WEEKYEARS);",2,0,0,1,2,2,0,2,0,7,102,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,80,"    static final DurationFieldType SECONDS_TYPE = new StandardDurationFieldType(""seconds"", SECONDS);",2,0,0,1,2,2,0,2,0,7,96,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,82,"    static final DurationFieldType MILLIS_TYPE = new StandardDurationFieldType(""millis"", MILLIS);",2,0,0,1,2,2,0,2,0,7,93,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,70,"    static final DurationFieldType WEEKS_TYPE = new StandardDurationFieldType(""weeks"", WEEKS);",2,0,0,1,2,2,0,2,0,7,90,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,76,"    static final DurationFieldType HOURS_TYPE = new StandardDurationFieldType(""hours"", HOURS);",2,0,0,1,2,2,0,2,0,7,90,2,0.002383457,0
defect4j,time,org/joda/time/DurationFieldType,6,78,"    static final DurationFieldType MINUTES_TYPE = new StandardDurationFieldType(""minutes"", MINUTES);",2,0,0,1,2,2,0,2,0,7,96,2,0.002383457,0
defect4j,chart,org/jfree/data/general/AbstractDataset,16,206,        clone.listenerList = new EventListenerList();,2,0,0,1,2,0,0,1,0,4,45,4,0.002365931,0
defect4j,chart,org/jfree/data/general/AbstractDataset,16,207,        return clone;    ,1,0,0,0,0,0,0,0,0,1,13,4,0.002365931,0
defect4j,chart,org/jfree/data/general/AbstractDataset,16,205,        AbstractDataset clone = (AbstractDataset) super.clone();,2,0,0,2,4,0,0,2,0,4,56,4,0.002365931,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,748,        clone.categoryKeys = (Comparable[]) this.categoryKeys.clone();,3,0,0,3,6,0,1,1,0,6,62,4,0.002365931,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,746,        DefaultIntervalCategoryDataset clone ,1,0,0,0,0,0,0,1,0,2,36,4,0.002365931,0
defect4j,time,org/joda/time/field/SkipDateTimeField,6,82,            value--;,1,0,0,0,0,0,0,0,0,2,8,6,0.002325843,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,106,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,0.002320899,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,104,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.002320899,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,105,            chrono = cCache.get(zone);,1,0,0,1,2,0,3,0,0,5,26,6,0.002320899,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,100,        ISOChronology chrono = cFastCache[index];,1,0,1,1,2,0,0,1,0,4,41,4,0.002320899,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,101,        if (chrono != null && chrono.getZone() == zone) {,2,3,0,2,5,0,2,0,0,7,49,4,0.002320899,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,99,        int index = System.identityHashCode(zone) & (FAST_CACHE_SIZE - 1);,2,2,0,2,4,0,3,0,0,7,66,5,0.002320899,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,96,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.002320899,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,111,        cFastCache[index] = chrono;,1,0,1,1,2,0,0,0,0,4,27,4,0.002320899,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,112,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.002320899,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,323,            row = (DefaultKeyedValues) this.rows.get(rowIndex);,2,0,0,2,4,0,2,1,0,6,51,6,0.002317979,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,203,            w |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,0,5,34,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1176,            super(id);,1,0,0,1,2,0,0,0,0,1,10,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,505,            if (mode != 'u' && mode != 'w' && mode != 's') {,3,5,0,1,3,0,0,0,0,11,48,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,95,        if (in instanceof DataInput) {,1,0,0,1,3,0,0,1,0,2,30,5,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,147,            return loadZoneData(id);,0,0,0,1,2,0,2,0,0,2,24,7,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,202,            w |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,0,5,35,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,740,"            return new Recurrence(OfYear.readFrom(in), in.readUTF(), (int)readMillis(in));",0,0,0,5,10,0,7,1,0,8,78,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,110,        switch (in.readUnsignedByte()) {,0,0,0,2,5,0,2,0,0,2,32,5,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,87,        super(zone.getID());,0,0,0,2,4,0,2,0,0,2,20,5,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,61,        cInfoCacheMask = cacheSize - 1;,2,1,0,0,0,0,0,0,0,4,31,4,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,68,        if (zone instanceof CachedDateTimeZone) {,1,0,0,1,3,0,0,1,0,2,41,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1360,                        index = in.readUnsignedByte();,1,0,0,1,2,0,2,0,0,4,30,11,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1364,                    nameKeys[i] = pool[index];,0,0,1,2,4,0,0,0,0,5,26,9,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,196,            return v * 60000L;,1,1,0,0,0,0,0,0,0,2,18,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,195,            v |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,0,4,29,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,194,            v |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,0,5,34,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,193,            v |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,0,5,35,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,192,            v = (v << (32 - 6)) >> (32 - 30);,2,4,0,3,6,0,0,0,0,7,33,5,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,229,            return tz;,1,0,0,0,0,0,0,0,0,1,10,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,98,"            return readFrom((DataInput)new DataInputStream(in), id);",1,0,0,3,6,0,2,2,0,5,56,7,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,205,            return w * 1000L;,1,1,0,0,0,0,0,0,0,2,17,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,204,            w |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,0,4,29,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,200,            long w = (((long)v) << (64 - 6)) >> (64 - 38);,2,4,0,5,10,0,0,0,0,6,46,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,209,            return in.readLong();,0,0,0,1,2,0,2,0,0,2,21,6,0.002303744,0
defect4j,time,org/joda/time/DateTimeZone,6,213,            return zone;,1,0,0,0,0,0,0,0,0,1,12,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1351,            String[] nameKeys = new String[size];,1,0,1,2,4,0,0,2,0,4,37,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1350,            int[] standardOffsets = new int[size];,1,0,1,2,4,0,0,0,0,2,38,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1353,            for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1355,                wallOffsets[i] = (int)readMillis(in);,0,0,1,3,6,0,2,0,0,5,37,7,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1354,                transitions[i] = readMillis(in);,0,0,1,2,4,0,2,0,0,5,32,7,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1356,                standardOffsets[i] = (int)readMillis(in);,0,0,1,3,6,0,2,0,0,5,41,7,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1359,                    if (poolSize < 256) {,1,1,0,1,3,0,0,0,0,2,21,9,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,39,"            i = Integer.getInteger(""org.joda.time.tz.CachedDateTimeZone.size"");",1,0,0,1,2,0,2,0,0,5,67,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,514,            iMillisOfDay = millisOfDay;,2,0,0,0,0,0,0,0,0,3,27,5,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,84,    private final Info[] iInfoCache = new Info[cInfoCacheMask + 1];,2,1,0,2,4,2,0,2,0,7,63,2,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,88,        iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,4,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,482,"            return new OfYear((char)in.readUnsignedByte(),",0,0,0,2,5,0,2,1,0,3,46,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1178,            iStartRecurrence = startRecurrence;,2,0,0,0,0,0,0,0,0,3,35,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1177,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,0,3,33,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,509,            iMode = mode;,2,0,0,0,0,0,0,0,0,3,13,5,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,227,"            DateTimeZone tz = DateTimeZoneBuilder.readFrom(in, id);",1,0,0,1,2,0,4,1,0,6,55,6,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,226,            in = openResource(id);,1,0,0,1,2,0,2,0,0,4,22,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1370,            DSTZone tailZone = null;,1,0,0,0,0,0,0,1,0,2,24,5,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,71,        return new CachedDateTimeZone(zone);,1,0,0,1,2,0,0,1,0,2,36,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,201,            w |= (in.readUnsignedByte()) << 24;,1,1,0,2,4,0,2,0,0,5,35,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,119,"            return CachedDateTimeZone.forZone(PrecalculatedZone.readFrom(in, id));",0,0,0,2,4,0,6,0,0,6,70,6,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,48,            cacheSize = 512; // (1 << 9),1,0,0,1,2,0,0,0,0,2,28,6,0.002303744,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,6,45,        if (i == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.002303744,0
defect4j,time,org/joda/time/DateTimeZone,6,212,        if (zone != null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1179,            iEndRecurrence = endRecurrence;,2,0,0,0,0,0,0,0,0,3,31,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,750,            iSaveMillis = saveMillis;,2,0,0,0,0,0,0,0,0,3,25,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1342,            String[] pool = new String[poolSize];,1,0,1,2,4,0,0,2,0,4,37,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1341,            int poolSize = in.readUnsignedShort();,1,0,0,1,2,0,2,0,0,3,38,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1344,                pool[i] = in.readUTF();,0,0,1,2,4,0,2,0,0,5,23,7,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,224,        InputStream in = null;,1,0,0,0,0,0,0,1,0,2,22,4,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1348,            long[] transitions = new long[size];,1,0,1,2,4,0,0,0,0,2,36,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1349,            int[] wallOffsets = new int[size];,1,0,1,2,4,0,0,0,0,2,34,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1500,            super(id);,1,0,0,1,2,0,0,0,0,1,10,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1501,            iTransitions = transitions;,2,0,0,0,0,0,0,0,0,3,27,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1502,            iWallOffsets = wallOffsets;,2,0,0,0,0,0,0,0,0,3,27,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1503,            iStandardOffsets = standardOffsets;,2,0,0,0,0,0,0,0,0,3,35,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1504,            iNameKeys = nameKeys;,2,0,0,0,0,0,0,0,0,3,21,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1505,            iTailZone = tailZone;,2,0,0,0,0,0,0,0,0,3,21,5,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,228,"            iZoneInfoMap.put(id, new SoftReference<DateTimeZone>(tz));",1,0,0,2,4,0,3,2,0,6,58,7,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,748,            iOfYear = ofYear;,2,0,0,0,0,0,0,0,0,3,17,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,749,            iNameKey = nameKey;,2,0,0,0,0,0,0,0,0,3,19,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,747,"        Recurrence(OfYear ofYear, String nameKey, int saveMillis) {",4,0,0,1,3,0,0,2,0,6,59,3,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1166,"            return new DSTZone(id, (int)readMillis(in), ",1,0,0,2,5,0,2,1,0,4,43,6,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,236,                if (in != null) {,1,1,0,1,3,0,0,0,0,2,17,8,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,513,            iAdvance = advanceDayOfWeek;,2,0,0,0,0,0,0,0,0,3,28,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,512,            iDayOfWeek = dayOfWeek;,2,0,0,0,0,0,0,0,0,3,23,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,511,            iDayOfMonth = dayOfMonth;,2,0,0,0,0,0,0,0,0,3,25,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,510,            iMonthOfYear = monthOfYear;,2,0,0,0,0,0,0,0,0,3,27,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1343,            for (int i=0; i<poolSize; i++) {,4,1,0,1,3,0,0,0,0,6,32,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1347,            int size = in.readInt();,1,0,0,1,2,0,2,0,0,3,24,6,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,237,                    in.close();,0,0,0,1,2,0,2,0,0,2,11,11,0.002303744,0
defect4j,time,org/joda/time/DateTimeZone,6,211,        DateTimeZone zone = cProvider.getZone(id);,1,0,0,1,2,0,3,1,0,5,42,4,0.002303744,0
defect4j,time,org/joda/time/DateTimeZone,6,205,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1375,            return new PrecalculatedZone,0,0,0,0,0,0,0,1,0,1,28,7,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1372,"                tailZone = DSTZone.readFrom(in, id);",1,0,0,1,2,0,4,0,0,6,36,7,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,1371,            if (in.readBoolean()) {,0,0,0,2,5,0,2,0,0,2,23,6,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,184,        switch (v >> 6) {,1,1,0,1,3,0,0,0,0,2,17,4,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,187,            v = (v << (32 - 6)) >> (32 - 6);,2,4,0,3,6,0,0,0,0,7,32,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,183,        int v = in.readUnsignedByte();,1,0,0,1,2,0,2,0,0,3,30,5,0.002303744,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,6,188,            return v * (30 * 60000L);,1,2,0,1,2,0,0,0,0,3,25,5,0.002303744,0
defect4j,time,org/joda/time/DateTimeZone,6,208,"        if (id.equals(""UTC"")) {",0,0,0,2,5,0,2,0,0,3,23,5,0.002303744,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,201,                in = iLoader.getResourceAsStream(path);,1,0,0,1,2,0,3,0,0,5,39,8,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,200,            if (iLoader != null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,205,            if (in == null) {,1,1,0,1,3,0,0,0,0,2,17,6,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,136,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,560,            if (providerClass != null) {,1,1,0,1,3,0,0,0,0,2,28,6,0.002302815,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,6,38,        super(id);,1,0,0,1,2,0,0,0,0,1,10,4,0.002302815,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,6,39,        iNameKey = nameKey;,2,0,0,0,0,0,0,0,0,3,19,4,0.002302815,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,6,41,        iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,0,3,33,4,0.002302815,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,6,40,        iWallOffset = wallOffset;,2,0,0,0,0,0,0,0,0,3,25,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,145,        if (id.equals(obj)) {,0,0,0,2,5,0,3,0,0,3,21,5,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,140,        Object obj = iZoneInfoMap.get(id);,1,0,0,1,2,0,3,1,0,5,34,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,734,        return iID;,1,0,0,0,0,0,0,0,0,1,11,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,94,"    public static final DateTimeZone UTC = new FixedDateTimeZone(""UTC"", ""UTC"", 0, 0);",1,0,0,1,2,3,0,2,0,8,81,2,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,277,            pool[i] = din.readUTF().intern();,0,0,1,3,6,0,3,0,0,6,33,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,116,        setProvider0(null);,0,0,0,1,2,0,1,0,0,2,19,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,497,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.002302815,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,6,99,        return new HashMap(7);,0,0,0,1,2,0,0,1,0,1,22,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,572,        if (nameProvider == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,107,        if (resourcePath == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,174,        return new TreeSet<String>(iZoneInfoMap.keySet());,0,0,0,2,4,0,2,2,0,4,50,5,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,255,"            readZoneInfoMap(din, map);",0,0,0,1,2,0,3,0,0,3,26,7,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,474,            String providerClass =,1,0,0,0,0,0,0,1,0,2,22,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,476,            if (providerClass != null) {,1,1,0,1,3,0,0,0,0,2,28,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,471,        Provider provider = null;,1,0,0,0,0,0,0,1,0,2,25,4,0.002302815,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,6,37,"    private HashMap<Locale, Map<String, Map<String, Object>>> iByLocaleCache = createCache();",1,0,0,1,2,1,1,7,0,10,89,2,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,282,        for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,284,"                zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);",0,0,1,5,10,0,6,0,0,8,72,9,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,214,        return in;,1,0,0,0,0,0,0,0,0,1,10,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,82,"        this(resourcePath, null, false);",1,0,0,1,2,0,0,0,0,2,32,4,0.002302815,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,6,39,    public DefaultNameProvider() {,1,0,0,1,3,1,0,0,0,2,30,2,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,141,        if (obj == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.002302815,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,6,88,        if (this == obj) {,1,1,0,1,3,0,0,0,0,2,18,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,573,            nameProvider = new DefaultNameProvider();,1,0,0,1,2,0,0,1,0,3,41,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,543,            nameProvider = getDefaultNameProvider();,1,0,0,1,2,0,1,0,0,3,40,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,542,        if (nameProvider == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,545,        cNameProvider = nameProvider;,2,0,0,0,0,0,0,0,0,3,29,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,252,"        Map<String, Object> map = new ConcurrentHashMap<String, Object>();",1,0,0,1,2,0,0,6,0,7,66,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,253,        DataInputStream din = new DataInputStream(in);,2,0,0,1,2,0,0,2,0,4,46,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,111,            resourcePath += '/';,1,0,0,0,0,0,0,0,0,3,20,6,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,258,                din.close();,0,0,0,1,2,0,2,0,0,2,12,9,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,110,"        if (!resourcePath.endsWith(""/"")) {",0,0,0,2,5,0,2,0,0,4,34,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,443,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,444,            provider = getDefaultProvider();,1,0,0,1,2,0,1,0,0,3,32,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,446,        Set<String> ids = provider.getAvailableIDs();,1,0,0,1,2,0,2,2,0,5,45,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,447,        if (ids == null || ids.size() == 0) {,1,3,0,2,5,0,2,0,0,6,37,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,721,        iID = id;,2,0,0,0,0,0,0,0,0,3,9,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,263,        return map;,1,0,0,0,0,0,0,0,0,1,11,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,262,"        map.put(""UTC"", new SoftReference<DateTimeZone>(DateTimeZone.UTC));",2,0,0,2,4,0,2,2,0,7,66,5,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,123,"        iZoneInfoMap = loadZoneInfoMap(openResource(""ZoneInfoMap""));",1,0,0,2,4,0,2,0,0,5,60,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,196,        if (iFileDir != null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,199,            String path = iResourcePath.concat(name);,1,0,0,1,2,0,3,1,0,5,41,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,458,        cAvailableIDs = ids;,2,0,0,0,0,0,0,0,0,3,20,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,718,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,576,        return nameProvider;,1,0,0,0,0,0,0,0,0,1,20,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,717,    protected DateTimeZone(String id) {,2,0,0,1,3,1,0,1,0,4,35,2,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,281,        size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,0,4,31,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,276,        for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,121,        iLoader = loader;,2,0,0,0,0,0,0,0,0,3,17,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,501,        return provider;,1,0,0,0,0,0,0,0,0,1,16,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,153,            DateTimeZone tz = ref.get();,1,0,0,1,2,0,2,1,0,4,28,6,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,152,            SoftReference<DateTimeZone> ref = (SoftReference<DateTimeZone>) obj;,2,0,0,1,2,0,0,4,0,6,68,6,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,150,        if (obj instanceof SoftReference<?>) {,1,0,0,1,3,0,0,1,0,2,38,5,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,155,                return tz;,1,0,0,0,0,0,0,0,0,1,10,8,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,154,            if (tz != null) {,1,1,0,1,3,0,0,0,0,2,17,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,457,        cProvider = provider;,2,0,0,0,0,0,0,0,0,3,21,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,454,"        if (!UTC.equals(provider.getZone(""UTC""))) {",0,0,0,3,7,0,4,0,0,6,43,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,451,"        if (!ids.contains(""UTC"")) {",0,0,0,2,5,0,2,0,0,4,27,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,118,            loader = getClass().getClassLoader();,1,0,0,2,4,0,2,0,0,4,37,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,557,        NameProvider nameProvider = null;,1,0,0,0,0,0,0,1,0,2,33,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,488,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,274,        int size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,0,3,35,5,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,275,        String[] pool = new String[size];,1,0,1,2,4,0,0,2,0,4,33,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,490,"                provider = new ZoneInfoProvider(""org/joda/time/tz/data"");",1,0,0,1,2,0,0,1,0,4,57,8,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,115,        iResourcePath = resourcePath;,2,0,0,0,0,0,0,0,0,3,29,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,114,        iFileDir = null;,1,0,0,0,0,0,0,0,0,2,16,4,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,559,"            String providerClass = System.getProperty(""org.joda.time.DateTimeZone.NameProvider"");",1,0,0,1,2,0,2,1,0,5,85,6,0.002302815,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,6,89,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.002302815,0
defect4j,time,org/joda/time/DateTimeZone,6,117,        setNameProvider0(null);,0,0,0,1,2,0,1,0,0,2,23,4,0.002302815,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,6,117,        if (loader == null && !favorSystemLoader) {,2,2,0,1,3,0,0,0,0,5,43,4,0.002302815,0
defect4j,time,org/joda/time/chrono/GJChronology,6,653,            if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,5,0.002287024,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,411,            i2 = i2 - unitMillis + 1;,3,2,0,0,0,0,0,0,0,6,25,6,0.002259334,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,163,"            chain = (chain.iNextInfo = new Info(iZone, periodStart));",5,0,0,2,4,0,0,1,0,8,57,6,0.00225471,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,162,            periodStart = next;,2,0,0,0,0,0,0,0,0,3,19,6,0.00225471,0
defect4j,time,org/joda/time/DateTimeZone,17,900,        } else if (offsetLocal >= 0) {,1,1,0,1,4,0,0,0,0,2,30,5,0.002231355,0
defect4j,time,org/joda/time/DateTimeZone,17,910,        return offsetAdjusted;,1,0,0,0,0,0,0,0,0,1,22,4,0.002212187,0
defect4j,time,org/joda/time/DateTimeUtils,16,83,        cMillisProvider = new FixedMillisProvider(fixedMillis);,2,0,0,1,2,0,0,1,0,4,55,4,0.002204207,0
defect4j,time,org/joda/time/DateTimeUtils,16,82,        checkPermission();,0,0,0,1,2,0,1,0,0,1,18,5,0.002204207,0
defect4j,time,org/joda/time/DateTimeUtils,16,415,            iMillis = fixedMillis;,2,0,0,0,0,0,0,0,0,3,22,5,0.002204207,0
defect4j,time,org/joda/time/DateTimeUtils,16,414,        FixedMillisProvider(long fixedMillis) {,2,0,0,1,3,0,0,0,0,2,39,3,0.002204207,0
defect4j,time,org/joda/time/DateTimeUtils,16,130,        if (sm != null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.002199072,0
defect4j,time,org/joda/time/DateTimeUtils,16,69,        cMillisProvider = SYSTEM_MILLIS_PROVIDER;,2,0,0,0,0,0,0,0,0,3,41,4,0.002199072,0
defect4j,time,org/joda/time/DateTimeUtils,16,68,        checkPermission();,0,0,0,1,2,0,1,0,0,1,18,5,0.002199072,0
defect4j,time,org/joda/time/DateTimeUtils,16,129,        SecurityManager sm = System.getSecurityManager();,1,0,0,1,2,0,2,1,0,4,49,4,0.002199072,0
defect4j,time,org/joda/time/DateTimeFieldType,17,498,                    return chronology.dayOfMonth();,0,0,0,1,2,0,2,0,0,2,31,7,0.002182063,0
defect4j,time,org/joda/time/DateTimeZone,17,887,        if (offsetLocal != offsetAdjusted) {,2,1,0,1,3,0,0,0,0,3,36,4,0.002167246,0
defect4j,time,org/joda/time/DateTimeZone,17,882,        final int offsetLocal = getOffset(instantLocal);,1,0,0,1,2,1,2,0,0,4,48,4,0.002167246,0
defect4j,time,org/joda/time/DateTimeZone,17,884,        final long instantAdjusted = instantLocal - offsetLocal;,3,1,0,0,0,1,0,0,0,5,56,4,0.002167246,0
defect4j,time,org/joda/time/DateTimeZone,17,885,        final int offsetAdjusted = getOffset(instantAdjusted);,1,0,0,1,2,1,2,0,0,4,54,4,0.002167246,0
defect4j,time,org/joda/time/DateTimeUtils,16,255,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.002155157,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,133,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,0.002133588,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,184,                    dayOfYear--;,1,0,0,0,0,0,0,0,0,2,12,10,0.002105222,0
defect4j,time,org/joda/time/DateTimeFieldType,17,520,                    return chronology.minuteOfHour();,0,0,0,1,2,0,2,0,0,2,33,7,0.002081616,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,120,"            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);",0,0,0,1,2,0,6,0,0,6,74,7,0.002067296,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,123,        return iZone.hashCode();,0,0,0,1,2,0,2,0,0,2,24,5,0.00206561,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,118,        if ((base = iBase) != null && (iBaseFlags & 6) == 6) {,3,4,0,3,7,0,0,0,0,8,54,4,0.002048554,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,140,            return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,50,7,0.002027468,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,16,127,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,0.002023236,0
defect4j,time,org/joda/time/DateTimeFieldType,17,496,                    return chronology.monthOfYear();,0,0,0,1,2,0,2,0,0,2,32,7,0.002007733,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,389,            super(field.getType());,0,0,0,2,4,0,2,0,0,2,23,6,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,284,            super(field.getType());,0,0,0,2,4,0,2,0,0,2,23,6,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,285,            if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,288,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,289,            iTimeField = useTimeArithmetic(field);,1,0,0,1,2,0,2,0,0,4,38,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,298,            return iField.getUnitMillis();,0,0,0,1,2,0,2,0,0,2,30,6,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,290,            iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,193,"        fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted);",4,0,0,1,2,0,2,0,0,7,69,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,190,"        fields.minuteOfHour = convertField(fields.minuteOfHour, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,191,"        fields.minuteOfDay = convertField(fields.minuteOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,196,"        fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,194,"        fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,177,"        fields.era = convertField(fields.era, converted);",4,0,0,1,2,0,2,0,0,7,49,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,189,"        fields.secondOfDay = convertField(fields.secondOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,188,"        fields.secondOfMinute = convertField(fields.secondOfMinute, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,184,"        fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);",4,0,0,1,2,0,2,0,0,7,77,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,187,"        fields.millisOfDay = convertField(fields.millisOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,181,"        fields.monthOfYear = convertField(fields.monthOfYear, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,180,"        fields.dayOfYear = convertField(fields.dayOfYear, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,183,"        fields.weekyear = convertField(fields.weekyear, converted);",4,0,0,1,2,0,2,0,0,7,59,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,182,"        fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,165,"        fields.halfdays = convertField(fields.halfdays, converted);",4,0,0,1,2,0,2,0,0,7,59,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,395,            iDurationField = durationField;,2,0,0,0,0,0,0,0,0,3,31,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,397,            iRangeDurationField = rangeDurationField;,2,0,0,0,0,0,0,0,0,3,41,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,82,"        super(base, zone);",2,0,0,1,2,0,0,0,0,2,18,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,86,        return (DateTimeZone)getParam();,0,0,0,2,4,0,1,1,0,2,32,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,173,"        fields.year = convertField(fields.year, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,174,"        fields.yearOfEra = convertField(fields.yearOfEra, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,175,"        fields.yearOfCentury = convertField(fields.yearOfCentury, converted);",4,0,0,1,2,0,2,0,0,7,69,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,178,"        fields.dayOfWeek = convertField(fields.dayOfWeek, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,179,"        fields.dayOfMonth = convertField(fields.dayOfMonth, converted);",4,0,0,1,2,0,2,0,0,7,63,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,224,        return zonedField;,1,0,0,0,0,0,0,0,0,1,18,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,163,"        fields.days = convertField(fields.days, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,162,"        fields.weeks = convertField(fields.weeks, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,161,"        fields.weekyears = convertField(fields.weekyears, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,160,"        fields.months = convertField(fields.months, converted);",4,0,0,1,2,0,2,0,0,7,55,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,167,"        fields.minutes = convertField(fields.minutes, converted);",4,0,0,1,2,0,2,0,0,7,57,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,166,"        fields.hours = convertField(fields.hours, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,169,"        fields.millis = convertField(fields.millis, converted);",4,0,0,1,2,0,2,0,0,7,55,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,168,"        fields.seconds = convertField(fields.seconds, converted);",4,0,0,1,2,0,2,0,0,7,57,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,186,"        fields.millisOfSecond = convertField(fields.millisOfSecond, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.001997069,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,109,        return getWrappedField().getUnitMillis() * iScalar;,1,1,0,2,4,0,2,0,0,4,51,4,0.001997069,0
defect4j,time,org/joda/time/DateTimeZone,16,1250,        return 57 + getID().hashCode();,0,1,0,2,4,0,2,0,0,3,31,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,157,"        fields.eras = convertField(fields.eras, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,153,"        HashMap<Object, Object> converted = new HashMap<Object, Object>();",1,0,0,1,2,0,0,6,0,7,66,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,158,"        fields.centuries = convertField(fields.centuries, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,159,"        fields.years = convertField(fields.years, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,208,        return zonedField;,1,0,0,0,0,0,0,0,0,1,18,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,204,            return (DurationField)converted.get(field);,0,0,0,2,4,0,3,1,0,4,43,7,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,203,        if (converted.containsKey(field)) {,0,0,0,2,5,0,3,0,0,3,35,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,200,        if (field == null || !field.isSupported()) {,1,2,0,2,5,0,2,0,0,6,44,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,201,            return field;,1,0,0,0,0,0,0,0,0,1,13,6,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,56,        if (base == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,59,        base = base.withUTC();,1,0,0,1,2,0,2,0,0,4,22,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,212,        if (field == null || !field.isSupported()) {,1,2,0,2,5,0,2,0,0,6,44,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,215,        if (converted.containsKey(field)) {,0,0,0,2,5,0,3,0,0,3,35,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,218,        ZonedDateTimeField zonedField =,1,0,0,0,0,0,0,1,0,2,31,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,60,        if (base == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,63,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,66,"        return new ZonedChronology(base, zone);",2,0,0,1,2,0,0,1,0,3,39,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,72,        return field != null && field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12;,3,4,0,1,2,0,2,0,0,9,87,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,206,"        ZonedDurationField zonedField = new ZonedDurationField(field, getZone());",2,0,0,2,4,0,1,2,0,5,73,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,207,"        converted.put(field, zonedField);",0,0,0,1,2,0,4,0,0,4,33,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,176,"        fields.centuryOfEra = convertField(fields.centuryOfEra, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,223,"        converted.put(field, zonedField);",0,0,0,1,2,0,4,0,0,4,33,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,398,            iLeapDurationField = leapDurationField;,2,0,0,0,0,0,0,0,0,3,39,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,394,            iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,396,            iTimeField = useTimeArithmetic(durationField);,1,0,0,1,2,0,2,0,0,4,46,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,390,            if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,393,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,192,"        fields.hourOfDay = convertField(fields.hourOfDay, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.001997069,0
defect4j,time,org/joda/time/chrono/ZonedChronology,16,195,"        fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted);",4,0,0,1,2,0,2,0,0,7,79,4,0.001997069,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,220,        return iChronology.weeks();,0,0,0,1,2,0,2,0,0,2,27,5,0.001995542,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,16,101,        return getWrappedField().getLeapDurationField();,0,0,0,2,4,0,2,0,0,2,48,5,0.001995542,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,149,        hash += getType().hashCode();,1,0,0,2,4,0,2,0,0,4,29,4,0.001995542,0
defect4j,time,org/joda/time/field/MillisDurationField,16,155,        return (int) getUnitMillis();,0,0,0,2,4,0,1,0,0,1,29,6,0.001995542,0
defect4j,time,org/joda/time/field/DecoratedDurationField,16,69,        return iField;,1,0,0,0,0,0,0,0,0,1,14,4,0.001995542,0
defect4j,time,org/joda/time/field/MillisDurationField,16,49,        return DurationFieldType.millis();,0,0,0,1,2,0,2,0,0,2,34,5,0.001995542,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,328,        return iChronology.days();,0,0,0,1,2,0,2,0,0,2,26,5,0.001995542,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,150,        hash += getWrappedField().hashCode();,1,0,0,2,4,0,2,0,0,4,37,4,0.001995542,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,151,        return hash;,1,0,0,0,0,0,0,0,0,1,12,4,0.001995542,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,147,        long scalar = iScalar;,2,0,0,0,0,0,0,0,0,2,22,5,0.001995542,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,148,        int hash = (int) (scalar ^ (scalar >>> 32));,3,2,0,3,6,0,0,0,0,5,44,5,0.001995542,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,145,        return hash;,1,0,0,0,0,0,0,0,0,1,12,4,0.001995542,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,144,        hash += getType().hashCode();,1,0,0,2,4,0,2,0,0,4,29,4,0.001995542,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,143,        int hash = (int) (millis ^ (millis >>> 32));,3,2,0,3,6,0,0,0,0,5,44,5,0.001995542,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,142,        long millis = iUnitMillis;,2,0,0,0,0,0,0,0,0,2,26,5,0.001995542,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,111,        return iChronology.days();,0,0,0,1,2,0,2,0,0,2,26,5,0.001995542,0
defect4j,time,org/joda/time/DateTimeFieldType,17,516,                    return chronology.hourOfDay();,0,0,0,1,2,0,2,0,0,2,30,7,0.001991517,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,16,94,        return iChronology.weeks();,0,0,0,1,2,0,2,0,0,2,27,5,0.001986407,0
defect4j,time,org/joda/time/DateTimeFieldType,17,492,                    return chronology.year();,0,0,0,1,2,0,2,0,0,2,25,7,0.001985088,0
defect4j,time,org/joda/time/DateTimeZone,16,174,        SecurityManager sm = System.getSecurityManager();,1,0,0,1,2,0,2,1,0,4,49,4,0.001977319,0
defect4j,time,org/joda/time/DateTimeZone,16,175,        if (sm != null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.001977319,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,315,        return iParam;,1,0,0,0,0,0,0,0,0,1,14,4,0.001977319,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,16,90,        return iField.getRangeDurationField();,0,0,0,1,2,0,2,0,0,2,38,5,0.001977319,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,139,        return iRangeField;,1,0,0,0,0,0,0,0,0,1,19,4,0.001977319,0
defect4j,time,org/joda/time/DateTimeZone,16,178,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001977319,0
defect4j,time,org/joda/time/DateTimeZone,16,181,        synchronized(DateTimeZone.class) {,0,0,0,1,3,0,0,1,0,1,34,6,0.001977319,0
defect4j,time,org/joda/time/DateTimeZone,16,182,            cDefault = zone;,2,0,0,0,0,0,0,0,0,3,16,6,0.001977319,0
defect4j,time,org/joda/time/field/BaseDurationField,16,55,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,0.001975809,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,16,58,        return iChronology.weekyears();,0,0,0,1,2,0,2,0,0,2,31,5,0.001971287,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,16,56,        return iChronology.years();,0,0,0,1,2,0,2,0,0,2,27,5,0.001971287,0
defect4j,time,org/joda/time/DateTimeUtils,16,252,        if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.001966777,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,147,        return this.size;,1,0,0,0,0,0,0,0,0,1,17,5,0.001964286,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,16,51,        return iChronology.months();,0,0,0,1,2,0,2,0,0,2,28,5,0.001959286,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,309,        return iChronology.years();,0,0,0,1,2,0,2,0,0,2,27,5,0.001959286,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,490,                builder.appendDayOfMonth(tokenLen);,0,0,0,1,2,0,3,0,0,3,35,8,0.001958912,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,121,            return MAX_DAYS_PER_MONTH_ARRAY[month - 1];,1,1,1,1,2,0,0,0,0,3,43,7,0.001953425,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,16,160,            return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,5,0.00193553,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,169,        if (getBase().getZone() == DateTimeZone.UTC) {,2,1,0,3,7,0,2,0,0,5,46,4,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,173,            fields.yearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,0,0,1,0,4,50,6,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,171,            fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,6,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,175,            fields.weekyearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,0,0,1,0,4,54,6,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,178,            fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,6,0.001931112,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,122,        return iRangeField;,1,0,0,0,0,0,0,0,0,1,19,4,0.001931112,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,81,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,16,91,        return getWrappedField().getMaximumValue();,0,0,0,2,4,0,2,0,0,2,43,5,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,63,"    private static final Map<DateTimeZone, ISOChronology> cCache = new HashMap<DateTimeZone, ISOChronology>();",1,0,0,1,2,3,0,6,0,10,106,2,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,65,        cFastCache = new ISOChronology[FAST_CACHE_SIZE];,1,0,1,1,2,0,0,1,0,4,48,4,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,66,        INSTANCE_UTC = new ISOChronology(GregorianChronology.getInstanceUTC());,1,0,0,2,4,0,2,1,0,5,71,4,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,67,"        cCache.put(DateTimeZone.UTC, INSTANCE_UTC);",2,0,0,1,2,0,3,0,0,5,43,5,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,16,46,"        super(GregorianChronology.getInstanceUTC().year(), DateTimeFieldType.yearOfEra());",0,0,0,4,8,0,5,0,0,5,82,5,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,16,40,    static final DateTimeField INSTANCE = new ISOYearOfEraDateTimeField();,1,0,0,1,2,2,0,2,0,5,70,2,0.001931112,0
defect4j,time,org/joda/time/chrono/ISOChronology,16,122,"        super(base, null);",1,0,0,1,2,0,0,0,0,2,18,3,0.001931112,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,146,        return DateTimeZone.UTC;,2,0,0,0,0,0,0,0,0,2,24,5,0.001926706,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,143,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.001925239,0
defect4j,time,org/joda/time/base/BaseDateTime,17,126,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.001922544,0
defect4j,time,org/joda/time/base/BaseDateTime,17,125,        iChronology = checkChronology(chronology);,1,0,0,1,2,0,2,0,0,4,42,4,0.001922544,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,141,        return iUnitField;,1,0,0,0,0,0,0,0,0,1,18,4,0.001916468,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,45,public final class GregorianChronology extends BasicGJChronology {,1,0,0,0,1,2,0,1,0,4,66,1,0.001854893,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,321,            fields.copyFieldsFrom(iBase);,0,0,0,1,2,0,3,0,0,3,29,7,0.00185068,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,372,            flags = ,1,0,0,0,0,0,0,0,0,2,7,6,0.00185068,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,229,        return MILLIS_PER_YEAR;,1,0,0,0,0,0,0,0,0,1,23,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,117,            if (chronos == null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,68,"    private static final Map<DateTimeZone, GregorianChronology[]> cCache = new HashMap<DateTimeZone, GregorianChronology[]>();",1,0,0,3,6,3,0,6,0,10,122,2,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,148,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,191,        if (getBase() == null) {,0,1,0,2,5,0,1,0,0,3,24,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,71,        INSTANCE_UTC = getInstance(DateTimeZone.UTC);,3,0,0,1,2,0,1,0,0,5,45,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,122,                chrono = chronos[minDaysInFirstWeek - 1];,2,1,1,1,2,0,0,0,0,5,41,8,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,225,        return MAX_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,237,        return MILLIS_PER_MONTH;,1,0,0,0,0,0,0,0,0,1,24,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,192,            super.assemble(fields);,2,0,0,1,2,0,0,0,0,2,23,7,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,118,                chronos = new GregorianChronology[7];,1,0,0,1,2,0,0,1,0,3,37,8,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,115,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,116,            GregorianChronology[] chronos = cCache.get(zone);,1,0,0,2,4,0,3,1,0,5,49,6,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,111,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,100,"        return getInstance(zone, 4);",0,0,0,1,2,0,2,0,0,2,28,5,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,138,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,127,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,129,"                    chrono = new GregorianChronology(null, null, minDaysInFirstWeek);",2,0,0,1,2,0,0,1,0,5,65,10,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,128,                if (zone == DateTimeZone.UTC) {,3,1,0,1,3,0,0,0,0,4,31,8,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,119,"                cCache.put(zone, chronos);",0,0,0,1,2,0,4,0,0,4,26,9,0.001845079,0
defect4j,time,org/joda/time/chrono/GregorianChronology,16,135,                chronos[minDaysInFirstWeek - 1] = chrono;,2,1,1,1,2,0,0,0,0,5,41,8,0.001845079,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,75,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,62,            MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = minSum;,2,1,1,1,2,0,0,0,0,5,48,6,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,61,            minSum += millis;,2,0,0,0,0,0,0,0,0,3,17,6,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,66,            maxSum += millis;,2,0,0,0,0,0,0,0,0,3,17,6,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,67,            MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = maxSum;,2,1,1,1,2,0,0,0,0,5,48,6,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,64,            millis = MAX_DAYS_PER_MONTH_ARRAY[i],1,0,1,1,2,0,0,0,0,4,36,6,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,57,        long maxSum = 0;,1,0,0,0,0,0,0,0,0,1,16,5,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,56,        long minSum = 0;,1,0,0,0,0,0,0,0,0,1,16,5,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,54,        MAX_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];,1,0,0,1,2,0,0,0,0,2,47,4,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,53,        MIN_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];,1,0,0,1,2,0,0,0,0,2,47,4,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,59,            long millis = MIN_DAYS_PER_MONTH_ARRAY[i],1,0,1,1,2,0,0,0,0,3,41,7,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,58,        for (int i = 0; i < 11; i++) {,3,1,0,1,3,0,0,0,0,5,30,4,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,42,    private static final int[] MIN_DAYS_PER_MONTH_ARRAY = {,1,0,0,1,3,3,0,0,0,4,55,2,0.001842285,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,45,    private static final int[] MAX_DAYS_PER_MONTH_ARRAY = {,1,0,0,1,3,3,0,0,0,4,55,2,0.001842285,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,168,        return iSeconds;,1,0,0,0,0,0,0,0,0,1,16,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,445,                if (isSupported(f = chrono.millis())) {,1,0,0,3,7,0,3,0,0,5,39,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,240,        return iWeekOfWeekyear;,1,0,0,0,0,0,0,0,0,1,23,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,248,        return iWeekyear;,1,0,0,0,0,0,0,0,0,1,17,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,486,                    millisOfSecond = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,485,                if (isSupported(f = chrono.millisOfSecond())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,488,                if (isSupported(f = chrono.millisOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,489,                    millisOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,469,                if (isSupported(f = chrono.months())) {,1,0,0,3,7,0,3,0,0,5,39,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,466,                if (isSupported(f = chrono.weekyears())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,467,                    weekyears = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,460,                if (isSupported(f = chrono.days())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,461,                    days = f;,2,0,0,0,0,0,0,0,0,3,9,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,463,                if (isSupported(f = chrono.weeks())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,244,        return iWeekyears;,1,0,0,0,0,0,0,0,0,1,18,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,256,        return iMonths;,1,0,0,0,0,0,0,0,0,1,15,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,252,        return iWeekyearOfCentury;,1,0,0,0,0,0,0,0,0,1,26,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,491,                if (isSupported(f = chrono.secondOfMinute())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,492,                    secondOfMinute = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,495,                    secondOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,494,                if (isSupported(f = chrono.secondOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,497,                if (isSupported(f = chrono.minuteOfHour())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,498,                    minuteOfHour = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,478,                if (isSupported(f = chrono.eras())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,473,                    years = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,472,                if (isSupported(f = chrono.years())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,470,                    months = f;,2,0,0,0,0,0,0,0,0,3,11,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,260,        return iMonthOfYear;,1,0,0,0,0,0,0,0,0,1,20,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,264,        return iYears;,1,0,0,0,0,0,0,0,0,1,14,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,464,                    weeks = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,448,                if (isSupported(f = chrono.seconds())) {,1,0,0,3,7,0,3,0,0,5,40,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,449,                    seconds = f;,2,0,0,0,0,0,0,0,0,3,12,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,446,                    millis = f;,2,0,0,0,0,0,0,0,0,3,11,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,188,        return iMinuteOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,503,                if (isSupported(f = chrono.hourOfDay())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,501,                    minuteOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,500,                if (isSupported(f = chrono.minuteOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,276,        return iYearOfCentury;,1,0,0,0,0,0,0,0,0,1,22,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,272,        return iYearOfEra;,1,0,0,0,0,0,0,0,0,1,18,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,455,                    hours = f;,2,0,0,0,0,0,0,0,0,3,10,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,454,                if (isSupported(f = chrono.hours())) {,1,0,0,3,7,0,3,0,0,5,38,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,451,                if (isSupported(f = chrono.minutes())) {,1,0,0,3,7,0,3,0,0,5,40,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,452,                    minutes = f;,2,0,0,0,0,0,0,0,0,3,12,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,192,        return iHours;,1,0,0,0,0,0,0,0,0,1,14,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,196,        return iHourOfDay;,1,0,0,0,0,0,0,0,0,1,18,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,204,        return iHalfdays;,1,0,0,0,0,0,0,0,0,1,17,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,515,                if (isSupported(f = chrono.halfdayOfDay())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,516,                    halfdayOfDay = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,510,                    hourOfHalfday = f;,2,0,0,0,0,0,0,0,0,3,18,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,512,                if (isSupported(f = chrono.clockhourOfHalfday())) {,1,0,0,3,7,0,3,0,0,5,51,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,513,                    clockhourOfHalfday = f;,2,0,0,0,0,0,0,0,0,3,23,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,518,                if (isSupported(f = chrono.dayOfWeek())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,519,                    dayOfWeek = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,180,        return iMinutes;,1,0,0,0,0,0,0,0,0,1,16,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,184,        return iMinuteOfHour;,1,0,0,0,0,0,0,0,0,1,21,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,212,        return iClockhourOfHalfday;,1,0,0,0,0,0,0,0,0,1,27,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,216,        return iHalfdayOfDay;,1,0,0,0,0,0,0,0,0,1,21,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,507,                    clockhourOfDay = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,506,                if (isSupported(f = chrono.clockhourOfDay())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,504,                    hourOfDay = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,509,                if (isSupported(f = chrono.hourOfHalfday())) {,1,0,0,3,7,0,3,0,0,5,46,7,0.001833932,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,92,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,457,                if (isSupported(f = chrono.halfdays())) {,1,0,0,3,7,0,3,0,0,5,41,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,458,                    halfdays = f;,2,0,0,0,0,0,0,0,0,3,13,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,224,        return iDayOfWeek;,1,0,0,0,0,0,0,0,0,1,18,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,220,        return iDays;,1,0,0,0,0,0,0,0,0,1,13,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,228,        return iDayOfMonth;,1,0,0,0,0,0,0,0,0,1,19,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,533,                if (isSupported(f = chrono.weekyearOfCentury())) {,1,0,0,3,7,0,3,0,0,5,50,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,530,                if (isSupported(f = chrono.weekyear())) {,1,0,0,3,7,0,3,0,0,5,41,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,531,                    weekyear = f;,2,0,0,0,0,0,0,0,0,3,13,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,536,                if (isSupported(f = chrono.monthOfYear())) {,1,0,0,3,7,0,3,0,0,5,44,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,537,                    monthOfYear = f;,2,0,0,0,0,0,0,0,0,3,16,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,534,                    weekyearOfCentury = f;,2,0,0,0,0,0,0,0,0,3,22,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,539,                if (isSupported(f = chrono.year())) {,1,0,0,3,7,0,3,0,0,5,37,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,156,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.001833932,0
defect4j,time,org/joda/time/field/MillisDurationField,16,62,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,232,        return iDayOfYear;,1,0,0,0,0,0,0,0,0,1,18,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,236,        return iWeeks;,1,0,0,0,0,0,0,0,0,1,14,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,528,                    weekOfWeekyear = f;,2,0,0,0,0,0,0,0,0,3,19,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,525,                    dayOfYear = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,524,                if (isSupported(f = chrono.dayOfYear())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,527,                if (isSupported(f = chrono.weekOfWeekyear())) {,1,0,0,3,7,0,3,0,0,5,47,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,521,                if (isSupported(f = chrono.dayOfMonth())) {,1,0,0,3,7,0,3,0,0,5,43,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,522,                    dayOfMonth = f;,2,0,0,0,0,0,0,0,0,3,15,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,176,        return iSecondOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,476,                    centuries = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,475,                if (isSupported(f = chrono.centuries())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,558,            return field == null ? false : field.isSupported();,1,1,0,1,2,0,2,0,0,5,51,6,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,551,                if (isSupported(f = chrono.era())) {,1,0,0,3,7,0,3,0,0,5,36,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,552,                    era = f;,2,0,0,0,0,0,0,0,0,3,8,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,172,        return iSecondOfMinute;,1,0,0,0,0,0,0,0,0,1,23,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,549,                    centuryOfEra = f;,2,0,0,0,0,0,0,0,0,3,17,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,548,                if (isSupported(f = chrono.centuryOfEra())) {,1,0,0,3,7,0,3,0,0,5,45,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,543,                    yearOfEra = f;,2,0,0,0,0,0,0,0,0,3,14,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,542,                if (isSupported(f = chrono.yearOfEra())) {,1,0,0,3,7,0,3,0,0,5,42,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,540,                    year = f;,2,0,0,0,0,0,0,0,0,3,9,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,546,                    yearOfCentury = f;,2,0,0,0,0,0,0,0,0,3,18,8,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,545,                if (isSupported(f = chrono.yearOfCentury())) {,1,0,0,3,7,0,3,0,0,5,46,7,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,164,        return iMillisOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,160,        return iMillisOfSecond;,1,0,0,0,0,0,0,0,0,1,23,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,280,        return iCenturies;,1,0,0,0,0,0,0,0,0,1,18,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,284,        return iCenturyOfEra;,1,0,0,0,0,0,0,0,0,1,21,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,288,        return iEras;,1,0,0,0,0,0,0,0,0,1,13,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,208,        return iHourOfHalfday;,1,0,0,0,0,0,0,0,0,1,22,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,200,        return iClockhourOfDay;,1,0,0,0,0,0,0,0,0,1,23,4,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,562,            return field == null ? false : field.isSupported();,1,1,0,1,2,0,2,0,0,5,51,6,0.001833932,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,292,        return iEra;,1,0,0,0,0,0,0,0,0,1,12,4,0.001833932,0
defect4j,time,org/joda/time/field/MillisDurationField,16,71,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,58,        if (divisor < 2) {,1,1,0,1,3,0,0,0,0,2,18,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,56,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,295,        fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,294,        fields.years = fields.year.getDurationField();,4,0,0,1,2,0,1,0,0,6,46,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,296,        fields.months = fields.monthOfYear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,90,        cMillisOfSecondField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,47,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,93,        cMillisOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,96,        cSecondOfMinuteField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,47,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,99,        cSecondOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.001832544,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,54,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,16,42,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,51,        iScalar = scalar;,2,0,0,0,0,0,0,0,0,3,17,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,352,            iClockhourOfHalfday = (f = fields.clockhourOfHalfday) != null ? f : super.clockhourOfHalfday();,6,1,0,2,4,0,0,0,0,9,95,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,353,            iHalfdayOfDay       = (f = fields.halfdayOfDay)       != null ? f : super.halfdayOfDay();,6,1,0,2,4,0,0,0,0,9,89,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,350,            iClockhourOfDay     = (f = fields.clockhourOfDay)     != null ? f : super.clockhourOfDay();,6,1,0,2,4,0,0,0,0,9,91,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,351,            iHourOfHalfday      = (f = fields.hourOfHalfday)      != null ? f : super.hourOfHalfday();,6,1,0,2,4,0,0,0,0,9,90,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,356,            iDayOfYear          = (f = fields.dayOfYear)          != null ? f : super.dayOfYear();,6,1,0,2,4,0,0,0,0,9,86,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,357,            iWeekOfWeekyear     = (f = fields.weekOfWeekyear)     != null ? f : super.weekOfWeekyear();,6,1,0,2,4,0,0,0,0,9,91,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,354,            iDayOfWeek          = (f = fields.dayOfWeek)          != null ? f : super.dayOfWeek();,6,1,0,2,4,0,0,0,0,9,86,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,355,            iDayOfMonth         = (f = fields.dayOfMonth)         != null ? f : super.dayOfMonth();,6,1,0,2,4,0,0,0,0,9,87,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,358,            iWeekyear           = (f = fields.weekyear)           != null ? f : super.weekyear();,6,1,0,2,4,0,0,0,0,9,85,5,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,236,        return HOUR_OF_HALFDAY_TYPE;,1,0,0,0,0,0,0,0,0,1,28,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,119,        return iChronology.getMaxYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,319,        Fields fields = new Fields();,1,0,0,1,2,0,0,2,0,3,29,4,0.001832544,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,16,46,        if (field.getMinimumValue() != 0) {,0,1,0,2,5,0,2,0,0,3,35,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,750,"            super(DateTimeFieldType.halfdayOfDay(), cHalfdaysField, cDaysField);",2,0,0,2,4,0,2,0,0,4,68,5,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,44,"        super(DateTimeFieldType.weekyear(), chronology.getAverageMillisPerYear());",0,0,0,3,6,0,4,0,0,4,74,5,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,16,45,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,51,"        super(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());",0,0,0,3,6,0,4,0,0,4,78,5,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,53,        iMax = iChronology.getMaxMonth();,1,0,0,1,2,0,2,0,0,4,33,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,52,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,54,        iLeapMonth = leapMonth;,2,0,0,0,0,0,0,0,0,3,23,4,0.001832544,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,47,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.001832544,0
defect4j,time,org/joda/time/field/ScaledDurationField,16,48,        if (scalar == 0 || scalar == 1) {,2,3,0,1,3,0,0,0,0,5,33,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,345,        return YEAR_OF_CENTURY_TYPE;,1,0,0,0,0,0,0,0,0,1,28,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,348,            iMinuteOfDay        = (f = fields.minuteOfDay)        != null ? f : super.minuteOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,345,            iSecondOfMinute     = (f = fields.secondOfMinute)     != null ? f : super.secondOfMinute();,6,1,0,2,4,0,0,0,0,9,91,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,344,            iMillisOfDay        = (f = fields.millisOfDay)        != null ? f : super.millisOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,347,            iMinuteOfHour       = (f = fields.minuteOfHour)       != null ? f : super.minuteOfHour();,6,1,0,2,4,0,0,0,0,9,89,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,346,            iSecondOfDay        = (f = fields.secondOfDay)        != null ? f : super.secondOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,343,            iMillisOfSecond     = (f = fields.millisOfSecond)     != null ? f : super.millisOfSecond();,6,1,0,2,4,0,0,0,0,9,91,5,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,209,        return MINUTE_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,297,        fields.weekyears = fields.weekyear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,79,        iMax = max;,2,0,0,0,0,0,0,0,0,3,11,4,0.001832544,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,16,40,"        super(yearField, DateTimeFieldType.yearOfEra());",1,0,0,2,4,0,2,0,0,3,48,4,0.001832544,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,16,41,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,16,45,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,50,abstract class BasicChronology extends AssembledChronology {,1,0,0,0,1,1,0,1,0,3,60,1,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,338,            iEras      = (f = fields.eras)      != null ? f : super.eras();,6,1,0,2,4,0,0,0,0,9,63,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,331,            iHalfdays  = (f = fields.halfdays)  != null ? f : super.halfdays();,6,1,0,2,4,0,0,0,0,9,67,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,332,            iDays      = (f = fields.days)      != null ? f : super.days();,6,1,0,2,4,0,0,0,0,9,63,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,333,            iWeeks     = (f = fields.weeks)     != null ? f : super.weeks();,6,1,0,2,4,0,0,0,0,9,64,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,335,            iMonths    = (f = fields.months)    != null ? f : super.months();,6,1,0,2,4,0,0,0,0,9,65,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,336,            iYears     = (f = fields.years)     != null ? f : super.years();,6,1,0,2,4,0,0,0,0,9,64,5,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,174,        return iMin;,1,0,0,0,0,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,218,        return HOUR_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,16,55,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,16,54,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,16,58,        if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,76,"        this(dividedField, dividedField.getType());",1,0,0,2,4,0,2,0,0,3,43,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,330,            iHours     = (f = fields.hours)     != null ? f : super.hours();,6,1,0,2,4,0,0,0,0,9,64,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,334,            iWeekyears = (f = fields.weekyears) != null ? f : super.weekyears();,6,1,0,2,4,0,0,0,0,9,68,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,337,            iCenturies = (f = fields.centuries) != null ? f : super.centuries();,6,1,0,2,4,0,0,0,0,9,68,5,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,73,        int min = (i >= 0) ? i / divisor : ((i + 1) / divisor - 1);,6,5,0,3,6,0,0,0,0,11,59,5,0.001832544,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,69,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,329,            iMinutes   = (f = fields.minutes)   != null ? f : super.minutes();,6,1,0,2,4,0,0,0,0,9,66,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,328,            iSeconds   = (f = fields.seconds)   != null ? f : super.seconds();,6,1,0,2,4,0,0,0,0,9,66,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,323,        assemble(fields);,0,0,0,1,2,0,2,0,0,2,17,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,320,        if (iBase != null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,327,            iMillis    = (f = fields.millis)    != null ? f : super.millis();,6,1,0,2,4,0,0,0,0,9,65,5,0.001832544,0
defect4j,time,org/joda/time/chrono/GJMonthOfYearDateTimeField,16,37,"        super(chronology, 2);",1,0,0,1,2,0,0,0,0,1,21,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,173,        return MILLIS_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.001832544,0
defect4j,time,org/joda/time/field/MillisDurationField,16,38,    public static final DurationField INSTANCE = new MillisDurationField();,1,0,0,1,2,3,0,2,0,6,71,2,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,264,        return DAY_OF_WEEK_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,79,        cMinutesField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,40,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,76,        cMillisField = MillisDurationField.INSTANCE;,3,0,0,0,0,0,0,0,0,4,44,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,77,        cSecondsField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,40,4,0.001832544,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,51,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001832544,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,58,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BaseChronology,16,660,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,268,        return iYear;,1,0,0,0,0,0,0,0,0,1,13,4,0.001832544,0
defect4j,time,org/joda/time/field/BaseDurationField,16,66,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,359,            iWeekyearOfCentury  = (f = fields.weekyearOfCentury)  != null ? f : super.weekyearOfCentury();,6,1,0,2,4,0,0,0,0,9,94,5,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,164,        return MILLIS_OF_SECOND_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,16,70,        return iField;,1,0,0,0,0,0,0,0,0,1,14,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDurationField,16,52,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDurationField,16,53,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDurationField,16,59,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,154,        return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,308,        return iBase;,1,0,0,0,0,0,0,0,0,1,13,4,0.001832544,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,16,57,        iDurationField = new LinkedDurationField(type.getDurationType());,1,0,0,2,4,0,2,1,0,5,65,4,0.001832544,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,16,55,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,16,46,        super(DateTimeFieldType.era());,0,0,0,2,4,0,2,0,0,2,31,5,0.001832544,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,16,47,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,16,61,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,62,            iRangeField = new ScaledDurationField(,1,0,0,0,1,0,0,1,0,3,38,6,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,66,        iDivisor = divisor;,2,0,0,0,0,0,0,0,0,3,19,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,57,"        super(type, unit);",2,0,0,1,2,0,0,0,0,2,18,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,59,        if (!range.isPrecise()) {,0,0,0,2,5,0,2,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,43,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,44,        iUnitMillis = unitMillis;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/field/BaseDurationField,16,48,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,16,41,"        super(DateTimeFieldType.dayOfMonth(), days);",1,0,0,2,4,0,2,0,0,3,44,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,59,        if (rangeField == null) {,1,1,0,1,3,0,0,0,0,2,25,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,58,        DurationField rangeField = field.getDurationField();,1,0,0,1,2,0,2,1,0,4,52,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,54,        if (divisor < 2) {,1,1,0,1,3,0,0,0,0,2,18,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,52,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,45,"        super(DateTimeFieldType.year(), chronology.getAverageMillisPerYear());",0,0,0,3,6,0,4,0,0,4,70,5,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,46,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,138,        iMinDaysInFirstWeek = minDaysInFirstWeek;,2,0,0,0,0,0,0,0,0,3,41,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,131,"        super(base, param);",2,0,0,1,2,0,0,0,0,2,19,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,133,        if (minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7) {,2,3,0,1,3,0,0,0,0,5,55,4,0.001832544,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,16,97,        return getWrappedField().getMaximumValue();,0,0,0,2,4,0,2,0,0,2,43,5,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,264,        fields.year = new BasicYearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,47,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,265,"        fields.yearOfEra = new GJYearOfEraDateTimeField(fields.year, this);",4,0,0,1,2,0,0,1,0,6,67,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,268,        DateTimeField field = new OffsetDateTimeField(,1,0,0,0,1,0,0,2,0,3,46,4,0.001832544,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,16,56,        iUnitMillis = unitMillis;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,336,        return YEAR_OF_ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,54,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,452,            return iUnitType;,1,0,0,0,0,0,0,0,0,1,17,5,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,457,            return iRangeType;,1,0,0,0,0,0,0,0,0,1,18,5,0.001832544,0
defect4j,time,org/joda/time/field/BaseDurationField,16,51,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,16,86,        return iField.getDurationField();,0,0,0,1,2,0,2,0,0,2,33,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,436,        Fields() {,1,0,0,1,3,0,0,0,0,1,10,3,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,282,        return DAY_OF_YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,0.001832544,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,16,46,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,16,45,"        super(DateTimeFieldType.dayOfWeek(), days);",1,0,0,2,4,0,2,0,0,3,43,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,126,    private transient final YearInfo[] iYearInfoCache = new YearInfo[CACHE_SIZE];,1,0,1,2,4,3,0,2,0,7,77,2,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,120,        cHalfdayOfDayField = new HalfdayField();,1,0,0,1,2,0,0,1,0,3,40,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,59,        iUnitField = unit;,2,0,0,0,0,0,0,0,0,3,18,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,55,        if (iUnitMillis < 1) {,1,1,0,1,3,0,0,0,0,2,22,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,54,        iUnitMillis = unit.getUnitMillis();,1,0,0,1,2,0,2,0,0,4,35,4,0.001832544,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,16,152,            super(type);,1,0,0,1,2,0,0,0,0,1,12,5,0.001832544,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,16,151,        LinkedDurationField(DurationFieldType type) {,2,0,0,1,3,0,0,1,0,3,45,3,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,50,        if (!unit.isPrecise()) {,0,0,0,2,5,0,2,0,0,3,24,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,275,        fields.yearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,273,        field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,270,        fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,279,"        fields.dayOfWeek = new GJDayOfWeekDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,67,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,278,        fields.era = new GJEraDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,42,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,87,            iMax = field.getMaximumValue() + offset;,2,1,0,1,2,0,2,0,0,6,40,6,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,86,        if (maxValue > (field.getMaximumValue() + offset)) {,2,2,0,3,7,0,2,0,0,6,52,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,81,        if (minValue < (field.getMinimumValue() + offset)) {,2,2,0,3,7,0,2,0,0,6,52,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,82,            iMin = field.getMinimumValue() + offset;,2,1,0,1,2,0,2,0,0,6,40,6,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,63,        return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,291,        return WEEK_OF_WEEKYEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,111,        cHourOfHalfdayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,46,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,117,        cClockhourOfHalfdayField = new ZeroIsMaxDateTimeField,1,0,0,0,0,0,0,1,0,3,53,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,114,        cClockhourOfDayField = new ZeroIsMaxDateTimeField,1,0,0,0,0,0,0,1,0,3,49,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,182,        return SECOND_OF_MINUTE_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,16,48,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,69,        iRangeField = range;,2,0,0,0,0,0,0,0,0,3,20,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,63,        long rangeMillis = range.getUnitMillis();,1,0,0,1,2,0,2,0,0,3,41,5,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,64,        iRange = (int)(rangeMillis / getUnitMillis());,2,1,0,3,6,0,1,0,0,5,46,4,0.001832544,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,16,65,        if (iRange < 2) {,1,1,0,1,3,0,0,0,0,2,17,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,249,        fields.millisOfSecond = cMillisOfSecondField;,3,0,0,0,0,0,0,0,0,4,45,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,242,        fields.seconds = cSecondsField;,3,0,0,0,0,0,0,0,0,4,31,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,243,        fields.minutes = cMinutesField;,3,0,0,0,0,0,0,0,0,4,31,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,241,        fields.millis = cMillisField;,3,0,0,0,0,0,0,0,0,4,29,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,246,        fields.days = cDaysField;,3,0,0,0,0,0,0,0,0,4,25,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,247,        fields.weeks = cWeeksField;,3,0,0,0,0,0,0,0,0,4,27,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,244,        fields.hours = cHoursField;,3,0,0,0,0,0,0,0,0,4,27,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,245,        fields.halfdays = cHalfdaysField;,3,0,0,0,0,0,0,0,0,4,33,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,363,        return ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,16,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,16,43,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,16,42,"        super(DateTimeFieldType.weekOfWeekyear(), weeks);",1,0,0,2,4,0,2,0,0,3,49,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,354,        return CENTURY_OF_ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,58,"        this(field, type, offset, Integer.MIN_VALUE, Integer.MAX_VALUE);",7,0,0,1,2,0,0,0,0,7,64,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,183,        return iMax;,1,0,0,0,0,0,0,0,0,1,12,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,105,        cMinuteOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,102,        cMinuteOfHourField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,45,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,108,        cHourOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,42,4,0.001832544,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,16,137,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,99,"    protected AssembledChronology(Chronology base, Object param) {",3,0,0,1,3,1,0,2,0,6,62,2,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,259,        fields.halfdayOfDay = cHalfdayOfDayField;,3,0,0,0,0,0,0,0,0,4,41,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,258,        fields.clockhourOfHalfday = cClockhourOfHalfdayField;,3,0,0,0,0,0,0,0,0,4,53,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,255,        fields.hourOfDay = cHourOfDayField;,3,0,0,0,0,0,0,0,0,4,35,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,254,        fields.minuteOfDay = cMinuteOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,257,        fields.clockhourOfDay = cClockhourOfDayField;,3,0,0,0,0,0,0,0,0,4,45,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,256,        fields.hourOfHalfday = cHourOfHalfdayField;,3,0,0,0,0,0,0,0,0,4,43,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,251,        fields.secondOfMinute = cSecondOfMinuteField;,3,0,0,0,0,0,0,0,0,4,45,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,250,        fields.millisOfDay = cMillisOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,253,        fields.minuteOfHour = cMinuteOfHourField;,3,0,0,0,0,0,0,0,0,4,41,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,252,        fields.secondOfDay = cSecondOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,46,"        this(field, (field == null ? null : field.getType()), offset, Integer.MIN_VALUE, Integer.MAX_VALUE);",7,1,0,3,6,0,2,0,0,10,100,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,318,        return MONTH_OF_YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,158,        return iDivisor - 1;,1,1,0,0,0,0,0,0,0,2,20,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,87,        cWeeksField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,38,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,349,            iHourOfDay          = (f = fields.hourOfDay)          != null ? f : super.hourOfDay();,6,1,0,2,4,0,0,0,0,9,86,5,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,16,41,"        super(DateTimeFieldType.dayOfYear(), days);",1,0,0,2,4,0,2,0,0,3,43,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,79,        iOffset = offset;,2,0,0,0,0,0,0,0,0,3,17,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,75,        if (offset == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.001832544,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,16,73,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,385,        iBaseFlags = flags;,2,0,0,0,0,0,0,0,0,3,19,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,300,        return WEEKYEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,21,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,309,        return WEEKYEAR_OF_CENTURY_TYPE;,1,0,0,0,0,0,0,0,0,1,32,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,182,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,245,        return CLOCKHOUR_OF_HALFDAY_TYPE;,1,0,0,0,0,0,0,0,0,1,33,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,88,        iDivisor = dividedField.iDivisor;,3,0,0,0,0,0,0,0,0,4,33,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,89,        iRangeField = dividedField.iDurationField;,3,0,0,0,0,0,0,0,0,4,42,4,0.001832544,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,16,87,"        super(dividedField.getWrappedField(), type);",1,0,0,2,4,0,2,0,0,3,44,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,191,        return SECOND_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,78,        iMin = min;,2,0,0,0,0,0,0,0,0,3,11,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,72,        int i = field.getMinimumValue();,1,0,0,1,2,0,2,0,0,3,32,5,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,70,        iDivisor = divisor;,2,0,0,0,0,0,0,0,0,3,19,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,76,        int max = (j >= 0) ? j / divisor : ((j + 1) / divisor - 1);,6,5,0,3,6,0,0,0,0,11,59,5,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,75,        int j = field.getMaximumValue();,1,0,0,1,2,0,2,0,0,3,32,5,0.001832544,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,53,            field = cCache.get(type);,1,0,0,1,2,0,3,0,0,5,25,6,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,370,            flags = 0;,1,0,0,0,0,0,0,0,0,2,10,6,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,254,        return HALFDAY_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,62,        DurationField unitField = field.getDurationField();,1,0,0,1,2,0,2,1,0,4,51,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,63,        if (unitField == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0.001832544,0
defect4j,time,org/joda/time/field/DividedDateTimeField,16,66,            iDurationField = new ScaledDurationField(,1,0,0,0,1,0,0,1,0,3,41,6,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,286,        field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,284,"        fields.weekOfWeekyear = new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);",4,0,0,1,2,0,0,1,0,6,81,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,282,        fields.monthOfYear = new GJMonthOfYearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,58,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,283,        fields.weekyear = new BasicWeekyearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,55,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,280,"        fields.dayOfMonth = new BasicDayOfMonthDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,72,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,281,"        fields.dayOfYear = new BasicDayOfYearDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,70,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,288,        fields.weekyearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,51,4,0.001832544,0
defect4j,time,org/joda/time/field/DecoratedDurationField,16,56,        if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,83,        cHalfdaysField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,41,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,81,        cHoursField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,38,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,85,        cDaysField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,37,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,101,        iParam = param;,2,0,0,0,0,0,0,0,0,3,15,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,365,            iEra                = (f = fields.era)                != null ? f : super.era();,6,1,0,2,4,0,0,0,0,9,80,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,364,            iCenturyOfEra       = (f = fields.centuryOfEra)       != null ? f : super.centuryOfEra();,6,1,0,2,4,0,0,0,0,9,89,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,363,            iYearOfCentury      = (f = fields.yearOfCentury)      != null ? f : super.yearOfCentury();,6,1,0,2,4,0,0,0,0,9,90,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,362,            iYearOfEra          = (f = fields.yearOfEra)          != null ? f : super.yearOfEra();,6,1,0,2,4,0,0,0,0,9,86,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,361,            iYear               = (f = fields.year)               != null ? f : super.year();,6,1,0,2,4,0,0,0,0,9,81,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,360,            iMonthOfYear        = (f = fields.monthOfYear)        != null ? f : super.monthOfYear();,6,1,0,2,4,0,0,0,0,9,88,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,369,        if (iBase == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,102,        setFields();,0,0,0,1,2,0,1,0,0,1,12,5,0.001832544,0
defect4j,time,org/joda/time/chrono/AssembledChronology,16,100,        iBase = base;,2,0,0,0,0,0,0,0,0,3,13,4,0.001832544,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,16,42,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,0.001832544,0
defect4j,time,org/joda/time/DateTimeFieldType,16,227,        return CLOCKHOUR_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,0.001831157,0
defect4j,time,org/joda/time/DateTimeField,16,33,public abstract class DateTimeField {,1,0,0,0,1,2,0,0,0,3,37,1,0.001831157,0
defect4j,time,org/joda/time/DateTimeFieldType,16,200,        return MINUTE_OF_HOUR_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,0.001831157,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,16,102,        return getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset;,2,4,0,2,4,0,2,0,0,8,68,4,0.001831157,0
defect4j,time,org/joda/time/DurationField,16,30,public abstract class DurationField implements Comparable<DurationField> {,1,0,0,0,1,2,0,2,0,5,74,1,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,70,    private UnsupportedDurationField(DurationFieldType type) {,2,0,0,1,3,1,0,1,0,4,58,2,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,71,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,0.001831157,0
defect4j,time,org/joda/time/DateTimeFieldType,16,273,        return DAY_OF_MONTH_TYPE;,1,0,0,0,0,0,0,0,0,1,25,4,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,49,        if (cCache == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,59,        return field;,1,0,0,0,0,0,0,0,0,1,13,4,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,56,            field = new UnsupportedDurationField(type);,2,0,0,1,2,0,0,1,0,4,43,6,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,57,"            cCache.put(type, field);",0,0,0,1,2,0,4,0,0,4,24,7,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,55,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,50,"            cCache = new HashMap<DurationFieldType, UnsupportedDurationField>(7);",1,0,0,1,2,0,0,3,0,5,69,6,0.001831157,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,16,51,            field = null;,1,0,0,0,0,0,0,0,0,2,13,6,0.001831157,0
defect4j,time,org/joda/time/DateTimeFieldType,16,327,        return YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.001831157,0
defect4j,time,org/joda/time/DateTimeFieldType,16,131,    private static final DateTimeFieldType SECOND_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,137,    private static final DateTimeFieldType MILLIS_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,134,    private static final DateTimeFieldType SECOND_OF_MINUTE_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,82,    private static final DateTimeFieldType YEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,92,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,128,    private static final DateTimeFieldType MINUTE_OF_HOUR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,125,    private static final DateTimeFieldType MINUTE_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,79,    private static final DateTimeFieldType CENTURY_OF_ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,76,    private static final DateTimeFieldType YEAR_OF_ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,91,    private static final DateTimeFieldType MONTH_OF_YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,94,    private static final DateTimeFieldType DAY_OF_MONTH_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,89,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,97,    private static final DateTimeFieldType WEEKYEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,96,2,0.001828387,0
defect4j,time,org/joda/time/DurationFieldType,16,205,        return ERAS_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,85,    private static final DateTimeFieldType YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,81,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,88,    private static final DateTimeFieldType DAY_OF_YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,119,    private static final DateTimeFieldType CLOCKHOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,110,    private static final DateTimeFieldType HALFDAY_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,113,    private static final DateTimeFieldType HOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,92,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,103,    private static final DateTimeFieldType WEEK_OF_WEEKYEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,100,    private static final DateTimeFieldType WEEKYEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,85,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,106,    private static final DateTimeFieldType DAY_OF_WEEK_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,154,        iName = name;,2,0,0,0,0,0,0,0,0,3,13,4,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,122,    private static final DateTimeFieldType HOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,73,    private static final DateTimeFieldType ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,80,2,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,447,            iRangeType = rangeType;,2,0,0,0,0,0,0,0,0,3,23,5,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,446,            iUnitType = unitType;,2,0,0,0,0,0,0,0,0,3,21,5,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,445,            iOrdinal = ordinal;,2,0,0,0,0,0,0,0,0,3,19,5,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,444,            super(name);,1,0,0,1,2,0,0,0,0,1,12,5,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,140,    private static final DateTimeFieldType MILLIS_OF_SECOND_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,0.001828387,0
defect4j,time,org/joda/time/DurationFieldType,16,169,        return WEEKYEARS_TYPE;,1,0,0,0,0,0,0,0,0,1,22,4,0.001828387,0
defect4j,time,org/joda/time/DurationFieldType,16,141,        return HALFDAYS_TYPE;,1,0,0,0,0,0,0,0,0,1,21,4,0.001828387,0
defect4j,time,org/joda/time/DateTimeFieldType,16,116,    private static final DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,97,2,0.001828387,0
defect4j,time,org/joda/time/DurationFieldType,16,196,        return CENTURIES_TYPE;,1,0,0,0,0,0,0,0,0,1,22,4,0.001827003,0
defect4j,time,org/joda/time/Chronology,16,63,public abstract class Chronology {,1,0,0,0,1,2,0,0,0,3,34,1,0.001814604,0
defect4j,time,org/joda/time/DurationFieldType,16,278,            return (1 << iOrdinal);,1,1,0,1,2,0,0,0,0,2,23,6,0.001786027,0
defect4j,time,org/joda/time/DateTimeZone,16,148,                        if (temp == null) {,1,1,0,1,3,0,0,0,0,2,19,12,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,143,                                temp = forID(id);,1,0,0,1,2,0,2,0,0,4,17,16,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,142,                            if (id != null) {  // null check avoids stack overflow,1,1,0,1,3,0,0,0,0,2,54,14,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,141,"                            String id = System.getProperty(""user.timezone"");",1,0,0,1,2,0,2,1,0,5,48,14,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,161,        return zone;,1,0,0,0,0,0,0,0,0,1,12,4,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,138,                    DateTimeZone temp = null;,1,0,0,0,0,0,0,1,0,2,25,10,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,134,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,135,            synchronized(DateTimeZone.class) {,0,0,0,1,3,0,0,1,0,1,34,8,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,136,                zone = cDefault;,2,0,0,0,0,0,0,0,0,3,16,8,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,137,                if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,8,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,133,        DateTimeZone zone = cDefault;,2,0,0,0,0,0,0,1,0,3,29,4,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,157,                    cDefault = zone = temp;,3,0,0,0,0,0,0,0,0,5,23,10,0.001772592,0
defect4j,time,org/joda/time/DateTimeZone,16,154,                    if (temp == null) {,1,1,0,1,3,0,0,0,0,2,19,10,0.001772592,0
defect4j,time,org/joda/time/DurationFieldType,16,160,        return WEEKS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.001750002,0
defect4j,time,org/joda/time/DurationFieldType,16,178,        return MONTHS_TYPE;,1,0,0,0,0,0,0,0,0,1,19,4,0.001747365,0
defect4j,time,org/joda/time/DurationFieldType,16,187,        return YEARS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.001744732,0
defect4j,time,org/joda/time/DurationFieldType,16,114,        return SECONDS_TYPE;,1,0,0,0,0,0,0,0,0,1,20,4,0.001739479,0
defect4j,time,org/joda/time/DurationFieldType,16,123,        return MINUTES_TYPE;,1,0,0,0,0,0,0,0,0,1,20,4,0.001739479,0
defect4j,time,org/joda/time/DurationFieldType,16,132,        return HOURS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,0.001739479,0
defect4j,time,org/joda/time/DurationFieldType,16,105,        return MILLIS_TYPE;,1,0,0,0,0,0,0,0,0,1,19,4,0.001736859,0
defect4j,time,org/joda/time/DurationFieldType,16,151,        return DAYS_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,0.00173555,0
defect4j,time,org/joda/time/base/AbstractInstant,17,259,        if (this == readableInstant) {,1,1,0,1,3,0,0,0,0,2,30,4,0.001733806,0
defect4j,time,org/joda/time/DurationFieldType,16,66,"    static final DurationFieldType YEARS_TYPE = new StandardDurationFieldType(""years"", YEARS);",2,0,0,1,2,2,0,2,0,7,90,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,64,"    static final DurationFieldType WEEKYEARS_TYPE = new StandardDurationFieldType(""weekyears"", WEEKYEARS);",2,0,0,1,2,2,0,2,0,7,102,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,62,"    static final DurationFieldType CENTURIES_TYPE = new StandardDurationFieldType(""centuries"", CENTURIES);",2,0,0,1,2,2,0,2,0,7,102,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,60,"    static final DurationFieldType ERAS_TYPE = new StandardDurationFieldType(""eras"", ERAS);",2,0,0,1,2,2,0,2,0,7,87,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,68,"    static final DurationFieldType MONTHS_TYPE = new StandardDurationFieldType(""months"", MONTHS);",2,0,0,1,2,2,0,2,0,7,93,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,80,"    static final DurationFieldType SECONDS_TYPE = new StandardDurationFieldType(""seconds"", SECONDS);",2,0,0,1,2,2,0,2,0,7,96,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,82,"    static final DurationFieldType MILLIS_TYPE = new StandardDurationFieldType(""millis"", MILLIS);",2,0,0,1,2,2,0,2,0,7,93,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,74,"    static final DurationFieldType HALFDAYS_TYPE = new StandardDurationFieldType(""halfdays"", HALFDAYS);",2,0,0,1,2,2,0,2,0,7,99,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,259,            super(name);,1,0,0,1,2,0,0,0,0,1,12,5,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,260,            iOrdinal = ordinal;,2,0,0,0,0,0,0,0,0,3,19,5,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,95,        iName = name;,2,0,0,0,0,0,0,0,0,3,13,4,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,78,"    static final DurationFieldType MINUTES_TYPE = new StandardDurationFieldType(""minutes"", MINUTES);",2,0,0,1,2,2,0,2,0,7,96,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,76,"    static final DurationFieldType HOURS_TYPE = new StandardDurationFieldType(""hours"", HOURS);",2,0,0,1,2,2,0,2,0,7,90,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,70,"    static final DurationFieldType WEEKS_TYPE = new StandardDurationFieldType(""weeks"", WEEKS);",2,0,0,1,2,2,0,2,0,7,90,2,0.001729024,0
defect4j,time,org/joda/time/DurationFieldType,16,72,"    static final DurationFieldType DAYS_TYPE = new StandardDurationFieldType(""days"", DAYS);",2,0,0,1,2,2,0,2,0,7,87,2,0.001729024,0
defect4j,time,org/joda/time/DateTimeUtils,16,37,    private static volatile MillisProvider cMillisProvider = SYSTEM_MILLIS_PROVIDER;,2,0,0,0,0,3,0,1,0,6,80,2,0.001656439,0
defect4j,time,org/joda/time/DateTimeUtils,16,35,    private static final SystemMillisProvider SYSTEM_MILLIS_PROVIDER = new SystemMillisProvider();,1,0,0,1,2,3,0,2,0,6,94,2,0.001656439,0
defect4j,time,org/joda/time/DateTimeUtils,16,393,    static class SystemMillisProvider implements MillisProvider {,1,0,0,0,1,1,0,1,0,3,61,2,0.001656439,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,133,"            return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,",0,0,0,0,1,0,5,0,0,5,60,7,0.001636657,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1166,"            return new DSTZone(id, (int)readMillis(in), ",1,0,0,2,5,0,2,1,0,4,43,6,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,84,    private final Info[] iInfoCache = new Info[cInfoCacheMask + 1];,2,1,0,2,4,2,0,2,0,7,63,2,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,87,        super(zone.getID());,0,0,0,2,4,0,2,0,0,2,20,5,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,88,        iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,4,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,482,"            return new OfYear((char)in.readUnsignedByte(),",0,0,0,2,5,0,2,1,0,3,46,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1347,            int size = in.readInt();,1,0,0,1,2,0,2,0,0,3,24,6,0.001609835,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,224,        InputStream in = null;,1,0,0,0,0,0,0,1,0,2,22,4,0.001609835,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,226,            in = openResource(id);,1,0,0,1,2,0,2,0,0,4,22,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,748,            iOfYear = ofYear;,2,0,0,0,0,0,0,0,0,3,17,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,749,            iNameKey = nameKey;,2,0,0,0,0,0,0,0,0,3,19,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,747,"        Recurrence(OfYear ofYear, String nameKey, int saveMillis) {",4,0,0,1,3,0,0,2,0,6,59,3,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,740,"            return new Recurrence(OfYear.readFrom(in), in.readUTF(), (int)readMillis(in));",0,0,0,5,10,0,7,1,0,8,78,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,98,"            return readFrom((DataInput)new DataInputStream(in), id);",1,0,0,3,6,0,2,2,0,5,56,7,0.001609835,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,227,"            DateTimeZone tz = DateTimeZoneBuilder.readFrom(in, id);",1,0,0,1,2,0,4,1,0,6,55,6,0.001609835,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,229,            return tz;,1,0,0,0,0,0,0,0,0,1,10,6,0.001609835,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,228,"            iZoneInfoMap.put(id, new SoftReference<DateTimeZone>(tz));",1,0,0,2,4,0,3,2,0,6,58,7,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,119,"            return CachedDateTimeZone.forZone(PrecalculatedZone.readFrom(in, id));",0,0,0,2,4,0,6,0,0,6,70,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,110,        switch (in.readUnsignedByte()) {,0,0,0,2,5,0,2,0,0,2,32,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,188,            return v * (30 * 60000L);,1,2,0,1,2,0,0,0,0,3,25,5,0.001609835,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,236,                if (in != null) {,1,1,0,1,3,0,0,0,0,2,17,8,0.001609835,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,237,                    in.close();,0,0,0,1,2,0,2,0,0,2,11,11,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,750,            iSaveMillis = saveMillis;,2,0,0,0,0,0,0,0,0,3,25,5,0.001609835,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,147,            return loadZoneData(id);,0,0,0,1,2,0,2,0,0,2,24,7,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,95,        if (in instanceof DataInput) {,1,0,0,1,3,0,0,1,0,2,30,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1351,            String[] nameKeys = new String[size];,1,0,1,2,4,0,0,2,0,4,37,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1350,            int[] standardOffsets = new int[size];,1,0,1,2,4,0,0,0,0,2,38,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1353,            for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1355,                wallOffsets[i] = (int)readMillis(in);,0,0,1,3,6,0,2,0,0,5,37,7,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1354,                transitions[i] = readMillis(in);,0,0,1,2,4,0,2,0,0,5,32,7,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1356,                standardOffsets[i] = (int)readMillis(in);,0,0,1,3,6,0,2,0,0,5,41,7,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1359,                    if (poolSize < 256) {,1,1,0,1,3,0,0,0,0,2,21,9,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,39,"            i = Integer.getInteger(""org.joda.time.tz.CachedDateTimeZone.size"");",1,0,0,1,2,0,2,0,0,5,67,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1178,            iStartRecurrence = startRecurrence;,2,0,0,0,0,0,0,0,0,3,35,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1177,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,0,3,33,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1176,            super(id);,1,0,0,1,2,0,0,0,0,1,10,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,509,            iMode = mode;,2,0,0,0,0,0,0,0,0,3,13,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1179,            iEndRecurrence = endRecurrence;,2,0,0,0,0,0,0,0,0,3,31,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1342,            String[] pool = new String[poolSize];,1,0,1,2,4,0,0,2,0,4,37,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1343,            for (int i=0; i<poolSize; i++) {,4,1,0,1,3,0,0,0,0,6,32,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1341,            int poolSize = in.readUnsignedShort();,1,0,0,1,2,0,2,0,0,3,38,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1348,            long[] transitions = new long[size];,1,0,1,2,4,0,0,0,0,2,36,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1349,            int[] wallOffsets = new int[size];,1,0,1,2,4,0,0,0,0,2,34,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1500,            super(id);,1,0,0,1,2,0,0,0,0,1,10,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1501,            iTransitions = transitions;,2,0,0,0,0,0,0,0,0,3,27,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1502,            iWallOffsets = wallOffsets;,2,0,0,0,0,0,0,0,0,3,27,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1503,            iStandardOffsets = standardOffsets;,2,0,0,0,0,0,0,0,0,3,35,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1504,            iNameKeys = nameKeys;,2,0,0,0,0,0,0,0,0,3,21,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1505,            iTailZone = tailZone;,2,0,0,0,0,0,0,0,0,3,21,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,505,            if (mode != 'u' && mode != 'w' && mode != 's') {,3,5,0,1,3,0,0,0,0,11,48,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,513,            iAdvance = advanceDayOfWeek;,2,0,0,0,0,0,0,0,0,3,28,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,512,            iDayOfWeek = dayOfWeek;,2,0,0,0,0,0,0,0,0,3,23,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,511,            iDayOfMonth = dayOfMonth;,2,0,0,0,0,0,0,0,0,3,25,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,510,            iMonthOfYear = monthOfYear;,2,0,0,0,0,0,0,0,0,3,27,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,514,            iMillisOfDay = millisOfDay;,2,0,0,0,0,0,0,0,0,3,27,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1375,            return new PrecalculatedZone,0,0,0,0,0,0,0,1,0,1,28,7,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1372,"                tailZone = DSTZone.readFrom(in, id);",1,0,0,1,2,0,4,0,0,6,36,7,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1371,            if (in.readBoolean()) {,0,0,0,2,5,0,2,0,0,2,23,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1370,            DSTZone tailZone = null;,1,0,0,0,0,0,0,1,0,2,24,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,184,        switch (v >> 6) {,1,1,0,1,3,0,0,0,0,2,17,4,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,187,            v = (v << (32 - 6)) >> (32 - 6);,2,4,0,3,6,0,0,0,0,7,32,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,183,        int v = in.readUnsignedByte();,1,0,0,1,2,0,2,0,0,3,30,5,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,61,        cInfoCacheMask = cacheSize - 1;,2,1,0,0,0,0,0,0,0,4,31,4,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,68,        if (zone instanceof CachedDateTimeZone) {,1,0,0,1,3,0,0,1,0,2,41,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1360,                        index = in.readUnsignedByte();,1,0,0,1,2,0,2,0,0,4,30,11,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1364,                    nameKeys[i] = pool[index];,0,0,1,2,4,0,0,0,0,5,26,9,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,196,            return v * 60000L;,1,1,0,0,0,0,0,0,0,2,18,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,195,            v |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,0,4,29,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,194,            v |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,0,5,34,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,193,            v |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,0,5,35,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,205,            return w * 1000L;,1,1,0,0,0,0,0,0,0,2,17,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,204,            w |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,0,4,29,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,203,            w |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,0,5,34,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,202,            w |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,0,5,35,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,201,            w |= (in.readUnsignedByte()) << 24;,1,1,0,2,4,0,2,0,0,5,35,5,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,200,            long w = (((long)v) << (64 - 6)) >> (64 - 38);,2,4,0,5,10,0,0,0,0,6,46,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,209,            return in.readLong();,0,0,0,1,2,0,2,0,0,2,21,6,0.001609835,0
defect4j,time,org/joda/time/DateTimeZone,16,212,            return zone;,1,0,0,0,0,0,0,0,0,1,12,6,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,192,            v = (v << (32 - 6)) >> (32 - 30);,2,4,0,3,6,0,0,0,0,7,33,5,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,71,        return new CachedDateTimeZone(zone);,1,0,0,1,2,0,0,1,0,2,36,5,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,48,            cacheSize = 512; // (1 << 9),1,0,0,1,2,0,0,0,0,2,28,6,0.001609835,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,16,45,        if (i == null) {,1,1,0,1,3,0,0,0,0,2,16,4,0.001609835,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1344,                pool[i] = in.readUTF();,0,0,1,2,4,0,2,0,0,5,23,7,0.001609835,0
defect4j,time,org/joda/time/DateTimeZone,16,211,        if (zone != null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.001608627,0
defect4j,time,org/joda/time/DateTimeZone,16,207,"        if (id.equals(""UTC"")) {",0,0,0,2,5,0,2,0,0,3,23,5,0.001608627,0
defect4j,time,org/joda/time/DateTimeZone,16,204,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.001608627,0
defect4j,time,org/joda/time/DateTimeZone,16,210,        DateTimeZone zone = cProvider.getZone(id);,1,0,0,1,2,0,3,1,0,5,42,4,0.001608627,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,62,"        int newYear = FieldUtils.safeAdd(thisYear, years);",1,0,0,1,2,0,4,0,0,5,50,5,0.001605663,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,63,"        return set(instant, newYear);",0,0,0,1,2,0,3,0,0,3,29,5,0.001605663,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,61,        int thisYear = get(instant);,1,0,0,1,2,0,2,0,0,3,28,5,0.001605663,0
defect4j,time,org/joda/time/DateTimeFieldType,6,498,                    return chronology.dayOfMonth();,0,0,0,1,2,0,2,0,0,2,31,7,0.001605663,0
defect4j,time,org/joda/time/DateTimeZone,16,706,        return iID;,1,0,0,0,0,0,0,0,0,1,11,4,0.001597798,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,16,99,        return new HashMap(7);,0,0,0,1,2,0,0,1,0,1,22,6,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,281,        size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,0,4,31,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,284,"                zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);",0,0,1,5,10,0,6,0,0,8,72,9,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,548,        return nameProvider;,1,0,0,0,0,0,0,0,0,1,20,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,545,            nameProvider = new DefaultNameProvider();,1,0,0,1,2,0,0,1,0,3,41,6,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,282,        for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,196,        if (iFileDir != null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,199,            String path = iResourcePath.concat(name);,1,0,0,1,2,0,3,1,0,5,41,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,115,        setProvider0(null);,0,0,0,1,2,0,1,0,0,2,19,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,82,"        this(resourcePath, null, false);",1,0,0,1,2,0,0,0,0,2,32,4,0.001596599,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,16,41,        iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,0,3,33,4,0.001596599,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,16,40,        iWallOffset = wallOffset;,2,0,0,0,0,0,0,0,0,3,25,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,174,        return new TreeSet<String>(iZoneInfoMap.keySet());,0,0,0,2,4,0,2,2,0,4,50,5,0.001596599,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,16,39,    public DefaultNameProvider() {,1,0,0,1,3,1,0,0,0,2,30,2,0.001596599,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,16,37,"    private HashMap<Locale, Map<String, Map<String, Object>>> iByLocaleCache = createCache();",1,0,0,1,2,1,1,7,0,10,89,2,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,118,            loader = getClass().getClassLoader();,1,0,0,2,4,0,2,0,0,4,37,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,531,"            String providerClass = System.getProperty(""org.joda.time.DateTimeZone.NameProvider"");",1,0,0,1,2,0,2,1,0,5,85,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,532,            if (providerClass != null) {,1,1,0,1,3,0,0,0,0,2,28,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,116,        setNameProvider0(null);,0,0,0,1,2,0,1,0,0,2,23,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,153,            DateTimeZone tz = ref.get();,1,0,0,1,2,0,2,1,0,4,28,6,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,152,            SoftReference<DateTimeZone> ref = (SoftReference<DateTimeZone>) obj;,2,0,0,1,2,0,0,4,0,6,68,6,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,150,        if (obj instanceof SoftReference<?>) {,1,0,0,1,3,0,0,1,0,2,38,5,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,155,                return tz;,1,0,0,0,0,0,0,0,0,1,10,8,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,154,            if (tz != null) {,1,1,0,1,3,0,0,0,0,2,17,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,514,        if (nameProvider == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,469,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,462,"                provider = new ZoneInfoProvider(""org/joda/time/tz/data"");",1,0,0,1,2,0,0,1,0,4,57,8,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,460,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,201,                in = iLoader.getResourceAsStream(path);,1,0,0,1,2,0,3,0,0,5,39,8,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,200,            if (iLoader != null) {,1,1,0,1,3,0,0,0,0,2,22,6,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,205,            if (in == null) {,1,1,0,1,3,0,0,0,0,2,17,6,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,145,        if (id.equals(obj)) {,0,0,0,2,5,0,3,0,0,3,21,5,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,140,        Object obj = iZoneInfoMap.get(id);,1,0,0,1,2,0,3,1,0,5,34,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,141,        if (obj == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,473,        return provider;,1,0,0,0,0,0,0,0,0,1,16,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,423,"        if (!ids.contains(""UTC"")) {",0,0,0,2,5,0,2,0,0,4,27,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,214,        return in;,1,0,0,0,0,0,0,0,0,1,10,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,136,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,448,            if (providerClass != null) {,1,1,0,1,3,0,0,0,0,2,28,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,443,        Provider provider = null;,1,0,0,0,0,0,0,1,0,2,25,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,446,            String providerClass =,1,0,0,0,0,0,0,1,0,2,22,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,689,    protected DateTimeZone(String id) {,2,0,0,1,3,1,0,1,0,4,35,2,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,263,        return map;,1,0,0,0,0,0,0,0,0,1,11,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,262,"        map.put(""UTC"", new SoftReference<DateTimeZone>(DateTimeZone.UTC));",2,0,0,2,4,0,2,2,0,7,66,5,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,123,"        iZoneInfoMap = loadZoneInfoMap(openResource(""ZoneInfoMap""));",1,0,0,2,4,0,2,0,0,5,60,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,121,        iLoader = loader;,2,0,0,0,0,0,0,0,0,3,17,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,690,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,693,        iID = id;,2,0,0,0,0,0,0,0,0,3,9,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,276,        for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,277,            pool[i] = din.readUTF().intern();,0,0,1,3,6,0,3,0,0,6,33,6,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,274,        int size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,0,3,35,5,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,275,        String[] pool = new String[size];,1,0,1,2,4,0,0,2,0,4,33,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,117,        if (loader == null && !favorSystemLoader) {,2,2,0,1,3,0,0,0,0,5,43,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,115,        iResourcePath = resourcePath;,2,0,0,0,0,0,0,0,0,3,29,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,114,        iFileDir = null;,1,0,0,0,0,0,0,0,0,2,16,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,111,            resourcePath += '/';,1,0,0,0,0,0,0,0,0,3,20,6,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,110,"        if (!resourcePath.endsWith(""/"")) {",0,0,0,2,5,0,2,0,0,4,34,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,517,        cNameProvider = nameProvider;,2,0,0,0,0,0,0,0,0,3,29,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,515,            nameProvider = getDefaultNameProvider();,1,0,0,1,2,0,1,0,0,3,40,6,0.001596599,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,16,38,        super(id);,1,0,0,1,2,0,0,0,0,1,10,4,0.001596599,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,16,39,        iNameKey = nameKey;,2,0,0,0,0,0,0,0,0,3,19,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,426,"        if (!UTC.equals(provider.getZone(""UTC""))) {",0,0,0,3,7,0,4,0,0,6,43,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,429,        cProvider = provider;,2,0,0,0,0,0,0,0,0,3,21,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,529,        NameProvider nameProvider = null;,1,0,0,0,0,0,0,1,0,2,33,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,107,        if (resourcePath == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.001596599,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,16,88,        if (this == obj) {,1,1,0,1,3,0,0,0,0,2,18,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,430,        cAvailableIDs = ids;,2,0,0,0,0,0,0,0,0,3,20,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,252,"        Map<String, Object> map = new ConcurrentHashMap<String, Object>();",1,0,0,1,2,0,0,6,0,7,66,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,253,        DataInputStream din = new DataInputStream(in);,2,0,0,1,2,0,0,2,0,4,46,4,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,255,"            readZoneInfoMap(din, map);",0,0,0,1,2,0,3,0,0,3,26,7,0.001596599,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,16,258,                din.close();,0,0,0,1,2,0,2,0,0,2,12,9,0.001596599,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,16,89,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,95,"    public static final DateTimeZone UTC = new FixedDateTimeZone(""UTC"", ""UTC"", 0, 0);",1,0,0,1,2,3,0,2,0,8,81,2,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,544,        if (nameProvider == null) {,1,1,0,1,3,0,0,0,0,2,27,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,419,        if (ids == null || ids.size() == 0) {,1,3,0,2,5,0,2,0,0,6,37,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,418,        Set<String> ids = provider.getAvailableIDs();,1,0,0,1,2,0,2,2,0,5,45,4,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,416,            provider = getDefaultProvider();,1,0,0,1,2,0,1,0,0,3,32,6,0.001596599,0
defect4j,time,org/joda/time/DateTimeZone,16,415,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0.001596599,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,544,            daysSince19700101 = instant / DateTimeConstants.MILLIS_PER_DAY;,4,1,0,0,0,0,0,0,0,6,63,6,0.001574003,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,553,        return 1 + (int) ((daysSince19700101 + 3) % 7);,1,3,0,3,6,0,0,0,0,4,47,4,0.001574003,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,58,        if (years == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.001571183,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,334,                this.rows.add(row);,1,0,0,1,2,0,2,0,0,3,19,9,0.001556083,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,333,                this.rowKeys.add(rowKey);,1,0,0,1,2,0,2,0,0,3,25,9,0.001556083,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,303,"        setValue(value, rowKey, columnKey);",0,0,0,1,2,0,4,0,0,4,35,5,0.001556083,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,189,            return this.rowKeys.indexOf(key);,1,0,0,1,2,0,2,0,0,3,33,7,0.001556083,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,617,"                    prev = chrono.year().add(prev, -1);",1,0,0,2,4,0,4,0,0,7,35,9,0.001551473,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,618,"                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);",1,0,0,2,4,0,5,0,0,7,52,9,0.001551473,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,619,"                    prev = setDayOfMonthPrevious(chrono, prev);",1,0,0,1,2,0,3,0,0,5,43,9,0.001551473,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,620,"                    prev = setDayOfWeek(chrono, prev);",1,0,0,1,2,0,3,0,0,5,34,9,0.001551473,0
defect4j,time,org/joda/time/DateTimeZone,17,955,            return instantUTC;,1,0,0,0,0,0,0,0,0,1,18,6,0.001532196,0
defect4j,time,org/joda/time/field/FieldUtils,6,70,        return sum;,1,0,0,0,0,0,0,0,0,1,11,4,0.001495886,0
defect4j,time,org/joda/time/field/FieldUtils,6,64,        int sum = val1 + val2;,3,1,0,0,0,0,0,0,0,4,22,5,0.001490766,0
defect4j,time,org/joda/time/field/FieldUtils,6,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,4,5,0,3,7,0,0,0,0,9,45,4,0.001490766,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,627,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",3,0,0,1,2,0,2,0,0,6,57,7,0.001473622,0
defect4j,time,org/joda/time/DateTimeFieldType,6,492,                    return chronology.year();,0,0,0,1,2,0,2,0,0,2,25,7,0.001468122,0
defect4j,time,org/joda/time/DateTimeFieldType,6,496,                    return chronology.monthOfYear();,0,0,0,1,2,0,2,0,0,2,32,7,0.001463177,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,593,            } else if (iMode == 's') {,1,1,0,1,4,0,0,0,0,3,26,6,0.00144746,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,596,                offset = 0;,1,0,0,0,0,0,0,0,0,2,11,8,0.00144746,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,180,            if (isLeapYear(thisYear)) {,0,0,0,2,5,0,2,0,0,2,27,7,0.001444508,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,768,"            return iOfYear.previous(instant, standardOffset, saveMillis);",0,0,0,1,2,0,5,0,0,5,61,6,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1265,                end = endRecurrence.previous,1,0,0,0,0,0,2,0,0,4,28,7,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1250,                start = startRecurrence.previous,1,0,0,0,0,0,2,0,0,4,32,7,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,591,            if (iMode == 'w') {,1,1,0,1,3,0,0,0,0,3,19,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1243,            int standardOffset = iStandardOffset;,2,0,0,0,0,0,0,0,0,2,37,6,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1241,            instant++;,1,0,0,0,0,0,0,0,0,2,10,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,615,"                prev = setDayOfWeek(chrono, prev);",1,0,0,1,2,0,3,0,0,5,34,7,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,616,                if (prev >= instant) {,2,1,0,1,3,0,0,0,0,3,22,7,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1252,                if (instant < 0 && start > 0) {,2,3,0,1,3,0,0,0,0,5,31,7,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,603,"            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);",1,0,0,2,4,0,5,0,0,6,60,6,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,602,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,4,51,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,600,            instant += offset;,2,0,0,0,0,0,0,0,0,3,18,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,607,"            prev = setDayOfMonthPrevious(chrono, prev);",1,0,0,1,2,0,3,0,0,5,43,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,606,"            prev = chrono.millisOfDay().add(prev, iMillisOfDay);",1,0,0,2,4,0,5,0,0,7,52,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,605,"            prev = chrono.millisOfDay().set(prev, 0);",1,0,0,2,4,0,4,0,0,6,41,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,609,            if (iDayOfWeek == 0) {,1,1,0,1,3,0,0,0,0,2,22,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1279,            return ((start > end) ? start : end) - 1;,4,2,0,2,4,0,0,0,0,6,41,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,702,            return prev;,1,0,0,0,0,0,0,0,0,1,12,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1607,                if (prev < instant) {,2,1,0,1,3,0,0,0,0,3,21,7,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,625,            return prev - offset;,2,1,0,0,0,0,0,0,0,3,21,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1606,                long prev = iTailZone.previousTransition(instant);,1,0,0,1,2,0,3,0,0,4,50,8,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1608,                    return prev;,1,0,0,0,0,0,0,0,0,1,12,9,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,691,"                prev = setDayOfMonth(chrono, prev);",1,0,0,1,2,0,3,0,0,5,35,7,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1244,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,3,46,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1245,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,3,42,5,0.001429836,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1267,                if (instant < 0 && end > 0) {,2,3,0,1,3,0,0,0,0,5,29,7,0.001429836,0
defect4j,time,org/joda/time/DateTimeZone,17,954,        if (offsetLocalFromOriginal == offsetOriginal) {,2,1,0,1,3,0,0,0,0,3,48,4,0.001423578,0
defect4j,time,org/joda/time/DateTimeZone,17,952,        long instantUTC = instantLocal - offsetOriginal;,3,1,0,0,0,0,0,0,0,4,48,5,0.001423578,0
defect4j,time,org/joda/time/DateTimeZone,17,953,        int offsetLocalFromOriginal = getOffset(instantUTC);,1,0,0,1,2,0,2,0,0,3,52,5,0.001423578,0
defect4j,time,org/joda/time/DateTimeZone,17,951,        int offsetOriginal = getOffset(originalInstantUTC);,1,0,0,1,2,0,2,0,0,3,51,5,0.001423578,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,327,            if (this.sortRowKeys) {,1,0,0,1,3,0,0,0,0,1,23,7,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,326,            row = new DefaultKeyedValues();,1,0,0,1,2,0,0,1,0,3,31,6,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,322,        if (rowIndex >= 0) {,1,1,0,1,3,0,0,0,0,2,20,4,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,320,        int rowIndex = getRowIndex(rowKey);,1,0,0,1,2,0,2,0,0,3,35,5,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,339,        int columnIndex = this.columnKeys.indexOf(columnKey);,2,0,0,1,2,0,2,0,0,4,53,5,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,337,"        row.setValue(columnKey, value);",0,0,0,1,2,0,4,0,0,4,31,5,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,182,        if (key == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,185,        if (this.sortRowKeys) {,1,0,0,1,3,0,0,0,0,1,23,5,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,341,            this.columnKeys.add(columnKey);,1,0,0,1,2,0,2,0,0,3,31,7,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,340,        if (columnIndex < 0) {,1,1,0,1,3,0,0,0,0,2,22,4,0.001420809,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,95,        this(false);,0,0,0,1,2,0,0,0,0,1,12,4,0.001372072,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,105,"        return FieldUtils.safeAdd(instant, addition);",0,0,0,1,2,0,4,0,0,4,45,5,0.001366979,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,104,        long addition = value * iUnitMillis;  // safe,3,1,0,0,0,0,0,0,0,4,45,5,0.001366979,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,551,                    builder.appendLiteral(sub.charAt(0));,0,0,0,2,4,0,4,0,0,4,37,10,0.001329723,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,613,                    i--;,1,0,0,0,0,0,0,0,0,2,4,11,0.001317519,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,596,            buf.append('\'');,0,0,0,1,2,0,2,0,0,3,17,7,0.00130542,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,598,            boolean inLiteral = false;,1,0,0,0,0,0,0,0,0,2,26,7,0.00130542,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,603,                if (c == '\'') {,1,1,0,1,3,0,0,0,0,3,16,8,0.00130542,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,601,                c = pattern.charAt(i);,1,0,0,1,2,0,3,0,0,5,22,8,0.00130542,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,600,            for (; i < length; i++) {,3,1,0,1,3,0,0,0,0,5,25,6,0.00130542,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,611,                } else if (!inLiteral &&,1,1,0,0,2,0,0,0,0,3,24,9,0.00130542,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,616,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,12,0.00130542,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,550,                if (sub.length() == 1) {,0,1,0,2,5,0,2,0,0,3,24,7,0.00130542,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,549,                String sub = token.substring(1);,1,0,0,1,2,0,2,1,0,4,32,7,0.00130542,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,103,    public DefaultKeyedValues2D(boolean sortRowKeys) {,2,0,0,1,3,1,0,0,0,3,50,2,0.001261525,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,107,        this.sortRowKeys = sortRowKeys;,2,0,0,0,0,0,0,0,0,3,31,4,0.001261525,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,106,        this.rows = new java.util.ArrayList();,4,0,0,1,2,0,0,0,0,5,38,4,0.001261525,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,105,        this.columnKeys = new java.util.ArrayList();,4,0,0,1,2,0,0,0,0,5,44,4,0.001261525,0
defect4j,chart,org/jfree/data/DefaultKeyedValues2D,18,104,        this.rowKeys = new java.util.ArrayList();,4,0,0,1,2,0,0,0,0,5,41,4,0.001261525,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1535,                if (i > 0) {,1,1,0,1,3,0,0,0,0,2,12,7,0.00122137,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1536,                    return iWallOffsets[i - 1];,1,1,1,1,2,0,0,0,0,3,27,10,0.00122137,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1574,                return transitions[i];,0,0,1,1,2,0,0,0,0,2,22,8,0.001219807,0
defect4j,time,org/joda/time/base/BaseDateTime,17,304,        return iChronology;,1,0,0,0,0,0,0,0,0,1,19,4,0.001190626,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,549,            locale = Locale.getDefault();,1,0,0,1,2,0,2,0,0,4,29,6,0.001149425,0
defect4j,time,org/joda/time/field/FieldUtils,17,88,        return sum;,1,0,0,0,0,0,0,0,0,1,11,4,0.001143598,0
defect4j,time,org/joda/time/field/FieldUtils,17,84,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,4,5,0,3,7,0,0,0,0,9,45,4,0.001143598,0
defect4j,time,org/joda/time/field/FieldUtils,17,82,        long sum = val1 + val2;,3,1,0,0,0,0,0,0,0,4,23,5,0.001143598,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,586,                char peek = pattern.charAt(i + 1);,2,1,0,1,2,0,2,0,0,5,34,9,0.001135639,0
defect4j,time,org/joda/time/format/DateTimeFormat,16,587,                if (peek == c) {,2,1,0,1,3,0,0,0,0,3,16,8,0.001135639,0
defect4j,time,org/joda/time/DateTimeFieldType,17,482,            switch (iOrdinal) {,1,0,0,1,3,0,0,0,0,1,19,5,0.001133648,0
defect4j,time,org/joda/time/DateTimeFieldType,17,480,            chronology = DateTimeUtils.getChronology(chronology);,1,0,0,1,2,0,3,0,0,5,53,5,0.001133648,0
defect4j,chart,org/jfree/chart/event/ChartChangeEventType,19,59,    public static final ChartChangeEventType NEW_DATASET ,1,0,0,0,0,3,0,1,0,5,52,2,0.001090604,0
defect4j,chart,org/jfree/chart/event/ChartChangeEventType,19,55,    public static final ChartChangeEventType GENERAL ,1,0,0,0,0,3,0,1,0,5,48,2,0.001090604,0
defect4j,chart,org/jfree/chart/event/ChartChangeEvent,19,95,        this.type = type;,2,0,0,0,0,0,0,0,0,3,17,4,0.001090604,0
defect4j,chart,org/jfree/chart/event/ChartChangeEvent,19,69,"        this(source, null, ChartChangeEventType.GENERAL);",3,0,0,1,2,0,0,0,0,3,49,4,0.001090604,0
defect4j,chart,org/jfree/chart/event/ChartChangeEventType,19,63,    public static final ChartChangeEventType DATASET_UPDATED,1,0,0,0,0,3,0,1,0,5,56,2,0.001090604,0
defect4j,chart,org/jfree/chart/event/ChartChangeEvent,19,93,        super(source);,1,0,0,1,2,0,0,0,0,1,14,4,0.001090604,0
defect4j,chart,org/jfree/chart/event/ChartChangeEvent,19,94,        this.chart = chart;,2,0,0,0,0,0,0,0,0,3,19,4,0.001090604,0
defect4j,chart,org/jfree/chart/event/ChartChangeEventType,19,74,    private ChartChangeEventType(String name) {,2,0,0,1,3,1,0,1,0,4,43,2,0.001090604,0
defect4j,chart,org/jfree/chart/event/ChartChangeEventType,19,75,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.001090604,0
defect4j,time,org/joda/time/DateTimeFieldType,6,482,            switch (iOrdinal) {,1,0,0,1,3,0,0,0,0,1,19,5,0.001069747,0
defect4j,time,org/joda/time/DateTimeFieldType,6,480,            chronology = DateTimeUtils.getChronology(chronology);,1,0,0,1,2,0,3,0,0,5,53,5,0.001069747,0
defect4j,time,org/joda/time/base/AbstractInstant,6,265,        ReadableInstant otherInstant = (ReadableInstant) readableInstant;,2,0,0,1,2,0,0,2,0,4,65,4,0.001019397,0
defect4j,time,org/joda/time/base/AbstractInstant,6,262,        if (readableInstant instanceof ReadableInstant == false) {,1,1,0,1,3,0,0,1,0,4,58,4,0.001019397,0
defect4j,time,org/joda/time/DateTimeZone,17,927,        if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {,4,5,0,3,7,0,0,0,0,9,68,4,0.001009328,0
defect4j,time,org/joda/time/DateTimeZone,17,925,        long instantLocal = instantUTC + offset;,3,1,0,0,0,0,0,0,0,4,40,5,0.001009328,0
defect4j,time,org/joda/time/DateTimeZone,17,924,        int offset = getOffset(instantUTC);,1,0,0,1,2,0,2,0,0,3,35,5,0.001009328,0
defect4j,time,org/joda/time/DateTimeZone,17,930,        return instantLocal;,1,0,0,0,0,0,0,0,0,1,20,4,0.001009328,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,6,228,        return iChronology.getMaxYear();,0,0,0,1,2,0,2,0,0,2,32,5,0.000970852,0
defect4j,time,org/joda/time/chrono/GJChronology,6,924,                return gregorianToJulianByYear(instant);,0,0,0,1,2,0,2,0,0,2,40,8,0.000962784,0
defect4j,time,org/joda/time/chrono/GJChronology,6,588,"        return convertByYear(instant, iGregorianChronology, iJulianChronology);",0,0,0,1,2,0,4,0,0,4,71,5,0.000962784,0
defect4j,time,org/joda/time/chrono/GJChronology,6,733,"                instant = iJulianField.set(instant, value);",1,0,0,1,2,0,4,0,0,6,43,7,0.000961641,0
defect4j,time,org/joda/time/chrono/GJChronology,6,734,                if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,7,0.000961641,0
defect4j,time,org/joda/time/chrono/GJChronology,6,656,                return iJulianField.get(instant);,0,0,0,1,2,0,3,0,0,3,33,8,0.000961641,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,228,        return iField.getMaximumValue();,0,0,0,1,2,0,2,0,0,2,32,5,0.000959363,0
defect4j,time,org/joda/time/chrono/GJChronology,6,746,            return instant;,1,0,0,0,0,0,0,0,0,1,15,5,0.000957094,0
defect4j,time,org/joda/time/chrono/GJChronology,6,719,            if (instant >= iCutover) {,2,1,0,1,3,0,0,0,0,3,26,5,0.000957094,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,143,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.000926319,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,146,        if (zone == getZone()) {,1,1,0,2,5,0,1,0,0,3,24,4,0.000926319,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,254,        return this.data.size();,1,0,0,1,2,0,1,0,0,2,24,5,0.000925069,0
defect4j,time,org/joda/time/base/BaseDateTime,17,295,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.000888592,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,16,188,                if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,9,0.000871912,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,80,            return (int) ((instant / getUnitMillis()) % iRange);,2,2,0,4,8,0,1,0,0,5,52,8,0.000848493,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,621,                    rule = TwoDigitMonthField.INSTANCE;,3,0,0,0,0,0,0,0,0,4,35,11,0.000841043,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1403,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,1,0,0,1,2,2,0,2,0,5,68,3,0.000841043,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1221,            return position + 1;,1,1,0,0,0,0,0,0,0,2,20,5,0.000817671,0
defect4j,chart,org/jfree/chart/util/RectangleEdge,13,57,    public static final RectangleEdge TOP = new RectangleEdge(,1,0,0,0,1,3,0,2,0,6,58,2,0.000790722,0
defect4j,chart,org/jfree/data/Range,13,90,        this.upper = upper;,2,0,0,0,0,0,0,0,0,3,19,4,0.000790722,0
defect4j,chart,org/jfree/data/Range,13,99,        return this.lower;,1,0,0,0,0,0,0,0,0,1,18,5,0.000790722,0
defect4j,chart,org/jfree/chart/util/RectangleEdge,13,81,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.000790722,0
defect4j,chart,org/jfree/data/Range,13,108,        return this.upper;,1,0,0,0,0,0,0,0,0,1,18,5,0.000790722,0
defect4j,chart,org/jfree/chart/util/RectangleEdge,13,61,    public static final RectangleEdge BOTTOM = new RectangleEdge(,1,0,0,0,1,3,0,2,0,6,61,2,0.000790722,0
defect4j,chart,org/jfree/data/Range,13,83,"    public Range(double lower, double upper) {",3,0,0,1,3,1,0,0,0,4,42,2,0.000790722,0
defect4j,chart,org/jfree/data/Range,13,84,        if (lower > upper) {,2,1,0,1,3,0,0,0,0,3,20,4,0.000790722,0
defect4j,chart,org/jfree/chart/util/RectangleEdge,13,65,    public static final RectangleEdge LEFT = new RectangleEdge(,1,0,0,0,1,3,0,2,0,6,59,2,0.000790722,0
defect4j,chart,org/jfree/data/Range,13,89,        this.lower = lower;,2,0,0,0,0,0,0,0,0,3,19,4,0.000790722,0
defect4j,chart,org/jfree/chart/util/RectangleEdge,13,69,    public static final RectangleEdge RIGHT = new RectangleEdge(,1,0,0,0,1,3,0,2,0,6,60,2,0.000790722,0
defect4j,chart,org/jfree/chart/util/RectangleEdge,13,80,    private RectangleEdge(String name) {,2,0,0,1,3,1,0,1,0,4,36,2,0.000790722,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,435,"        return getMonthOfYear(millis, getYear(millis));",0,0,0,2,4,0,4,0,0,4,47,5,0.000779041,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,17,72,        return iChronology.getMonthOfYear(instant);,0,0,0,1,2,0,3,0,0,3,43,5,0.000771169,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,99,        this.arrangement = arrangement;,2,0,0,0,0,0,0,0,0,3,31,4,0.000751069,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,96,        if (arrangement == null) {,1,1,0,1,3,0,0,0,0,2,26,4,0.000751069,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,95,    public BlockContainer(Arrangement arrangement) {,2,0,0,1,3,1,0,1,0,4,48,2,0.000751069,0
defect4j,chart,org/jfree/chart/block/BlockContainer,13,100,        this.blocks = new ArrayList();,1,0,0,1,2,0,0,1,0,3,30,4,0.000751069,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,213,                leapYears--;,1,0,0,0,0,0,0,0,0,2,12,8,0.000734809,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,6,49,        return iWallOffset;,1,0,0,0,0,0,0,0,0,1,19,4,0.000715607,0
defect4j,chart,org/jfree/chart/block/BlockBorder,13,128,"    public BlockBorder(RectangleInsets insets, Paint paint) {",3,0,0,1,3,1,0,2,0,6,57,2,0.000673833,0
defect4j,chart,org/jfree/chart/block/BlockBorder,13,129,        if (insets == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,109,    protected AbstractBlock() {,1,0,0,1,3,1,0,0,0,2,27,2,0.000673833,0
defect4j,chart,org/jfree/chart/block/BlockBorder,13,71,    public static final BlockBorder NONE = new BlockBorder(,1,0,0,0,1,3,0,2,0,6,55,2,0.000673833,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,112,        this.height = 0.0;,1,0,0,0,0,0,0,0,0,2,18,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,110,        this.id = null;,1,0,0,0,0,0,0,0,0,2,15,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,116,        this.padding = RectangleInsets.ZERO_INSETS;,3,0,0,0,0,0,0,0,0,4,43,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,111,        this.width = 0.0;,1,0,0,0,0,0,0,0,0,2,17,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,115,        this.frame = BlockBorder.NONE; ,3,0,0,0,0,0,0,0,0,4,30,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,114,        this.margin = RectangleInsets.ZERO_INSETS;,3,0,0,0,0,0,0,0,0,4,42,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/BlockBorder,13,132,        if (paint == null) {,1,1,0,1,3,0,0,0,0,2,20,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/BlockBorder,13,135,        this.insets = insets;,2,0,0,0,0,0,0,0,0,3,21,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/AbstractBlock,13,113,        this.bounds = new Rectangle2D.Float();,3,0,0,1,2,0,0,0,0,4,38,4,0.000673833,0
defect4j,chart,org/jfree/chart/block/BlockBorder,13,136,        this.paint = paint;,2,0,0,0,0,0,0,0,0,3,19,4,0.000673833,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,131,        if ((base = iBase) != null && (iBaseFlags & 5) == 5) {,3,4,0,3,7,0,0,0,0,8,54,4,0.00066484,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1207,            char b = iValue;,2,0,0,0,0,0,0,0,0,2,16,6,0.000635765,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1206,            char a = text.charAt(position);,1,0,0,1,2,0,3,0,0,4,31,6,0.000635765,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1209,            if (a != b) {,2,1,0,1,3,0,0,0,0,3,13,5,0.000635765,0
defect4j,time,org/joda/time/DateTime,6,220,"        super(instant, chronology);",2,0,0,1,2,0,0,0,0,2,27,4,0.000622092,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1202,            if (position >= text.length()) {,1,1,0,2,5,0,2,0,0,4,32,5,0.000615014,0
defect4j,chart,org/jfree/data/category/DefaultCategoryDataset,18,233,"        addValue(new Double(value), rowKey, columnKey);",1,0,0,2,4,0,3,1,0,5,47,5,0.000608069,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,84,"        return iChronology.setYear(instant, year);",0,0,0,1,2,0,4,0,0,4,42,5,0.000595473,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,6,82,        FieldUtils.verifyValueBounds,0,0,0,0,0,0,2,0,0,2,28,5,0.000595473,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,167,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,0.000581341,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,173,"        FieldUtils.verifyValueBounds(DateTimeFieldType.minuteOfHour(), minuteOfHour, 0, 59);",0,0,0,2,4,0,5,0,0,5,84,5,0.000581341,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,175,"        FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfSecond(), millisOfSecond, 0, 999);",0,0,0,2,4,0,5,0,0,5,89,5,0.000581341,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,172,"        FieldUtils.verifyValueBounds(DateTimeFieldType.hourOfDay(), hourOfDay, 0, 23);",0,0,0,2,4,0,5,0,0,5,78,5,0.000581341,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,174,"        FieldUtils.verifyValueBounds(DateTimeFieldType.secondOfMinute(), secondOfMinute, 0, 59);",0,0,0,2,4,0,5,0,0,5,88,5,0.000581341,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,177,"        return getDateMidnightMillis(year, monthOfYear, dayOfMonth)",0,0,0,1,2,0,4,0,0,4,59,9,0.000581341,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,198,                    iOffset = iZoneRef.getOffset(iPeriodStart);,1,0,0,1,2,0,3,0,0,5,43,9,0.000575004,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,197,                if (iOffset == Integer.MIN_VALUE) {,3,1,0,1,3,0,0,0,0,4,35,7,0.000575004,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,196,            if (iNextInfo == null || millis < iNextInfo.iPeriodStart) {,4,3,0,1,3,0,0,0,0,7,59,5,0.000575004,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,200,                return iOffset;,1,0,0,0,0,0,0,0,0,1,15,7,0.000575004,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,103,        return getInfo(instant).getOffset(instant);,0,0,0,2,4,0,4,0,0,4,43,5,0.000575004,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1534,            if (i < transitions.length) {,3,1,0,1,3,0,0,0,0,4,29,5,0.000575004,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1533,            i = ~i;,2,0,0,0,0,0,0,0,0,4,7,5,0.000575004,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1528,            long[] transitions = iTransitions;,2,0,0,1,2,0,0,0,0,2,34,6,0.000574374,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1529,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,1,2,0,4,0,0,5,50,6,0.000574374,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1530,            if (i >= 0) {,1,1,0,1,3,0,0,0,0,2,13,5,0.000574374,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,141,        Info[] cache = iInfoCache;,2,0,0,1,2,0,0,1,0,3,26,4,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,155,        long end = periodStart | 0xffffffffL;,2,1,0,0,0,0,0,0,0,3,37,5,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,148,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,140,        int period = (int)(millis >> 32);,2,1,0,2,4,0,0,0,0,3,33,5,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,142,        int index = period & cInfoCacheMask;,3,1,0,0,0,0,0,0,0,4,36,5,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,143,        Info info = cache[index];,1,0,1,1,2,0,0,1,0,4,25,4,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,144,        if (info == null || (int)((info.iPeriodStart >> 32)) != period) {,4,4,0,4,9,0,0,0,0,8,65,4,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,145,            info = createInfo(millis);,1,0,0,1,2,0,2,0,0,4,26,6,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,180,"        Info(DateTimeZone zone, long periodStart) {",3,0,0,1,3,0,0,1,0,4,43,3,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,181,            iPeriodStart = periodStart;,2,0,0,0,0,0,0,0,0,3,27,5,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,156,        Info chain = info;,2,0,0,0,0,0,0,1,0,3,18,4,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,182,            iZoneRef = zone;,2,0,0,0,0,0,0,0,0,3,16,5,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,177,        private int iOffset = Integer.MIN_VALUE;,3,0,0,0,0,1,0,0,0,4,40,3,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,178,        private int iStandardOffset = Integer.MIN_VALUE;,3,0,0,0,0,1,0,0,0,4,48,3,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,166,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,146,            cache[index] = info;,1,0,1,1,2,0,0,0,0,4,20,6,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,159,            if (next == periodStart || next > end) {,4,3,0,1,3,0,0,0,0,7,40,6,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,158,            long next = iZone.nextTransition(periodStart);,1,0,0,1,2,0,3,0,0,4,46,7,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,153,"        Info info = new Info(iZone, periodStart);",3,0,0,1,2,0,0,2,0,5,41,4,0.000571862,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,152,        long periodStart = millis & (0xffffffffL << 32);,2,2,0,1,2,0,0,0,0,4,48,5,0.000571862,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1571,"            int i = Arrays.binarySearch(transitions, instant);",1,0,0,1,2,0,4,0,0,5,50,6,0.000571862,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1570,            long[] transitions = iTransitions;,2,0,0,1,2,0,0,0,0,2,34,6,0.000571862,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1573,            if (i < transitions.length) {,3,1,0,1,3,0,0,0,0,4,29,5,0.000571862,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1572,            i = (i >= 0) ? (i + 1) : ~i;,4,2,0,2,4,0,0,0,0,8,28,5,0.000571862,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,725,                    if (daysToAdd > 0) {,1,1,0,1,3,0,0,0,0,2,20,9,0.000565219,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,726,                        daysToAdd -= 7;,1,0,0,0,0,0,0,0,0,2,15,11,0.000565219,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,709,"                instant = chrono.dayOfMonth().set(instant, 1);",1,0,0,2,4,0,4,0,0,6,46,7,0.000565219,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,711,"                instant = chrono.dayOfMonth().add(instant, iDayOfMonth);",1,0,0,2,4,0,5,0,0,7,56,7,0.000565219,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,710,"                instant = chrono.monthOfYear().add(instant, 1);",1,0,0,2,4,0,4,0,0,6,47,7,0.000565219,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,554,                offset = 0;,1,0,0,0,0,0,0,0,0,2,11,8,0.000565219,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,551,            } else if (iMode == 's') {,1,1,0,1,4,0,0,0,0,3,26,6,0.000565219,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1187,            return iStandardOffset + findMatchingRecurrence(instant).getSaveMillis();,1,1,0,2,4,0,3,0,0,5,73,5,0.000553672,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1543,            return iTailZone.getOffset(instant);,0,0,0,1,2,0,3,0,0,3,36,6,0.000553672,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,618,                } else if (tokenLen == 3) {,1,1,0,1,4,0,0,0,0,2,27,8,0.000547345,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,620,                } else if (tokenLen == 2) {,1,1,0,1,4,0,0,0,0,2,27,9,0.000547345,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1332,            return (start > end) ? startRecurrence : endRecurrence;,4,1,0,1,2,0,0,0,0,5,55,6,0.000536592,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1322,                end = endRecurrence.next,1,0,0,0,0,0,2,0,0,4,24,7,0.000536592,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1306,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,3,42,5,0.000536592,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1311,                start = startRecurrence.next,1,0,0,0,0,0,2,0,0,4,28,7,0.000536592,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1304,            int standardOffset = iStandardOffset;,2,0,0,0,0,0,0,0,0,2,37,6,0.000536592,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1305,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,3,46,5,0.000536592,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2688,            DateTimeParser[] elements = iParsers;,2,0,0,1,2,0,0,1,0,3,37,5,0.000523271,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2695,"                position = elements[i].parseInto(bucket, text, position);",1,0,1,2,4,0,4,0,0,8,57,7,0.000523271,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2697,            return position;,1,0,0,0,0,0,0,0,0,1,16,5,0.000523271,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2694,            for (int i=0; i<len && position >= 0; i++) {,5,3,0,1,3,0,0,0,0,9,44,5,0.000523271,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2689,            if (elements == null) {,1,1,0,1,3,0,0,0,0,2,23,5,0.000523271,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,2693,            int len = elements.length;,3,0,0,0,0,0,0,0,0,3,26,6,0.000523271,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,578,"                    next = setDayOfWeek(chrono, next);",1,0,0,1,2,0,3,0,0,5,34,9,0.000476322,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,575,"                    next = chrono.year().add(next, 1);",1,0,0,2,4,0,4,0,0,6,34,9,0.000476322,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,577,"                    next = setDayOfMonthNext(chrono, next);",1,0,0,1,2,0,3,0,0,5,39,9,0.000476322,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,576,"                    next = chrono.monthOfYear().set(next, iMonthOfYear);",1,0,0,2,4,0,5,0,0,7,52,9,0.000476322,0
defect4j,time,org/joda/time/base/BaseDateTime,17,256,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.000474587,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1206,                start = startRecurrence.next,1,0,0,0,0,0,2,0,0,4,28,7,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1201,            Recurrence endRecurrence = iEndRecurrence;,2,0,0,0,0,0,0,1,0,3,42,5,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1200,            Recurrence startRecurrence = iStartRecurrence;,2,0,0,0,0,0,0,1,0,3,46,5,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1208,                if (instant > 0 && start < 0) {,2,3,0,1,3,0,0,0,0,5,31,7,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1580,            if (instant < end) {,2,1,0,1,3,0,0,0,0,3,20,5,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1583,            return iTailZone.nextTransition(instant);,0,0,0,1,2,0,3,0,0,3,41,6,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1199,            int standardOffset = iStandardOffset;,2,0,0,0,0,0,0,0,0,2,37,6,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1579,            long end = transitions[transitions.length - 1];,3,1,1,1,2,0,0,0,0,5,47,6,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1221,                end = endRecurrence.next,1,0,0,0,0,0,2,0,0,4,24,7,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1223,                if (instant > 0 && end < 0) {,2,3,0,1,3,0,0,0,0,5,29,7,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,1235,            return (start > end) ? end : start;,4,1,0,1,2,0,0,0,0,5,35,6,0.000473668,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,574,                if (next <= instant) {,2,1,0,1,3,0,0,0,0,3,22,7,0.00047102,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,573,"                next = setDayOfWeek(chrono, next);",1,0,0,1,2,0,3,0,0,5,34,7,0.00047102,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,719,            if (daysToAdd != 0) {,1,1,0,1,3,0,0,0,0,2,21,5,0.00047102,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,720,                if (iAdvance) {,1,0,0,1,3,0,0,0,0,1,15,7,0.00047102,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,729,"                instant = chrono.dayOfWeek().add(instant, daysToAdd);",1,0,0,2,4,0,5,0,0,7,53,7,0.00047102,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,731,            return instant;,1,0,0,0,0,0,0,0,0,1,15,5,0.00047102,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,718,            int daysToAdd = iDayOfWeek - dayOfWeek;,3,1,0,0,0,0,0,0,0,4,39,6,0.00047102,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,717,            int dayOfWeek = chrono.dayOfWeek().get(instant);,1,0,0,2,4,0,4,0,0,5,48,6,0.00047102,0
defect4j,time,org/joda/time/base/BaseDateTime,17,253,        iChronology = checkChronology(chronology);,1,0,0,1,2,0,2,0,0,4,42,4,0.000470424,0
defect4j,time,org/joda/time/base/BaseDateTime,17,254,"        long instant = iChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,",1,0,0,0,1,0,5,0,0,6,75,5,0.000470424,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,560,            Chronology chrono = ISOChronology.getInstanceUTC();,1,0,0,1,2,0,2,1,0,4,51,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,561,"            long next = chrono.monthOfYear().set(instant, iMonthOfYear);",1,0,0,2,4,0,5,0,0,6,60,6,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,564,"            next = chrono.millisOfDay().add(next, iMillisOfDay);",1,0,0,2,4,0,5,0,0,7,52,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,776,            return iSaveMillis;,1,0,0,0,0,0,0,0,0,1,19,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,583,            return next - offset;,2,1,0,0,0,0,0,0,0,3,21,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,761,"            return iOfYear.next(instant, standardOffset, saveMillis);",0,0,0,1,2,0,5,0,0,5,57,6,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,563,"            next = chrono.millisOfDay().set(next, 0);",1,0,0,2,4,0,4,0,0,6,41,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,567,            if (iDayOfWeek == 0) {,1,1,0,1,3,0,0,0,0,2,22,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,565,"            next = setDayOfMonthNext(chrono, next);",1,0,0,1,2,0,3,0,0,5,39,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,706,            if (iDayOfMonth >= 0) {,1,1,0,1,3,0,0,0,0,2,23,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,713,            return instant;,1,0,0,0,0,0,0,0,0,1,15,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,672,"                next = setDayOfMonth(chrono, next);",1,0,0,1,2,0,3,0,0,5,35,7,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,683,            return next;,1,0,0,0,0,0,0,0,0,1,12,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,549,            if (iMode == 'w') {,1,1,0,1,3,0,0,0,0,3,19,5,0.000468379,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,16,558,            instant += offset;,2,0,0,0,0,0,0,0,0,3,18,5,0.000468379,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,448,        int year = getYear(millis);,1,0,0,1,2,0,2,0,0,3,27,5,0.000466809,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,449,"        int month = getMonthOfYear(millis, year);",1,0,0,1,2,0,3,0,0,4,41,5,0.000466809,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,450,"        return getDayOfMonth(millis, year, month);",0,0,0,1,2,0,4,0,0,4,42,5,0.000466809,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,17,47,        return iChronology.getDayOfMonth(instant);,0,0,0,1,2,0,3,0,0,3,42,5,0.000461689,0
defect4j,time,org/joda/time/field/BaseDateTimeField,16,253,"        return getDurationField().add(instant, value);",0,0,0,2,4,0,4,0,0,4,46,5,0.000460499,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,17,54,        return iChronology.getYear(instant);,0,0,0,1,2,0,3,0,0,3,36,5,0.000457631,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,107,        if ((base = iBase) != null) {,2,1,0,2,5,0,0,0,0,4,29,4,0.00045511,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,108,            return base.getZone();,0,0,0,1,2,0,2,0,0,2,22,7,0.00045511,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,468,        long dateMillis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,38,5,0.000454106,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,470,        return (int) ((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1;,4,3,0,3,6,0,0,0,0,7,76,4,0.000454106,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,469,"        dateMillis += getTotalMillisByYearMonth(year, month);",1,0,0,1,2,0,3,0,0,5,53,4,0.000454106,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,115,            monthToUse = (monthToUse % iMax) + 1;,3,2,0,1,2,0,0,0,0,6,37,6,0.00045009,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,114,            yearToUse = thisYear + (monthToUse / iMax);,4,2,0,1,2,0,0,0,0,7,43,6,0.00045009,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,88,        int i = (int)((millis - getYearMillis(year)) >> 10);,2,2,0,4,8,0,2,0,0,6,52,5,0.000445648,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,606,"        return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);",0,0,0,1,2,0,4,0,0,4,60,5,0.000441227,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,605,"        FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));",0,0,0,3,6,0,8,0,0,8,115,5,0.000441227,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,79,        if (instant >= 0) {,1,1,0,1,3,0,0,0,0,2,19,4,0.000440739,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,604,"        FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));",0,0,0,3,6,0,7,0,0,7,97,5,0.00044025,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,682,        return getMaxMonth();,0,0,0,1,2,0,1,0,0,1,21,5,0.00044025,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,603,"        FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());",0,0,0,4,8,0,7,0,0,7,89,5,0.00044025,0
defect4j,time,org/joda/time/field/FieldUtils,17,232,        if ((value < lowerBound) || (value > upperBound)) {,4,3,0,3,7,0,0,0,0,7,51,4,0.000439763,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,241,        return (1970L * MILLIS_PER_YEAR) / 2;,1,2,0,1,2,0,0,0,0,3,37,4,0.000437816,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,233,        return MILLIS_PER_YEAR / 2;,1,1,0,0,0,0,0,0,0,2,27,4,0.000437816,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,138,        if (dayToUse > maxDay) {,2,1,0,1,3,0,0,0,0,3,24,4,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,137,"        int maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);",1,0,0,1,2,0,4,0,0,5,67,5,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,136,"        int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);",1,0,0,1,2,0,5,0,0,6,71,5,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,146,        return datePart + timePart;,2,1,0,0,0,0,0,0,0,3,27,4,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,144,        long datePart =,1,0,0,0,0,0,0,0,0,1,15,5,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,98,        long timePart = iChronology.getMillisOfDay(instant);,1,0,0,1,2,0,3,0,0,4,52,5,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,104,"        int thisMonth = iChronology.getMonthOfYear(instant, thisYear);",1,0,0,1,2,0,4,0,0,5,62,5,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,103,        int thisYear = iChronology.getYear(instant);,1,0,0,1,2,0,3,0,0,4,44,5,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,113,        if (monthToUse >= 0) {,1,1,0,1,3,0,0,0,0,2,22,4,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,112,        int monthToUse = thisMonth - 1 + months;,3,2,0,0,0,0,0,0,0,5,40,5,0.000437233,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,120,        if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,5,0.000434911,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,428,        return year;,1,0,0,0,0,0,0,0,0,1,12,4,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,399,        long unitMillis = getAverageMillisPerYearDividedByTwo();,1,0,0,1,2,0,1,0,0,2,56,5,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,401,        if (i2 < 0) {,1,1,0,1,3,0,0,0,0,2,13,4,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,407,        long diff = instant - yearStart;,3,1,0,0,0,0,0,0,0,4,32,5,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,409,        if (diff < 0) {,1,1,0,1,3,0,0,0,0,2,15,4,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,400,        long i2 = (instant >> 1) + getApproxMillisAtEpochDividedByTwo();,2,2,0,2,4,0,1,0,0,5,64,5,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,404,        int year = (int) (i2 / unitMillis);,3,1,0,2,4,0,0,0,0,4,35,5,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,406,        long yearStart = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,37,5,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,411,        } else if (diff >= DateTimeConstants.MILLIS_PER_DAY * 365L) {,3,2,0,1,4,0,0,0,0,5,61,5,0.000432023,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,16,92,        if (months == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,0.000427068,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,139,        if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,5,0.000422518,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,221,        return MIN_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,0.000418768,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,217,        return (year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY;,5,4,0,2,4,0,0,0,0,9,90,4,0.000413196,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,212,            if (isLeapYear(year)) {,0,0,0,2,5,0,2,0,0,2,23,7,0.000413196,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,211,            leapYears = (year >> 2) - leapYears + (leapYears >> 2);,4,4,0,2,4,0,0,0,0,9,55,6,0.000413196,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,202,        int leapYears = year / 100;,2,1,0,0,0,0,0,0,0,3,27,5,0.000413196,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,203,        if (year < 0) {,1,1,0,1,3,0,0,0,0,2,15,4,0.000413196,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,262,            Arrays.sort(this.chars);,1,0,0,1,2,0,2,0,0,3,24,6,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,261,            this.chars = (char[]) chars.clone();,1,0,0,3,6,0,2,0,0,4,36,5,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",1,0,0,2,4,3,1,2,0,8,88,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,1,0,0,1,2,3,0,2,0,6,65,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",1,0,0,1,2,3,0,2,0,7,69,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",1,0,0,2,4,3,1,2,0,8,94,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,294,            this.ch = ch;,2,0,0,0,0,0,0,0,0,3,13,5,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",1,0,0,1,2,3,0,2,0,7,76,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,1,0,0,1,2,3,0,2,0,7,69,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,1,0,0,1,2,3,0,2,0,7,68,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,1,0,0,1,2,3,0,2,0,6,63,2,0.000404412,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,1,0,0,1,2,3,0,2,0,7,77,2,0.000404412,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,197,        return ((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0);,3,8,0,5,10,0,0,0,0,11,69,4,0.000394634,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,62,"        int newYear = FieldUtils.safeAdd(thisYear, years);",1,0,0,1,2,0,4,0,0,5,50,5,0.000389883,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,63,"        return set(instant, newYear);",0,0,0,1,2,0,3,0,0,3,29,5,0.000389883,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,61,        int thisYear = get(instant);,1,0,0,1,2,0,2,0,0,3,28,5,0.000389883,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,16,58,        if (years == 0) {,1,1,0,1,3,0,0,0,0,2,17,4,0.000387454,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,93,    public static final TextAnchor BASELINE_LEFT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,62,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,97,    public static final TextAnchor BASELINE_CENTER = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,64,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,109,    public static final TextAnchor BOTTOM_CENTER = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,62,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,101,    public static final TextAnchor BASELINE_RIGHT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,63,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,125,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,66,    public static final TextAnchor TOP_RIGHT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,58,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,62,    public static final TextAnchor TOP_CENTER = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,59,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,82,    public static final TextAnchor CENTER_LEFT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,60,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,86,"    public static final TextAnchor CENTER = new TextAnchor(""TextAnchor.CENTER"");",1,0,0,1,2,3,0,2,0,7,76,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,113,    public static final TextAnchor BOTTOM_RIGHT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,61,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,58,    public static final TextAnchor TOP_LEFT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,57,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,124,    private TextAnchor(String name) {,2,0,0,1,3,1,0,1,0,4,33,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,105,    public static final TextAnchor BOTTOM_LEFT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,60,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,89,    public static final TextAnchor CENTER_RIGHT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,61,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,78,    public static final TextAnchor HALF_ASCENT_RIGHT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,66,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,74,    public static final TextAnchor HALF_ASCENT_CENTER = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,67,2,0.000357143,0
defect4j,chart,org/jfree/chart/text/TextAnchor,19,70,    public static final TextAnchor HALF_ASCENT_LEFT = new TextAnchor(,1,0,0,0,1,3,0,2,0,6,65,2,0.000357143,0
defect4j,time,org/joda/time/base/BaseDateTime,17,284,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,0.000352638,0
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,16,1367,            return iMaxParsedDigits;,1,0,0,0,0,0,0,0,0,1,24,5,0.000340745,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,387,        return millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY;,4,3,0,2,4,0,0,0,0,7,74,4,0.00033828,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,386,"        millis += getTotalMillisByYearMonth(year, month);",1,0,0,1,2,0,3,0,0,5,49,4,0.00033828,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,385,        long millis = getYearMillis(year);,1,0,0,1,2,0,2,0,0,3,34,5,0.00033828,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,544,        return 1 + (int) ((daysSince19700101 + 3) % 7);,1,3,0,3,6,0,0,0,0,4,47,4,0.000337866,0
defect4j,time,org/joda/time/chrono/BasicChronology,16,535,            daysSince19700101 = instant / DateTimeConstants.MILLIS_PER_DAY;,4,1,0,0,0,0,0,0,0,6,63,6,0.000337866,0
defect4j,time,org/joda/time/base/BaseDateTime,6,125,        iChronology = checkChronology(chronology);,1,0,0,1,2,0,2,0,0,4,42,4,0.000333339,0
defect4j,time,org/joda/time/base/BaseDateTime,6,126,"        iMillis = checkInstant(instant, iChronology);",1,0,0,1,2,0,3,0,0,5,45,4,0.000333339,0
defect4j,time,org/joda/time/base/BaseDateTime,17,270,        return DateTimeUtils.getChronology(chronology);,0,0,0,1,2,0,3,0,0,3,47,5,0.000331657,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,743,        return info;,1,0,0,0,0,0,0,0,0,1,12,4,0.000313853,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,741,            iYearInfoCache[year & CACHE_MASK] = info;,3,1,1,1,2,0,0,0,0,6,41,6,0.000313853,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,360,        return getYearInfo(year).iFirstDayMillis;,1,0,0,1,2,0,2,0,0,3,41,5,0.000313853,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,738,        YearInfo info = iYearInfoCache[year & CACHE_MASK];,3,1,1,1,2,0,0,1,0,6,50,4,0.000313853,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,739,        if (info == null || info.iYear != year) {,4,3,0,1,3,0,0,0,0,7,41,4,0.000313853,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,740,"            info = new YearInfo(year, calculateFirstDayOfYearMillis(year));",2,0,0,2,4,0,2,1,0,6,63,6,0.000313853,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,772,            iFirstDayMillis = firstDayMillis;,2,0,0,0,0,0,0,0,0,3,33,5,0.000313853,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,770,"        YearInfo(int year, long firstDayMillis) {",3,0,0,1,3,0,0,0,0,3,41,3,0.000313853,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,771,            iYear = year;,2,0,0,0,0,0,0,0,0,3,13,5,0.000313853,0
defect4j,time,org/joda/time/field/MillisDurationField,16,117,"        return FieldUtils.safeAdd(instant, value);",0,0,0,1,2,0,4,0,0,4,42,5,0.000312916,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1278,            mSize = size;,2,0,0,0,0,0,0,0,0,3,13,5,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1272,"        PaddedNumberField(int field, int size) {",3,0,0,1,3,0,0,0,0,3,40,3,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1273,            if (size < 3) {,1,1,0,1,3,0,0,0,0,2,15,5,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1277,            mField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1332,        TwoDigitNumberField(int field) {,2,0,0,1,3,0,0,0,0,2,32,3,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,610,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",3,0,0,1,2,0,2,0,0,6,49,9,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,771,            return new TwoDigitNumberField(field);,1,0,0,1,2,0,0,1,0,2,38,6,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,773,"            return new PaddedNumberField(field, padding);",2,0,0,1,2,0,0,1,0,3,45,6,0.000267308,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1333,            mField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.000267308,0
defect4j,chart,org/jfree/data/category/DefaultCategoryDataset,18,218,"        this.data.addValue(value, rowKey, columnKey);",1,0,0,1,2,0,4,0,0,5,45,5,0.000263214,0
defect4j,chart,org/jfree/data/category/DefaultCategoryDataset,18,219,        fireDatasetChanged();,0,0,0,1,2,0,1,0,0,1,21,5,0.000263214,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,107,"                chrono = new ISOChronology(ZonedChronology.getInstance(INSTANCE_UTC, zone));",1,0,0,2,4,0,4,1,0,7,76,8,0.000226773,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,108,"                cCache.put(zone, chrono);",0,0,0,1,2,0,4,0,0,4,25,9,0.000226773,0
defect4j,time,org/joda/time/field/FieldUtils,16,70,        return sum;,1,0,0,0,0,0,0,0,0,1,11,4,0.000223572,0
defect4j,time,org/joda/time/field/FieldUtils,16,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,4,5,0,3,7,0,0,0,0,9,45,4,0.000219536,0
defect4j,time,org/joda/time/field/FieldUtils,16,64,        int sum = val1 + val2;,3,1,0,0,0,0,0,0,0,4,22,5,0.000219536,0
defect4j,time,org/joda/time/DateTimeZone,6,1037,        if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0) {,4,5,0,3,7,0,0,0,0,9,69,4,0.00020964,0
defect4j,time,org/joda/time/DateTimeZone,6,1035,        long instantUTC = instantLocal - offset;,3,1,0,0,0,0,0,0,0,4,40,5,0.00020964,0
defect4j,time,org/joda/time/DateTimeZone,6,1002,        int offsetLocal = getOffset(instantLocal);,1,0,0,1,2,0,2,0,0,3,42,5,0.00020964,0
defect4j,time,org/joda/time/DateTimeZone,6,1004,        int offset = getOffset(instantLocal - offsetLocal);,3,1,0,1,2,0,1,0,0,5,51,5,0.00020964,0
defect4j,time,org/joda/time/DateTimeZone,6,1040,        return instantUTC;,1,0,0,0,0,0,0,0,0,1,18,4,0.00020964,0
defect4j,time,org/joda/time/DateTimeZone,6,1006,        if (offsetLocal != offset) {,2,1,0,1,3,0,0,0,0,3,28,4,0.00020964,0
defect4j,time,org/joda/time/chrono/GJChronology,6,396,        return iCutoverInstant;,1,0,0,0,0,0,0,0,0,1,23,4,0.00020924,0
defect4j,time,org/joda/time/chrono/GJChronology,6,206,                    chrono = chronos.get(i);,1,0,0,1,2,0,3,0,0,5,24,10,0.00020924,0
defect4j,time,org/joda/time/chrono/GJChronology,6,207,                    if (minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() &&,1,2,0,1,3,0,2,0,0,5,63,10,0.00020924,0
defect4j,time,org/joda/time/chrono/GJChronology,6,205,                for (int i = chronos.size(); --i >= 0;) {,2,1,0,2,5,0,2,0,0,6,41,8,0.00020924,0
defect4j,time,org/joda/time/chrono/GJChronology,6,405,        return iGregorianChronology.getMinimumDaysInFirstWeek();,0,0,0,1,2,0,2,0,0,2,56,5,0.000208443,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,99,        int index = System.identityHashCode(zone) & (FAST_CACHE_SIZE - 1);,2,2,0,2,4,0,3,0,0,7,66,5,0.000192653,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,106,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,0.000192653,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,104,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,0.000192653,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,105,            chrono = cCache.get(zone);,1,0,0,1,2,0,3,0,0,5,26,6,0.000192653,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,100,        ISOChronology chrono = cFastCache[index];,1,0,1,1,2,0,0,1,0,4,41,4,0.000192653,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,101,        if (chrono != null && chrono.getZone() == zone) {,2,3,0,2,5,0,2,0,0,7,49,4,0.000192653,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,96,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.000192653,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,111,        cFastCache[index] = chrono;,1,0,1,1,2,0,0,0,0,4,27,4,0.000192653,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,112,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.000192653,0
defect4j,time,org/joda/time/base/AbstractInstant,6,259,        if (this == readableInstant) {,1,1,0,1,3,0,0,0,0,2,30,4,0.000188342,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,105,"        return FieldUtils.safeAdd(instant, addition);",0,0,0,1,2,0,4,0,0,4,45,5,0.000185981,0
defect4j,time,org/joda/time/field/PreciseDurationField,16,104,        long addition = value * iUnitMillis;  // safe,3,1,0,0,0,0,0,0,0,4,45,5,0.000185981,0
defect4j,time,org/joda/time/DateTimeUtils,17,255,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,0.000184789,0
defect4j,chart,org/jfree/data/category/DefaultCategoryDataset,18,73,    public DefaultCategoryDataset() {,1,0,0,1,3,1,0,0,0,2,33,2,0.000166138,0
defect4j,chart,org/jfree/data/category/DefaultCategoryDataset,18,74,        this.data = new DefaultKeyedValues2D();,1,0,0,1,2,0,0,1,0,3,39,4,0.000166138,0
defect4j,time,org/joda/time/chrono/GJChronology,6,174,"        return getInstance(zone, gregorianCutover, 4);",0,0,0,1,2,0,3,0,0,3,46,5,0.000162576,0
defect4j,time,org/joda/time/field/DelegatedDateTimeField,6,172,"        return iField.set(instant, value);",0,0,0,1,2,0,4,0,0,4,34,5,0.000159988,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,17,127,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,0.00015321,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,123,        return iZone.hashCode();,0,0,0,1,2,0,2,0,0,2,24,5,0.000137596,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,133,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,0.000135256,0
defect4j,time,org/joda/time/base/BaseDateTime,6,295,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,0.00013519,0
defect4j,time,org/joda/time/DateTimeZone,17,1237,        return 57 + getID().hashCode();,0,1,0,2,4,0,2,0,0,3,31,4,0.000127416,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,56,        if (base == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,59,        base = base.withUTC();,1,0,0,1,2,0,2,0,0,4,22,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,207,"        converted.put(field, zonedField);",0,0,0,1,2,0,4,0,0,4,33,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,193,"        fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted);",4,0,0,1,2,0,2,0,0,7,69,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,200,        if (field == null || !field.isSupported()) {,1,2,0,2,5,0,2,0,0,6,44,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,394,            iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,284,            super(field.getType());,0,0,0,2,4,0,2,0,0,2,23,6,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,288,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,82,"        super(base, zone);",2,0,0,1,2,0,0,0,0,2,18,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,395,            iDurationField = durationField;,2,0,0,0,0,0,0,0,0,3,31,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,212,        if (field == null || !field.isSupported()) {,1,2,0,2,5,0,2,0,0,6,44,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,215,        if (converted.containsKey(field)) {,0,0,0,2,5,0,3,0,0,3,35,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,86,        return (DateTimeZone)getParam();,0,0,0,2,4,0,1,1,0,2,32,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,188,"        fields.secondOfMinute = convertField(fields.secondOfMinute, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,289,            iTimeField = useTimeArithmetic(field);,1,0,0,1,2,0,2,0,0,4,38,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,173,"        fields.year = convertField(fields.year, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,175,"        fields.yearOfCentury = convertField(fields.yearOfCentury, converted);",4,0,0,1,2,0,2,0,0,7,69,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,176,"        fields.centuryOfEra = convertField(fields.centuryOfEra, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,177,"        fields.era = convertField(fields.era, converted);",4,0,0,1,2,0,2,0,0,7,49,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,179,"        fields.dayOfMonth = convertField(fields.dayOfMonth, converted);",4,0,0,1,2,0,2,0,0,7,63,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,223,"        converted.put(field, zonedField);",0,0,0,1,2,0,4,0,0,4,33,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,224,        return zonedField;,1,0,0,0,0,0,0,0,0,1,18,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,60,        if (base == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,63,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,66,"        return new ZonedChronology(base, zone);",2,0,0,1,2,0,0,1,0,3,39,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,298,            return iField.getUnitMillis();,0,0,0,1,2,0,2,0,0,2,30,6,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,290,            iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,285,            if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,163,"        fields.days = convertField(fields.days, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,162,"        fields.weeks = convertField(fields.weeks, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,161,"        fields.weekyears = convertField(fields.weekyears, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,160,"        fields.months = convertField(fields.months, converted);",4,0,0,1,2,0,2,0,0,7,55,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,167,"        fields.minutes = convertField(fields.minutes, converted);",4,0,0,1,2,0,2,0,0,7,57,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,166,"        fields.hours = convertField(fields.hours, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,165,"        fields.halfdays = convertField(fields.halfdays, converted);",4,0,0,1,2,0,2,0,0,7,59,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,169,"        fields.millis = convertField(fields.millis, converted);",4,0,0,1,2,0,2,0,0,7,55,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,168,"        fields.seconds = convertField(fields.seconds, converted);",4,0,0,1,2,0,2,0,0,7,57,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,398,            iLeapDurationField = leapDurationField;,2,0,0,0,0,0,0,0,0,3,39,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,396,            iTimeField = useTimeArithmetic(durationField);,1,0,0,1,2,0,2,0,0,4,46,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,397,            iRangeDurationField = rangeDurationField;,2,0,0,0,0,0,0,0,0,3,41,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,390,            if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,393,            iField = field;,2,0,0,0,0,0,0,0,0,3,15,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,72,        return field != null && field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12;,3,4,0,1,2,0,2,0,0,9,87,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,186,"        fields.millisOfSecond = convertField(fields.millisOfSecond, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,157,"        fields.eras = convertField(fields.eras, converted);",4,0,0,1,2,0,2,0,0,7,51,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,192,"        fields.hourOfDay = convertField(fields.hourOfDay, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,191,"        fields.minuteOfDay = convertField(fields.minuteOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,196,"        fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,194,"        fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,153,"        HashMap<Object, Object> converted = new HashMap<Object, Object>();",1,0,0,1,2,0,0,6,0,7,66,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,218,        ZonedDateTimeField zonedField =,1,0,0,0,0,0,0,1,0,2,31,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,389,            super(field.getType());,0,0,0,2,4,0,2,0,0,2,23,6,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,158,"        fields.centuries = convertField(fields.centuries, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,159,"        fields.years = convertField(fields.years, converted);",4,0,0,1,2,0,2,0,0,7,53,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,174,"        fields.yearOfEra = convertField(fields.yearOfEra, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,208,        return zonedField;,1,0,0,0,0,0,0,0,0,1,18,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,206,"        ZonedDurationField zonedField = new ZonedDurationField(field, getZone());",2,0,0,2,4,0,1,2,0,5,73,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,204,            return (DurationField)converted.get(field);,0,0,0,2,4,0,3,1,0,4,43,7,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,203,        if (converted.containsKey(field)) {,0,0,0,2,5,0,3,0,0,3,35,5,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,201,            return field;,1,0,0,0,0,0,0,0,0,1,13,6,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,178,"        fields.dayOfWeek = convertField(fields.dayOfWeek, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,190,"        fields.minuteOfHour = convertField(fields.minuteOfHour, converted);",4,0,0,1,2,0,2,0,0,7,67,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,189,"        fields.secondOfDay = convertField(fields.secondOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,184,"        fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);",4,0,0,1,2,0,2,0,0,7,77,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,187,"        fields.millisOfDay = convertField(fields.millisOfDay, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,195,"        fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted);",4,0,0,1,2,0,2,0,0,7,79,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,181,"        fields.monthOfYear = convertField(fields.monthOfYear, converted);",4,0,0,1,2,0,2,0,0,7,65,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,180,"        fields.dayOfYear = convertField(fields.dayOfYear, converted);",4,0,0,1,2,0,2,0,0,7,61,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,183,"        fields.weekyear = convertField(fields.weekyear, converted);",4,0,0,1,2,0,2,0,0,7,59,4,0.000127188,0
defect4j,time,org/joda/time/chrono/ZonedChronology,17,182,"        fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted);",4,0,0,1,2,0,2,0,0,7,71,4,0.000127188,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,109,        return getWrappedField().getUnitMillis() * iScalar;,1,1,0,2,4,0,2,0,0,4,51,4,0.000126961,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,315,        return iParam;,1,0,0,0,0,0,0,0,0,1,14,4,0.000122439,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,17,160,            return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,5,0.000117092,0
defect4j,time,org/joda/time/DateTimeUtils,17,252,        if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0.000101761,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,150,        hash += getWrappedField().hashCode();,1,0,0,2,4,0,2,0,0,4,37,4,9.84E-05,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,145,        return hash;,1,0,0,0,0,0,0,0,0,1,12,4,9.84E-05,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,143,        int hash = (int) (millis ^ (millis >>> 32));,3,2,0,3,6,0,0,0,0,5,44,5,9.84E-05,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,142,        long millis = iUnitMillis;,2,0,0,0,0,0,0,0,0,2,26,5,9.84E-05,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,17,220,        return iChronology.weeks();,0,0,0,1,2,0,2,0,0,2,27,5,9.84E-05,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,17,101,        return getWrappedField().getLeapDurationField();,0,0,0,2,4,0,2,0,0,2,48,5,9.84E-05,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,17,328,        return iChronology.days();,0,0,0,1,2,0,2,0,0,2,26,5,9.84E-05,0
defect4j,time,org/joda/time/field/MillisDurationField,17,155,        return (int) getUnitMillis();,0,0,0,2,4,0,1,0,0,1,29,6,9.84E-05,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,17,111,        return iChronology.days();,0,0,0,1,2,0,2,0,0,2,26,5,9.84E-05,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,151,        return hash;,1,0,0,0,0,0,0,0,0,1,12,4,9.84E-05,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,147,        long scalar = iScalar;,2,0,0,0,0,0,0,0,0,2,22,5,9.84E-05,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,149,        hash += getType().hashCode();,1,0,0,2,4,0,2,0,0,4,29,4,9.84E-05,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,148,        int hash = (int) (scalar ^ (scalar >>> 32));,3,2,0,3,6,0,0,0,0,5,44,5,9.84E-05,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,144,        hash += getType().hashCode();,1,0,0,2,4,0,2,0,0,4,29,4,9.84E-05,0
defect4j,time,org/joda/time/field/MillisDurationField,17,49,        return DurationFieldType.millis();,0,0,0,1,2,0,2,0,0,2,34,5,9.82E-05,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,17,94,        return iChronology.weeks();,0,0,0,1,2,0,2,0,0,2,27,5,9.72E-05,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,17,90,        return iField.getRangeDurationField();,0,0,0,1,2,0,2,0,0,2,38,5,9.59E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,139,        return iRangeField;,1,0,0,0,0,0,0,0,0,1,19,4,9.59E-05,0
defect4j,time,org/joda/time/field/DecoratedDurationField,17,69,        return iField;,1,0,0,0,0,0,0,0,0,1,14,4,9.55E-05,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,17,56,        return iChronology.years();,0,0,0,1,2,0,2,0,0,2,27,5,9.51E-05,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,17,58,        return iChronology.weekyears();,0,0,0,1,2,0,2,0,0,2,31,5,9.51E-05,0
defect4j,time,org/joda/time/field/BaseDurationField,17,55,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,9.47E-05,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,17,51,        return iChronology.months();,0,0,0,1,2,0,2,0,0,2,28,5,9.34E-05,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,17,309,        return iChronology.years();,0,0,0,1,2,0,2,0,0,2,27,5,9.34E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,63,"    private static final Map<DateTimeZone, ISOChronology> cCache = new HashMap<DateTimeZone, ISOChronology>();",1,0,0,1,2,3,0,6,0,10,106,2,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,66,        INSTANCE_UTC = new ISOChronology(GregorianChronology.getInstanceUTC());,1,0,0,2,4,0,2,1,0,5,71,4,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,67,"        cCache.put(DateTimeZone.UTC, INSTANCE_UTC);",2,0,0,1,2,0,3,0,0,5,43,5,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,173,            fields.yearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,0,0,1,0,4,50,6,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,171,            fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,6,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,175,            fields.weekyearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,0,0,1,0,4,54,6,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,178,            fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,6,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,17,40,    static final DateTimeField INSTANCE = new ISOYearOfEraDateTimeField();,1,0,0,1,2,2,0,2,0,5,70,2,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,17,46,"        super(GregorianChronology.getInstanceUTC().year(), DateTimeFieldType.yearOfEra());",0,0,0,4,8,0,5,0,0,5,82,5,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,17,91,        return getWrappedField().getMaximumValue();,0,0,0,2,4,0,2,0,0,2,43,5,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,65,        cFastCache = new ISOChronology[FAST_CACHE_SIZE];,1,0,1,1,2,0,0,1,0,4,48,4,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,122,"        super(base, null);",1,0,0,1,2,0,0,0,0,2,18,3,8.87E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,17,169,        if (getBase().getZone() == DateTimeZone.UTC) {,2,1,0,3,7,0,2,0,0,5,46,4,8.87E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,122,        return iRangeField;,1,0,0,0,0,0,0,0,0,1,19,4,8.81E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,81,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,8.75E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,146,        return DateTimeZone.UTC;,2,0,0,0,0,0,0,0,0,2,24,5,8.57E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,143,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,8.43E-05,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,141,        return iUnitField;,1,0,0,0,0,0,0,0,0,1,18,4,8.29E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,45,public final class GregorianChronology extends BasicGJChronology {,1,0,0,0,1,2,0,1,0,4,66,1,7.64E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,128,                if (zone == DateTimeZone.UTC) {,3,1,0,1,3,0,0,0,0,4,31,8,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,68,"    private static final Map<DateTimeZone, GregorianChronology[]> cCache = new HashMap<DateTimeZone, GregorianChronology[]>();",1,0,0,3,6,3,0,6,0,10,122,2,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,71,        INSTANCE_UTC = getInstance(DateTimeZone.UTC);,3,0,0,1,2,0,1,0,0,5,45,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,192,            super.assemble(fields);,2,0,0,1,2,0,0,0,0,2,23,7,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,135,                chronos[minDaysInFirstWeek - 1] = chrono;,2,1,1,1,2,0,0,0,0,5,41,8,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,225,        return MAX_YEAR;,1,0,0,0,0,0,0,0,0,1,16,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,229,        return MILLIS_PER_YEAR;,1,0,0,0,0,0,0,0,0,1,23,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,148,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,129,"                    chrono = new GregorianChronology(null, null, minDaysInFirstWeek);",2,0,0,1,2,0,0,1,0,5,65,10,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,127,            if (chrono == null) {,1,1,0,1,3,0,0,0,0,2,21,6,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,122,                chrono = chronos[minDaysInFirstWeek - 1];,2,1,1,1,2,0,0,0,0,5,41,8,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,119,"                cCache.put(zone, chronos);",0,0,0,1,2,0,4,0,0,4,26,9,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,100,"        return getInstance(zone, 4);",0,0,0,1,2,0,2,0,0,2,28,5,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,118,                chronos = new GregorianChronology[7];,1,0,0,1,2,0,0,1,0,3,37,8,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,115,        synchronized (cCache) {,1,0,0,1,3,0,0,0,0,1,23,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,117,            if (chronos == null) {,1,1,0,1,3,0,0,0,0,2,22,6,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,237,        return MILLIS_PER_MONTH;,1,0,0,0,0,0,0,0,0,1,24,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,138,        return chrono;,1,0,0,0,0,0,0,0,0,1,14,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,116,            GregorianChronology[] chronos = cCache.get(zone);,1,0,0,2,4,0,3,1,0,5,49,6,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,111,        if (zone == null) {,1,1,0,1,3,0,0,0,0,2,19,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/GregorianChronology,17,191,        if (getBase() == null) {,0,1,0,2,5,0,1,0,0,3,24,4,7.41E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,107,        if ((base = iBase) != null) {,2,1,0,2,5,0,0,0,0,4,29,4,7.32E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,108,            return base.getZone();,0,0,0,1,2,0,2,0,0,2,22,7,7.32E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,111,"        FieldUtils.verifyValueBounds(this, value, getMinimumValue(), getMaximumValue());",0,0,0,3,6,0,5,0,0,5,80,5,7.26E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,112,        return instant + (value - get(instant)) * iUnitMillis;,3,3,0,2,4,0,2,0,0,8,54,4,7.26E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,62,            MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = minSum;,2,1,1,1,2,0,0,0,0,5,48,6,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,56,        long minSum = 0;,1,0,0,0,0,0,0,0,0,1,16,5,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,66,            maxSum += millis;,2,0,0,0,0,0,0,0,0,3,17,6,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,67,            MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = maxSum;,2,1,1,1,2,0,0,0,0,5,48,6,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,64,            millis = MAX_DAYS_PER_MONTH_ARRAY[i],1,0,1,1,2,0,0,0,0,4,36,6,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,61,            minSum += millis;,2,0,0,0,0,0,0,0,0,3,17,6,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,57,        long maxSum = 0;,1,0,0,0,0,0,0,0,0,1,16,5,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,54,        MAX_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];,1,0,0,1,2,0,0,0,0,2,47,4,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,53,        MIN_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];,1,0,0,1,2,0,0,0,0,2,47,4,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,59,            long millis = MIN_DAYS_PER_MONTH_ARRAY[i],1,0,1,1,2,0,0,0,0,3,41,7,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,58,        for (int i = 0; i < 11; i++) {,3,1,0,1,3,0,0,0,0,5,30,4,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,42,    private static final int[] MIN_DAYS_PER_MONTH_ARRAY = {,1,0,0,1,3,3,0,0,0,4,55,2,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,45,    private static final int[] MAX_DAYS_PER_MONTH_ARRAY = {,1,0,0,1,3,3,0,0,0,4,55,2,7.16E-05,0
defect4j,time,org/joda/time/chrono/BasicGJChronology,17,75,"        super(base, param, minDaysInFirstWeek);",3,0,0,1,2,0,0,0,0,3,39,4,7.16E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,6,131,        return iRange - 1;,1,1,0,0,0,0,0,0,0,2,18,4,6.65E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,321,            fields.copyFieldsFrom(iBase);,0,0,0,1,2,0,3,0,0,3,29,7,6.49E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,372,            flags = ,1,0,0,0,0,0,0,0,0,2,7,6,6.49E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,244,        return iWeekyears;,1,0,0,0,0,0,0,0,0,1,18,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,228,        return iDayOfMonth;,1,0,0,0,0,0,0,0,0,1,19,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,475,                if (isSupported(f = chrono.centuries())) {,1,0,0,3,7,0,3,0,0,5,42,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,256,        return iMonths;,1,0,0,0,0,0,0,0,0,1,15,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,252,        return iWeekyearOfCentury;,1,0,0,0,0,0,0,0,0,1,26,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,473,                    years = f;,2,0,0,0,0,0,0,0,0,3,10,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,472,                if (isSupported(f = chrono.years())) {,1,0,0,3,7,0,3,0,0,5,38,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,470,                    months = f;,2,0,0,0,0,0,0,0,0,3,11,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,558,            return field == null ? false : field.isSupported();,1,1,0,1,2,0,2,0,0,5,51,6,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,495,                    secondOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,494,                if (isSupported(f = chrono.secondOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,497,                if (isSupported(f = chrono.minuteOfHour())) {,1,0,0,3,7,0,3,0,0,5,45,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,524,                if (isSupported(f = chrono.dayOfYear())) {,1,0,0,3,7,0,3,0,0,5,42,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,551,                if (isSupported(f = chrono.era())) {,1,0,0,3,7,0,3,0,0,5,36,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,552,                    era = f;,2,0,0,0,0,0,0,0,0,3,8,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,176,        return iSecondOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,522,                    dayOfMonth = f;,2,0,0,0,0,0,0,0,0,3,15,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,478,                if (isSupported(f = chrono.eras())) {,1,0,0,3,7,0,3,0,0,5,37,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,476,                    centuries = f;,2,0,0,0,0,0,0,0,0,3,14,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,188,        return iMinuteOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,184,        return iMinuteOfHour;,1,0,0,0,0,0,0,0,0,1,21,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,212,        return iClockhourOfHalfday;,1,0,0,0,0,0,0,0,0,1,27,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,216,        return iHalfdayOfDay;,1,0,0,0,0,0,0,0,0,1,21,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,507,                    clockhourOfDay = f;,2,0,0,0,0,0,0,0,0,3,19,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,503,                if (isSupported(f = chrono.hourOfDay())) {,1,0,0,3,7,0,3,0,0,5,42,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,501,                    minuteOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,509,                if (isSupported(f = chrono.hourOfHalfday())) {,1,0,0,3,7,0,3,0,0,5,46,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,485,                if (isSupported(f = chrono.millisOfSecond())) {,1,0,0,3,7,0,3,0,0,5,47,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,504,                    hourOfDay = f;,2,0,0,0,0,0,0,0,0,3,14,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,260,        return iMonthOfYear;,1,0,0,0,0,0,0,0,0,1,20,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,264,        return iYears;,1,0,0,0,0,0,0,0,0,1,14,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,498,                    minuteOfHour = f;,2,0,0,0,0,0,0,0,0,3,17,8,6.27E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,92,        return false;,0,0,0,0,0,0,0,0,0,1,13,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,464,                    weeks = f;,2,0,0,0,0,0,0,0,0,3,10,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,549,                    centuryOfEra = f;,2,0,0,0,0,0,0,0,0,3,17,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,548,                if (isSupported(f = chrono.centuryOfEra())) {,1,0,0,3,7,0,3,0,0,5,45,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,543,                    yearOfEra = f;,2,0,0,0,0,0,0,0,0,3,14,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,542,                if (isSupported(f = chrono.yearOfEra())) {,1,0,0,3,7,0,3,0,0,5,42,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,540,                    year = f;,2,0,0,0,0,0,0,0,0,3,9,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,546,                    yearOfCentury = f;,2,0,0,0,0,0,0,0,0,3,18,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,164,        return iMillisOfDay;,1,0,0,0,0,0,0,0,0,1,20,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,467,                    weekyears = f;,2,0,0,0,0,0,0,0,0,3,14,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,160,        return iMillisOfSecond;,1,0,0,0,0,0,0,0,0,1,23,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,448,                if (isSupported(f = chrono.seconds())) {,1,0,0,3,7,0,3,0,0,5,40,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,445,                if (isSupported(f = chrono.millis())) {,1,0,0,3,7,0,3,0,0,5,39,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,466,                if (isSupported(f = chrono.weekyears())) {,1,0,0,3,7,0,3,0,0,5,42,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,451,                if (isSupported(f = chrono.minutes())) {,1,0,0,3,7,0,3,0,0,5,40,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,545,                if (isSupported(f = chrono.yearOfCentury())) {,1,0,0,3,7,0,3,0,0,5,46,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,180,        return iMinutes;,1,0,0,0,0,0,0,0,0,1,16,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,224,        return iDayOfWeek;,1,0,0,0,0,0,0,0,0,1,18,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,220,        return iDays;,1,0,0,0,0,0,0,0,0,1,13,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,533,                if (isSupported(f = chrono.weekyearOfCentury())) {,1,0,0,3,7,0,3,0,0,5,50,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,530,                if (isSupported(f = chrono.weekyear())) {,1,0,0,3,7,0,3,0,0,5,41,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,531,                    weekyear = f;,2,0,0,0,0,0,0,0,0,3,13,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,536,                if (isSupported(f = chrono.monthOfYear())) {,1,0,0,3,7,0,3,0,0,5,44,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,537,                    monthOfYear = f;,2,0,0,0,0,0,0,0,0,3,16,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,534,                    weekyearOfCentury = f;,2,0,0,0,0,0,0,0,0,3,22,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,506,                if (isSupported(f = chrono.clockhourOfDay())) {,1,0,0,3,7,0,3,0,0,5,47,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,168,        return iSeconds;,1,0,0,0,0,0,0,0,0,1,16,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,156,        return iMillis;,1,0,0,0,0,0,0,0,0,1,15,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,461,                    days = f;,2,0,0,0,0,0,0,0,0,3,9,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,500,                if (isSupported(f = chrono.minuteOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,469,                if (isSupported(f = chrono.months())) {,1,0,0,3,7,0,3,0,0,5,39,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,276,        return iYearOfCentury;,1,0,0,0,0,0,0,0,0,1,22,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,272,        return iYearOfEra;,1,0,0,0,0,0,0,0,0,1,18,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,280,        return iCenturies;,1,0,0,0,0,0,0,0,0,1,18,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,284,        return iCenturyOfEra;,1,0,0,0,0,0,0,0,0,1,21,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,288,        return iEras;,1,0,0,0,0,0,0,0,0,1,13,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,455,                    hours = f;,2,0,0,0,0,0,0,0,0,3,10,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,454,                if (isSupported(f = chrono.hours())) {,1,0,0,3,7,0,3,0,0,5,38,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,457,                if (isSupported(f = chrono.halfdays())) {,1,0,0,3,7,0,3,0,0,5,41,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,452,                    minutes = f;,2,0,0,0,0,0,0,0,0,3,12,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,458,                    halfdays = f;,2,0,0,0,0,0,0,0,0,3,13,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,449,                    seconds = f;,2,0,0,0,0,0,0,0,0,3,12,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,492,                    secondOfMinute = f;,2,0,0,0,0,0,0,0,0,3,19,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,491,                if (isSupported(f = chrono.secondOfMinute())) {,1,0,0,3,7,0,3,0,0,5,47,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,446,                    millis = f;,2,0,0,0,0,0,0,0,0,3,11,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,232,        return iDayOfYear;,1,0,0,0,0,0,0,0,0,1,18,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,240,        return iWeekOfWeekyear;,1,0,0,0,0,0,0,0,0,1,23,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,196,        return iHourOfDay;,1,0,0,0,0,0,0,0,0,1,18,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,248,        return iWeekyear;,1,0,0,0,0,0,0,0,0,1,17,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,486,                    millisOfSecond = f;,2,0,0,0,0,0,0,0,0,3,19,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,528,                    weekOfWeekyear = f;,2,0,0,0,0,0,0,0,0,3,19,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,525,                    dayOfYear = f;,2,0,0,0,0,0,0,0,0,3,14,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,527,                if (isSupported(f = chrono.weekOfWeekyear())) {,1,0,0,3,7,0,3,0,0,5,47,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,521,                if (isSupported(f = chrono.dayOfMonth())) {,1,0,0,3,7,0,3,0,0,5,43,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,488,                if (isSupported(f = chrono.millisOfDay())) {,1,0,0,3,7,0,3,0,0,5,44,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,489,                    millisOfDay = f;,2,0,0,0,0,0,0,0,0,3,16,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,172,        return iSecondOfMinute;,1,0,0,0,0,0,0,0,0,1,23,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,539,                if (isSupported(f = chrono.year())) {,1,0,0,3,7,0,3,0,0,5,37,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,200,        return iClockhourOfDay;,1,0,0,0,0,0,0,0,0,1,23,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,460,                if (isSupported(f = chrono.days())) {,1,0,0,3,7,0,3,0,0,5,37,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,510,                    hourOfHalfday = f;,2,0,0,0,0,0,0,0,0,3,18,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,463,                if (isSupported(f = chrono.weeks())) {,1,0,0,3,7,0,3,0,0,5,38,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,515,                if (isSupported(f = chrono.halfdayOfDay())) {,1,0,0,3,7,0,3,0,0,5,45,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,512,                if (isSupported(f = chrono.clockhourOfHalfday())) {,1,0,0,3,7,0,3,0,0,5,51,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,236,        return iWeeks;,1,0,0,0,0,0,0,0,0,1,14,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,292,        return iEra;,1,0,0,0,0,0,0,0,0,1,12,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,192,        return iHours;,1,0,0,0,0,0,0,0,0,1,14,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,208,        return iHourOfHalfday;,1,0,0,0,0,0,0,0,0,1,22,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,562,            return field == null ? false : field.isSupported();,1,1,0,1,2,0,2,0,0,5,51,6,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,204,        return iHalfdays;,1,0,0,0,0,0,0,0,0,1,17,4,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,516,                    halfdayOfDay = f;,2,0,0,0,0,0,0,0,0,3,17,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,513,                    clockhourOfHalfday = f;,2,0,0,0,0,0,0,0,0,3,23,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,518,                if (isSupported(f = chrono.dayOfWeek())) {,1,0,0,3,7,0,3,0,0,5,42,7,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,519,                    dayOfWeek = f;,2,0,0,0,0,0,0,0,0,3,14,8,6.27E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,268,        return iYear;,1,0,0,0,0,0,0,0,0,1,13,4,6.25E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,53,            field = cCache.get(type);,1,0,0,1,2,0,3,0,0,5,25,6,6.25E-05,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,17,41,"        super(DateTimeFieldType.dayOfMonth(), days);",1,0,0,2,4,0,2,0,0,3,44,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,59,        if (rangeField == null) {,1,1,0,1,3,0,0,0,0,2,25,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,58,        DurationField rangeField = field.getDurationField();,1,0,0,1,2,0,2,1,0,4,52,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,54,        if (divisor < 2) {,1,1,0,1,3,0,0,0,0,2,18,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,58,        if (divisor < 2) {,1,1,0,1,3,0,0,0,0,2,18,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,17,45,"        super(DateTimeFieldType.year(), chronology.getAverageMillisPerYear());",0,0,0,3,6,0,4,0,0,4,70,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,17,46,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,138,        iMinDaysInFirstWeek = minDaysInFirstWeek;,2,0,0,0,0,0,0,0,0,3,41,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,56,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,131,"        super(base, param);",2,0,0,1,2,0,0,0,0,2,19,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,133,        if (minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7) {,2,3,0,1,3,0,0,0,0,5,55,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,46,"        this(field, (field == null ? null : field.getType()), offset, Integer.MIN_VALUE, Integer.MAX_VALUE);",7,1,0,3,6,0,2,0,0,10,100,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,173,        return MILLIS_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,17,97,        return getWrappedField().getMaximumValue();,0,0,0,2,4,0,2,0,0,2,43,5,6.21E-05,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,17,70,        return iField;,1,0,0,0,0,0,0,0,0,1,14,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,295,        fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,294,        fields.years = fields.year.getDurationField();,4,0,0,1,2,0,1,0,0,6,46,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,297,        fields.weekyears = fields.weekyear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,296,        fields.months = fields.monthOfYear.getDurationField();,4,0,0,1,2,0,1,0,0,6,54,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,329,            iMinutes   = (f = fields.minutes)   != null ? f : super.minutes();,6,1,0,2,4,0,0,0,0,9,66,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,328,            iSeconds   = (f = fields.seconds)   != null ? f : super.seconds();,6,1,0,2,4,0,0,0,0,9,66,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,323,        assemble(fields);,0,0,0,1,2,0,2,0,0,2,17,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,327,            iMillis    = (f = fields.millis)    != null ? f : super.millis();,6,1,0,2,4,0,0,0,0,9,65,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,264,        fields.year = new BasicYearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,47,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,268,        DateTimeField field = new OffsetDateTimeField(,1,0,0,0,1,0,0,2,0,3,46,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,318,        return MONTH_OF_YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,158,        return iDivisor - 1;,1,1,0,0,0,0,0,0,0,2,20,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,90,        cMillisOfSecondField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,47,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,93,        cMillisOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,96,        cSecondOfMinuteField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,47,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,70,        iDivisor = divisor;,2,0,0,0,0,0,0,0,0,3,19,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,99,        cSecondOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,75,        if (offset == 0) {,1,1,0,1,3,0,0,0,0,2,18,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,76,        cMillisField = MillisDurationField.INSTANCE;,3,0,0,0,0,0,0,0,0,4,44,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicYearDateTimeField,17,119,        return iChronology.getMaxYear();,0,0,0,1,2,0,2,0,0,2,32,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,77,        cSecondsField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,40,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicDayOfMonthDateTimeField,17,42,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,183,        return iMax;,1,0,0,0,0,0,0,0,0,1,12,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,73,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,241,        fields.millis = cMillisField;,3,0,0,0,0,0,0,0,0,4,29,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,246,        fields.days = cDaysField;,3,0,0,0,0,0,0,0,0,4,25,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,245,        fields.halfdays = cHalfdaysField;,3,0,0,0,0,0,0,0,0,4,33,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,52,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,352,            iClockhourOfHalfday = (f = fields.clockhourOfHalfday) != null ? f : super.clockhourOfHalfday();,6,1,0,2,4,0,0,0,0,9,95,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,353,            iHalfdayOfDay       = (f = fields.halfdayOfDay)       != null ? f : super.halfdayOfDay();,6,1,0,2,4,0,0,0,0,9,89,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,350,            iClockhourOfDay     = (f = fields.clockhourOfDay)     != null ? f : super.clockhourOfDay();,6,1,0,2,4,0,0,0,0,9,91,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,351,            iHourOfHalfday      = (f = fields.hourOfHalfday)      != null ? f : super.hourOfHalfday();,6,1,0,2,4,0,0,0,0,9,90,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,356,            iDayOfYear          = (f = fields.dayOfYear)          != null ? f : super.dayOfYear();,6,1,0,2,4,0,0,0,0,9,86,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,357,            iWeekOfWeekyear     = (f = fields.weekOfWeekyear)     != null ? f : super.weekOfWeekyear();,6,1,0,2,4,0,0,0,0,9,91,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,354,            iDayOfWeek          = (f = fields.dayOfWeek)          != null ? f : super.dayOfWeek();,6,1,0,2,4,0,0,0,0,9,86,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,355,            iDayOfMonth         = (f = fields.dayOfMonth)         != null ? f : super.dayOfMonth();,6,1,0,2,4,0,0,0,0,9,87,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,358,            iWeekyear           = (f = fields.weekyear)           != null ? f : super.weekyear();,6,1,0,2,4,0,0,0,0,9,85,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,359,            iWeekyearOfCentury  = (f = fields.weekyearOfCentury)  != null ? f : super.weekyearOfCentury();,6,1,0,2,4,0,0,0,0,9,94,5,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,452,            return iUnitType;,1,0,0,0,0,0,0,0,0,1,17,5,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,457,            return iRangeType;,1,0,0,0,0,0,0,0,0,1,18,5,6.21E-05,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,17,58,        if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,4,6.21E-05,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,17,86,        return iField.getDurationField();,0,0,0,1,2,0,2,0,0,2,33,5,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,236,        return HOUR_OF_HALFDAY_TYPE;,1,0,0,0,0,0,0,0,0,1,28,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,436,        Fields() {,1,0,0,1,3,0,0,0,0,1,10,3,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,282,        return DAY_OF_YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,79,        cMinutesField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,40,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,17,45,"        super(DateTimeFieldType.dayOfWeek(), days);",1,0,0,2,4,0,2,0,0,3,43,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/GJDayOfWeekDateTimeField,17,46,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,17,46,        super(DateTimeFieldType.era());,0,0,0,2,4,0,2,0,0,2,31,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/GJEraDateTimeField,17,47,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,126,    private transient final YearInfo[] iYearInfoCache = new YearInfo[CACHE_SIZE];,1,0,1,2,4,3,0,2,0,7,77,2,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,120,        cHalfdayOfDayField = new HalfdayField();,1,0,0,1,2,0,0,1,0,3,40,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,79,        iOffset = offset;,2,0,0,0,0,0,0,0,0,3,17,4,6.21E-05,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,17,152,            super(type);,1,0,0,1,2,0,0,0,0,1,12,5,6.21E-05,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,17,151,        LinkedDurationField(DurationFieldType type) {,2,0,0,1,3,0,0,1,0,3,45,3,6.21E-05,0
defect4j,time,org/joda/time/chrono/BaseChronology,17,660,        return UnsupportedDurationField.getInstance(DurationFieldType.eras());,0,0,0,2,4,0,4,0,0,4,70,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,750,"            super(DateTimeFieldType.halfdayOfDay(), cHalfdaysField, cDaysField);",2,0,0,2,4,0,2,0,0,4,68,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,319,        Fields fields = new Fields();,1,0,0,1,2,0,0,2,0,3,29,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,275,        fields.yearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,273,        field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,270,        fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,385,        iBaseFlags = flags;,2,0,0,0,0,0,0,0,0,3,19,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,279,"        fields.dayOfWeek = new GJDayOfWeekDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,67,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,278,        fields.era = new GJEraDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,42,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,300,        return WEEKYEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,21,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,309,        return WEEKYEAR_OF_CENTURY_TYPE;,1,0,0,0,0,0,0,0,0,1,32,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,17,44,"        super(DateTimeFieldType.weekyear(), chronology.getAverageMillisPerYear());",0,0,0,3,6,0,4,0,0,4,74,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicWeekyearDateTimeField,17,45,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,182,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,245,        return CLOCKHOUR_OF_HALFDAY_TYPE;,1,0,0,0,0,0,0,0,0,1,33,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,17,53,        iMax = iChronology.getMaxMonth();,1,0,0,1,2,0,2,0,0,4,33,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,17,52,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,164,        return MILLIS_OF_SECOND_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,88,        iDivisor = dividedField.iDivisor;,3,0,0,0,0,0,0,0,0,4,33,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,89,        iRangeField = dividedField.iDurationField;,3,0,0,0,0,0,0,0,0,4,42,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,87,"        super(dividedField.getWrappedField(), type);",1,0,0,2,4,0,2,0,0,3,44,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,87,            iMax = field.getMaximumValue() + offset;,2,1,0,1,2,0,2,0,0,6,40,6,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,86,        if (maxValue > (field.getMaximumValue() + offset)) {,2,2,0,3,7,0,2,0,0,6,52,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,82,            iMin = field.getMinimumValue() + offset;,2,1,0,1,2,0,2,0,0,6,40,6,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,79,        iMax = max;,2,0,0,0,0,0,0,0,0,3,11,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,78,        iMin = min;,2,0,0,0,0,0,0,0,0,3,11,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,73,        int min = (i >= 0) ? i / divisor : ((i + 1) / divisor - 1);,6,5,0,3,6,0,0,0,0,11,59,5,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,76,        int max = (j >= 0) ? j / divisor : ((j + 1) / divisor - 1);,6,5,0,3,6,0,0,0,0,11,59,5,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,75,        int j = field.getMaximumValue();,1,0,0,1,2,0,2,0,0,3,32,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,108,        cHourOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,42,4,6.21E-05,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,17,45,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,345,        return YEAR_OF_CENTURY_TYPE;,1,0,0,0,0,0,0,0,0,1,28,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,349,            iHourOfDay          = (f = fields.hourOfDay)          != null ? f : super.hourOfDay();,6,1,0,2,4,0,0,0,0,9,86,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,348,            iMinuteOfDay        = (f = fields.minuteOfDay)        != null ? f : super.minuteOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,345,            iSecondOfMinute     = (f = fields.secondOfMinute)     != null ? f : super.secondOfMinute();,6,1,0,2,4,0,0,0,0,9,91,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,344,            iMillisOfDay        = (f = fields.millisOfDay)        != null ? f : super.millisOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,347,            iMinuteOfHour       = (f = fields.minuteOfHour)       != null ? f : super.minuteOfHour();,6,1,0,2,4,0,0,0,0,9,89,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,346,            iSecondOfDay        = (f = fields.secondOfDay)        != null ? f : super.secondOfDay();,6,1,0,2,4,0,0,0,0,9,88,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,343,            iMillisOfSecond     = (f = fields.millisOfSecond)     != null ? f : super.millisOfSecond();,6,1,0,2,4,0,0,0,0,9,91,5,6.21E-05,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,17,137,        return iDurationField;,1,0,0,0,0,0,0,0,0,1,22,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,281,"        fields.dayOfYear = new BasicDayOfYearDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,70,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,209,        return MINUTE_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,291,        return WEEK_OF_WEEKYEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,252,        fields.secondOfDay = cSecondOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,111,        cHourOfHalfdayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,46,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,117,        cClockhourOfHalfdayField = new ZeroIsMaxDateTimeField,1,0,0,0,0,0,0,1,0,3,53,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,114,        cClockhourOfDayField = new ZeroIsMaxDateTimeField,1,0,0,0,0,0,0,1,0,3,49,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,338,            iEras      = (f = fields.eras)      != null ? f : super.eras();,6,1,0,2,4,0,0,0,0,9,63,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,320,        if (iBase != null) {,1,1,0,1,3,0,0,0,0,2,20,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,17,51,"        super(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());",0,0,0,3,6,0,4,0,0,4,78,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,265,"        fields.yearOfEra = new GJYearOfEraDateTimeField(fields.year, this);",4,0,0,1,2,0,0,1,0,6,67,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicMonthOfYearDateTimeField,17,54,        iLeapMonth = leapMonth;,2,0,0,0,0,0,0,0,0,3,23,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,308,        return iBase;,1,0,0,0,0,0,0,0,0,1,13,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,370,            flags = 0;,1,0,0,0,0,0,0,0,0,2,10,6,6.21E-05,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,17,40,"        super(yearField, DateTimeFieldType.yearOfEra());",1,0,0,2,4,0,2,0,0,3,48,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/GJYearOfEraDateTimeField,17,41,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,288,        fields.weekyearOfCentury = new OffsetDateTimeField(,2,0,0,0,1,0,0,1,0,4,51,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,174,        return iMin;,1,0,0,0,0,0,0,0,0,1,12,4,6.21E-05,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,17,57,        iDurationField = new LinkedDurationField(type.getDurationType());,1,0,0,2,4,0,2,1,0,5,65,4,6.21E-05,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,17,56,        iUnitMillis = unitMillis;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/field/ImpreciseDateTimeField,17,55,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,336,        return YEAR_OF_ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,249,        fields.millisOfSecond = cMillisOfSecondField;,3,0,0,0,0,0,0,0,0,4,45,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,242,        fields.seconds = cSecondsField;,3,0,0,0,0,0,0,0,0,4,31,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,243,        fields.minutes = cMinutesField;,3,0,0,0,0,0,0,0,0,4,31,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,247,        fields.weeks = cWeeksField;,3,0,0,0,0,0,0,0,0,4,27,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,244,        fields.hours = cHoursField;,3,0,0,0,0,0,0,0,0,4,27,4,6.21E-05,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,17,61,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/GJMonthOfYearDateTimeField,17,37,"        super(chronology, 2);",1,0,0,1,2,0,0,0,0,1,21,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,363,        return ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,16,4,6.21E-05,0
defect4j,time,org/joda/time/field/ZeroIsMaxDateTimeField,17,46,        if (field.getMinimumValue() != 0) {,0,1,0,2,5,0,2,0,0,3,35,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,72,        int i = field.getMinimumValue();,1,0,0,1,2,0,2,0,0,3,32,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,360,            iMonthOfYear        = (f = fields.monthOfYear)        != null ? f : super.monthOfYear();,6,1,0,2,4,0,0,0,0,9,88,5,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,254,        return HALFDAY_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,50,abstract class BasicChronology extends AssembledChronology {,1,0,0,0,1,1,0,1,0,3,60,1,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,62,            iRangeField = new ScaledDurationField(,1,0,0,0,1,0,0,1,0,3,38,6,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,66,        iDivisor = divisor;,2,0,0,0,0,0,0,0,0,3,19,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,63,        if (unitField == null) {,1,1,0,1,3,0,0,0,0,2,24,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,17,43,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,17,42,"        super(DateTimeFieldType.weekOfWeekyear(), weeks);",1,0,0,2,4,0,2,0,0,3,49,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,62,        DurationField unitField = field.getDurationField();,1,0,0,1,2,0,2,1,0,4,51,4,6.21E-05,0
defect4j,time,org/joda/time/field/DividedDateTimeField,17,66,            iDurationField = new ScaledDurationField(,1,0,0,0,1,0,0,1,0,3,41,6,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,354,        return CENTURY_OF_ERA_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,58,"        this(field, type, offset, Integer.MIN_VALUE, Integer.MAX_VALUE);",7,0,0,1,2,0,0,0,0,7,64,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,286,        field = new RemainderDateTimeField(,1,0,0,0,1,0,0,1,0,3,35,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,284,"        fields.weekOfWeekyear = new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);",4,0,0,1,2,0,0,1,0,6,81,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,282,        fields.monthOfYear = new GJMonthOfYearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,58,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,283,        fields.weekyear = new BasicWeekyearDateTimeField(this);,2,0,0,1,2,0,0,1,0,4,55,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,280,"        fields.dayOfMonth = new BasicDayOfMonthDateTimeField(this, fields.days);",4,0,0,1,2,0,0,1,0,6,72,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,330,            iHours     = (f = fields.hours)     != null ? f : super.hours();,6,1,0,2,4,0,0,0,0,9,64,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,332,            iDays      = (f = fields.days)      != null ? f : super.days();,6,1,0,2,4,0,0,0,0,9,63,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,333,            iWeeks     = (f = fields.weeks)     != null ? f : super.weeks();,6,1,0,2,4,0,0,0,0,9,64,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,334,            iWeekyears = (f = fields.weekyears) != null ? f : super.weekyears();,6,1,0,2,4,0,0,0,0,9,68,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,335,            iMonths    = (f = fields.months)    != null ? f : super.months();,6,1,0,2,4,0,0,0,0,9,65,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,337,            iCenturies = (f = fields.centuries) != null ? f : super.centuries();,6,1,0,2,4,0,0,0,0,9,68,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,336,            iYears     = (f = fields.years)     != null ? f : super.years();,6,1,0,2,4,0,0,0,0,9,64,5,6.21E-05,0
defect4j,time,org/joda/time/field/OffsetDateTimeField,17,81,        if (minValue < (field.getMinimumValue() + offset)) {,2,2,0,3,7,0,2,0,0,6,52,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,83,        cHalfdaysField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,41,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,81,        cHoursField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,38,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,87,        cWeeksField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,38,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,85,        cDaysField = new PreciseDurationField,1,0,0,0,0,0,0,1,0,3,37,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,218,        return HOUR_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,6.21E-05,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,17,55,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,6.21E-05,0
defect4j,time,org/joda/time/field/DecoratedDateTimeField,17,54,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,6.21E-05,0
defect4j,time,org/joda/time/field/RemainderDateTimeField,17,76,"        this(dividedField, dividedField.getType());",1,0,0,2,4,0,2,0,0,3,43,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,264,        return DAY_OF_WEEK_TYPE;,1,0,0,0,0,0,0,0,0,1,24,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,251,        fields.secondOfMinute = cSecondOfMinuteField;,3,0,0,0,0,0,0,0,0,4,45,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,253,        fields.minuteOfHour = cMinuteOfHourField;,3,0,0,0,0,0,0,0,0,4,41,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,101,        iParam = param;,2,0,0,0,0,0,0,0,0,3,15,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,105,        cMinuteOfDayField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,44,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,102,        cMinuteOfHourField = new PreciseDateTimeField,1,0,0,0,0,0,0,1,0,3,45,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,331,            iHalfdays  = (f = fields.halfdays)  != null ? f : super.halfdays();,6,1,0,2,4,0,0,0,0,9,67,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,365,            iEra                = (f = fields.era)                != null ? f : super.era();,6,1,0,2,4,0,0,0,0,9,80,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,364,            iCenturyOfEra       = (f = fields.centuryOfEra)       != null ? f : super.centuryOfEra();,6,1,0,2,4,0,0,0,0,9,89,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,363,            iYearOfCentury      = (f = fields.yearOfCentury)      != null ? f : super.yearOfCentury();,6,1,0,2,4,0,0,0,0,9,90,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,362,            iYearOfEra          = (f = fields.yearOfEra)          != null ? f : super.yearOfEra();,6,1,0,2,4,0,0,0,0,9,86,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,361,            iYear               = (f = fields.year)               != null ? f : super.year();,6,1,0,2,4,0,0,0,0,9,81,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,369,        if (iBase == null) {,1,1,0,1,3,0,0,0,0,2,20,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,99,"    protected AssembledChronology(Chronology base, Object param) {",3,0,0,1,3,1,0,2,0,6,62,2,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,259,        fields.halfdayOfDay = cHalfdayOfDayField;,3,0,0,0,0,0,0,0,0,4,41,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,258,        fields.clockhourOfHalfday = cClockhourOfHalfdayField;,3,0,0,0,0,0,0,0,0,4,53,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,255,        fields.hourOfDay = cHourOfDayField;,3,0,0,0,0,0,0,0,0,4,35,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,254,        fields.minuteOfDay = cMinuteOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,257,        fields.clockhourOfDay = cClockhourOfDayField;,3,0,0,0,0,0,0,0,0,4,45,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,256,        fields.hourOfHalfday = cHourOfHalfdayField;,3,0,0,0,0,0,0,0,0,4,43,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicChronology,17,250,        fields.millisOfDay = cMillisOfDayField;,3,0,0,0,0,0,0,0,0,4,39,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,102,        setFields();,0,0,0,1,2,0,1,0,0,1,12,5,6.21E-05,0
defect4j,time,org/joda/time/chrono/AssembledChronology,17,100,        iBase = base;,2,0,0,0,0,0,0,0,0,3,13,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,17,41,"        super(DateTimeFieldType.dayOfYear(), days);",1,0,0,2,4,0,2,0,0,3,43,4,6.21E-05,0
defect4j,time,org/joda/time/chrono/BasicDayOfYearDateTimeField,17,42,        iChronology = chronology;,2,0,0,0,0,0,0,0,0,3,25,4,6.21E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,227,        return CLOCKHOUR_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,6.20E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,327,        return YEAR_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,71,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,6.20E-05,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,54,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,59,        return field;,1,0,0,0,0,0,0,0,0,1,13,4,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,56,            field = new UnsupportedDurationField(type);,2,0,0,1,2,0,0,1,0,4,43,6,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,57,"            cCache.put(type, field);",0,0,0,1,2,0,4,0,0,4,24,7,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,55,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,50,"            cCache = new HashMap<DurationFieldType, UnsupportedDurationField>(7);",1,0,0,1,2,0,0,3,0,5,69,6,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,51,            field = null;,1,0,0,0,0,0,0,0,0,2,13,6,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,49,        if (cCache == null) {,1,1,0,1,3,0,0,0,0,2,21,4,6.20E-05,0
defect4j,time,org/joda/time/field/UnsupportedDurationField,17,70,    private UnsupportedDurationField(DurationFieldType type) {,2,0,0,1,3,1,0,1,0,4,58,2,6.20E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,273,        return DAY_OF_MONTH_TYPE;,1,0,0,0,0,0,0,0,0,1,25,4,6.20E-05,0
defect4j,time,org/joda/time/field/MillisDurationField,17,71,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,6.18E-05,0
defect4j,time,org/joda/time/field/BaseDurationField,17,66,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,6.18E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,200,        return MINUTE_OF_HOUR_TYPE;,1,0,0,0,0,0,0,0,0,1,27,4,6.18E-05,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,17,102,        return getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset;,2,4,0,2,4,0,2,0,0,8,68,4,6.18E-05,0
defect4j,time,org/joda/time/field/BaseDateTimeField,17,69,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,6.16E-05,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,63,        return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,4,6.12E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,191,        return SECOND_OF_DAY_TYPE;,1,0,0,0,0,0,0,0,0,1,26,4,6.10E-05,0
defect4j,time,org/joda/time/field/BaseDateTimeField,17,58,        return iType;,1,0,0,0,0,0,0,0,0,1,13,4,6.08E-05,0
defect4j,time,org/joda/time/Chronology,17,63,public abstract class Chronology {,1,0,0,0,1,2,0,0,0,3,34,1,5.97E-05,0
defect4j,time,org/joda/time/field/MillisDurationField,17,62,        return true;,0,0,0,0,0,0,0,0,0,1,12,4,5.86E-05,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,44,        iUnitMillis = unitMillis;,2,0,0,0,0,0,0,0,0,3,25,4,5.84E-05,0
defect4j,time,org/joda/time/field/PreciseDurationField,17,43,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,5.84E-05,0
defect4j,time,org/joda/time/field/DecoratedDurationField,17,59,        iField = field;,2,0,0,0,0,0,0,0,0,3,15,4,5.83E-05,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,51,        iScalar = scalar;,2,0,0,0,0,0,0,0,0,3,17,4,5.83E-05,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,48,        if (scalar == 0 || scalar == 1) {,2,3,0,1,3,0,0,0,0,5,33,4,5.83E-05,0
defect4j,time,org/joda/time/field/DecoratedDurationField,17,52,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,5.83E-05,0
defect4j,time,org/joda/time/field/DecoratedDurationField,17,53,        if (field == null) {,1,1,0,1,3,0,0,0,0,2,20,4,5.83E-05,0
defect4j,time,org/joda/time/field/DecoratedDurationField,17,56,        if (!field.isSupported()) {,0,0,0,2,5,0,2,0,0,3,27,4,5.83E-05,0
defect4j,time,org/joda/time/field/ScaledDurationField,17,47,"        super(field, type);",2,0,0,1,2,0,0,0,0,2,19,4,5.83E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,59,        if (!range.isPrecise()) {,0,0,0,2,5,0,2,0,0,3,25,4,5.61E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,63,        long rangeMillis = range.getUnitMillis();,1,0,0,1,2,0,2,0,0,3,41,5,5.61E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,64,        iRange = (int)(rangeMillis / getUnitMillis());,2,1,0,3,6,0,1,0,0,5,46,4,5.61E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,65,        if (iRange < 2) {,1,1,0,1,3,0,0,0,0,2,17,4,5.61E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,69,        iRangeField = range;,2,0,0,0,0,0,0,0,0,3,20,4,5.61E-05,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,154,        return iUnitMillis;,1,0,0,0,0,0,0,0,0,1,19,4,5.61E-05,0
defect4j,time,org/joda/time/field/PreciseDateTimeField,17,57,"        super(type, unit);",2,0,0,1,2,0,0,0,0,2,18,4,5.61E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,278,            return (1 << iOrdinal);,1,1,0,1,2,0,0,0,0,2,23,6,5.59E-05,0
defect4j,time,org/joda/time/field/MillisDurationField,17,38,    public static final DurationField INSTANCE = new MillisDurationField();,1,0,0,1,2,3,0,2,0,6,71,2,5.48E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,77,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,5.29E-05,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,55,        if (iUnitMillis < 1) {,1,1,0,1,3,0,0,0,0,2,22,4,4.94E-05,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,54,        iUnitMillis = unit.getUnitMillis();,1,0,0,1,2,0,2,0,0,4,35,4,4.94E-05,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,50,        if (!unit.isPrecise()) {,0,0,0,2,5,0,2,0,0,3,24,4,4.94E-05,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,59,        iUnitField = unit;,2,0,0,0,0,0,0,0,0,3,18,4,4.94E-05,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,17,48,        super(type);,1,0,0,1,2,0,0,0,0,1,12,4,4.94E-05,0
defect4j,time,org/joda/time/DateTimeUtils,17,393,    static class SystemMillisProvider implements MillisProvider {,1,0,0,0,1,1,0,1,0,3,61,2,4.78E-05,0
defect4j,time,org/joda/time/DateTimeUtils,17,37,    private static volatile MillisProvider cMillisProvider = SYSTEM_MILLIS_PROVIDER;,2,0,0,0,0,3,0,1,0,6,80,2,4.78E-05,0
defect4j,time,org/joda/time/DateTimeUtils,17,35,    private static final SystemMillisProvider SYSTEM_MILLIS_PROVIDER = new SystemMillisProvider();,1,0,0,1,2,3,0,2,0,6,94,2,4.78E-05,0
defect4j,time,org/joda/time/base/BaseDateTime,6,284,        return instant;,1,0,0,0,0,0,0,0,0,1,15,4,4.47E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,182,        return SECOND_OF_MINUTE_TYPE;,1,0,0,0,0,0,0,0,0,1,29,4,4.41E-05,0
defect4j,time,org/joda/time/field/BaseDateTimeField,17,51,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,4.30E-05,0
defect4j,time,org/joda/time/field/BaseDateTimeField,17,54,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,4.30E-05,0
defect4j,time,org/joda/time/DateTimeField,17,33,public abstract class DateTimeField {,1,0,0,0,1,2,0,0,0,3,37,1,4.29E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,131,    private static final DateTimeFieldType SECOND_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,137,    private static final DateTimeFieldType MILLIS_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,134,    private static final DateTimeFieldType SECOND_OF_MINUTE_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,82,    private static final DateTimeFieldType YEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,92,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,85,    private static final DateTimeFieldType YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,81,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,88,    private static final DateTimeFieldType DAY_OF_YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,140,    private static final DateTimeFieldType MILLIS_OF_SECOND_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,100,    private static final DateTimeFieldType WEEKYEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,85,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,122,    private static final DateTimeFieldType HOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,128,    private static final DateTimeFieldType MINUTE_OF_HOUR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,125,    private static final DateTimeFieldType MINUTE_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,79,    private static final DateTimeFieldType CENTURY_OF_ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,76,    private static final DateTimeFieldType YEAR_OF_ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,73,    private static final DateTimeFieldType ERA_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,80,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,91,    private static final DateTimeFieldType MONTH_OF_YEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,90,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,94,    private static final DateTimeFieldType DAY_OF_MONTH_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,89,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,97,    private static final DateTimeFieldType WEEKYEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,96,2,4.25E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,169,        return WEEKYEARS_TYPE;,1,0,0,0,0,0,0,0,0,1,22,4,4.25E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,205,        return ERAS_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,119,    private static final DateTimeFieldType CLOCKHOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,116,    private static final DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,97,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,110,    private static final DateTimeFieldType HALFDAY_OF_DAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,91,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,113,    private static final DateTimeFieldType HOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,92,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,154,        iName = name;,2,0,0,0,0,0,0,0,0,3,13,4,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,445,            iOrdinal = ordinal;,2,0,0,0,0,0,0,0,0,3,19,5,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,103,    private static final DateTimeFieldType WEEK_OF_WEEKYEAR_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,93,2,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,106,    private static final DateTimeFieldType DAY_OF_WEEK_TYPE = new StandardDateTimeFieldType(,1,0,0,0,1,3,0,2,0,6,88,2,4.25E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,141,        return HALFDAYS_TYPE;,1,0,0,0,0,0,0,0,0,1,21,4,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,447,            iRangeType = rangeType;,2,0,0,0,0,0,0,0,0,3,23,5,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,446,            iUnitType = unitType;,2,0,0,0,0,0,0,0,0,3,21,5,4.25E-05,0
defect4j,time,org/joda/time/DateTimeFieldType,17,444,            super(name);,1,0,0,1,2,0,0,0,0,1,12,5,4.25E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,196,        return CENTURIES_TYPE;,1,0,0,0,0,0,0,0,0,1,22,4,4.23E-05,0
defect4j,time,org/joda/time/field/BaseDurationField,17,51,        iType = type;,2,0,0,0,0,0,0,0,0,3,13,4,4.08E-05,0
defect4j,time,org/joda/time/field/BaseDurationField,17,48,        if (type == null) {,1,1,0,1,3,0,0,0,0,2,19,4,4.08E-05,0
defect4j,time,org/joda/time/base/BaseDateTime,6,270,        return DateTimeUtils.getChronology(chronology);,0,0,0,1,2,0,3,0,0,3,47,5,4.03E-05,0
defect4j,time,org/joda/time/DurationField,17,30,public abstract class DurationField implements Comparable<DurationField> {,1,0,0,0,1,2,0,2,0,5,74,1,3.73E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,105,        return MILLIS_TYPE;,1,0,0,0,0,0,0,0,0,1,19,4,2.92E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,178,        return MONTHS_TYPE;,1,0,0,0,0,0,0,0,0,1,19,4,2.82E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,187,        return YEARS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,2.77E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,160,        return WEEKS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,2.71E-05,0
defect4j,chart,org/jfree/data/general/AbstractDataset,18,185,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,5,2,0,1,3,0,0,0,0,8,52,4,2.61E-05,0
defect4j,chart,org/jfree/data/general/AbstractDataset,18,184,        Object[] listeners = this.listenerList.getListenerList();,2,0,0,2,4,0,1,1,0,4,57,4,2.61E-05,0
defect4j,chart,org/jfree/data/general/AbstractDataset,18,170,"        notifyListeners(new DatasetChangeEvent(this, this));",0,0,0,2,4,0,1,1,0,2,52,5,2.61E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,132,        return HOURS_TYPE;,1,0,0,0,0,0,0,0,0,1,18,4,2.56E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,151,        return DAYS_TYPE;,1,0,0,0,0,0,0,0,0,1,17,4,2.49E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,114,        return SECONDS_TYPE;,1,0,0,0,0,0,0,0,0,1,20,4,2.23E-05,0
defect4j,time,org/joda/time/DurationFieldType,17,123,        return MINUTES_TYPE;,1,0,0,0,0,0,0,0,0,1,20,4,2.22E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,203,            w |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,0,5,34,5,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,87,        super(zone.getID());,0,0,0,2,4,0,2,0,0,2,20,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,98,"            return readFrom((DataInput)new DataInputStream(in), id);",1,0,0,3,6,0,2,2,0,5,56,7,1.13E-05,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,147,            return loadZoneData(id);,0,0,0,1,2,0,2,0,0,2,24,7,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,202,            w |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,0,5,35,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,514,            iMillisOfDay = millisOfDay;,2,0,0,0,0,0,0,0,0,3,27,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,95,        if (in instanceof DataInput) {,1,0,0,1,3,0,0,1,0,2,30,5,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,61,        cInfoCacheMask = cacheSize - 1;,2,1,0,0,0,0,0,0,0,4,31,4,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,68,        if (zone instanceof CachedDateTimeZone) {,1,0,0,1,3,0,0,1,0,2,41,5,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,45,        if (i == null) {,1,1,0,1,3,0,0,0,0,2,16,4,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1360,                        index = in.readUnsignedByte();,1,0,0,1,2,0,2,0,0,4,30,11,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1364,                    nameKeys[i] = pool[index];,0,0,1,2,4,0,0,0,0,5,26,9,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,196,            return v * 60000L;,1,1,0,0,0,0,0,0,0,2,18,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,195,            v |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,0,4,29,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,194,            v |= (in.readUnsignedByte()) << 8;,1,1,0,2,4,0,2,0,0,5,34,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,193,            v |= (in.readUnsignedByte()) << 16;,1,1,0,2,4,0,2,0,0,5,35,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,192,            v = (v << (32 - 6)) >> (32 - 30);,2,4,0,3,6,0,0,0,0,7,33,5,1.13E-05,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,229,            return tz;,1,0,0,0,0,0,0,0,0,1,10,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,205,            return w * 1000L;,1,1,0,0,0,0,0,0,0,2,17,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,204,            w |= (in.readUnsignedByte());,1,0,0,2,4,0,2,0,0,4,29,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,200,            long w = (((long)v) << (64 - 6)) >> (64 - 38);,2,4,0,5,10,0,0,0,0,6,46,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,209,            return in.readLong();,0,0,0,1,2,0,2,0,0,2,21,6,1.13E-05,0
defect4j,time,org/joda/time/DateTimeZone,17,212,            return zone;,1,0,0,0,0,0,0,0,0,1,12,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,511,            iDayOfMonth = dayOfMonth;,2,0,0,0,0,0,0,0,0,3,25,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1351,            String[] nameKeys = new String[size];,1,0,1,2,4,0,0,2,0,4,37,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1350,            int[] standardOffsets = new int[size];,1,0,1,2,4,0,0,0,0,2,38,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1353,            for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1355,                wallOffsets[i] = (int)readMillis(in);,0,0,1,3,6,0,2,0,0,5,37,7,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1354,                transitions[i] = readMillis(in);,0,0,1,2,4,0,2,0,0,5,32,7,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1356,                standardOffsets[i] = (int)readMillis(in);,0,0,1,3,6,0,2,0,0,5,41,7,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1359,                    if (poolSize < 256) {,1,1,0,1,3,0,0,0,0,2,21,9,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,39,"            i = Integer.getInteger(""org.joda.time.tz.CachedDateTimeZone.size"");",1,0,0,1,2,0,2,0,0,5,67,6,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,84,    private final Info[] iInfoCache = new Info[cInfoCacheMask + 1];,2,1,0,2,4,2,0,2,0,7,63,2,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,88,        iZone = zone;,2,0,0,0,0,0,0,0,0,3,13,4,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,188,            return v * (30 * 60000L);,1,2,0,1,2,0,0,0,0,3,25,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,482,"            return new OfYear((char)in.readUnsignedByte(),",0,0,0,2,5,0,2,1,0,3,46,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1179,            iEndRecurrence = endRecurrence;,2,0,0,0,0,0,0,0,0,3,31,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1177,            iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,0,3,33,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1176,            super(id);,1,0,0,1,2,0,0,0,0,1,10,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,509,            iMode = mode;,2,0,0,0,0,0,0,0,0,3,13,5,1.13E-05,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,227,"            DateTimeZone tz = DateTimeZoneBuilder.readFrom(in, id);",1,0,0,1,2,0,4,1,0,6,55,6,1.13E-05,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,226,            in = openResource(id);,1,0,0,1,2,0,2,0,0,4,22,6,1.13E-05,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,228,"            iZoneInfoMap.put(id, new SoftReference<DateTimeZone>(tz));",1,0,0,2,4,0,3,2,0,6,58,7,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1370,            DSTZone tailZone = null;,1,0,0,0,0,0,0,1,0,2,24,5,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,71,        return new CachedDateTimeZone(zone);,1,0,0,1,2,0,0,1,0,2,36,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,201,            w |= (in.readUnsignedByte()) << 24;,1,1,0,2,4,0,2,0,0,5,35,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,119,"            return CachedDateTimeZone.forZone(PrecalculatedZone.readFrom(in, id));",0,0,0,2,4,0,6,0,0,6,70,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1178,            iStartRecurrence = startRecurrence;,2,0,0,0,0,0,0,0,0,3,35,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,110,        switch (in.readUnsignedByte()) {,0,0,0,2,5,0,2,0,0,2,32,5,1.13E-05,0
defect4j,time,org/joda/time/tz/CachedDateTimeZone,17,48,            cacheSize = 512; // (1 << 9),1,0,0,1,2,0,0,0,0,2,28,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1342,            String[] pool = new String[poolSize];,1,0,1,2,4,0,0,2,0,4,37,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1341,            int poolSize = in.readUnsignedShort();,1,0,0,1,2,0,2,0,0,3,38,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1344,                pool[i] = in.readUTF();,0,0,1,2,4,0,2,0,0,5,23,7,1.13E-05,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,224,        InputStream in = null;,1,0,0,0,0,0,0,1,0,2,22,4,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1348,            long[] transitions = new long[size];,1,0,1,2,4,0,0,0,0,2,36,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1349,            int[] wallOffsets = new int[size];,1,0,1,2,4,0,0,0,0,2,34,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1500,            super(id);,1,0,0,1,2,0,0,0,0,1,10,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1501,            iTransitions = transitions;,2,0,0,0,0,0,0,0,0,3,27,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1502,            iWallOffsets = wallOffsets;,2,0,0,0,0,0,0,0,0,3,27,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1503,            iStandardOffsets = standardOffsets;,2,0,0,0,0,0,0,0,0,3,35,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1504,            iNameKeys = nameKeys;,2,0,0,0,0,0,0,0,0,3,21,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1505,            iTailZone = tailZone;,2,0,0,0,0,0,0,0,0,3,21,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,748,            iOfYear = ofYear;,2,0,0,0,0,0,0,0,0,3,17,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,749,            iNameKey = nameKey;,2,0,0,0,0,0,0,0,0,3,19,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,747,"        Recurrence(OfYear ofYear, String nameKey, int saveMillis) {",4,0,0,1,3,0,0,2,0,6,59,3,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,740,"            return new Recurrence(OfYear.readFrom(in), in.readUTF(), (int)readMillis(in));",0,0,0,5,10,0,7,1,0,8,78,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1166,"            return new DSTZone(id, (int)readMillis(in), ",1,0,0,2,5,0,2,1,0,4,43,6,1.13E-05,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,236,                if (in != null) {,1,1,0,1,3,0,0,0,0,2,17,8,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,513,            iAdvance = advanceDayOfWeek;,2,0,0,0,0,0,0,0,0,3,28,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,512,            iDayOfWeek = dayOfWeek;,2,0,0,0,0,0,0,0,0,3,23,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,510,            iMonthOfYear = monthOfYear;,2,0,0,0,0,0,0,0,0,3,27,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1343,            for (int i=0; i<poolSize; i++) {,4,1,0,1,3,0,0,0,0,6,32,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1347,            int size = in.readInt();,1,0,0,1,2,0,2,0,0,3,24,6,1.13E-05,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,237,                    in.close();,0,0,0,1,2,0,2,0,0,2,11,11,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1375,            return new PrecalculatedZone,0,0,0,0,0,0,0,1,0,1,28,7,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1372,"                tailZone = DSTZone.readFrom(in, id);",1,0,0,1,2,0,4,0,0,6,36,7,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,1371,            if (in.readBoolean()) {,0,0,0,2,5,0,2,0,0,2,23,6,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,184,        switch (v >> 6) {,1,1,0,1,3,0,0,0,0,2,17,4,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,187,            v = (v << (32 - 6)) >> (32 - 6);,2,4,0,3,6,0,0,0,0,7,32,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,183,        int v = in.readUnsignedByte();,1,0,0,1,2,0,2,0,0,3,30,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,505,            if (mode != 'u' && mode != 'w' && mode != 's') {,3,5,0,1,3,0,0,0,0,11,48,5,1.13E-05,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,17,750,            iSaveMillis = saveMillis;,2,0,0,0,0,0,0,0,0,3,25,5,1.13E-05,0
defect4j,time,org/joda/time/DateTimeZone,17,210,        DateTimeZone zone = cProvider.getZone(id);,1,0,0,1,2,0,3,1,0,5,42,4,1.12E-05,0
defect4j,time,org/joda/time/DateTimeZone,17,211,        if (zone != null) {,1,1,0,1,3,0,0,0,0,2,19,4,1.12E-05,0
defect4j,time,org/joda/time/DateTimeZone,17,207,"        if (id.equals(""UTC"")) {",0,0,0,2,5,0,2,0,0,3,23,5,1.12E-05,0
defect4j,time,org/joda/time/DateTimeZone,17,204,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,1.12E-05,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,133,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,1.10E-05,0
defect4j,chart,org/jfree/data/general/DatasetChangeEvent,18,71,        super(source);,1,0,0,1,2,0,0,0,0,1,14,4,7.70E-06,0
defect4j,chart,org/jfree/data/general/DatasetChangeEvent,18,72,        this.dataset = dataset;,2,0,0,0,0,0,0,0,0,3,23,4,7.70E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,706,        return iID;,1,0,0,0,0,0,0,0,0,1,11,4,3.32E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,201,                in = iLoader.getResourceAsStream(path);,1,0,0,1,2,0,3,0,0,5,39,8,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,200,            if (iLoader != null) {,1,1,0,1,3,0,0,0,0,2,22,6,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,205,            if (in == null) {,1,1,0,1,3,0,0,0,0,2,17,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,517,        cNameProvider = nameProvider;,2,0,0,0,0,0,0,0,0,3,29,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,514,        if (nameProvider == null) {,1,1,0,1,3,0,0,0,0,2,27,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,515,            nameProvider = getDefaultNameProvider();,1,0,0,1,2,0,1,0,0,3,40,6,3.02E-06,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,17,38,        super(id);,1,0,0,1,2,0,0,0,0,1,10,4,3.02E-06,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,17,39,        iNameKey = nameKey;,2,0,0,0,0,0,0,0,0,3,19,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,423,"        if (!ids.contains(""UTC"")) {",0,0,0,2,5,0,2,0,0,4,27,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,426,"        if (!UTC.equals(provider.getZone(""UTC""))) {",0,0,0,3,7,0,4,0,0,6,43,4,3.02E-06,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,17,41,        iStandardOffset = standardOffset;,2,0,0,0,0,0,0,0,0,3,33,4,3.02E-06,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,17,40,        iWallOffset = wallOffset;,2,0,0,0,0,0,0,0,0,3,25,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,145,        if (id.equals(obj)) {,0,0,0,2,5,0,3,0,0,3,21,5,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,140,        Object obj = iZoneInfoMap.get(id);,1,0,0,1,2,0,3,1,0,5,34,4,3.02E-06,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,17,99,        return new HashMap(7);,0,0,0,1,2,0,0,1,0,1,22,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,416,            provider = getDefaultProvider();,1,0,0,1,2,0,1,0,0,3,32,6,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,107,        if (resourcePath == null) {,1,1,0,1,3,0,0,0,0,2,27,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,174,        return new TreeSet<String>(iZoneInfoMap.keySet());,0,0,0,2,4,0,2,2,0,4,50,5,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,473,        return provider;,1,0,0,0,0,0,0,0,0,1,16,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,282,        for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,281,        size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,0,4,31,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,284,"                zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);",0,0,1,5,10,0,6,0,0,8,72,9,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,214,        return in;,1,0,0,0,0,0,0,0,0,1,10,4,3.02E-06,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,17,39,    public DefaultNameProvider() {,1,0,0,1,3,1,0,0,0,2,30,2,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,82,"        this(resourcePath, null, false);",1,0,0,1,2,0,0,0,0,2,32,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,430,        cAvailableIDs = ids;,2,0,0,0,0,0,0,0,0,3,20,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,136,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,141,        if (obj == null) {,1,1,0,1,3,0,0,0,0,2,18,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,419,        if (ids == null || ids.size() == 0) {,1,3,0,2,5,0,2,0,0,6,37,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,418,        Set<String> ids = provider.getAvailableIDs();,1,0,0,1,2,0,2,2,0,5,45,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,548,        return nameProvider;,1,0,0,0,0,0,0,0,0,1,20,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,545,            nameProvider = new DefaultNameProvider();,1,0,0,1,2,0,0,1,0,3,41,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,544,        if (nameProvider == null) {,1,1,0,1,3,0,0,0,0,2,27,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,252,"        Map<String, Object> map = new ConcurrentHashMap<String, Object>();",1,0,0,1,2,0,0,6,0,7,66,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,253,        DataInputStream din = new DataInputStream(in);,2,0,0,1,2,0,0,2,0,4,46,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,415,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,258,                din.close();,0,0,0,1,2,0,2,0,0,2,12,9,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,110,"        if (!resourcePath.endsWith(""/"")) {",0,0,0,2,5,0,2,0,0,4,34,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,116,        setNameProvider0(null);,0,0,0,1,2,0,1,0,0,2,23,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,443,        Provider provider = null;,1,0,0,0,0,0,0,1,0,2,25,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,446,            String providerClass =,1,0,0,0,0,0,0,1,0,2,22,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,532,            if (providerClass != null) {,1,1,0,1,3,0,0,0,0,2,28,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,469,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,263,        return map;,1,0,0,0,0,0,0,0,0,1,11,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,262,"        map.put(""UTC"", new SoftReference<DateTimeZone>(DateTimeZone.UTC));",2,0,0,2,4,0,2,2,0,7,66,5,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,531,"            String providerClass = System.getProperty(""org.joda.time.DateTimeZone.NameProvider"");",1,0,0,1,2,0,2,1,0,5,85,6,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,123,"        iZoneInfoMap = loadZoneInfoMap(openResource(""ZoneInfoMap""));",1,0,0,2,4,0,2,0,0,5,60,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,121,        iLoader = loader;,2,0,0,0,0,0,0,0,0,3,17,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,196,        if (iFileDir != null) {,1,1,0,1,3,0,0,0,0,2,23,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,199,            String path = iResourcePath.concat(name);,1,0,0,1,2,0,3,1,0,5,41,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,95,"    public static final DateTimeZone UTC = new FixedDateTimeZone(""UTC"", ""UTC"", 0, 0);",1,0,0,1,2,3,0,2,0,8,81,2,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,255,"            readZoneInfoMap(din, map);",0,0,0,1,2,0,3,0,0,3,26,7,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,153,            DateTimeZone tz = ref.get();,1,0,0,1,2,0,2,1,0,4,28,6,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,152,            SoftReference<DateTimeZone> ref = (SoftReference<DateTimeZone>) obj;,2,0,0,1,2,0,0,4,0,6,68,6,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,150,        if (obj instanceof SoftReference<?>) {,1,0,0,1,3,0,0,1,0,2,38,5,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,155,                return tz;,1,0,0,0,0,0,0,0,0,1,10,8,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,154,            if (tz != null) {,1,1,0,1,3,0,0,0,0,2,17,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,690,        if (id == null) {,1,1,0,1,3,0,0,0,0,2,17,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,693,        iID = id;,2,0,0,0,0,0,0,0,0,3,9,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,117,        if (loader == null && !favorSystemLoader) {,2,2,0,1,3,0,0,0,0,5,43,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,429,        cProvider = provider;,2,0,0,0,0,0,0,0,0,3,21,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,529,        NameProvider nameProvider = null;,1,0,0,0,0,0,0,1,0,2,33,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,276,        for (int i=0; i<size; i++) {,4,1,0,1,3,0,0,0,0,6,28,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,277,            pool[i] = din.readUTF().intern();,0,0,1,3,6,0,3,0,0,6,33,6,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,274,        int size = din.readUnsignedShort();,1,0,0,1,2,0,2,0,0,3,35,5,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,275,        String[] pool = new String[size];,1,0,1,2,4,0,0,2,0,4,33,4,3.02E-06,0
defect4j,time,org/joda/time/tz/DefaultNameProvider,17,37,"    private HashMap<Locale, Map<String, Map<String, Object>>> iByLocaleCache = createCache();",1,0,0,1,2,1,1,7,0,10,89,2,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,118,            loader = getClass().getClassLoader();,1,0,0,2,4,0,2,0,0,4,37,6,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,115,        iResourcePath = resourcePath;,2,0,0,0,0,0,0,0,0,3,29,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,114,        iFileDir = null;,1,0,0,0,0,0,0,0,0,2,16,4,3.02E-06,0
defect4j,time,org/joda/time/tz/ZoneInfoProvider,17,111,            resourcePath += '/';,1,0,0,0,0,0,0,0,0,3,20,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,448,            if (providerClass != null) {,1,1,0,1,3,0,0,0,0,2,28,6,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,462,"                provider = new ZoneInfoProvider(""org/joda/time/tz/data"");",1,0,0,1,2,0,0,1,0,4,57,8,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,460,        if (provider == null) {,1,1,0,1,3,0,0,0,0,2,23,4,3.02E-06,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,17,89,            return true;,0,0,0,0,0,0,0,0,0,1,12,6,3.02E-06,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,17,88,        if (this == obj) {,1,1,0,1,3,0,0,0,0,2,18,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,115,        setProvider0(null);,0,0,0,1,2,0,1,0,0,2,19,4,3.02E-06,0
defect4j,time,org/joda/time/DateTimeZone,17,689,    protected DateTimeZone(String id) {,2,0,0,1,3,1,0,1,0,4,35,2,3.02E-06,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,6,91,        return getWrappedField().getMaximumValue();,0,0,0,2,4,0,2,0,0,2,43,5,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,63,"    private static final Map<DateTimeZone, ISOChronology> cCache = new HashMap<DateTimeZone, ISOChronology>();",1,0,0,1,2,3,0,6,0,10,106,2,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,66,        INSTANCE_UTC = new ISOChronology(GregorianChronology.getInstanceUTC());,1,0,0,2,4,0,2,1,0,5,71,4,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,67,"        cCache.put(DateTimeZone.UTC, INSTANCE_UTC);",2,0,0,1,2,0,3,0,0,5,43,5,2.48E-06,0
defect4j,time,org/joda/time/chrono/GregorianChronology,6,81,        return INSTANCE_UTC;,1,0,0,0,0,0,0,0,0,1,20,4,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,173,            fields.yearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,0,0,1,0,4,50,6,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,171,            fields.centuryOfEra = new DividedDateTimeField(,2,0,0,0,1,0,0,1,0,4,47,6,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,175,            fields.weekyearOfCentury = new RemainderDateTimeField(,2,0,0,0,1,0,0,1,0,4,54,6,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,178,            fields.centuries = fields.centuryOfEra.getDurationField();,4,0,0,1,2,0,1,0,0,6,58,6,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,6,40,    static final DateTimeField INSTANCE = new ISOYearOfEraDateTimeField();,1,0,0,1,2,2,0,2,0,5,70,2,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOYearOfEraDateTimeField,6,46,"        super(GregorianChronology.getInstanceUTC().year(), DateTimeFieldType.yearOfEra());",0,0,0,4,8,0,5,0,0,5,82,5,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,65,        cFastCache = new ISOChronology[FAST_CACHE_SIZE];,1,0,1,1,2,0,0,1,0,4,48,4,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,122,"        super(base, null);",1,0,0,1,2,0,0,0,0,2,18,3,2.48E-06,0
defect4j,time,org/joda/time/chrono/ISOChronology,6,169,        if (getBase().getZone() == DateTimeZone.UTC) {,2,1,0,3,7,0,2,0,0,5,46,4,2.48E-06,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,146,        return DateTimeZone.UTC;,2,0,0,0,0,0,0,0,0,2,24,5,2.43E-06,0
defect4j,time,org/joda/time/chrono/BasicChronology,6,143,        if ((base = getBase()) != null) {,1,1,0,3,7,0,1,0,0,5,33,4,2.38E-06,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1538,                if (searchChars[j] == ch) {,1,1,1,2,5,0,0,0,0,4,27,9,0,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1539,                        continue outer;,1,0,0,0,0,0,0,0,0,1,15,11,0,1
defect4j,chart,org/jfree/data/general/Series,3,121,        this.notify = true;,1,0,0,0,0,0,0,0,0,3,19,4,0,0
defect4j,chart,org/jfree/data/general/Series,3,120,        this.propertyChangeSupport = new PropertyChangeSupport(this);,1,0,0,1,2,0,0,1,0,3,61,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,189,        this.timePeriodClass = null;,1,0,0,0,0,0,0,0,0,2,28,4,0,0
defect4j,chart,org/jfree/data/general/Series,3,104,"        this(key, null);",1,0,0,1,2,0,0,0,0,1,16,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,169,"        this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);",3,0,0,1,2,0,0,0,0,3,66,4,0,0
defect4j,chart,org/jfree/data/general/Series,3,118,        this.description = description;,2,0,0,0,0,0,0,0,0,3,31,4,0,0
defect4j,chart,org/jfree/data/general/Series,3,119,        this.listeners = new EventListenerList();,1,0,0,1,2,0,0,1,0,3,41,4,0,0
defect4j,chart,org/jfree/data/general/Series,3,114,        if (key == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0,0
defect4j,chart,org/jfree/data/general/Series,3,117,        this.key = key;,2,0,0,0,0,0,0,0,0,3,15,4,0,0
defect4j,chart,org/jfree/data/general/Series,3,113,"    protected Series(Comparable key, String description) {",3,0,0,1,3,1,0,2,0,6,54,2,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,190,        this.data = new java.util.ArrayList();,4,0,0,1,2,0,0,0,0,5,38,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,186,        super(name);,1,0,0,1,2,0,0,0,0,1,12,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,188,        this.range = range;,2,0,0,0,0,0,0,0,0,3,19,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,191,        this.maximumItemCount = Integer.MAX_VALUE;,3,0,0,0,0,0,0,0,0,4,42,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,193,        this.minY = Double.NaN;,3,0,0,0,0,0,0,0,0,4,23,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,192,        this.maximumItemAge = Long.MAX_VALUE;,3,0,0,0,0,0,0,0,0,4,37,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,194,        this.maxY = Double.NaN;,3,0,0,0,0,0,0,0,0,4,23,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,3,187,        this.domain = domain;,2,0,0,0,0,0,0,0,0,3,21,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,406,        c.clear();,0,0,0,1,2,0,2,0,0,2,10,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,412,"        c.set(Calendar.SECOND, 0);",2,0,0,1,2,0,2,0,0,4,26,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,413,"        c.set(Calendar.MILLISECOND, 0);",2,0,0,1,2,0,2,0,0,4,31,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,388,"        c.set(Calendar.MILLISECOND, 0);",2,0,0,1,2,0,2,0,0,4,31,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,411,"        c.set(Calendar.MINUTE, 0);",2,0,0,1,2,0,2,0,0,4,26,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,415,        return c.getTime().getTime() - 1;,0,1,0,2,4,0,3,0,0,4,33,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,382,"        c.set(Calendar.YEAR, this.year);",3,0,0,1,2,0,2,0,0,5,32,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,383,"        c.set(Calendar.WEEK_OF_YEAR, this.week);",3,0,0,1,2,0,2,0,0,5,40,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,380,        Calendar c = (Calendar) calendar.clone();,1,0,0,2,4,0,2,2,0,5,41,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,381,        c.clear();,0,0,0,1,2,0,2,0,0,2,10,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,386,"        c.set(Calendar.MINUTE, 0);",2,0,0,1,2,0,2,0,0,4,26,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,289,        this.lastMillisecond = getLastMillisecond(calendar);,1,0,0,1,2,0,2,0,0,4,52,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,384,"        c.set(Calendar.DAY_OF_WEEK, c.getFirstDayOfWeek());",2,0,0,2,4,0,4,0,0,6,51,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,385,"        c.set(Calendar.HOUR, 0);",2,0,0,1,2,0,2,0,0,4,24,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,288,        this.firstMillisecond = getFirstMillisecond(calendar);,1,0,0,1,2,0,2,0,0,4,54,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,409,"        c.set(Calendar.DAY_OF_WEEK, c.getFirstDayOfWeek());",2,0,0,2,4,0,4,0,0,6,51,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,408,"        c.set(Calendar.WEEK_OF_YEAR, this.week + 1);",3,1,0,1,2,0,2,0,0,6,44,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,405,        Calendar c = (Calendar) calendar.clone();,1,0,0,2,4,0,2,2,0,5,41,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,133,        this.year = (short) year;,2,0,0,1,2,0,0,0,0,3,25,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,132,        this.week = (byte) week;,2,0,0,1,2,0,0,0,0,3,24,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,134,        peg(Calendar.getInstance());,0,0,0,2,4,0,3,0,0,3,28,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,387,"        c.set(Calendar.SECOND, 0);",2,0,0,1,2,0,2,0,0,4,26,5,0,0
defect4j,chart,org/jfree/data/time/RegularTimePeriod,8,70,"public abstract class RegularTimePeriod implements TimePeriod, Comparable,",1,0,0,0,0,2,0,2,0,5,74,1,0,0
defect4j,chart,org/jfree/data/time/Week,8,390,        return c.getTime().getTime();,0,0,0,2,4,0,3,0,0,3,29,5,0,0
defect4j,chart,org/jfree/data/time/RegularTimePeriod,8,161,    public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getDefault();,1,0,0,1,2,3,2,1,0,7,71,2,0,0
defect4j,chart,org/jfree/data/time/Week,8,128,        if ((week < FIRST_WEEK_IN_YEAR) && (week > LAST_WEEK_IN_YEAR)) {,4,3,0,3,7,0,0,0,0,7,64,4,0,0
defect4j,chart,org/jfree/data/time/Week,8,127,"    public Week(int week, int year) {",3,0,0,1,3,1,0,0,0,4,33,2,0,0
defect4j,chart,org/jfree/data/time/Week,8,410,"        c.set(Calendar.HOUR, 0);",2,0,0,1,2,0,2,0,0,4,24,5,0,0
defect4j,chart,org/jfree/data/time/Week,8,407,"        c.set(Calendar.YEAR, this.year);",3,0,0,1,2,0,2,0,0,5,32,5,0,0
defect4j,chart,org/jfree/data/general/Series,9,102,"        this(key, null);",1,0,0,1,2,0,0,0,0,1,16,4,0,0
defect4j,chart,org/jfree/data/general/Series,9,118,        this.propertyChangeSupport = new PropertyChangeSupport(this);,1,0,0,1,2,0,0,1,0,3,61,4,0,0
defect4j,chart,org/jfree/data/general/Series,9,119,        this.notify = true;   ,1,0,0,0,0,0,0,0,0,3,19,4,0,0
defect4j,chart,org/jfree/data/general/Series,9,115,        this.key = key;,2,0,0,0,0,0,0,0,0,3,15,4,0,0
defect4j,chart,org/jfree/data/general/Series,9,116,        this.description = description;,2,0,0,0,0,0,0,0,0,3,31,4,0,0
defect4j,chart,org/jfree/data/general/Series,9,117,        this.listeners = new EventListenerList();,1,0,0,1,2,0,0,1,0,3,41,4,0,0
defect4j,chart,org/jfree/data/general/Series,9,111,"    protected Series(Comparable key, String description) {",3,0,0,1,3,1,0,2,0,6,54,2,0,0
defect4j,chart,org/jfree/data/general/Series,9,112,        if (key == null) {,1,1,0,1,3,0,0,0,0,2,18,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,179,        this.maximumItemCount = Integer.MAX_VALUE;,3,0,0,0,0,0,0,0,0,4,42,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,178,        this.data = new java.util.ArrayList();,4,0,0,1,2,0,0,0,0,5,38,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,177,        this.timePeriodClass = timePeriodClass;,2,0,0,0,0,0,0,0,0,3,39,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,176,        this.range = range;,2,0,0,0,0,0,0,0,0,3,19,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,175,        this.domain = domain;,2,0,0,0,0,0,0,0,0,3,21,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,174,        super(name);,1,0,0,1,2,0,0,0,0,1,12,4,0,0
defect4j,chart,org/jfree/data/time/TimeSeries,9,180,        this.maximumItemAge = Long.MAX_VALUE;,3,0,0,0,0,0,0,0,0,4,37,4,0,0
defect4j,chart,org/jfree/data/time/RegularTimePeriod,9,161,    public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getDefault();,1,0,0,1,2,3,2,1,0,7,71,2,0,0
defect4j,chart,org/jfree/chart/util/ShapeUtilities,11,389,"    private static final float SQRT2 = (float) Math.pow(2.0, 0.5);",1,0,0,2,4,3,2,0,0,6,62,2,0,0
defect4j,chart,org/jfree/chart/util/UnitType,13,69,    private UnitType(String name) {,2,0,0,1,3,1,0,1,0,4,31,2,0,0
defect4j,chart,org/jfree/chart/util/UnitType,13,70,        this.name = name;,2,0,0,0,0,0,0,0,0,3,17,4,0,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,117,        if (unitType == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,124,        this.right = right;,2,0,0,0,0,0,0,0,0,3,19,4,0,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,122,        this.bottom = bottom;,2,0,0,0,0,0,0,0,0,3,21,4,0,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,120,        this.unitType = unitType;,2,0,0,0,0,0,0,0,0,3,25,4,0,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,123,        this.left = left;,2,0,0,0,0,0,0,0,0,3,17,4,0,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,121,        this.top = top;,2,0,0,0,0,0,0,0,0,3,15,4,0,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,116,"                           double bottom, double right) {",2,0,0,0,2,0,0,0,0,2,30,3,0,0
defect4j,chart,org/jfree/chart/util/UnitType,13,56,"    public static final UnitType ABSOLUTE = new UnitType(""UnitType.ABSOLUTE"");",1,0,0,1,2,3,0,2,0,7,74,2,0,0
defect4j,chart,org/jfree/chart/util/RectangleInsets,13,65,    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(,1,0,0,0,1,3,0,2,0,6,70,2,0,0
defect4j,chart,org/jfree/chart/util/UnitType,13,59,"    public static final UnitType RELATIVE = new UnitType(""UnitType.RELATIVE"");",1,0,0,1,2,3,0,2,0,7,74,2,0,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,625,        if (columnKey == null) {,1,1,0,1,3,0,0,0,0,2,24,4,0,0
defect4j,chart,org/jfree/data/category/DefaultIntervalCategoryDataset,16,628,        return getCategoryIndex(columnKey);,0,0,0,1,2,0,2,0,0,2,35,5,0,0
defect4j,chart,org/jfree/data/general/DatasetGroup,18,64,"        this.id = ""NOID"";",1,0,0,0,0,0,0,0,0,3,17,4,0,0
defect4j,chart,org/jfree/data/general/AbstractDataset,18,94,    protected AbstractDataset() {,1,0,0,1,3,1,0,0,0,2,29,2,0,0
defect4j,chart,org/jfree/data/general/AbstractDataset,18,95,        this.group = new DatasetGroup();,1,0,0,1,2,0,0,1,0,3,32,4,0,0
defect4j,chart,org/jfree/data/general/AbstractDataset,18,96,        this.listenerList = new EventListenerList();,1,0,0,1,2,0,0,1,0,3,44,4,0,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,66,    private int size = 0;,1,0,0,0,0,1,0,0,0,2,21,2,0,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,69,    private int increment = DEFAULT_INITIAL_CAPACITY;,2,0,0,0,0,1,0,0,0,3,49,2,0,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,94,        this.objects = new Object[initialCapacity];,1,0,1,1,2,0,0,1,0,4,43,4,0,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,95,        this.increment = increment;,2,0,0,0,0,0,0,0,0,3,27,4,0,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,93,"    protected AbstractObjectList(int initialCapacity, int increment) {",3,0,0,1,3,1,0,0,0,4,66,2,0,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,84,"        this (initialCapacity, initialCapacity);",2,0,0,1,2,0,0,0,0,2,40,4,0,0
defect4j,chart,org/jfree/chart/util/AbstractObjectList,19,75,        this(DEFAULT_INITIAL_CAPACITY);,1,0,0,1,2,0,0,0,0,1,31,4,0,0
defect4j,chart,org/jfree/chart/util/ObjectList,19,58,    public ObjectList() {,1,0,0,1,3,1,0,0,0,2,21,2,0,0
defect4j,chart,org/jfree/chart/renderer/GrayPaintScale,24,89,        this.lowerBound = lowerBound;,2,0,0,0,0,0,0,0,0,3,29,4,0,0
defect4j,chart,org/jfree/chart/renderer/GrayPaintScale,24,90,        this.upperBound = upperBound;,2,0,0,0,0,0,0,0,0,3,29,4,0,0
defect4j,chart,org/jfree/chart/renderer/GrayPaintScale,24,84,"    public GrayPaintScale(double lowerBound, double upperBound) {",3,0,0,1,3,1,0,0,0,4,61,2,0,0
defect4j,chart,org/jfree/chart/renderer/GrayPaintScale,24,85,        if (lowerBound >= upperBound) {,2,1,0,1,3,0,0,0,0,3,31,4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1529,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,5,0,0,6,53,4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1533,        int searchLen = searchChars.length;,3,0,0,0,0,0,0,0,0,3,35,5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1532,        int csLen = cs.length();,1,0,0,1,2,0,2,0,0,3,24,5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1535,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,0,0,0,0,6,33,5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1537,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,0,0,0,0,6,37,7,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1536,            char ch = cs.charAt(i);,1,0,0,1,2,0,3,0,0,4,23,8,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,3,0,6,0,10,101,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",1,0,0,1,2,3,0,6,0,10,89,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",2,0,0,1,2,0,2,1,0,5,47,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",2,0,0,1,2,0,2,1,0,5,51,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",2,0,0,1,2,0,2,1,0,5,49,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",1,0,0,1,2,3,0,6,0,10,96,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",2,0,0,1,2,0,2,1,0,5,53,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",2,0,0,1,2,0,2,1,0,5,57,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",2,0,0,1,2,0,2,1,0,5,47,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",1,0,0,1,2,3,0,6,0,10,101,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,0,8,86,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",4,0,0,1,2,0,2,0,0,6,46,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",2,0,0,1,2,0,2,1,0,5,53,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",2,0,0,1,2,0,2,1,0,5,49,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,1,0,0,3,28,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,1,0,0,3,32,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,1,0,0,3,30,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,1,0,0,3,29,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,1,0,0,3,29,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,3,0,0,4,43,6,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,1,0,0,1,2,0,3,1,0,5,64,6,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,1,0,0,2,5,0,2,1,0,4,62,4,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,4,0,0,4,52,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,4,0,0,4,45,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,4,0,0,4,54,9,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,1,0,0,3,30,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,1,0,0,1,2,3,3,1,0,8,94,2,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,1,0,0,3,29,5,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,1,0,0,3,31,5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,1,0,0,2,4,3,0,0,0,4,58,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,1,0,0,2,4,3,0,2,0,6,80,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,1,0,0,2,4,3,0,0,0,4,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,1,0,0,2,4,3,0,2,0,6,71,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,1,0,0,2,4,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,1,0,0,2,4,3,0,0,0,4,55,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,2,4,3,0,2,0,6,64,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,1,0,0,2,4,3,0,2,0,6,74,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,1,0,0,2,4,3,0,2,0,6,68,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,1,0,0,2,4,3,0,0,0,4,61,2,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,1,0,0,2,4,3,0,0,0,4,67,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,586,        String[] AmPmStrings = symbols.getAmPmStrings();,1,0,0,2,4,0,2,1,0,4,48,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,584,        String[] weekdays = symbols.getWeekdays();,1,0,0,2,4,0,2,1,0,4,42,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,585,        String[] shortWeekdays = symbols.getShortWeekdays();,1,0,0,2,4,0,2,1,0,4,52,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,582,        String[] months = symbols.getMonths();,1,0,0,2,4,0,2,1,0,4,38,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,583,        String[] shortMonths = symbols.getShortMonths();,1,0,0,2,4,0,2,1,0,4,48,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,747,                    i--;,1,0,0,0,0,0,0,0,0,2,4,11,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,589,        int[] indexRef = new int[1];,1,0,0,2,4,0,0,0,0,1,28,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,579,        List<Rule> rules = new ArrayList<Rule>();,1,0,0,1,2,0,0,4,0,5,41,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,750,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,12,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,756,        return buf.toString();,0,0,0,1,2,0,2,0,0,2,22,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,755,        indexRef[0] = i;,1,0,1,1,2,0,0,0,0,3,16,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,591,        for (int i = 0; i < length; i++) {,4,1,0,1,3,0,0,0,0,6,34,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,111,"    private static final Map<FastDateFormat, FastDateFormat> cInstanceCache = new HashMap<FastDateFormat, FastDateFormat>(7);",1,0,0,1,2,3,0,6,0,10,121,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,593,"            String token = parseToken(mPattern, indexRef);",1,0,0,1,2,0,3,1,0,5,46,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,592,            indexRef[0] = i;,1,0,1,1,2,0,0,0,0,3,16,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,594,            i = indexRef[0];,1,0,1,1,2,0,0,0,0,3,16,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,597,            if (tokenLen == 0) {,1,1,0,1,3,0,0,0,0,2,20,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,596,            int tokenLen = token.length();,1,0,0,1,2,0,2,0,0,3,30,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,616,                if (tokenLen >= 4) {,1,1,0,1,3,0,0,0,0,2,20,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,697,        return rules;,1,0,0,0,0,0,0,0,0,1,13,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,694,            rules.add(rule);,0,0,0,1,2,0,3,0,0,3,16,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,542,        if (timeZone == null) {,1,1,0,1,3,0,0,0,0,2,23,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,714,        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {,4,7,0,1,3,0,0,0,0,15,51,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,767,        switch (padding) {,1,0,0,1,3,0,0,0,0,1,18,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,218,"            cInstanceCache.put(format, format);  // this is OK!",0,0,0,1,2,0,4,0,0,4,51,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,216,            format = emptyFormat;,2,0,0,0,0,0,0,0,0,3,21,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,217,            format.init();  // convert shell format into usable one,0,0,0,1,2,0,2,0,0,2,55,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,214,        FastDateFormat format = cInstanceCache.get(emptyFormat);,1,0,0,1,2,0,3,1,0,5,56,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,215,        if (format == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,213,"        FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",4,0,0,1,2,0,0,2,0,6,75,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,604,            switch (c) {,1,0,0,1,3,0,0,0,0,1,12,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,602,            char c = token.charAt(0);,1,0,0,1,2,0,2,0,0,3,25,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,115,"    private static final Map<Object, String> cTimeZoneDisplayCache = new HashMap<Object, String>(7);",1,0,0,1,2,3,0,6,0,10,96,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,114,"    private static final Map<Object, FastDateFormat> cDateTimeInstanceCache = new HashMap<Object, FastDateFormat>(7);",1,0,0,1,2,3,0,6,0,10,113,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,609,                if (tokenLen >= 4) {,1,1,0,1,3,0,0,0,0,2,20,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,113,"    private static final Map<Object, FastDateFormat> cTimeInstanceCache = new HashMap<Object, FastDateFormat>(7);",1,0,0,1,2,3,0,6,0,10,109,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,112,"    private static final Map<Object, FastDateFormat> cDateInstanceCache = new HashMap<Object, FastDateFormat>(7);",1,0,0,1,2,3,0,6,0,10,109,2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,566,        mMaxLengthEstimate = len;,2,0,0,0,0,0,0,0,0,3,25,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,561,        int len = 0;,1,0,0,0,0,0,0,0,0,1,12,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,562,        for (int i=mRules.length; --i >= 0; ) {,4,1,0,1,3,0,0,0,0,6,39,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,563,            len += mRules[i].estimateLength();,1,0,1,2,4,0,1,0,0,5,34,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,685,                    rule = new CharacterLiteral(sub.charAt(0));,1,0,0,2,4,0,2,1,0,5,43,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,684,                if (sub.length() == 1) {,0,1,0,2,5,0,2,0,0,3,24,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,683,                String sub = token.substring(1);,1,0,0,1,2,0,2,1,0,4,32,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,745,                } else if (!inLiteral &&,1,1,0,0,2,0,0,0,0,3,24,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,578,        DateFormatSymbols symbols = new DateFormatSymbols(mLocale);,2,0,0,1,2,0,0,2,0,4,59,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,588,        int length = mPattern.length();,1,0,0,1,2,0,2,0,0,3,31,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,708,        StringBuilder buf = new StringBuilder();,1,0,0,1,2,0,0,2,0,3,40,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,548,        if (locale == null) {,1,1,0,1,3,0,0,0,0,2,21,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1084,            mValue = value;,2,0,0,0,0,0,0,0,0,3,15,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1083,        CharacterLiteral(char value) {,2,0,0,1,3,0,0,0,0,2,30,3,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,541,        mTimeZoneForced = (timeZone != null);,2,1,0,1,2,0,0,0,0,4,37,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,545,        mTimeZone = timeZone;,2,0,0,0,0,0,0,0,0,3,21,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1008,        return total;,1,0,0,0,0,0,0,0,0,1,13,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1007,        total += (mLocaleForced ? 1 : 0);,2,0,0,1,2,0,0,0,0,3,33,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1006,        total += mLocale.hashCode();,1,0,0,1,2,0,2,0,0,4,28,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1005,        total += (mTimeZoneForced ? 1 : 0);,2,0,0,1,2,0,0,0,0,3,35,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1004,        total += mTimeZone.hashCode();,1,0,0,1,2,0,2,0,0,4,30,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1003,        total += mPattern.hashCode();,1,0,0,1,2,0,2,0,0,4,29,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1002,        int total = 0;,1,0,0,0,0,0,0,0,0,1,14,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,719,            while (i + 1 < length) {,2,2,0,1,3,0,0,0,0,4,24,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,717,            buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,536,        if (pattern == null) {,1,1,0,1,3,0,0,0,0,2,22,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,713,        char c = pattern.charAt(i);,1,0,0,1,2,0,3,0,0,4,27,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,711,        int length = pattern.length();,1,0,0,1,2,0,2,0,0,3,30,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,710,        int i = indexRef[0];,1,0,1,1,2,0,0,0,0,2,20,5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,559,        mRules = rulesList.toArray(new Rule[rulesList.size()]);,1,0,0,3,6,0,4,1,0,7,55,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,558,        List<Rule> rulesList = parsePattern();,1,0,0,1,2,0,1,2,0,4,38,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,551,        mLocale = locale;,2,0,0,0,0,0,0,0,0,3,17,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,737,                if (c == '\'') {,1,1,0,1,3,0,0,0,0,3,16,8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,722,                    buf.append(c);,0,0,0,1,2,0,3,0,0,3,14,11,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,723,                    i++;,1,0,0,0,0,0,0,0,0,2,4,10,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,720,                char peek = pattern.charAt(i + 1);,2,1,0,1,2,0,2,0,0,5,34,9,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,721,                if (peek == c) {,2,1,0,1,3,0,0,0,0,3,16,8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,547,        mLocaleForced = (locale != null);,2,1,0,1,2,0,0,0,0,4,33,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,581,        String[] ERAs = symbols.getEras();,1,0,0,2,4,0,2,1,0,4,34,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,220,        return format;,1,0,0,0,0,0,0,0,0,1,14,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,735,                c = pattern.charAt(i);,1,0,0,1,2,0,3,0,0,5,22,8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,734,            for (; i < length; i++) {,3,1,0,1,3,0,0,0,0,5,25,6,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,539,        mPattern = pattern;,2,0,0,0,0,0,0,0,0,3,19,4,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,730,            buf.append('\'');,0,0,0,1,2,0,2,0,0,3,17,7,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,732,            boolean inLiteral = false;,1,0,0,0,0,0,0,0,0,2,26,7,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,2,3,0,1,3,0,0,0,0,5,39,4,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,88,"    public static final Fraction THREE_FIFTHS = new Fraction(3, 5);",1,0,0,1,2,3,0,2,0,6,63,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,60,"    public static final Fraction ONE_THIRD = new Fraction(1, 3);",1,0,0,1,2,3,0,2,0,6,60,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,126,        this.numerator = numerator;,2,0,0,0,0,0,0,0,0,3,27,4,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,127,        this.denominator = denominator;,2,0,0,0,0,0,0,0,0,3,31,4,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,64,"    public static final Fraction TWO_THIRDS = new Fraction(2, 3);",1,0,0,1,2,3,0,2,0,6,61,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,68,"    public static final Fraction ONE_QUARTER = new Fraction(1, 4);",1,0,0,1,2,3,0,2,0,6,62,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,107,    private transient int hashCode = 0;,1,0,0,0,0,2,0,0,0,3,35,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,80,"    public static final Fraction ONE_FIFTH = new Fraction(1, 5);",1,0,0,1,2,3,0,2,0,6,60,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,48,"    public static final Fraction ZERO = new Fraction(0, 1);",1,0,0,1,2,3,0,2,0,6,55,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,76,"    public static final Fraction THREE_QUARTERS = new Fraction(3, 4);",1,0,0,1,2,3,0,2,0,6,65,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,52,"    public static final Fraction ONE = new Fraction(1, 1);",1,0,0,1,2,3,0,2,0,6,54,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,56,"    public static final Fraction ONE_HALF = new Fraction(1, 2);",1,0,0,1,2,3,0,2,0,6,59,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,72,"    public static final Fraction TWO_QUARTERS = new Fraction(2, 4);",1,0,0,1,2,3,0,2,0,6,63,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,84,"    public static final Fraction TWO_FIFTHS = new Fraction(2, 5);",1,0,0,1,2,3,0,2,0,6,61,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,115,    private transient String toProperString = null;,1,0,0,0,0,2,0,1,0,4,47,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,111,    private transient String toString = null;,1,0,0,0,0,2,0,1,0,4,41,2,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,92,"    public static final Fraction FOUR_FIFTHS = new Fraction(4, 5);",1,0,0,1,2,3,0,2,0,6,62,2,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,        if (capacity > buffer.length) {,3,1,0,1,3,0,0,0,0,4,31,4,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,228,        if (capacity > buffer.length) {,3,1,0,1,3,0,0,0,0,4,31,4,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,182,        return size;,1,0,0,0,0,0,0,0,0,1,12,4,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,228,        if (capacity > buffer.length) {,3,1,0,1,3,0,0,0,0,4,31,4,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,182,        return size;,1,0,0,0,0,0,0,0,0,1,12,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,373,        HTML32.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,32,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,372,        HTML32 = new Entities();,1,0,0,1,2,0,0,1,0,3,24,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,374,        HTML32.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,3,0,0,3,36,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,53,    static final String[][] ISO8859_1_ARRAY = {,1,0,0,2,5,2,0,1,0,4,43,2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,379,        fillWithHtml40Entities(HTML40);,0,0,0,1,2,0,2,0,0,2,31,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,378,        HTML40 = new Entities();,1,0,0,1,2,0,0,1,0,3,24,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,133,        table = new Entry[initialCapacity];,1,0,1,1,2,0,0,1,0,4,35,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,132,        this.loadFactor = loadFactor;,2,0,0,0,0,0,0,0,0,3,29,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,134,        threshold = (int) (initialCapacity * loadFactor);,3,1,0,2,4,0,0,0,0,5,49,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,48,    private static final String[][] APOS_ARRAY = {,1,0,0,2,5,3,0,1,0,5,46,2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,41,    private static final String[][] BASIC_ARRAY = {,1,0,0,2,5,3,0,1,0,5,47,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,262,        Entry newMap[] = new Entry[newCapacity];,1,0,1,2,4,0,0,2,0,4,40,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,264,        threshold = (int) (newCapacity * loadFactor);,3,1,0,2,4,0,0,0,0,5,45,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,504,        private int LOOKUP_TABLE_SIZE = 256;,1,0,0,0,0,1,0,0,0,2,36,3,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,428,"            mapValueToName.put(value, name);",0,0,0,1,2,0,4,0,0,4,32,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,502,    static class LookupEntityMap extends PrimitiveEntityMap {,1,0,0,0,1,1,0,1,0,3,57,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,269,                Entry e = old;,2,0,0,0,0,0,0,1,0,3,14,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,268,            for (Entry old = oldMap[i]; old != null;) {,2,1,1,2,5,0,0,1,0,6,43,6,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,296,        Entry tab[] = table;,2,0,0,1,2,0,0,1,0,3,20,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,297,        int hash = key;,2,0,0,0,0,0,0,0,0,2,15,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,298,        int index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,0,0,0,0,6,45,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,299,        for (Entry e = tab[index]; e != null; e = e.next) {,5,1,1,2,5,0,0,1,0,10,51,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,693,    EntityMap map = new Entities.LookupEntityMap();,3,0,0,1,2,0,0,1,0,4,47,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,272,                int index = (e.hash & 0x7FFFFFFF) % newCapacity;,4,2,0,1,2,0,0,0,0,6,48,9,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,84,            this.hash = hash;,2,0,0,0,0,0,0,0,0,3,17,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,85,            this.key = key;,2,0,0,0,0,0,0,0,0,3,15,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,86,            this.value = value;,2,0,0,0,0,0,0,0,0,3,19,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,87,            this.next = next;,2,0,0,0,0,0,0,0,0,3,17,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",5,0,0,1,3,1,0,2,0,8,62,3,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,273,                e.next = newMap[index];,2,0,1,1,2,0,0,0,0,5,23,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,270,                old = old.next;,3,0,0,0,0,0,0,0,0,4,15,8,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,274,                newMap[index] = e;,1,0,1,1,2,0,0,0,0,4,18,8,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,388,        entities.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,34,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,389,        entities.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,3,0,0,3,38,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,261,        int newCapacity = oldCapacity * 2 + 1;,2,2,0,0,0,0,0,0,0,4,38,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,154,    static final String[][] HTML40_ARRAY = {,1,0,0,2,5,2,0,1,0,4,40,2,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,265,        table = newMap;,2,0,0,0,0,0,0,0,0,3,15,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,267,        for (int i = oldCapacity; i-- > 0;) {,3,1,0,1,3,0,0,0,0,5,37,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,427,"            mapNameToValue.put(name, new Integer(value));",1,0,0,2,4,0,3,1,0,5,45,6,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,125,        if (loadFactor <= 0) {,1,1,0,1,3,0,0,0,0,2,22,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,390,        entities.addEntities(HTML40_ARRAY);,0,0,0,1,2,0,3,0,0,3,35,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,421,        private IntHashMap mapValueToName = new IntHashMap();,1,0,0,1,2,1,0,2,0,4,53,3,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,420,        private Map mapNameToValue = new HashMap();,1,0,0,1,2,1,0,2,0,4,43,3,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,309,            rehash();,0,0,0,1,2,0,1,0,0,1,9,7,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,307,        if (count >= threshold) {,2,1,0,1,3,0,0,0,0,3,25,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,128,        if (initialCapacity == 0) {,1,1,0,1,3,0,0,0,0,2,27,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,300,            if (e.hash == hash) {,3,1,0,1,3,0,0,0,0,4,21,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,702,"            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));",0,0,1,6,12,0,3,0,0,7,66,7,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,701,        for (int i = 0; i < entityArray.length; ++i) {,5,1,0,1,3,0,0,0,0,7,46,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,258,        int oldCapacity = table.length;,3,0,0,0,0,0,0,0,0,3,31,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,259,        Entry oldMap[] = table;,2,0,0,1,2,0,0,1,0,3,23,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,39,class Entities {,1,0,0,0,1,0,0,0,0,1,16,1,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,318,        count++;,1,0,0,0,0,0,0,0,0,2,8,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,317,        tab[index] = e;,1,0,1,1,2,0,0,0,0,4,15,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,316,"        Entry e = new Entry(hash, key, value, tab[index]);",4,0,1,2,4,0,0,2,0,8,50,4,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,311,            tab = table;,2,0,0,0,0,0,0,0,0,3,12,6,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,312,            index = (hash & 0x7FFFFFFF) % tab.length;,4,2,0,1,2,0,0,0,0,7,41,6,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,366,        XML = new Entities();,1,0,0,1,2,0,0,1,0,3,21,4,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,367,        XML.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,3,0,0,3,29,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,368,        XML.addEntities(APOS_ARRAY);,0,0,0,1,2,0,3,0,0,3,28,5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,419,    static class PrimitiveEntityMap implements EntityMap {,1,0,0,0,1,1,0,1,0,3,54,2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,713,"        map.add(name, value);",0,0,0,1,2,0,4,0,0,4,21,5,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,122,        if (initialCapacity < 0) {,1,1,0,1,3,0,0,0,0,2,26,4,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,450,"    static final Object s = ""s"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,451,"    static final Object S = ""S"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,445,"    static final Object y = ""y"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,447,"    static final Object d = ""d"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,446,"    static final Object M = ""M"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,449,"    static final Object m = ""m"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,448,"    static final Object H = ""H"";",1,0,0,0,0,2,0,1,0,5,28,2,0,0
defect4j,time,org/joda/time/DurationFieldType,3,284,            switch (iOrdinal) {,1,0,0,1,3,0,0,0,0,1,19,5,0,0
defect4j,time,org/joda/time/DurationFieldType,3,282,            chronology = DateTimeUtils.getChronology(chronology);,1,0,0,1,2,0,3,0,0,5,53,5,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,321,            fields.copyFieldsFrom(iBase);,0,0,0,1,2,0,3,0,0,3,29,7,0,0
defect4j,time,org/joda/time/chrono/AssembledChronology,6,372,            flags = ,1,0,0,0,0,0,0,0,0,2,7,6,0,0
defect4j,time,org/joda/time/field/FieldUtils,16,84,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,4,5,0,3,7,0,0,0,0,9,45,4,0,0
defect4j,time,org/joda/time/field/FieldUtils,16,82,        long sum = val1 + val2;,3,1,0,0,0,0,0,0,0,4,23,5,0,0
defect4j,time,org/joda/time/field/FieldUtils,16,88,        return sum;,1,0,0,0,0,0,0,0,0,1,11,4,0,0
defect4j,time,org/joda/time/DurationFieldType,17,260,            iOrdinal = ordinal;,2,0,0,0,0,0,0,0,0,3,19,5,0,0
defect4j,time,org/joda/time/DurationFieldType,17,72,"    static final DurationFieldType DAYS_TYPE = new StandardDurationFieldType(""days"", DAYS);",2,0,0,1,2,2,0,2,0,7,87,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,74,"    static final DurationFieldType HALFDAYS_TYPE = new StandardDurationFieldType(""halfdays"", HALFDAYS);",2,0,0,1,2,2,0,2,0,7,99,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,66,"    static final DurationFieldType YEARS_TYPE = new StandardDurationFieldType(""years"", YEARS);",2,0,0,1,2,2,0,2,0,7,90,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,64,"    static final DurationFieldType WEEKYEARS_TYPE = new StandardDurationFieldType(""weekyears"", WEEKYEARS);",2,0,0,1,2,2,0,2,0,7,102,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,62,"    static final DurationFieldType CENTURIES_TYPE = new StandardDurationFieldType(""centuries"", CENTURIES);",2,0,0,1,2,2,0,2,0,7,102,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,60,"    static final DurationFieldType ERAS_TYPE = new StandardDurationFieldType(""eras"", ERAS);",2,0,0,1,2,2,0,2,0,7,87,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,68,"    static final DurationFieldType MONTHS_TYPE = new StandardDurationFieldType(""months"", MONTHS);",2,0,0,1,2,2,0,2,0,7,93,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,259,            super(name);,1,0,0,1,2,0,0,0,0,1,12,5,0,0
defect4j,time,org/joda/time/DurationFieldType,17,80,"    static final DurationFieldType SECONDS_TYPE = new StandardDurationFieldType(""seconds"", SECONDS);",2,0,0,1,2,2,0,2,0,7,96,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,95,        iName = name;,2,0,0,0,0,0,0,0,0,3,13,4,0,0
defect4j,time,org/joda/time/DurationFieldType,17,70,"    static final DurationFieldType WEEKS_TYPE = new StandardDurationFieldType(""weeks"", WEEKS);",2,0,0,1,2,2,0,2,0,7,90,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,82,"    static final DurationFieldType MILLIS_TYPE = new StandardDurationFieldType(""millis"", MILLIS);",2,0,0,1,2,2,0,2,0,7,93,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,76,"    static final DurationFieldType HOURS_TYPE = new StandardDurationFieldType(""hours"", HOURS);",2,0,0,1,2,2,0,2,0,7,90,2,0,0
defect4j,time,org/joda/time/DurationFieldType,17,78,"    static final DurationFieldType MINUTES_TYPE = new StandardDurationFieldType(""minutes"", MINUTES);",2,0,0,1,2,2,0,2,0,7,96,2,0,0